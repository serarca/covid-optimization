ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 76
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.43492680986667
best_error: 100.43492665459078
best_error: 100.43492663394792
best_error: 19.357542730211918
best_error: 19.357542730209055
best_error: 19.357542724265183
best_error: 19.354596876337002
best_error: 19.35459687036311
best_error: 19.342726774285417
best_error: 19.34272676819389
best_error: 19.291307432664475
best_error: 19.29130742575902
best_error: 18.963903071611014
best_error: 18.963903054957637
best_error: 18.949492858606593
best_error: 18.949492841259865
best_error: 18.379196796457897
best_error: 18.37919673609414
best_error: 14.578401171999996
best_error: 14.57840067118627
best_error: 12.411404258034224
best_error: 12.411403758463381
best_error: 11.712175750270056
best_error: 11.712175711458363
best_error: 11.688543191035382
best_error: 11.688543028699051
best_error: 11.687547154420642
best_error: 11.687547139900968
best_error: 11.687547137097129
best_error: 11.687032919514749
best_error: 11.687032905002853
best_error: 11.687032902194609
best_error: 11.686984441044984
best_error: 11.686984279247703
best_error: 11.686580442860421
best_error: 11.686580428352075
best_error: 11.686580425536551
best_error: 11.68551927902005
best_error: 11.685519264520412
best_error: 11.685519261688402
best_error: 11.681268472534017
best_error: 11.681268458038563
best_error: 11.681268455171224
best_error: 11.669176342783116
best_error: 11.669176304715892
best_error: 11.666676451826701
best_error: 11.666676413806488
best_error: 11.659402652032165
best_error: 11.659402637042982
best_error: 11.659402634371487
best_error: 11.637261457295851
best_error: 11.637261441819382
best_error: 11.637261439148734
best_error: 11.535601106460334
best_error: 11.535601089914955
best_error: 11.535601086224364
best_error: 11.526768365160962
best_error: 11.526768348588405
best_error: 11.526768344751126
best_error: 11.526455693234867
best_error: 11.526455676666345
best_error: 11.526455672827836
best_error: 11.525205792381492
best_error: 11.525205775829086
best_error: 11.52520577198562
best_error: 11.520270415418564
best_error: 11.520270399310762
best_error: 11.520270395066596
best_error: 11.501689599105806
best_error: 11.501689583795125
best_error: 11.501689578930314
best_error: 11.412393592007483
best_error: 11.412393581261679
best_error: 11.412393572808337
best_error: 11.400683161817907
best_error: 11.400683151707518
best_error: 11.400683142780732
best_error: 11.39645271192978
best_error: 11.396452702294148
best_error: 11.396452692955735
best_error: 11.395348273618637
best_error: 11.395348264000063
best_error: 11.395348254659156
best_error: 11.395207082297581
best_error: 11.395207072693356
best_error: 11.395207063339946
best_error: 11.39515997263021
best_error: 11.395159963026721
best_error: 11.395159953673197
best_error: 11.395128874014905
best_error: 11.39512886441186
best_error: 11.395128855058257
best_error: 11.395126549050085
best_error: 11.395126539447084
best_error: 11.395126530093467
best_error: 11.395125981921147
best_error: 11.395125759059503
best_error: 11.3895918848749
best_error: 11.389591875288517
best_error: 11.389591865898629
best_error: 11.367418483653504
best_error: 11.367418474181195
best_error: 11.36741846459785
best_error: 11.27845157238886
best_error: 11.278451562974347
best_error: 11.27845155300619
best_error: 11.148169661512085
best_error: 11.148169651708367
best_error: 11.148169651087969
best_error: 11.14816964162211
best_error: 11.148009412011005
best_error: 11.148009402207897
best_error: 11.148009401587565
best_error: 11.148009392120624
best_error: 11.14736836522
best_error: 11.147368355419344
best_error: 11.147368354799234
best_error: 11.147368345327987
best_error: 11.144803397007413
best_error: 11.144803387216543
best_error: 11.144803386597339
best_error: 11.144803377108861
best_error: 11.134533798300343
best_error: 11.134533788543283
best_error: 11.134533787927491
best_error: 11.134533778375584
best_error: 11.093302026576124
best_error: 11.093302017289027
best_error: 11.093302016709059
best_error: 11.093302006545073
best_error: 10.926423831889705
best_error: 10.926423822964805
best_error: 10.926423822416963
best_error: 10.92642381142333
best_error: 10.707890072088466
best_error: 10.707890062917068
best_error: 10.70788985396912
best_error: 10.70566103613847
best_error: 10.705661025794576
best_error: 10.705661014965607
best_error: 10.70511518522356
best_error: 10.705115174881485
best_error: 10.705115164050348
best_error: 10.704569298290771
best_error: 10.704569287950493
best_error: 10.70456927711716
best_error: 10.702385742627591
best_error: 10.702385732277609
best_error: 10.702385721452426
best_error: 10.69365091261303
best_error: 10.693650902283295
best_error: 10.693650891449822
best_error: 10.658738464474094
best_error: 10.658738454203421
best_error: 10.658738443358457
best_error: 10.591649409579233
best_error: 10.591649390371916
best_error: 10.55250476543248
best_error: 10.552504746458023
best_error: 10.522039796923156
best_error: 10.522039796071718
best_error: 10.52203974957222
best_error: 10.516103654266516
best_error: 10.516103607926262
best_error: 10.513996215254988
best_error: 10.513996169201032
best_error: 10.51323615346665
best_error: 10.513236114394989
best_error: 10.512169292251711
best_error: 10.512169257916959
best_error: 10.512153603327494
best_error: 10.512153568991137
best_error: 10.512141720940384
best_error: 10.512141686602803
best_error: 10.512096726545483
best_error: 10.512096692205244
best_error: 10.512058258669086
best_error: 10.512058224326568
best_error: 10.512049564239996
best_error: 10.512049545865306
best_error: 10.512045368310929
best_error: 10.512045333967652
best_error: 10.512043449620373
best_error: 10.512043415276985
best_error: 10.512043001397407
best_error: 10.512042967053993
best_error: 10.512042822501583
best_error: 10.512042788158157
best_error: 10.512042674362839
best_error: 10.512042640019404
best_error: 10.512042604907773
best_error: 10.512042570564333
best_error: 10.512042513248602
best_error: 10.512042478905158
best_error: 10.512042459006555
best_error: 10.512042454230379
best_error: 10.512042451772425
best_error: 10.51204245086602
best_error: 10.51204244947684
best_error: 10.512042447484621
best_error: 10.512042446578214
best_error: 10.512042445189039
best_error: 10.512042445157327
best_error: 10.512042444688014
best_error: 10.512042444333877
best_error: 10.512042444292476
