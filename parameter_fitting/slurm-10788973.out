ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.136468260884573
best_error: 8.136468182731612
best_error: 7.8319002522506285
best_error: 7.831900146579347
best_error: 7.005828299148755
best_error: 7.0058282733643
best_error: 7.005828131646847
best_error: 6.660181823984525
best_error: 6.660181777143423
best_error: 6.660181643611355
best_error: 6.657544734974357
best_error: 6.65754465342628
best_error: 6.492502285534768
best_error: 6.492502201089675
best_error: 6.3407101442707425
best_error: 6.3407100569160635
best_error: 6.016792720981148
best_error: 6.016792625675926
best_error: 5.992789581931259
best_error: 5.992789484545169
best_error: 5.94334942070822
best_error: 5.943349326176007
best_error: 5.940747458374776
best_error: 5.940747360884636
best_error: 5.924957127762105
best_error: 5.9249570336169555
best_error: 5.922270341026003
best_error: 5.922270243458532
best_error: 4.473741614044141
best_error: 4.473741585612531
best_error: 4.473741439902584
best_error: 4.102481573268076
best_error: 4.102481096753532
best_error: 3.5675591576960435
best_error: 3.5675588674740792
best_error: 3.386256826324757
best_error: 3.3862565675575373
best_error: 3.311902007198789
best_error: 3.311901764837926
best_error: 3.272475024986929
best_error: 3.272474782894611
best_error: 3.2590719533689914
best_error: 3.25907170938528
best_error: 3.250649326046605
best_error: 3.2506490816373486
best_error: 3.246231550749465
best_error: 3.2462313074856155
best_error: 3.2436845213404255
best_error: 3.243684277718507
best_error: 3.2419602034023276
best_error: 3.241959959538163
best_error: 3.2410838130878306
best_error: 3.2410835691005193
best_error: 3.2404264810265175
best_error: 3.2404262369468526
best_error: 3.240162058660837
best_error: 3.2401619833554722
best_error: 3.2180448996137576
best_error: 3.218044637847947
best_error: 3.1675787710156422
best_error: 3.167578705590736
best_error: 3.1632399179286126
best_error: 3.1632398534818087
best_error: 3.156413950420525
best_error: 3.156413886109618
best_error: 3.1406572467018905
best_error: 3.1406571827571494
best_error: 3.1164340424455688
best_error: 3.1164339772666807
best_error: 3.068639932702764
best_error: 3.0686398642388877
best_error: 3.063275712741642
best_error: 3.063275641740506
best_error: 3.0457463587599696
best_error: 3.0457462848704804
best_error: 3.042007352810514
best_error: 3.042007079109153
best_error: 2.9877856066418422
best_error: 2.9877855358059557
best_error: 2.952533623336027
best_error: 2.9525335619395694
best_error: 2.943406260724836
best_error: 2.943406200888915
best_error: 2.9359703752642865
best_error: 2.9359703158790893
best_error: 2.9322391452272156
best_error: 2.932239086231438
best_error: 2.930489635664654
best_error: 2.9304895768011328
best_error: 2.929584699453595
best_error: 2.929584640504363
best_error: 2.929090770606215
best_error: 2.9290907116115443
best_error: 2.9288339099933376
best_error: 2.9288338509753844
best_error: 2.9286433936021474
best_error: 2.928643334567149
best_error: 2.9286093894487935
best_error: 2.928609037707361
best_error: 2.9286017733860334
best_error: 2.928601714347301
best_error: 2.9285439646097418
best_error: 2.9285439055658555
best_error: 2.928537990901229
best_error: 2.9285379318568134
best_error: 2.9285340216820694
best_error: 2.9285339626373412
best_error: 2.928532719435662
best_error: 2.9285326603907813
best_error: 2.9285317793638383
best_error: 2.928531720318838
best_error: 2.928531697963898
best_error: 2.928531697939489
best_error: 2.915950984085635
best_error: 2.9159509257766856
best_error: 2.87604464358621
best_error: 2.876044589904944
best_error: 2.8731837576148234
best_error: 2.8731833647826894
best_error: 2.873136904161644
best_error: 2.873136850607214
best_error: 2.872910005141398
best_error: 2.872909612275273
best_error: 2.872732874574842
best_error: 2.872732481686738
best_error: 2.872687184599377
best_error: 2.8726867917056067
best_error: 2.8726812470185035
best_error: 2.872681193467868
best_error: 2.8726694218892903
best_error: 2.8726690289931076
best_error: 2.8726648542311217
best_error: 2.872664800680597
best_error: 2.8726647934448
