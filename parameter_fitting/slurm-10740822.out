ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.46206618857856
best_error: 10.462066182409023
best_error: 8.369798905221904
best_error: 8.369797944920174
best_error: 5.858914943125366
best_error: 5.858914526989839
best_error: 5.222289713463551
best_error: 5.222289713463505
best_error: 5.222289706934596
best_error: 5.22078201871933
best_error: 5.2207819369531565
best_error: 5.202767074604976
best_error: 5.2027670369991235
best_error: 5.193599312786929
best_error: 5.193599300427093
best_error: 5.1890640531410614
best_error: 5.1890640531410215
best_error: 5.189064044973836
best_error: 5.186052716234974
best_error: 5.186052716234933
best_error: 5.186052708065217
best_error: 5.18146089156679
best_error: 5.181460891566753
best_error: 5.181460885766779
best_error: 5.169778852987216
best_error: 5.169778823415019
best_error: 5.051495874883144
best_error: 5.051495874883098
best_error: 5.051495861912398
best_error: 4.983767036925977
best_error: 4.98376703692592
best_error: 4.902902026766139
best_error: 4.902902026766073
best_error: 4.758149255281742
best_error: 4.758149212821032
best_error: 4.75814920507874
best_error: 4.356288194142618
best_error: 4.356288194142504
best_error: 4.356288160802668
best_error: 4.2701952094466105
best_error: 4.270195209446487
best_error: 4.22128787897862
best_error: 4.2212878789785195
best_error: 4.1558603652061645
best_error: 4.155860365206068
best_error: 4.155860355115647
best_error: 4.1498616005520965
best_error: 4.149861600552011
best_error: 4.149861599514723
best_error: 4.149240590560876
best_error: 4.1492405905607885
best_error: 4.149240589509744
best_error: 4.148932065471979
best_error: 4.148932065471893
best_error: 4.14893206441911
best_error: 4.148663629603783
best_error: 4.148663629603697
best_error: 4.1486636285482525
best_error: 4.148533184159313
best_error: 4.148533184159228
best_error: 4.148533183102936
best_error: 4.148429239466421
best_error: 4.148429239466333
best_error: 4.148429238409923
best_error: 4.148419485728393
best_error: 4.148419485728306
best_error: 4.148419484672007
best_error: 4.1484191725198345
best_error: 4.148419161650806
best_error: 4.1484182976601325
best_error: 4.148418297660044
best_error: 4.1484182966037375
best_error: 4.148417995168973
best_error: 4.148417995168887
best_error: 4.14841799411258
best_error: 4.148417983983948
best_error: 4.148417974180666
best_error: 4.148405739487118
best_error: 4.148405728905839
best_error: 4.148264749153313
best_error: 4.148264738446848
best_error: 4.1476829584027515
best_error: 4.147682947207986
best_error: 4.145050930415841
best_error: 4.145050917297682
best_error: 4.128245924197985
best_error: 4.128245923003653
best_error: 4.128245916764864
best_error: 4.097750286176972
best_error: 4.097750286176925
best_error: 4.0977502818099865
best_error: 4.091566376201995
best_error: 4.091566376201954
best_error: 4.09025424247891
best_error: 4.090254242478874
best_error: 4.048035028754129
best_error: 4.04803502875412
best_error: 3.853390137367879
best_error: 3.8533901332083142
best_error: 3.8533901001451305
best_error: 3.852702015270103
best_error: 3.852701953885076
best_error: 3.8499446487302795
best_error: 3.849944627854253
best_error: 3.8499446136577418
best_error: 3.8436660179022732
best_error: 3.843666009071591
best_error: 3.84279543340948
best_error: 3.842795432536663
best_error: 3.8423476292574326
best_error: 3.842316415628448
best_error: 3.8423065625421664
best_error: 3.8423016361846836
best_error: 3.8422976971267064
best_error: 3.842297697084534
best_error: 3.842296794552963
best_error: 3.842296794431763
best_error: 3.8422956621339783
best_error: 3.8422956619287105
best_error: 3.8422948341811787
best_error: 3.8422948339756045
best_error: 3.842294079926349
best_error: 3.84229407967631
best_error: 3.8422929528787018
best_error: 3.8422929526244434
best_error: 3.8422925786649658
best_error: 3.842292578393527
best_error: 3.8422906405718806
best_error: 3.842290640290953
best_error: 3.8422906168507325
best_error: 3.8422906165697963
best_error: 3.842290616067745
best_error: 3.842290615786809
best_error: 3.8422906155177747
best_error: 3.8422906152368377
best_error: 3.8422906150247447
best_error: 3.842290614743808
best_error: 3.8422906146976645
best_error: 3.8422906144167297
best_error: 3.8422906144162825
best_error: 3.842290614135344
best_error: 3.842290613073836
best_error: 3.8422906128694745
best_error: 3.842290612853314
best_error: 3.842290612617271
