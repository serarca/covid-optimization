ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.84291129928306
best_error: 10.842911128150561
best_error: 9.380084516864791
best_error: 9.380084246785911
best_error: 8.786843935094932
best_error: 8.786843658106683
best_error: 8.35649909941786
best_error: 8.356498856342549
best_error: 7.507198899712193
best_error: 7.5071986914445725
best_error: 7.113580469116439
best_error: 7.113580297349177
best_error: 6.766633538949708
best_error: 6.766633386371742
best_error: 6.652120227206424
best_error: 6.652120072586629
best_error: 6.5133349554871
best_error: 6.513334735540299
best_error: 5.953832434162006
best_error: 5.953831676396794
best_error: 5.2004622201417
best_error: 5.200461832444793
best_error: 5.156209485355388
best_error: 5.156209085012947
best_error: 5.032354757275615
best_error: 5.032354305652246
best_error: 4.747502017478611
best_error: 4.7475014384477445
best_error: 4.722683202128767
best_error: 4.722682619710479
best_error: 4.708488987956156
best_error: 4.708488396630006
best_error: 4.7057368701136255
best_error: 4.705736736535188
best_error: 4.70522652260008
best_error: 4.705225953207181
best_error: 4.685237967344302
best_error: 4.685237429096352
best_error: 4.6838600637062635
best_error: 4.683859565808351
best_error: 4.683508140137964
best_error: 4.683507975620884
best_error: 4.678159223988496
best_error: 4.678159079990687
best_error: 4.662964372860527
best_error: 4.662963834182723
best_error: 4.641971420073654
best_error: 4.6419709556714785
best_error: 4.604761284134926
best_error: 4.604761110267916
best_error: 4.597090382989885
best_error: 4.597090207386643
best_error: 4.594076027310972
best_error: 4.594075861738872
best_error: 4.590980051758274
best_error: 4.590979880742674
best_error: 4.5851970420717185
best_error: 4.585196870612485
best_error: 4.565769178886751
best_error: 4.565769008219752
best_error: 4.551303843230278
best_error: 4.5513036825212945
best_error: 4.532809690250765
best_error: 4.532809527340017
best_error: 4.509490945130313
best_error: 4.50949079156365
best_error: 4.424388867272945
best_error: 4.4243882790747815
best_error: 4.3746837870699
best_error: 4.374683632377696
best_error: 4.333866385537254
best_error: 4.333865820447116
best_error: 4.304834967365031
best_error: 4.304834821425833
best_error: 4.300863875631966
best_error: 4.300863289463793
best_error: 4.2568938334778
best_error: 4.256893693212412
best_error: 4.240483292717968
best_error: 4.240482701635511
best_error: 4.168571690941533
best_error: 4.168571544023579
best_error: 4.1177114698406925
best_error: 4.117710950082222
best_error: 4.060805466577143
best_error: 4.060805037684537
best_error: 4.058295277498404
best_error: 4.058294785965358
best_error: 4.050682961971805
best_error: 4.05068247238224
best_error: 4.047698483742177
best_error: 4.047697994003399
best_error: 4.04634641369713
best_error: 4.04634592389115
best_error: 4.045710712023993
best_error: 4.04571022313644
best_error: 4.045665025911059
best_error: 4.045664896812523
best_error: 4.031720585260856
best_error: 4.03172012685857
best_error: 4.0210812224781405
best_error: 4.021080785320541
best_error: 4.020361790046589
best_error: 4.020361352839123
best_error: 4.01993702975206
best_error: 4.019936592515172
best_error: 4.019689962811943
best_error: 4.0196895260495715
best_error: 4.0195480572924565
best_error: 4.019547620520092
best_error: 4.019464065408581
best_error: 4.019463628630306
best_error: 4.019414434979935
best_error: 4.019413998198166
best_error: 4.01938517663841
best_error: 4.0193847398545675
best_error: 4.019367982602635
best_error: 4.0193675458175955
best_error: 4.019338781057085
best_error: 4.019338344268409
best_error: 4.0193383090266295
best_error: 4.01933828825408
best_error: 4.015103250941151
best_error: 4.015102814157027
best_error: 4.00825699318509
best_error: 4.00825655520512
best_error: 3.9975188193241307
best_error: 3.9975183786948847
best_error: 3.9917445795888282
best_error: 3.991744137349113
best_error: 3.990192145556633
best_error: 3.990191702884875
best_error: 3.9897461489429427
best_error: 3.9897457061471515
best_error: 3.9894545291459345
best_error: 3.989454086269078
best_error: 3.988753884066326
best_error: 3.988753440909293
best_error: 3.988377772497078
best_error: 3.9883773291895563
best_error: 3.9881762538969703
best_error: 3.9881758118912227
best_error: 3.9880691070131347
best_error: 3.9880686649644526
best_error: 3.988012408291722
best_error: 3.9880119662203244
best_error: 3.988011532579131
best_error: 3.9880111781682253
best_error: 3.988010805885801
best_error: 3.9880107692244104
best_error: 3.98801032715276
best_error: 3.9880103114332295
best_error: 3.9880098693615107
