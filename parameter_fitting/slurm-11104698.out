ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.40716946550445
best_error: 100.4071693586721
best_error: 100.40716932352598
best_error: 15.54475239703126
best_error: 15.54475239701305
best_error: 15.544752376719446
best_error: 15.470983198808854
best_error: 15.470983198784861
best_error: 15.470983176249897
best_error: 15.060656178460686
best_error: 15.06065617834878
best_error: 15.060656138706754
best_error: 14.03509306294445
best_error: 14.035093062143709
best_error: 14.03509295747578
best_error: 13.01506638320101
best_error: 13.015066381432739
best_error: 13.015066381119842
best_error: 13.015066380820935
best_error: 13.015066379754778
best_error: 12.963762799796237
best_error: 12.963762772251526
best_error: 12.590833532670874
best_error: 12.590833524357723
best_error: 12.590833522761736
best_error: 12.557073771158302
best_error: 12.557073758035223
best_error: 12.536172587339113
best_error: 12.536172574608694
best_error: 12.514405087533596
best_error: 12.51440507234513
best_error: 12.218920412356653
best_error: 12.21892039471851
best_error: 12.218920394178987
best_error: 12.034749143368998
best_error: 12.034749126271983
best_error: 12.03403771101953
best_error: 12.034037693875753
best_error: 12.021999392069429
best_error: 12.021999374216897
best_error: 12.008469026412094
best_error: 12.008469007939684
best_error: 12.001799856692589
best_error: 12.001799838488447
best_error: 11.988294654930213
best_error: 11.988294637648035
best_error: 11.956742844344884
best_error: 11.956742827541014
best_error: 11.929005837185471
best_error: 11.929005819460176
best_error: 11.90845922058118
best_error: 11.908459205271017
best_error: 11.908459203328713
best_error: 11.464130422187504
best_error: 11.464130417676037
best_error: 11.464130404755856
best_error: 10.813682825727927
best_error: 10.813682820368408
best_error: 10.813682799632263
best_error: 10.722947214513294
best_error: 10.722947211048186
best_error: 10.72294718951272
best_error: 10.487656739170633
best_error: 10.487656739170326
best_error: 10.487656733203504
best_error: 10.487656719385608
best_error: 10.209008282690457
best_error: 10.209008251314614
best_error: 9.73018362415869
best_error: 9.730183618346013
best_error: 9.730183615634097
best_error: 9.73018360781567
best_error: 9.043593717509093
best_error: 9.043593646226944
best_error: 8.920565434208129
best_error: 8.920565392180826
best_error: 8.726419165882046
best_error: 8.726419127684254
best_error: 8.620693003588382
best_error: 8.620692361977783
best_error: 8.42160899255138
best_error: 8.421608963361125
best_error: 8.306243046890255
best_error: 8.306242710037205
best_error: 7.698135353595241
best_error: 7.6981350769664765
best_error: 7.567667707213946
best_error: 7.567667495441225
best_error: 7.559670273638149
best_error: 7.559670068125797
best_error: 7.559518220878302
best_error: 7.559518015389377
best_error: 7.558963963311111
best_error: 7.558963759290908
best_error: 7.558380802164478
best_error: 7.558380600233632
best_error: 7.533789359456231
best_error: 7.533789266632775
best_error: 7.529571593969175
best_error: 7.52957150471874
best_error: 7.527268591216529
best_error: 7.527268504218563
best_error: 7.526269666706144
best_error: 7.526269630864641
best_error: 7.525696219359647
best_error: 7.525696133249335
best_error: 7.523723062151809
best_error: 7.523722979121627
best_error: 7.522613789805897
best_error: 7.522613764460646
best_error: 7.513282960493582
best_error: 7.513282937207058
best_error: 7.490244336745018
best_error: 7.490244243229703
best_error: 7.426817114503543
best_error: 7.426817000748489
best_error: 7.2902147554939605
best_error: 7.290214707006219
best_error: 6.796274994724207
best_error: 6.796274914408883
best_error: 6.75174975280564
best_error: 6.751749625899576
best_error: 6.742349618214113
best_error: 6.742349613475375
best_error: 6.724366600163126
best_error: 6.724366595462307
best_error: 6.7110473547822345
best_error: 6.711047282026576
best_error: 6.673841932301163
best_error: 6.673841865738964
best_error: 6.624149949104976
best_error: 6.624149804391811
best_error: 6.621184887126957
best_error: 6.621184793104345
best_error: 6.576215179023658
best_error: 6.576215110582204
best_error: 6.566506841728923
best_error: 6.566506232346192
best_error: 6.514892049733265
best_error: 6.514891522721882
best_error: 6.497994720302332
best_error: 6.49799470340214
best_error: 6.483015762608149
best_error: 6.483015684263395
best_error: 6.473410236096151
best_error: 6.473409767300212
best_error: 6.441947777083741
best_error: 6.4419477736148
best_error: 6.438037755039575
best_error: 6.438037274356621
best_error: 6.407475124853345
best_error: 6.407474741911279
best_error: 6.382023420399332
best_error: 6.382023160018351
best_error: 6.361305890397734
best_error: 6.3613056469467395
best_error: 6.35618261941754
best_error: 6.3561825636960005
best_error: 6.341628560353842
best_error: 6.341628518044813
best_error: 6.260245384446101
best_error: 6.260245042524517
best_error: 6.256270037127732
best_error: 6.2562698934107015
best_error: 6.24032856222724
best_error: 6.240328537718087
best_error: 6.22824885513195
best_error: 6.228248716691826
best_error: 6.219354433514147
best_error: 6.219354294799759
best_error: 6.186883750114703
best_error: 6.186883194666887
best_error: 6.168164580875345
best_error: 6.168164565194219
