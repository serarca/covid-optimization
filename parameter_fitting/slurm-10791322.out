ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.62597148820991
best_error: 11.625971480956068
best_error: 11.624203594931533
best_error: 11.624203587512639
best_error: 7.713868609807109
best_error: 7.713868056736655
best_error: 6.752965624146978
best_error: 6.752965092021869
best_error: 6.367780553601182
best_error: 6.367780533457919
best_error: 6.34318613093474
best_error: 6.3431861199382364
best_error: 6.336865430507218
best_error: 6.3368654141183
best_error: 6.335570591574667
best_error: 6.335570575701499
best_error: 6.335484503739229
best_error: 6.335484494495273
best_error: 6.332941714634638
best_error: 6.332941698795336
best_error: 6.318095101934523
best_error: 6.318095086188877
best_error: 6.256924273868473
best_error: 6.256924264388442
best_error: 6.256924259825345
best_error: 5.992004883572159
best_error: 5.9920046501084325
best_error: 5.111743323691679
best_error: 5.111743224175558
best_error: 5.110522168037932
best_error: 5.110522069733787
best_error: 5.10572988580961
best_error: 5.105729792206802
best_error: 5.0883227043034935
best_error: 5.088322627093139
best_error: 5.088109526327166
best_error: 5.08810952618124
best_error: 5.088109525870092
best_error: 5.0868505541992395
best_error: 5.086850554053598
best_error: 5.086850553744211
best_error: 5.081847163211089
best_error: 5.081847163065983
best_error: 5.081847162756937
best_error: 5.062332863647194
best_error: 5.062332846020032
best_error: 4.988280499829745
best_error: 4.9882804720599285
best_error: 4.906101409845769
best_error: 4.906101400605571
best_error: 4.903857275060904
best_error: 4.903857260216455
best_error: 4.900042973294594
best_error: 4.900042956032671
best_error: 4.866375253674314
best_error: 4.866375214060595
best_error: 4.849885647069517
best_error: 4.849885546407807
best_error: 4.823747379772522
best_error: 4.8237472949657105
best_error: 4.786022337657149
best_error: 4.78602223403159
best_error: 4.749928005084099
best_error: 4.749927903703311
best_error: 4.643898915351633
best_error: 4.643898769455053
best_error: 4.518760079230663
best_error: 4.518760043362697
best_error: 4.518760012798486
best_error: 4.4983569453101
best_error: 4.49835666461429
best_error: 4.418723834143146
best_error: 4.418723678872139
best_error: 4.404369923658815
best_error: 4.4043698695592495
best_error: 4.397180962808334
best_error: 4.397180962006873
best_error: 4.3971809432949565
best_error: 4.391753524800433
best_error: 4.391753500615482
best_error: 4.386618684015052
best_error: 4.386618662505777
best_error: 4.381531601008616
best_error: 4.381531579319442
best_error: 4.350259982819244
best_error: 4.350259912445066
best_error: 4.34995536239724
best_error: 4.349955221450952
best_error: 4.329998050301514
best_error: 4.3299980399716755
best_error: 4.31784935215457
best_error: 4.3178493449753725
best_error: 4.314771241632121
best_error: 4.314771208618948
best_error: 4.310927580462222
best_error: 4.310927561864216
best_error: 4.307002250879917
best_error: 4.307002226593696
best_error: 4.305565049207592
best_error: 4.305565024161692
best_error: 4.305519275934711
best_error: 4.305519254875295
best_error: 4.305294854599924
best_error: 4.305294832383017
best_error: 4.305206543599601
best_error: 4.305206521997862
best_error: 4.304981475217794
best_error: 4.304981453705206
best_error: 4.304904541376166
best_error: 4.304904519974063
best_error: 4.304867513106339
best_error: 4.304867491668274
best_error: 4.3048539806019654
best_error: 4.3048539591507815
best_error: 4.304847665421306
best_error: 4.304847643964009
best_error: 4.304841642296285
best_error: 4.304841620931173
best_error: 4.304837757020046
best_error: 4.304837735554112
best_error: 4.304835614294846
best_error: 4.304835592826913
best_error: 4.30483383380002
best_error: 4.304833812330427
best_error: 4.304832561228641
best_error: 4.304832539757864
best_error: 4.304831590463512
best_error: 4.30483156899183
best_error: 4.304830517675171
best_error: 4.304830496202492
best_error: 4.304829917139356
best_error: 4.304829895666118
best_error: 4.304828912610999
best_error: 4.3048288911368235
best_error: 4.304828646491081
best_error: 4.3048286250167465
best_error: 4.3048284181295005
best_error: 4.304828396655029
best_error: 4.304828298756462
best_error: 4.304828277281915
best_error: 4.304828196316012
best_error: 4.304828174841409
best_error: 4.304828142781384
best_error: 4.304828121306749
best_error: 4.304828096836088
best_error: 4.3048280753614225
best_error: 4.304828072837233
best_error: 4.30482805136255
best_error: 4.304828030762063
best_error: 4.30482802001131
best_error: 4.304828018974652
best_error: 4.304828018781747
best_error: 4.304828014145808
best_error: 4.3048280135056665
best_error: 4.304828013312774
best_error: 4.304828012530082
best_error: 4.304828012337185
best_error: 4.304828012132143
best_error: 4.304828011939236
best_error: 4.3048280118185
best_error: 4.304828011625604
