ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.429515886959024
best_error: 22.429515882867786
best_error: 22.42951586934757
best_error: 22.42951583147055
best_error: 4.588865613080465
best_error: 4.588865612769209
best_error: 4.588865611407553
best_error: 4.578486995825245
best_error: 4.5784869954884
best_error: 4.57848699412696
best_error: 4.532834198024374
best_error: 4.532834197559738
best_error: 4.53283419621054
best_error: 4.207446823453155
best_error: 4.207446819734458
best_error: 3.826009095310709
best_error: 3.8260090664119755
best_error: 2.0823578317674576
best_error: 2.082357577702491
best_error: 1.9299353915683148
best_error: 1.9299352557297949
best_error: 1.6345653974185652
best_error: 1.6345653229920436
best_error: 1.6014246982943052
best_error: 1.6014246640008905
best_error: 1.5956244681297225
best_error: 1.5956244515868072
best_error: 1.5938433714179474
best_error: 1.5938433621368113
best_error: 1.5934903094627852
best_error: 1.5934903083965437
best_error: 1.5934903082089809
best_error: 1.593019998112175
best_error: 1.5930199979699697
best_error: 1.5930199974027965
best_error: 1.5930199966567067
best_error: 1.5887434791172281
best_error: 1.588743465953184
best_error: 1.5793230090746129
best_error: 1.5793229784206115
best_error: 1.5548164880649256
best_error: 1.55481645211685
best_error: 1.5331478528063907
best_error: 1.5331478245321009
best_error: 1.5240208988513522
best_error: 1.5240208847656036
best_error: 1.5180812896063003
best_error: 1.5180812491185334
best_error: 1.4958589213750253
best_error: 1.4958588803908064
best_error: 1.4264467477792353
best_error: 1.4264467084898962
best_error: 1.4252949693143415
best_error: 1.4252947293313922
best_error: 1.3678427584184063
best_error: 1.3678426445451337
best_error: 1.3608815990501926
best_error: 1.360881598792448
best_error: 1.3608815986824274
best_error: 1.360881595414002
best_error: 1.3589737269439102
best_error: 1.3589737266175492
best_error: 1.3589737265201705
best_error: 1.35897372376956
best_error: 1.3579762821216057
best_error: 1.3579762818449834
best_error: 1.3579762817050263
best_error: 1.3579762778559619
best_error: 1.3548412660277085
best_error: 1.3548412292709435
best_error: 1.3515278156528487
best_error: 1.351527811668113
best_error: 1.3457702403918117
best_error: 1.3457702276988224
best_error: 1.318378365191828
best_error: 1.3183783260682729
best_error: 1.2467186873705993
best_error: 1.246718664714888
best_error: 1.2226313333006413
best_error: 1.2226313307052248
best_error: 1.2226313256051762
best_error: 1.1511236872701218
best_error: 1.1511236732346435
best_error: 1.15111357820859
best_error: 1.1511135641737156
best_error: 1.1126299781945894
best_error: 1.1126299595203317
best_error: 1.1126258482412124
best_error: 1.1126258295674818
best_error: 1.1020612972317716
best_error: 1.1020612650886243
best_error: 1.0713967049713937
best_error: 1.0713966601201346
best_error: 1.0530994605868724
best_error: 1.0530994369675244
best_error: 1.028543422770623
best_error: 1.0285433807926545
best_error: 1.018251754767461
best_error: 1.0182517249956604
best_error: 1.0105100126478603
best_error: 1.0105100121135955
best_error: 1.0105100119527055
best_error: 1.0105100076762525
best_error: 1.0105100061617016
best_error: 0.9952797453086696
best_error: 0.9952796893581788
best_error: 0.9913884236848982
best_error: 0.9913884052723784
best_error: 0.9908348494688742
best_error: 0.9908348474549722
best_error: 0.9908348473905748
best_error: 0.9904210828753262
best_error: 0.9904210798738107
best_error: 0.9904210767226214
best_error: 0.9900828157097066
best_error: 0.9900828101635536
best_error: 0.9900828094079863
best_error: 0.9893973518759555
best_error: 0.9893973410779918
best_error: 0.9885722452249693
best_error: 0.9885722288768758
best_error: 0.987464672102017
best_error: 0.9874646521371305
best_error: 0.9838675908514156
best_error: 0.9838675609690108
best_error: 0.9762407753056983
best_error: 0.976240760425901
best_error: 0.9573130874304634
best_error: 0.9573130594064003
best_error: 0.9573129984752754
best_error: 0.8911957798545583
best_error: 0.891195740863412
best_error: 0.891195727849653
best_error: 0.884714032974721
best_error: 0.884714030743677
best_error: 0.8847139064433894
best_error: 0.8847138563777883
best_error: 0.8820657360279486
best_error: 0.882065730249202
best_error: 0.8820656223404231
best_error: 0.8820655885092168
best_error: 0.8748950489611726
best_error: 0.8748949976179132
best_error: 0.8699566505261654
best_error: 0.8699566050834047
best_error: 0.8437600225158794
best_error: 0.8437599821462382
best_error: 0.834372418012203
best_error: 0.8343723723120323
best_error: 0.834372311254787
best_error: 0.8319833893880488
best_error: 0.8319833628099066
best_error: 0.8293941557927828
best_error: 0.8293941473240097
best_error: 0.8272450693893042
best_error: 0.8272450493708162
best_error: 0.8214724796393087
best_error: 0.8214724446752076
best_error: 0.8004366572051457
best_error: 0.8004365818114192
best_error: 0.790462412861341
best_error: 0.7904623519059243
best_error: 0.7846238876426311
best_error: 0.7846238855032529
best_error: 0.7846238836941047
best_error: 0.7841422942668236
best_error: 0.7841422928062918
best_error: 0.7841422908085401
best_error: 0.7841422878570796
best_error: 0.7824550596023825
best_error: 0.782455051153503
best_error: 0.7820040855927004
best_error: 0.7820040646503906
best_error: 0.7813939812158697
best_error: 0.7813939777012077
best_error: 0.7813939761147058
best_error: 0.7808506490071901
best_error: 0.780850636785766
best_error: 0.7798245693035714
best_error: 0.7798245561284962
best_error: 0.7723311787889235
best_error: 0.7723311629587986
best_error: 0.7683685399220685
best_error: 0.7683685373411646
best_error: 0.768368511442537
best_error: 0.765072022780535
best_error: 0.7650719292441446
best_error: 0.7533839673375031
best_error: 0.7533839152180758
best_error: 0.7439105498912245
best_error: 0.7439105198573656
best_error: 0.7390473358069279
best_error: 0.7390473041755631
best_error: 0.7290518968549048
best_error: 0.7290518800609226
best_error: 0.7270982380026352
best_error: 0.7270982322352575
best_error: 0.7269398374473603
best_error: 0.7269398255391541
best_error: 0.7267686226932862
best_error: 0.7267686202078188
best_error: 0.7267328459153676
best_error: 0.7267328444427005
best_error: 0.726699861687676
best_error: 0.726699861026937
best_error: 0.7266998604942349
best_error: 0.7266525362084281
best_error: 0.7266525359260635
best_error: 0.726652535838623
best_error: 0.7266525357566
best_error: 0.7266525350171977
best_error: 0.7265467411080005
best_error: 0.726546740753877
best_error: 0.7265467406553254
best_error: 0.7265467399406015
best_error: 0.7262855180502018
best_error: 0.7262855177277152
best_error: 0.7262855176224902
best_error: 0.726285516892396
best_error: 0.7260839560412576
best_error: 0.7260839556924372
best_error: 0.7260839556657295
best_error: 0.7260839548062461
best_error: 0.7257347625399639
best_error: 0.7257347569158091
best_error: 0.7256034952406368
best_error: 0.7256034948780574
best_error: 0.7256034938347651
best_error: 0.7255328042129204
best_error: 0.7255328041842708
best_error: 0.7255328038276394
best_error: 0.7255328027923804
best_error: 0.7252231081953382
best_error: 0.7252230864765667
best_error: 0.7246854764206444
best_error: 0.7246854760160873
best_error: 0.7246854751216364
best_error: 0.7246854746841678
best_error: 0.7238120990099505
best_error: 0.723812094879226
best_error: 0.7174457869821427
best_error: 0.7174457745655587
best_error: 0.710590686731675
best_error: 0.7105906626894057
best_error: 0.7056663516636439
best_error: 0.7056662998561722
best_error: 0.6988329208805412
best_error: 0.6988328024506746
best_error: 0.6946574938179664
best_error: 0.6946574509452184
best_error: 0.6939175157942805
best_error: 0.6939174772786827
best_error: 0.6917390774127894
best_error: 0.6917390564429212
best_error: 0.6912205083032609
best_error: 0.6912205065667749
best_error: 0.6912205024275216
best_error: 0.6909197588908702
best_error: 0.6909197469004605
best_error: 0.6907866656260654
best_error: 0.6907866480852445
best_error: 0.6905276614962186
best_error: 0.690527650733408
best_error: 0.6905238231869366
best_error: 0.6905238123842011
best_error: 0.6904208795311096
best_error: 0.6904208749366069
best_error: 0.6903815311841832
best_error: 0.6903815239169695
best_error: 0.6901185479300626
best_error: 0.6901185429055144
best_error: 0.68975566737006
best_error: 0.6897556538575436
best_error: 0.689717902493791
best_error: 0.6897178984423685
best_error: 0.6896883725774258
best_error: 0.6896883721593612
