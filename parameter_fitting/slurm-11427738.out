ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.799504527444828
best_error: 24.799504521047933
best_error: 24.799504508952445
best_error: 24.79950446038427
best_error: 4.994452234616918
best_error: 4.9944522343639415
best_error: 4.994452233905051
best_error: 4.992917337453066
best_error: 4.992917337192822
best_error: 4.992917336737841
best_error: 4.986617505316448
best_error: 4.986617505025372
best_error: 4.986617504587311
best_error: 4.958388749521581
best_error: 4.958388749066533
best_error: 4.958388748727942
best_error: 4.861857818933399
best_error: 4.861857815610148
best_error: 4.293269021862038
best_error: 4.293268891599886
best_error: 3.2322033811847684
best_error: 3.232203356301591
best_error: 3.227912764565509
best_error: 3.2279127640541874
best_error: 3.2279127632818163
best_error: 3.227912762536036
best_error: 3.227749757279255
best_error: 3.2277497560445854
best_error: 3.2277497552506973
best_error: 3.2255969061348737
best_error: 3.2255968944771785
best_error: 3.2201739335021267
best_error: 3.2201738719078605
best_error: 3.2127374887149243
best_error: 3.2127374004758025
best_error: 3.1875576393784373
best_error: 3.187557448454312
best_error: 3.1008070677324304
best_error: 3.1008070207209566
best_error: 3.0051671025306064
best_error: 3.00516701241955
best_error: 2.9855434014166424
best_error: 2.9855433287161346
best_error: 2.964522156899357
best_error: 2.9645221551865775
best_error: 2.9488124222637193
best_error: 2.9488124028719085
best_error: 2.8825892574701855
best_error: 2.8825891762166225
best_error: 2.698854849124167
best_error: 2.6988545915727182
best_error: 2.2683906197799697
best_error: 2.268390436826432
best_error: 2.1617532207314016
best_error: 2.1617530669434206
best_error: 1.8821840266709977
best_error: 1.8821839955051822
best_error: 1.876830517927509
best_error: 1.8768304882596043
best_error: 1.875464208637036
best_error: 1.875464164616921
best_error: 1.875074592497718
best_error: 1.8750745365573136
best_error: 1.8749909567229546
best_error: 1.8749908943024636
best_error: 1.874982364087426
best_error: 1.8749823007171198
best_error: 1.8749742648124308
best_error: 1.8749742007390202
best_error: 1.8749733941427875
best_error: 1.874973329353457
best_error: 1.8700100999861442
best_error: 1.8700100711361247
best_error: 1.8641574977124415
best_error: 1.864157488539465
best_error: 1.8594329035442658
best_error: 1.8594328997610743
best_error: 1.8526909151295206
best_error: 1.852690891452066
best_error: 1.8504002857973791
best_error: 1.8504002837277937
best_error: 1.850164100647387
best_error: 1.8501640697202801
best_error: 1.8500756933459042
best_error: 1.850075691823622
best_error: 1.8497958298116126
best_error: 1.84979582574751
best_error: 1.8496536320491246
best_error: 1.8496536306846345
best_error: 1.8492784254918764
best_error: 1.8492784227413415
best_error: 1.8486497516222036
best_error: 1.8486497394502825
best_error: 1.8473953440705313
best_error: 1.8473953215993821
best_error: 1.8454693684831271
best_error: 1.8454693562803137
best_error: 1.8390000959080348
best_error: 1.8390000245284512
best_error: 1.8359632217273014
best_error: 1.8359630887428573
best_error: 1.8298711365298395
best_error: 1.8298710694088798
best_error: 1.8239631373934608
best_error: 1.8239630824736783
best_error: 1.8186656831471826
best_error: 1.8186656563842407
best_error: 1.8151349157508982
best_error: 1.8151349064551874
best_error: 1.8142436064116303
best_error: 1.8142436060533382
best_error: 1.8142436029880775
best_error: 1.8141827944931712
best_error: 1.8141827937050714
best_error: 1.8141827919188498
best_error: 1.8141602309215767
best_error: 1.8141602301577284
best_error: 1.8141602283750702
best_error: 1.8140745398910818
best_error: 1.814074539573013
best_error: 1.8140745395641802
best_error: 1.8140745373695077
best_error: 1.812170960480059
best_error: 1.812170960313766
best_error: 1.8121709601772025
best_error: 1.812170958641348
best_error: 1.8055529382964641
best_error: 1.8055529377462491
best_error: 1.8055529365073215
best_error: 1.8012795021990424
best_error: 1.8012794541443156
best_error: 1.8003720077050056
best_error: 1.8003719930320736
best_error: 1.7772864442164626
best_error: 1.7772862642107652
best_error: 1.7656107026247339
best_error: 1.7656107015311977
best_error: 1.7656107004158164
best_error: 1.7656107000980206
best_error: 1.757078117088092
best_error: 1.7570780435865267
best_error: 1.7519995137982696
best_error: 1.7519995118582268
best_error: 1.7519995076405763
best_error: 1.745301541827415
best_error: 1.745301539393591
best_error: 1.7453015343465497
best_error: 1.715999726453394
best_error: 1.7159997016297772
best_error: 1.7159970725078433
best_error: 1.6982708343349515
best_error: 1.6982707834432171
best_error: 1.6810024372425503
best_error: 1.6810023403630976
best_error: 1.629482818535582
best_error: 1.62948281807454
best_error: 1.6294828177045033
best_error: 1.622622850798248
best_error: 1.622622848869639
best_error: 1.614044487705312
best_error: 1.6140444848975404
best_error: 1.6132551989412405
best_error: 1.613255197556158
best_error: 1.612969030074884
best_error: 1.612969026174246
best_error: 1.6129068106810487
best_error: 1.61290680969482
best_error: 1.6129068092023084
best_error: 1.6127426571080532
best_error: 1.6127426553586022
best_error: 1.6125444737349428
best_error: 1.6125444719569986
best_error: 1.6122409224833052
best_error: 1.6122409222960308
best_error: 1.6122409209171824
best_error: 1.6119743461416436
best_error: 1.6119743345564006
best_error: 1.6119112073120567
best_error: 1.611911193008208
best_error: 1.6118402150979814
best_error: 1.6118401931566957
best_error: 1.6117911320874645
best_error: 1.611791110025979
best_error: 1.611620915445084
best_error: 1.6116208923124729
best_error: 1.6106484808509933
best_error: 1.6106484600614024
best_error: 1.6106478898393348
best_error: 1.6106478695196962
best_error: 1.610647784506066
best_error: 1.6106477645387833
best_error: 1.610647756711768
best_error: 1.6106477384122542
best_error: 1.610647727710612
best_error: 1.6103332160379307
best_error: 1.6103331958176306
best_error: 1.6098286106855724
best_error: 1.6098285911762593
best_error: 1.6079691492347223
best_error: 1.6079691362563346
best_error: 1.60594705442021
best_error: 1.6059470543654104
best_error: 1.6059470540760166
best_error: 1.6058080177636251
best_error: 1.6058080170170146
best_error: 1.6058051094247248
best_error: 1.6058051093525072
best_error: 1.605805109247767
best_error: 1.6058049703858677
best_error: 1.605804970315386
best_error: 1.6058049702094348
best_error: 1.6058048255449209
best_error: 1.6058048254737975
best_error: 1.6058048253616437
best_error: 1.6058046122053171
best_error: 1.6058046121342147
best_error: 1.6058046120208145
best_error: 1.6058039246895768
best_error: 1.6058039246625344
best_error: 1.60580392462036
best_error: 1.6058039244877582
best_error: 1.6058007819406859
best_error: 1.6058007817727307
best_error: 1.6058007817256725
best_error: 1.605798227469295
best_error: 1.6057982266585054
best_error: 1.6057977935030963
best_error: 1.6057977928479128
best_error: 1.6057970195599427
best_error: 1.6057970194944517
best_error: 1.6057970193245072
best_error: 1.605796172838328
best_error: 1.605796172774232
best_error: 1.6057961725825598
best_error: 1.605795774030307
best_error: 1.6057957737960984
best_error: 1.6057957737428319
best_error: 1.6057954304420627
best_error: 1.6057954302049153
best_error: 1.6057954301545818
best_error: 1.605794767752366
best_error: 1.6057947676458237
best_error: 1.6057947674618145
best_error: 1.6057939583486902
best_error: 1.6057939576132356
best_error: 1.6057912200608928
best_error: 1.6057912193502692
best_error: 1.60578799397287
best_error: 1.6057879926270464
best_error: 1.6057857295043518
best_error: 1.605785727119133
best_error: 1.6057839990335356
best_error: 1.605783996181038
best_error: 1.6057593281705311
best_error: 1.605759325476267
best_error: 1.605721572539465
best_error: 1.6057215687346982
best_error: 1.605609363832527
best_error: 1.605609357328117
best_error: 1.6054381390608332
best_error: 1.6054381324108502
best_error: 1.6050140961073385
best_error: 1.605014079432632
best_error: 1.6043667720246222
best_error: 1.6043667430584427
best_error: 1.601925587127054
best_error: 1.601925548313367
best_error: 1.593380913095338
best_error: 1.5933808359455874
best_error: 1.5630233868015495
best_error: 1.5630231689081333
best_error: 1.563003591994445
best_error: 1.5517248337161056
best_error: 1.5517248336751468
best_error: 1.5517248310045824
