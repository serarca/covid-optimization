ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.581041049518374
best_error: 9.581041039381914
best_error: 9.05933289569579
best_error: 9.059332838433345
best_error: 4.849773285817315
best_error: 4.849772916235441
best_error: 3.9921415410308265
best_error: 3.9921413002012343
best_error: 3.899687330186444
best_error: 3.8996873301846677
best_error: 3.899687312483033
best_error: 3.8826027517895128
best_error: 3.882602751787796
best_error: 3.8826027328434223
best_error: 3.872338523695061
best_error: 3.8723384987182414
best_error: 3.8723384959998826
best_error: 3.8651176314104063
best_error: 3.865117608484283
best_error: 3.8651176035866603
best_error: 3.852748145885679
best_error: 3.8527481458839197
best_error: 3.852748125966948
best_error: 3.790670991032834
best_error: 3.7906709910309977
best_error: 3.790670969255531
best_error: 3.7785619608800673
best_error: 3.7785619608765506
best_error: 3.716999856002179
best_error: 3.716999855999602
best_error: 3.716999852025173
best_error: 3.6537114452193222
best_error: 3.653711445216522
best_error: 3.5837728979519525
best_error: 3.583772897949634
best_error: 3.418021884154207
best_error: 3.418021884152659
best_error: 3.404970004215594
best_error: 3.4049700042145736
best_error: 3.4049699956391564
best_error: 3.40087637231316
best_error: 3.4008763723121263
best_error: 3.4008763672228355
best_error: 3.4004093060183225
best_error: 3.4004093060172997
best_error: 3.4004093009235996
best_error: 3.400231037119506
best_error: 3.400231037118478
best_error: 3.4002310320226847
best_error: 3.4001521507860106
best_error: 3.400152150784981
best_error: 3.4001521456864303
best_error: 3.4001298248023106
best_error: 3.4001297557734715
best_error: 3.3998342181968226
best_error: 3.399834218195784
best_error: 3.3998342130538375
best_error: 3.3985448725812133
best_error: 3.3985448725801843
best_error: 3.398544872323935
best_error: 3.398544867361008
best_error: 3.394211466607962
best_error: 3.3942114666069414
best_error: 3.3942114614566847
best_error: 3.3942114610129748
best_error: 3.364149312873758
best_error: 3.3641492904900745
best_error: 3.364149289092572
best_error: 3.351686661949979
best_error: 3.351686661948547
best_error: 3.351686637215913
best_error: 3.34136958171731
best_error: 3.341369581715322
best_error: 3.3413695696658707
best_error: 3.2947092519348495
best_error: 3.2947092519333525
best_error: 3.294709251872007
best_error: 3.287366014648886
best_error: 3.2873660146468437
best_error: 3.279911876449403
best_error: 3.2799118764473634
best_error: 3.2314428536239803
best_error: 3.2314428536220063
best_error: 3.207862521045952
best_error: 3.207862521043302
best_error: 3.2078624773643534
best_error: 3.1407644385224427
best_error: 3.1407643076339595
best_error: 3.112865781149007
best_error: 3.1128657811477902
best_error: 3.1128657805241575
best_error: 3.110661456523957
best_error: 3.110661414071322
best_error: 3.1101527061385728
best_error: 3.1101527061373524
best_error: 3.1098515141098773
best_error: 3.1098514719767683
best_error: 3.109560919419926
best_error: 3.1095609194187164
best_error: 3.109486954709259
best_error: 3.1094869547080424
best_error: 3.109486591721923
best_error: 3.109486549675492
best_error: 3.10948402850136
best_error: 3.109483985781503
best_error: 3.109483972757229
best_error: 3.1094839727560144
best_error: 3.1094834841822045
best_error: 3.109483484180992
best_error: 3.1094832099907554
best_error: 3.1094832099895546
best_error: 3.1094831934072196
best_error: 3.109483193405996
best_error: 3.1094831927518465
best_error: 3.109483177966438
best_error: 3.1094831770260734
best_error: 3.109483177024867
best_error: 3.109483168392422
best_error: 3.1094831683918285
best_error: 3.1094831660616125
best_error: 3.109483161385522
best_error: 3.109483161384923
best_error: 3.1094831613836336
best_error: 3.1094831608239186
best_error: 3.1094831608233164
best_error: 3.109483158493157
best_error: 3.1094831577721602
best_error: 3.109483157436258
best_error: 3.109483156712101
best_error: 3.1094831565005494
