ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.96075797864027
best_error: 96.96075788272006
best_error: 96.96075784606913
best_error: 14.503607387498537
best_error: 14.503607387486849
best_error: 14.503607362795876
best_error: 14.343217515850847
best_error: 14.34321751583806
best_error: 14.34321748576986
best_error: 13.022673624607592
best_error: 13.0226736243858
best_error: 13.02267352123489
best_error: 12.711510368001731
best_error: 12.711510367601054
best_error: 12.711510271922254
best_error: 12.347617203817263
best_error: 12.347617202924127
best_error: 12.347617143166223
best_error: 12.210147410679658
best_error: 12.210147409345009
best_error: 12.2101473597
best_error: 11.979197724024633
best_error: 11.979197721204727
best_error: 11.979197721163747
best_error: 11.979197720146924
best_error: 11.979197718755644
best_error: 11.703363444461077
best_error: 11.703363402645735
best_error: 11.68376454565172
best_error: 11.68376450465875
best_error: 11.66289566170539
best_error: 11.662895618263901
best_error: 11.40985399788956
best_error: 11.409853955435189
best_error: 11.371000609317079
best_error: 11.37100059915855
best_error: 11.327839669157449
best_error: 11.327839651500357
best_error: 11.297151639209414
best_error: 11.29715157655792
best_error: 11.271862712036906
best_error: 11.271862649632535
best_error: 11.080841113860107
best_error: 11.080841050800739
best_error: 10.848848860858936
best_error: 10.848848821227483
best_error: 10.54529001604609
best_error: 10.545290016045994
best_error: 10.545290014886474
best_error: 10.53410636990969
best_error: 10.534106369909585
best_error: 10.534106368715342
best_error: 10.523714880811298
best_error: 10.5237148808112
best_error: 10.523714879582444
best_error: 10.266380574262165
best_error: 10.266380574262033
best_error: 10.266380572223827
best_error: 9.832829894059754
best_error: 9.83282989405956
best_error: 9.832829891735225
best_error: 8.865741736421542
best_error: 8.865741486685057
best_error: 8.212894909720033
best_error: 8.212894687524333
best_error: 8.019284885430302
best_error: 8.019284885427265
best_error: 8.01928488020812
best_error: 7.73291855998616
best_error: 7.732918553701509
best_error: 7.7329185290338796
best_error: 7.668941612526034
best_error: 7.668941319850948
best_error: 7.608817834518969
best_error: 7.608817711891532
best_error: 7.527177425640142
best_error: 7.527177419362868
best_error: 7.527177394862016
best_error: 7.399209210738192
best_error: 7.399209190363841
best_error: 7.34627977953785
best_error: 7.346279643320502
best_error: 7.118981354624065
best_error: 7.118981167911933
best_error: 6.695662231157832
best_error: 6.695662215200496
best_error: 6.667370853747748
best_error: 6.667370850072642
best_error: 6.667370833157164
best_error: 6.647389466605842
best_error: 6.64738938569903
best_error: 6.522114367247303
best_error: 6.522114307333583
best_error: 6.34639423160613
best_error: 6.346394179103163
best_error: 6.3305860430002845
best_error: 6.330585960806525
best_error: 6.250299089722172
best_error: 6.250299038450962
best_error: 6.241878960071199
best_error: 6.241878607206729
best_error: 6.232055481827371
best_error: 6.232055440707467
best_error: 6.223643296605441
best_error: 6.223642950400285
best_error: 6.214021884470371
best_error: 6.214021873926272
best_error: 6.213714412219429
best_error: 6.213714401620258
best_error: 6.211896508929265
best_error: 6.2118964743546545
best_error: 6.2096662511989855
best_error: 6.209666218955594
best_error: 6.201223987323807
best_error: 6.201223983828112
best_error: 6.201223982914028
best_error: 6.201223981295952
best_error: 6.200348656471599
best_error: 6.200348654220203
best_error: 6.2003486516586
best_error: 6.200348650449306
best_error: 6.197183600278407
best_error: 6.197183599908639
best_error: 6.197183594891366
best_error: 6.197183594294804
best_error: 6.19681470454385
best_error: 6.196814704178598
best_error: 6.196814699162342
best_error: 6.196814698562645
best_error: 6.196667493525863
best_error: 6.196667493317841
best_error: 6.19666748813059
best_error: 6.196667487564108
best_error: 6.196663763225352
best_error: 6.196663763017375
best_error: 6.196663757830136
best_error: 6.1966637572636225
best_error: 6.196663399133617
best_error: 6.1966631481524805
best_error: 6.19666311416083
best_error: 6.196663091461861
