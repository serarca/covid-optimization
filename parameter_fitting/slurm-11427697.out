ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.71835364842428
best_error: 25.718353551746233
best_error: 5.0754501893242825
best_error: 5.07545018918701
best_error: 5.0754501891788335
best_error: 5.075450188996338
best_error: 5.075298480009672
best_error: 5.075298479863414
best_error: 5.075298479681417
best_error: 5.074688752715345
best_error: 5.07468875256582
best_error: 5.074688752385838
best_error: 5.072202713400016
best_error: 5.072202713236991
best_error: 5.072202713065417
best_error: 5.061442165445956
best_error: 5.061442165220893
best_error: 5.061442165089457
best_error: 4.998394528315759
best_error: 4.998394527449568
best_error: 4.931450720948316
best_error: 4.931450714398064
best_error: 4.899224934493108
best_error: 4.89922492118539
best_error: 3.5979416260933776
best_error: 3.5979414583410345
best_error: 3.548213552752057
best_error: 3.5482135254142015
best_error: 3.5416737735035237
best_error: 3.541673764007434
best_error: 3.5405916084367584
best_error: 3.5405916080194846
best_error: 3.540591607546013
best_error: 3.5405437584998363
best_error: 3.540543757715089
best_error: 3.5405437576153833
best_error: 3.54035432311255
best_error: 3.5403543215591156
best_error: 3.539660551230552
best_error: 3.539660543836738
best_error: 3.530750906662911
best_error: 3.5307508507835816
best_error: 3.5044755375942036
best_error: 3.504475409483863
best_error: 3.411233872887461
best_error: 3.4112335166579038
best_error: 3.3808567863177705
best_error: 3.3808564751388515
best_error: 3.2857567319759675
best_error: 3.285756600063703
best_error: 3.256729168696389
best_error: 3.256729108181876
best_error: 3.2556258153646986
best_error: 3.2556257875494405
best_error: 3.252148702968689
best_error: 3.252148697099943
best_error: 3.2520128178738528
best_error: 3.252012817865305
best_error: 3.2520128176038257
best_error: 3.252012817463529
best_error: 3.251999156913056
best_error: 3.251999156585429
best_error: 3.251999156488671
best_error: 3.251940395531987
best_error: 3.2519403948381553
best_error: 3.2517304749353055
best_error: 3.2517304690377484
best_error: 3.2509456677179953
best_error: 3.2509456442209186
best_error: 3.2502193525157086
best_error: 3.2502193211772017
best_error: 3.2447092923070193
best_error: 3.244709223963675
best_error: 3.2374123870767675
best_error: 3.237412242159025
best_error: 3.2299244864828283
best_error: 3.2299243738231924
best_error: 3.212759912053244
best_error: 3.212759856749086
best_error: 3.208608705648902
best_error: 3.20860870505031
best_error: 3.2079829516301372
best_error: 3.2079829514537903
best_error: 3.2079829513895675
best_error: 3.2075717349598785
best_error: 3.2075717347744863
best_error: 3.198068234318206
best_error: 3.198068233239135
best_error: 3.183764167026608
best_error: 3.18376414789015
best_error: 3.1829179048364047
best_error: 3.18291789341657
best_error: 3.174295997098086
best_error: 3.174295986692245
best_error: 3.139721220629657
best_error: 3.1397211728480094
best_error: 3.1326928026723637
best_error: 3.132692789255641
best_error: 3.131007609530052
best_error: 3.1310075991376745
best_error: 3.130948106410317
best_error: 3.1309480914065495
best_error: 3.130919421290195
best_error: 3.1309194026464637
best_error: 3.089032385582328
best_error: 3.0890323740392303
best_error: 2.892183972362793
best_error: 2.892183869050019
best_error: 2.805120854002696
best_error: 2.8051207603067723
best_error: 2.431463183063321
best_error: 2.4314631813192404
best_error: 2.4314631756867002
best_error: 2.418998178434657
best_error: 2.4189979411518543
best_error: 2.4189626091230956
best_error: 2.3001704760330712
best_error: 2.300170275627916
best_error: 2.2651556429046487
best_error: 2.265155622558359
best_error: 2.2648701690808624
best_error: 2.2648701581633004
best_error: 2.2634185262192936
best_error: 2.2634185239280344
best_error: 2.263418522912628
best_error: 2.263104496051485
best_error: 2.263104492942752
best_error: 2.2631044927500508
best_error: 2.2630856202433054
best_error: 2.2630856179616354
best_error: 2.263085616940314
best_error: 2.2630522501173704
best_error: 2.263052248051846
best_error: 2.263052247914332
best_error: 2.2630522468179457
best_error: 2.262954843268909
best_error: 2.262954835800765
best_error: 2.262741902258766
best_error: 2.2627418883711594
best_error: 2.262257443369157
best_error: 2.262257417853914
best_error: 2.2618714168218856
best_error: 2.2618713568899906
best_error: 2.2609217925624385
best_error: 2.2609217469513037
best_error: 2.257780170719227
best_error: 2.2577801684439187
best_error: 2.2577801675018927
best_error: 2.2563653025714374
best_error: 2.256365299637546
best_error: 2.256365299428187
best_error: 2.2555056916583567
best_error: 2.2555056888370557
best_error: 2.255505688550109
best_error: 2.255436806310603
best_error: 2.2554367869645606
best_error: 2.2551834785009657
best_error: 2.255183472999645
best_error: 2.255138827263617
best_error: 2.2551388264542154
best_error: 2.2551388248475837
best_error: 2.255138824261368
best_error: 2.255080591879411
best_error: 2.255080589390284
best_error: 2.255080588911736
best_error: 2.254967958260681
best_error: 2.254967955697807
best_error: 2.2549679553487754
best_error: 2.2549275053655657
best_error: 2.2549275027929854
best_error: 2.254927502556524
best_error: 2.254906291390698
best_error: 2.2549062889037494
best_error: 2.2549062885504076
best_error: 2.2548924625689
best_error: 2.2548924601605633
best_error: 2.2548924597205304
best_error: 2.2548588160690697
best_error: 2.2548588154023728
best_error: 2.2548588137241676
best_error: 2.2548588132145984
best_error: 2.2547438973188756
best_error: 2.2547438864639964
best_error: 2.2546283759767674
best_error: 2.2546283634252235
best_error: 2.254318896462304
best_error: 2.2543188716886373
best_error: 2.2536379910613125
best_error: 2.2536379563252704
best_error: 2.2499642272280993
best_error: 2.249964162727885
best_error: 2.2440861750023493
best_error: 2.244086068675424
best_error: 2.235504291211264
best_error: 2.2355042029238414
best_error: 2.2120560617483718
best_error: 2.2120559534215283
best_error: 2.202484148567966
best_error: 2.2024841469465155
best_error: 2.2024841463844194
best_error: 2.2024841417537275
best_error: 2.1676885817258382
best_error: 2.1676884195133432
best_error: 2.149451984954304
best_error: 2.14945188441324
best_error: 2.1419508150655067
best_error: 2.141950814346319
best_error: 2.1419508138677563
best_error: 2.1419508137836636
best_error: 2.141900862266586
best_error: 2.1419008610262096
best_error: 2.141883104891185
best_error: 2.1418831041504145
best_error: 2.141883103682888
best_error: 2.1418820752696943
best_error: 2.1418820740249616
best_error: 2.141882060199929
best_error: 2.1418820589617753
best_error: 2.1418820439854214
best_error: 2.1418820436582027
best_error: 2.141882042760921
best_error: 2.141882036027483
best_error: 2.14188203581212
best_error: 2.1418820347984213
best_error: 2.141882022311702
best_error: 2.1418820219707646
best_error: 2.1418820210846747
best_error: 2.1418819695194706
best_error: 2.1418819692895075
best_error: 2.1418819682879264
best_error: 2.1418815471350783
best_error: 2.1418815466652363
best_error: 2.1418815459104312
best_error: 2.141880203649305
best_error: 2.141880203610342
best_error: 2.1418802024099453
best_error: 2.141879388466252
best_error: 2.141879387208201
best_error: 2.1418791224857383
best_error: 2.141879121227898
best_error: 2.141877851957062
best_error: 2.141877850688781
best_error: 2.141869615104458
best_error: 2.141869613854052
best_error: 2.141861522681073
best_error: 2.1418615223611486
best_error: 2.1418615214748513
best_error: 2.141848828636894
best_error: 2.1418488273884124
best_error: 2.1418203834887093
best_error: 2.141820382122744
best_error: 2.1418203679546313
best_error: 2.141820366573309
best_error: 2.141804755788954
best_error: 2.1418047544229233
best_error: 2.141800942814742
best_error: 2.141800941456188
best_error: 2.1418009390820134
best_error: 2.14180093772346
best_error: 2.1418009241510747
best_error: 2.141800922792519
best_error: 2.141800864508459
best_error: 2.1418008631501344
best_error: 2.141800626111914
best_error: 2.141800624753806
best_error: 2.1417996736082374
best_error: 2.1417996722505785
best_error: 2.1417959540236344
best_error: 2.1417959526687222
best_error: 2.1417839393806286
best_error: 2.1417839380942114
best_error: 2.1417830572326673
best_error: 2.14178305595718
best_error: 2.1417798519235007
best_error: 2.1417798506589323
best_error: 2.1417705169607277
best_error: 2.1417705159796285
best_error: 2.1417705157837896
best_error: 2.141770084511675
best_error: 2.1417700836361786
best_error: 2.1417700833326028
best_error: 2.141768459472173
best_error: 2.1417684588399375
best_error: 2.141768458286584
best_error: 2.1417637831765
best_error: 2.1417637829977143
best_error: 2.1417637820877062
best_error: 2.1417439277362185
best_error: 2.141743926738716
best_error: 2.1417040213617082
best_error: 2.141704020580294
best_error: 2.1416525231325694
best_error: 2.1416525225865053
best_error: 2.1409355372412135
best_error: 2.1409355351496187
best_error: 2.1381900691746107
best_error: 2.138190068572776
best_error: 2.1368098919730767
best_error: 2.136809856983513
best_error: 2.134779423465938
best_error: 2.13477942293221
best_error: 2.1347794218028318
best_error: 2.1297924499682352
best_error: 2.12979233944679
best_error: 2.129772260768389
best_error: 2.1219451839350385
best_error: 2.1219450222694474
best_error: 2.121897384953507
best_error: 2.114327170202559
best_error: 2.114327136642676
best_error: 2.0971601750613313
best_error: 2.0971599390793085
best_error: 2.097064913639036
best_error: 2.097034469198686
