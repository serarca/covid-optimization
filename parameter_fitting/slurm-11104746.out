ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 90
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.86252854708577
best_error: 97.86252842783344
best_error: 97.86252842575009
best_error: 13.479976153544724
best_error: 13.4799761535353
best_error: 13.47997612545082
best_error: 13.331297716470367
best_error: 13.331297716459812
best_error: 13.33129768388196
best_error: 12.400318852018511
best_error: 12.40031885192538
best_error: 12.400318782507352
best_error: 12.276850562177238
best_error: 12.276850562052502
best_error: 12.276850487208991
best_error: 12.1375570201008
best_error: 12.13755701993386
best_error: 12.137556935846163
best_error: 11.79759381439127
best_error: 11.797593814012268
best_error: 11.797593771286083
best_error: 11.73832537458137
best_error: 11.738325374096169
best_error: 11.73832534767931
best_error: 11.674900584338992
best_error: 11.674900583519811
best_error: 11.674900581653851
best_error: 11.672202979634202
best_error: 11.672202978710704
best_error: 11.672202953967687
best_error: 11.590392682138576
best_error: 11.590392680887634
best_error: 11.590392679920598
best_error: 11.211974858254768
best_error: 11.211974857173647
best_error: 11.211974856936466
best_error: 11.211974855930121
best_error: 11.207792415331653
best_error: 11.20779241417159
best_error: 11.207792413995238
best_error: 11.207792412994737
best_error: 11.12115819332879
best_error: 11.121158193328563
best_error: 11.121158193049983
best_error: 11.121158189199079
best_error: 11.090797332571762
best_error: 11.090797331899864
best_error: 11.09079732999205
best_error: 11.090797325133552
best_error: 10.997328594274496
best_error: 10.997328587589122
best_error: 10.976738615646537
best_error: 10.976738608231997
best_error: 10.915705329123243
best_error: 10.915705325387064
best_error: 10.915705321260226
best_error: 10.824586430414216
best_error: 10.824586430279275
best_error: 10.824586417160916
best_error: 10.773115814215743
best_error: 10.773115802450835
best_error: 10.742031383358931
best_error: 10.742031383153542
best_error: 10.742031371604098
best_error: 10.730252122974514
best_error: 10.730252120904993
best_error: 10.730252107565384
best_error: 10.684152257277548
best_error: 10.68415225453457
best_error: 10.684152251497714
best_error: 10.684152244516369
best_error: 10.599385793797078
best_error: 10.599385784000729
best_error: 10.437243706577906
best_error: 10.437243699228453
best_error: 10.437243680181123
best_error: 10.220586936365814
best_error: 10.220586932572388
best_error: 10.220586911819426
best_error: 9.533806258036607
best_error: 9.533806159922387
best_error: 9.424385397296321
best_error: 9.424385302964431
best_error: 9.358916776070927
best_error: 9.358916766776613
best_error: 9.358916759737523
best_error: 9.358916758974033
best_error: 9.243955590536235
best_error: 9.24395553252788
best_error: 9.124242851656557
best_error: 9.124242659656248
best_error: 9.044655886200564
best_error: 9.044655640727143
best_error: 8.998143017811078
best_error: 8.998142948400073
best_error: 8.876429893846796
best_error: 8.876429856226656
best_error: 8.875620215021183
best_error: 8.875619920751205
best_error: 8.782413868585266
best_error: 8.782413537218284
best_error: 8.534866459917907
best_error: 8.53486643704083
best_error: 8.418153258972893
best_error: 8.418153232242986
best_error: 8.358709275835077
best_error: 8.358709175705894
best_error: 8.332036713711386
best_error: 8.332036679011523
best_error: 8.299758503386432
best_error: 8.299758472620763
best_error: 8.23415711802873
best_error: 8.234157100852212
best_error: 8.122364819765568
best_error: 8.122364385135668
best_error: 8.08001669342903
best_error: 8.080016268288114
best_error: 8.04669081703999
best_error: 8.04669080700819
best_error: 8.038910831908458
best_error: 8.03891082377253
best_error: 8.037543158691442
best_error: 8.037543150770343
best_error: 8.036843779534811
best_error: 8.036843771667737
best_error: 8.036699326291883
best_error: 8.036699318426713
best_error: 8.036638911728922
best_error: 8.036638903864569
best_error: 8.0366115078712
best_error: 8.03661150000719
best_error: 8.036607444344513
best_error: 8.036607116958209
best_error: 8.036605616420106
best_error: 8.036605608556293
best_error: 8.036595250612947
best_error: 8.036594923225696
best_error: 8.036594265955403
best_error: 8.03659425809171
best_error: 8.036593495176081
best_error: 8.036593487312402
best_error: 8.036593428991743
best_error: 8.036593421128075
best_error: 8.036593371339475
best_error: 8.036593363475811
best_error: 8.036593344332543
best_error: 8.03659333646887
best_error: 8.036593330744932
best_error: 8.036593324743349
best_error: 8.036593323299815
best_error: 8.036593321697353
