ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 90
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.66906988523999
best_error: 97.66906977973296
best_error: 97.66906976478003
best_error: 97.66906975837273
best_error: 23.30914598470869
best_error: 23.30914563915013
best_error: 23.309143242589965
best_error: 13.32887280730056
best_error: 13.328872805279849
best_error: 13.32887274283809
best_error: 13.205462049391267
best_error: 13.205462047119026
best_error: 13.205461976252499
best_error: 12.557097226539089
best_error: 12.557097223587373
best_error: 12.55709711142611
best_error: 11.401628197966824
best_error: 11.401628083779112
best_error: 10.488238343700452
best_error: 10.488238343699813
best_error: 10.488238341271558
best_error: 10.488238329878287
best_error: 10.478269011849626
best_error: 10.478269011848969
best_error: 10.478269009179934
best_error: 10.47826899710172
best_error: 10.245753338946937
best_error: 10.245753333611809
best_error: 10.245753331169007
best_error: 10.24575332500852
best_error: 9.891774665522341
best_error: 9.891774663738358
best_error: 9.89177465895903
best_error: 9.891774655759033
best_error: 9.636515768204813
best_error: 9.636515690440433
best_error: 9.201320483329935
best_error: 9.201320297842912
best_error: 8.945245605280997
best_error: 8.945245353675862
best_error: 8.882936553214515
best_error: 8.882936305431977
best_error: 8.678920483999262
best_error: 8.678920335419935
best_error: 8.518706077061747
best_error: 8.518705969398937
best_error: 8.484795090973677
best_error: 8.484795065763336
best_error: 8.484795063065366
best_error: 8.4325527093933
best_error: 8.43255268063387
best_error: 8.205019180462092
best_error: 8.205018859957686
best_error: 8.159374712236076
best_error: 8.159374710091056
best_error: 8.15937469830586
best_error: 8.159374694185
best_error: 8.15937049721042
best_error: 8.159370495065428
best_error: 8.159370483280187
best_error: 8.159370479159362
best_error: 8.124597338578551
best_error: 8.12459695934759
best_error: 8.022716256642788
best_error: 8.022716255690169
best_error: 8.022716159709052
best_error: 7.9962777305515065
best_error: 7.996277724836769
best_error: 7.996277710485136
best_error: 7.987871086508525
best_error: 7.9878710821837124
best_error: 7.987871068425212
best_error: 7.979506630514463
best_error: 7.979506628004429
best_error: 7.979506615388285
best_error: 7.967732987434516
best_error: 7.9677329684691145
best_error: 7.942465635568313
best_error: 7.942465620411722
best_error: 7.88509049432367
best_error: 7.885090493348045
best_error: 7.885090468380378
best_error: 7.880230928670269
best_error: 7.880230927109707
best_error: 7.880230910305897
best_error: 7.875456685188578
best_error: 7.875456683478256
best_error: 7.875456670302283
best_error: 7.87042019660573
best_error: 7.870420195035129
best_error: 7.870420179688276
best_error: 7.86645749914036
best_error: 7.8664574975893675
best_error: 7.8664574818237085
best_error: 7.859319549992101
best_error: 7.859319543715084
best_error: 7.859319535915741
best_error: 7.838895894902729
best_error: 7.8388958436435034
best_error: 7.838895832604127
best_error: 7.812512188444227
best_error: 7.812512183339229
best_error: 7.8125121823112025
best_error: 7.80535057366515
best_error: 7.805350488184073
best_error: 7.793521430912113
best_error: 7.793521396016171
best_error: 7.7935213739144835
best_error: 7.79191914941301
best_error: 7.791919079886842
best_error: 7.7905987437158215
best_error: 7.790598708727176
best_error: 7.790598685336992
best_error: 7.790270330908699
best_error: 7.790270296097565
best_error: 7.779457085695194
best_error: 7.779456972083009
best_error: 7.722319113592297
best_error: 7.722319055989065
best_error: 7.671086459681055
best_error: 7.6710864105225545
best_error: 7.654938861306397
best_error: 7.654938803642397
best_error: 7.620725154179384
best_error: 7.620725143912188
best_error: 7.620725143800893
best_error: 7.61745985300285
best_error: 7.61745985158022
best_error: 7.617459826688972
best_error: 7.6139767017339
best_error: 7.61397670027694
best_error: 7.613976675332832
best_error: 7.610558708880814
best_error: 7.6105586971799815
best_error: 7.60108995000604
best_error: 7.601089939672119
best_error: 7.570072848097643
best_error: 7.570072841791551
best_error: 7.570072837362401
best_error: 7.545244392267069
best_error: 7.545244371762212
best_error: 7.528048780556684
best_error: 7.528048775398382
best_error: 7.5280487737311015
best_error: 7.5266767696514005
best_error: 7.52667676090806
best_error: 7.52667676072754
best_error: 7.521047692338935
best_error: 7.521047684510062
best_error: 7.5210476836544675
best_error: 7.5021717252276465
best_error: 7.502171614457143
best_error: 7.461481508958138
best_error: 7.461481464350389
best_error: 7.459251791253659
best_error: 7.459251638199505
best_error: 7.449974450202234
best_error: 7.449974440047827
best_error: 7.438558733314868
best_error: 7.438558730411436
best_error: 7.438558687845702
best_error: 7.4374676816596565
best_error: 7.43746761709388
best_error: 7.434261327742342
best_error: 7.434261324129057
best_error: 7.434261320823486
best_error: 7.433040156001672
best_error: 7.433040149544754
best_error: 7.433040147645059
best_error: 7.430822503391243
best_error: 7.430822494960885
