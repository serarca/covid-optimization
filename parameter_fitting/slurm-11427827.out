ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.302856370943275
best_error: 23.302856233072504
best_error: 4.629729056648521
best_error: 4.629729055377889
best_error: 4.628424290557786
best_error: 4.6284242905289865
best_error: 4.628424290351422
best_error: 4.62311957863886
best_error: 4.623119578608902
best_error: 4.623119578429384
best_error: 4.600330324697456
best_error: 4.600330324661415
best_error: 4.600330324474046
best_error: 4.461639194397294
best_error: 4.461639194263068
best_error: 4.461639194069217
best_error: 4.3421120318195365
best_error: 4.342112031409909
best_error: 4.342112031369036
best_error: 4.136663758312059
best_error: 4.136663756426277
best_error: 4.066916532945798
best_error: 4.0669165301223416
best_error: 3.165508046006675
best_error: 3.1655079460111017
best_error: 2.9068761441797766
best_error: 2.906876109594899
best_error: 2.790591707306667
best_error: 2.790591679957156
best_error: 2.7690138257097137
best_error: 2.769013796170284
best_error: 2.7142252826576145
best_error: 2.714225245788544
best_error: 2.1388879183584155
best_error: 2.1388878007081025
best_error: 2.111014386728251
best_error: 2.11101431013918
best_error: 2.1080216295898055
best_error: 2.1080215849043675
best_error: 2.108021579551783
best_error: 2.1071531358904765
best_error: 2.1071530639136737
best_error: 1.952758396475073
best_error: 1.9527582779476957
best_error: 1.92601311763713
best_error: 1.926013078878119
best_error: 1.9119561083114849
best_error: 1.911956107317067
best_error: 1.9119560984050457
best_error: 1.9103750686677978
best_error: 1.9103750152735706
best_error: 1.903607876390003
best_error: 1.9036078758431876
best_error: 1.903607868086952
best_error: 1.9002421980799828
best_error: 1.9002421859051295
best_error: 1.8928192822909347
best_error: 1.8928192458623447
best_error: 1.8771689398751963
best_error: 1.8771687681950384
best_error: 1.8581577459615461
best_error: 1.8581575894237792
best_error: 1.7864195416112154
best_error: 1.7864194567609357
best_error: 1.6150995396735235
best_error: 1.6150994587134868
best_error: 1.6150991479783894
best_error: 1.6150990670205092
best_error: 1.6150987087217457
best_error: 1.615098627760488
best_error: 1.6150983976125641
best_error: 1.6150983164231172
best_error: 1.4782697613507145
best_error: 1.4782696231181012
best_error: 1.4028587352332156
best_error: 1.402858480952243
best_error: 1.349237678270175
best_error: 1.349237631191553
best_error: 1.3258273702863521
best_error: 1.3258273622592487
best_error: 1.3158421874778208
best_error: 1.31584218722611
best_error: 1.3158421870454222
best_error: 1.315842186759799
best_error: 1.311669948071203
best_error: 1.3116699222395516
best_error: 1.3101451789123955
best_error: 1.3101451742480292
best_error: 1.3096371194176848
best_error: 1.309637116784468
best_error: 1.3095484201683574
best_error: 1.3095484193291735
best_error: 1.3094495487071733
best_error: 1.3094495453825346
best_error: 1.3092239923943283
best_error: 1.3092239865146187
best_error: 1.3083742552094284
best_error: 1.3083742432834689
best_error: 1.3066682429565901
best_error: 1.3066682233921623
best_error: 1.3028692946239946
best_error: 1.3028692609622308
best_error: 1.295839011667181
best_error: 1.2958389624234663
best_error: 1.2854697284119376
best_error: 1.2854696705749555
best_error: 1.2753828713794724
best_error: 1.2753828329248362
best_error: 1.2716743215793207
best_error: 1.271674284618718
best_error: 1.2686783405886646
best_error: 1.268678324076055
best_error: 1.2678353822398511
best_error: 1.267835380312704
best_error: 1.2677563846360433
best_error: 1.2677563842608723
best_error: 1.2677563841756363
best_error: 1.2677563836190924
best_error: 1.2676635385243433
best_error: 1.2676635370798934
best_error: 1.2675157394863639
best_error: 1.2675157389427405
best_error: 1.267515738503078
best_error: 1.2669623630788578
best_error: 1.2669623598839501
best_error: 1.2581565342606675
best_error: 1.2581564437892943
best_error: 1.2442521497481756
best_error: 1.2442520668144086
best_error: 1.2299835131122188
best_error: 1.2299834746272782
best_error: 1.1976042545490306
best_error: 1.19760424489805
best_error: 1.188440762910705
best_error: 1.188440543043406
best_error: 1.159823682091598
best_error: 1.1598235374212265
best_error: 1.146719017048947
best_error: 1.1467189563776528
best_error: 1.1386758714271168
best_error: 1.1386757916525
best_error: 1.1311259267570042
best_error: 1.1311258578317285
best_error: 1.114119245855201
best_error: 1.1141192403345148
best_error: 1.0981623813177308
best_error: 1.0981623605252937
best_error: 1.0851311093089833
best_error: 1.0851310889239534
best_error: 1.0850348815377469
best_error: 1.0850348561443917
best_error: 1.0807417126378456
best_error: 1.0807416959646863
best_error: 1.0799486542282404
best_error: 1.0799486331181383
best_error: 1.0786860142451002
best_error: 1.0786860077933929
best_error: 1.0781812277402971
best_error: 1.0781812227398053
best_error: 1.0763557137919397
best_error: 1.0763557136803565
best_error: 1.0763556973095916
best_error: 1.0762800003728175
best_error: 1.0762799886008656
best_error: 1.0760760529441575
best_error: 1.0760760523911537
best_error: 1.076076051786293
best_error: 1.0760658310332045
best_error: 1.0760658301673787
best_error: 1.0760256272135467
best_error: 1.0760256241538846
best_error: 1.0759875623627158
best_error: 1.0759875597695823
best_error: 1.0758792083004487
best_error: 1.0758792059436602
best_error: 1.0751726449025696
best_error: 1.0751726430778137
best_error: 1.0743878978963242
best_error: 1.0743878885483251
best_error: 1.0733046233474834
best_error: 1.073304615795763
best_error: 1.0723492300524076
best_error: 1.0723492296513173
best_error: 1.0723492286081697
best_error: 1.071943441616154
best_error: 1.0719434409255886
best_error: 1.071820288645586
best_error: 1.0718202879389487
best_error: 1.0717139870487282
best_error: 1.0717139862590408
best_error: 1.0717139842453878
best_error: 1.0710278153260437
best_error: 1.0710277994112771
best_error: 1.0698401933796098
best_error: 1.0698401644559714
best_error: 1.0692944753547298
best_error: 1.069294467242132
best_error: 1.0689458332899258
best_error: 1.0689458247956691
best_error: 1.0689067641003873
best_error: 1.0689067453647603
best_error: 1.0684477967599204
best_error: 1.068447793701901
best_error: 1.068366077386817
best_error: 1.068366074741477
best_error: 1.0683331638857292
best_error: 1.0683331630994017
best_error: 1.0683284584613566
best_error: 1.068328458432597
best_error: 1.0683284583287487
best_error: 1.068328458307713
best_error: 1.0683230185514279
best_error: 1.0683230184230783
best_error: 1.0683230183160966
best_error: 1.0683138729774668
best_error: 1.0683138715376461
best_error: 1.068303832399541
best_error: 1.06830383143405
best_error: 1.068285910017726
best_error: 1.0682859097954904
best_error: 1.0682859083545957
best_error: 1.0682750941576773
best_error: 1.0682750936476657
best_error: 1.0682750933751002
best_error: 1.0682590024638485
best_error: 1.0682590019652736
best_error: 1.0682572199208373
best_error: 1.0682572188021107
best_error: 1.0682450268091765
best_error: 1.068245026185715
best_error: 1.0681599596740694
best_error: 1.0681599539340965
best_error: 1.0680749083475896
best_error: 1.0680749026465464
best_error: 1.0677759688333746
best_error: 1.0677759621968665
best_error: 1.0675914794571724
best_error: 1.067591440919106
best_error: 1.0657237781793503
best_error: 1.065723760794127
best_error: 1.0649115599426724
best_error: 1.0649115592306644
best_error: 1.064528308681848
best_error: 1.0645283080945007
best_error: 1.064196199664879
best_error: 1.0641961818341237
best_error: 1.0637073025168327
best_error: 1.0637072918284962
best_error: 1.0622160959033067
best_error: 1.0622160813668955
best_error: 1.061862657798857
best_error: 1.0618626461724052
best_error: 1.059857289647624
best_error: 1.0598572887205657
best_error: 1.0598572879597652
best_error: 1.056881996308974
best_error: 1.0568819954609787
best_error: 1.0568819947821704
best_error: 1.0559793797923753
best_error: 1.0559793642602384
best_error: 1.054485395028908
best_error: 1.0544853512509051
best_error: 1.053582192329255
best_error: 1.0535821697941492
best_error: 1.0532089905557454
best_error: 1.0532089813104748
