ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.06564246865469
best_error: 24.06564178390208
best_error: 5.081872609197519
best_error: 5.081872609061363
best_error: 5.081869268735331
best_error: 5.08186926873147
best_error: 5.081869268705479
best_error: 5.081855901181354
best_error: 5.08185590117749
best_error: 5.081855901151493
best_error: 5.081802339492239
best_error: 5.081802339488358
best_error: 5.081802339462335
best_error: 5.081586616913698
best_error: 5.081586616909753
best_error: 5.081586616883626
best_error: 5.080699298058473
best_error: 5.0806992980542605
best_error: 5.080699298027703
best_error: 5.076697379541455
best_error: 5.07669737953584
best_error: 5.076697379507405
best_error: 5.042010814477394
best_error: 5.042010814399771
best_error: 5.000671749862443
best_error: 5.000671749031511
best_error: 3.8773430019238697
best_error: 3.877342817023449
best_error: 3.8773424914705616
best_error: 2.912992593361595
best_error: 2.9129922750925705
best_error: 2.912990339791349
best_error: 2.9129893768944117
best_error: 2.863453239951314
best_error: 2.8634532177572756
best_error: 2.8623137482132597
best_error: 2.862313743595843
best_error: 2.8623137384711606
best_error: 2.861849147214376
best_error: 2.861849096430177
best_error: 2.846891349657754
best_error: 2.8468913159664675
best_error: 2.8427473381242407
best_error: 2.842747333133959
best_error: 2.842747333079521
best_error: 2.8427473271515176
best_error: 2.8422247214988805
best_error: 2.8422247186797933
best_error: 2.8422247164593593
best_error: 2.8422247106730736
best_error: 2.8404406299233993
best_error: 2.840440624927944
best_error: 2.8404406195899528
best_error: 2.827569149786709
best_error: 2.827569104646696
best_error: 2.8275685264697175
best_error: 2.7838885590540503
best_error: 2.78388847468226
best_error: 2.783888236130804
best_error: 2.783887418012398
best_error: 2.7765478607902834
best_error: 2.776547858842514
best_error: 2.7765478571823814
best_error: 2.776547851503027
best_error: 2.774140353727191
best_error: 2.774140350196414
best_error: 2.7741403441706383
best_error: 2.6380107723920805
best_error: 2.63801076884849
best_error: 2.6380107661793364
best_error: 2.638010756691205
best_error: 2.605745511678165
best_error: 2.6057453607812344
best_error: 2.3585952951574556
best_error: 2.3585951706980697
best_error: 2.358584252529301
best_error: 2.3573326220724593
best_error: 2.357332488758634
best_error: 2.27271035924829
best_error: 2.2727103255887773
best_error: 2.272710178017382
best_error: 2.2727099936822803
best_error: 2.1725097434425287
best_error: 2.1725096460692046
best_error: 2.1487095275341432
best_error: 2.1487094112983014
best_error: 2.106939535102916
best_error: 2.1069394928011826
best_error: 2.1002678142833777
best_error: 2.1002677595968273
best_error: 2.1001975358990195
best_error: 2.100197473204605
best_error: 2.099982645792014
best_error: 2.099982576938114
best_error: 2.0881227078305993
best_error: 2.088122672257597
best_error: 2.087875524291532
best_error: 2.087875468095045
best_error: 2.058550011891869
best_error: 2.0585498888797997
best_error: 1.9589017245798765
best_error: 1.958901626770504
best_error: 1.9375772906062574
best_error: 1.9375772852832163
best_error: 1.9344694608889257
best_error: 1.934469457007513
best_error: 1.933926822162661
best_error: 1.9339268149574471
best_error: 1.9337573985817658
best_error: 1.933757390662233
best_error: 1.9331574379934813
best_error: 1.9331574263346667
best_error: 1.9331508492978327
best_error: 1.9331508376855238
best_error: 1.9327130560281711
best_error: 1.9327130293953838
best_error: 1.9303609467609995
best_error: 1.9303609114613547
best_error: 1.928648050080747
best_error: 1.9286480368976375
best_error: 1.928343462305425
best_error: 1.9283434562857855
best_error: 1.9281179929228134
best_error: 1.9281179892748912
best_error: 1.9275393045916724
best_error: 1.9275393045224394
best_error: 1.9275393038692636
best_error: 1.9264244325497322
best_error: 1.926424419982226
best_error: 1.9240959633187456
best_error: 1.9240959189743259
best_error: 1.9196682752183847
best_error: 1.9196681924974164
best_error: 1.91966814317884
best_error: 1.917302672702119
best_error: 1.917302659570804
best_error: 1.914335195179852
best_error: 1.9143351614982183
best_error: 1.911271514840194
best_error: 1.9112715144742964
best_error: 1.9112715142797592
best_error: 1.911271512397345
best_error: 1.9102998119868755
best_error: 1.910299802396544
best_error: 1.9095045740168652
best_error: 1.909504570717982
best_error: 1.9095045690707106
best_error: 1.9025873314809914
best_error: 1.9025872668031951
best_error: 1.8996576155927263
best_error: 1.899657575935811
best_error: 1.8958586915521984
best_error: 1.895858673534232
best_error: 1.8953140845336836
best_error: 1.895314069966507
best_error: 1.895034728034701
best_error: 1.8950347280064352
best_error: 1.8950347277139636
best_error: 1.895034727459028
best_error: 1.8950347272944188
best_error: 1.895034727024107
best_error: 1.8949530001140007
best_error: 1.8949530000593091
best_error: 1.894952999977285
best_error: 1.8949529995428636
best_error: 1.8949529993745755
best_error: 1.894952999066915
best_error: 1.8946520081119291
best_error: 1.8946520075050242
best_error: 1.8946520073763815
best_error: 1.894652006918086
best_error: 1.891940995639427
best_error: 1.8919409684288049
best_error: 1.8891521232829576
best_error: 1.8891521079639473
best_error: 1.882862076198959
best_error: 1.8828620531373148
best_error: 1.8811092717228173
best_error: 1.8811092322179304
best_error: 1.874179051000467
best_error: 1.8741790113390255
best_error: 1.8664453640971803
best_error: 1.8664453536463865
best_error: 1.8660448564233407
best_error: 1.8660448522137556
best_error: 1.8660448465335684
best_error: 1.8638923726576935
best_error: 1.8638923612835154
best_error: 1.8631281257400425
best_error: 1.8631281121135521
best_error: 1.8630404079810368
best_error: 1.8630404021552196
best_error: 1.8630263736877035
best_error: 1.8630263680367887
best_error: 1.8629924700160982
best_error: 1.8629924696096367
best_error: 1.8629924688404693
best_error: 1.8629460791906354
best_error: 1.8629460787768861
best_error: 1.86294607805135
best_error: 1.8626982107010193
best_error: 1.8626982063276565
best_error: 1.8623571299798918
best_error: 1.862357127661868
best_error: 1.8611267654692534
best_error: 1.861126747739177
best_error: 1.8596604405636312
best_error: 1.8596604139585093
best_error: 1.8532085933505607
best_error: 1.8532085401334502
best_error: 1.846656490231717
best_error: 1.846656427317295
best_error: 1.8461761119539342
best_error: 1.8461760235882179
best_error: 1.8451646769458563
best_error: 1.8451645988937004
best_error: 1.8423215687585968
best_error: 1.8423215426213764
best_error: 1.842314933859606
best_error: 1.8423148823665552
best_error: 1.8421196681480614
best_error: 1.8421196304422862
best_error: 1.842118834821092
best_error: 1.8421187962895118
best_error: 1.8421187847919387
best_error: 1.8421187458699457
best_error: 1.8421187253394982
best_error: 1.8421174735922443
best_error: 1.842117433866338
best_error: 1.8419100187438144
best_error: 1.841909985216976
best_error: 1.8419085501041454
best_error: 1.8419085114160558
best_error: 1.841901027847421
best_error: 1.8419009922180853
best_error: 1.8419004405798358
best_error: 1.8419004044532565
best_error: 1.8408350761683263
best_error: 1.8408350626632843
best_error: 1.8408350583627908
best_error: 1.8407629484310937
best_error: 1.8407629358546458
best_error: 1.840762932281733
best_error: 1.840584092573877
best_error: 1.840584079017747
best_error: 1.8399535732772945
best_error: 1.8399535562877665
best_error: 1.8382052944784102
best_error: 1.8382052913923195
best_error: 1.8381879091608149
best_error: 1.8381879071891634
best_error: 1.838028651471837
best_error: 1.8380286488824833
best_error: 1.836757086782984
best_error: 1.8367570810053109
best_error: 1.835777450869003
best_error: 1.835777439796915
best_error: 1.8357416044317134
best_error: 1.8357416028456648
best_error: 1.8334137585537644
best_error: 1.8334137570919606
best_error: 1.8320822385297655
best_error: 1.8320822383297701
best_error: 1.831985715882793
best_error: 1.8319857154139063
best_error: 1.83194041199341
best_error: 1.831940411857091
best_error: 1.8319404116780629
best_error: 1.831935656668849
best_error: 1.8319356566463154
best_error: 1.8319356552134929
best_error: 1.8319266009758166
best_error: 1.8319266002523695
best_error: 1.8318821179717544
best_error: 1.8318821172269164
best_error: 1.8318821149805258
best_error: 1.8317858024816376
best_error: 1.8317857997087665
best_error: 1.8311070710604207
best_error: 1.831107063886155
best_error: 1.8301733371185955
best_error: 1.8301733251594892
best_error: 1.830120247880891
best_error: 1.8301202268200985
best_error: 1.8290070944455292
best_error: 1.8290070942525225
best_error: 1.8290070939355396
best_error: 1.8288353998391471
best_error: 1.8288353978977225
best_error: 1.8284451084946998
best_error: 1.8284451027061863
