ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.181893522041227
best_error: 11.181893498008165
best_error: 11.181893486224338
best_error: 10.556026137717298
best_error: 10.556026093290207
best_error: 10.556026085106016
best_error: 9.676943739613419
best_error: 9.676943666151235
best_error: 9.407389048833767
best_error: 9.407388952346576
best_error: 8.987004181787096
best_error: 8.987004074550907
best_error: 8.986572579001951
best_error: 8.986572473699415
best_error: 6.637238603364921
best_error: 6.637238500188582
best_error: 5.897817796598871
best_error: 5.897817715749497
best_error: 5.897817712931624
best_error: 5.2617602622705695
best_error: 5.261760261551423
best_error: 5.124271462735715
best_error: 5.124271363495138
best_error: 5.121586094052663
best_error: 5.121585994643402
best_error: 5.12153682201638
best_error: 5.121536722604023
best_error: 5.121531464639466
best_error: 5.121531365226776
best_error: 5.121530827619017
best_error: 5.121530826908553
best_error: 4.377644433895241
best_error: 4.377644433499384
best_error: 3.867236134781922
best_error: 3.8672361345510304
best_error: 3.656086068723109
best_error: 3.6560856888810696
best_error: 3.635713344145095
best_error: 3.635712988788769
best_error: 3.5611178177760126
best_error: 3.56111748010368
best_error: 3.548830973310781
best_error: 3.5488306368452607
best_error: 3.542910644978398
best_error: 3.5429103089411393
best_error: 3.5398994078512542
best_error: 3.5398990715380596
best_error: 3.5383433788372205
best_error: 3.5383430423815367
best_error: 3.5375309460745945
best_error: 3.5375306102505637
best_error: 3.5367455521056197
best_error: 3.5367452171504192
best_error: 3.5366217922691376
best_error: 3.5366214573039874
best_error: 3.5365821107420174
best_error: 3.536581775773663
best_error: 3.5365565245399018
best_error: 3.5365561895694917
best_error: 3.536546585439095
best_error: 3.536546250467932
best_error: 3.5365451651628095
best_error: 3.536544830191539
best_error: 3.536544303358566
best_error: 3.536543968387237
best_error: 3.5365439550022133
best_error: 3.5365439286218043
best_error: 3.536543879605764
best_error: 3.5365438761152195
best_error: 3.514208196653032
best_error: 3.514208196442157
best_error: 3.510580369903117
best_error: 3.5105800616287133
best_error: 3.5049964706052275
best_error: 3.5049961801785257
best_error: 3.4986010466042496
best_error: 3.498600751760799
best_error: 3.4762195069767765
best_error: 3.4762195068511694
best_error: 3.4668629162861517
best_error: 3.4668626098630115
best_error: 3.456836728154899
best_error: 3.4568364303918004
best_error: 3.4487085794769756
best_error: 3.4487082816003607
best_error: 3.4448172133165134
best_error: 3.444816914305328
best_error: 3.4428563337725495
best_error: 3.4428560354903586
best_error: 3.4427252391075935
best_error: 3.4427249408115532
best_error: 3.4427096002293407
best_error: 3.442709301931642
best_error: 3.4427002253390215
best_error: 3.4426999270403265
best_error: 3.4426992060210044
best_error: 3.4426992059726427
best_error: 3.4425956620937264
best_error: 3.442595662042759
best_error: 3.442577555988326
best_error: 3.4425772577397
best_error: 3.441800713518945
best_error: 3.4418004170265832
best_error: 3.431610464527659
best_error: 3.4316101242428036
best_error: 3.422160010277916
best_error: 3.4221596724412064
best_error: 3.406777725279884
best_error: 3.4067774241628213
best_error: 3.3717315299439976
best_error: 3.3717315298159027
best_error: 3.369339302058613
best_error: 3.3693389994176246
best_error: 3.300085411561205
best_error: 3.3000854113761853
best_error: 3.3000853339311176
best_error: 3.2970843163116412
best_error: 3.297083992463598
best_error: 3.2953274103437717
best_error: 3.295327410211295
best_error: 3.295327332004891
best_error: 3.2933614454282445
best_error: 3.293361047833709
best_error: 3.2779565551593643
best_error: 3.2779561837435125
best_error: 3.273149977661361
best_error: 3.273149590902727
best_error: 3.271811816423995
best_error: 3.2718114871954427
best_error: 3.2658828596515255
best_error: 3.2658825176967303
best_error: 3.2632753122574214
best_error: 3.2632749496774656
best_error: 3.2624645940248653
best_error: 3.2624642312914274
best_error: 3.262050454653731
best_error: 3.26205009003447
best_error: 3.2618293289017957
best_error: 3.2618289642411114
best_error: 3.261691785905085
best_error: 3.26169142121884
best_error: 3.261622680895345
best_error: 3.261622316196312
best_error: 3.2615751032480453
best_error: 3.2615747385402285
best_error: 3.2615534528533896
best_error: 3.261553088141584
best_error: 3.2615370730402975
best_error: 3.2615367083254663
best_error: 3.2615355569526683
best_error: 3.2615351922375977
best_error: 3.26153461454184
best_error: 3.2615346143384008
best_error: 3.261534536192969
best_error: 3.2615345168231196
best_error: 3.256511699326789
best_error: 3.2565113356312234
best_error: 3.2552295334741257
best_error: 3.255229188564554
best_error: 3.254579295861326
best_error: 3.2545789500463527
