ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.496232616632279
best_error: 11.496232610838744
best_error: 11.255204206620615
best_error: 11.255204171813705
best_error: 8.82362010687505
best_error: 8.823619751823014
best_error: 7.062288780809666
best_error: 7.062288312020272
best_error: 6.563649020323959
best_error: 6.5636489965510885
best_error: 6.562634264939718
best_error: 6.562634264939576
best_error: 6.562634260819989
best_error: 6.562600396465882
best_error: 6.562600396465712
best_error: 6.5626003913094495
best_error: 6.56209392273263
best_error: 6.562093922732463
best_error: 6.562093917553235
best_error: 6.560065388415094
best_error: 6.560065388414924
best_error: 6.560065383150732
best_error: 6.552201153125845
best_error: 6.552201132881424
best_error: 6.519010072030504
best_error: 6.519010054905377
best_error: 6.4652094819222325
best_error: 6.44911333368434
best_error: 6.3761926987834165
best_error: 6.121654803187434
best_error: 5.284756797024965
best_error: 5.167666687284633
best_error: 5.167666687284575
best_error: 5.167666687219465
best_error: 5.157745525923328
best_error: 5.157745525923263
best_error: 5.157745525085063
best_error: 5.1572002915123765
best_error: 5.157200291512304
best_error: 5.157200289921153
best_error: 5.1568339143508934
best_error: 5.156833879906575
best_error: 5.156721435919298
best_error: 5.156721435919251
best_error: 5.156721434769718
best_error: 5.1554671822051885
best_error: 5.155467182205133
best_error: 5.155467180981732
best_error: 5.151292096777126
best_error: 5.151292096777059
best_error: 5.151292095521224
best_error: 5.136068607694758
best_error: 5.1360686076946624
best_error: 5.136068598005774
best_error: 5.132068179869756
best_error: 5.13206817986966
best_error: 5.132068178850517
best_error: 5.12599324083331
best_error: 5.125993240833228
best_error: 5.125993240367394
best_error: 5.112683237729065
best_error: 5.112683237729051
best_error: 5.106561871284402
best_error: 5.10656187128439
best_error: 5.070882717894919
best_error: 4.984787338494232
best_error: 4.984787150006363
best_error: 4.9407448282374595
best_error: 4.940744828237275
best_error: 4.940744787922909
best_error: 4.936637454478714
best_error: 4.936637454478548
best_error: 4.929912185602487
best_error: 4.929912094636329
best_error: 4.921424319652323
best_error: 4.921424311063865
best_error: 4.921280807192685
best_error: 4.921280800560394
best_error: 4.920994932188505
best_error: 4.9209949313956365
best_error: 4.920994931208829
best_error: 4.920783105975552
best_error: 4.9207831059753735
best_error: 4.920783105188827
best_error: 4.92075935448126
best_error: 4.920759354481083
best_error: 4.920759353708745
best_error: 4.920739620295181
best_error: 4.9207396202950004
best_error: 4.92073961952349
best_error: 4.920706637050575
best_error: 4.920706637050396
best_error: 4.920706636327727
best_error: 4.920696030819701
best_error: 4.920696030819523
best_error: 4.920696030095362
best_error: 4.920689431444675
best_error: 4.9206894314444956
best_error: 4.920689430719405
best_error: 4.920683735308759
best_error: 4.92068373530858
best_error: 4.920683734582684
best_error: 4.920680949865173
best_error: 4.920680949864994
best_error: 4.920680949138442
best_error: 4.920679158555897
best_error: 4.9206791585557195
best_error: 4.920679157828713
best_error: 4.920677712962403
best_error: 4.920677712962226
best_error: 4.920677712235003
best_error: 4.920676956845486
best_error: 4.920676956845307
best_error: 4.920676956117975
best_error: 4.9206761603374485
best_error: 4.920676160337271
best_error: 4.920676159613689
best_error: 4.920675645548449
best_error: 4.920675645548274
best_error: 4.9206756448246125
best_error: 4.92067549047328
best_error: 4.920675490473103
best_error: 4.92067548974927
best_error: 4.920675419662133
best_error: 4.920675419661957
best_error: 4.920675418938111
best_error: 4.9206753664576555
best_error: 4.920675366457477
best_error: 4.920675365733627
best_error: 4.9206753276689215
best_error: 4.920675327668744
best_error: 4.9206753269448855
best_error: 4.920675301752429
best_error: 4.9206753017522535
best_error: 4.920675301028389
best_error: 4.9206752763934505
best_error: 4.9206752763932755
best_error: 4.9206752756694065
best_error: 4.920675263858552
best_error: 4.920675263858374
best_error: 4.920675263134505
best_error: 4.920675248141262
best_error: 4.920675248141086
best_error: 4.920675247417214
best_error: 4.920675243085728
best_error: 4.92067524308555
best_error: 4.920675242361678
best_error: 4.920675240407881
best_error: 4.920675240407704
best_error: 4.92067523968383
best_error: 4.920675238276062
best_error: 4.920675238275885
best_error: 4.920675237552013
best_error: 4.920675237003026
best_error: 4.920675237002849
best_error: 4.920675236278974
best_error: 4.92067523591768
best_error: 4.920675235917502
best_error: 4.920675235193628
best_error: 4.9206752351206475
best_error: 4.92067523512047
best_error: 4.9206752343965965
best_error: 4.9206752341583195
