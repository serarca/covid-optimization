ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.140532519434426
best_error: 24.140531857345124
best_error: 5.063778700374033
best_error: 5.063778700179672
best_error: 5.063772313605345
best_error: 5.063772313602086
best_error: 5.06377231358312
best_error: 5.063746750783468
best_error: 5.063746750780203
best_error: 5.063746750761233
best_error: 5.063644246780862
best_error: 5.063644246777576
best_error: 5.06364424675858
best_error: 5.063230137931621
best_error: 5.063230137928252
best_error: 5.063230137909154
best_error: 5.061504867326586
best_error: 5.061504867322846
best_error: 5.061504867303338
best_error: 5.0532244767261
best_error: 5.0532244767198
best_error: 5.053224476698747
best_error: 4.436043545594007
best_error: 4.436043475207993
best_error: 3.9677931518854352
best_error: 3.967793032229049
best_error: 3.554086945505548
best_error: 3.5540867721883806
best_error: 3.3320831859363524
best_error: 3.3320830959757393
best_error: 2.9824012821356147
best_error: 2.9824012437742504
best_error: 2.972155574769028
best_error: 2.9721555743523997
best_error: 2.9721555650836664
best_error: 2.9714187191086707
best_error: 2.9714187186317544
best_error: 2.971418709783415
best_error: 2.9609704197433326
best_error: 2.960970394483299
best_error: 2.8861188909952493
best_error: 2.886118885852718
best_error: 2.8861188796817716
best_error: 2.8658165336295722
best_error: 2.865816520544385
best_error: 2.8564628969385093
best_error: 2.856462872598174
best_error: 2.852709755673356
best_error: 2.852709740530337
best_error: 2.852674184166052
best_error: 2.85267416934216
best_error: 2.8520848967224572
best_error: 2.852084874281382
best_error: 2.8517032781565788
best_error: 2.8517032519261987
best_error: 2.842133340408953
best_error: 2.842133307926628
best_error: 2.8046721587907033
best_error: 2.8046721071837113
best_error: 2.665728000872154
best_error: 2.665727933605766
best_error: 2.3113863795580913
best_error: 2.311386111735518
best_error: 2.311385029515731
best_error: 2.203683154549394
best_error: 2.2036829191678735
best_error: 2.2036827457275536
best_error: 2.1094673006006754
best_error: 2.109467139818347
best_error: 2.062702592855313
best_error: 2.0627024956578457
best_error: 2.01838766576564
best_error: 2.018387590872669
best_error: 1.9810385060164433
best_error: 1.9810383393719322
best_error: 1.9505231328859853
best_error: 1.9505231088876647
best_error: 1.9505230750316633
best_error: 1.9437580316877798
best_error: 1.9437579649019385
best_error: 1.941674219195601
best_error: 1.9416741341793449
best_error: 1.9302709568830003
best_error: 1.9302709491097567
best_error: 1.9296546844333597
best_error: 1.9296546762105007
best_error: 1.9296110425979014
best_error: 1.9296110405352733
best_error: 1.929611040198737
best_error: 1.9295858366081609
best_error: 1.9295858365884668
best_error: 1.9295858362033484
best_error: 1.929585835798264
best_error: 1.9295858342338308
best_error: 1.929516562356425
best_error: 1.9295165573169553
best_error: 1.929393420841476
best_error: 1.929393409350923
best_error: 1.9292128340556067
best_error: 1.9292128065984138
best_error: 1.9292127943611674
best_error: 1.9287375844527694
best_error: 1.9287375615528715
best_error: 1.9283815470089567
best_error: 1.9283815333453362
best_error: 1.9281640626593595
best_error: 1.9281640618041411
best_error: 1.928164057414667
best_error: 1.9280490536856114
best_error: 1.9280490515553654
best_error: 1.928014131928009
best_error: 1.928014131334105
best_error: 1.9280141311940655
best_error: 1.9280141301416165
best_error: 1.9280114464714833
best_error: 1.928011446240316
best_error: 1.9280114457353992
best_error: 1.9280114446941372
best_error: 1.927993825236068
best_error: 1.927993824492859
best_error: 1.9279938235228664
best_error: 1.9279556031283647
best_error: 1.9279556005102347
best_error: 1.9279099995440658
best_error: 1.9279099902099843
best_error: 1.92782182587949
best_error: 1.927821817633274
best_error: 1.9268463853701099
best_error: 1.9268463808000738
best_error: 1.9252132606663281
best_error: 1.9252132440679595
best_error: 1.9200151195194337
best_error: 1.9200150904453497
best_error: 1.9188190200482544
best_error: 1.918819011895068
best_error: 1.9188190114429338
best_error: 1.9178067408264625
best_error: 1.9178067338235787
best_error: 1.917806727834527
best_error: 1.9177806671245463
best_error: 1.917780462053145
best_error: 1.9131239067973491
best_error: 1.9131238368458219
best_error: 1.9072465150877616
best_error: 1.9072464916488026
best_error: 1.9072464374572329
best_error: 1.9059799070095957
best_error: 1.9059798999547006
best_error: 1.905361784243765
best_error: 1.9053617729161259
best_error: 1.904655796032148
best_error: 1.9046557931247219
best_error: 1.90431750816279
best_error: 1.9043174967183354
best_error: 1.9039484894400198
best_error: 1.9039484720718713
best_error: 1.9032183145131016
best_error: 1.9032182963941489
best_error: 1.8996903337351847
best_error: 1.8996903313805893
best_error: 1.896334565856546
best_error: 1.8963345325904377
best_error: 1.8914367902289453
best_error: 1.8914367643527752
best_error: 1.888362308331615
best_error: 1.8883621886119508
best_error: 1.8851175781706362
best_error: 1.8851175748306477
best_error: 1.8824123300811402
best_error: 1.88241230285152
best_error: 1.8818130296612348
best_error: 1.8818130154716957
best_error: 1.8816311597693758
best_error: 1.881631153334034
best_error: 1.8815275045664976
best_error: 1.8815275010216845
best_error: 1.8813939428318762
best_error: 1.881393941813274
best_error: 1.8812049962085602
best_error: 1.8812049947395202
best_error: 1.8799470360351045
best_error: 1.879947013508124
best_error: 1.8782175773862002
best_error: 1.878217546292293
best_error: 1.8732162903297185
best_error: 1.8732162405125388
best_error: 1.8723395720260252
best_error: 1.8723395459131373
best_error: 1.868901091294512
best_error: 1.868901085441822
best_error: 1.8684142595271191
best_error: 1.8684142595135227
best_error: 1.8684142594794495
best_error: 1.8684142588485708
best_error: 1.8683955313166893
best_error: 1.8683955312012066
best_error: 1.8683955306205489
best_error: 1.8683507985194439
best_error: 1.868350797990033
best_error: 1.8682277318456237
best_error: 1.8682277266058502
best_error: 1.8681839719838889
best_error: 1.8681839662637056
best_error: 1.8681155393895532
best_error: 1.8681155322669856
best_error: 1.8677055661444746
best_error: 1.8677055619460277
best_error: 1.867660869891861
best_error: 1.8676608658802498
best_error: 1.8676608439064666
best_error: 1.8676115138232792
best_error: 1.8676115138034441
best_error: 1.8676040864163548
best_error: 1.8676040859137706
best_error: 1.8676033015327789
best_error: 1.8676032998367789
best_error: 1.8675427384065986
best_error: 1.867542733167364
best_error: 1.8675427326876939
best_error: 1.8675301864523755
best_error: 1.867530182903313
best_error: 1.8674308065390535
best_error: 1.8674308022863415
best_error: 1.8673826645894136
best_error: 1.867382660258206
best_error: 1.8673705059818477
best_error: 1.8673705003363752
best_error: 1.8673695686591478
best_error: 1.8673695622071111
best_error: 1.8673689646909848
best_error: 1.8673689572646643
best_error: 1.8673636553444535
best_error: 1.8673636480701206
best_error: 1.8673570661298853
best_error: 1.8673570592403086
best_error: 1.8673167593501736
best_error: 1.8673167579621872
best_error: 1.8673167543225302
best_error: 1.8672411725885243
best_error: 1.8672411718649062
best_error: 1.86723232851963
best_error: 1.8672302891161154
best_error: 1.8672302888126098
best_error: 1.8672284750759034
best_error: 1.867228474934477
best_error: 1.8672240472394785
best_error: 1.8672240460543532
best_error: 1.8672171345730137
best_error: 1.8672171321035305
best_error: 1.867207378670238
best_error: 1.8672073765466448
best_error: 1.8672013388113353
best_error: 1.8672013386205526
best_error: 1.8672013384484827
best_error: 1.867200063012431
best_error: 1.8672000626568583
best_error: 1.8671998972560058
best_error: 1.8671998971442074
best_error: 1.8671998806753312
best_error: 1.8671998806701884
best_error: 1.8671998789100581
best_error: 1.8671998789076896
