ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 23.58880124946334
best_error: 23.588801022529935
best_error: 12.782366360527453
best_error: 12.782366353316892
best_error: 12.782366332878151
best_error: 12.5670656655862
best_error: 12.567065656659468
best_error: 12.567065650578144
best_error: 11.972122094345547
best_error: 11.972122086567351
best_error: 11.912324699035658
best_error: 11.912324686996573
best_error: 11.692729793166034
best_error: 11.692729770358183
best_error: 10.299995981135517
best_error: 10.29999581476696
best_error: 9.893589243272428
best_error: 9.893589037690438
best_error: 9.551763528740786
best_error: 9.551763300966607
best_error: 9.185700435167503
best_error: 9.185700169001477
best_error: 8.355672175905665
best_error: 8.355671975123014
best_error: 7.785881535403766
best_error: 7.785881395255294
best_error: 7.737359088289295
best_error: 7.7373589689462925
best_error: 7.737358953276433
best_error: 7.507744761327491
best_error: 7.5077446630089915
best_error: 7.5077446134794315
best_error: 7.50426310964021
best_error: 7.504263012125201
best_error: 7.5042629615465835
best_error: 7.501663877489292
best_error: 7.501663779589256
best_error: 7.501663729227811
best_error: 7.49945374079053
best_error: 7.499453642564361
best_error: 7.499453592386388
best_error: 7.493472542805215
best_error: 7.49347244379377
best_error: 7.493472394417962
best_error: 7.488153802513163
best_error: 7.488153704159871
best_error: 7.488153653917347
best_error: 7.487866753550955
best_error: 7.48786665516022
best_error: 7.48786660494309
best_error: 7.48767560052679
best_error: 7.487675502111123
best_error: 7.48767545191085
best_error: 7.487431481658765
best_error: 7.487431383211245
best_error: 7.4874313330325215
best_error: 7.4872165880356905
best_error: 7.487216489560129
best_error: 7.487216439400351
best_error: 7.487115929776749
best_error: 7.487115831288062
best_error: 7.48711578113717
best_error: 7.487104292720922
best_error: 7.487104194230721
best_error: 7.4871041440808455
best_error: 7.487096914538495
best_error: 7.487096816047329
best_error: 7.487096765898104
best_error: 7.487087412315512
best_error: 7.4870873138231016
best_error: 7.487087263674714
best_error: 7.487079042968023
best_error: 7.487078944474528
best_error: 7.487078894326862
best_error: 7.487075141302991
best_error: 7.487075042808975
best_error: 7.487074992661684
best_error: 7.4870748664962905
best_error: 7.487074768002252
best_error: 7.487074717854972
best_error: 7.487074650446237
best_error: 7.487074551952162
best_error: 7.487074501804895
best_error: 7.487074298297556
best_error: 7.487074199803438
best_error: 7.487074149656221
best_error: 7.4870739856661395
best_error: 7.487073848729079
best_error: 6.936894530502743
best_error: 6.93689439935115
best_error: 6.002604661951411
best_error: 6.002604359477902
best_error: 5.955273248103536
best_error: 5.95527293340696
best_error: 5.720496357873612
best_error: 5.720495988932676
best_error: 5.245106663347901
best_error: 5.245106218985216
best_error: 5.244653552428014
best_error: 5.244653107992107
best_error: 5.242840522712421
best_error: 5.242840079572831
best_error: 5.235658460113539
best_error: 5.235658023896199
best_error: 5.207169337795498
best_error: 5.207168900120966
best_error: 5.154800202639752
best_error: 5.154799763153854
best_error: 5.143907948182067
best_error: 5.143907506969288
best_error: 5.137799837126986
best_error: 5.13779939653107
best_error: 5.134292320463018
best_error: 5.134291879312812
best_error: 5.132157632729552
best_error: 5.1321571912422845
best_error: 5.130483660846874
best_error: 5.130483219095407
best_error: 5.130011085896886
best_error: 5.130010644070874
best_error: 5.129726027611863
best_error: 5.1297255857408945
best_error: 5.129571594142824
best_error: 5.129571152247483
best_error: 5.129470653814109
best_error: 5.129470211902842
best_error: 5.129419731015558
best_error: 5.129419289096268
best_error: 5.129383740832893
best_error: 5.129383298907895
best_error: 5.129359537632174
best_error: 5.129359095703381
best_error: 5.129355330244438
best_error: 5.129354888314987
best_error: 5.129353367889813
best_error: 5.1293529259600525
best_error: 5.129352143465422
best_error: 5.129351701535461
best_error: 5.129351488871736
best_error: 5.129351046941682
best_error: 5.129350909986858
best_error: 5.1293508907006
best_error: 5.129350880722102
best_error: 5.1293508797393255
