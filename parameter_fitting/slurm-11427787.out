ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.73381247054928
best_error: 24.73381227654059
best_error: 4.830650778907884
best_error: 4.830650778030394
best_error: 4.830203849012466
best_error: 4.830203849000591
best_error: 4.830203848903194
best_error: 4.828401039658754
best_error: 4.828401039646552
best_error: 4.828401039548636
best_error: 4.820922809033222
best_error: 4.82092280901957
best_error: 4.820922808919537
best_error: 4.785460584156245
best_error: 4.785460584132936
best_error: 4.785460584024171
best_error: 3.679784359571881
best_error: 3.6797843147283937
best_error: 3.487507858270056
best_error: 3.487507812046646
best_error: 3.244159594596214
best_error: 3.244159542383864
best_error: 3.0661958943335277
best_error: 3.066195839192513
best_error: 2.929707853873985
best_error: 2.929707802223074
best_error: 2.9226304673163592
best_error: 2.9226303954745525
best_error: 2.8156456217109707
best_error: 2.815645556568352
best_error: 2.6669889993203655
best_error: 2.6669889412156884
best_error: 2.6669889303550143
best_error: 2.5301526655653213
best_error: 2.5301526018600247
best_error: 2.5301525749919715
best_error: 2.463830105541698
best_error: 2.4638300261101524
best_error: 2.455889977695589
best_error: 2.455889873563812
best_error: 2.386463138428746
best_error: 2.3864630505059425
best_error: 2.292238535980445
best_error: 2.2922384217455334
best_error: 2.2873578027221786
best_error: 2.2873577457066996
best_error: 2.2792514035357647
best_error: 2.279251364627263
best_error: 2.2763159992739435
best_error: 2.2763159751879947
best_error: 2.274277501631333
best_error: 2.274277500122052
best_error: 2.274277491303469
best_error: 2.2731435631073453
best_error: 2.2731435379324414
best_error: 2.270156235372098
best_error: 2.2701561978166955
best_error: 2.259861197467144
best_error: 2.259861139457445
best_error: 2.1882129811294235
best_error: 2.1882129148503227
best_error: 2.1769397763147444
best_error: 2.1769397102028067
best_error: 1.7481902200022659
best_error: 1.748190121045389
best_error: 1.6283606405525737
best_error: 1.6283605371826375
best_error: 1.6198834547515082
best_error: 1.619883363321773
best_error: 1.6148643472486524
best_error: 1.6148642925053311
best_error: 1.597614477409089
best_error: 1.5976144068359794
best_error: 1.5828991545744282
best_error: 1.582899082491243
best_error: 1.5402119632443496
best_error: 1.5402119266904817
best_error: 1.5149565119044754
best_error: 1.514956487863312
best_error: 1.513618384705469
best_error: 1.513618365297628
best_error: 1.5112820906641502
best_error: 1.5112820808811782
best_error: 1.50905229752888
best_error: 1.509052287853041
best_error: 1.5057138003447994
best_error: 1.5057137951547603
best_error: 1.5006445324039654
best_error: 1.5006445112311977
best_error: 1.4895953822378731
best_error: 1.4895953650204437
best_error: 1.4822908687297163
best_error: 1.4822908047156909
best_error: 1.482280518880589
best_error: 1.4822804517250217
best_error: 1.4821513393191095
best_error: 1.482151267285973
best_error: 1.4818279866817945
best_error: 1.4818279037488182
best_error: 1.4817669383531378
best_error: 1.4817668485150783
best_error: 1.481724016944237
best_error: 1.4817239255496828
best_error: 1.4775957298888485
best_error: 1.4775956754888566
best_error: 1.467434145155532
best_error: 1.467434124731614
best_error: 1.4569267921774172
best_error: 1.4569267703754338
best_error: 1.4481234498349482
best_error: 1.4481234310988875
best_error: 1.446743279875107
best_error: 1.4467432478779276
best_error: 1.4461233501004256
best_error: 1.4461233408628067
best_error: 1.445831313415674
best_error: 1.4458313066674777
best_error: 1.444821104143537
best_error: 1.4448210992450836
best_error: 1.4439926674924874
best_error: 1.4439926614245318
best_error: 1.4429876171152967
best_error: 1.4429876148457066
best_error: 1.4428282531935335
best_error: 1.4428282490566102
best_error: 1.4426430095607343
best_error: 1.4426430077325105
best_error: 1.4424785929425432
best_error: 1.44247858305982
best_error: 1.44245106908075
best_error: 1.4424510670018362
best_error: 1.4424342328176736
best_error: 1.442434232418944
best_error: 1.4424342322443369
best_error: 1.442434231780045
best_error: 1.4424042948656919
best_error: 1.4424042941082473
best_error: 1.4424042938504595
best_error: 1.4423502733088998
best_error: 1.44235026618945
best_error: 1.4422548962823662
best_error: 1.4422548961676063
best_error: 1.4422548901786398
best_error: 1.4419384749094704
best_error: 1.4419384731752292
best_error: 1.4419384693932622
best_error: 1.440556606224456
best_error: 1.4405565988593887
best_error: 1.4373700814100594
best_error: 1.4373700640714557
best_error: 1.4288731779536896
best_error: 1.4288731520316396
best_error: 1.4174463109458646
best_error: 1.4174462428020373
best_error: 1.382145404269354
best_error: 1.3821453488085027
best_error: 1.3790254160815223
best_error: 1.3790253603355516
best_error: 1.3505472834095014
best_error: 1.3505472766418916
best_error: 1.350547266613101
best_error: 1.3465415388879987
best_error: 1.3465415268211915
best_error: 1.3435911603484467
best_error: 1.3435911533114138
best_error: 1.3425168531276117
best_error: 1.342516849082813
best_error: 1.3424391660444888
best_error: 1.342439162242711
best_error: 1.342412245920137
best_error: 1.342412243439747
best_error: 1.3424054785592463
best_error: 1.3424054773727538
best_error: 1.3424033620067848
best_error: 1.342403361219966
best_error: 1.3423926595983504
best_error: 1.3423926593683655
best_error: 1.342392659209053
best_error: 1.3423704446663145
best_error: 1.3423704420543285
best_error: 1.342323717465379
best_error: 1.3423237154206678
best_error: 1.342130841686383
best_error: 1.342130837251178
best_error: 1.3416953638540423
best_error: 1.3416953606385074
best_error: 1.3400739120126364
best_error: 1.340073888649894
best_error: 1.3377521829453798
best_error: 1.3377521001983117
best_error: 1.3333941152989084
best_error: 1.3333940624465939
best_error: 1.3308028899692195
best_error: 1.3308028558096603
best_error: 1.3292883751292153
best_error: 1.3292883398195046
best_error: 1.3282789054913133
best_error: 1.328278891729798
best_error: 1.3267066333495483
best_error: 1.3267066263005236
best_error: 1.3246103824623723
best_error: 1.3246103291283728
best_error: 1.3231805150191185
best_error: 1.323180466090926
best_error: 1.3207162187617425
best_error: 1.3207162123282474
best_error: 1.3193109761488753
best_error: 1.319310915428922
best_error: 1.318444004776832
best_error: 1.3184440017541035
best_error: 1.3182972103098072
best_error: 1.318297206527305
best_error: 1.3180555347472973
best_error: 1.3180555228416693
best_error: 1.3179842951357603
best_error: 1.3179842917179088
best_error: 1.3179212145399553
best_error: 1.3179212143581354
best_error: 1.317906192874088
best_error: 1.31790619281844
best_error: 1.317906192729339
best_error: 1.3178901817322168
best_error: 1.3178901788624144
best_error: 1.3178796943252515
best_error: 1.3178796905515262
best_error: 1.3178551965688023
best_error: 1.3178551875210278
best_error: 1.3178178572395334
best_error: 1.3178178484817784
best_error: 1.3177563064513063
best_error: 1.3177563037747826
best_error: 1.3177432850442585
best_error: 1.3177432843497487
best_error: 1.317732048625487
best_error: 1.3177320483565222
best_error: 1.3177308833503623
best_error: 1.317730883312034
best_error: 1.3177308293943575
best_error: 1.3177308292820504
best_error: 1.3177306715921226
best_error: 1.3177306714381267
best_error: 1.3177306658302825
best_error: 1.3177306656355257
