ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.703384390466912
best_error: 19.7033835218581
best_error: 5.078911590777241
best_error: 5.078911590628653
best_error: 5.078909205457484
best_error: 5.0789092054559974
best_error: 5.07890920545395
best_error: 5.07889966106353
best_error: 5.078899661062041
best_error: 5.078899661059995
best_error: 5.078861433567505
best_error: 5.078861433566009
best_error: 5.078861433563965
best_error: 5.078707719610403
best_error: 5.078707719608875
best_error: 5.078707719606843
best_error: 5.078079653335368
best_error: 5.078079653333709
best_error: 5.078079653331731
best_error: 5.075330589716816
best_error: 5.0753305897144125
best_error: 5.075330589712813
best_error: 5.057034426720142
best_error: 5.057034426689966
best_error: 5.056771807852713
best_error: 5.056771807821508
best_error: 5.056364912360598
best_error: 5.056364912327739
best_error: 4.856769468782655
best_error: 4.8567694542850255
best_error: 4.825000951074305
best_error: 4.825000932974413
best_error: 4.781439444788733
best_error: 4.781439421511528
best_error: 4.333313019177853
best_error: 4.333312951695737
best_error: 4.065009272118452
best_error: 4.065009139836907
best_error: 3.9620531290452026
best_error: 3.962052976981654
best_error: 3.8976777030092014
best_error: 3.897677635597526
best_error: 3.842862730305092
best_error: 3.842862635239736
best_error: 3.6942941363581285
best_error: 3.694293929859027
best_error: 3.6060152121154054
best_error: 3.606015166123208
best_error: 3.5717108507107183
best_error: 3.571710737667229
best_error: 3.5589192914400614
best_error: 3.558919282557684
best_error: 3.5586857980141
best_error: 3.5586857892571198
best_error: 3.558592177841515
best_error: 3.5585921735122037
best_error: 3.558485712330126
best_error: 3.5584857117506306
best_error: 3.558485710261402
best_error: 3.5582071803465016
best_error: 3.5582071717330677
best_error: 3.557851022591359
best_error: 3.5578510043599763
best_error: 3.55697171063084
best_error: 3.5569716788298824
best_error: 3.5551360577564513
best_error: 3.55513600920023
best_error: 3.5507551059250626
best_error: 3.550755034593783
best_error: 3.5325752928227767
best_error: 3.5325751681661317
best_error: 3.485388003300885
best_error: 3.4853878416654407
best_error: 3.028283912622971
best_error: 3.0282837699041876
best_error: 2.637943182356395
best_error: 2.6379429592530452
best_error: 2.63700430995624
best_error: 2.637004242831408
best_error: 2.621883841410158
best_error: 2.621883716853422
best_error: 2.605044728901624
best_error: 2.605044453490427
best_error: 2.575299338089148
best_error: 2.5752990561661475
best_error: 2.5695873901824395
best_error: 2.569587217781297
best_error: 2.5492536191524544
best_error: 2.5492533811271825
best_error: 2.5071927601088153
best_error: 2.5071926585105975
best_error: 2.504359343047741
best_error: 2.504359338817279
best_error: 2.5013677518589925
best_error: 2.5013677517933206
best_error: 2.501367751376084
best_error: 2.501367748473247
best_error: 2.5013677478195935
best_error: 2.501175859641056
best_error: 2.5011758140435942
best_error: 2.500119896301359
best_error: 2.5001198717815902
best_error: 2.4995211912429576
best_error: 2.499521185334277
best_error: 2.499117670784281
best_error: 2.499117662365383
best_error: 2.4989385985221038
best_error: 2.4989385872137557
best_error: 2.4979489938925488
best_error: 2.4979489723135675
best_error: 2.49644739088355
best_error: 2.4964473643811065
best_error: 2.4874227789904317
best_error: 2.487422736670549
best_error: 2.472609259122706
best_error: 2.4726092117616245
best_error: 2.4667826591141364
best_error: 2.4667826035230145
best_error: 2.463468031375587
best_error: 2.46346793605704
best_error: 2.4285958180629574
best_error: 2.4285957368478033
best_error: 2.3517866153150906
best_error: 2.3517865397411173
best_error: 2.259953022597915
best_error: 2.2599529517999564
best_error: 2.219651243000263
best_error: 2.219651182191061
best_error: 2.204621367434639
best_error: 2.2046213396619168
best_error: 2.204061583773257
best_error: 2.204061552730069
best_error: 2.2030377709702718
best_error: 2.2030377345213306
best_error: 2.201518995695909
best_error: 2.2015189861534266
best_error: 2.200340768305704
best_error: 2.200340753005675
best_error: 2.199227291921995
best_error: 2.1992272691063017
best_error: 2.1982298448513897
best_error: 2.1982298331342993
best_error: 2.192597776187838
best_error: 2.1925977248275106
best_error: 2.187929640767932
best_error: 2.187929598526735
best_error: 2.179439641280196
best_error: 2.1794396170841943
best_error: 2.1766815828705344
best_error: 2.1766815726462863
best_error: 2.1745551489589783
best_error: 2.1745551485759664
best_error: 2.174555148535786
best_error: 2.174075247678742
best_error: 2.174075164290912
best_error: 2.1728396682615836
best_error: 2.172839662993306
best_error: 2.1711251871838475
best_error: 2.1711251543470804
best_error: 2.1694964874389497
best_error: 2.169496457416052
best_error: 2.1692734000681564
best_error: 2.169273378286442
best_error: 2.169233356464235
best_error: 2.1692333527592846
best_error: 2.16916021313486
best_error: 2.1691602119722244
best_error: 2.169139104594733
best_error: 2.169139100782641
best_error: 2.169129024229327
best_error: 2.169129022056771
best_error: 2.169126120431872
best_error: 2.169126119870279
best_error: 2.1691243264183653
best_error: 2.169124325823803
best_error: 2.169122580461531
best_error: 2.169122579753323
best_error: 2.1691120297838653
best_error: 2.169112029160911
best_error: 2.169073707611076
best_error: 2.1690737070324424
best_error: 2.1690737068897987
best_error: 2.1689995371085926
best_error: 2.168999536950307
best_error: 2.1689995364186774
best_error: 2.1687664740704964
best_error: 2.1687664734125214
best_error: 2.168011175672829
best_error: 2.1680111694469018
best_error: 2.1672665017115067
best_error: 2.1672664884752644
best_error: 2.166182323320794
best_error: 2.1661822994871374
best_error: 2.165344216989066
best_error: 2.165344207449561
best_error: 2.164179263427249
best_error: 2.16417923872921
best_error: 2.1638846781513172
best_error: 2.163884669787484
best_error: 2.1638113202559186
best_error: 2.1638113020106498
best_error: 2.1634913125923756
best_error: 2.1634913101163
best_error: 2.1633729219944025
best_error: 2.1633729218459314
best_error: 2.1633729216845423
best_error: 2.163172472792302
best_error: 2.1631724695597128
best_error: 2.163168347879088
best_error: 2.163168347707631
best_error: 2.163031654853329
best_error: 2.1630316533978147
best_error: 2.162963425710258
best_error: 2.1629634256868844
best_error: 2.1629634254651124
best_error: 2.1628105665822654
best_error: 2.162810566512045
best_error: 2.1627352477193553
best_error: 2.1627352466800995
best_error: 2.162733944995002
best_error: 2.1627339442058258
best_error: 2.162731126885752
best_error: 2.1627311262949283
best_error: 2.162730990353363
best_error: 2.162730990174681
best_error: 2.162730884277078
best_error: 2.1627308840574626
best_error: 2.1627307319830726
best_error: 2.162730731848573
best_error: 2.1627305556994267
best_error: 2.1627305552542633
best_error: 2.162730277137194
best_error: 2.16273027703803
best_error: 2.162730276628598
best_error: 2.1627295299223928
best_error: 2.1627295290891317
best_error: 2.1627258244611123
best_error: 2.1627258241474854
best_error: 2.162722357275923
best_error: 2.1627223566607365
best_error: 2.162716508341113
best_error: 2.1627165046170203
best_error: 2.1627093673575133
best_error: 2.1627093636041668
best_error: 2.1626904216893195
best_error: 2.162690417933012
best_error: 2.1626589098130307
best_error: 2.162658906324055
best_error: 2.1626242108918228
best_error: 2.1626242100591653
best_error: 2.1625558921977897
best_error: 2.16255588936219
best_error: 2.1624310293119557
best_error: 2.162431028330306
best_error: 2.162004721439132
best_error: 2.162004713351671
best_error: 2.1608099609484572
best_error: 2.1608099554257767
best_error: 2.159590615344645
best_error: 2.159531449459161
best_error: 2.15953144941896
