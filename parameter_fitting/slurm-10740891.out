ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.89539867925849
best_error: 8.895398665605214
best_error: 8.104714946323847
best_error: 8.104714872067966
best_error: 3.966060352415229
best_error: 3.9660599841259834
best_error: 3.119057215550436
best_error: 3.119056977502002
best_error: 2.8754287321080745
best_error: 2.875428684072166
best_error: 2.868265733950793
best_error: 2.868265709702504
best_error: 2.7373889061776
best_error: 2.737388906141334
best_error: 2.7373889056918506
best_error: 2.729681521163576
best_error: 2.7296812971838262
best_error: 2.6715082513033224
best_error: 2.6715082512887864
best_error: 2.6715082359759945
best_error: 2.6292470671478054
best_error: 2.6292470671344224
best_error: 2.6292470613206063
best_error: 2.6070659008236436
best_error: 2.6070658900970454
best_error: 2.5644839470047587
best_error: 2.5644839448790115
best_error: 2.564483935291719
best_error: 2.5478453069276927
best_error: 2.5478453068925004
best_error: 2.5478452938052265
best_error: 2.530551441346407
best_error: 2.5305514413310193
best_error: 2.5305514309970074
best_error: 2.529792175502249
best_error: 2.529792175489282
best_error: 2.5297921629634765
best_error: 2.529534145401518
best_error: 2.52953414538872
best_error: 2.5295341327876972
best_error: 2.5295066171963474
best_error: 2.529506617183585
best_error: 2.5295066045694217
best_error: 2.5294876597269376
best_error: 2.5294876597142046
best_error: 2.5294876470979424
best_error: 2.5294714621350805
best_error: 2.5294714621223653
best_error: 2.529471449501065
best_error: 2.5294695671184915
best_error: 2.5294695671057887
best_error: 2.529469554476482
best_error: 2.5294666273361885
best_error: 2.529466627323493
best_error: 2.529466614688039
best_error: 2.529464529794852
best_error: 2.5294645297821607
best_error: 2.5294645171460313
best_error: 2.5294445968767874
best_error: 2.5294445968641224
best_error: 2.5294445842194206
best_error: 2.5294444109997385
best_error: 2.52944441098707
best_error: 2.5294443983424495
best_error: 2.5294443750900357
best_error: 2.529444375077371
best_error: 2.5294443624327627
best_error: 2.529444358627471
best_error: 2.529444358614807
best_error: 2.529444345970204
best_error: 2.5294443388447827
best_error: 2.5294443388321137
best_error: 2.5294443261875244
best_error: 2.529444320100045
best_error: 2.5294443114841827
best_error: 2.5294443108106863
best_error: 2.52944431038281
best_error: 2.52944431006021
best_error: 2.529376438070436
best_error: 2.5293763938558445
best_error: 2.5263368796431904
best_error: 2.526336856171871
best_error: 2.5144571548617973
best_error: 2.5144571548494157
best_error: 2.514457142035376
best_error: 2.5064664190146893
best_error: 2.5064664189921513
best_error: 2.5064664180092975
best_error: 2.4927254305136697
best_error: 2.4927254304942466
best_error: 2.4927254267515844
best_error: 2.4789536797821605
best_error: 2.478953679765489
best_error: 2.4789536761059576
best_error: 2.478953675171039
best_error: 2.4758912499988095
best_error: 2.4758912070335857
best_error: 2.4743246633997553
best_error: 2.474324659382016
best_error: 2.474324657982266
best_error: 2.4743246538139996
best_error: 2.4685675631121633
best_error: 2.468567563099492
best_error: 2.4685675616726774
best_error: 2.4685675535152494
best_error: 2.443571661798668
best_error: 2.4435716617808922
best_error: 2.4435716564707777
best_error: 2.4368995162782876
best_error: 2.436899516265237
best_error: 2.4368995049452526
best_error: 2.436882965440683
best_error: 2.4368829625977746
best_error: 2.4368829514250874
best_error: 2.420610472847142
best_error: 2.4206104305976375
best_error: 2.4109341672992066
best_error: 2.4109341316102
best_error: 2.4039763976484045
best_error: 2.403976382424398
best_error: 2.40368663390209
best_error: 2.403686617617312
best_error: 2.403557644942007
best_error: 2.4035576449293536
best_error: 2.4035576445083144
best_error: 2.403540499427985
best_error: 2.403540499415293
best_error: 2.403540499321563
best_error: 2.4035315214194775
best_error: 2.4035315214067707
best_error: 2.403530053197304
best_error: 2.4035300531845953
best_error: 2.4035271089141634
best_error: 2.4035270935947386
best_error: 2.4035268667250698
best_error: 2.4035268667123604
best_error: 2.403526861010525
best_error: 2.4035268609978164
best_error: 2.4035268558497496
best_error: 2.403526855837038
best_error: 2.403526853726771
best_error: 2.40352685371406
best_error: 2.4035268518940494
best_error: 2.403526851881341
best_error: 2.403526850642456
best_error: 2.4035268506297442
best_error: 2.4035268496244244
best_error: 2.4035268496117133
best_error: 2.40352684853424
best_error: 2.4035268485215244
best_error: 2.403526847854886
best_error: 2.403526847842178
best_error: 2.40352684705105
best_error: 2.4035268469320603
best_error: 2.403526846919345
best_error: 2.4035268457807315
best_error: 2.403526845768021
