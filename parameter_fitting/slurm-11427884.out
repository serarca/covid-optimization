ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.398990647605412
best_error: 19.39899047871305
best_error: 4.313855946445663
best_error: 4.313855944663928
best_error: 4.309036687914832
best_error: 4.30903668777944
best_error: 4.3090366863194856
best_error: 4.289172138450745
best_error: 4.289172138300549
best_error: 4.289172136820088
best_error: 4.198659120017133
best_error: 4.198659119794926
best_error: 4.198659118223535
best_error: 3.4117888360652713
best_error: 3.4117888336044215
best_error: 3.4117888325472956
best_error: 3.260632486899494
best_error: 3.2606324839256313
best_error: 3.2577990520286755
best_error: 3.2577990489398387
best_error: 3.256601011243254
best_error: 3.256601010843202
best_error: 3.256601008091828
best_error: 3.2534568241221122
best_error: 3.253456823134343
best_error: 3.253456820716006
best_error: 3.252032387949134
best_error: 3.252032386719965
best_error: 3.2520323844119923
best_error: 3.250588134923409
best_error: 3.2505881334450923
best_error: 3.2505881312459786
best_error: 3.2499457482497176
best_error: 3.2499457466899964
best_error: 3.249945744502237
best_error: 3.24929528662988
best_error: 3.2492952850010624
best_error: 3.249295282809084
best_error: 2.4191008345880003
best_error: 2.4191006827902872
best_error: 2.2895535703850625
best_error: 2.2895533932053587
best_error: 2.14567086666059
best_error: 2.1456708555963093
best_error: 2.145670802718556
best_error: 2.1446479652840025
best_error: 2.1446479188025562
best_error: 2.1440422511382344
best_error: 2.144042121673117
best_error: 2.110398084107209
best_error: 2.1103980179104003
best_error: 2.1089901743691026
best_error: 2.108990070939496
best_error: 2.0921578743488016
best_error: 2.092157838500672
best_error: 2.0920516376825393
best_error: 2.0920515078988524
best_error: 2.054463149936528
best_error: 2.0544631057005716
best_error: 2.0528318754750794
best_error: 2.05283176074232
best_error: 2.0277099184159812
best_error: 2.0277098857368774
best_error: 1.8519425942709302
best_error: 1.8519425925989585
best_error: 1.8519425477359617
best_error: 1.8024107843243056
best_error: 1.8024106113490512
best_error: 1.7108149155829881
best_error: 1.7108149084980522
best_error: 1.7101177253246478
best_error: 1.7101177196276283
best_error: 1.7099681818272676
best_error: 1.7099681816037167
best_error: 1.7099681805644875
best_error: 1.7098215052384775
best_error: 1.7098215040270994
best_error: 1.7098215039388405
best_error: 1.7093887081175436
best_error: 1.7093886999538142
best_error: 1.7080599126343676
best_error: 1.7080598994180491
best_error: 1.7013167369709914
best_error: 1.7013167084583443
best_error: 1.6860776178782881
best_error: 1.6860775725375012
best_error: 1.664663656539681
best_error: 1.664663604261465
best_error: 1.633495687310387
best_error: 1.6334956372275469
best_error: 1.5832073399417894
best_error: 1.5832072630279697
best_error: 1.5488785713484778
best_error: 1.548878564438231
best_error: 1.5429736165390613
best_error: 1.5429736156112523
best_error: 1.5429736135813588
best_error: 1.5375018294362406
best_error: 1.5375018101107996
best_error: 1.5361131092374793
best_error: 1.536113096030705
best_error: 1.535902506669939
best_error: 1.535902505591809
best_error: 1.5358246895561698
best_error: 1.5358246887908484
best_error: 1.5355496568906748
best_error: 1.5355496566640587
best_error: 1.5355496565361975
best_error: 1.5338167374906535
best_error: 1.533816734408717
best_error: 1.5305596976278337
best_error: 1.5305596922776352
best_error: 1.5232256784201967
best_error: 1.5232256672209976
best_error: 1.5116683116138088
best_error: 1.5116682999109738
best_error: 1.464153697524124
best_error: 1.4641536967013193
best_error: 1.4641536925741425
best_error: 1.3556594072485617
best_error: 1.3556594017438486
best_error: 1.3556567050241117
best_error: 1.3556566995209531
best_error: 1.3381601081881354
best_error: 1.3381600637029738
best_error: 1.3381599980446393
best_error: 1.338159953417067
best_error: 1.3371590778263158
best_error: 1.3371590260530422
best_error: 1.3371589843494227
best_error: 1.3367764443909886
best_error: 1.3367763873398166
best_error: 1.3367763732705606
best_error: 1.3366548814509887
best_error: 1.336654822185976
best_error: 1.3366548169270027
best_error: 1.336610337969145
best_error: 1.3366102772133517
best_error: 1.3366102753860238
best_error: 1.3365969656107861
best_error: 1.3365969035793857
best_error: 1.336596903097487
best_error: 1.3365934589389763
best_error: 1.336593396159584
best_error: 1.3365933960619
best_error: 1.3365925902569342
best_error: 1.3365925272965355
best_error: 1.336592527249243
best_error: 1.3365921584858154
best_error: 1.336592095495
best_error: 1.3233001726177298
best_error: 1.323300076356229
best_error: 1.3197286472610343
best_error: 1.3197286178644037
best_error: 1.31875333602654
best_error: 1.3187533300532528
best_error: 1.3149123461839367
best_error: 1.314912333001992
best_error: 1.2894171431982036
best_error: 1.2894170420128899
best_error: 1.2869317405433072
best_error: 1.2869316067507643
best_error: 1.2814130393900856
best_error: 1.2814129362751985
best_error: 1.2745469917895562
best_error: 1.2745468920876837
best_error: 1.2672606845877181
best_error: 1.2672606508090793
best_error: 1.2657577869037888
best_error: 1.2657577774355975
best_error: 1.264835068311484
best_error: 1.26483506814023
best_error: 1.2648350653467093
best_error: 1.2637641361283518
best_error: 1.2637641337834982
best_error: 1.2637641329685656
best_error: 1.2593498122777214
best_error: 1.259349801474386
best_error: 1.2565217116042449
best_error: 1.256521706284206
best_error: 1.2550767424009603
best_error: 1.2550767396060811
best_error: 1.2550767383274486
best_error: 1.254327325034207
best_error: 1.2543273199425482
best_error: 1.2505375258286184
best_error: 1.2505375200289164
best_error: 1.2358919610155432
best_error: 1.2358919600229255
best_error: 1.235891951901001
best_error: 1.2015400901377937
best_error: 1.2015400830843406
best_error: 1.2015400672387395
best_error: 1.1657881204399998
best_error: 1.1657880181140696
best_error: 1.157056094952728
best_error: 1.1570559717132038
best_error: 1.1548448843288903
best_error: 1.154844859695902
best_error: 1.1548448561912796
best_error: 1.154826243319352
best_error: 1.154826218218361
best_error: 1.154826215820182
best_error: 1.1331052297500261
best_error: 1.1331051644276846
best_error: 1.108316753013643
best_error: 1.1083166853861166
best_error: 1.0961793053407431
best_error: 1.0961792911224606
best_error: 1.095411979985521
best_error: 1.095411974410541
best_error: 1.094837115126177
best_error: 1.0948370992136787
best_error: 1.0944230342369043
best_error: 1.0944230194170048
best_error: 1.0934985060580462
best_error: 1.0934984814827076
best_error: 1.0931012085019647
best_error: 1.0931012030650065
best_error: 1.093094814156439
best_error: 1.093094811642609
best_error: 1.0930671411154051
best_error: 1.093067139907225
best_error: 1.0930550992797385
best_error: 1.093055099136587
best_error: 1.093053680562195
best_error: 1.093053680154376
best_error: 1.0930504557923306
best_error: 1.0930504556407463
best_error: 1.0930485761141526
best_error: 1.0930485759625281
best_error: 1.0930446095885826
best_error: 1.0930446085705259
best_error: 1.0930402387588798
best_error: 1.0930402380338597
best_error: 1.0930194861528364
best_error: 1.093019482855135
best_error: 1.093000472857193
best_error: 1.093000468992793
best_error: 1.092943473729395
best_error: 1.0929434728213263
best_error: 1.0929030601137224
best_error: 1.09290305870182
best_error: 1.0926485551480718
best_error: 1.0926485494622686
best_error: 1.092438114535885
best_error: 1.0924381104622192
best_error: 1.0917441590333858
best_error: 1.0917441583378114
best_error: 1.0901111426928747
best_error: 1.0901111296072934
best_error: 1.0896468656595872
best_error: 1.0896468588161938
best_error: 1.0890681943373752
best_error: 1.0890681867784244
best_error: 1.0889067231609915
best_error: 1.088906718879545
best_error: 1.088764544832506
best_error: 1.0887645414637517
best_error: 1.0886991560040238
best_error: 1.0886991490782985
best_error: 1.0886019635761786
best_error: 1.088601961159215
best_error: 1.088559243261512
best_error: 1.0885592420122634
best_error: 1.0885479272288614
best_error: 1.088547926990728
best_error: 1.0885387550988805
best_error: 1.088538754649496
best_error: 1.0884886455037104
best_error: 1.0884886450325986
best_error: 1.0884453397104499
best_error: 1.0884453370170313
