ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.244061524016743
best_error: 11.244061518824283
best_error: 10.953827040173604
best_error: 10.953827002681772
best_error: 7.596562266866864
best_error: 7.596561843955668
best_error: 6.369310287266261
best_error: 6.369310022604286
best_error: 6.29800821697429
best_error: 6.298008216974279
best_error: 6.278836836504184
best_error: 6.2788367772671805
best_error: 6.2732194225124704
best_error: 6.273219390414101
best_error: 6.272135597472174
best_error: 6.272135589877936
best_error: 6.272082232245078
best_error: 6.2720822322450465
best_error: 6.27208222839438
best_error: 6.27197580312745
best_error: 6.271975803127418
best_error: 6.271975799272386
best_error: 6.271733290161515
best_error: 6.271733282463284
best_error: 6.270755659854494
best_error: 6.2707556516542935
best_error: 6.267306329473193
best_error: 6.267306297402857
best_error: 6.258143937936512
best_error: 6.258143859295395
best_error: 6.250991434994793
best_error: 6.250991354424492
best_error: 6.2053466233894925
best_error: 6.2053465211385195
best_error: 6.009313273887346
best_error: 6.0093132738873365
best_error: 5.996681605541694
best_error: 5.9966816055416805
best_error: 5.970061185212041
best_error: 5.970061175087173
best_error: 5.970061158586268
best_error: 5.967502090679534
best_error: 5.967502082046255
best_error: 5.967502064135338
best_error: 5.957461024163244
best_error: 5.957461022164569
best_error: 5.957460998229104
best_error: 5.941723646979617
best_error: 5.941723646979596
best_error: 5.9060176501864
best_error: 5.906017650186377
best_error: 5.906017641017111
best_error: 5.543278689900123
best_error: 5.5432786899001
best_error: 5.407088274705228
best_error: 5.407088274705218
best_error: 5.128693940985588
best_error: 5.128693758577125
best_error: 4.9321970709811
best_error: 4.93219702972466
best_error: 4.931486827072739
best_error: 4.9314868233300695
best_error: 4.931486813710295
best_error: 4.929330263943082
best_error: 4.929330263943073
best_error: 4.929330262785593
best_error: 4.921876576034826
best_error: 4.921876576034813
best_error: 4.921876574332785
best_error: 4.889232685235406
best_error: 4.889232685235387
best_error: 4.875251025388405
best_error: 4.875251025388385
best_error: 4.875251023610464
best_error: 4.852893685357254
best_error: 4.852893685357233
best_error: 4.852893577148652
best_error: 4.851444035344148
best_error: 4.8514440353441275
best_error: 4.8514440323750145
best_error: 4.8514440310755536
best_error: 4.754773306546935
best_error: 4.754773304027074
best_error: 4.754773295615802
best_error: 4.705993571946675
best_error: 4.705993571946658
best_error: 4.691941360724803
best_error: 4.6919413276567985
best_error: 4.64395394050472
best_error: 4.643953940504696
best_error: 4.643953926242355
best_error: 4.6360516500276585
best_error: 4.636051650027639
best_error: 4.636051632789401
best_error: 4.633522925744066
best_error: 4.633522906917294
best_error: 4.6333550604960845
best_error: 4.633355060496069
best_error: 4.63278631557563
best_error: 4.632786315575614
best_error: 4.632749117095517
best_error: 4.632749113224868
best_error: 4.6327086063337575
best_error: 4.6327086033382265
best_error: 4.632701790145165
best_error: 4.632701788259121
best_error: 4.632700345045869
best_error: 4.632700343149025
best_error: 4.632700053474365
best_error: 4.632700051599611
best_error: 4.632699832846527
best_error: 4.632699830971148
best_error: 4.632699661071191
best_error: 4.632699659176387
best_error: 4.632699083350645
best_error: 4.6326990814391635
best_error: 4.6326990691317205
best_error: 4.632699067220198
best_error: 4.632699056393654
best_error: 4.632699054482096
best_error: 4.6326990488224995
best_error: 4.632699046910924
best_error: 4.63269904218429
best_error: 4.632699040272698
best_error: 4.632699037402144
best_error: 4.6326990354905355
best_error: 4.632699033484723
best_error: 4.632699031573104
best_error: 4.632699027701342
best_error: 4.632699025789708
best_error: 4.632699022402135
best_error: 4.632699020490487
best_error: 4.632699019760149
best_error: 4.632699017848491
best_error: 4.6326990173329055
best_error: 4.632699015421242
