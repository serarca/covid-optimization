ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.011722771054824
best_error: 24.011722468888564
best_error: 4.7279826435412176
best_error: 4.727982642453593
best_error: 4.727582844137758
best_error: 4.727582844129046
best_error: 4.727582844081034
best_error: 4.725972689215919
best_error: 4.725972689206989
best_error: 4.7259726891588345
best_error: 4.719357083744134
best_error: 4.719357083734242
best_error: 4.719357083685541
best_error: 4.689498591327154
best_error: 4.689498591311269
best_error: 4.689498591261122
best_error: 4.390622889841263
best_error: 4.390622888801571
best_error: 4.3496280578819615
best_error: 4.349628056367027
best_error: 4.289135904201303
best_error: 4.289135901755286
best_error: 3.3190954426223334
best_error: 3.3190953267682617
best_error: 3.2565814516868885
best_error: 3.2565814189497466
best_error: 3.095707829683574
best_error: 3.0957077915512228
best_error: 3.0090135721371043
best_error: 3.0090135414072803
best_error: 3.0049043212901285
best_error: 3.0049042574217792
best_error: 2.9022947631084657
best_error: 2.902294706265283
best_error: 2.8073577157600216
best_error: 2.807357663555402
best_error: 2.4695731935450542
best_error: 2.4695730587303513
best_error: 2.362820775634501
best_error: 2.3628206807101746
best_error: 2.2909742596068394
best_error: 2.290974191494972
best_error: 2.2401765913314295
best_error: 2.24017654099692
best_error: 2.234278504733689
best_error: 2.234278283042513
best_error: 2.2075385463613144
best_error: 2.2075385171323636
best_error: 2.198160390942418
best_error: 2.1981603907625438
best_error: 2.1981603905244076
best_error: 2.1981603847061844
best_error: 2.190583103538918
best_error: 2.1905830864161895
best_error: 2.1787894737042097
best_error: 2.1787894161818424
best_error: 2.1711734273665124
best_error: 2.1711733614805486
best_error: 2.1605482711861494
best_error: 2.1605482057151546
best_error: 2.144770642777996
best_error: 2.1447705591009423
best_error: 2.131886172039922
best_error: 2.1318860399061323
best_error: 2.114598098639551
best_error: 2.1145980964836726
best_error: 2.1145979682305183
best_error: 1.729429110115241
best_error: 1.7294289330174775
best_error: 1.6463655661594712
best_error: 1.6463655149551266
best_error: 1.6089331988016593
best_error: 1.608933075132191
best_error: 1.5153184514150666
best_error: 1.5153184474720733
best_error: 1.5153184447839798
best_error: 1.4826988042450169
best_error: 1.4826988021215193
best_error: 1.4826988003385144
best_error: 1.4781370965594858
best_error: 1.4781370945052694
best_error: 1.478137092984581
best_error: 1.4758786725532103
best_error: 1.4758786531220123
best_error: 1.4750713250126573
best_error: 1.4750713246439002
best_error: 1.4750713223576626
best_error: 1.4749883061880806
best_error: 1.4749883027969535
best_error: 1.4749181805641842
best_error: 1.4749181790140455
best_error: 1.4748275569923477
best_error: 1.4748275550877188
best_error: 1.4747930924058772
best_error: 1.4747930910288414
best_error: 1.4746382846516917
best_error: 1.4746382845772419
best_error: 1.4746382841791523
best_error: 1.4746382839580503
best_error: 1.4739030687194588
best_error: 1.473903063489567
best_error: 1.4729236493347155
best_error: 1.4729236441763303
best_error: 1.4670761281342386
best_error: 1.4670761270820925
best_error: 1.4670761249366902
best_error: 1.4668850715863326
best_error: 1.4668850597362484
best_error: 1.4629710587984843
best_error: 1.4629710553896422
best_error: 1.4629710497508353
best_error: 1.462733807338264
best_error: 1.4627337977357338
best_error: 1.4597979842183917
best_error: 1.4597979731560184
best_error: 1.4588283489929756
best_error: 1.4588282965468264
best_error: 1.4585740005034884
best_error: 1.4585739996664873
best_error: 1.4585739639239035
best_error: 1.4574692292535927
best_error: 1.4574692268752816
best_error: 1.457469189658046
best_error: 1.4523120941522376
best_error: 1.4523120665287317
best_error: 1.4513569131508677
best_error: 1.4513568970795658
best_error: 1.4506618688806432
best_error: 1.4506618688790607
best_error: 1.4506618688298096
best_error: 1.4506618683296102
best_error: 1.4506618681021168
best_error: 1.4506618675652099
best_error: 1.4503306637664173
best_error: 1.4503306607883
best_error: 1.450264912596329
best_error: 1.4502649115906818
best_error: 1.450204000840599
best_error: 1.4502040007865864
best_error: 1.450204000254211
best_error: 1.4502040000511962
best_error: 1.4499940191499545
best_error: 1.4499940190839373
best_error: 1.4499940185796232
best_error: 1.449994018348018
best_error: 1.4494771398055122
best_error: 1.4494771346930044
best_error: 1.4485602997889695
best_error: 1.4485602642992936
best_error: 1.4466604664764895
best_error: 1.4466604484965884
best_error: 1.444301393460166
best_error: 1.4443013900892259
best_error: 1.4441190171122649
best_error: 1.4441190069842784
best_error: 1.4436475527631754
best_error: 1.443647545175138
best_error: 1.4434062565681893
best_error: 1.44340624791931
best_error: 1.443351529313824
best_error: 1.443351528351509
best_error: 1.4433515239545285
best_error: 1.443149410246907
best_error: 1.443149406821006
best_error: 1.4430163529568674
best_error: 1.443016350348175
best_error: 1.4429364837578516
best_error: 1.4429364819895059
best_error: 1.4421343819910188
best_error: 1.4421343812853666
best_error: 1.442134381132461
best_error: 1.442134380974172
best_error: 1.4421343807001292
best_error: 1.4396486492905336
best_error: 1.4396486253964214
best_error: 1.4376545627814408
best_error: 1.4376545338366449
best_error: 1.4347547001850938
best_error: 1.4347546881148414
best_error: 1.4340124464326374
best_error: 1.4340124271642023
best_error: 1.4336776415058012
best_error: 1.4336776293055482
best_error: 1.4334890882126563
best_error: 1.433489078526101
best_error: 1.4333096411036843
best_error: 1.4333096361826765
best_error: 1.4329287551941285
best_error: 1.4329287493962763
best_error: 1.432334636519272
best_error: 1.4323346268716588
best_error: 1.4314706470338572
best_error: 1.4314706357373224
best_error: 1.430820799602892
best_error: 1.4308207806148008
best_error: 1.4301606174320785
best_error: 1.4301606117798957
best_error: 1.429988765454421
best_error: 1.4299887567272154
best_error: 1.4294804067469038
best_error: 1.429480398502041
best_error: 1.429236179124431
best_error: 1.4292361689883422
best_error: 1.4290215070208
best_error: 1.4290214820506764
best_error: 1.427993110611076
best_error: 1.4279930847503386
best_error: 1.425677052576238
best_error: 1.425676978050432
best_error: 1.4247761910618757
best_error: 1.4247761435390347
best_error: 1.4243600448045135
best_error: 1.424359979441462
best_error: 1.424112950648936
best_error: 1.4241128706049029
best_error: 1.424106844404396
best_error: 1.424106760765453
best_error: 1.42171928517921
best_error: 1.4217192446312732
best_error: 1.4215123870639101
best_error: 1.421512331504172
best_error: 1.4204743292465676
best_error: 1.4204743136303586
best_error: 1.4204140914805925
best_error: 1.4204140713195235
best_error: 1.4203746114216012
best_error: 1.4203745888724069
best_error: 1.4189791368943534
best_error: 1.4189791320500789
best_error: 1.4161765688731192
best_error: 1.416176548668928
best_error: 1.4150628985216633
best_error: 1.4150628984421056
best_error: 1.415062898285068
best_error: 1.4150628974399055
best_error: 1.4150628972975106
best_error: 1.4135387113761402
best_error: 1.4135387112926432
best_error: 1.4135387110160906
best_error: 1.4135387104944752
best_error: 1.4116437257625063
best_error: 1.4116437214642312
best_error: 1.401703224169025
best_error: 1.401703173042765
best_error: 1.3994993265125724
best_error: 1.3994993148041601
best_error: 1.3981820979294781
best_error: 1.398182080254594
best_error: 1.3978911515565584
best_error: 1.3978911511880185
best_error: 1.3978140782670079
best_error: 1.3978140780890862
best_error: 1.3977543843808866
best_error: 1.3977543841022035
best_error: 1.39733929695815
best_error: 1.3973392793962391
best_error: 1.396913942510505
best_error: 1.3969139243516508
best_error: 1.3956357865852613
best_error: 1.3956357852413674
best_error: 1.395555676984129
best_error: 1.395555673730626
best_error: 1.395482578636204
best_error: 1.395482576852879
best_error: 1.3954467370032433
best_error: 1.3954467354918014
