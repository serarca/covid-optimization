ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.953183145941045
best_error: 10.953183138703633
best_error: 10.644154587345147
best_error: 10.64415454692436
best_error: 8.318527061483653
best_error: 8.318526736533752
best_error: 6.129257735167856
best_error: 6.12925734260976
best_error: 5.76513065635597
best_error: 5.765130629789576
best_error: 5.764544482907162
best_error: 5.764544482439833
best_error: 5.764544475919548
best_error: 5.763597052843937
best_error: 5.763597052843856
best_error: 5.76359704800802
best_error: 5.743696013480535
best_error: 5.743695679415557
best_error: 5.687557505390655
best_error: 5.687557440371187
best_error: 5.65977677478101
best_error: 5.6597767747809815
best_error: 5.618328249216563
best_error: 5.618328249216469
best_error: 5.618328233759959
best_error: 5.5313175138781245
best_error: 5.531317513878066
best_error: 5.520899009574414
best_error: 5.520899009574361
best_error: 5.350757233571236
best_error: 5.350757233571186
best_error: 4.873374818115488
best_error: 4.873374818115434
best_error: 4.670613151885906
best_error: 4.670613151885828
best_error: 4.670613122423338
best_error: 4.639176853533514
best_error: 4.639176853533465
best_error: 4.639176852653904
best_error: 4.639176852624522
best_error: 4.636854856732832
best_error: 4.636854856732789
best_error: 4.6368548555732465
best_error: 4.636478222890972
best_error: 4.636478222890928
best_error: 4.636478221717898
best_error: 4.636455579280791
best_error: 4.636455566102663
best_error: 4.636450840457031
best_error: 4.63645084045699
best_error: 4.636450839283648
best_error: 4.636449898765553
best_error: 4.6364498855854155
best_error: 4.636441170509196
best_error: 4.6364411705091495
best_error: 4.636441169332836
best_error: 4.636400381849068
best_error: 4.636400381849023
best_error: 4.636400380668768
best_error: 4.636239898226586
best_error: 4.636239898226544
best_error: 4.63623989806436
best_error: 4.636239897030267
best_error: 4.63564707202763
best_error: 4.63564707202758
best_error: 4.635647069364
best_error: 4.6254831753613885
best_error: 4.6254831753613255
best_error: 4.625483152473684
best_error: 4.624704560109963
best_error: 4.624704560109896
best_error: 4.624704541236332
best_error: 4.618206065147613
best_error: 4.618206065147549
best_error: 4.6182060496373
best_error: 4.615473427145666
best_error: 4.615473427145598
best_error: 4.603980462977919
best_error: 4.603980462977872
best_error: 4.60230268093142
best_error: 4.6023026809313805
best_error: 4.596846055575853
best_error: 4.596846055575807
best_error: 4.569209296294924
best_error: 4.569209296294884
best_error: 4.520607729084625
best_error: 4.5206077290846
best_error: 4.520607725239371
best_error: 4.431477222122951
best_error: 4.431477222122912
best_error: 4.427865768599028
best_error: 4.427865511786497
best_error: 4.33854987386834
best_error: 4.338549856882456
best_error: 4.33854984874847
best_error: 4.3367378095665785
best_error: 4.336737809566537
best_error: 4.335208642261812
best_error: 4.3352086233673255
best_error: 4.334928274657372
best_error: 4.334928273182846
best_error: 4.334915342718585
best_error: 4.334915342057834
best_error: 4.33491523486598
best_error: 4.334915234596938
best_error: 4.334914742170411
best_error: 4.334914741766347
best_error: 4.33491370896061
best_error: 4.334913708523615
best_error: 4.334912411648916
best_error: 4.3349124113818185
best_error: 4.334912398422953
best_error: 4.334912398155577
best_error: 4.334912385362369
best_error: 4.3349123850947215
best_error: 4.334912366008165
best_error: 4.3349123657401165
best_error: 4.334912345607315
best_error: 4.3349123453388465
best_error: 4.334911822595782
best_error: 4.334911822347433
best_error: 4.334911817722618
best_error: 4.334911817474142
best_error: 4.334911812872206
best_error: 4.3349118126236075
best_error: 4.334911810401996
best_error: 4.334911810153334
best_error: 4.334911807945726
best_error: 4.334911807697004
best_error: 4.3349118066808305
best_error: 4.334911806432072
best_error: 4.334911805423813
best_error: 4.3349118051750235
best_error: 4.334911804758267
best_error: 4.334911804509463
best_error: 4.334911804097313
best_error: 4.334911803848489
best_error: 4.334911803723718
best_error: 4.334911803474884
best_error: 4.334911803353169
best_error: 4.334911803104326
best_error: 4.3349118028562845
best_error: 4.3349118026111775
best_error: 4.334911802519941
best_error: 4.334911802271077
best_error: 4.334911786927693
best_error: 4.334911786730987
best_error: 4.3349117865954145
best_error: 4.3349117863987
best_error: 4.334911786265185
best_error: 4.334911786068465
best_error: 4.3349117859012605
best_error: 4.334911785735106
best_error: 4.334911785650023
best_error: 4.334911785565492
best_error: 4.334911785521152
best_error: 4.334911785477116
best_error: 4.334911785452756
best_error: 4.334911785428583
best_error: 4.334911785413278
best_error: 4.334911785398127
best_error: 4.334911785382143
best_error: 4.334911784837216
best_error: 4.334911784837169
best_error: 4.334911784818125
best_error: 4.334911784770421
