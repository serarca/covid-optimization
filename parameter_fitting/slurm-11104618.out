ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 103.09667688933253
best_error: 103.09667680420253
best_error: 103.09667672316166
best_error: 18.144354181565546
best_error: 18.144354181561017
best_error: 18.144354171322156
best_error: 18.113945368630876
best_error: 18.11394536862612
best_error: 18.113945357279768
best_error: 17.948169875212553
best_error: 17.948169875200648
best_error: 17.9481698559701
best_error: 14.526992140412334
best_error: 14.526992138311277
best_error: 14.526992138038993
best_error: 14.526991360075767
best_error: 14.243812420811409
best_error: 14.243812414483218
best_error: 14.243812272871185
best_error: 13.957166674428095
best_error: 13.957166668630018
best_error: 13.957166664469637
best_error: 13.957166541290558
best_error: 13.945717132031655
best_error: 13.945717122051253
best_error: 13.945717118124731
best_error: 13.823469878608453
best_error: 13.82346986698209
best_error: 13.823469864078602
best_error: 13.678393317256507
best_error: 13.67839330423148
best_error: 13.678393301839783
best_error: 13.248074028249762
best_error: 13.248074020747435
best_error: 13.248074005599964
best_error: 13.182453928063918
best_error: 13.182453914100414
best_error: 13.18245390700762
best_error: 13.080174720673647
best_error: 13.0801747145734
best_error: 13.080174698555544
best_error: 12.184720244053665
best_error: 12.184720231048631
best_error: 12.184720222133889
best_error: 11.772473067326983
best_error: 11.77247303480317
best_error: 11.484912042984288
best_error: 11.48491201769625
best_error: 11.484912012619118
best_error: 11.161394731831335
best_error: 11.161394718230614
best_error: 11.161394714557531
best_error: 11.15439767401926
best_error: 11.154397650761783
best_error: 10.651812599357914
best_error: 10.651812585604727
best_error: 10.651812584928892
best_error: 10.473780802795421
best_error: 10.473780462423754
best_error: 10.444734254257678
best_error: 10.444734252389482
best_error: 10.444734244591412
best_error: 10.444734238489884
best_error: 10.443276149073393
best_error: 10.443276146539896
best_error: 10.44327614601115
best_error: 10.44327614438637
best_error: 10.44327613498253
best_error: 10.436778536700837
best_error: 10.436778534051903
best_error: 10.43677853364148
best_error: 10.43677853270422
best_error: 10.436778524242541
best_error: 10.41060373142212
best_error: 10.410603726655602
best_error: 10.410603726549995
best_error: 10.410603719050027
best_error: 10.346646325380409
best_error: 10.34664631885828
best_error: 10.346646313356363
best_error: 10.332964250116953
best_error: 10.332963998192206
best_error: 10.324971148772903
best_error: 10.324971143054652
best_error: 10.324971138748657
best_error: 10.237005225072775
best_error: 10.237005204262417
best_error: 10.202759826186988
best_error: 10.202759805940426
best_error: 10.171869948802652
best_error: 10.171869930040645
best_error: 10.160841313721459
best_error: 10.160841295640179
best_error: 10.159459598868075
best_error: 10.159459580844358
best_error: 10.159175600352949
best_error: 10.159175460858929
best_error: 10.154952988103268
best_error: 10.15495296991335
best_error: 10.138138539904158
best_error: 10.138138522198924
best_error: 10.089038711454679
best_error: 10.089038695387114
best_error: 10.04652262066339
best_error: 10.0465226064851
best_error: 9.97659710729652
best_error: 9.976597103218811
best_error: 9.976597063857527
best_error: 9.95334377207191
best_error: 9.953343687272794
best_error: 9.648912290044066
best_error: 9.648912261641623
best_error: 9.624478279243958
best_error: 9.624478256342286
best_error: 9.617331763748258
best_error: 9.617331743837292
best_error: 9.61173058901083
best_error: 9.611730569446824
best_error: 9.608465867330592
best_error: 9.608465848099858
best_error: 9.60767146764742
best_error: 9.607671393995277
best_error: 9.606268363180597
best_error: 9.606268344067331
best_error: 9.605592330957462
best_error: 9.60559225701026
best_error: 9.60529462848843
best_error: 9.60529461003027
best_error: 9.605289041665504
best_error: 9.605289023207515
best_error: 9.605287810614495
best_error: 9.605287736599047
best_error: 9.605287650645542
best_error: 9.605287632187585
best_error: 9.6049780894531
best_error: 9.604978014579283
best_error: 9.604312225378186
best_error: 9.604311828383002
best_error: 9.603832895436648
best_error: 9.603832823952665
best_error: 9.60380380348084
best_error: 9.603803731989679
best_error: 9.603799066472426
best_error: 9.60379899497945
best_error: 9.603796855124967
best_error: 9.60379678363114
best_error: 9.603795824805706
best_error: 9.603795753311484
best_error: 9.603795345441132
best_error: 9.60379527394673
best_error: 9.603795179228786
best_error: 9.603795107734314
best_error: 9.6037950766062
best_error: 9.603795005111689
best_error: 9.60379500234008
best_error: 9.60379493084554
best_error: 9.60379489595182
best_error: 9.60379486901726
best_error: 9.603794857504123
best_error: 9.6037948217773
