ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.160293069389954
best_error: 23.160292437706907
best_error: 4.8965420802471025
best_error: 4.896542079535317
best_error: 4.896458473134706
best_error: 4.896458473130107
best_error: 4.8964584731248175
best_error: 4.896123232129423
best_error: 4.896123232124774
best_error: 4.896123232119507
best_error: 4.894770195893328
best_error: 4.89477019588847
best_error: 4.894770195883302
best_error: 4.889150807222435
best_error: 4.889150807216598
best_error: 4.889150807211924
best_error: 4.862664226069577
best_error: 4.862664226055328
best_error: 3.770327533793963
best_error: 3.7703274859624263
best_error: 3.7557588980908694
best_error: 3.7557588497125662
best_error: 3.5668552379363287
best_error: 3.5668550142529734
best_error: 3.4582942013648013
best_error: 3.4582939568898827
best_error: 3.3721782026793927
best_error: 3.3721780660861587
best_error: 3.1118281803631125
best_error: 3.1118280069518374
best_error: 3.0054067930064265
best_error: 3.0054067265174713
best_error: 2.9848604324805392
best_error: 2.9848604243541583
best_error: 2.9782441189814794
best_error: 2.9782441169238125
best_error: 2.9782441068172836
best_error: 2.953219001752192
best_error: 2.953218900611854
best_error: 2.9415005612111984
best_error: 2.941500555820772
best_error: 2.9415005553828464
best_error: 2.9332432838330247
best_error: 2.933243273871724
best_error: 2.925881129383833
best_error: 2.9258810898100576
best_error: 2.922008665057697
best_error: 2.922008665047642
best_error: 2.9220086647358023
best_error: 2.9220086608511737
best_error: 2.9214906271485375
best_error: 2.921490619592048
best_error: 2.9195877230642835
best_error: 2.9195876985250027
best_error: 2.9108492046793226
best_error: 2.910849153278621
best_error: 2.87380015624818
best_error: 2.873800071346383
best_error: 2.627782450043062
best_error: 2.6277823270121856
best_error: 2.6140385787974636
best_error: 2.6140384160528107
best_error: 2.4832415071854244
best_error: 2.4832413393127655
best_error: 2.223882522609269
best_error: 2.2238823959532747
best_error: 2.127501703746182
best_error: 2.127501625446557
best_error: 2.121778906773477
best_error: 2.121778854769417
best_error: 2.1010944103718336
best_error: 2.101094393359023
best_error: 2.0958455396132756
best_error: 2.095845508288057
best_error: 2.072209894199005
best_error: 2.0722098194226004
best_error: 2.0683196162607196
best_error: 2.0683195631704065
best_error: 2.0612368600261926
best_error: 2.061236811753227
best_error: 2.0413181104049674
best_error: 2.041318074482484
best_error: 2.037178557092697
best_error: 2.0371785422963478
best_error: 2.0357391713785087
best_error: 2.0357391665830313
best_error: 2.035739165729098
best_error: 2.0336828960635436
best_error: 2.033682862032921
best_error: 2.0316155971322885
best_error: 2.03161554605319
best_error: 2.0285447358205007
best_error: 2.028544680239562
best_error: 2.017974772275272
best_error: 2.017974732831883
best_error: 1.9796111748530496
best_error: 1.9796111742048739
best_error: 1.9796111726821601
best_error: 1.9796111705727355
best_error: 1.947056510361387
best_error: 1.9470564728690807
best_error: 1.929909935607785
best_error: 1.9299099225268213
best_error: 1.9250812653908467
best_error: 1.9250812543446958
best_error: 1.9121249542429641
best_error: 1.9121249361639336
best_error: 1.9059291802377618
best_error: 1.905929167878905
best_error: 1.9039937381248415
best_error: 1.9039937297901772
best_error: 1.9034292529763632
best_error: 1.9034292262062422
best_error: 1.9032689801309104
best_error: 1.9032689717601383
best_error: 1.903109773193503
best_error: 1.9031097729622164
best_error: 1.9031097728356559
best_error: 1.9031097726101098
best_error: 1.9031050302352746
best_error: 1.9031050296149348
best_error: 1.9031017424983312
best_error: 1.9031017409737063
best_error: 1.9030955274954053
best_error: 1.9030955262416922
best_error: 1.903074678197135
best_error: 1.9030746772942917
best_error: 1.9030370388914302
best_error: 1.9030370345146193
best_error: 1.902906775288173
best_error: 1.9029067744599422
best_error: 1.902452818293803
best_error: 1.902452815148974
best_error: 1.901370767305982
best_error: 1.9013707592620193
best_error: 1.8952581222108416
best_error: 1.8952581082710094
best_error: 1.8899629836375444
best_error: 1.8899629379758571
best_error: 1.886149725626459
best_error: 1.8861497146692192
best_error: 1.8811846048531722
best_error: 1.8811846046066523
best_error: 1.8811846036528208
best_error: 1.8753132140012676
best_error: 1.8753132027457449
best_error: 1.8748289868248726
best_error: 1.8748289861189706
best_error: 1.8746317959493617
best_error: 1.8746317942875725
best_error: 1.8746170970674227
best_error: 1.8746170961836117
best_error: 1.8746134909408312
best_error: 1.8746134906220646
best_error: 1.874613490492492
best_error: 1.874612930656206
best_error: 1.874612928292035
best_error: 1.8746107939655994
best_error: 1.8746107929800595
best_error: 1.8746084894795292
best_error: 1.874608488781903
best_error: 1.8746025766433627
best_error: 1.8746025762336933
best_error: 1.8746025761855285
best_error: 1.8745905796658062
best_error: 1.8745905796649778
best_error: 1.87459057923129
best_error: 1.8745480820924525
best_error: 1.874548078128743
best_error: 1.8744655625822924
best_error: 1.8744655602121383
best_error: 1.8738477393919397
best_error: 1.8738477261759712
best_error: 1.8730578673779525
best_error: 1.873057848296636
best_error: 1.8696760005240947
best_error: 1.8696759640573257
best_error: 1.8671896714562013
best_error: 1.8671896523791063
best_error: 1.8657218178278818
best_error: 1.8657218065121137
best_error: 1.865050405860999
best_error: 1.8650503898715007
best_error: 1.8625727695795766
best_error: 1.8625727653882003
best_error: 1.8624279596408326
best_error: 1.862427956167499
best_error: 1.8623015543314076
best_error: 1.8623015523449797
best_error: 1.8622945260998716
best_error: 1.8622945258942911
best_error: 1.862294525460432
best_error: 1.862291799656552
best_error: 1.862291797204393
best_error: 1.8622916515752648
best_error: 1.8622916479850493
best_error: 1.8622834895868072
best_error: 1.8622834873358096
best_error: 1.8622818136345862
best_error: 1.8622818133795078
best_error: 1.8622818130198002
best_error: 1.8622816853461657
best_error: 1.8622816852027828
best_error: 1.8622816844925563
best_error: 1.8622805683013568
best_error: 1.8622805676465521
best_error: 1.8622804617627893
best_error: 1.8622804612906347
best_error: 1.8622789830415352
best_error: 1.8622789826512216
best_error: 1.8622789825981585
best_error: 1.8622742067716658
best_error: 1.8622742058941208
best_error: 1.8622736262666992
best_error: 1.8622736261584905
best_error: 1.8622736261121928
best_error: 1.8622736258332209
best_error: 1.8622696473717628
best_error: 1.8622696450094347
best_error: 1.8622627599880721
best_error: 1.8622627592068002
best_error: 1.8622367648563705
best_error: 1.8622367645813966
best_error: 1.8622275349836084
best_error: 1.8622275342427381
best_error: 1.8622247434062755
best_error: 1.8622247427959564
best_error: 1.8622238899207884
best_error: 1.8622238894113834
best_error: 1.8622233836665874
best_error: 1.8622233830543788
best_error: 1.8622211169658127
best_error: 1.8622211157045745
best_error: 1.8622165030566902
best_error: 1.8622165009195593
best_error: 1.8622113369975266
best_error: 1.8622113343053015
best_error: 1.862206643785838
best_error: 1.8622066419725867
best_error: 1.8622038924777768
best_error: 1.8622038920678485
best_error: 1.862203577861454
best_error: 1.8622035775895833
best_error: 1.8622035265923267
best_error: 1.8622035265896557
best_error: 1.8622035265510621
best_error: 1.8622034765462212
best_error: 1.8622034765435247
best_error: 1.8622034765052649
best_error: 1.862203438191716
best_error: 1.8622034380794992
best_error: 1.8622033166685117
best_error: 1.862203316609091
best_error: 1.8622031710208264
best_error: 1.8622031705543682
