ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.175328857924384
best_error: 22.175328564899615
best_error: 4.497012706326213
best_error: 4.497012704740554
best_error: 4.496125126875038
best_error: 4.496125126862221
best_error: 4.496125126772096
best_error: 4.492536663442539
best_error: 4.492536663429232
best_error: 4.49253666333865
best_error: 4.477512687050928
best_error: 4.477512687035355
best_error: 4.477512686942979
best_error: 4.402943733456947
best_error: 4.40294373342293
best_error: 4.402943733326319
best_error: 4.228136649648386
best_error: 4.2281366494578325
best_error: 4.228136649440055
best_error: 3.4129246294928044
best_error: 3.412924619394254
best_error: 2.94896919257634
best_error: 2.948969175291656
best_error: 2.885180880041057
best_error: 2.885180868923289
best_error: 2.88489462185956
best_error: 2.884894617468053
best_error: 2.884894611568845
best_error: 2.842071845487309
best_error: 2.8420718373168365
best_error: 2.8420718303206565
best_error: 2.803228670974187
best_error: 2.8032286553977634
best_error: 2.803228652590828
best_error: 2.7457429918837573
best_error: 2.7457429633746693
best_error: 2.72314903331083
best_error: 2.723149001167423
best_error: 2.6971704168484627
best_error: 2.6971703836946137
best_error: 2.366397789354661
best_error: 2.3663977694869343
best_error: 2.3663977033977126
best_error: 1.9677604613351043
best_error: 1.9677604508704487
best_error: 1.967760319625857
best_error: 1.906235690200318
best_error: 1.9062355998324743
best_error: 1.8953664678088793
best_error: 1.8953664054005583
best_error: 1.7796186235637075
best_error: 1.7796185863592984
best_error: 1.7427479592795072
best_error: 1.7427477192310312
best_error: 1.613530391970884
best_error: 1.6135303853285003
best_error: 1.6114667087729584
best_error: 1.6114666960504271
best_error: 1.6087389210058938
best_error: 1.6087389209155105
best_error: 1.6087389206329739
best_error: 1.608738915300811
best_error: 1.597662861488548
best_error: 1.597662831849284
best_error: 1.509008162389932
best_error: 1.509007928199032
best_error: 1.3805943675396808
best_error: 1.3805941337308618
best_error: 1.3683304216301564
best_error: 1.368330346107796
best_error: 1.2853261059095176
best_error: 1.2853259837149054
best_error: 1.260658086674382
best_error: 1.2606580409325385
best_error: 1.256337582436701
best_error: 1.2563375674771655
best_error: 1.25565565169349
best_error: 1.2556556382880544
best_error: 1.2548034338985259
best_error: 1.2548034203179226
best_error: 1.2461947015873602
best_error: 1.2461946892252689
best_error: 1.2132334605937722
best_error: 1.2132334241962455
best_error: 1.210729799986959
best_error: 1.2107297643782133
best_error: 1.2027334412998842
best_error: 1.2027333908491153
best_error: 1.1993767615479662
best_error: 1.199376681440434
best_error: 1.193293695119741
best_error: 1.1932936705365622
best_error: 1.1927221884500527
best_error: 1.1927221854346852
best_error: 1.1926247022196974
best_error: 1.1926247001003372
best_error: 1.1920983160336456
best_error: 1.192098306993838
best_error: 1.190697161065283
best_error: 1.190697133958753
best_error: 1.1820455038809279
best_error: 1.1820454406413599
best_error: 1.1799476426564528
best_error: 1.1799476190099996
best_error: 1.1799240655597807
best_error: 1.1799240381877991
best_error: 1.1744417492318018
best_error: 1.1744417289761249
best_error: 1.1724322611978613
best_error: 1.1724322602228963
best_error: 1.1721528155430527
best_error: 1.172152809838031
best_error: 1.1719213688734431
best_error: 1.171921362067297
best_error: 1.1704653323285583
best_error: 1.1704653176140705
best_error: 1.1702430772410366
best_error: 1.1702430749440647
best_error: 1.1701402428275984
best_error: 1.1701402428272327
best_error: 1.1701402423528742
best_error: 1.1701402418759812
best_error: 1.170074589018816
best_error: 1.1700745890040702
best_error: 1.1700745884702106
best_error: 1.1700745878646694
best_error: 1.1698040914063668
best_error: 1.1698040833830625
best_error: 1.1696037514449635
best_error: 1.1696037514409796
best_error: 1.1696037509969657
best_error: 1.1696037504740173
best_error: 1.1696037500283343
best_error: 1.1691250077937836
best_error: 1.1691250072862693
best_error: 1.169125006642289
best_error: 1.1689584287991872
best_error: 1.1689584087935645
best_error: 1.1681228031781552
best_error: 1.1681227943954666
best_error: 1.1680444597709796
best_error: 1.1680444539498211
best_error: 1.1670351132537666
best_error: 1.1670351132351076
best_error: 1.1670351129746026
best_error: 1.1670351123615859
best_error: 1.1670351116964839
best_error: 1.1656477186524967
best_error: 1.1656477132438023
best_error: 1.1643160968312252
best_error: 1.164316089774453
best_error: 1.1637495719143987
best_error: 1.1637495692214122
best_error: 1.1635516153559453
best_error: 1.1635516110284165
best_error: 1.163483913258064
best_error: 1.1634839081621953
best_error: 1.16342928278193
best_error: 1.1634292827767934
best_error: 1.1634292822274543
best_error: 1.1633209042769619
best_error: 1.1633209008864709
best_error: 1.1632846499210645
best_error: 1.1632846470314824
best_error: 1.163124080122355
best_error: 1.1631240801211231
best_error: 1.163124079572227
best_error: 1.1629800899737008
best_error: 1.1629800868020161
best_error: 1.161735854265267
best_error: 1.1617358313655646
best_error: 1.1614547557070913
best_error: 1.1614546824167185
best_error: 1.1608880757371878
best_error: 1.1608880343370247
best_error: 1.1600105868377555
best_error: 1.1600105364543392
best_error: 1.1586705647393807
best_error: 1.1586705346967678
best_error: 1.1581343398434916
best_error: 1.1581343312526782
best_error: 1.1581217995485371
best_error: 1.1581217960578178
best_error: 1.1580830286621777
best_error: 1.1580830272813634
best_error: 1.158073465143312
best_error: 1.158073463055791
best_error: 1.1580614976675518
best_error: 1.1580614976312729
best_error: 1.1580614968739247
best_error: 1.1580614966238023
best_error: 1.158053056880193
best_error: 1.1580530568428313
best_error: 1.1580530560824314
best_error: 1.1580530558023887
best_error: 1.1580177147457942
best_error: 1.158017714717415
best_error: 1.1580177140080206
best_error: 1.158017713475364
best_error: 1.1579106256324325
best_error: 1.1579106256031535
best_error: 1.1579106249101232
best_error: 1.1579106240352406
best_error: 1.1571634136843099
best_error: 1.1571634119977345
best_error: 1.1571634115418206
best_error: 1.1545022518024715
best_error: 1.1545022392619462
best_error: 1.150691748425122
best_error: 1.1506917243643577
best_error: 1.1502713062798768
best_error: 1.1502711779550305
best_error: 1.1419524919612882
best_error: 1.1419524384478041
best_error: 1.137546130815975
best_error: 1.1375461283920811
best_error: 1.1375461272668779
best_error: 1.1360518466946792
best_error: 1.1360518362804137
best_error: 1.1345011027364154
best_error: 1.1345011026726655
best_error: 1.1345011026648688
best_error: 1.1345011014612276
best_error: 1.1323022340997064
best_error: 1.1323022197597457
best_error: 1.131963173106551
best_error: 1.1319631557335494
best_error: 1.131778528679353
best_error: 1.1317785238957634
best_error: 1.1317230817335717
best_error: 1.1317230800436424
best_error: 1.1317018784100727
best_error: 1.1317018773277208
best_error: 1.1316861733938095
best_error: 1.1316861732457106
best_error: 1.1316861731162084
best_error: 1.1316541571859042
best_error: 1.1316541570647207
best_error: 1.131654157063268
best_error: 1.1316541570240968
best_error: 1.13159270760613
best_error: 1.1315927075345829
best_error: 1.1315927074956877
best_error: 1.1315927073752896
best_error: 1.1314154578733975
best_error: 1.1314154577709779
best_error: 1.1314154575620448
best_error: 1.1311895612088
best_error: 1.1311895612078566
best_error: 1.1311895611386709
best_error: 1.131189561079482
best_error: 1.131189560290265
best_error: 1.1309164789759973
best_error: 1.1309164655388124
best_error: 1.1308673561709675
best_error: 1.1308673519612784
best_error: 1.1307802594766276
best_error: 1.130780259324682
best_error: 1.1307802591962228
best_error: 1.1307536638827553
best_error: 1.1307536618339251
best_error: 1.1307433667273856
best_error: 1.1307433655538863
best_error: 1.130739009424153
best_error: 1.1307390092139433
best_error: 1.1307385630320241
best_error: 1.1307385629834554
best_error: 1.1307385628738975
best_error: 1.1307383544079157
best_error: 1.1307383541932678
best_error: 1.130738017401456
best_error: 1.130738017385875
best_error: 1.1307380172443786
best_error: 1.1307363655312281
best_error: 1.1307363655299008
best_error: 1.130736365384415
best_error: 1.1307343615153125
best_error: 1.1307343614801355
best_error: 1.130734361375241
best_error: 1.1307299407491924
best_error: 1.130729940523555
best_error: 1.1307272242843471
best_error: 1.1307272220996283
best_error: 1.1307145828346845
best_error: 1.1307145810186883
