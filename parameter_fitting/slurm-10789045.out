ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.163166859583397
best_error: 10.16316685364755
best_error: 10.116733354632716
best_error: 10.116733347175561
best_error: 7.095625443351178
best_error: 7.095625169082559
best_error: 5.747332422492276
best_error: 5.747332017536797
best_error: 4.01521732365094
best_error: 4.015216849595358
best_error: 3.0743394827877104
best_error: 3.0743391576701242
best_error: 2.7824907000829024
best_error: 2.7824904346800228
best_error: 2.752726851384076
best_error: 2.752726588267465
best_error: 2.7448674093137715
best_error: 2.7448671469744954
best_error: 2.7417759254357046
best_error: 2.7417756634030654
best_error: 2.740355305986257
best_error: 2.740355043838022
best_error: 2.7396028343924557
best_error: 2.7396025721830264
best_error: 2.7393094191837233
best_error: 2.7393091569452688
best_error: 2.7391716323652555
best_error: 2.7391713701131897
best_error: 2.739101296323722
best_error: 2.7391010340647055
best_error: 2.7390581852363747
best_error: 2.739057922973098
best_error: 2.739038483445232
best_error: 2.739038221180011
best_error: 2.7390244494141927
best_error: 2.7390241871475784
best_error: 2.7390228461731683
best_error: 2.7390227405384593
best_error: 2.732021230583689
best_error: 2.732020975893726
best_error: 2.7187669496836104
best_error: 2.718766713542192
best_error: 2.706085237283319
best_error: 2.7060850059975112
best_error: 2.57036701004586
best_error: 2.570366805597563
best_error: 2.4550534065310305
best_error: 2.4550532019667997
best_error: 2.288413043940488
best_error: 2.2884130422833087
best_error: 2.2884128168848816
best_error: 2.1501690676347622
best_error: 2.1501688233568252
best_error: 2.1108418134285296
best_error: 2.1108415567606125
best_error: 2.0831379674021155
best_error: 2.0831377003459517
best_error: 2.0813880284469146
best_error: 2.0813877609212907
best_error: 2.080468525415869
best_error: 2.0804682576543083
best_error: 2.080371965440383
best_error: 2.0803716976540425
best_error: 2.080310818888348
best_error: 2.080310551092381
best_error: 2.080292332818458
best_error: 2.0802922796245666
best_error: 2.08027643129267
best_error: 2.0802761634912805
best_error: 2.08027311661036
best_error: 2.080272848808443
best_error: 2.080272758549564
best_error: 2.0802725108547317
best_error: 2.0802724727828394
best_error: 2.080272471738486
best_error: 2.0802724598233016
best_error: 2.080272458778948
best_error: 2.080272451669625
best_error: 2.0802724501022616
best_error: 2.0775765617387867
best_error: 2.0775765090645812
best_error: 2.076116499342619
best_error: 2.076116447641753
best_error: 2.0732176422276973
best_error: 2.073217593212803
best_error: 2.0697031374621204
best_error: 2.0697028941645095
best_error: 2.0696842719269757
best_error: 2.069684224991553
best_error: 2.056799765837629
best_error: 2.05679954055807
best_error: 2.053064532913377
best_error: 2.0530643094967065
best_error: 2.042871788650216
best_error: 2.042871788044838
best_error: 2.0428715714267716
best_error: 2.030465333999609
best_error: 2.0304653061214935
best_error: 2.0189189891559853
best_error: 2.018918962917616
best_error: 2.0141717317674424
best_error: 2.0141717056681507
best_error: 2.0107175360474745
best_error: 2.0107175107601205
best_error: 2.008968797984675
best_error: 2.0089687724338976
best_error: 2.0088207340621578
best_error: 2.0088207079111613
best_error: 2.0064629486377346
best_error: 2.0064629209630938
best_error: 2.0054099003305668
best_error: 2.00540987543118
best_error: 2.005409705913272
best_error: 1.9371942837972735
best_error: 1.9371942816036825
best_error: 1.9371940575616686
best_error: 1.921638338722072
best_error: 1.9216380983643837
best_error: 1.8780560048148343
best_error: 1.8780557629460854
best_error: 1.877246088037269
best_error: 1.877245846110642
best_error: 1.8771561597617266
best_error: 1.8771559188531897
best_error: 1.8771009296767294
best_error: 1.877100688763674
best_error: 1.8770676940771176
best_error: 1.8770674531613514
best_error: 1.8770481815651392
best_error: 1.8770479406477834
best_error: 1.8770359909866725
best_error: 1.877035750068318
best_error: 1.8770290819501465
best_error: 1.8770288410312344
best_error: 1.8770245816057112
best_error: 1.877024340686422
best_error: 1.8770219455898012
best_error: 1.8770217046701896
best_error: 1.8770203787550854
best_error: 1.877020137835304
best_error: 1.8770194911542248
best_error: 1.8770192502343277
best_error: 1.8770189292252215
best_error: 1.8770186883052666
best_error: 1.8770186280077805
best_error: 1.8770183870877897
best_error: 1.8770181837327542
