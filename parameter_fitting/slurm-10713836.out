ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.764792088214335
best_error: 10.764792055265273
best_error: 10.764792030081633
best_error: 10.325546068015196
best_error: 10.325546018961283
best_error: 10.32554598926692
best_error: 9.131126731635021
best_error: 9.131126643125146
best_error: 8.91960667210747
best_error: 8.919606576182815
best_error: 8.761165486261884
best_error: 8.761165382999863
best_error: 7.973124667744575
best_error: 7.973124613746001
best_error: 7.973124594158881
best_error: 7.3142530608244005
best_error: 7.314253023331936
best_error: 7.314252970647873
best_error: 6.95903963226527
best_error: 6.959039630781879
best_error: 6.959039536279503
best_error: 6.400728322563005
best_error: 6.400728322537488
best_error: 3.5207398875987392
best_error: 3.5207395407893305
best_error: 3.0769203178168394
best_error: 3.076919984606323
best_error: 2.624222826614296
best_error: 2.624222546516263
best_error: 2.3055405097061317
best_error: 2.3055402503134745
best_error: 2.173241509066945
best_error: 2.1732412538383397
best_error: 2.165700755812892
best_error: 2.165700755786747
best_error: 2.119524416295554
best_error: 2.119524161788724
best_error: 2.082940266175733
best_error: 2.082940013761611
best_error: 2.0739513013596707
best_error: 2.0739510495018214
best_error: 2.07005951902516
best_error: 2.070059266915014
best_error: 2.0682479439885886
best_error: 2.0682476917611647
best_error: 2.0676570205795723
best_error: 2.067656769246767
best_error: 2.0673424408733796
best_error: 2.0673421895222246
best_error: 2.0673270678375264
best_error: 2.067327067811735
best_error: 2.067295787128915
best_error: 2.0672955357750267
best_error: 2.06723608801816
best_error: 2.067235836660795
best_error: 2.0672205997431847
best_error: 2.067220348384812
best_error: 2.0672163288018854
best_error: 2.067216328776069
best_error: 2.0672146877356234
best_error: 2.067214436376877
best_error: 2.0642889551204955
best_error: 2.064288707985504
best_error: 2.0633072667484478
best_error: 2.0633070193930396
best_error: 2.0629015213436617
best_error: 2.0629012738967134
best_error: 2.0627439919159487
best_error: 2.0627437444333694
best_error: 2.0627081946525463
best_error: 2.062707947161872
best_error: 2.0626440010027824
best_error: 2.0626439820012012
best_error: 2.062643964503281
best_error: 2.0626439250474284
best_error: 2.062643912261837
best_error: 2.0626438885479215
best_error: 2.062643864841384
best_error: 2.0626438648154526
best_error: 2.062643861215358
best_error: 2.062633823615903
best_error: 2.062633823589996
best_error: 2.0181100148957567
best_error: 2.0181100148704134
best_error: 1.929412917079631
best_error: 1.929412608210088
best_error: 1.8853041758200484
best_error: 1.8853041757973001
best_error: 1.8789028656334514
best_error: 1.8789028656105682
best_error: 1.8776686596791652
best_error: 1.8776683361909559
best_error: 1.8738840614138126
best_error: 1.8738840613919758
best_error: 1.8726310781584898
best_error: 1.8726310781363766
best_error: 1.8718305262235457
best_error: 1.87183052620143
best_error: 1.8717176362034862
best_error: 1.8717173000516922
best_error: 1.8717099142789797
best_error: 1.8717099142567997
best_error: 1.8716410634528122
best_error: 1.8716410634306546
best_error: 1.8553402664469474
best_error: 1.8553402664253273
best_error: 1.8416274890987379
best_error: 1.8416271818322238
best_error: 1.8043051589902568
best_error: 1.8043048607346437
best_error: 1.638567252166211
best_error: 1.6385672521406067
best_error: 1.6238439346401807
best_error: 1.623843934612876
best_error: 1.608990027305874
best_error: 1.608989697439589
best_error: 1.5731892070186024
best_error: 1.573189206992743
best_error: 1.5513283795969413
best_error: 1.551328019933162
best_error: 1.5355882308468143
best_error: 1.5355882308193958
best_error: 1.5218702329096174
best_error: 1.521869851717954
best_error: 1.5141846020906942
best_error: 1.5141846020638434
best_error: 1.5028179388352498
best_error: 1.5028179388070637
best_error: 1.4938256158920749
best_error: 1.4938252383014148
best_error: 1.4854253940380517
best_error: 1.4854253940081505
best_error: 1.4655964028138095
best_error: 1.4655964027844903
best_error: 1.4464377950236824
best_error: 1.4464373845323673
best_error: 1.4213374027898444
best_error: 1.4213374027614165
best_error: 1.421337278650035
best_error: 1.4204047045734214
best_error: 1.420404284377219
best_error: 1.41920687645641
best_error: 1.419206876429046
best_error: 1.4192067519694278
best_error: 1.4184073874313943
best_error: 1.4184069458988746
best_error: 1.418254399063823
best_error: 1.4182543990361072
best_error: 1.4182542747006837
best_error: 1.4182522504454937
best_error: 1.418251816598306
best_error: 1.4180321760739116
best_error: 1.4180317425898226
best_error: 1.4179353463354205
best_error: 1.4179353463077597
best_error: 1.4179352220031771
best_error: 1.4179117058886703
best_error: 1.4179117058609159
best_error: 1.4179115815552992
best_error: 1.4179096073067365
best_error: 1.4179091738391651
best_error: 1.4178620473335815
best_error: 1.4178620473058352
best_error: 1.4178619230085707
best_error: 1.4178618751309835
best_error: 1.417861441673986
