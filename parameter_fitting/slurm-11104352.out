ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 60
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.63153688795053
best_error: 97.63153667313988
best_error: 20.787852495957296
best_error: 20.787852495956855
best_error: 20.787852495402298
best_error: 20.787807955816746
best_error: 20.787807955261194
best_error: 20.78762947471974
best_error: 20.787629474161978
best_error: 20.786910373259865
best_error: 20.786910372693136
best_error: 20.783947892774695
best_error: 20.783947892169767
best_error: 20.77047033636152
best_error: 20.770470335554784
best_error: 20.618826641382313
best_error: 20.61882663135979
best_error: 20.616848234975045
best_error: 20.616848224738114
best_error: 20.61480952942064
best_error: 20.614809518961003
best_error: 16.861313729439452
best_error: 16.861313704450907
best_error: 16.661480798961204
best_error: 16.66148064476897
best_error: 16.59261839077604
best_error: 16.59261838073142
best_error: 16.579479293580953
best_error: 16.57947928930157
best_error: 16.579479282879078
best_error: 16.574724383452953
best_error: 16.574724379879736
best_error: 16.574724365521398
best_error: 16.563124385928553
best_error: 16.563124304666665
best_error: 16.51162201774459
best_error: 16.511621926560466
best_error: 16.300182463841672
best_error: 16.300182295017784
best_error: 15.734716964393408
best_error: 15.734716625561827
best_error: 15.58487910299042
best_error: 15.584878829442218
best_error: 15.520461692165588
best_error: 15.52046166723689
best_error: 15.387788093722879
best_error: 15.387788081216605
best_error: 15.38079658751418
best_error: 15.380796575149446
best_error: 15.377755039387969
best_error: 15.37775502658462
best_error: 15.37663233616279
best_error: 15.376632323419948
best_error: 15.376044306522383
best_error: 15.376044293795228
best_error: 15.268333878035829
best_error: 15.268333695728403
best_error: 15.242766833758797
best_error: 15.242766812650808
best_error: 15.237820141180201
best_error: 15.237820120541416
best_error: 15.235284650623711
best_error: 15.235284630415443
best_error: 15.183427551814303
best_error: 15.18342737657378
best_error: 15.176244668460665
best_error: 15.176244504584481
best_error: 15.043036309278362
best_error: 15.043035686524242
best_error: 15.028962222872476
best_error: 15.028962211245037
best_error: 15.001102679720427
best_error: 15.001102405079255
best_error: 15.000070055393845
best_error: 15.000070045059676
best_error: 14.988945081747742
best_error: 14.988945071468281
best_error: 14.984674332363497
best_error: 14.984674064871431
best_error: 14.983915341630059
best_error: 14.983915331472192
best_error: 14.980296061645035
best_error: 14.980296051587182
best_error: 14.979899863454875
best_error: 14.979899853402506
best_error: 14.979726303313775
best_error: 14.979726293263798
best_error: 14.979723974791636
best_error: 14.979723706126862
best_error: 14.979711187686037
best_error: 14.979711177636199
best_error: 14.979709905446406
best_error: 14.97970970189996
best_error: 14.970956140774604
best_error: 14.970956128877045
best_error: 14.942042580981852
best_error: 14.942042562165268
best_error: 14.889388416058758
best_error: 14.889388412081543
best_error: 14.889388410814297
best_error: 14.889388408709433
best_error: 14.845954907360184
best_error: 14.845954903344024
best_error: 14.845954900021809
best_error: 14.827571964663775
best_error: 14.827571960607306
best_error: 14.827571957330285
best_error: 14.823192597593565
best_error: 14.823192593520778
best_error: 14.823192590261755
best_error: 14.823180255987317
best_error: 14.823180251914513
best_error: 14.823180248655518
best_error: 14.823179542791635
best_error: 14.823179538381371
best_error: 14.823179379611382
best_error: 14.823179366855765
best_error: 14.823179362782966
best_error: 14.823179359523959
best_error: 14.822505987754584
best_error: 14.822505983340601
best_error: 14.822505983052995
best_error: 14.822505979718201
best_error: 14.822505963984721
best_error: 14.819814766704184
best_error: 14.819814762275382
best_error: 14.819814603155567
best_error: 14.809085140474963
best_error: 14.809085135943302
best_error: 14.809084975052222
best_error: 14.76675370282509
best_error: 14.766753697293979
best_error: 14.766753520261888
best_error: 14.611998220386479
best_error: 14.611998211768801
best_error: 14.611997984635757
best_error: 14.61122966253918
best_error: 14.611229659947345
best_error: 14.611229655538434
best_error: 14.609572379472443
best_error: 14.609572376927009
best_error: 14.60957237252568
best_error: 14.608609670809585
best_error: 14.60860966828334
best_error: 14.60860966389514
best_error: 14.607846886935889
best_error: 14.607846884437961
best_error: 14.607846880047067
best_error: 14.60721252677001
best_error: 14.607212524635493
best_error: 14.607212524320772
best_error: 14.60721251990821
best_error: 14.606412868844762
best_error: 14.606412866264083
best_error: 14.606412866025856
best_error: 14.606412861917349
best_error: 14.561727031769172
best_error: 14.561727025666631
best_error: 14.561726814678803
best_error: 14.448214001744521
best_error: 14.448213995077127
best_error: 14.448213785430376
best_error: 14.440951520769714
best_error: 14.440951515532385
best_error: 14.420509691444613
best_error: 14.420509686321658
best_error: 14.381338370180021
best_error: 14.38133836266899
best_error: 14.381338139527257
best_error: 14.380110991917894
best_error: 14.380110987015316
best_error: 14.379253913846407
best_error: 14.379253909246756
best_error: 14.37817467609765
best_error: 14.378174667859664
best_error: 14.378174435736916
best_error: 14.377881576580409
best_error: 14.377881568337257
best_error: 14.377881335961543
best_error: 14.37785716412123
best_error: 14.377857159926787
best_error: 14.377856607768141
best_error: 14.377856603573703
best_error: 14.377856363943824
best_error: 14.377856359749387
best_error: 14.377856248367824
best_error: 14.37785624417339
best_error: 14.377856191519184
best_error: 14.377856187324747
best_error: 14.377856157639929
best_error: 14.3778561534455
best_error: 14.377856131975605
