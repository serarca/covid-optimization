ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.105358270954504
best_error: 24.105358119601323
best_error: 4.738089594097186
best_error: 4.738089593048966
best_error: 4.737292283775766
best_error: 4.737292283756693
best_error: 4.737292283626294
best_error: 4.734061579113563
best_error: 4.734061579093808
best_error: 4.7340615789624
best_error: 4.7204071622755714
best_error: 4.720407162252596
best_error: 4.720407162117074
best_error: 4.648594955010883
best_error: 4.648594954956817
best_error: 4.648594954807679
best_error: 4.548851109976985
best_error: 4.548851109787211
best_error: 4.548851109688667
best_error: 4.26426973138225
best_error: 4.264269728627288
best_error: 4.198313426615081
best_error: 4.198313422481474
best_error: 4.127912976964439
best_error: 4.127912970983602
best_error: 3.5089897404432624
best_error: 3.508989583042063
best_error: 2.9765954633703604
best_error: 2.976595421341183
best_error: 2.8651126900151045
best_error: 2.8651126583213924
best_error: 2.8482518854596153
best_error: 2.848251855358578
best_error: 2.79116091803113
best_error: 2.7911608722187298
best_error: 2.4363382657867407
best_error: 2.43633811286808
best_error: 2.3327613856003526
best_error: 2.3327613437463683
best_error: 2.3327612759506526
best_error: 2.2814003222135897
best_error: 2.281400230886345
best_error: 2.2786329827469927
best_error: 2.2786329022360357
best_error: 2.1487670549764353
best_error: 2.1487670201328823
best_error: 2.148767015477381
best_error: 2.1124971774166643
best_error: 2.112497072700397
best_error: 2.0963196179816186
best_error: 2.096319587920219
best_error: 2.0948882093838552
best_error: 2.0948881984018204
best_error: 2.0941728107460875
best_error: 2.0941728032767575
best_error: 2.094172800367437
best_error: 2.0910722998127413
best_error: 2.0910722997728888
best_error: 2.0910722992442214
best_error: 2.0910722904952963
best_error: 2.0816265146623945
best_error: 2.0816264966623272
best_error: 2.0456533372576167
best_error: 2.0456532917132564
best_error: 2.009519591398978
best_error: 2.0095193979001245
best_error: 1.9654641425954928
best_error: 1.965463953993118
best_error: 1.899636353638247
best_error: 1.8996361641138026
best_error: 1.4249592142972796
best_error: 1.4249591757653086
best_error: 1.419486645748978
best_error: 1.419486645454513
best_error: 1.4194866451242347
best_error: 1.419486644616887
best_error: 1.4167529951164568
best_error: 1.4167529689298595
best_error: 1.4160098988100573
best_error: 1.4160098974284299
best_error: 1.4143892552301083
best_error: 1.4143892541579008
best_error: 1.4118916210533592
best_error: 1.4118916148075973
best_error: 1.4106916125616462
best_error: 1.4106916068296897
best_error: 1.4103079152986298
best_error: 1.4103079093696642
best_error: 1.4092587363855065
best_error: 1.4092587321203678
best_error: 1.4061243558660397
best_error: 1.4061243483354662
best_error: 1.3978289174293146
best_error: 1.3978289059504818
best_error: 1.3870659051057204
best_error: 1.387065887221759
best_error: 1.3637820076335418
best_error: 1.3637820053216574
best_error: 1.3538111518932054
best_error: 1.353811124736664
best_error: 1.3538111204838446
best_error: 1.3534286805520805
best_error: 1.3534286693603192
best_error: 1.3534278614779904
best_error: 1.3534278490190854
best_error: 1.3527509648674143
best_error: 1.352750961476335
best_error: 1.3527509608743011
best_error: 1.3520068904023206
best_error: 1.3520068902541045
best_error: 1.3520068871649853
best_error: 1.3511729999675715
best_error: 1.3511729973196345
best_error: 1.3505887034399475
best_error: 1.3505887009106532
best_error: 1.3475508850906905
best_error: 1.347550884339645
best_error: 1.3475508836956664
best_error: 1.3454841037016119
best_error: 1.345484078768047
best_error: 1.3395391449980607
best_error: 1.3395390762836745
best_error: 1.3169337069586362
best_error: 1.3169335596138174
best_error: 1.2905659453219755
best_error: 1.2905658718307245
best_error: 1.2746039401184481
best_error: 1.2746039303468635
best_error: 1.27412931596711
best_error: 1.2741293038555639
best_error: 1.2740608466224292
best_error: 1.2740608313618609
best_error: 1.2732124583844187
best_error: 1.2732124485483072
best_error: 1.2731719729455968
best_error: 1.273171960671409
best_error: 1.272260595293035
best_error: 1.27226059446907
best_error: 1.2722605937444136
best_error: 1.2722288188483823
best_error: 1.2722288173843461
best_error: 1.272228817040332
best_error: 1.2488779405450012
best_error: 1.2488779382231283
best_error: 1.2453252167508062
best_error: 1.2453252105889097
best_error: 1.245325195140992
best_error: 1.2433731576905778
best_error: 1.2433731439343032
best_error: 1.2374904709575616
best_error: 1.2374904552166477
best_error: 1.2343519589888523
best_error: 1.2343519490341248
best_error: 1.2337619412990373
best_error: 1.2337619366736317
best_error: 1.233687217495922
best_error: 1.2336872133538963
best_error: 1.2334633646741227
best_error: 1.2334633625907374
best_error: 1.2333272441256418
best_error: 1.2333272400666453
best_error: 1.2328568100309463
best_error: 1.2328567979898497
best_error: 1.231845897078998
best_error: 1.2318458836982213
best_error: 1.228100514305641
best_error: 1.2281004901761918
best_error: 1.2251863703850514
best_error: 1.2251863569388626
best_error: 1.2251863082244119
best_error: 1.22338274756289
best_error: 1.2233827155954307
best_error: 1.2210244590990018
best_error: 1.2210244298851693
best_error: 1.2063704697276443
best_error: 1.2063704264848905
best_error: 1.2053346203519875
best_error: 1.2053346086479693
best_error: 1.2046040000379679
best_error: 1.2046039977920189
best_error: 1.204516219593513
best_error: 1.2045162192206442
best_error: 1.2044923837056305
best_error: 1.2044923809057315
best_error: 1.2044783437535533
best_error: 1.2044783413365265
best_error: 1.20447423413723
best_error: 1.2044742340625927
best_error: 1.2044742338522534
best_error: 1.2044393998095773
best_error: 1.204439399474396
best_error: 1.2044027137777977
best_error: 1.2044027136928441
best_error: 1.2044027134067479
best_error: 1.2041651120189099
best_error: 1.2041651104348379
best_error: 1.203540835408616
best_error: 1.2035408321431222
best_error: 1.2033786626349745
best_error: 1.2033786541523839
best_error: 1.203372656113561
best_error: 1.2033726454293279
best_error: 1.2033722055021308
best_error: 1.2033721935266914
best_error: 1.203066943983212
best_error: 1.2030669434772627
best_error: 1.2030669389284876
best_error: 1.202336073873727
best_error: 1.2023360704404036
best_error: 1.1992022085205685
best_error: 1.1992021799288235
best_error: 1.1973834072375582
best_error: 1.1973833461914674
best_error: 1.1964067322652265
best_error: 1.1964066579046857
best_error: 1.1960855523757503
best_error: 1.1960854667567835
best_error: 1.1959644283177722
best_error: 1.1959643376957605
best_error: 1.1959590290963877
best_error: 1.195958936839026
best_error: 1.1959586217972675
best_error: 1.1959585287850278
best_error: 1.1959584539133372
best_error: 1.1959583607308146
best_error: 1.1940512943560724
best_error: 1.1940512518269006
best_error: 1.1938538865019919
best_error: 1.1938538310724551
best_error: 1.190854034537395
best_error: 1.1908540241423895
best_error: 1.190658697923703
best_error: 1.1906586978060991
best_error: 1.1906586977882099
best_error: 1.1906586971931399
best_error: 1.1905963691640817
best_error: 1.1905963689690815
best_error: 1.1905963689129109
best_error: 1.190596368379072
best_error: 1.1900041206552556
best_error: 1.1900041103291208
best_error: 1.189877795006764
best_error: 1.1898777891263426
best_error: 1.1898095838594895
best_error: 1.1898095827437773
best_error: 1.1898095826966117
best_error: 1.189773017088145
best_error: 1.1897730144514098
best_error: 1.189623129664442
best_error: 1.1896231231650551
best_error: 1.1893050510881282
best_error: 1.1893050456856673
best_error: 1.1880799700817584
best_error: 1.1880799547931897
