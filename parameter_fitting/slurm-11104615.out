ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.98014225771445
best_error: 99.98014217394615
best_error: 99.9801420931055
best_error: 18.186186544317554
best_error: 18.186186544312793
best_error: 18.1861865344623
best_error: 18.158647878609003
best_error: 18.158647878603873
best_error: 18.158647867813954
best_error: 18.014956604702384
best_error: 18.014956604689786
best_error: 18.01495658777852
best_error: 13.09393865135651
best_error: 13.09393864576238
best_error: 13.093938600249068
best_error: 13.093938599530025
best_error: 13.038635682433126
best_error: 13.038635564694639
best_error: 12.885129463918446
best_error: 12.885129344816251
best_error: 12.21239430618122
best_error: 12.212394228203117
best_error: 11.869638106634946
best_error: 11.86963805174571
best_error: 11.651649917907736
best_error: 11.651649899338247
best_error: 11.651649894420293
best_error: 11.57362520768434
best_error: 11.573625201124193
best_error: 11.573625184233501
best_error: 11.200668191899279
best_error: 11.200668179143483
best_error: 11.200668167937714
best_error: 10.977348364361081
best_error: 10.977348306571486
best_error: 10.650611818326206
best_error: 10.650611805655384
best_error: 10.650611797119096
best_error: 10.594447114167625
best_error: 10.594447110866053
best_error: 10.594447092718472
best_error: 10.547525155481026
best_error: 10.547525129680423
best_error: 10.405093902438178
best_error: 10.405093887424094
best_error: 10.40509388229431
best_error: 10.3102341258056
best_error: 10.310234112565318
best_error: 10.310234107134553
best_error: 10.278214368892883
best_error: 10.278214356521323
best_error: 10.278214350693311
best_error: 10.237246878838647
best_error: 10.237246661546699
best_error: 10.167849086450698
best_error: 10.167849082407638
best_error: 10.167849082061295
best_error: 10.167849081385043
best_error: 10.16784907039803
best_error: 10.154203654218396
best_error: 10.154203650869784
best_error: 10.154203647921806
best_error: 10.154203638553422
best_error: 10.105376753526155
best_error: 10.105376752044872
best_error: 10.105376702609249
best_error: 10.091938097558895
best_error: 10.091938093347409
best_error: 10.09193807357163
best_error: 10.070787127334098
best_error: 10.070787114720748
best_error: 10.070787112325142
best_error: 10.053647771401973
best_error: 10.053647761410334
best_error: 10.053647756506379
best_error: 9.908587399958796
best_error: 9.908587373448142
best_error: 9.796027885150059
best_error: 9.796027714546256
best_error: 9.785808089283876
best_error: 9.78580808585179
best_error: 9.785808057592462
best_error: 9.785808057157396
best_error: 9.775483217721657
best_error: 9.775483214569858
best_error: 9.775483182502157
best_error: 9.740832990867506
best_error: 9.740832985251009
best_error: 9.74083298519463
best_error: 9.740832963766435
best_error: 9.711943422671567
best_error: 9.711943281300137
best_error: 9.636644523665407
best_error: 9.636644366047484
best_error: 9.629631658800008
best_error: 9.629631236529162
best_error: 9.549134478862142
best_error: 9.549134468453103
best_error: 9.549134466765556
best_error: 9.547285004610684
best_error: 9.54728483314902
best_error: 9.545411091247596
best_error: 9.545411009291389
best_error: 9.531430582763337
best_error: 9.531430563777622
best_error: 9.52263745331372
best_error: 9.522637439763468
best_error: 9.515478966270031
best_error: 9.515478949306154
best_error: 9.514057521690471
best_error: 9.51405740210997
best_error: 9.513337669435712
best_error: 9.5133376481244
best_error: 9.51094576385843
best_error: 9.510945742853393
best_error: 9.51026901702985
best_error: 9.510268917223543
best_error: 9.510064616048206
best_error: 9.51006459807833
best_error: 9.508973965915814
best_error: 9.508973947558307
best_error: 9.508598264551047
best_error: 9.508598243322465
best_error: 9.507058842069418
best_error: 9.507058820983374
best_error: 9.505175508424184
best_error: 9.505175387547062
best_error: 9.503670364184442
best_error: 9.503670343073315
best_error: 9.501893124883376
best_error: 9.501893020957406
best_error: 9.497508887417723
best_error: 9.497508869055387
best_error: 9.495067001978901
best_error: 9.495066982623708
best_error: 9.49212935355279
best_error: 9.492129333580499
best_error: 9.49197339912836
best_error: 9.491973379195521
best_error: 9.491722175933681
best_error: 9.491722064417543
best_error: 9.48955838192776
best_error: 9.489558268909779
best_error: 9.489416530789518
best_error: 9.489416510915934
best_error: 9.48927137777194
best_error: 9.489271358257227
best_error: 9.487302991713989
best_error: 9.487302971900185
best_error: 9.481900258676543
best_error: 9.481900243608145
