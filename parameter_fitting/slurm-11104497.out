ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 70
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 108.01264559203744
best_error: 108.01264549894486
best_error: 108.01264539807079
best_error: 20.233878662529058
best_error: 20.233878662527587
best_error: 20.233878659910207
best_error: 20.23257720677639
best_error: 20.232577206774902
best_error: 20.232577204121426
best_error: 20.227187001538017
best_error: 20.227187001536446
best_error: 20.22718699873021
best_error: 20.202136510154904
best_error: 20.20213651015274
best_error: 20.20213650656786
best_error: 19.962772345589304
best_error: 19.96277234552541
best_error: 19.96277232992386
best_error: 19.95068353141866
best_error: 19.950683531347085
best_error: 19.950683514968993
best_error: 19.26308491120968
best_error: 19.263084909735976
best_error: 19.263084835540997
best_error: 14.612665910428259
best_error: 14.612665880655337
best_error: 14.61266538150213
best_error: 13.472803558939132
best_error: 13.472803543074393
best_error: 13.470936465861215
best_error: 13.470936448746887
best_error: 13.46339275164517
best_error: 13.463392732883184
best_error: 13.460323944888295
best_error: 13.460323926262484
best_error: 13.458698512255955
best_error: 13.458698493605727
best_error: 13.457753896352468
best_error: 13.45775387774178
best_error: 13.457196472277468
best_error: 13.45719645365293
best_error: 13.456875475031225
best_error: 13.456875456413439
best_error: 13.456689767165539
best_error: 13.456689748555707
best_error: 13.456582421879112
best_error: 13.456582421879109
best_error: 13.456582403273877
best_error: 13.456564576472466
best_error: 13.456564558103324
best_error: 13.456564312844234
best_error: 13.426711990254281
best_error: 13.426711988689972
best_error: 13.426711974232406
best_error: 13.371884093781626
best_error: 13.371884084520957
best_error: 13.366422377767814
best_error: 13.366422367733518
best_error: 13.36061084196993
best_error: 13.360610598239486
best_error: 13.33220207025675
best_error: 13.332202061014762
best_error: 13.332076686118272
best_error: 13.332076515828422
best_error: 13.329495198375888
best_error: 13.329495025152607
best_error: 13.329402611783411
best_error: 13.329402603409784
best_error: 13.328133442718654
best_error: 13.328133433665661
best_error: 13.327428276614356
best_error: 13.327428267586525
best_error: 13.327352648513708
best_error: 13.327352639488508
best_error: 13.327352464513368
best_error: 13.32735232230524
best_error: 13.31691659157515
best_error: 13.316916379405958
best_error: 13.292479879535748
best_error: 13.292479646596849
best_error: 13.27268225221205
best_error: 13.272681872039001
best_error: 13.252900134484614
best_error: 13.252899794088062
best_error: 12.90275738147239
best_error: 12.90275737437463
best_error: 12.90275737325667
best_error: 12.84133875656587
best_error: 12.841338747631497
best_error: 12.84112077831174
best_error: 12.841120768833775
best_error: 12.836215335947099
best_error: 12.836215303351889
best_error: 12.545424940656547
best_error: 12.545424909574175
best_error: 12.275667613774228
best_error: 12.275667583859466
best_error: 12.212901185521126
best_error: 12.21290116500336
best_error: 12.166857097741113
best_error: 12.166856829560158
best_error: 12.164946211282636
best_error: 12.164946205935543
best_error: 12.164946205901412
best_error: 12.163409393149163
best_error: 12.163409388004514
best_error: 12.163409387808743
best_error: 12.155915219077288
best_error: 12.155915215932604
best_error: 12.15591520813605
best_error: 12.155115272139644
best_error: 12.155115269314669
best_error: 12.155115255041622
best_error: 12.154871654425946
best_error: 12.15487165162337
best_error: 12.15487163697821
best_error: 12.154631166067691
best_error: 12.15463116326898
best_error: 12.154631148582368
best_error: 12.154374756798356
best_error: 12.15437475400799
best_error: 12.154374739063552
best_error: 12.154166048419182
best_error: 12.154166045632191
best_error: 12.154166030651652
best_error: 12.154051103675705
best_error: 12.154050806692874
best_error: 12.154042268549777
best_error: 12.154042265776992
best_error: 12.154042250490086
best_error: 12.154003976069092
best_error: 12.15400397329687
best_error: 12.154003958003623
best_error: 12.154002601975025
best_error: 12.154002599202821
best_error: 12.154002583909346
best_error: 12.154001681464894
best_error: 12.154001678692708
best_error: 12.154001663399079
best_error: 12.154001040756127
best_error: 12.154001037983946
best_error: 12.154001022690213
best_error: 12.15400056433677
best_error: 12.154000561564597
best_error: 12.154000546270781
best_error: 12.153999765617717
best_error: 12.15399976284556
best_error: 12.153999747551596
best_error: 12.153999747194826
best_error: 12.15399974442267
best_error: 12.153999729128701
best_error: 12.153999715576987
best_error: 12.153999704486772
best_error: 12.153999695171775
best_error: 12.153999660912588
best_error: 12.153999658140433
best_error: 12.153999642846449
best_error: 12.153999608443089
