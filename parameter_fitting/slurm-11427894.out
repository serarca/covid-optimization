ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 17.343110990341266
best_error: 17.343110534962758
best_error: 4.164661368267155
best_error: 4.164661365965971
best_error: 4.163423861434215
best_error: 4.163423861420678
best_error: 4.163423861360285
best_error: 4.158415191397684
best_error: 4.1584151913835585
best_error: 4.158415191323051
best_error: 4.137410305395918
best_error: 4.137410305379036
best_error: 4.137410305318257
best_error: 4.032762343447407
best_error: 4.032762343406919
best_error: 4.032762343352203
best_error: 3.810943037838012
best_error: 3.8109430376276783
best_error: 3.2602804561339913
best_error: 3.2602804519925566
best_error: 3.1415917566945915
best_error: 3.1415917513014877
best_error: 3.1277409235729174
best_error: 3.127740918165843
best_error: 3.1257014294915444
best_error: 3.1257014241097885
best_error: 3.125040089088015
best_error: 3.1250400876457918
best_error: 3.125040083755091
best_error: 3.119533053296524
best_error: 3.1195330468747384
best_error: 3.116919030601441
best_error: 3.116919023838824
best_error: 3.1129123704392727
best_error: 3.112912363117542
best_error: 3.108134908199312
best_error: 3.1081349001153082
best_error: 2.2355498135161884
best_error: 2.2355496963705783
best_error: 1.834480586088806
best_error: 1.8344805229390162
best_error: 1.8011365405215343
best_error: 1.8011365015191148
best_error: 1.7877273680207013
best_error: 1.7877273218979204
best_error: 1.7801529854519407
best_error: 1.7801529323269794
best_error: 1.7776367644600817
best_error: 1.7776367412338803
best_error: 1.774137269344775
best_error: 1.7741372531800115
best_error: 1.7710141858657302
best_error: 1.7710141685722869
best_error: 1.7586158768224425
best_error: 1.7586158574486748
best_error: 1.7091339625095017
best_error: 1.7091339347730305
best_error: 1.5773611331607504
best_error: 1.5773611331102224
best_error: 1.5773611297800827
best_error: 1.5605822275859824
best_error: 1.560582211861565
best_error: 1.5471673410391855
best_error: 1.5471673253297837
best_error: 1.4293645235298071
best_error: 1.429364446622147
best_error: 1.4177022356775928
best_error: 1.4177021285467961
best_error: 1.3784827175864895
best_error: 1.3784826928146883
best_error: 1.3617851672915473
best_error: 1.3617851396848202
best_error: 1.3601758417480874
best_error: 1.360175834636405
best_error: 1.3599484673922542
best_error: 1.3599484655057317
best_error: 1.359880102862178
best_error: 1.3598801023542055
best_error: 1.359871137633588
best_error: 1.3598711376146042
best_error: 1.3598711375775006
best_error: 1.3598298690108315
best_error: 1.3598298677399117
best_error: 1.3597739133113314
best_error: 1.359773911729733
best_error: 1.3595812681472983
best_error: 1.359581265658898
best_error: 1.3576619443164821
best_error: 1.3576619371036631
best_error: 1.3517541823704224
best_error: 1.3517541548101324
best_error: 1.349104492995999
best_error: 1.3491044632937519
best_error: 1.340858777891157
best_error: 1.340858768831422
best_error: 1.3387052010022016
best_error: 1.3387051881840415
best_error: 1.3332240165116573
best_error: 1.3332239903553673
best_error: 1.3270986108088803
best_error: 1.3270986023309086
best_error: 1.3215139300096188
best_error: 1.321513929870283
best_error: 1.3215139292685933
best_error: 1.3194991419872386
best_error: 1.3194991359505321
best_error: 1.3184921620447738
best_error: 1.3184921538205825
best_error: 1.317919168426102
best_error: 1.3179191620458095
best_error: 1.3172697585416708
best_error: 1.317269756432994
best_error: 1.3170157682876107
best_error: 1.3170157509640885
best_error: 1.3168210628560064
best_error: 1.316821056125563
best_error: 1.3161700054937533
best_error: 1.3161699943910548
best_error: 1.3153434934703327
best_error: 1.3153434846922598
best_error: 1.314684212586341
best_error: 1.3146842059837394
best_error: 1.3145904587714505
best_error: 1.3145904541848512
best_error: 1.3144587359557645
best_error: 1.3144587334314928
best_error: 1.314219997601567
best_error: 1.314219996589358
best_error: 1.3142199965094445
best_error: 1.3142110392368098
best_error: 1.3142110377012424
best_error: 1.3140705898843692
best_error: 1.3140705886513608
best_error: 1.313903651790758
best_error: 1.3139036513459503
best_error: 1.3139036508305768
best_error: 1.3137442452916535
best_error: 1.3137442440540446
best_error: 1.3132507006126124
best_error: 1.3132507005646885
best_error: 1.3132506999716733
best_error: 1.3132506998321407
best_error: 1.3117493192361893
best_error: 1.31174931371352
best_error: 1.311726910650157
best_error: 1.3117268929044354
best_error: 1.3049356717285148
best_error: 1.3049356630644042
best_error: 1.3022884322132358
best_error: 1.3022883583765588
best_error: 1.297819526425144
best_error: 1.2978194942462429
best_error: 1.2951375365441933
best_error: 1.2951375142916957
best_error: 1.28434337812545
best_error: 1.2843433614535156
best_error: 1.2841988738207946
best_error: 1.2841988525767976
best_error: 1.2841227314580737
best_error: 1.2841227064512528
best_error: 1.2814159308541317
best_error: 1.2814158926937969
best_error: 1.2780979804614458
best_error: 1.2780979547323887
best_error: 1.275314187350797
best_error: 1.2753141812815003
best_error: 1.2749138026558087
best_error: 1.2749138024283175
best_error: 1.2749138022070796
best_error: 1.274913802177481
best_error: 1.2747845103900124
best_error: 1.2747845097409358
best_error: 1.2746520163454103
best_error: 1.2746520096729652
best_error: 1.2745902292929094
best_error: 1.2745902240082114
best_error: 1.274451853859853
best_error: 1.2744518492590564
best_error: 1.2742473578607676
best_error: 1.2742473474331641
best_error: 1.2740084838071537
best_error: 1.2740084761551307
best_error: 1.2732257039898915
best_error: 1.273225703744772
best_error: 1.273225703702754
best_error: 1.2716266766036626
best_error: 1.271626648743797
best_error: 1.270495082638368
best_error: 1.2704950661326968
best_error: 1.268065682809509
best_error: 1.2680656771916363
best_error: 1.267047179396062
best_error: 1.267047163572736
best_error: 1.2661439294185894
best_error: 1.266143907615727
best_error: 1.2657489029724684
best_error: 1.265748895262915
best_error: 1.2651029982167739
best_error: 1.2651029956987208
best_error: 1.2650376069342277
best_error: 1.2650375996825933
best_error: 1.2650356379745584
best_error: 1.2650356336203294
best_error: 1.264990701822142
best_error: 1.2649906970794225
best_error: 1.2649394472985627
best_error: 1.2649394377259777
best_error: 1.2646107748805535
best_error: 1.2646107698207303
best_error: 1.2644323358997374
best_error: 1.2644323349926498
best_error: 1.264294913486353
best_error: 1.2642949071844745
best_error: 1.264160522269335
best_error: 1.2641605125357815
best_error: 1.2634245857096977
best_error: 1.2634245719416035
best_error: 1.2622837439014665
best_error: 1.262283738907347
best_error: 1.2594403567509225
best_error: 1.25944035533409
best_error: 1.258253650588872
best_error: 1.258253634966134
best_error: 1.2572511170894989
best_error: 1.2572510929773655
best_error: 1.2554262962654503
best_error: 1.2554262745776863
best_error: 1.2537610665658567
best_error: 1.253761057972811
best_error: 1.2537581994228952
best_error: 1.2537581888152625
best_error: 1.2530595876880732
best_error: 1.2530595802377267
best_error: 1.2530259196382945
best_error: 1.2530259152494114
best_error: 1.2530140755462391
best_error: 1.2530140753115517
best_error: 1.2530140750038736
best_error: 1.2530082987255613
best_error: 1.2530082986764228
best_error: 1.2530082981765762
best_error: 1.2529780560888695
best_error: 1.2529780542987519
best_error: 1.2529736553730242
best_error: 1.2529736553288482
best_error: 1.2529736548378696
best_error: 1.25294714003919
best_error: 1.2529471350574028
best_error: 1.2529248471906846
best_error: 1.2529248460379758
best_error: 1.252924353878862
best_error: 1.25292435384472
best_error: 1.252924353376229
best_error: 1.2529229900918164
best_error: 1.252922989629492
best_error: 1.2529229895890364
best_error: 1.2529222092980898
best_error: 1.2529222092643955
best_error: 1.252922208796487
best_error: 1.2528180709828434
best_error: 1.252818070226354
best_error: 1.2525224713122207
best_error: 1.2525224693671182
best_error: 1.2524249948534152
best_error: 1.2524249912662033
best_error: 1.2519583040171152
best_error: 1.2519583025188457
best_error: 1.2519582998927352
best_error: 1.251637134575087
best_error: 1.25163713238494
