ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.603956866979036
best_error: 25.60395645781312
best_error: 5.044351156652166
best_error: 5.044351156399164
best_error: 5.044330902101091
best_error: 5.044330902092364
best_error: 5.044330902026334
best_error: 5.0442497772906805
best_error: 5.044249777281925
best_error: 5.044249777215843
best_error: 5.043923561445363
best_error: 5.043923561436487
best_error: 5.043923561370202
best_error: 5.042590513314988
best_error: 5.042590513305622
best_error: 5.042590513238504
best_error: 5.036755161920301
best_error: 5.036755161908594
best_error: 5.0367551618378625
best_error: 4.998764559615527
best_error: 4.998764559570272
best_error: 4.998764559485075
best_error: 4.949140429318113
best_error: 4.949140429061901
best_error: 4.2070418861788985
best_error: 4.2070417939036835
best_error: 3.0424984193112676
best_error: 3.0424981915649134
best_error: 3.042497268206029
best_error: 3.042497206780139
best_error: 2.576238032906694
best_error: 2.5762377532266436
best_error: 2.5762362704860062
best_error: 2.576235502035646
best_error: 2.576233405038958
best_error: 2.4682249571489545
best_error: 2.4682248971654
best_error: 2.4653979318121952
best_error: 2.465397929242145
best_error: 2.4653979218715727
best_error: 2.4652011775743783
best_error: 2.4652011747575533
best_error: 2.465201167698702
best_error: 2.4645000398047854
best_error: 2.4645000309641243
best_error: 2.4645000302256608
best_error: 2.4582166748959087
best_error: 2.4582166718953626
best_error: 2.4582166701299313
best_error: 2.4582166657600597
best_error: 2.456671729387564
best_error: 2.456671716319766
best_error: 2.4545254666469436
best_error: 2.4545254549127495
best_error: 2.450322999713177
best_error: 2.450322989879998
best_error: 2.450322954450545
best_error: 2.4493731315856575
best_error: 2.449373118182102
best_error: 2.44937309855198
best_error: 2.4467451386615475
best_error: 2.4467451308309687
best_error: 2.4467451297309646
best_error: 2.446515831851714
best_error: 2.446515821410454
best_error: 2.4461041265578523
best_error: 2.4461041074699343
best_error: 2.4454711561554405
best_error: 2.4454711298811995
best_error: 2.445075447970689
best_error: 2.445075417628777
best_error: 2.445075356554439
best_error: 2.444928557608876
best_error: 2.4449285347473766
best_error: 2.4449283598980034
best_error: 2.4446526554067756
best_error: 2.444652647214803
best_error: 2.4446526462326297
best_error: 2.444565517870542
best_error: 2.444565514622763
best_error: 2.444565508450707
best_error: 2.444525988326844
best_error: 2.4445259839041427
best_error: 2.444525978857833
best_error: 2.4443901979658627
best_error: 2.4443901875695033
best_error: 2.4430794692312343
best_error: 2.4430794365883077
best_error: 2.4379363726853196
best_error: 2.437936315210168
best_error: 2.416761574362836
best_error: 2.416761484343733
best_error: 2.262927021280768
best_error: 2.2629269193405306
best_error: 2.180039108313737
best_error: 2.1800390157559653
best_error: 2.173911565226328
best_error: 2.173911469046796
best_error: 2.1612493720981143
best_error: 2.1612492572316038
best_error: 2.1608494216622036
best_error: 2.1608493007075227
best_error: 2.160127757371396
best_error: 2.1601276369242752
best_error: 2.157288311893094
best_error: 2.1572881931384833
best_error: 2.14675404295031
best_error: 2.1467539311346466
best_error: 2.107035540287412
best_error: 2.1070354869921553
best_error: 1.9697174875496335
best_error: 1.9697174453863795
best_error: 1.9697174066279897
best_error: 1.8749674065741646
best_error: 1.8749673668006284
best_error: 1.8749672667009611
best_error: 1.864316852785048
best_error: 1.8643167749908198
best_error: 1.8546819142817421
best_error: 1.8546818019056446
best_error: 1.7920959866579254
best_error: 1.7920959526298679
best_error: 1.7920959006357706
best_error: 1.740721484713988
best_error: 1.7407214705896752
best_error: 1.7311658517707655
best_error: 1.731165766552347
best_error: 1.7280291517460271
best_error: 1.7280291376692622
best_error: 1.724270474791158
best_error: 1.7242704338113943
best_error: 1.7138988704963531
best_error: 1.7138988481092994
best_error: 1.7126953518273627
best_error: 1.7126953421594513
best_error: 1.7126575130749355
best_error: 1.712657499931303
best_error: 1.712136392844064
best_error: 1.7121363886067424
best_error: 1.7120599054965293
best_error: 1.7120599048493812
best_error: 1.7120599046440796
best_error: 1.712045319166558
best_error: 1.7120453170205527
best_error: 1.7120412034946937
best_error: 1.7120412026647756
best_error: 1.7120412024626561
best_error: 1.7120373591448221
best_error: 1.7120373588494229
best_error: 1.712037358508259
best_error: 1.7120373581044268
best_error: 1.7120273852449008
best_error: 1.712027383887384
best_error: 1.712002274335654
best_error: 1.7120022696959794
best_error: 1.7118109305357887
best_error: 1.711810911446239
best_error: 1.7114261555779569
best_error: 1.71142611719721
best_error: 1.710561786007628
best_error: 1.7105617185666881
best_error: 1.7075140808151068
best_error: 1.7075139534644257
best_error: 1.7075138200404623
best_error: 1.6941147549029083
best_error: 1.6941146437312136
best_error: 1.694114578618346
best_error: 1.6826271089714282
best_error: 1.682627007730522
best_error: 1.6826269765343977
best_error: 1.6820334478103904
best_error: 1.6820334186222246
best_error: 1.6798020398469449
best_error: 1.6798019615037203
best_error: 1.6796194499867472
best_error: 1.6796194334917016
best_error: 1.6786845791359364
best_error: 1.678684517861887
best_error: 1.6780110355900149
best_error: 1.6780109955868892
best_error: 1.676979383354933
best_error: 1.6769793829840407
best_error: 1.6769793813779208
best_error: 1.6751610785021236
best_error: 1.6751610675427424
best_error: 1.6743427083392413
best_error: 1.6743426439054998
best_error: 1.670671196495788
best_error: 1.6706711949979363
best_error: 1.6706711537828411
best_error: 1.6705543650308057
best_error: 1.6705543172861546
best_error: 1.6702711705409987
best_error: 1.6702711148117524
best_error: 1.6695458281752114
best_error: 1.6695457641816893
best_error: 1.6674823942402934
best_error: 1.6674823187366303
best_error: 1.665193109866999
best_error: 1.6651929680867057
best_error: 1.6651926597074513
best_error: 1.659950912414585
best_error: 1.659950815912262
best_error: 1.6554562361489502
best_error: 1.6554562242452595
best_error: 1.6554561909662027
best_error: 1.6547803286492246
best_error: 1.6547803102200185
best_error: 1.6547803090511082
best_error: 1.6529730792054562
best_error: 1.6529730670059757
best_error: 1.6529730435998045
best_error: 1.652464606486444
best_error: 1.6524646041486242
best_error: 1.652464546613445
best_error: 1.6523323270518757
best_error: 1.6523323256749913
best_error: 1.652332263495303
best_error: 1.6515404693335083
best_error: 1.6515403992241693
best_error: 1.649633930651776
best_error: 1.6496338433535331
best_error: 1.648181416662128
best_error: 1.6481813445205227
best_error: 1.6443787628983033
best_error: 1.6443787556922154
best_error: 1.6443787434809698
best_error: 1.6421357848768707
best_error: 1.6421357687886284
best_error: 1.6398947213544297
best_error: 1.639894716503293
best_error: 1.6397877778312355
best_error: 1.6397877753773793
best_error: 1.6397398385987805
best_error: 1.6397398290175857
best_error: 1.6397225179064414
best_error: 1.6397225129679496
best_error: 1.6397142747321167
best_error: 1.6397142737884054
best_error: 1.6397079254660138
best_error: 1.6397079252389941
best_error: 1.6397079250435944
best_error: 1.6397079248711637
best_error: 1.6397070325813385
best_error: 1.639707032570832
best_error: 1.639707031988123
best_error: 1.639706723984061
best_error: 1.639706723859001
best_error: 1.6397067233936138
best_error: 1.6397065840487297
best_error: 1.6397065839470284
best_error: 1.6397065834598543
best_error: 1.6397065035275915
best_error: 1.639706503478511
best_error: 1.6397065033296476
best_error: 1.6397065029417663
best_error: 1.639706430828508
best_error: 1.6397064306396099
best_error: 1.6397064302713595
best_error: 1.6397063945637151
best_error: 1.6397063942153707
best_error: 1.639706393978957
best_error: 1.639706360580874
best_error: 1.639706360530787
best_error: 1.6397063600095065
best_error: 1.6397063468311415
best_error: 1.6397063468290376
best_error: 1.6397063462579413
best_error: 1.6397062851405435
best_error: 1.6397062849461048
best_error: 1.6397062845700612
best_error: 1.6397062208985707
best_error: 1.639706220583346
best_error: 1.6397062203289945
best_error: 1.6397061642659876
best_error: 1.6397061639473585
best_error: 1.6397061636966201
best_error: 1.639705955329201
best_error: 1.6397059544241923
best_error: 1.6397049795051004
best_error: 1.639704978512942
best_error: 1.6397043252555454
best_error: 1.6397043243132152
best_error: 1.6397018812014954
best_error: 1.63970188042472
best_error: 1.6396976624276172
best_error: 1.639697657405153
best_error: 1.6396938633795326
best_error: 1.6396938597785153
best_error: 1.6396865259653208
best_error: 1.6396865217502954
best_error: 1.6396794532327719
best_error: 1.6396794482428356
best_error: 1.639676002008503
best_error: 1.6396759966585048
best_error: 1.639670413891333
best_error: 1.639670409747685
best_error: 1.6396634427073382
best_error: 1.6396634395910854
best_error: 1.6396274626800695
best_error: 1.6396274592510611
best_error: 1.6395438319310927
best_error: 1.6395438247514535
best_error: 1.6394978523295012
best_error: 1.6394978431183913
best_error: 1.6394728843317679
best_error: 1.6394728759109958
best_error: 1.6394598136842153
best_error: 1.6394598069499313
