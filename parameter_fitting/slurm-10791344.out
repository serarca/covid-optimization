ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.946388562239772
best_error: 10.946388537021397
best_error: 10.850334908820901
best_error: 10.850334876096678
best_error: 10.547124683809132
best_error: 10.547124623718464
best_error: 10.047483488699866
best_error: 10.047483376384658
best_error: 4.428278863656531
best_error: 4.428278835071358
best_error: 4.427700103137381
best_error: 4.427700098410098
best_error: 4.427700062910382
best_error: 4.425699895422892
best_error: 4.4256998909948315
best_error: 4.425699854818619
best_error: 4.417801855964705
best_error: 4.417801851751565
best_error: 4.417801815794692
best_error: 4.410880613356455
best_error: 4.410880593882757
best_error: 4.400292872526966
best_error: 4.400292857606646
best_error: 4.399839429636993
best_error: 4.399839367534587
best_error: 4.394220138384698
best_error: 4.394220129994798
best_error: 4.393859017662902
best_error: 4.393858941079825
best_error: 4.393146969298673
best_error: 4.393146885131758
best_error: 4.391428297360256
best_error: 4.39142829601935
best_error: 4.39142829019063
best_error: 4.380861090755464
best_error: 4.380861086465744
best_error: 4.380861083408587
best_error: 4.342927160843265
best_error: 4.342927146942207
best_error: 4.249774546854139
best_error: 4.249774490816298
best_error: 4.217103097360062
best_error: 4.217103039007336
best_error: 4.028481420258059
best_error: 4.028481411180133
best_error: 4.028481331498736
best_error: 3.9862172537387073
best_error: 3.9862172435791807
best_error: 3.9820392171691026
best_error: 3.982039190502551
best_error: 3.981545034996736
best_error: 3.981545015413276
best_error: 3.981176553905653
best_error: 3.9811765347773274
best_error: 3.9808389136359508
best_error: 3.9808388949846742
best_error: 3.980604245232199
best_error: 3.9806042267076096
best_error: 3.9805686286970237
best_error: 3.980568610182292
best_error: 3.9805667465186687
best_error: 3.9805666038042795
best_error: 3.9768920253252618
best_error: 3.976892004942836
best_error: 3.970170438306531
best_error: 3.9701704258545165
best_error: 3.969922372537849
best_error: 3.9699223570985054
best_error: 3.9698612082639038
best_error: 3.9698611908429777
best_error: 3.9698583546804898
best_error: 3.969858336946017
best_error: 3.969856281226741
best_error: 3.969856262448178
best_error: 3.9698506684613997
best_error: 3.9698506498084916
best_error: 3.969830008955771
best_error: 3.9698299911910397
best_error: 3.96953077078659
best_error: 3.9695307552263146
best_error: 3.9691777061162377
best_error: 3.9691776931811136
best_error: 3.969055764694231
best_error: 3.969055752175591
best_error: 3.968938307138899
best_error: 3.968938295941423
best_error: 3.9688247486273767
best_error: 3.9688247384604174
best_error: 3.9686893164382075
best_error: 3.968689307831555
best_error: 3.9685817605001246
best_error: 3.96858175189684
best_error: 3.9685484016545387
best_error: 3.9685483931541654
best_error: 3.9685393288019206
best_error: 3.9685393202914425
best_error: 3.968531009806243
best_error: 3.968531001286505
best_error: 3.9685270380830517
best_error: 3.9685270295589077
best_error: 3.9685267764710255
best_error: 3.968526767946557
best_error: 3.9685265426959653
best_error: 3.968526534171211
best_error: 3.968526411160444
best_error: 3.968526402635534
best_error: 3.9685262951287994
best_error: 3.9685262866037503
best_error: 3.9685262227660987
best_error: 3.9685262142409585
best_error: 3.968526161001892
best_error: 3.9685261524766746
best_error: 3.968526109979065
best_error: 3.968526101453785
best_error: 3.968526071552936
best_error: 3.9685260630276034
best_error: 3.9685260067644315
best_error: 3.9685259982390257
best_error: 3.9685259771452217
best_error: 3.9685259686197805
best_error: 3.968525961093455
best_error: 3.968525952567996
best_error: 3.968525950207357
best_error: 3.968525941681886
best_error: 3.9685259408712112
best_error: 3.968525932345724
best_error: 3.9685259251221767
best_error: 3.9685259226082152
best_error: 3.968525914082708
best_error: 3.968525908522568
best_error: 3.9685258996398196
