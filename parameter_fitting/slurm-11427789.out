ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.642232089711214
best_error: 24.642231793157315
best_error: 4.825242091251684
best_error: 4.825242090352897
best_error: 4.824963674757447
best_error: 4.824963674749468
best_error: 4.824963674701363
best_error: 4.823844207888435
best_error: 4.823844207880304
best_error: 4.82384420783206
best_error: 4.819265720242568
best_error: 4.819265720233779
best_error: 4.8192657201849824
best_error: 4.798986995403454
best_error: 4.798986995390971
best_error: 4.798986995340184
best_error: 4.650848646610463
best_error: 4.650848646423137
best_error: 4.570979983971752
best_error: 4.570979983342717
best_error: 4.459212977045007
best_error: 4.4592129748546885
best_error: 3.0762242719383237
best_error: 3.076224238159762
best_error: 3.073203831875604
best_error: 3.0732038015841705
best_error: 3.0629731175003276
best_error: 3.0629730846322976
best_error: 3.014017952387811
best_error: 3.014017932347887
best_error: 3.0140179172249217
best_error: 2.6547907152411225
best_error: 2.654790645887964
best_error: 2.654790631398064
best_error: 2.55267490597028
best_error: 2.55267483388403
best_error: 2.5526748081031054
best_error: 2.4872449373285326
best_error: 2.4872448297843963
best_error: 2.4816633437668667
best_error: 2.4816632428991108
best_error: 2.3514415362439114
best_error: 2.3514414776422363
best_error: 2.3373340842753514
best_error: 2.3373340324758924
best_error: 2.3245613970692602
best_error: 2.3245613711624675
best_error: 2.3219408833372026
best_error: 2.321940882183317
best_error: 2.321940872965496
best_error: 2.315550833372303
best_error: 2.3155508327042718
best_error: 2.3155508229656987
best_error: 2.313495402913259
best_error: 2.3134953634560373
best_error: 2.301568705550441
best_error: 2.3015686999131035
best_error: 2.30156869245129
best_error: 2.273687882288407
best_error: 2.27368785593321
best_error: 2.2303982469041097
best_error: 2.2303980402188897
best_error: 2.1704620764075844
best_error: 2.1704618677913237
best_error: 1.9428251616316756
best_error: 1.9428249614134714
best_error: 1.8528308976617427
best_error: 1.8528308679950698
best_error: 1.6471967122762015
best_error: 1.6471964919623887
best_error: 1.5956175850651209
best_error: 1.5956174992855567
best_error: 1.5910106385936822
best_error: 1.591010607025648
best_error: 1.5395030192360546
best_error: 1.5395029994059914
best_error: 1.5388241506227
best_error: 1.5388241349937741
best_error: 1.5386162108467973
best_error: 1.5386162035942725
best_error: 1.538515325908628
best_error: 1.5385153188843839
best_error: 1.5381676595047316
best_error: 1.5381676529727861
best_error: 1.5380301716072764
best_error: 1.5380301630553357
best_error: 1.537772655258743
best_error: 1.5377726520527006
best_error: 1.5376471385372512
best_error: 1.5376471385120198
best_error: 1.5376471380348875
best_error: 1.537647137922156
best_error: 1.5375912206341404
best_error: 1.5375912205882423
best_error: 1.537591220124561
best_error: 1.5375912200201844
best_error: 1.536771293740555
best_error: 1.5367712734246146
best_error: 1.5350326834869759
best_error: 1.5350326426176535
best_error: 1.5259202782256143
best_error: 1.5259201706032939
best_error: 1.5209002654113426
best_error: 1.5209002284057962
best_error: 1.5202647379148682
best_error: 1.5202647190002139
best_error: 1.5194697379702935
best_error: 1.5194697367371628
best_error: 1.5194697356020626
best_error: 1.5126777570015917
best_error: 1.5126777333599548
best_error: 1.512504370024255
best_error: 1.5125043649144267
best_error: 1.5124722135292816
best_error: 1.5124722122153142
best_error: 1.512472207702002
best_error: 1.5124415243480476
best_error: 1.5124415204908954
best_error: 1.512398909876951
best_error: 1.5123989029706013
best_error: 1.5123700063261538
best_error: 1.5123700037081798
best_error: 1.5122925824329363
best_error: 1.5122925735272157
best_error: 1.510519616994894
best_error: 1.5105195860716025
best_error: 1.5082312305173426
best_error: 1.508231189870314
best_error: 1.5079754167827832
best_error: 1.5079754151010554
best_error: 1.5079754048322451
best_error: 1.507466380625372
best_error: 1.5074663695545811
best_error: 1.5070943765865923
best_error: 1.507094374304103
best_error: 1.5070943736179523
best_error: 1.5070208398827805
best_error: 1.5070208295533838
best_error: 1.506987226812233
best_error: 1.5069872177838013
best_error: 1.5068996203742626
best_error: 1.5068996198990592
best_error: 1.5068996195778743
best_error: 1.506899619543172
best_error: 1.5068996194558253
best_error: 1.506871376332791
best_error: 1.5068713757615457
best_error: 1.506871375573843
best_error: 1.5068713753728857
best_error: 1.5067997828019355
best_error: 1.5067997786186658
best_error: 1.506693907449745
best_error: 1.5066939002885444
best_error: 1.5064696961109325
best_error: 1.5064696887261775
best_error: 1.5062426275775171
best_error: 1.5062426223276884
best_error: 1.5061728605111122
best_error: 1.5061728576952587
best_error: 1.506138396457866
best_error: 1.5061383946821154
best_error: 1.5061294419170865
best_error: 1.5061294359730686
best_error: 1.5061159444772718
best_error: 1.506115935921936
best_error: 1.5060198750466571
best_error: 1.5060198650439007
best_error: 1.505519055177893
best_error: 1.505519029980111
best_error: 1.5048001182302693
best_error: 1.504800086361814
best_error: 1.501318474765116
best_error: 1.5013184267449027
best_error: 1.496425068340731
best_error: 1.4964250215308115
best_error: 1.495593638145425
best_error: 1.4955935996030307
best_error: 1.4896502415111221
best_error: 1.4896502263877829
best_error: 1.4852379298178968
best_error: 1.4852378982009395
best_error: 1.4776484384494544
best_error: 1.4776484259262137
best_error: 1.4772988568440057
best_error: 1.4772988208937883
best_error: 1.476755749661441
best_error: 1.4767557490029004
best_error: 1.4767225282391043
best_error: 1.4767225259535937
best_error: 1.4767155639362028
best_error: 1.4767155636893472
best_error: 1.4767116009589452
best_error: 1.4767116007764651
best_error: 1.4767116007716679
best_error: 1.476710123412895
best_error: 1.4767101231985214
best_error: 1.4767094085803385
best_error: 1.4767094082599104
best_error: 1.4767078930100257
best_error: 1.4767078929110518
best_error: 1.4767078926010566
best_error: 1.4767068220513226
best_error: 1.4767068214239643
best_error: 1.4767024746734592
best_error: 1.4767024739270533
best_error: 1.476693341614338
best_error: 1.476693340219483
best_error: 1.4766795312455598
best_error: 1.4766795308903644
best_error: 1.4766408227690035
best_error: 1.4766408226611738
best_error: 1.4766408224413958
best_error: 1.4765732712076969
best_error: 1.4765732712053825
best_error: 1.4765732708040815
best_error: 1.4763815087707248
best_error: 1.4763815086551118
best_error: 1.4763815080665141
best_error: 1.4760309086057009
best_error: 1.4760309079774916
best_error: 1.4760309077447196
best_error: 1.4749282949232936
best_error: 1.4749282926778384
best_error: 1.4732063562084718
best_error: 1.4732062773365358
best_error: 1.4703839180270006
best_error: 1.4703839149732802
best_error: 1.469980492263903
best_error: 1.469980490794577
best_error: 1.4697071792673158
best_error: 1.4697071732037512
best_error: 1.4694340588056192
best_error: 1.4694340505485664
best_error: 1.4689228340393836
best_error: 1.4689228300115897
best_error: 1.4689228226311624
best_error: 1.4686574301452273
best_error: 1.468657425433345
best_error: 1.4684161505640174
best_error: 1.468416148970272
best_error: 1.468416144689693
best_error: 1.4682007431575677
best_error: 1.4682007343530656
best_error: 1.4678206403553946
best_error: 1.4678206283108028
best_error: 1.4665883624698126
best_error: 1.466588339248835
best_error: 1.4665737524885034
best_error: 1.4665737250255304
best_error: 1.4665660165953123
best_error: 1.4665659866462994
best_error: 1.464890155200306
best_error: 1.4648901532457375
best_error: 1.4648901446961018
best_error: 1.4644886585388277
best_error: 1.4644886277897686
best_error: 1.4630974500871556
best_error: 1.4630974363493374
best_error: 1.4620838748674208
best_error: 1.4620838680048458
best_error: 1.4620127402765883
best_error: 1.4620127401669831
best_error: 1.4620127401610248
best_error: 1.46201274012193
best_error: 1.4619120359473292
best_error: 1.4619120349092258
best_error: 1.4618781181169576
best_error: 1.4618781146104738
best_error: 1.4618728866205537
best_error: 1.4618728838950066
best_error: 1.4618641516215232
best_error: 1.4618641509177954
best_error: 1.461843961507718
best_error: 1.461843960657578
best_error: 1.4617740235550036
best_error: 1.4617740231620024
