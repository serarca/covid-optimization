ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.663351079432992
best_error: 25.663350650213584
best_error: 5.070316609110095
best_error: 5.070316608940509
best_error: 5.070305193547408
best_error: 5.070305193535046
best_error: 5.070305193458042
best_error: 5.070259489941998
best_error: 5.070259489929603
best_error: 5.0702594898525675
best_error: 5.0700760109784815
best_error: 5.0700760109659475
best_error: 5.070076010888783
best_error: 5.069331275250477
best_error: 5.069331275237381
best_error: 5.069331275159693
best_error: 5.066166202411203
best_error: 5.066166202395634
best_error: 5.066166202315752
best_error: 5.049293066555962
best_error: 5.049293066523378
best_error: 5.049293066433617
best_error: 4.233578899731089
best_error: 4.233578397634582
best_error: 3.0654118692236705
best_error: 3.065411456579576
best_error: 3.0654113603662823
best_error: 2.951263401363513
best_error: 2.95126330879946
best_error: 2.937333504509035
best_error: 2.937333498994492
best_error: 2.9354066446173874
best_error: 2.935406641215036
best_error: 2.9354066406162826
best_error: 2.9289132174351398
best_error: 2.928913173367881
best_error: 2.820137078669473
best_error: 2.8201369660927402
best_error: 2.8201368788179484
best_error: 2.8201368213227354
best_error: 2.814970316619248
best_error: 2.8149702679949558
best_error: 2.7701709302471023
best_error: 2.7701709259495493
best_error: 2.7701709250315014
best_error: 2.765846974763
best_error: 2.765846972317072
best_error: 2.7658469719743404
best_error: 2.7658469687930722
best_error: 2.761824630160281
best_error: 2.7618246134995195
best_error: 2.758824667657775
best_error: 2.7588246530121405
best_error: 2.7466970052177913
best_error: 2.746697002239397
best_error: 2.746696999005697
best_error: 2.697381424230891
best_error: 2.6973814150514874
best_error: 2.524415160100069
best_error: 2.5244147914019126
best_error: 2.524408709260171
best_error: 2.5244060084858004
best_error: 2.213504741434204
best_error: 2.2135047363325437
best_error: 2.213504727605516
best_error: 2.204820756518349
best_error: 2.2048207244663387
best_error: 2.159159995440186
best_error: 2.15915987974757
best_error: 1.909343909417847
best_error: 1.9093438157123928
best_error: 1.8240853073073888
best_error: 1.8240851013551662
best_error: 1.7370212264314193
best_error: 1.737021125729265
best_error: 1.7337779717029351
best_error: 1.7337779442253798
best_error: 1.733776653106404
best_error: 1.733776625834935
best_error: 1.7335966306185246
best_error: 1.733596630434096
best_error: 1.7335966294904483
best_error: 1.733596627139489
best_error: 1.7335505244070193
best_error: 1.7335505235168298
best_error: 1.7335505210453417
best_error: 1.7280669326461053
best_error: 1.7280669204521053
best_error: 1.7246284817002913
best_error: 1.7246284812437596
best_error: 1.7246152445703766
best_error: 1.7246152441165885
best_error: 1.7236969047278634
best_error: 1.7236968920530629
best_error: 1.7236968842013747
best_error: 1.7236967879482503
best_error: 1.723696773997848
best_error: 1.7185505253663738
best_error: 1.7185504724599219
best_error: 1.7185504336884494
best_error: 1.7183181867954003
best_error: 1.7183181389393323
best_error: 1.717385899085263
best_error: 1.7173858815130654
best_error: 1.7166482151547264
best_error: 1.7166481934350972
best_error: 1.7154911719529247
best_error: 1.7154911655982472
best_error: 1.7147876772933734
best_error: 1.7147876766795607
best_error: 1.7144058959758652
best_error: 1.7144058899992216
best_error: 1.7141641089120498
best_error: 1.7141640961495272
best_error: 1.7140571291358089
best_error: 1.7140571173229526
best_error: 1.7139802527529797
best_error: 1.7139802431937674
best_error: 1.7139671621097603
best_error: 1.7139671548180229
best_error: 1.713960044141425
best_error: 1.7139600370274406
best_error: 1.7139411813842529
best_error: 1.7139411751235831
best_error: 1.7139121604695102
best_error: 1.713912153907264
best_error: 1.7138291935783951
best_error: 1.7138291879477767
best_error: 1.7137370507978031
best_error: 1.7137370450992078
best_error: 1.7133859501212603
best_error: 1.7133859425696867
best_error: 1.7133366827530654
best_error: 1.7133366744244924
best_error: 1.712993501713666
best_error: 1.7129934929077435
best_error: 1.7129026289743112
best_error: 1.7129026222933006
best_error: 1.7128617415916167
best_error: 1.7128617388959426
best_error: 1.7128559093603493
best_error: 1.7128559081314256
best_error: 1.7128549949583038
best_error: 1.7128549944337925
best_error: 1.7128545518044527
best_error: 1.7128545514163165
best_error: 1.7128545512869464
best_error: 1.7128544285496232
best_error: 1.7128544282511513
best_error: 1.7128544282483178
best_error: 1.7128544280537523
best_error: 1.7128542777683406
best_error: 1.7128542770146458
best_error: 1.7128542020791087
best_error: 1.7128542018363284
best_error: 1.7128542017794992
best_error: 1.712854201578854
best_error: 1.712854192784386
best_error: 1.7128541925673715
best_error: 1.7128541924839253
best_error: 1.712854192285967
best_error: 1.71285418810627
best_error: 1.712854187813727
best_error: 1.7128541878066614
best_error: 1.7128541876060668
best_error: 1.7128541815984843
best_error: 1.7128541813246771
best_error: 1.7128541812989027
best_error: 1.7128541810988036
best_error: 1.7128541697042343
best_error: 1.7128541691999692
best_error: 1.7128541681555234
best_error: 1.712854167969402
best_error: 1.7128541678550837
best_error: 1.7128541676576312
best_error: 1.7128541670407502
best_error: 1.7128541666956894
best_error: 1.7128541665583854
best_error: 1.7128541527328138
best_error: 1.7128541525219552
best_error: 1.7128541524323766
best_error: 1.712854152234942
best_error: 1.7128541063308225
best_error: 1.7128541055526094
best_error: 1.7128540154642686
best_error: 1.7128540148482225
best_error: 1.7128537351022615
best_error: 1.712853734829436
best_error: 1.7128537348018427
best_error: 1.7128537346044874
best_error: 1.7128525890356383
best_error: 1.7128525888051567
best_error: 1.7128525887349313
best_error: 1.7128525885195491
best_error: 1.7128496713753785
best_error: 1.7128496710608845
best_error: 1.7128496707038678
best_error: 1.712849060524798
best_error: 1.7128490602129292
best_error: 1.7128490598852502
best_error: 1.7128480562061832
best_error: 1.712848055895144
best_error: 1.7128480555646388
best_error: 1.7128455608241069
best_error: 1.712845560511667
best_error: 1.7128455601655779
best_error: 1.7128417529359767
best_error: 1.712841752624837
best_error: 1.712841752293314
best_error: 1.7128077997305073
best_error: 1.7128077994138504
best_error: 1.7128077990998145
best_error: 1.7126925647299975
best_error: 1.7126925644015623
best_error: 1.712692564161202
best_error: 1.7125364293374572
best_error: 1.7125364289727258
best_error: 1.7125364288046896
best_error: 1.7123901121027354
best_error: 1.7123901118469769
best_error: 1.7123901117095397
best_error: 1.7123901115759614
best_error: 1.712332447662818
best_error: 1.7123324468700079
best_error: 1.7123176320485138
best_error: 1.712317631393555
best_error: 1.7122902016473207
best_error: 1.7122902016304535
best_error: 1.7122902012573875
best_error: 1.7122680255007572
best_error: 1.7122680251198836
best_error: 1.7121607817740323
best_error: 1.7121607814264186
best_error: 1.7121607811992368
best_error: 1.7121021678803856
best_error: 1.7121021675184829
best_error: 1.712102167332509
best_error: 1.712090842578705
best_error: 1.7120908423614751
best_error: 1.7120908421845158
best_error: 1.7120908421553005
best_error: 1.712057983469971
best_error: 1.712057983102425
best_error: 1.7120579828720721
best_error: 1.7119974885195122
best_error: 1.7119974881484763
best_error: 1.7119974878740978
best_error: 1.7119778930065328
best_error: 1.7119778929368084
best_error: 1.7119778926168534
best_error: 1.7119778924405018
best_error: 1.7119777757818366
best_error: 1.7119777757120362
best_error: 1.7119777753921555
best_error: 1.7119777752157892
best_error: 1.711967752426234
best_error: 1.7119677520575656
best_error: 1.7119677517227294
best_error: 1.7119439001119507
best_error: 1.7119438997313683
best_error: 1.7119438994302256
best_error: 1.7119438749353386
best_error: 1.7119438745547553
best_error: 1.7119438742536017
best_error: 1.7119434488518326
best_error: 1.7119434484747216
best_error: 1.7119434481507514
best_error: 1.7119434475659359
best_error: 1.711943447188824
best_error: 1.7119434468648504
best_error: 1.7119434348889728
best_error: 1.711943434511856
best_error: 1.7119434341878514
best_error: 1.711943434154233
best_error: 1.7119434337785535
best_error: 1.7119434334435741
best_error: 1.7119434331958414
best_error: 1.711943432871833
best_error: 1.7119434253689274
best_error: 1.711943424993248
best_error: 1.7119434246582668
best_error: 1.7119282308369341
best_error: 1.7119282304502534
best_error: 1.7119282301496659
best_error: 1.7119280821652163
best_error: 1.7119280817785336
best_error: 1.7119280814779239
best_error: 1.711919612898479
best_error: 1.7119196125364247
best_error: 1.7119196120427482
best_error: 1.711909833199282
best_error: 1.7119098324708577
best_error: 1.7119088590295852
best_error: 1.7118987273552342
best_error: 1.71189872698139
best_error: 1.7118987265331649
best_error: 1.711886596820839
best_error: 1.7118865955012907
best_error: 1.711885416033696
best_error: 1.711885414708353
best_error: 1.7118737684670162
best_error: 1.7118737680986555
best_error: 1.7118737675784446
best_error: 1.7118510336530923
best_error: 1.7118509913730986
best_error: 1.71183124472156
best_error: 1.7118312443536734
best_error: 1.7118312438425247
best_error: 1.7117692671347202
best_error: 1.7117692667667013
best_error: 1.7117692662958246
best_error: 1.7115663839446043
best_error: 1.7115663835688306
best_error: 1.7115663832666328
best_error: 1.7112061755102237
best_error: 1.7112061754871675
best_error: 1.7112061751246512
best_error: 1.7112061750892762
best_error: 1.7111187133628847
best_error: 1.7111187118359608
best_error: 1.711109668320207
best_error: 1.711109665188272
best_error: 1.711107528020168
best_error: 1.7111075247206398
best_error: 1.7111006517791278
best_error: 1.7111006473885297
best_error: 1.711036869195955
best_error: 1.7110368635927187
best_error: 1.7108851195691523
best_error: 1.7108851154403666
best_error: 1.7108693549291951
best_error: 1.7108693501020318
best_error: 1.7108586848710174
best_error: 1.710858680612308
best_error: 1.7108519747866566
best_error: 1.7108519723737237
best_error: 1.710846648012061
best_error: 1.7108466459087737
best_error: 1.7108312511361623
best_error: 1.710831250576236
best_error: 1.7108089343382054
best_error: 1.7108085040088699
best_error: 1.7107562945062804
best_error: 1.7107562928981097
best_error: 1.7106187488155649
best_error: 1.710618747718493
best_error: 1.7101387012542761
best_error: 1.7101387012528872
best_error: 1.7101387008964775
best_error: 1.7101387006887767
best_error: 1.7092818932483704
best_error: 1.7092818904184608
