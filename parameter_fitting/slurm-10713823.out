ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.620373952747016
best_error: 11.620373929342017
best_error: 11.62037389721874
best_error: 11.474935392906309
best_error: 11.474935363904232
best_error: 11.474935326799873
best_error: 10.260838854632794
best_error: 10.260838770003971
best_error: 10.260838712178613
best_error: 9.380271816777375
best_error: 9.380271700390605
best_error: 9.231606646069423
best_error: 9.231606528032295
best_error: 9.155878715623036
best_error: 9.155878598360513
best_error: 7.675822635098399
best_error: 7.675822490214209
best_error: 7.602762998817157
best_error: 7.60276292409127
best_error: 7.602762878005364
best_error: 7.200799288883515
best_error: 7.200799231867034
best_error: 7.200799156809765
best_error: 5.0006283885739204
best_error: 5.000628224244438
best_error: 5.000628056628146
best_error: 4.383288571645105
best_error: 4.383288427361092
best_error: 4.383288269209339
best_error: 4.103441475565325
best_error: 4.1034413390795415
best_error: 4.103441192676312
best_error: 4.090401855263217
best_error: 4.090401855262803
best_error: 3.971322317070061
best_error: 3.9713221807845502
best_error: 3.971322036595617
best_error: 3.855874316434548
best_error: 3.855874180727922
best_error: 3.85587403803918
best_error: 3.8311602895136136
best_error: 3.831160152873872
best_error: 3.8311600108670287
best_error: 3.8190583052035008
best_error: 3.81905816766472
best_error: 3.819058025970206
best_error: 3.8138315493337616
best_error: 3.813831411406911
best_error: 3.8138312704071526
best_error: 3.810291771984013
best_error: 3.8102916337943933
best_error: 3.810291492886087
best_error: 3.8100946488187852
best_error: 3.810094648818396
best_error: 3.810044602053391
best_error: 3.8100444638455393
best_error: 3.8100443229438214
best_error: 3.8100260633761267
best_error: 3.810025925166907
best_error: 3.8100257842656795
best_error: 3.810024386808398
best_error: 3.810024386808006
best_error: 3.085734311865137
best_error: 3.0857341102447924
best_error: 2.6989730684157123
best_error: 2.698972828946788
best_error: 1.997118461907767
best_error: 1.9971181769957311
best_error: 1.603353289375141
best_error: 1.603352937404095
best_error: 1.5581461381414872
best_error: 1.558146138141076
best_error: 1.5400886003990761
best_error: 1.5400882252507102
best_error: 1.536198168431239
best_error: 1.536197622629393
best_error: 1.4774309764267253
best_error: 1.4774305517456505
best_error: 1.4675110522279735
best_error: 1.4675110522276082
best_error: 1.442781300962336
best_error: 1.442780849268971
best_error: 1.4381348177817705
best_error: 1.4381348177814237
best_error: 1.4348762635766408
best_error: 1.4348758032830387
best_error: 1.4329531908203217
best_error: 1.4329531908199407
best_error: 1.4319366231574073
best_error: 1.4319361601256706
best_error: 1.4319334984455998
best_error: 1.4319334984452192
best_error: 1.4319307968511343
best_error: 1.4319303338186935
best_error: 1.4319294948518464
best_error: 1.431929494851501
best_error: 1.4319293462036848
best_error: 1.4319288831710804
best_error: 1.4319285745237833
best_error: 1.4319285716024721
best_error: 1.4319285344539838
best_error: 1.431928534453637
best_error: 1.430448240922794
best_error: 1.430448240922412
best_error: 1.430409726439417
best_error: 1.4304092621887539
best_error: 1.4259910203613169
best_error: 1.4259910203609412
best_error: 1.4245886970754753
best_error: 1.4245886970751078
best_error: 1.422038033067623
best_error: 1.4220375785054102
best_error: 1.418374460339718
best_error: 1.4183744603393496
best_error: 1.4161117698560952
best_error: 1.4161117698557244
best_error: 1.4096589984776937
best_error: 1.4096584899189164
best_error: 1.4046350405843593
best_error: 1.4046345261697164
best_error: 1.4005615411398564
best_error: 1.4005610391779733
best_error: 1.3976356284883678
best_error: 1.3976356284879958
best_error: 1.3976354498561545
best_error: 1.3974679520751603
best_error: 1.3974679520748319
best_error: 1.397449118878589
best_error: 1.3974486154924954
best_error: 1.3974292634822394
best_error: 1.3974292634818948
best_error: 1.3974182637745283
best_error: 1.3974177603759639
best_error: 1.3974147739906728
best_error: 1.3974147739903242
best_error: 1.3973953461095632
best_error: 1.3973948427084846
best_error: 1.3973344981646498
best_error: 1.3973344981642764
best_error: 1.397334319570591
best_error: 1.3973293558176252
best_error: 1.397328852411123
best_error: 1.3971232245716438
best_error: 1.397123224571301
best_error: 1.3971230461636468
best_error: 1.3971180811137849
best_error: 1.3971175882371423
best_error: 1.3970955343019682
best_error: 1.3970950383509027
best_error: 1.3970915223270313
best_error: 1.3970915223266798
best_error: 1.397091343886419
best_error: 1.3970769668799055
best_error: 1.3970764709186563
best_error: 1.3970197165406755
best_error: 1.397019220028609
best_error: 1.3969681122085404
best_error: 1.3969681122081878
best_error: 1.3969679338225935
best_error: 1.3969672166497245
best_error: 1.3969667176369476
best_error: 1.3969200960256225
best_error: 1.396919600220182
best_error: 1.3968658483614504
best_error: 1.396865848361093
best_error: 1.3968656700508992
best_error: 1.3967871972209842
best_error: 1.396787197220612
best_error: 1.396787018936316
best_error: 1.3967445288885476
best_error: 1.3967440330831464
best_error: 1.3966172453669783
best_error: 1.3966172453666248
best_error: 1.3966170672786271
best_error: 1.3964328589061652
best_error: 1.3964328589058268
best_error: 1.3962910471642183
best_error: 1.3962905548168394
best_error: 1.3959464940752904
best_error: 1.3959464940749462
best_error: 1.3959463159068375
