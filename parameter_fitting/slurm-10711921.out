ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.65866074675651
best_error: 11.658660518709809
best_error: 9.14320424596454
best_error: 9.14320369692374
best_error: 6.269248103542221
best_error: 6.269247742386995
best_error: 6.198303002874855
best_error: 6.198302681354275
best_error: 6.0341309643631025
best_error: 6.034130659487802
best_error: 5.94277379838131
best_error: 5.9427734947868265
best_error: 5.9075874736645595
best_error: 5.907587168732898
best_error: 5.88523510486284
best_error: 5.885234799158526
best_error: 5.870877158549227
best_error: 5.870876853507883
best_error: 5.861334706108184
best_error: 5.861334399582969
best_error: 5.856103301334112
best_error: 5.856102993997371
best_error: 5.849015648754461
best_error: 5.849015340389015
best_error: 5.84425694492654
best_error: 5.8442566358710115
best_error: 5.8438085183430095
best_error: 5.843808209222459
best_error: 5.843615396150236
best_error: 5.843615087001697
best_error: 5.843531491171669
best_error: 5.843531182010969
best_error: 5.8434901752766475
best_error: 5.843489866109973
best_error: 5.843472449364217
best_error: 5.843472140194963
best_error: 5.843460406290019
best_error: 5.84346009711902
best_error: 5.843459985104193
best_error: 5.843459931329248
best_error: 5.694544937718324
best_error: 5.694544527149498
best_error: 5.6908493001672085
best_error: 5.690848891161835
best_error: 5.677494279946609
best_error: 5.677493884370214
best_error: 5.649697627033371
best_error: 5.649697370150176
best_error: 5.600259776328417
best_error: 5.60025941510062
best_error: 5.574820923945123
best_error: 5.574820560337564
best_error: 5.568290015107069
best_error: 5.568289650691339
best_error: 5.5670620573181315
best_error: 5.56706169375488
best_error: 5.565562790344558
best_error: 5.5655624265162205
best_error: 5.565499411171437
best_error: 5.56549915760567
best_error: 5.433048535220578
best_error: 5.433048132470102
best_error: 5.3491535887032375
best_error: 5.349152740353814
best_error: 5.208152037519154
best_error: 5.208151509094083
best_error: 5.015311630578553
best_error: 5.015310891587253
best_error: 4.984604443416293
best_error: 4.984604305471024
best_error: 4.979337158140771
best_error: 4.979336505527094
best_error: 4.978629859060056
best_error: 4.978629706233892
best_error: 4.976837720739083
best_error: 4.976837566098142
best_error: 4.976827326848524
best_error: 4.976826641227371
best_error: 4.976813210170493
best_error: 4.976813057396164
best_error: 4.976797153509689
best_error: 4.976796467879053
best_error: 4.976793238573882
best_error: 4.976792555576674
best_error: 4.971818587633047
best_error: 4.971818435527819
best_error: 4.970265328446943
best_error: 4.9702651783457
best_error: 4.970014841152865
best_error: 4.97001414661742
best_error: 4.969067569291389
best_error: 4.96906741569007
best_error: 4.969059806763688
best_error: 4.969059118853163
best_error: 4.9662799504483806
best_error: 4.966279293057708
best_error: 4.966014852423575
best_error: 4.966014200297981
best_error: 4.96369717371931
best_error: 4.963697000111909
best_error: 4.963536713101466
best_error: 4.963536066305229
best_error: 4.9617065888154075
best_error: 4.961705959878618
best_error: 4.960863205279038
best_error: 4.960863020802611
best_error: 4.96055614142079
best_error: 4.9605555138652155
best_error: 4.956982027653454
best_error: 4.956981846964825
best_error: 4.952440320047039
best_error: 4.952440127861104
best_error: 4.940865534813204
best_error: 4.940864913718839
best_error: 4.929426486835316
best_error: 4.929426303728349
best_error: 4.922061546968209
best_error: 4.92206136479701
best_error: 4.916677789175994
best_error: 4.916677609317317
best_error: 4.914731585065812
best_error: 4.914731407264789
best_error: 4.914182315681096
best_error: 4.914182137789937
best_error: 4.91412931530484
best_error: 4.914128656816357
best_error: 4.903372393342455
best_error: 4.903372221692013
best_error: 4.900882064260298
best_error: 4.900881877119664
best_error: 4.89181931372622
best_error: 4.891819122140356
best_error: 4.8881030954536255
best_error: 4.888102469019749
best_error: 4.879528422714287
best_error: 4.879528212364567
best_error: 4.872618735390924
best_error: 4.872618538806515
best_error: 4.867991271292589
best_error: 4.867990630399696
best_error: 4.853638646763012
best_error: 4.853638460502911
best_error: 4.845535450252459
best_error: 4.845535255787694
best_error: 4.839072202169755
best_error: 4.839071586082851
best_error: 4.800364826928756
best_error: 4.8003646119834436
best_error: 4.79298774716688
best_error: 4.792987152141444
best_error: 4.787729888396545
best_error: 4.787729674734769
