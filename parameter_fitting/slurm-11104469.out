ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 68
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 103.24591895060875
best_error: 103.24591884763325
best_error: 103.24591875351057
best_error: 20.423735187147038
best_error: 20.42373518714595
best_error: 20.423735185198964
best_error: 20.423133690875616
best_error: 20.42313368891055
best_error: 20.42067435137976
best_error: 20.420674349344274
best_error: 20.409891597820803
best_error: 20.409891595459236
best_error: 20.342480512780416
best_error: 20.34248050782501
best_error: 20.144876708309397
best_error: 20.144876691731355
best_error: 18.42855797893185
best_error: 18.428557768280555
best_error: 16.932481953087613
best_error: 16.93248155601558
best_error: 14.959056250206292
best_error: 14.959055643395441
best_error: 13.791635784445816
best_error: 13.79163577850494
best_error: 13.791635767242845
best_error: 13.791320555394154
best_error: 13.791320551018597
best_error: 13.791320538438924
best_error: 13.79132053431946
best_error: 13.791200556961096
best_error: 13.791200551353496
best_error: 13.791200539066136
best_error: 13.772404461279294
best_error: 13.772404456807163
best_error: 13.772404446309292
best_error: 13.772404442030648
best_error: 13.683128783592174
best_error: 13.683128779264166
best_error: 13.683128772902634
best_error: 13.683128769214715
best_error: 13.655087682985835
best_error: 13.65508738446939
best_error: 13.594752285257306
best_error: 13.594752276945039
best_error: 13.594752275972978
best_error: 13.566996113607292
best_error: 13.566996105118438
best_error: 13.566996104315276
best_error: 13.560897528164304
best_error: 13.560897519552737
best_error: 13.560897518870561
best_error: 13.558964611752977
best_error: 13.558964584024496
best_error: 13.558837040589285
best_error: 13.55883703197216
best_error: 13.558837031294239
best_error: 13.558706461971639
best_error: 13.558706453355207
best_error: 13.558706452676507
best_error: 13.558662228488888
best_error: 13.55866221987269
best_error: 13.558662219193732
best_error: 13.558657697512302
best_error: 13.558657688896126
best_error: 13.558657688217139
best_error: 13.558656639675874
best_error: 13.558656631059694
best_error: 13.558656630380707
best_error: 13.55865625671149
best_error: 13.558656248095318
best_error: 13.558656247416327
best_error: 13.558656232402818
best_error: 13.558656204677892
best_error: 13.558656191398029
best_error: 13.558656182781863
best_error: 13.558656182102867
best_error: 13.55865615322021
best_error: 13.558656144604043
best_error: 13.558656143925049
best_error: 13.558656141382958
best_error: 13.558656132766785
best_error: 13.55865613208779
best_error: 13.544588150350668
best_error: 13.544588141946626
best_error: 13.54458814107716
best_error: 13.541658386415829
best_error: 13.541658384455483
best_error: 13.54165837714685
best_error: 13.52547363896958
best_error: 13.525473637011318
best_error: 13.52547362970068
best_error: 13.465431588043856
best_error: 13.465431580931668
best_error: 13.465431578791861
best_error: 13.122509887060069
best_error: 13.122509878230078
best_error: 13.122509877811458
best_error: 12.493073679194723
best_error: 12.49307366764948
best_error: 12.48607416822308
best_error: 12.486074156737166
best_error: 12.458524449039661
best_error: 12.45852443801219
best_error: 12.358117762359894
best_error: 12.35811775284304
best_error: 12.273736636221866
best_error: 12.273736546679649
best_error: 12.270072462861993
best_error: 12.270072373171697
best_error: 12.268013813981366
best_error: 12.268013726764808
best_error: 12.264882152556481
best_error: 12.264882070446589
best_error: 12.264404846280119
best_error: 12.264404764156875
best_error: 12.264239794622899
best_error: 12.26423971249502
best_error: 12.264166627341215
best_error: 12.264166545211278
best_error: 12.264051091190517
best_error: 12.26405100905734
best_error: 12.264012449284788
best_error: 12.264012367150519
best_error: 12.263997156398379
best_error: 12.263997074263685
best_error: 12.26399203253795
best_error: 12.263992025389463
best_error: 12.263989747407319
best_error: 12.26398966527241
best_error: 12.263962735715808
best_error: 12.263962653580142
best_error: 12.26395901242223
best_error: 12.263958930286456
best_error: 12.263957580163328
best_error: 12.263957498027516
best_error: 12.263955328760138
best_error: 12.26395524662426
best_error: 12.263954239314641
best_error: 12.263954232166398
best_error: 12.26395389601603
best_error: 12.263953813880116
best_error: 12.263953625505462
best_error: 12.263953543369533
best_error: 12.263953511043498
best_error: 12.263953490985141
best_error: 12.263953480155912
