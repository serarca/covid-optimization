ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.545699138157925
best_error: 10.545699135206464
best_error: 8.06639707066366
best_error: 8.066396920030337
best_error: 8.065586205104875
best_error: 8.065586054415567
best_error: 7.299537281921128
best_error: 7.299537268478879
best_error: 7.299537075337751
best_error: 7.023635785328831
best_error: 7.02363572848941
best_error: 7.02363555196479
best_error: 5.6763659286029124
best_error: 5.676365780145267
best_error: 5.2405398956604685
best_error: 5.24053922614946
best_error: 3.6765051890149976
best_error: 3.676504943476386
best_error: 3.47838473101318
best_error: 3.478384700273441
best_error: 3.4783846099171383
best_error: 3.428763939265336
best_error: 3.428763909890452
best_error: 3.42876382342957
best_error: 3.4095272541008583
best_error: 3.409527238351899
best_error: 3.3791446590287997
best_error: 3.3791446482909278
best_error: 3.3791446009993935
best_error: 3.3760479421772316
best_error: 3.3760479416628377
best_error: 3.376047939634039
best_error: 3.3695558615166603
best_error: 3.369555857080819
best_error: 3.369555855631636
best_error: 3.3689415838133954
best_error: 3.368941580015888
best_error: 3.3689415117788295
best_error: 3.3689375749683705
best_error: 3.3689375738266087
best_error: 3.3689375715175003
best_error: 3.3689375691239625
best_error: 3.3688890003446503
best_error: 3.368888999384448
best_error: 3.3688889967691105
best_error: 3.3688889944974383
best_error: 3.367124790870137
best_error: 3.3671247874793884
best_error: 3.3671247178034704
best_error: 3.3507856074481843
best_error: 3.3507855141917786
best_error: 3.3124743600688284
best_error: 3.312474321469297
best_error: 3.2736692941504772
best_error: 3.2736692936639344
best_error: 3.2736692811728005
best_error: 3.2445708177215224
best_error: 3.244570664826436
best_error: 3.2153948074695458
best_error: 3.2153946749626696
best_error: 3.19020081905857
best_error: 3.1902008140835587
best_error: 3.19020072227166
best_error: 3.188518540426653
best_error: 3.188518539236074
best_error: 3.1885185263999007
best_error: 3.188267985331531
best_error: 3.1882679832468694
best_error: 3.1882679742439537
best_error: 3.1871300058459107
best_error: 3.187130003112703
best_error: 3.187129997178867
best_error: 3.1774524742047747
best_error: 3.177452471046789
best_error: 3.1766727741794325
best_error: 3.1766727695547736
best_error: 3.176672691351444
best_error: 3.1766328841885096
best_error: 3.1766328838516937
best_error: 3.1761395791206146
best_error: 3.176139573876685
best_error: 3.1761364372162175
best_error: 3.176136436907119
best_error: 3.17613643335052
best_error: 3.1761327237121586
best_error: 3.1761327235567216
best_error: 3.1761327193818594
best_error: 3.176127941023461
best_error: 3.1761279409292014
best_error: 3.1761279365763246
best_error: 3.1761268050697273
best_error: 3.1761268049753584
best_error: 3.1761268006205756
best_error: 3.176125769918918
best_error: 3.1761257698244436
best_error: 3.1761257654679325
best_error: 3.176124572273762
best_error: 3.176124572179168
best_error: 3.176124567820647
best_error: 3.1761236535881934
best_error: 3.1761236535046016
best_error: 3.176123649086984
best_error: 3.176120503903675
best_error: 3.1761205038197753
best_error: 3.1761204993967698
best_error: 3.176118572012081
best_error: 3.176118571932589
best_error: 3.176118567596445
best_error: 3.1761180074250617
best_error: 3.176118007345509
best_error: 3.176118003008388
best_error: 3.1761178970154695
best_error: 3.1761178969359185
best_error: 3.1761178925986164
best_error: 3.176117792947817
best_error: 3.176117792868248
best_error: 3.176117788530786
best_error: 3.1761177345116107
best_error: 3.1761177344320393
best_error: 3.1761177300944867
best_error: 3.1761176798615596
best_error: 3.1761176797819775
best_error: 3.176117675444342
best_error: 3.176117645034899
best_error: 3.1761176449553075
best_error: 3.1761176406176186
best_error: 3.1761176131701716
best_error: 3.176117613090583
best_error: 3.176117608752843
best_error: 3.1761175822883723
best_error: 3.1761175822087777
best_error: 3.1761175778709942
best_error: 3.176117557141178
best_error: 3.1761175570615783
best_error: 3.176117552723756
best_error: 3.1761174757957407
best_error: 3.17611747571613
best_error: 3.1761174713781815
best_error: 3.1761174270530885
best_error: 3.176117426973482
best_error: 3.176117422635444
best_error: 3.1761174001281067
best_error: 3.1761174000484953
best_error: 3.1761173957104205
best_error: 3.1761173922546058
best_error: 3.1761173882735863
best_error: 3.1761173852174744
best_error: 3.176117379348949
best_error: 3.1761173792693347
best_error: 3.176117374931228
best_error: 3.176117372931628
best_error: 3.1761173728520142
best_error: 3.1761173688797646
best_error: 3.1761173688001456
best_error: 3.176117368720612
