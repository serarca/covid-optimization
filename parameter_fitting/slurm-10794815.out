ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.927653994025613
best_error: 10.927653992482517
best_error: 10.638842696750908
best_error: 10.63884268643657
best_error: 7.32924083868928
best_error: 7.3292406892487065
best_error: 5.70146335855293
best_error: 5.701462959872243
best_error: 5.248554956732945
best_error: 5.2485549260450135
best_error: 3.5465024960771814
best_error: 3.5465024713704496
best_error: 3.546502424082552
best_error: 3.5302562746649238
best_error: 3.5302562481046165
best_error: 3.53025621226123
best_error: 3.4718130589875913
best_error: 3.4718130572511647
best_error: 3.47133778362599
best_error: 3.471337783098457
best_error: 3.4713377783769266
best_error: 3.4713377780905206
best_error: 3.468422800443902
best_error: 3.468422789305052
best_error: 3.4684227116265136
best_error: 3.4020078255152852
best_error: 3.4020077862453677
best_error: 3.3920643718168813
best_error: 3.392064341867477
best_error: 3.3533009035776926
best_error: 3.3533008992848736
best_error: 3.3533008985135084
best_error: 3.321898535589225
best_error: 3.3218985073725733
best_error: 3.32189845044975
best_error: 3.2795274564285215
best_error: 3.27952745100479
best_error: 3.2795274508701198
best_error: 3.2208516989520994
best_error: 3.2208516677057064
best_error: 3.216306017138509
best_error: 3.2163059809426984
best_error: 3.1579179250003198
best_error: 3.1579179191775792
best_error: 3.1579179186911643
best_error: 3.1310366443248063
best_error: 3.1310366127465956
best_error: 3.131036597671328
best_error: 3.131036172285743
best_error: 3.1310361407075984
best_error: 3.13103612563166
best_error: 3.1310358281707
best_error: 3.1310357965925935
best_error: 3.1310357815161742
best_error: 3.131035552207339
best_error: 3.1310355206292684
best_error: 3.1310355055524517
best_error: 3.1310352771546985
best_error: 3.131035245576669
best_error: 3.1310352304994598
best_error: 3.131034797857994
best_error: 3.1310347662800204
best_error: 3.131034751202138
best_error: 3.131033804281084
best_error: 3.1310337726948942
best_error: 3.131033757534045
best_error: 3.1310328795130187
best_error: 3.1310328479384864
best_error: 3.131032832720653
best_error: 3.1266423159718
best_error: 3.1266422742098054
best_error: 3.1266421743694943
best_error: 3.104304803201548
best_error: 3.1043048018858768
best_error: 3.1043047036966125
best_error: 3.0932633814412456
best_error: 3.093263377521347
best_error: 3.093171252926161
best_error: 3.093171252785715
best_error: 3.0931672054796158
best_error: 3.0931671965145378
best_error: 3.093167128114024
best_error: 3.0931336230145674
best_error: 3.093133622930485
best_error: 3.0931305084163876
best_error: 3.0931305082327714
best_error: 3.093113228558807
best_error: 3.093113219272843
best_error: 3.0931131524110596
best_error: 3.0931085412276045
best_error: 3.093108541123842
best_error: 3.0930963763824426
best_error: 3.093096376275863
best_error: 3.0930679786570403
best_error: 3.0930679690687786
best_error: 3.093067903391968
best_error: 3.0930378587828553
best_error: 3.0930378585119853
best_error: 3.0930272667418954
best_error: 3.093027266418126
best_error: 3.0927099767617827
best_error: 3.092709976462949
best_error: 3.0917298325521756
best_error: 3.0917298238592137
best_error: 3.0917297566929767
best_error: 3.090966611847962
best_error: 3.0909666049743985
best_error: 3.09096653344968
best_error: 3.0904542196017366
best_error: 3.0904542193899665
best_error: 3.090267472435353
best_error: 3.090267472261335
best_error: 3.090172819905881
best_error: 3.0901728197444567
best_error: 3.090165059130076
best_error: 3.090165058969488
best_error: 3.0901627636082862
best_error: 3.090162755806305
best_error: 3.090162687426191
best_error: 3.0899927284282453
best_error: 3.089992726098509
best_error: 3.089725135531565
best_error: 3.0897251354882886
best_error: 3.089711821166447
best_error: 3.0897118124535887
best_error: 3.0897117444689046
best_error: 3.0896818196953353
best_error: 3.089681819567722
best_error: 3.089652350398108
best_error: 3.0896523416434625
best_error: 3.0896522744714656
best_error: 3.0896344763282086
best_error: 3.0896344675569294
best_error: 3.0896344002794662
best_error: 3.08962626289011
best_error: 3.0896262541101684
best_error: 3.089626186832133
best_error: 3.0896261656685184
best_error: 3.0896261656093342
best_error: 3.08962305434965
best_error: 3.0896230543004757
best_error: 3.0896151050188636
best_error: 3.0896151049124816
best_error: 3.0896120792383135
best_error: 3.0896120791321664
best_error: 3.089611682862322
best_error: 3.089611682756209
best_error: 3.0896115296436912
best_error: 3.0896115295363846
best_error: 3.089611327800493
best_error: 3.089611327693219
best_error: 3.089611313325652
best_error: 3.0896113046666605
best_error: 3.0896112855905473
best_error: 3.089611267614021
best_error: 3.0896112648288687
