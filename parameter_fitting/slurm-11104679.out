ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.10929409537263
best_error: 97.10929395614502
best_error: 97.10929386581296
best_error: 15.86454667958373
best_error: 15.86454667957379
best_error: 15.86454666425789
best_error: 15.82934645750969
best_error: 15.82934644172293
best_error: 15.67914940084016
best_error: 15.679149383455265
best_error: 14.91311748367293
best_error: 14.913117454197538
best_error: 14.7388083350781
best_error: 14.738808300960851
best_error: 14.535568203647033
best_error: 14.535568163298619
best_error: 11.478109730389225
best_error: 11.478109716682745
best_error: 11.47810969659727
best_error: 11.122507631592638
best_error: 11.122507481785117
best_error: 10.754335231556848
best_error: 10.75433520561539
best_error: 10.699089733554981
best_error: 10.69908970708484
best_error: 10.554457291661771
best_error: 10.554457266317819
best_error: 10.477938799899837
best_error: 10.477938790604536
best_error: 10.477938762673773
best_error: 10.424144868795816
best_error: 10.42414485629915
best_error: 10.424144838968566
best_error: 9.931245290306014
best_error: 9.931245276363086
best_error: 9.931245264149279
best_error: 8.824683904511815
best_error: 8.824683894667862
best_error: 8.82468389189202
best_error: 8.489773239795571
best_error: 8.489773239305201
best_error: 8.489773236886059
best_error: 8.48977322603925
best_error: 8.398255180531061
best_error: 8.39825517889185
best_error: 8.398255177739289
best_error: 8.398255173823395
best_error: 8.35693530669305
best_error: 8.356935238108282
best_error: 8.35640117438817
best_error: 8.356401148261924
best_error: 8.29992698795014
best_error: 8.29992683215756
best_error: 8.297236671023242
best_error: 8.297236654497407
best_error: 8.29676303768235
best_error: 8.29676288206143
best_error: 8.295907979084452
best_error: 8.295907963123726
best_error: 8.295609541425826
best_error: 8.295609525460865
best_error: 8.293574675325207
best_error: 8.293574504336693
best_error: 8.28998373501438
best_error: 8.289983588818654
best_error: 8.289495777513002
best_error: 8.289495657096715
best_error: 8.284001661063867
best_error: 8.284001533810475
best_error: 8.264007405999259
best_error: 8.264007296850927
best_error: 8.262629212560173
best_error: 8.262629192622867
best_error: 8.250225778682905
best_error: 8.250225760430004
best_error: 8.241166706814985
best_error: 8.241166688966773
best_error: 8.168680204142689
best_error: 8.168680185964101
best_error: 8.152942358310039
best_error: 8.152942330809319
best_error: 8.136478043201759
best_error: 8.136478019074016
best_error: 8.073475629016169
best_error: 8.073475608323067
best_error: 7.957312480551867
best_error: 7.957312317331287
best_error: 7.651016062965952
best_error: 7.651016044715785
best_error: 7.615614487916478
best_error: 7.615614463687607
best_error: 7.586260854333776
best_error: 7.586260831567129
best_error: 7.554159526186497
best_error: 7.554159504247895
best_error: 7.534040548452968
best_error: 7.5340405249925055
best_error: 7.4172152859694656
best_error: 7.41721518095167
best_error: 7.367827695955639
best_error: 7.367827676173518
best_error: 7.367827661262233
best_error: 7.332449454940934
best_error: 7.332449431090924
best_error: 7.317012685746169
best_error: 7.317012669233185
best_error: 7.317012651014447
best_error: 7.3100309802467605
best_error: 7.310030957830312
best_error: 7.309973489730716
best_error: 7.3099734672095025
best_error: 7.307565874675427
best_error: 7.307565874155469
best_error: 7.307565866579103
best_error: 7.28359088322733
best_error: 7.283590875262279
best_error: 7.178704877469591
best_error: 7.178704872728877
best_error: 7.178704798264444
best_error: 7.10783671122495
best_error: 7.107836692537354
best_error: 7.1078366879481765
best_error: 7.107836660362338
best_error: 7.068327887195211
best_error: 7.0683278867521535
best_error: 7.068327875728147
best_error: 7.068327875606196
best_error: 7.005972311668433
best_error: 7.005972295850063
best_error: 7.005972293830539
best_error: 7.005972276423991
best_error: 6.866465974902944
best_error: 6.866465476498496
best_error: 6.706083585353835
best_error: 6.7060834332191925
best_error: 6.583158851934772
best_error: 6.583158843797108
best_error: 6.583158840326929
best_error: 6.445752641513353
best_error: 6.445752631596292
best_error: 6.413926281069148
best_error: 6.413926277109185
best_error: 6.401653049407987
best_error: 6.401652791583517
best_error: 6.394610196419128
best_error: 6.39461019052072
best_error: 6.381287611366922
best_error: 6.381287606160208
best_error: 6.381287604127543
best_error: 6.326065808960175
best_error: 6.326065808567251
best_error: 6.326065792111646
best_error: 6.3218650686360744
best_error: 6.321865048799228
best_error: 6.312937708701084
best_error: 6.312937691498773
best_error: 6.312937683659384
best_error: 6.30857850450204
best_error: 6.3085784734116634
best_error: 6.300709394157035
best_error: 6.3007093629377975
best_error: 6.29693892845332
best_error: 6.296938913532965
best_error: 6.2969389084738445
