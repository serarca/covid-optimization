ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 72
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 110.74788281477726
best_error: 110.74788266354406
best_error: 110.74788262660516
best_error: 19.984369166838412
best_error: 19.984369166836448
best_error: 19.98436916331619
best_error: 19.98327325245277
best_error: 19.983273248900296
best_error: 19.97879391690823
best_error: 19.978793913230483
best_error: 19.95918295698625
best_error: 19.959182952728916
best_error: 19.836480951776913
best_error: 19.83648094273323
best_error: 19.530076342609906
best_error: 19.53007631451006
best_error: 17.898307722059315
best_error: 17.898307537831833
best_error: 16.970206777156914
best_error: 16.9702065756033
best_error: 16.283947211082094
best_error: 16.283946955622135
best_error: 14.905820508276467
best_error: 14.905820186920316
best_error: 14.372958692181204
best_error: 14.372958445482023
best_error: 14.124244194784303
best_error: 14.124244139763693
best_error: 14.108148249503445
best_error: 14.10814823574091
best_error: 14.094213476030113
best_error: 14.094213462103802
best_error: 14.04502410047348
best_error: 14.0450240931989
best_error: 14.045024080734802
best_error: 13.793414204884073
best_error: 13.793414108861867
best_error: 13.759083469088967
best_error: 13.759083452906198
best_error: 13.699618475921074
best_error: 13.699618462551193
best_error: 13.668101167195363
best_error: 13.66810115893714
best_error: 13.666871922481885
best_error: 13.666871723617
best_error: 13.652738295801852
best_error: 13.652738288913438
best_error: 13.652738288766338
best_error: 13.650864193501569
best_error: 13.650864187050779
best_error: 13.650864186661718
best_error: 13.644351305249735
best_error: 13.644351300238172
best_error: 13.644351299017824
best_error: 13.621936960574768
best_error: 13.621936958999068
best_error: 13.621936955441164
best_error: 13.62193695470448
best_error: 13.618017925842608
best_error: 13.618017595591944
best_error: 13.613627968985377
best_error: 13.613627929284974
best_error: 13.612357009890557
best_error: 13.612356969683654
best_error: 13.577211894070778
best_error: 13.577211595905432
best_error: 13.543926777261262
best_error: 13.543926485645745
best_error: 13.535816284230018
best_error: 13.5358162492704
best_error: 13.533547311183634
best_error: 13.533547308813041
best_error: 13.533547306122966
best_error: 13.533547305744108
best_error: 13.5335226634149
best_error: 13.533522628261041
best_error: 13.533288732747021
best_error: 13.533288730379875
best_error: 13.53328872768904
best_error: 13.533288727308786
best_error: 13.533248338714529
best_error: 13.533248336347928
best_error: 13.53324833365697
best_error: 13.533248333276497
best_error: 13.533240623580376
best_error: 13.533240588440675
best_error: 13.516291850124052
best_error: 13.516291816819335
best_error: 13.460313632055822
best_error: 13.460313596424985
best_error: 13.4404181322856
best_error: 13.440418097944384
best_error: 13.401577961511073
best_error: 13.401577925518422
best_error: 13.362078113762225
best_error: 13.362078069725523
best_error: 13.321304259035456
best_error: 13.321304216944123
best_error: 13.293583781161868
best_error: 13.29358373888393
best_error: 13.269444299387057
best_error: 13.26944425759117
best_error: 13.26106520551227
best_error: 13.261065164631006
best_error: 13.260577478866043
best_error: 13.260577474608528
best_error: 13.260577473655102
best_error: 13.085806881640519
best_error: 13.085806841077414
best_error: 13.062441198660757
best_error: 13.062441153359499
best_error: 12.924580659073241
best_error: 12.924580615511186
best_error: 12.762451671639255
best_error: 12.762451666224313
best_error: 12.758473422480877
best_error: 12.75847341936036
best_error: 12.758473418111866
best_error: 12.731460861275208
best_error: 12.731460860793554
best_error: 12.73146085729864
best_error: 12.688359107162295
best_error: 12.688359103574143
best_error: 12.688359103091658
best_error: 12.678026560666968
best_error: 12.678026550820068
best_error: 12.65884189038006
best_error: 12.65884188592344
best_error: 12.65857139417011
best_error: 12.65857139019041
best_error: 12.658455525093972
best_error: 12.658455521115652
best_error: 12.658398368305452
best_error: 12.658398364327807
best_error: 12.6583695724542
best_error: 12.6583695684769
best_error: 12.658355162895955
best_error: 12.658355158918827
best_error: 12.658347185242272
best_error: 12.658347181265286
best_error: 12.658342702891426
best_error: 12.65834269891452
best_error: 12.65834249346522
best_error: 12.658342489488321
best_error: 12.658342372297131
best_error: 12.658342368320236
best_error: 12.65834230556825
best_error: 12.658342230771934
best_error: 12.658342225345928
best_error: 12.658342221369033
best_error: 12.658342216848107
best_error: 12.658342216847904
best_error: 12.658342214482582
