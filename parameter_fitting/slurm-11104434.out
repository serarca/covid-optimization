ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 66
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.6001087294281
best_error: 101.60010856134276
best_error: 101.60010852907949
best_error: 20.579127610834636
best_error: 20.579127610833908
best_error: 20.579127609297753
best_error: 20.57890661768557
best_error: 20.578906616143335
best_error: 20.578014977615027
best_error: 20.57801497605113
best_error: 20.57432166926033
best_error: 20.574321667605684
best_error: 20.55722065066034
best_error: 20.557220648562947
best_error: 20.402978071145906
best_error: 20.40297806213561
best_error: 20.40012078884245
best_error: 20.4001207796345
best_error: 20.105152685165912
best_error: 20.10515264556203
best_error: 17.17220280312376
best_error: 17.172202357046462
best_error: 15.276998054649056
best_error: 15.276997406480184
best_error: 14.879455512924554
best_error: 14.879455474206328
best_error: 14.635795103712267
best_error: 14.635795077591627
best_error: 14.635423146410615
best_error: 14.635423144803237
best_error: 14.63542309683609
best_error: 14.63465349885777
best_error: 14.634653497205143
best_error: 14.634653449879664
best_error: 14.631591452308378
best_error: 14.631591450574664
best_error: 14.631591404361288
best_error: 14.630347219671961
best_error: 14.630347193663365
best_error: 14.630285936137895
best_error: 14.63028593438228
best_error: 14.63028588840504
best_error: 14.630195518057175
best_error: 14.630195516301967
best_error: 14.630195470314664
best_error: 14.630191626872223
best_error: 14.630191600865675
best_error: 14.630174544975674
best_error: 14.63017454322056
best_error: 14.630174497230925
best_error: 14.630167199952314
best_error: 14.630167173946102
best_error: 14.623429169757076
best_error: 14.623429168124614
best_error: 14.623429120324328
best_error: 14.596652355857234
best_error: 14.596652354578953
best_error: 14.596652301686763
best_error: 14.491533841593888
best_error: 14.491533766229626
best_error: 14.488306401614697
best_error: 14.488306028030859
best_error: 14.485222329687016
best_error: 14.485221956026965
best_error: 14.484038616808128
best_error: 14.48403861669561
best_error: 14.484038541133422
best_error: 14.483675058383964
best_error: 14.483675058274766
best_error: 14.48367498267225
best_error: 14.483364213239977
best_error: 14.483364213096182
best_error: 14.48336413812961
best_error: 14.4831816661341
best_error: 14.483181665991971
best_error: 14.483181591005248
best_error: 14.4830282258214
best_error: 14.483028225680664
best_error: 14.483028150677006
best_error: 14.482918807601095
best_error: 14.482918807461362
best_error: 14.482918732445615
best_error: 14.48283398988649
best_error: 14.482833989747528
best_error: 14.482833914722413
best_error: 14.482739322378933
best_error: 14.482739322240842
best_error: 14.48273924720527
best_error: 14.482685098145346
best_error: 14.482685098007748
best_error: 14.48268502296618
best_error: 14.482590616759433
best_error: 14.482590616622698
best_error: 14.48259054157069
best_error: 14.482566615065856
best_error: 14.482566614929308
best_error: 14.48256653987474
best_error: 14.482550475864608
best_error: 14.482550475728186
best_error: 14.482550400671897
best_error: 14.482531330871891
best_error: 14.48253133073562
best_error: 14.482531255677284
best_error: 14.482522599080545
best_error: 14.482522598944335
best_error: 14.482522523885077
best_error: 14.48251006890597
best_error: 14.482510068769859
best_error: 14.48250999370926
best_error: 14.482506261323342
best_error: 14.482506261187263
best_error: 14.482506186126257
best_error: 14.482504933116488
best_error: 14.482504932980419
best_error: 14.48250485791927
best_error: 14.482504057402217
best_error: 14.482504057266159
best_error: 14.482503982204914
best_error: 14.482503405000356
best_error: 14.482503404864298
best_error: 14.482503329802984
best_error: 14.482502891705236
best_error: 14.482502891569181
best_error: 14.482502816507816
best_error: 14.482502503027298
best_error: 14.48250250289125
best_error: 14.482502427829843
best_error: 14.482502233311767
best_error: 14.48250223317572
best_error: 14.482502158114281
best_error: 14.48250193086134
best_error: 14.482501930725295
best_error: 14.48250185566382
best_error: 14.482501783367914
best_error: 14.482501783231871
best_error: 14.482501708170386
best_error: 14.482501569321876
best_error: 14.482501569185839
best_error: 14.482501494124328
best_error: 14.482501427915462
best_error: 14.4825014041153
best_error: 14.482501386643863
