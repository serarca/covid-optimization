ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.201576935016762
best_error: 9.2015769270005
best_error: 8.15641933002647
best_error: 8.156419275579788
best_error: 7.800109538351622
best_error: 7.800109430082298
best_error: 7.800109374140123
best_error: 7.65721341329191
best_error: 7.657213398265463
best_error: 7.657213305458356
best_error: 7.428158273998955
best_error: 7.428158216071451
best_error: 7.4281581215878525
best_error: 7.428090027450023
best_error: 7.428089969189509
best_error: 7.428089874453031
best_error: 7.232278695936634
best_error: 7.2322785973597545
best_error: 7.2322785066976
best_error: 7.216936483460984
best_error: 7.216936365898244
best_error: 6.810938826798229
best_error: 6.810938694400593
best_error: 6.810938674229535
best_error: 5.676084041189968
best_error: 5.676083928018416
best_error: 5.337008856016974
best_error: 5.3370088473138395
best_error: 3.1167907687473404
best_error: 3.11679069783756
best_error: 3.1167906271590082
best_error: 2.965522723207364
best_error: 2.965522672837774
best_error: 2.9655225417807496
best_error: 2.85828260033964
best_error: 2.858282562392297
best_error: 2.8582823912933524
best_error: 2.637662169355207
best_error: 2.6376621610927247
best_error: 2.6376619046795096
best_error: 2.458095596876329
best_error: 2.4580955745294526
best_error: 2.432101637886796
best_error: 2.432101633991537
best_error: 2.4321013735759816
best_error: 2.2411641411185483
best_error: 2.2411641406103424
best_error: 2.241163876671003
best_error: 2.2226799585190937
best_error: 2.2226799582739467
best_error: 2.222679692161006
best_error: 2.2143576060413706
best_error: 2.214357585789876
best_error: 2.2136854745905543
best_error: 2.213685474442327
best_error: 2.213685207279836
best_error: 2.201940735288068
best_error: 2.201940451170285
best_error: 2.19673837795294
best_error: 2.1967380766910587
best_error: 2.1909156458509598
best_error: 2.190915627113365
best_error: 2.186676970139285
best_error: 2.1866769521523253
best_error: 2.1856549482729024
best_error: 2.1856546206221585
best_error: 2.1780995857441825
best_error: 2.1780992616302237
best_error: 2.1469647804249252
best_error: 2.146964762207447
best_error: 2.091178274346925
best_error: 2.0911782446017
best_error: 2.0887883843495247
best_error: 2.088788087844038
best_error: 2.050741716720671
best_error: 2.0507417120250833
best_error: 2.050741472632276
best_error: 1.985248926041916
best_error: 1.9852488992246875
best_error: 1.9550782817746202
best_error: 1.9550782786447507
best_error: 1.9550780274919572
best_error: 1.9477660798904548
best_error: 1.9477658083854048
best_error: 1.947336118451322
best_error: 1.9473358312139828
best_error: 1.9372197999835383
best_error: 1.9372195266458663
best_error: 1.9335121892997893
best_error: 1.9335119192379684
best_error: 1.9324071748307352
best_error: 1.9324069046763162
best_error: 1.9319012621397569
best_error: 1.9319009925603614
best_error: 1.931679822093235
best_error: 1.9316795524952766
best_error: 1.9315332635779066
best_error: 1.9315329939676604
best_error: 1.9315138959640161
best_error: 1.9315138740077518
best_error: 1.9315138256391475
best_error: 1.9314996451222997
best_error: 1.931499375508945
best_error: 1.931498807926479
best_error: 1.9314987859702981
best_error: 1.931498737601834
best_error: 1.9314975197585817
best_error: 1.9314972501449827
best_error: 1.9309771716678361
best_error: 1.9309768955447089
best_error: 1.9306836934468579
best_error: 1.9306834115658482
best_error: 1.9306754369230021
best_error: 1.9306751550035448
best_error: 1.9306657208005482
best_error: 1.9306654373568308
best_error: 1.930664587363291
best_error: 1.9306643053877675
best_error: 1.9306642446943871
best_error: 1.9306639612558885
best_error: 1.9306628811622804
best_error: 1.9306625977237744
best_error: 1.9306574270318135
best_error: 1.9306571435932727
best_error: 1.9306356532832463
best_error: 1.9306353713036009
best_error: 1.9306187995370592
best_error: 1.9306185175573511
best_error: 1.9306099850870182
best_error: 1.9306097031072693
best_error: 1.9306063673562177
best_error: 1.9306060853764553
best_error: 1.9306045880487739
best_error: 1.9306045847091529
best_error: 1.9306045842722515
best_error: 1.9306045821077265
