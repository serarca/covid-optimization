ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.63410476105432
best_error: 11.634104759034887
best_error: 11.509195219112398
best_error: 11.509195203655922
best_error: 7.134130412991027
best_error: 7.134130412991024
best_error: 7.134130407751632
best_error: 7.1316505992098875
best_error: 7.131650599209885
best_error: 7.131650594489217
best_error: 7.128396265281896
best_error: 7.1283962652818955
best_error: 7.128396261046953
best_error: 7.12733840596515
best_error: 7.127338385604819
best_error: 7.12660667756808
best_error: 7.1266066761812
best_error: 7.126606673811885
best_error: 7.126137501653675
best_error: 7.126137500368053
best_error: 7.126137497806647
best_error: 7.12463801267229
best_error: 7.124638012672286
best_error: 7.124638009706916
best_error: 7.119214398560082
best_error: 7.112486070464837
best_error: 7.112486070464836
best_error: 7.101997097268415
best_error: 7.0931709493347475
best_error: 7.022853408497433
best_error: 6.888209356443644
best_error: 6.77768126215267
best_error: 6.687001880041675
best_error: 6.687001880041674
best_error: 6.518123672566382
best_error: 6.43575993948163
best_error: 6.168952666337234
best_error: 5.591937981924254
best_error: 5.59193798192425
best_error: 5.591937865674848
best_error: 5.533926610543193
best_error: 5.533926610543191
best_error: 5.533926610509158
best_error: 5.533589181748043
best_error: 5.533589173419449
best_error: 5.53358151908831
best_error: 5.533581519088308
best_error: 5.533581519050062
best_error: 5.53351772856706
best_error: 5.533517720559164
best_error: 5.533507422024528
best_error: 5.5335074140140454
best_error: 5.533506758538522
best_error: 5.533506758538518
best_error: 5.533506758499974
best_error: 5.5335050918856
best_error: 5.533505083874681
best_error: 5.5334681369771825
best_error: 5.5334681289440395
best_error: 5.5333224823497185
best_error: 5.533322482349715
best_error: 5.53332248230177
best_error: 5.532633184668448
best_error: 5.532633184668446
best_error: 5.532633184581508
best_error: 5.531504918403012
best_error: 5.5315049184030105
best_error: 5.531504918258756
best_error: 5.530599767587967
best_error: 5.530599767587964
best_error: 5.530599767395222
best_error: 5.530425198326009
best_error: 5.530425198326004
best_error: 5.530425198138593
best_error: 5.5303451254740414
best_error: 5.53034512547404
best_error: 5.53034512528812
best_error: 5.530324618762511
best_error: 5.530324618762507
best_error: 5.530324618576356
best_error: 5.530321693229062
best_error: 5.530321693229059
best_error: 5.530319924045704
best_error: 5.530319924045702
best_error: 5.530319923859119
best_error: 5.530317077074098
best_error: 5.530317077074094
best_error: 5.530316676805207
best_error: 5.530316676805204
best_error: 5.530316676618323
best_error: 5.530316616462761
best_error: 5.530316616462759
best_error: 5.530310014541966
best_error: 5.530310014541964
best_error: 5.530310014355003
best_error: 5.530269564754289
best_error: 5.530269564754287
best_error: 5.530269564566306
best_error: 5.53010906315973
best_error: 5.5301090631597285
best_error: 5.530109062961918
best_error: 5.529487427341368
best_error: 5.5294874273413654
best_error: 5.529487427112897
best_error: 5.527274728321738
best_error: 5.527274728321734
best_error: 5.526293085538332
best_error: 5.526293085538327
best_error: 5.52603459467233
best_error: 5.5260345946723275
best_error: 5.526024715008913
best_error: 5.52602471500891
best_error: 5.5260070871238955
best_error: 5.526007087123892
best_error: 5.525937560592931
best_error: 5.5259375605929275
best_error: 5.525826150385749
best_error: 5.525826150385747
best_error: 5.525393614749137
best_error: 5.525393614749134
best_error: 5.524466651986002
best_error: 5.524466651986001
best_error: 5.5238208403578755
best_error: 5.523820840357872
best_error: 5.523776464831979
best_error: 5.523776452454991
best_error: 5.523736305238106
best_error: 5.523736305238104
best_error: 5.523683336931958
best_error: 5.523683336931956
best_error: 5.52367329447013
best_error: 5.523673294470126
best_error: 5.523669102375979
best_error: 5.523669102375976
best_error: 5.523668078291082
best_error: 5.523668078291078
best_error: 5.523667754873901
best_error: 5.523667754873896
best_error: 5.523667618711036
best_error: 5.523667618711032
best_error: 5.523667595607905
best_error: 5.523667583331637
best_error: 5.523659098628464
best_error: 5.5236590986284595
best_error: 5.523657858686663
best_error: 5.523657858686659
best_error: 5.523656892560443
best_error: 5.52365689256044
best_error: 5.523655959179861
best_error: 5.523655959179859
best_error: 5.523655789333651
best_error: 5.523655789333648
best_error: 5.523655727637182
best_error: 5.523655727637179
best_error: 5.523655700736027
best_error: 5.523655700736024
best_error: 5.523655688331164
best_error: 5.52365568833116
best_error: 5.523655685837144
best_error: 5.52365568583714
