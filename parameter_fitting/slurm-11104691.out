ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.27805169297935
best_error: 98.278051591713
best_error: 98.27805155065516
best_error: 98.27805154953538
best_error: 18.017503411024165
best_error: 18.017503156216847
best_error: 18.017501379300732
best_error: 15.656581822784755
best_error: 15.656581822733973
best_error: 15.656581800278028
best_error: 15.622959661920417
best_error: 15.622959661870098
best_error: 15.62295963815203
best_error: 15.469706258057176
best_error: 15.469706258028621
best_error: 15.469706228148233
best_error: 14.170597486617199
best_error: 14.170597364294682
best_error: 13.990259681041417
best_error: 13.990259540722677
best_error: 13.841894119033249
best_error: 13.841893963163288
best_error: 13.670785006408881
best_error: 13.670784831951481
best_error: 11.205575214944396
best_error: 11.205574772533403
best_error: 9.385380030498826
best_error: 9.385379859848094
best_error: 9.359319204784608
best_error: 9.359319178251544
best_error: 9.359319170858377
best_error: 9.283685146392537
best_error: 9.283685103367496
best_error: 9.268927766695523
best_error: 9.268927721648346
best_error: 9.244917741325363
best_error: 9.244917715713274
best_error: 9.244917708706986
best_error: 9.243331972199265
best_error: 9.243331930294751
best_error: 9.22752443406535
best_error: 9.227524389610071
best_error: 9.22713235925814
best_error: 9.227132314733423
best_error: 9.226876983283791
best_error: 9.226876958087068
best_error: 9.226876950942886
best_error: 9.191715768877254
best_error: 9.191715742794193
best_error: 9.191715736920212
best_error: 8.853544980235595
best_error: 8.853544959213673
best_error: 8.853544949965864
best_error: 7.630703671026126
best_error: 7.6307036464938784
best_error: 7.628686519829959
best_error: 7.628686483655809
best_error: 7.6237716706168746
best_error: 7.62377163443277
best_error: 7.608505097261119
best_error: 7.608505061272772
best_error: 7.5899652431729585
best_error: 7.589965221544871
best_error: 7.580484526776406
best_error: 7.58048450560404
best_error: 7.575446449234726
best_error: 7.575446428525321
best_error: 7.574873101155367
best_error: 7.574873080455715
best_error: 7.574804949208657
best_error: 7.574804928510165
best_error: 7.574779017034562
best_error: 7.5747789963365095
best_error: 7.574776674274923
best_error: 7.574776531616192
best_error: 7.56244077097688
best_error: 7.562440737454626
best_error: 7.525096336043047
best_error: 7.525096303226954
best_error: 7.427438272481004
best_error: 7.427438248599407
best_error: 7.417250536440616
best_error: 7.4172505246309495
best_error: 7.4112732043825815
best_error: 7.411273189919771
best_error: 7.409953984351674
best_error: 7.409953969503918
best_error: 7.406536548046253
best_error: 7.406536531698162
best_error: 7.399289383401708
best_error: 7.399289363078524
best_error: 7.393166269563877
best_error: 7.39316625530445
best_error: 7.389753920935819
best_error: 7.389753908746458
best_error: 7.389178899915246
best_error: 7.38917889439246
best_error: 7.379077906969555
best_error: 7.379077582429245
best_error: 7.377223308541051
best_error: 7.377222989538806
best_error: 7.3733792905377635
best_error: 7.373379283923612
best_error: 7.372368219343199
best_error: 7.372368212970983
best_error: 7.372136264277527
best_error: 7.3721362579133976
best_error: 7.371900614155346
best_error: 7.371900609479956
best_error: 7.371315335005543
best_error: 7.371315329475842
best_error: 7.370889330113075
best_error: 7.370889324054408
best_error: 7.36984752483919
best_error: 7.369847518215056
best_error: 7.3684340917409
best_error: 7.368433801751614
best_error: 7.366349080199656
best_error: 7.366349071363802
best_error: 7.363852424712492
best_error: 7.363852419031187
best_error: 7.363148650271089
best_error: 7.3631486422217876
best_error: 7.358776109067142
best_error: 7.358776099183464
best_error: 7.327064921085205
best_error: 7.3270649087622335
best_error: 7.303548354712742
best_error: 7.30354834527068
best_error: 7.281494997291511
best_error: 7.281494987446422
best_error: 7.272665282926413
best_error: 7.2726652732494
best_error: 7.264803959926062
best_error: 7.264803949394939
best_error: 7.253449774636762
best_error: 7.253449762136391
best_error: 7.244742034605567
best_error: 7.244742025083917
best_error: 7.214654990925415
best_error: 7.2146549753437395
best_error: 7.132985246185369
best_error: 7.132985229806529
best_error: 7.132985224311053
best_error: 7.096420389844792
best_error: 7.096420090822446
best_error: 7.037257678739662
best_error: 7.037257660425241
best_error: 7.037257644889586
best_error: 6.977612347621246
best_error: 6.977612343483285
best_error: 6.948272699372552
best_error: 6.948272672345608
best_error: 6.9482726361800875
best_error: 6.86572405988687
best_error: 6.865723928682277
best_error: 6.767954606225967
best_error: 6.7679545745452385
best_error: 6.766367422443123
best_error: 6.76636739992095
best_error: 6.76636738194844
best_error: 6.643211141707509
best_error: 6.643211141319405
best_error: 6.643211137062632
best_error: 6.643211134345027
