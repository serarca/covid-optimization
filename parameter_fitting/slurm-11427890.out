ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 18.76636014971198
best_error: 18.76635979761767
best_error: 4.1932688175029735
best_error: 4.1932688153097
best_error: 4.191757225417251
best_error: 4.191757225396441
best_error: 4.191757225173901
best_error: 4.185625263516768
best_error: 4.185625263495097
best_error: 4.185625263270996
best_error: 4.159656502944871
best_error: 4.159656502919188
best_error: 4.159656502688668
best_error: 4.023180617472366
best_error: 4.023180617411647
best_error: 4.023180617155615
best_error: 3.8608855684265357
best_error: 3.8608855682685457
best_error: 3.860885568020418
best_error: 3.6457385629706027
best_error: 3.6457385624543552
best_error: 3.6457385623941354
best_error: 3.589193994001355
best_error: 3.589193993301491
best_error: 3.3894617245307943
best_error: 3.389461722660862
best_error: 3.231927069557442
best_error: 3.231927066309428
best_error: 3.20454090090424
best_error: 3.2045408977740895
best_error: 3.203226758270192
best_error: 3.203226755078706
best_error: 3.2023571828991106
best_error: 3.202357181683883
best_error: 3.202357179610376
best_error: 3.1992021633448093
best_error: 3.199202161774695
best_error: 3.1992021597758225
best_error: 3.198295884253599
best_error: 3.1982958826238757
best_error: 3.1982958806066946
best_error: 3.1973636592679497
best_error: 3.197363657577358
best_error: 3.1973636555369103
best_error: 3.1073072343918993
best_error: 3.1073072206161885
best_error: 3.107307219918751
best_error: 2.5239357324271015
best_error: 2.523935626024933
best_error: 2.281794644944215
best_error: 2.281794497536873
best_error: 2.0951159319460895
best_error: 2.0951158999394055
best_error: 2.0951158807960457
best_error: 2.09382157842452
best_error: 2.093821527275423
best_error: 2.093135222330175
best_error: 2.0931351587227986
best_error: 2.093121853361898
best_error: 2.09312178816004
best_error: 2.093121582139673
best_error: 2.0931215166912933
best_error: 1.7807815628041297
best_error: 1.7807813948597333
best_error: 1.5092259386341393
best_error: 1.5092257393259825
best_error: 1.4867994557294597
best_error: 1.4867993370729904
best_error: 1.461032984474793
best_error: 1.46103297946189
best_error: 1.4607005883545
best_error: 1.4607005832414353
best_error: 1.4605811458313318
best_error: 1.4605811397856812
best_error: 1.4601405293822962
best_error: 1.4601405214298822
best_error: 1.455852586002754
best_error: 1.4558525754979572
best_error: 1.451542028466191
best_error: 1.4515420220115922
best_error: 1.442026251052748
best_error: 1.4420262510274728
best_error: 1.4420262507249872
best_error: 1.4065400385773708
best_error: 1.4065400369523329
best_error: 1.4065400358966544
best_error: 1.3929164367398577
best_error: 1.3929163718015898
best_error: 1.363525396309149
best_error: 1.3635253134748506
best_error: 1.2807379342172256
best_error: 1.280737855618512
best_error: 1.2635404798136625
best_error: 1.2635404610519372
best_error: 1.2633009079866042
best_error: 1.2633009006084839
best_error: 1.2557756794286978
best_error: 1.2557756634498751
best_error: 1.254339136159332
best_error: 1.2543389852906233
best_error: 1.2312728151305583
best_error: 1.2312727884313188
best_error: 1.220600912001999
best_error: 1.2206009105474898
best_error: 1.2206009103301114
best_error: 1.2206009094530195
best_error: 1.217077874490989
best_error: 1.2170778630668564
best_error: 1.2161726414217882
best_error: 1.2161726347949944
best_error: 1.2157474130850439
best_error: 1.215747411997458
best_error: 1.2157474119746674
best_error: 1.215658108806757
best_error: 1.2156581063334875
best_error: 1.2153619918902212
best_error: 1.2153619793651662
best_error: 1.2149620822267915
best_error: 1.214962057862227
best_error: 1.2129552628048053
best_error: 1.2129552212345711
best_error: 1.2109504264787807
best_error: 1.2109503896652085
best_error: 1.207608993769655
best_error: 1.2076089749086325
best_error: 1.2043823332533514
best_error: 1.2043823162429974
best_error: 1.2024495591429862
best_error: 1.2024495453319999
best_error: 1.2018560208164906
best_error: 1.2018560171897519
best_error: 1.2013859194503742
best_error: 1.201385908175672
best_error: 1.200264811880244
best_error: 1.2002647992608646
best_error: 1.199525953585763
best_error: 1.1995259533147138
best_error: 1.1995259532618177
best_error: 1.199525952613753
best_error: 1.1994718896740784
best_error: 1.1994718890546017
best_error: 1.199471888789903
best_error: 1.1992891021109247
best_error: 1.199289100091419
best_error: 1.1988539671818923
best_error: 1.198853964732688
best_error: 1.196563271101212
best_error: 1.1965632623590952
best_error: 1.1917904479789394
best_error: 1.1917904336644658
best_error: 1.1869052578893042
best_error: 1.1869052469882835
best_error: 1.1793417331855975
best_error: 1.1793417150522405
best_error: 1.1740270706171996
best_error: 1.1740270633087657
best_error: 1.1711076076420444
best_error: 1.1711075896370038
best_error: 1.1701218496763885
best_error: 1.1701218460428349
best_error: 1.169247995641043
best_error: 1.169247986996928
best_error: 1.168445143748502
best_error: 1.1684451435991938
best_error: 1.1684451434068988
best_error: 1.1684451432688994
best_error: 1.1684451430037848
best_error: 1.1679646543462692
best_error: 1.1679646437347377
best_error: 1.1665503395793575
best_error: 1.1665503313207168
best_error: 1.1657598043862778
best_error: 1.165759802110202
best_error: 1.1655607708161875
best_error: 1.1655607708151952
best_error: 1.1655607706853404
best_error: 1.1655607705701037
best_error: 1.1655218115207893
best_error: 1.1655218113985355
best_error: 1.1655218112547205
best_error: 1.1654871443090074
best_error: 1.1654871440724797
best_error: 1.1654871440185477
best_error: 1.1654197913213407
best_error: 1.1654197866510014
best_error: 1.1652872138883592
best_error: 1.1652872077316887
best_error: 1.1646320232835716
best_error: 1.164632023032512
best_error: 1.1646320195911968
best_error: 1.1638786424367535
best_error: 1.163878625842666
best_error: 1.1625083513175654
best_error: 1.1625083502100149
best_error: 1.1625083464481942
best_error: 1.1609842452803623
best_error: 1.1609842313846186
best_error: 1.1600049908665004
best_error: 1.1600049748744279
best_error: 1.1598100822176813
best_error: 1.159810079208023
best_error: 1.1597971946627765
best_error: 1.1597971921994543
best_error: 1.159789747833197
best_error: 1.1597897467953198
best_error: 1.1597888340503923
best_error: 1.1597888338892632
best_error: 1.1597888338258762
best_error: 1.1597878203516807
best_error: 1.159787820268058
best_error: 1.1597878201239964
best_error: 1.1597870195336322
best_error: 1.1597870191861521
best_error: 1.1597868266012
best_error: 1.159786826302819
best_error: 1.1597865674424126
best_error: 1.1597865672394014
best_error: 1.1597865672132948
best_error: 1.1597844731404123
best_error: 1.1597844726860618
best_error: 1.1597815368853979
best_error: 1.159781536688975
best_error: 1.159781536648334
best_error: 1.1597760663747296
best_error: 1.159776065843913
best_error: 1.1597566634924832
best_error: 1.1597566624194235
best_error: 1.1597355176430284
best_error: 1.159735516435456
best_error: 1.1595900477682277
best_error: 1.1595900448188226
best_error: 1.1591771285021963
best_error: 1.159177123147454
best_error: 1.1587099202064985
best_error: 1.158709911775431
best_error: 1.1586675144778442
best_error: 1.158667508848299
best_error: 1.1586656299929492
best_error: 1.1586656253362388
best_error: 1.1586440761081618
best_error: 1.1586440727162228
best_error: 1.1586111225197124
best_error: 1.1586111217604134
best_error: 1.158606072986698
best_error: 1.1586060726318907
best_error: 1.1586060724726917
best_error: 1.1585957628746482
best_error: 1.1585957616088083
best_error: 1.158588512460648
best_error: 1.158588512345701
best_error: 1.1585885119468753
best_error: 1.15858373443027
best_error: 1.1585837289709624
best_error: 1.158571626746267
best_error: 1.158571626439754
best_error: 1.158571626232975
best_error: 1.1585614358156335
best_error: 1.1585614348278932
best_error: 1.1583450771061918
best_error: 1.158345074796387
best_error: 1.157819332321307
best_error: 1.1578193296102737
best_error: 1.1575788669183027
best_error: 1.1575788601244275
best_error: 1.1574654678321887
best_error: 1.1574654658665062
best_error: 1.1574436895796718
best_error: 1.1574436891248738
best_error: 1.1574436890707345
best_error: 1.1574297846142059
best_error: 1.1574297841268506
best_error: 1.1574297840995629
best_error: 1.1573769683434338
best_error: 1.157376967017239
best_error: 1.1572015488703862
best_error: 1.1572015470792907
best_error: 1.1571497466947216
best_error: 1.1571497441326082
best_error: 1.157149407808642
best_error: 1.1571494051128202
best_error: 1.156855913868652
best_error: 1.1568559138684646
best_error: 1.1568559133957457
