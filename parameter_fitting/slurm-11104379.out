ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 62
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.17362970805704
best_error: 99.17362950802
best_error: 99.17362950183431
best_error: 20.74362811200026
best_error: 20.74362811199976
best_error: 20.743628111134136
best_error: 20.74355148335655
best_error: 20.743551482489273
best_error: 20.743244031575273
best_error: 20.743244030703337
best_error: 20.741999004299956
best_error: 20.741999003408964
best_error: 20.736759939018164
best_error: 20.736759938043374
best_error: 20.71028640329455
best_error: 20.71028640178911
best_error: 18.996006678276768
best_error: 18.996006565063947
best_error: 16.419099641431607
best_error: 16.419099012442835
best_error: 15.92962772432583
best_error: 15.929627716730616
best_error: 15.92962771448008
best_error: 15.912305030865362
best_error: 15.912305024611408
best_error: 15.912305021835518
best_error: 15.861547222777329
best_error: 15.861547220589479
best_error: 15.861547193725322
best_error: 15.811743541644104
best_error: 15.811743456602438
best_error: 15.729849841850035
best_error: 15.729849621687471
best_error: 15.340572320495113
best_error: 15.340571966905983
best_error: 15.148084642890701
best_error: 15.148084625803278
best_error: 15.115211081363466
best_error: 15.1152110682992
best_error: 15.11331361269735
best_error: 15.113313599213654
best_error: 15.11289440349146
best_error: 15.11289439001822
best_error: 15.112722893617024
best_error: 15.112722880148059
best_error: 15.112644479100055
best_error: 15.112644465633045
best_error: 15.112543270523762
best_error: 15.112543257058885
best_error: 15.041036698248334
best_error: 15.041036680134606
best_error: 15.034634922394552
best_error: 15.034634901517585
best_error: 15.027939500889794
best_error: 15.027939471576591
best_error: 14.992154648506387
best_error: 14.992154626896866
best_error: 14.97491175198771
best_error: 14.974911735028797
best_error: 14.963730827919889
best_error: 14.963730812958318
best_error: 14.95901438825653
best_error: 14.959014191020271
best_error: 14.956778867468001
best_error: 14.956778691788406
best_error: 14.955238396179052
best_error: 14.95523838093261
best_error: 14.949500240880885
best_error: 14.949500225535491
best_error: 14.948077581083457
best_error: 14.948077416603994
best_error: 14.947659771977564
best_error: 14.947659752796055
best_error: 14.885691231602866
best_error: 14.8856912298836
best_error: 14.885691225157867
best_error: 14.885691223250067
best_error: 14.871035069632484
best_error: 14.871035061759486
best_error: 14.871034853996129
best_error: 14.820052616847653
best_error: 14.820052615125164
best_error: 14.820052611785302
best_error: 14.820052608508638
best_error: 14.794079103024412
best_error: 14.794079101304938
best_error: 14.794079098262394
best_error: 14.794079094692759
best_error: 14.791542602979483
best_error: 14.791542601250637
best_error: 14.79154259839309
best_error: 14.791542594648426
best_error: 14.791310407301825
best_error: 14.791310405573064
best_error: 14.791310402716947
best_error: 14.791310398970905
best_error: 14.79131032467993
best_error: 14.79131032295116
best_error: 14.791310320095045
best_error: 14.791310316349012
best_error: 14.791310245762906
best_error: 14.79131024403414
best_error: 14.791310241178035
best_error: 14.791310237431995
best_error: 14.791310200564482
best_error: 14.791310200564478
best_error: 14.79131019883572
best_error: 14.79131019597961
best_error: 14.791310192233562
best_error: 14.791310166118626
best_error: 14.791310164389866
best_error: 14.791310161533758
best_error: 14.791310157787713
best_error: 14.791310133869462
best_error: 14.7913101321407
best_error: 14.791310129284597
best_error: 14.791310125538555
best_error: 14.79131010311372
best_error: 14.791310101384973
best_error: 14.791310098528857
best_error: 14.791310094782805
best_error: 14.791310043691446
best_error: 14.791310041962689
best_error: 14.791310039106587
best_error: 14.791310035360535
best_error: 14.791310002098722
best_error: 14.791310000369968
best_error: 14.79130999751387
best_error: 14.791309993767817
best_error: 14.79130982854473
best_error: 14.791309826815972
best_error: 14.791309823959882
best_error: 14.791309820213822
best_error: 14.791309818235703
best_error: 14.791309816345645
best_error: 14.791304433473002
best_error: 14.791304431189953
best_error: 14.791304316296525
best_error: 14.79130397928687
best_error: 14.791303977003814
best_error: 14.791303862110347
best_error: 14.791303787917144
best_error: 14.791303785634103
best_error: 14.791303785449003
best_error: 14.791303783467033
best_error: 14.791303775103614
best_error: 14.791303775103612
