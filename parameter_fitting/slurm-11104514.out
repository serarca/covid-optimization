ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 72
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.41502454877975
best_error: 102.41502437151516
best_error: 102.41502436135714
best_error: 20.014485692325835
best_error: 20.01448569232404
best_error: 20.014485689016237
best_error: 20.01380444103467
best_error: 20.01380443770554
best_error: 20.01103890602606
best_error: 20.01103890261706
best_error: 19.999285543522603
best_error: 19.99928553976362
best_error: 19.93770976787119
best_error: 19.93770976203516
best_error: 17.74662608660106
best_error: 17.746625859234193
best_error: 16.31000738998744
best_error: 16.31000698576162
best_error: 12.944772982718018
best_error: 12.94477267663553
best_error: 12.892741382235632
best_error: 12.892741371175228
best_error: 12.89274137064018
best_error: 12.886662967045798
best_error: 12.886662956743182
best_error: 12.886662955563601
best_error: 12.881482324924704
best_error: 12.881482315816852
best_error: 12.881482313550052
best_error: 12.87733716528022
best_error: 12.877337156791572
best_error: 12.877337154006913
best_error: 12.876033560109207
best_error: 12.876033552356454
best_error: 12.876033551307161
best_error: 12.876033548868229
best_error: 12.874947255216068
best_error: 12.874947247486675
best_error: 12.874947246429464
best_error: 12.874947243994276
best_error: 12.874146634812845
best_error: 12.874146627498348
best_error: 12.874146625313495
best_error: 12.874146623605206
best_error: 12.873540534659385
best_error: 12.873540527743309
best_error: 12.873540524447503
best_error: 12.873540523464015
best_error: 12.873109508490735
best_error: 12.873109501583013
best_error: 12.873109498285547
best_error: 12.873109497302057
best_error: 12.87294503389514
best_error: 12.872945026990614
best_error: 12.87294502369251
best_error: 12.872945022709025
best_error: 12.872880425870454
best_error: 12.872880418967176
best_error: 12.872880415668828
best_error: 12.87288041468534
best_error: 12.872835363166669
best_error: 12.872835094961346
best_error: 12.868396489566916
best_error: 12.868396481912697
best_error: 12.868396480805457
best_error: 12.868396478375526
best_error: 12.852256680239936
best_error: 12.8522566720622
best_error: 12.852256669018114
best_error: 12.778081614953175
best_error: 12.77808160360102
best_error: 12.778081602830177
best_error: 12.772419445636405
best_error: 12.772419434251585
best_error: 12.772419433354766
best_error: 12.770211622796976
best_error: 12.770211611415018
best_error: 12.77021161046935
best_error: 12.770100261061408
best_error: 12.77010024968027
best_error: 12.770100248732247
best_error: 12.770082917518721
best_error: 12.77008290613759
best_error: 12.770082905189133
best_error: 12.770072667009483
best_error: 12.770072655628361
best_error: 12.770072654679637
best_error: 12.770071147275676
best_error: 12.770071135894554
best_error: 12.770071134945786
best_error: 12.770068986269944
best_error: 12.77006897488883
best_error: 12.770068973940031
best_error: 12.770068600093861
best_error: 12.770068588712753
best_error: 12.77006858776394
best_error: 12.77006839261588
best_error: 12.770068381234765
best_error: 12.77006838028596
best_error: 12.770068270204495
best_error: 12.770068258823377
best_error: 12.770068257874577
best_error: 12.770068212076772
best_error: 12.770068200695658
best_error: 12.770068199746852
best_error: 12.763622789952928
best_error: 12.763622596064852
best_error: 12.745592373206353
best_error: 12.745592179054594
best_error: 12.696451039188883
best_error: 12.696451028512762
best_error: 12.696451026464441
best_error: 12.692497136455696
best_error: 12.692497105126293
best_error: 12.692497098838357
best_error: 12.619428706507055
best_error: 12.619428660296656
best_error: 12.553115874165758
best_error: 12.55311585929693
best_error: 12.523820088961081
best_error: 12.523820046432512
best_error: 12.404424693446256
best_error: 12.404424651631729
best_error: 11.946784764112056
best_error: 11.946784723331831
best_error: 11.843777429307533
best_error: 11.84377737179868
best_error: 11.632871266760565
best_error: 11.632871217751482
best_error: 11.550148970884988
best_error: 11.550148937741683
best_error: 11.549412323269571
best_error: 11.549412290130807
best_error: 11.507538235926624
best_error: 11.507538231453069
best_error: 11.507538127803178
best_error: 11.4598141805156
best_error: 11.459814162022791
best_error: 11.45572345246639
best_error: 11.455723447511849
best_error: 11.455723333360911
best_error: 11.453816955652808
best_error: 11.45381694999736
best_error: 11.453816823726754
best_error: 11.443825372813153
best_error: 11.443825357534791
best_error: 11.432652828887353
best_error: 11.432652814331988
best_error: 11.431668883781432
best_error: 11.43166886922366
best_error: 11.431225017475274
best_error: 11.431225002897083
best_error: 11.431173005773129
best_error: 11.431172991194126
best_error: 11.431140396869734
best_error: 11.431140382290218
best_error: 11.431086252392898
best_error: 11.4310861592716
best_error: 11.430964629180005
best_error: 11.430964535683511
best_error: 11.430787204440366
best_error: 11.430787110587099
best_error: 11.430670839529222
best_error: 11.43067074053528
best_error: 11.430612207612096
best_error: 11.430612190049672
best_error: 11.430611834033984
best_error: 11.42860840548155
best_error: 11.428608399212171
best_error: 11.428608260230554
best_error: 11.427669793099748
best_error: 11.427669786804183
best_error: 11.427669647325228
best_error: 11.427212610997051
best_error: 11.427212604683197
best_error: 11.42721246497941
best_error: 11.427175713485498
best_error: 11.427175707171006
best_error: 11.427175567456098
best_error: 11.427142871512803
best_error: 11.42714286519773
best_error: 11.427142725472937
best_error: 11.427137190193385
best_error: 11.427137183878212
best_error: 11.427137044151698
best_error: 11.427135254758653
best_error: 11.427135248443449
best_error: 11.427135108716358
best_error: 11.427133834843904
best_error: 11.427133828528687
best_error: 11.42713368880116
best_error: 11.427132575506803
best_error: 11.42713256919156
best_error: 11.42713242946366
best_error: 11.427131990433907
best_error: 11.42713198411865
best_error: 11.427131844390576
best_error: 11.427131820087244
best_error: 11.42713179861175
best_error: 11.427131752854816
