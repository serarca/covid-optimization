ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 103.98274986421174
best_error: 103.98274975310592
best_error: 103.9827497047194
best_error: 17.37742503885894
best_error: 17.37742503885198
best_error: 17.377425026491
best_error: 17.354032718118983
best_error: 17.354032705130635
best_error: 17.247653066944146
best_error: 17.24765305093331
best_error: 16.386253331817578
best_error: 16.38625327947457
best_error: 16.254599232443795
best_error: 16.25459917350343
best_error: 14.695505110017221
best_error: 14.695505015958522
best_error: 13.4253605280968
best_error: 13.425360393207981
best_error: 13.032985219940068
best_error: 13.032985069944486
best_error: 12.749696049333142
best_error: 12.749695914518993
best_error: 12.553152303116534
best_error: 12.553152287776053
best_error: 12.553152286029354
best_error: 12.553152270339208
best_error: 11.982616888759331
best_error: 11.982616886327175
best_error: 11.982616872808604
best_error: 11.846898081096068
best_error: 11.846898059710885
best_error: 10.43992980435884
best_error: 10.439929794538624
best_error: 10.43992979284783
best_error: 10.263255163957112
best_error: 10.263254950633552
best_error: 10.183322755910696
best_error: 10.183322744122524
best_error: 10.072276843222381
best_error: 10.072276839132455
best_error: 10.07227683642693
best_error: 10.072276833284812
best_error: 10.039304587252731
best_error: 10.039304587190795
best_error: 10.039304575431492
best_error: 10.028045686689419
best_error: 10.028045686689417
best_error: 10.02804568668933
best_error: 10.028045672726424
best_error: 10.026606333733435
best_error: 10.026606029821474
best_error: 10.02524454269731
best_error: 10.025244542697216
best_error: 10.025244528109809
best_error: 10.025083585251965
best_error: 10.025083581952837
best_error: 10.02508356993868
best_error: 10.025004886554143
best_error: 10.025004582858266
best_error: 9.979512641725655
best_error: 9.979512613967199
best_error: 9.948931418067687
best_error: 9.948931370631934
best_error: 9.876963074209968
best_error: 9.87696298249001
best_error: 9.845244046195514
best_error: 9.845243372156261
best_error: 9.69539846707486
best_error: 9.695397992820908
best_error: 9.619020585872455
best_error: 9.619020581535644
best_error: 9.619020579370247
best_error: 9.59532732119618
best_error: 9.595327318497146
best_error: 9.595327314620377
best_error: 9.59286553631373
best_error: 9.592865533687949
best_error: 9.592865529729242
best_error: 9.591725685677996
best_error: 9.59172568346031
best_error: 9.591725679089393
best_error: 9.591300769403851
best_error: 9.59130076720377
best_error: 9.591300762813706
best_error: 9.591249722256729
best_error: 9.591249720058782
best_error: 9.59124971566628
best_error: 9.591249060961342
best_error: 9.591248692262464
best_error: 9.586877698755575
best_error: 9.586877333716926
best_error: 9.584504680497963
best_error: 9.584504677020725
best_error: 9.584504673801725
best_error: 9.515782930836743
best_error: 9.515782926144963
best_error: 9.515782924345077
best_error: 9.111276291535892
best_error: 9.111275816351329
best_error: 9.00030737001126
best_error: 9.00030689794065
best_error: 8.92429250042779
best_error: 8.92429250041539
best_error: 8.924292494400934
best_error: 8.922206871744084
best_error: 8.922206823242384
best_error: 8.918344892196412
best_error: 8.918344892182983
best_error: 8.918344886175067
best_error: 8.915137050601238
best_error: 8.915136591166949
best_error: 8.910187201988611
best_error: 8.910187201974177
best_error: 8.910187200898081
best_error: 8.9101871959677
best_error: 8.908332020051013
best_error: 8.908332020036916
best_error: 8.90833201873622
best_error: 8.908332014033132
best_error: 8.901276203405303
best_error: 8.901276203390076
best_error: 8.901276201854271
best_error: 8.901276197398735
best_error: 8.880947506602016
best_error: 8.880947409481802
best_error: 8.876370393773785
best_error: 8.876370227397052
best_error: 8.87397532326785
best_error: 8.873975162269682
best_error: 8.867823033393352
best_error: 8.867822888867737
best_error: 8.851215655035695
best_error: 8.851215611964529
best_error: 8.849227110750505
best_error: 8.849227030152145
best_error: 8.843809461960921
best_error: 8.84380940518718
best_error: 8.843493492186735
best_error: 8.843493435405955
best_error: 8.843459510649602
best_error: 8.843459453869627
best_error: 8.843450951210068
best_error: 8.843450894430294
best_error: 8.843445543583044
best_error: 8.843445486803397
best_error: 8.843444622902243
best_error: 8.843444566122619
best_error: 8.843444503223434
best_error: 8.843444459121928
best_error: 8.843444412118384
best_error: 8.843444355338764
best_error: 8.843444202784916
best_error: 8.843444192117618
best_error: 8.829626934424393
best_error: 8.829626888521478
best_error: 8.813683888535033
best_error: 8.813683835450064
best_error: 8.771193089582049
best_error: 8.771193044156469
best_error: 8.723364520262024
best_error: 8.723364305383775
best_error: 8.708561360140301
best_error: 8.708561354389829
best_error: 8.708561352471552
best_error: 8.695551703960316
best_error: 8.695551676622951
best_error: 8.69253457956368
best_error: 8.692534552366876
best_error: 8.692047198328563
best_error: 8.692047171297503
best_error: 8.691906091491777
best_error: 8.691906064745103
best_error: 8.691884155865015
best_error: 8.691884106323938
best_error: 8.691874150894005
best_error: 8.69187412412475
best_error: 8.691795399983018
best_error: 8.69179537800091
best_error: 8.691786956317054
best_error: 8.691786934329624
best_error: 8.69178058947564
best_error: 8.691780567484198
best_error: 8.691776316414145
best_error: 8.691776294420016
best_error: 8.691773736240151
best_error: 8.691773714244388
best_error: 8.691772442618117
best_error: 8.691772420621541
best_error: 8.691772122134333
best_error: 8.691772100137566
best_error: 8.691771899785921
best_error: 8.691771877789025
best_error: 8.691771739198678
best_error: 8.691771717201686
best_error: 8.691771629706224
best_error: 8.69177160770917
best_error: 8.691771562036072
best_error: 8.691771557861504
best_error: 8.691771556840589
best_error: 8.691771524625729
best_error: 8.691771520451155
best_error: 8.691771519430247
best_error: 8.691771487451481
