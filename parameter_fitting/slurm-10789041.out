ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.759604232435978
best_error: 8.759604218617168
best_error: 8.108746482153396
best_error: 8.108746453825972
best_error: 7.072978833334178
best_error: 7.072978826885795
best_error: 7.072978750378858
best_error: 7.004412993154306
best_error: 7.004412972270353
best_error: 7.004412898490061
best_error: 5.409437091832121
best_error: 5.409436968538605
best_error: 5.0438426055425705
best_error: 5.043842490919038
best_error: 4.915505651401585
best_error: 4.915505535808688
best_error: 4.806542690391628
best_error: 4.806542574321723
best_error: 4.062083842629271
best_error: 4.062083822142744
best_error: 3.976354646760205
best_error: 3.976354535653612
best_error: 3.9512021063646507
best_error: 3.951202086039798
best_error: 2.273209020858063
best_error: 2.273209003610403
best_error: 2.2732087836803556
best_error: 2.256782624715354
best_error: 2.256782600294572
best_error: 2.2567824037796917
best_error: 2.232825820720656
best_error: 2.232825790265292
best_error: 2.2328256125244526
best_error: 1.9497771983919918
best_error: 1.9497771419909407
best_error: 1.9497770201244555
best_error: 1.9237260419119635
best_error: 1.9237259836516512
best_error: 1.9237258637450958
best_error: 1.9068590947046231
best_error: 1.9068590356285662
best_error: 1.9068589164658372
best_error: 1.895640453353714
best_error: 1.8956403935951491
best_error: 1.8956402746451095
best_error: 1.8887825458065959
best_error: 1.888782485650062
best_error: 1.888782366105013
best_error: 1.881593680133661
best_error: 1.8815936193445917
best_error: 1.8815935001709558
best_error: 1.8783945941858162
best_error: 1.878394533219462
best_error: 1.8783944136870474
best_error: 1.878155691661071
best_error: 1.8781556306814533
best_error: 1.8781555111222743
best_error: 1.8779704980092449
best_error: 1.877970437019345
best_error: 1.8779703174394395
best_error: 1.877898527975728
best_error: 1.8778984669810623
best_error: 1.8778983473927466
best_error: 1.8778730268690584
best_error: 1.8778729658727091
best_error: 1.8778728462814092
best_error: 1.877857814370783
best_error: 1.877857753373418
best_error: 1.8778576337803452
best_error: 1.877844702511072
best_error: 1.8778446415128354
best_error: 1.8778445219182427
best_error: 1.8778385152809576
best_error: 1.8778384542823323
best_error: 1.8778383346870051
best_error: 1.877832546593163
best_error: 1.8778324855941304
best_error: 1.8778323659981129
best_error: 1.8778302247417944
best_error: 1.8778301637426118
best_error: 1.8778300441463127
best_error: 1.877828790292724
best_error: 1.877828729293438
best_error: 1.877828609696981
best_error: 1.877827800390042
best_error: 1.8778277393906941
best_error: 1.877827619794123
best_error: 1.877827122545627
best_error: 1.8778270615462294
best_error: 1.877826941949581
best_error: 1.8778266133999937
best_error: 1.8778265524005613
best_error: 1.877826432803852
best_error: 1.877826347376963
best_error: 1.8778262863775217
best_error: 1.8778261667807754
best_error: 1.8778261000792207
best_error: 1.8778260390797463
best_error: 1.877825919482985
best_error: 1.8778258808958432
best_error: 1.8778258781151669
best_error: 1.8778258174501747
best_error: 1.8778257791133457
best_error: 1.8778257559814997
best_error: 1.8778257420516458
best_error: 1.79325219593068
best_error: 1.7932521425835546
best_error: 1.6273450600156263
best_error: 1.6273450378398389
best_error: 1.6273448473868113
best_error: 1.6182916572077617
best_error: 1.6182916383582369
best_error: 1.6182914408648355
best_error: 1.567971133959802
best_error: 1.5679711259755726
best_error: 1.5679709096780532
best_error: 1.5000187238086296
best_error: 1.5000184676695714
best_error: 1.4715868889519528
best_error: 1.4715868789961193
best_error: 1.4715866413071783
best_error: 1.4382390081351673
best_error: 1.438239007899152
best_error: 1.4382387354838813
best_error: 1.424965498685422
best_error: 1.4249652164357842
best_error: 1.4070606513881494
best_error: 1.40706064894243
best_error: 1.4070603730425968
best_error: 1.4010716311502103
best_error: 1.4010715998362184
best_error: 1.3964226866967886
best_error: 1.3964226841497651
best_error: 1.396422408181542
best_error: 1.3917721831000507
best_error: 1.3917721517325572
best_error: 1.3911673175306267
best_error: 1.39116731495134
best_error: 1.3911670384163648
best_error: 1.3910552181082951
best_error: 1.3910552155283191
best_error: 1.391054938981271
best_error: 1.391038590400221
best_error: 1.3910385590284773
best_error: 1.3910304290048328
best_error: 1.3910304264246927
best_error: 1.3910303805742292
best_error: 1.3910303774415997
