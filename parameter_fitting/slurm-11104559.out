ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 76
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.77210875300594
best_error: 100.77210859685619
best_error: 100.77210857694723
best_error: 19.352042923252895
best_error: 19.352042923250046
best_error: 19.35204291742238
best_error: 19.349463212312145
best_error: 19.3494632064149
best_error: 19.33884619719791
best_error: 19.338846191023585
best_error: 19.29105900203691
best_error: 19.291058994567692
best_error: 18.975596200746022
best_error: 18.975596184205845
best_error: 18.960370060466985
best_error: 18.960370043316395
best_error: 18.02046115064128
best_error: 18.02046105638878
best_error: 11.907468089984562
best_error: 11.90746769082271
best_error: 11.665050868783396
best_error: 11.665050852552655
best_error: 11.665050851200236
best_error: 11.61175833171078
best_error: 11.611758317872223
best_error: 11.611758314851805
best_error: 11.610263412576195
best_error: 11.610263398794789
best_error: 11.61026339573934
best_error: 11.609962059281491
best_error: 11.609962045505368
best_error: 11.609962042449132
best_error: 11.609909938266243
best_error: 11.609909924491031
best_error: 11.609909921434655
best_error: 11.609883911582662
best_error: 11.609883897807896
best_error: 11.609883894751437
best_error: 11.60987959273847
best_error: 11.609879434286904
best_error: 11.609875629954676
best_error: 11.609875616180059
best_error: 11.609875613123567
best_error: 11.609875281371306
best_error: 11.609875215480454
best_error: 11.60923052053479
best_error: 11.609230506760815
best_error: 11.609230503697287
best_error: 11.606649741161094
best_error: 11.606649727383939
best_error: 11.606649724297949
best_error: 11.596261717109616
best_error: 11.596261703284965
best_error: 11.596261700143575
best_error: 11.55557654194802
best_error: 11.555576527510116
best_error: 11.555576524564577
best_error: 11.47187701898781
best_error: 11.471877003721175
best_error: 11.471877000720887
best_error: 11.471679653069184
best_error: 11.47167963780315
best_error: 11.471679634803078
best_error: 11.470890335792227
best_error: 11.47089032052854
best_error: 11.470890317529324
best_error: 11.467735408203145
best_error: 11.467735392948903
best_error: 11.467735389953095
best_error: 11.455160062199962
best_error: 11.455160046995124
best_error: 11.455160044001222
best_error: 11.405833990716578
best_error: 11.405833975597787
best_error: 11.405833972721965
best_error: 11.220617711327906
best_error: 11.220617696885673
best_error: 11.220617694128471
best_error: 11.118237703900508
best_error: 11.118237689009682
best_error: 11.118237687876977
best_error: 11.007504178854612
best_error: 11.007504129496926
best_error: 10.763769104668626
best_error: 10.763769058890572
best_error: 10.641180635067979
best_error: 10.641180433723038
best_error: 10.641154478567737
best_error: 10.641154277220334
best_error: 10.641049852455579
best_error: 10.6410496510983
best_error: 10.640631346211846
best_error: 10.640631144815123
best_error: 10.638958068499004
best_error: 10.63895786713427
best_error: 10.632269857817949
best_error: 10.632269655729067
best_error: 10.605533015236128
best_error: 10.605532811016996
best_error: 10.538592760719556
best_error: 10.538592726749618
best_error: 10.499737901956992
best_error: 10.499737881126642
best_error: 10.49973787877134
best_error: 10.462490417838218
best_error: 10.462490400421185
best_error: 10.462490392457033
best_error: 10.43199470357069
best_error: 10.431994620448423
best_error: 10.421811749041336
best_error: 10.421811667472413
best_error: 10.411486163434029
best_error: 10.411486146220833
best_error: 10.411486139720264
best_error: 10.39686638029777
best_error: 10.396866287839423
best_error: 10.390985666408938
best_error: 10.390985649246385
best_error: 10.39098564216031
best_error: 10.350862868242322
best_error: 10.350862842990399
best_error: 10.350188742538883
best_error: 10.350188738210365
best_error: 10.350188640122335
best_error: 10.34933725403516
best_error: 10.349337228724442
best_error: 10.305816073945241
best_error: 10.305816072118063
best_error: 10.305816021611108
best_error: 10.29960618117373
best_error: 10.299606159137074
best_error: 10.299606153340097
best_error: 10.27704565123748
best_error: 10.277045631650454
best_error: 10.277045624485758
best_error: 10.264089715016393
best_error: 10.264089686650054
best_error: 10.176890285751593
best_error: 10.176890257500936
best_error: 10.097268968189049
best_error: 10.097268962671022
best_error: 10.097268861034598
best_error: 10.09454560472828
best_error: 10.094545493388564
best_error: 10.089890320272136
best_error: 10.089890210031472
best_error: 10.089736903473213
best_error: 10.089736889324126
best_error: 10.089736877714568
best_error: 10.08969973523598
best_error: 10.089699624960279
best_error: 10.089675860336902
best_error: 10.089675846198222
best_error: 10.089675834548428
best_error: 10.088979348922386
best_error: 10.088979334794374
best_error: 10.088979323047973
best_error: 10.088794995929312
best_error: 10.088794970031284
best_error: 10.082792996847777
best_error: 10.082792988541707
best_error: 10.082792839724036
best_error: 10.050576120529922
best_error: 10.050576116578549
best_error: 10.050576078830483
best_error: 10.049899612145516
best_error: 10.049899608110609
best_error: 10.049899571548323
best_error: 10.04943943589128
best_error: 10.049439431794035
best_error: 10.049439396060595
best_error: 10.04918714267017
best_error: 10.049187138562017
best_error: 10.049187102903286
best_error: 10.049096987577709
best_error: 10.049096975812954
best_error: 10.049096968723564
best_error: 10.022653007314833
best_error: 10.022652991686487
best_error: 9.994838890446093
best_error: 9.994838878111313
best_error: 9.994838874742507
best_error: 9.934580576690404
best_error: 9.934580565593565
best_error: 9.934580563873524
best_error: 9.933910025979916
best_error: 9.933910014550804
best_error: 9.933910013027269
best_error: 9.885433714440511
best_error: 9.885433713578578
best_error: 9.88543371069498
best_error: 9.883856898000442
best_error: 9.88385689710741
best_error: 9.883856894288543
best_error: 9.883292056664462
best_error: 9.8832920483413
best_error: 9.883291893893052
best_error: 9.88326028409761
best_error: 9.883260283164246
best_error: 9.88326028039118
best_error: 9.88322623995161
best_error: 9.883226239018427
best_error: 9.883226236245484
best_error: 9.883211903013159
best_error: 9.883211902080056
best_error: 9.88321189930715
best_error: 9.883210958483154
best_error: 9.883210957550055
best_error: 9.883210954777162
best_error: 9.883210821342153
best_error: 9.883210820409062
best_error: 9.883210817636169
best_error: 9.883210768968619
best_error: 9.883210768035518
best_error: 9.883210765262625
