ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 108.77968688217305
best_error: 108.77968670417597
best_error: 18.10088306636337
best_error: 18.10088306635781
best_error: 18.100883056391208
best_error: 18.093580084391647
best_error: 18.093580074224427
best_error: 18.06288499908868
best_error: 18.062884988076902
best_error: 17.909826214686177
best_error: 17.909826198859108
best_error: 14.953905488843782
best_error: 14.953905361779917
best_error: 14.653250297986533
best_error: 14.653250197825963
best_error: 14.462675925689087
best_error: 14.46267584075705
best_error: 14.325721047101805
best_error: 14.325720957512754
best_error: 14.202324547696513
best_error: 14.202324465643997
best_error: 13.869106903651799
best_error: 13.869106839907783
best_error: 13.760654924902148
best_error: 13.760654895447786
best_error: 13.493587096092565
best_error: 13.493587066561187
best_error: 13.444168517055221
best_error: 13.4441684882083
best_error: 13.406982763850522
best_error: 13.4069827373231
best_error: 13.33723261980457
best_error: 13.337232612268897
best_error: 13.337232601265931
best_error: 12.956826466164816
best_error: 12.95682646616481
best_error: 12.95682646390714
best_error: 12.956826447640232
best_error: 12.435956858591236
best_error: 12.435956800454099
best_error: 11.680330818547713
best_error: 11.680330684330865
best_error: 11.592920587579666
best_error: 11.592920565106418
best_error: 11.58893088360158
best_error: 11.588930753007597
best_error: 11.428752312194218
best_error: 11.428752250010659
best_error: 11.331457015183416
best_error: 11.33145701266239
best_error: 11.331456990110059
best_error: 11.256144556564205
best_error: 11.256144548428658
best_error: 11.256144542991883
best_error: 11.23169336511403
best_error: 11.231693360193065
best_error: 11.23169335414154
best_error: 11.191633759437416
best_error: 11.19163375943699
best_error: 11.191633758885263
best_error: 11.191633751006982
best_error: 11.175861755276582
best_error: 11.175861751988155
best_error: 11.175861748683005
best_error: 11.12284200445364
best_error: 11.122841586862993
best_error: 10.851435915629633
best_error: 10.851435911401014
best_error: 10.851435910181387
best_error: 10.822071440598735
best_error: 10.82207143165353
best_error: 10.814646194555994
best_error: 10.814646184703388
best_error: 10.814524335819128
best_error: 10.81452428369369
best_error: 10.79256140701099
best_error: 10.792561353216303
best_error: 10.78659649239248
best_error: 10.786596435330738
best_error: 10.77342351095168
best_error: 10.773423452512915
best_error: 10.748265463739582
best_error: 10.748265401615619
best_error: 10.736335779919571
best_error: 10.73633571847529
best_error: 10.688269512849363
best_error: 10.688269453519064
best_error: 10.688269453037822
best_error: 10.493989127558963
best_error: 10.493989069290997
best_error: 10.49398906379038
best_error: 10.467152377675655
best_error: 10.467151799139906
best_error: 10.433304093383207
best_error: 10.433303524429203
best_error: 10.1552256332381
best_error: 10.155225549189113
best_error: 10.141301992014585
best_error: 10.141301951739086
best_error: 10.016692501283485
best_error: 10.016692266377074
best_error: 9.90803941195967
best_error: 9.908039373203748
best_error: 9.890257167653454
best_error: 9.890257117702387
best_error: 9.890257116763108
best_error: 9.805335042857887
best_error: 9.805334988253819
best_error: 9.805334978510425
best_error: 9.765367990221332
best_error: 9.765367841715475
best_error: 9.67985533302356
best_error: 9.679855325504224
best_error: 9.679855315842483
best_error: 9.66752784200685
best_error: 9.667527626716565
best_error: 9.640459633776015
best_error: 9.640459508703357
best_error: 9.634698081549681
best_error: 9.63469805977739
best_error: 9.630719498323398
best_error: 9.630719498322748
best_error: 9.630719498317683
best_error: 9.630719497697637
best_error: 9.63071949484766
best_error: 9.629005317157088
best_error: 9.629005317156562
best_error: 9.629005317152094
best_error: 9.62900531644005
best_error: 9.629005313498466
best_error: 9.628717910096368
best_error: 9.628717886134382
best_error: 9.628717875071915
best_error: 9.628046561337428
best_error: 9.628046493982936
best_error: 9.624284486286935
best_error: 9.624284376738675
best_error: 9.62183435565644
best_error: 9.621834328940807
best_error: 9.621628201737074
best_error: 9.621628188276837
best_error: 9.62155988912702
best_error: 9.621559875661013
best_error: 9.621523104600666
best_error: 9.62152309113155
best_error: 9.621499068918228
best_error: 9.621499055447076
best_error: 9.62148274379518
best_error: 9.621482730322647
best_error: 9.621477051810821
best_error: 9.62147703053346
best_error: 9.621477020562368
best_error: 9.621167862502045
best_error: 9.621167841863262
best_error: 9.621070682529279
best_error: 9.621070669134783
