ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 80
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.777650462547488
best_error: 19.77765002211052
best_error: 4.335566290756672
best_error: 4.335566288799502
best_error: 4.334651364958141
best_error: 4.334651364946265
best_error: 4.334651364901204
best_error: 4.330957135824585
best_error: 4.330957135812241
best_error: 4.33095713576715
best_error: 4.315575996845563
best_error: 4.31557599683106
best_error: 4.315575996785994
best_error: 4.241805513918409
best_error: 4.241805513887116
best_error: 4.241805513847014
best_error: 3.1694670140391317
best_error: 3.169466957922661
best_error: 3.019308396535397
best_error: 3.019308386351364
best_error: 2.9858385789818236
best_error: 2.9858385705257207
best_error: 2.9778494107833455
best_error: 2.9778494102348407
best_error: 2.9778494021746917
best_error: 2.9708682790062255
best_error: 2.9708682582555213
best_error: 2.9484274020196564
best_error: 2.9484273758560913
best_error: 2.747394715496208
best_error: 2.7473946889171503
best_error: 2.747394674667798
best_error: 2.707310956611463
best_error: 2.7073109316971324
best_error: 2.707310909165587
best_error: 2.65771682522477
best_error: 2.6577168027230114
best_error: 2.6577167692886188
best_error: 2.439092924572334
best_error: 2.4390929119248796
best_error: 2.4390928337290867
best_error: 2.2105938528103173
best_error: 2.2105938493843023
best_error: 2.210593728544723
best_error: 2.083102533234891
best_error: 2.0831024729332737
best_error: 2.0828354337437656
best_error: 2.082835370743809
best_error: 2.082626110478839
best_error: 2.0826260438019673
best_error: 1.9925076638394106
best_error: 1.9925076083324875
best_error: 1.9469189891859668
best_error: 1.9469188001896718
best_error: 1.7693463273031969
best_error: 1.7693462901999313
best_error: 1.7683894843771109
best_error: 1.7683894463648966
best_error: 1.7609637895833732
best_error: 1.7609637811813024
best_error: 1.7597571463578459
best_error: 1.7597571388123339
best_error: 1.7578755334762866
best_error: 1.7578755197362568
best_error: 1.7545975469022972
best_error: 1.7545975170939463
best_error: 1.7398856472460071
best_error: 1.7398855569544875
best_error: 1.6981283457523508
best_error: 1.6981281919407973
best_error: 1.5556663078064041
best_error: 1.5556661135738263
best_error: 1.298663867241778
best_error: 1.2986638365077134
best_error: 1.2981813572687326
best_error: 1.2981813415834482
best_error: 1.2972720723582214
best_error: 1.297272070355283
best_error: 1.297272069036432
best_error: 1.2967993979451824
best_error: 1.2967993936798416
best_error: 1.2960646322784148
best_error: 1.2960646277480106
best_error: 1.2959679801242912
best_error: 1.2959679789584053
best_error: 1.2958297423956515
best_error: 1.2958297375043744
best_error: 1.295667405086919
best_error: 1.295667397770526
best_error: 1.2945535426385069
best_error: 1.2945535241831612
best_error: 1.2926022801329347
best_error: 1.2926022482069848
best_error: 1.2868725707914463
best_error: 1.2868725166192057
best_error: 1.282583440298075
best_error: 1.2825833782951925
best_error: 1.2712957899032167
best_error: 1.2712957295602545
best_error: 1.2709018307627908
best_error: 1.2709017850512838
best_error: 1.2630232804595334
best_error: 1.263023264902515
best_error: 1.2582327781131313
best_error: 1.2582327453263646
best_error: 1.2559413295107837
best_error: 1.2559413233385452
best_error: 1.2557806357249297
best_error: 1.2557806344403355
best_error: 1.2557191055895203
best_error: 1.2557191047757505
best_error: 1.2557066586028416
best_error: 1.255706657399437
best_error: 1.2555183729060735
best_error: 1.255518370176631
best_error: 1.2533118343496015
best_error: 1.2533118207752196
best_error: 1.2524451361229858
best_error: 1.2524451292225462
best_error: 1.2511825532390417
best_error: 1.2511825364543614
best_error: 1.2507843288326221
best_error: 1.2507843158252796
best_error: 1.2502247213044289
best_error: 1.2502247146852599
best_error: 1.2494453247526622
best_error: 1.249445324747247
best_error: 1.2494453244279895
best_error: 1.2494453243692007
best_error: 1.2494453242379058
best_error: 1.2494453240470171
best_error: 1.2488928476737853
best_error: 1.2488928449744088
best_error: 1.2483288277279803
best_error: 1.248328821284088
best_error: 1.248170025867829
best_error: 1.248170019869768
best_error: 1.247701953508478
best_error: 1.2477019520107526
best_error: 1.2474713214085797
best_error: 1.2474713189985365
best_error: 1.2474105491167438
best_error: 1.2474105485086624
best_error: 1.247341108881937
best_error: 1.2473411078116465
best_error: 1.2472466888395908
best_error: 1.247246687878254
best_error: 1.246945712350155
best_error: 1.2469457045268901
best_error: 1.246468334528567
best_error: 1.2464683271104104
best_error: 1.2415739678807265
best_error: 1.2415739646054529
best_error: 1.2395055912071538
best_error: 1.2395055684819254
best_error: 1.2373589001532057
best_error: 1.2373588799950088
best_error: 1.2343612678990705
best_error: 1.2343612597329703
best_error: 1.2327790348254681
best_error: 1.2327790214832235
best_error: 1.2302051654437092
best_error: 1.2302051437933947
best_error: 1.227363156021654
best_error: 1.227363119495973
best_error: 1.2247274160253212
best_error: 1.2247273912191607
best_error: 1.221780933032632
best_error: 1.2217809135959674
best_error: 1.2214531046315122
best_error: 1.2214530463179587
best_error: 1.2201885878481606
best_error: 1.2201885332606666
best_error: 1.2198240423997952
best_error: 1.219823978031342
best_error: 1.2178411059186829
best_error: 1.2178410770978538
best_error: 1.2172477543340934
best_error: 1.2172477508956279
best_error: 1.2167749351721957
best_error: 1.216774904409512
best_error: 1.2158207675417558
best_error: 1.2158207674460781
best_error: 1.215820767060389
best_error: 1.2156289329634586
best_error: 1.2156289317994462
best_error: 1.2153608941555383
best_error: 1.2153608939973457
best_error: 1.2153608937872344
best_error: 1.2153608937172045
best_error: 1.2152910132280805
best_error: 1.2152910130101149
best_error: 1.2152910127617618
best_error: 1.2151433431446528
best_error: 1.2151433430009566
best_error: 1.2151433427368195
best_error: 1.2144787530875218
best_error: 1.2144787505289039
best_error: 1.213689705923346
best_error: 1.213689695548193
best_error: 1.2134058275122697
best_error: 1.213405822592534
best_error: 1.2133408054859502
best_error: 1.2133408041866518
best_error: 1.2133319496491581
best_error: 1.2133319489242365
best_error: 1.2133254708879473
best_error: 1.213325470508086
best_error: 1.2133254704345053
best_error: 1.213276885008471
best_error: 1.2132768829850142
best_error: 1.2132172879502934
best_error: 1.2132172843845987
best_error: 1.212671270459609
best_error: 1.21267126582914
best_error: 1.212613163597832
best_error: 1.2126131585069388
best_error: 1.2126068377925856
best_error: 1.2126068347843804
best_error: 1.2125940996958071
best_error: 1.2125940980340233
best_error: 1.2125773963488657
best_error: 1.2125773948955603
best_error: 1.212529319788777
best_error: 1.2125293170353901
best_error: 1.2124352530874496
best_error: 1.2124352502763232
best_error: 1.2118630903360113
best_error: 1.2118630889408684
best_error: 1.2102967839621122
best_error: 1.2102967571428598
best_error: 1.2099638900111436
best_error: 1.209963876282468
best_error: 1.2099634718595544
best_error: 1.2099634574406175
best_error: 1.209963078952156
best_error: 1.209963063853296
best_error: 1.2098378252413882
best_error: 1.2098378213269003
best_error: 1.2098273875128174
best_error: 1.209827378637695
best_error: 1.2079852984389559
best_error: 1.2079852949505088
best_error: 1.2079492245790846
best_error: 1.2079492245192616
best_error: 1.2079492243667427
best_error: 1.207949223649787
best_error: 1.207949223623016
best_error: 1.207948866260025
best_error: 1.2079488661975761
best_error: 1.2079488660251214
best_error: 1.207948865333283
best_error: 1.2079488652933603
best_error: 1.2077079411385028
best_error: 1.2077079410657472
best_error: 1.2077079408738873
best_error: 1.2077079402471362
best_error: 1.2077079401429471
