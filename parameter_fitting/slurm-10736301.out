ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 7.838959405419362
best_error: 7.838959374583806
best_error: 6.9426784902039085
best_error: 6.942678387715452
best_error: 3.5721282665861174
best_error: 3.572128101584287
best_error: 3.3954691914551
best_error: 3.3954690467406237
best_error: 3.311797726584345
best_error: 3.311797683841393
best_error: 3.3051409548633317
best_error: 3.3051409190275036
best_error: 3.1971155424885653
best_error: 3.1971155193297642
best_error: 3.019206262665073
best_error: 3.0192062418386802
best_error: 3.0072386754229403
best_error: 3.007238675362034
best_error: 3.0072386700375513
best_error: 2.669072729731387
best_error: 2.669072729703557
best_error: 2.669072722789923
best_error: 2.3603762201066742
best_error: 2.3603761009886046
best_error: 2.3406371635033194
best_error: 2.3406370514643977
best_error: 2.3181608150904705
best_error: 2.31658174387182
best_error: 2.316581729127153
best_error: 2.3164875369075775
best_error: 2.3164875225827117
best_error: 2.31646015331514
best_error: 2.3164601389797532
best_error: 2.3164380573167467
best_error: 2.3164380429728717
best_error: 2.3164247975277688
best_error: 2.3164247832314997
best_error: 2.3164150948779514
best_error: 2.3164150805779498
best_error: 2.31640802401689
best_error: 2.3164080097141673
best_error: 2.3164018643649746
best_error: 2.3164018500598824
best_error: 2.3163982985314813
best_error: 2.3163982842250137
best_error: 2.316395710276575
best_error: 2.316395696071008
best_error: 2.3163938464635354
best_error: 2.316393832257253
best_error: 2.3163924672036043
best_error: 2.316392452996788
best_error: 2.3163913402130882
best_error: 2.316391326005841
best_error: 2.316390646304254
best_error: 2.3163906320967373
best_error: 2.3163898555047373
best_error: 2.3163898412969157
best_error: 2.316389520613945
best_error: 2.316389506405995
best_error: 2.3163893177756774
best_error: 2.316389303567652
best_error: 2.3163891452007066
best_error: 2.3163891309926132
best_error: 2.316389001402338
best_error: 2.316388987194189
best_error: 2.3163889265904247
best_error: 2.3163889123822505
best_error: 2.316388864025865
best_error: 2.316388849817663
best_error: 2.3163888319242174
best_error: 2.3163888177160037
best_error: 2.3163888049107983
best_error: 2.316388790702576
best_error: 2.3163887771655434
best_error: 2.316387682268938
best_error: 2.3163876680606617
best_error: 2.3163832978838204
best_error: 2.316383283675373
best_error: 2.3163658562037512
best_error: 2.316365841994597
best_error: 2.3162976134314146
best_error: 2.316297599219549
best_error: 2.3160484225730547
best_error: 2.3160484082495967
best_error: 2.3152693290931223
best_error: 2.3152693146708065
best_error: 2.31506120743418
best_error: 2.315061192757086
best_error: 2.314929496929564
best_error: 2.3149294820486768
best_error: 2.314857605677741
best_error: 2.3148575907977658
best_error: 2.3147821082752635
best_error: 2.314782093228551
best_error: 2.314759359077658
best_error: 2.314759344027013
best_error: 2.314698722178551
best_error: 2.3146987072673335
best_error: 2.3146409009670164
best_error: 2.3146408863365218
best_error: 2.3146189004110402
best_error: 2.3146188857719716
best_error: 2.3146026260958434
best_error: 2.3146026114504297
best_error: 2.314588800402746
best_error: 2.3145887859043843
best_error: 2.3145767872527623
best_error: 2.3145767727496773
best_error: 2.3145712356209307
best_error: 2.314571221115668
best_error: 2.3145637231255427
best_error: 2.3145637086173347
best_error: 2.3145618244598603
best_error: 2.314561809950908
best_error: 2.3145607954282403
best_error: 2.314560780918888
best_error: 2.314559468564833
best_error: 2.314559454054953
best_error: 2.3145589954706254
best_error: 2.3145589809605616
best_error: 2.3145587359707904
best_error: 2.314558721460629
best_error: 2.3145584037514126
best_error: 2.3145583892411157
best_error: 2.3145582835556113
best_error: 2.314558269045265
best_error: 2.3145582170122685
best_error: 2.314558202501902
best_error: 2.3145581694846458
best_error: 2.3145581549742595
best_error: 2.314558134737962
best_error: 2.314558120227562
best_error: 2.314558103531753
best_error: 2.3145580890213395
best_error: 2.31455808576469
best_error: 2.3145580712542673
best_error: 2.314558063427209
best_error: 2.3145580489167807
best_error: 2.3145580405439254
