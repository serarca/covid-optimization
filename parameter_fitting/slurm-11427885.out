ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.41317020642207
best_error: 19.41317000384215
best_error: 4.279982870263346
best_error: 4.279982868367016
best_error: 4.276867331169493
best_error: 4.276867331078869
best_error: 4.276867329951902
best_error: 4.264127812969957
best_error: 4.264127812872946
best_error: 4.264127811733213
best_error: 4.208217689690475
best_error: 4.208217689564078
best_error: 4.208217688368646
best_error: 3.8383174898628813
best_error: 3.838317489406694
best_error: 3.838317487914158
best_error: 3.549265773377941
best_error: 3.549265772212712
best_error: 3.549265770782873
best_error: 3.361092538124961
best_error: 3.361092510950119
best_error: 3.2742375872425242
best_error: 3.2742375832544197
best_error: 3.2711248688291734
best_error: 3.2711248683343035
best_error: 3.271124866960865
best_error: 3.2380063677072104
best_error: 3.238006367387286
best_error: 3.238006365062085
best_error: 3.0403829064315886
best_error: 3.040382889933324
best_error: 2.9370872991776373
best_error: 2.9370872668060355
best_error: 2.6910149050860666
best_error: 2.6910148361823207
best_error: 2.242730109344706
best_error: 2.242729949414746
best_error: 2.193395855161293
best_error: 2.1933957340143837
best_error: 2.175199610646931
best_error: 2.1751994551584932
best_error: 1.8598342272680282
best_error: 1.8598341313376867
best_error: 1.8104811812122314
best_error: 1.8104811424053586
best_error: 1.7679003700154652
best_error: 1.7679003381809812
best_error: 1.7522168346791804
best_error: 1.7522167894801381
best_error: 1.7199993133777816
best_error: 1.7199992835886788
best_error: 1.6973218249456523
best_error: 1.6973217750399712
best_error: 1.5925661235544337
best_error: 1.5925660988861217
best_error: 1.571063215519064
best_error: 1.5710631126236323
best_error: 1.5402722172056844
best_error: 1.540272160619415
best_error: 1.4730293046510974
best_error: 1.4730291919157985
best_error: 1.4605242789757034
best_error: 1.4605242189039567
best_error: 1.4573829553443476
best_error: 1.457382948673095
best_error: 1.456009975216502
best_error: 1.4560099749332556
best_error: 1.4560099739565044
best_error: 1.4553682267064396
best_error: 1.4553682170042068
best_error: 1.4546380950930706
best_error: 1.4546380848236407
best_error: 1.443682529503552
best_error: 1.4436825208113349
best_error: 1.4435469488507784
best_error: 1.4435469388330555
best_error: 1.4348850405661993
best_error: 1.4348850322647646
best_error: 1.432394206949093
best_error: 1.4323942045429383
best_error: 1.4283132927533242
best_error: 1.4283132805827816
best_error: 1.4272039586293999
best_error: 1.4272039529137346
best_error: 1.4217167192594158
best_error: 1.4217167192593456
best_error: 1.4217167191556508
best_error: 1.4162044410392225
best_error: 1.4162044222039945
best_error: 1.4087825764966424
best_error: 1.408782533581433
best_error: 1.3547528379256777
best_error: 1.3547528126223845
best_error: 1.3151489702899821
best_error: 1.315148895540498
best_error: 1.2257409124969392
best_error: 1.2257408609812912
best_error: 1.2256055988575592
best_error: 1.2256055407185094
best_error: 1.221758979069201
best_error: 1.2217589762770982
best_error: 1.2217589433617806
best_error: 1.221560865213442
best_error: 1.2215608179165975
best_error: 1.2215435003017314
best_error: 1.221543451172347
best_error: 1.2190374507138753
best_error: 1.2190374194837355
best_error: 1.2126196200697807
best_error: 1.2126195808424363
best_error: 1.2125634257614422
best_error: 1.2125633812396663
best_error: 1.2101980950379378
best_error: 1.2101980790438458
best_error: 1.2085328191634794
best_error: 1.2085327821806247
best_error: 1.1833371109511794
best_error: 1.1833370322734822
best_error: 1.1789857329526092
best_error: 1.178985694426115
best_error: 1.1763958102760337
best_error: 1.1763958002026662
best_error: 1.1752318323044257
best_error: 1.175231830871015
best_error: 1.1752318259752899
best_error: 1.1736969133871005
best_error: 1.1736969094380114
best_error: 1.1717761505216489
best_error: 1.1717761495925672
best_error: 1.1592958919404983
best_error: 1.1592958904395654
best_error: 1.1592958895972316
best_error: 1.1541338974140871
best_error: 1.1541338512833017
best_error: 1.143797510723857
best_error: 1.1437975106874818
best_error: 1.1437975097505833
best_error: 1.1437975083702785
best_error: 1.1437975071947384
best_error: 1.1400766117462195
best_error: 1.1400766115610363
best_error: 1.1400766099472843
best_error: 1.1400766089212109
best_error: 1.1353533978121642
best_error: 1.1353533912896145
best_error: 1.1321590720791535
best_error: 1.1321590642370998
best_error: 1.1280421608160216
best_error: 1.1280421497768038
best_error: 1.1277359683606627
best_error: 1.1277359558295803
best_error: 1.1275979559468703
best_error: 1.1275979556410727
best_error: 1.1275979535851746
best_error: 1.1273248519889787
best_error: 1.1273248499226367
best_error: 1.1271072835736773
best_error: 1.1271072807115667
best_error: 1.126986491409052
best_error: 1.1269864900162965
best_error: 1.1266448426720725
best_error: 1.126644842671994
best_error: 1.1266448425399886
best_error: 1.1266448414002606
best_error: 1.1257503533324673
best_error: 1.1257503533324236
best_error: 1.125750353232373
best_error: 1.1257503521552403
best_error: 1.1188256203343265
best_error: 1.1188256195222075
best_error: 1.1020521655641715
best_error: 1.1020521655029099
best_error: 1.1020521650751167
best_error: 1.1020521639708827
best_error: 1.093775211019125
best_error: 1.0937752107196155
best_error: 1.0937752101764175
best_error: 1.0910429204020549
best_error: 1.0910428927858677
best_error: 1.090159835863045
best_error: 1.0901598358156788
best_error: 1.090159830283432
best_error: 1.0894641101385174
best_error: 1.089464109795034
best_error: 1.0894641095129414
best_error: 1.0891756830719515
best_error: 1.0891756808328774
best_error: 1.0890687597709117
best_error: 1.0890687577655145
best_error: 1.088940976766812
best_error: 1.0889409761739839
best_error: 1.0888202326504766
best_error: 1.0888202280154555
best_error: 1.0886966848367916
best_error: 1.088696678777233
best_error: 1.0884977658851993
best_error: 1.088497761222528
best_error: 1.0883283275054683
best_error: 1.0883283262029695
best_error: 1.0883201406384442
best_error: 1.088320140418667
best_error: 1.0883190508728025
best_error: 1.0883190508640816
best_error: 1.0883190507356466
best_error: 1.0883187601101498
best_error: 1.0883187599721855
best_error: 1.0883187599706927
best_error: 1.088318331198522
best_error: 1.0883183311518536
best_error: 1.0883183310611586
best_error: 1.0883151634464034
best_error: 1.08831516277125
best_error: 1.0883079948691863
best_error: 1.0883079940337124
best_error: 1.0883036184141053
best_error: 1.0883036167437454
best_error: 1.0882945117725844
best_error: 1.0882945090655118
best_error: 1.0882488084075406
best_error: 1.0882488049518801
best_error: 1.0881512305303056
best_error: 1.0881512245181637
best_error: 1.0880069579336173
best_error: 1.0880069503928689
best_error: 1.0875086213683227
best_error: 1.0875086074175313
best_error: 1.0871835022192105
best_error: 1.0871834930340483
best_error: 1.086878693981772
best_error: 1.086878692786466
best_error: 1.0868596807591642
best_error: 1.086859679824629
best_error: 1.086812798088754
best_error: 1.0868127961593905
best_error: 1.0868037724934134
best_error: 1.086803772068195
best_error: 1.0868000987333941
best_error: 1.0868000986124005
best_error: 1.086800098507802
best_error: 1.0867993227238968
best_error: 1.0867993219356054
best_error: 1.0867977637498956
best_error: 1.08679776318235
best_error: 1.0867975290969638
best_error: 1.0867975287595875
best_error: 1.0867964261021983
best_error: 1.0867964260674738
best_error: 1.086795990753461
best_error: 1.0867959907171842
best_error: 1.086795737509593
best_error: 1.086795737507146
best_error: 1.0867957374971369
best_error: 1.0867953157445478
best_error: 1.086795315369055
best_error: 1.0867952316281653
best_error: 1.0867952315947376
best_error: 1.0867951724729807
best_error: 1.086795172424391
best_error: 1.0867951334913848
best_error: 1.0867951334332653
best_error: 1.0867951153103421
best_error: 1.0867951152502364
