ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.21108596051934
best_error: 21.211085111292437
best_error: 5.0793865164788174
best_error: 5.0793865163325345
best_error: 5.079384140065658
best_error: 5.079384140063947
best_error: 5.079384140059439
best_error: 5.079374631336873
best_error: 5.07937463133516
best_error: 5.079374631330652
best_error: 5.079336547124706
best_error: 5.079336547122987
best_error: 5.079336547118479
best_error: 5.0791834164447796
best_error: 5.079183416443032
best_error: 5.079183416438522
best_error: 5.078557857128979
best_error: 5.078557857127107
best_error: 5.078557857122601
best_error: 5.075822550322565
best_error: 5.075822550320011
best_error: 5.075822550315621
best_error: 5.057904021065706
best_error: 5.057904021042518
best_error: 5.047450042014753
best_error: 5.047450041939694
best_error: 5.033657305122689
best_error: 5.033657304866059
best_error: 4.317001848476208
best_error: 4.317001777065618
best_error: 4.2198669438114065
best_error: 4.219866857733656
best_error: 4.126547596918717
best_error: 4.126547490938802
best_error: 3.9106026501312634
best_error: 3.910602494273839
best_error: 3.7708230848790856
best_error: 3.7708229020720574
best_error: 3.7473966495843145
best_error: 3.747396527753918
best_error: 3.720681316391732
best_error: 3.7206812725708636
best_error: 3.7122830210337985
best_error: 3.7122828618173043
best_error: 3.651349807840071
best_error: 3.6513496801171255
best_error: 3.5706064123378995
best_error: 3.5706062958386244
best_error: 3.523936782418622
best_error: 3.5239367279221097
best_error: 3.522169095883232
best_error: 3.5221688563868865
best_error: 3.5058362086630064
best_error: 3.505836172224358
best_error: 3.499855480939323
best_error: 3.499855459530175
best_error: 3.498414142039455
best_error: 3.498414131005552
best_error: 3.4974606076341757
best_error: 3.4974605977994906
best_error: 3.495164894061943
best_error: 3.4951648482026507
best_error: 3.4894763315091053
best_error: 3.4894762533366266
best_error: 3.4664550423405753
best_error: 3.4664549108767697
best_error: 3.2977344493063243
best_error: 3.297734321159971
best_error: 2.6365941925964615
best_error: 2.6365939149555233
best_error: 2.5114586749461365
best_error: 2.5114583396124517
best_error: 2.408829958854756
best_error: 2.4088298802690074
best_error: 2.408829850772561
best_error: 2.383208384520303
best_error: 2.3832080688016513
best_error: 2.219030349675233
best_error: 2.2190303250639154
best_error: 2.219030232422147
best_error: 2.1942578474380667
best_error: 2.1942577419545874
best_error: 2.1684872655075362
best_error: 2.1684872283456076
best_error: 2.1626360786433714
best_error: 2.162636075263044
best_error: 2.1626360741360737
best_error: 2.153868308553904
best_error: 2.1538682687421544
best_error: 2.1535652034228274
best_error: 2.1535651832182503
best_error: 2.1531241343602456
best_error: 2.153124129652613
best_error: 2.1530829810021506
best_error: 2.1530829804840854
best_error: 2.153082980190725
best_error: 2.153082977652755
best_error: 2.153019614796012
best_error: 2.153019611475415
best_error: 2.153019611421233
best_error: 2.152921451743404
best_error: 2.1529214433479504
best_error: 2.1527790533999176
best_error: 2.152779043477254
best_error: 2.1522717564298546
best_error: 2.152271740390302
best_error: 2.1489082302872835
best_error: 2.148908191804784
best_error: 2.1418255608707057
best_error: 2.1418255111477427
best_error: 2.1249848698370637
best_error: 2.1249848681084127
best_error: 2.1249848674199843
best_error: 2.1161841188836576
best_error: 2.116184085820178
best_error: 2.1068563149297814
best_error: 2.1068562548788403
best_error: 2.1035962991233594
best_error: 2.1035962637568377
best_error: 2.1021553304577085
best_error: 2.102155325797294
best_error: 2.101787664484549
best_error: 2.10178766389697
best_error: 2.1016037547967064
best_error: 2.10160374427239
best_error: 2.1014246765706446
best_error: 2.10142466755875
best_error: 2.1012485253625
best_error: 2.1012485116809185
best_error: 2.101200360454677
best_error: 2.101200356378796
best_error: 2.101191857865189
best_error: 2.1011918570516697
best_error: 2.101183944535382
best_error: 2.101183942768301
best_error: 2.1011782400911754
best_error: 2.1011782380054576
best_error: 2.1011728300183865
best_error: 2.10117282774863
best_error: 2.101168789164463
best_error: 2.101168788964791
best_error: 2.101168788538423
best_error: 2.101163686655716
best_error: 2.101163686153291
best_error: 2.1011636860339875
best_error: 2.1011372167809963
best_error: 2.101137212218968
best_error: 2.1011073262949256
best_error: 2.101107320996741
best_error: 2.1007475980413632
best_error: 2.1007475889725624
best_error: 2.0997876238168307
best_error: 2.0997876112652043
best_error: 2.0987422245092318
best_error: 2.098742215426613
best_error: 2.0986579621701433
best_error: 2.0986579504680334
best_error: 2.098596473438547
best_error: 2.0985964597075113
best_error: 2.0985489549322898
best_error: 2.098548939089813
best_error: 2.0985175801944664
best_error: 2.098517563150766
best_error: 2.0984939576970714
best_error: 2.0984939395776507
best_error: 2.0984756524285637
best_error: 2.0984756327888947
best_error: 2.098462537914527
best_error: 2.0984625173048683
best_error: 2.0984518382902073
best_error: 2.0984518165856776
best_error: 2.0984385145394877
best_error: 2.0984384925989934
best_error: 2.098384351287217
best_error: 2.09838432424893
best_error: 2.0983617898535214
best_error: 2.098361762038243
best_error: 2.0976690831402833
best_error: 2.097669070805977
best_error: 2.097511989492175
best_error: 2.0975119725552673
best_error: 2.0974352727088
best_error: 2.0974352691889253
best_error: 2.0974352673080667
best_error: 2.097310836287099
best_error: 2.0973108266327904
best_error: 2.096851045868554
best_error: 2.0968510264455062
best_error: 2.0954846978322395
best_error: 2.095484664924838
best_error: 2.0943235292457345
best_error: 2.0943235007679304
best_error: 2.0940645934292736
best_error: 2.094064570630372
best_error: 2.093438699380308
best_error: 2.0934386955967015
best_error: 2.0934384353145417
best_error: 2.093438434344593
best_error: 2.09343843407534
best_error: 2.093436613866319
best_error: 2.093436608807181
best_error: 2.0933398752750083
best_error: 2.0933398548671382
best_error: 2.0932153731406307
best_error: 2.093215360611906
best_error: 2.09282460610655
best_error: 2.092824604719209
best_error: 2.092175219328345
best_error: 2.0921752160436666
best_error: 2.0914132268802543
best_error: 2.0914132253618787
best_error: 2.0891302104970695
best_error: 2.0891302039638204
best_error: 2.0890675140137756
best_error: 2.0890675134001024
best_error: 2.089016397097541
best_error: 2.0890163962385744
best_error: 2.088103000386192
best_error: 2.0881029844514067
best_error: 2.0874543285312934
best_error: 2.087454305048887
best_error: 2.0872621517880874
best_error: 2.0872621102825506
best_error: 2.0869104189682632
best_error: 2.0869103758332996
best_error: 2.0864707748300724
best_error: 2.086470774531344
best_error: 2.0864707690171684
best_error: 2.086431727354651
best_error: 2.0864317245743917
best_error: 2.086426390536066
best_error: 2.0864263890274857
best_error: 2.086425892380813
best_error: 2.0864258906207174
best_error: 2.086424192539567
best_error: 2.0864241918660156
best_error: 2.086422099284285
best_error: 2.086422098247971
best_error: 2.086418918330986
best_error: 2.086418916585063
best_error: 2.0864076983035775
best_error: 2.086407695997327
best_error: 2.0864011214998777
best_error: 2.0864011210075915
best_error: 2.0863894240851004
best_error: 2.0863894236260485
best_error: 2.086380069550847
best_error: 2.0863800688234346
best_error: 2.0863717432457025
best_error: 2.0863717430486557
best_error: 2.086371743031887
best_error: 2.086366352153565
best_error: 2.0863663510712236
best_error: 2.08631604016988
best_error: 2.0863160304802877
best_error: 2.086222481049182
best_error: 2.086222466188249
