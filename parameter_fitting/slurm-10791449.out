ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.959190788670758
best_error: 10.959190787301898
best_error: 10.771959198846272
best_error: 10.771959192354227
best_error: 10.013765840880641
best_error: 10.013765781096527
best_error: 5.160771852009511
best_error: 5.160771382610982
best_error: 3.9559901835533915
best_error: 3.955989897435436
best_error: 3.9533534390910035
best_error: 3.953353153120168
best_error: 3.819849321025358
best_error: 3.8198493107831717
best_error: 3.784368421236336
best_error: 3.784368420462158
best_error: 3.784368408980395
best_error: 3.7436819955937715
best_error: 3.7436819947587994
best_error: 3.7436819844187648
best_error: 3.608725105321097
best_error: 3.608724992438938
best_error: 3.5541577452158584
best_error: 3.5541575993661843
best_error: 3.4913646127450826
best_error: 3.4913644671924438
best_error: 3.460643787513497
best_error: 3.460643726738168
best_error: 3.4290213359739936
best_error: 3.429021334893347
best_error: 3.4290213332971797
best_error: 3.4186651999365574
best_error: 3.4186651854321704
best_error: 3.4186651128159844
best_error: 3.388481740129636
best_error: 3.388481735361185
best_error: 3.388481723662251
best_error: 3.381946985432356
best_error: 3.3819469769647283
best_error: 3.375566132202222
best_error: 3.3755661200202383
best_error: 3.3686354129565856
best_error: 3.368635397101383
best_error: 3.323283120751236
best_error: 3.3232830991190574
best_error: 3.2025554718283686
best_error: 3.202555426937984
best_error: 3.2025553546359133
best_error: 3.097493684106895
best_error: 3.0974936834325626
best_error: 3.0971779339495784
best_error: 3.0971779333001868
best_error: 3.097063655149283
best_error: 3.097063654503805
best_error: 3.0970297204394575
best_error: 3.097029716447654
best_error: 3.097029650731198
best_error: 3.097024706662423
best_error: 3.097024706017849
best_error: 3.0968688233083976
best_error: 3.096868822694643
best_error: 3.0956502080402517
best_error: 3.095650206050447
best_error: 3.0956501319192165
best_error: 3.094374106045472
best_error: 3.0943741033135845
best_error: 3.094374028107321
best_error: 3.0925372286040256
best_error: 3.0925372219541436
best_error: 3.0925371555938144
best_error: 3.0922008422419185
best_error: 3.0922008356569983
best_error: 3.092200766663727
best_error: 3.0919796861105633
best_error: 3.091979679688559
best_error: 3.0919796091077614
best_error: 3.0912302558474467
best_error: 3.0912302493007338
best_error: 3.091230176653687
best_error: 3.0900058781108486
best_error: 3.090005872493692
best_error: 3.0880755109667963
best_error: 3.088075503867759
best_error: 3.08807542684987
best_error: 3.086249370999127
best_error: 3.086249370622556
best_error: 3.085843361983911
best_error: 3.085843361773982
best_error: 3.085808310013162
best_error: 3.085808309974714
best_error: 3.085808309725967
best_error: 3.085671697352054
best_error: 3.0856716971069647
best_error: 3.0855693160229776
best_error: 3.085569315805726
best_error: 3.085528252705804
best_error: 3.085528252487132
best_error: 3.085517964429408
best_error: 3.085517964208879
best_error: 3.0855108946898744
best_error: 3.0855108944690994
best_error: 3.0855077728159
best_error: 3.0855077725950175
best_error: 3.0855063576090482
best_error: 3.085506357388115
best_error: 3.085505390471609
best_error: 3.0855053902506406
best_error: 3.085504498906645
best_error: 3.0855044986856335
best_error: 3.0855040396783826
best_error: 3.0855040394573545
best_error: 3.085503498809792
best_error: 3.0855034985887424
best_error: 3.0855033050646146
best_error: 3.0855033048435687
best_error: 3.0855031946392915
best_error: 3.085503194418235
best_error: 3.0855030987947685
best_error: 3.085503098573708
best_error: 3.0855030468349054
best_error: 3.085503046613847
best_error: 3.085502987463107
best_error: 3.085502987242046
best_error: 3.0855029647939745
best_error: 3.0855029645729095
best_error: 3.085502951484856
best_error: 3.0855029512637935
best_error: 3.0855029473241107
best_error: 3.085502937003631
best_error: 3.085502936782561
best_error: 3.0855029309684228
best_error: 3.0855029307473614
best_error: 3.08550291557858
best_error: 3.0855029133209784
