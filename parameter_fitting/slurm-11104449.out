ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 66
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 107.64781793473028
best_error: 107.64781766023894
best_error: 20.557508924521677
best_error: 20.557508924520832
best_error: 20.557508922991545
best_error: 20.557422454006925
best_error: 20.55742245247439
best_error: 20.557075213026565
best_error: 20.55707521148437
best_error: 20.555664111921853
best_error: 20.555664110340032
best_error: 20.549638274355516
best_error: 20.549638272597367
best_error: 20.516978445748347
best_error: 20.516978442835793
best_error: 16.703819516929727
best_error: 16.703819041315487
best_error: 14.185514723099907
best_error: 14.185514688471995
best_error: 14.023966048173781
best_error: 14.023966046765022
best_error: 14.023966017887883
best_error: 14.023025648877958
best_error: 14.023025647474572
best_error: 14.023025618486272
best_error: 14.022714870167466
best_error: 14.02271486876586
best_error: 14.022714839740821
best_error: 14.022622358281783
best_error: 14.02262235688071
best_error: 14.022622327844731
best_error: 14.022621346347155
best_error: 14.022621320517539
best_error: 14.02260922989667
best_error: 14.022609228495671
best_error: 14.022609199458138
best_error: 14.022600989812993
best_error: 14.02260098841204
best_error: 14.022600959373534
best_error: 14.02260064613072
best_error: 14.022600620301354
best_error: 14.013797315800463
best_error: 14.013797314516246
best_error: 14.013797283769776
best_error: 13.978754168437197
best_error: 13.97875416757377
best_error: 13.978754131023337
best_error: 13.976992892823837
best_error: 13.976992809038677
best_error: 13.972440180953239
best_error: 13.972440179836768
best_error: 13.972440141608661
best_error: 13.971678707123452
best_error: 13.97167870601707
best_error: 13.971678667665417
best_error: 13.968778236580846
best_error: 13.968778235314993
best_error: 13.9687782000832
best_error: 13.967923159069077
best_error: 13.967923134175823
best_error: 13.965611297718597
best_error: 13.965611295649712
best_error: 13.965611272452174
best_error: 13.961246949872425
best_error: 13.961246946923268
best_error: 13.961246938833783
best_error: 13.94545733366529
best_error: 13.945457329791935
best_error: 13.945457326858307
best_error: 13.937747697585987
best_error: 13.937747690981766
best_error: 13.937747690584725
best_error: 13.928092992302203
best_error: 13.928092985473555
best_error: 13.928092985123921
best_error: 13.926055443243442
best_error: 13.926055436433966
best_error: 13.926055436059862
best_error: 13.917893905263288
best_error: 13.917893898549824
best_error: 13.917893898058402
best_error: 13.88518029753523
best_error: 13.885180290792174
best_error: 13.885180290243529
best_error: 13.798536270345178
best_error: 13.798536264408432
best_error: 13.798536262811112
best_error: 13.79653714557956
best_error: 13.796537139705748
best_error: 13.79653713805412
best_error: 13.788685883902037
best_error: 13.788685878471478
best_error: 13.78868587641092
best_error: 13.760261733612008
best_error: 13.760261730325105
best_error: 13.760261729248958
best_error: 13.76026172625673
best_error: 13.755762208500968
best_error: 13.755761878376621
best_error: 13.7295339249742
best_error: 13.729533915990384
best_error: 13.661415310992268
best_error: 13.66141530352858
best_error: 13.661415303065233
best_error: 12.896697889563892
best_error: 12.89669788247665
best_error: 12.896697701593508
best_error: 12.849713214509237
best_error: 12.84971321194639
best_error: 12.849713106916342
best_error: 12.825940578922392
best_error: 12.82594057836793
best_error: 12.825940577102607
best_error: 12.825884621906507
best_error: 12.825884621360657
best_error: 12.825884620087926
best_error: 12.825687826335056
best_error: 12.825687825684275
best_error: 12.825687824556947
best_error: 12.82560317870605
best_error: 12.825603173563856
best_error: 12.825599044965962
best_error: 12.825599043566502
best_error: 12.82559904340674
best_error: 12.825487038144367
best_error: 12.825487038119162
best_error: 12.825487036748157
best_error: 12.825487036586198
best_error: 12.825098285567673
best_error: 12.82509827931213
best_error: 12.82443963461316
best_error: 12.824439627715513
best_error: 12.821774613248998
best_error: 12.821774606802663
best_error: 12.821702154706482
best_error: 12.821702148570687
best_error: 12.821466774409576
best_error: 12.821466771811341
best_error: 12.82139319578728
best_error: 12.821300442206326
best_error: 12.821300441522954
best_error: 12.821281623713945
best_error: 12.821281623017143
best_error: 12.821277589700939
best_error: 12.821275683655188
best_error: 12.821275682954129
best_error: 12.821275680710304
