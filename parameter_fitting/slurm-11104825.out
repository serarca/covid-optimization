ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 96
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 95.36969597928803
best_error: 95.36969548975443
best_error: 27.17012602047233
best_error: 27.17012602046944
best_error: 27.17012602040593
best_error: 27.170126019510967
best_error: 27.17009773356655
best_error: 27.17009773356366
best_error: 27.169984507012277
best_error: 27.169984507009392
best_error: 27.169530333925362
best_error: 27.16953033392536
best_error: 27.169530333922467
best_error: 27.167693114337126
best_error: 27.167693114334206
best_error: 27.159998475159178
best_error: 27.159998475159163
best_error: 27.159998475156147
best_error: 27.122308694360665
best_error: 27.122308694357084
best_error: 26.650887434616283
best_error: 26.650887434614923
best_error: 26.650887434605785
best_error: 26.65088722992557
best_error: 26.65088722992421
best_error: 26.650887229915067
best_error: 26.650886411117575
best_error: 26.65088641111622
best_error: 26.650886411107074
best_error: 26.65088313516359
best_error: 26.650883135162232
best_error: 26.650883135153087
best_error: 26.65087001978197
best_error: 26.65087001978059
best_error: 26.65087001977147
best_error: 26.650817372355505
best_error: 26.65081737235411
best_error: 26.650817372345006
best_error: 26.650603752848447
best_error: 26.650603752846926
best_error: 26.650603752837945
best_error: 26.649696950847165
best_error: 26.649696950845126
best_error: 26.64969695083667
best_error: 26.644873350211203
best_error: 26.644873350206833
best_error: 26.64487335020072
best_error: 26.618655050660802
best_error: 26.618655050649902
best_error: 26.618655044927422
best_error: 26.61865504491653
best_error: 26.618655021992808
best_error: 26.618655021981926
best_error: 26.618654930237398
best_error: 26.618654930226494
best_error: 26.618654562943313
best_error: 26.6186545629324
best_error: 26.618653089397185
best_error: 26.618653089386175
best_error: 26.618647124593057
best_error: 26.61864712458153
best_error: 26.618622089277025
best_error: 26.61862208926358
best_error: 26.618499854244327
best_error: 26.61849985422119
best_error: 26.617331370668097
best_error: 26.61733137054991
best_error: 25.796375130728435
best_error: 25.796375107443303
best_error: 25.496417904065762
best_error: 25.496417903815065
best_error: 25.496387644216266
best_error: 25.496387644080052
best_error: 25.49637352523764
best_error: 25.496373525237527
best_error: 25.496366895610667
best_error: 25.49636689561056
best_error: 25.49636236842038
best_error: 25.496362367720735
best_error: 25.49635278584841
best_error: 25.49635278440852
best_error: 25.496317428165614
best_error: 25.49631742771527
best_error: 25.49631742112242
best_error: 25.495860349541797
best_error: 25.495860349082236
best_error: 25.49586034239806
best_error: 25.494023033610052
best_error: 25.49402303320904
best_error: 25.49402302719376
best_error: 25.4863870585877
best_error: 25.486387058001082
best_error: 25.486387050147144
best_error: 25.455078760739575
best_error: 25.455078758123502
best_error: 25.45507873114812
best_error: 25.449109400702277
best_error: 25.449109392674625
best_error: 25.44910935394285
best_error: 25.449109320153358
best_error: 25.44620248214242
best_error: 25.446202478021455
best_error: 25.446202471763883
best_error: 25.446202437928175
best_error: 25.381828274588475
best_error: 25.38182827292124
best_error: 25.375459545553845
best_error: 25.37545954506036
best_error: 25.375459544488834
best_error: 25.375459541236978
best_error: 25.3752219653907
best_error: 25.375221964882414
best_error: 25.375221964385947
best_error: 25.375221960870093
best_error: 25.3748721861047
best_error: 25.374872185061673
best_error: 25.374872176718995
best_error: 25.374373411618333
best_error: 25.37437341059396
best_error: 25.374373402277698
best_error: 25.372758960858654
best_error: 25.37275895990397
best_error: 25.37275895169924
best_error: 25.370396369577985
best_error: 25.370396369315237
best_error: 25.370201074445124
best_error: 25.37020107426359
best_error: 25.370016816160554
best_error: 25.37001681603936
best_error: 25.369668319291694
best_error: 25.369668319130703
best_error: 25.36966831626126
best_error: 25.369285930367454
best_error: 25.36928593036601
best_error: 25.367872290469464
best_error: 25.367872290163803
best_error: 25.367872286628064
best_error: 25.367432050253523
best_error: 25.36743204852968
best_error: 25.367432035795435
best_error: 25.36637461225513
best_error: 25.366374611754374
best_error: 25.366374607508217
best_error: 25.366199815191273
best_error: 25.36619981401996
best_error: 25.366199805505293
best_error: 25.36563474113898
best_error: 25.365634739834093
best_error: 25.365634731165798
best_error: 25.365209503657876
best_error: 25.365209502964255
best_error: 25.36520949823273
best_error: 25.364898216829182
best_error: 25.364898216047045
best_error: 25.364898211108777
best_error: 25.364246742501912
best_error: 25.364246741584097
best_error: 25.364246736270136
best_error: 25.36385631315038
best_error: 25.363856313045034
best_error: 25.363842243590856
best_error: 25.36384224355196
best_error: 25.363841241854672
best_error: 25.363841241814008
best_error: 25.363841233219183
best_error: 25.363841233193167
best_error: 25.363841051774845
best_error: 25.36384105173384
best_error: 25.363840957370073
best_error: 25.36384095734422
best_error: 25.363840946978378
best_error: 25.36384094693722
