ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.93118508545428
best_error: 21.931184306019563
best_error: 5.003212333516131
best_error: 5.003212333123803
best_error: 5.003193762218458
best_error: 5.003193762215531
best_error: 5.0031937622131695
best_error: 5.0031194048882295
best_error: 5.00311940488529
best_error: 5.003119404882935
best_error: 5.002820815655893
best_error: 5.002820815652899
best_error: 5.0028208156505745
best_error: 5.001607527859157
best_error: 5.001607527855938
best_error: 5.001607527853738
best_error: 4.996425130894628
best_error: 4.996425130890225
best_error: 4.996425130888755
best_error: 4.967615622461997
best_error: 4.967615622436428
best_error: 4.945118230628344
best_error: 4.9451182305388475
best_error: 4.916308429303448
best_error: 4.916308428978182
best_error: 4.236471186266318
best_error: 4.236471131198683
best_error: 4.230349071935721
best_error: 4.230349014335886
best_error: 4.226222747369814
best_error: 4.226222741304378
best_error: 4.226222682978033
best_error: 4.225354925509071
best_error: 4.2253548674695125
best_error: 4.096496629637415
best_error: 4.096496539586235
best_error: 4.013512447329508
best_error: 4.013512445825981
best_error: 4.01351234046932
best_error: 3.9631378298758357
best_error: 3.9631378249306293
best_error: 3.9631377120168128
best_error: 3.9445925867831746
best_error: 3.9445925301834364
best_error: 3.919754210665545
best_error: 3.91975412704718
best_error: 3.7543381665575914
best_error: 3.7543380215552156
best_error: 3.563587187507552
best_error: 3.5635870108653314
best_error: 3.527143794968447
best_error: 3.5271437601214175
best_error: 3.496228709706765
best_error: 3.4962285270503854
best_error: 3.4034918478350558
best_error: 3.403491831073018
best_error: 3.400297123219252
best_error: 3.400297080227028
best_error: 3.397743910843342
best_error: 3.3977438949597727
best_error: 3.397536104887933
best_error: 3.397536098800154
best_error: 3.397498407553273
best_error: 3.3974984043700767
best_error: 3.397387947570749
best_error: 3.397387946800413
best_error: 3.397387945526732
best_error: 3.397223582493545
best_error: 3.3972235723233966
best_error: 3.3967371101246213
best_error: 3.3967370951578304
best_error: 3.3945066387032705
best_error: 3.394506602449639
best_error: 3.389183891450716
best_error: 3.389183816245762
best_error: 3.3785386312901733
best_error: 3.3785385239124577
best_error: 3.2650494898390865
best_error: 3.265049251305952
best_error: 3.1348331746661904
best_error: 3.1348329091199996
best_error: 3.1008942688456984
best_error: 3.100893992877599
best_error: 3.0881038753508814
best_error: 3.0881036378870816
best_error: 2.966206890908198
best_error: 2.966206822791485
best_error: 2.8767258268734417
best_error: 2.87672561761959
best_error: 2.838279711830678
best_error: 2.838279647712808
best_error: 2.7839483512868304
best_error: 2.783948340820004
best_error: 2.5549413244643713
best_error: 2.5549412355751224
best_error: 2.471504045105228
best_error: 2.471504006261892
best_error: 2.4425284212722986
best_error: 2.442528376337577
best_error: 2.4132804320773427
best_error: 2.413280384552108
best_error: 2.3996073712362507
best_error: 2.3996073215687317
best_error: 2.3933933088717962
best_error: 2.3933932715659085
best_error: 2.3828038192290557
best_error: 2.382803761464775
best_error: 2.3387106161340627
best_error: 2.338710590055362
best_error: 2.323671439895487
best_error: 2.323671390705333
best_error: 2.3178217192947876
best_error: 2.317821702684851
best_error: 2.3145411701644503
best_error: 2.31454116900384
best_error: 2.3145411658223654
best_error: 2.31340014773211
best_error: 2.313400133639531
best_error: 2.3127223814698277
best_error: 2.3127223686695144
best_error: 2.3119140922687236
best_error: 2.311914083295109
best_error: 2.3100944252999227
best_error: 2.31009442164473
best_error: 2.310094421355506
best_error: 2.3100944206402407
best_error: 2.304667043266653
best_error: 2.304667019088547
best_error: 2.285233794546691
best_error: 2.2852337396943923
best_error: 2.2282687406165347
best_error: 2.228268582498323
best_error: 2.1721554783411223
best_error: 2.1721554400307994
best_error: 2.1269070082223642
best_error: 2.126906967713985
best_error: 2.1113767585410854
best_error: 2.1113767574683875
best_error: 2.1113767572503903
best_error: 2.109006207437086
best_error: 2.1090061927719144
best_error: 2.10852575713451
best_error: 2.1085257439369345
best_error: 2.108489805636776
best_error: 2.108489805435985
best_error: 2.1084898054200227
best_error: 2.108489804694903
best_error: 2.1082828884507334
best_error: 2.1082828870298296
best_error: 2.1081680323206315
best_error: 2.10816802799507
best_error: 2.107867331213516
best_error: 2.107867322067846
best_error: 2.1075541331840637
best_error: 2.1075541330365293
best_error: 2.1075541233380815
best_error: 2.107498402053699
best_error: 2.107498382339447
best_error: 2.106958556957954
best_error: 2.1069585384757183
best_error: 2.1059208173484496
best_error: 2.1059208070188906
best_error: 2.1054272464357777
best_error: 2.105427235305628
best_error: 2.1046522086523463
best_error: 2.1046522027683054
best_error: 2.104450458442728
best_error: 2.1044504550444687
best_error: 2.1041852398128853
best_error: 2.1041852397210006
best_error: 2.1041852349031935
best_error: 2.103542872115326
best_error: 2.103542868535241
best_error: 2.103282632656159
best_error: 2.1032826232295774
best_error: 2.102170796473868
best_error: 2.1021707962050526
best_error: 2.1021707961360563
best_error: 2.102170795718267
best_error: 2.1020119899427114
best_error: 2.102011989810858
best_error: 2.1020119895592972
best_error: 2.102011989159008
best_error: 2.1019758598729528
best_error: 2.101975850254573
best_error: 2.101750434228288
best_error: 2.1017504303143455
best_error: 2.1017444128260987
best_error: 2.1017444126946567
best_error: 2.1017444113496047
best_error: 2.1017388176825325
best_error: 2.101738816943905
best_error: 2.101738816888815
best_error: 2.101731080595938
best_error: 2.1017310799032494
best_error: 2.101731079802938
best_error: 2.101703335388704
best_error: 2.1017033345440703
best_error: 2.101698877030616
best_error: 2.1016988750461394
best_error: 2.1016822572068743
best_error: 2.1016822543826748
best_error: 2.100698184378939
best_error: 2.100698168045709
best_error: 2.100268687509622
best_error: 2.1002686821981826
best_error: 2.0995643330647935
best_error: 2.099564325066548
best_error: 2.099153224547888
best_error: 2.099153215482328
best_error: 2.0980559546874518
best_error: 2.0980559545741686
best_error: 2.0980559532898826
best_error: 2.097597751486955
best_error: 2.0975977404330233
best_error: 2.09667307488229
best_error: 2.0966730507093727
best_error: 2.092590599793046
best_error: 2.0925905893867203
best_error: 2.0921283580299983
best_error: 2.092128343049977
best_error: 2.0907416458372103
best_error: 2.0907416264588354
best_error: 2.090443259898209
best_error: 2.090443230378081
best_error: 2.089590089102469
best_error: 2.0895900778483996
best_error: 2.089273362707288
best_error: 2.0892733593917527
best_error: 2.088872116020579
best_error: 2.088872102448054
best_error: 2.0882852658219466
best_error: 2.088285240411053
best_error: 2.088011126456506
best_error: 2.0880111052036447
best_error: 2.087426758845194
best_error: 2.0874267551917725
best_error: 2.0872365121959855
best_error: 2.087236511190398
best_error: 2.0867707090109233
best_error: 2.0867707013973473
best_error: 2.0865931772156747
best_error: 2.0865931670369866
best_error: 2.0860021515555487
best_error: 2.0860021359784593
best_error: 2.08499253470025
best_error: 2.084992522201182
best_error: 2.0840620201178597
best_error: 2.0840620023002674
best_error: 2.0810669652083753
best_error: 2.081066940154501
best_error: 2.078707038204028
best_error: 2.07870699864395
best_error: 2.077124408323681
best_error: 2.077124375945746
best_error: 2.074653807631224
best_error: 2.0746537789219435
best_error: 2.0667846395790606
best_error: 2.0667846373265992
best_error: 2.0663339308596105
best_error: 2.0663339134467678
best_error: 2.0661134770794636
best_error: 2.066113432188625
best_error: 2.065399377352834
best_error: 2.0653993546484846
best_error: 2.0647328238209814
best_error: 2.064732823788349
best_error: 2.0647328236192495
best_error: 2.064732823164765
best_error: 2.0647328229635353
best_error: 2.0634712359231524
best_error: 2.0634712008636242
best_error: 2.063050675009788
best_error: 2.063050645362751
best_error: 2.061489444911021
best_error: 2.061489428372512
