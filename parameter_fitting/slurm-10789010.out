ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.06754775008146
best_error: 10.067547730284593
best_error: 9.734368947882277
best_error: 9.734368909730913
best_error: 6.147094755226293
best_error: 6.147094419215842
best_error: 4.585016638458631
best_error: 4.5850163704677716
best_error: 4.4258057199030425
best_error: 4.425805690760623
best_error: 4.4258055432966295
best_error: 4.41181600000165
best_error: 4.411815956146106
best_error: 4.4118158470900415
best_error: 4.393551237960754
best_error: 4.393551181806066
best_error: 4.393551102729159
best_error: 4.154859306650141
best_error: 4.1548592497816985
best_error: 4.154859189484661
best_error: 4.018879418886217
best_error: 4.018879362736908
best_error: 4.0188793050711595
best_error: 3.9319585939809683
best_error: 3.931958536192156
best_error: 3.9319584886669503
best_error: 3.824690002175716
best_error: 3.8246899464931547
best_error: 3.8246898945559376
best_error: 3.7945085285507947
best_error: 3.7945084732242775
best_error: 3.794508418539235
best_error: 3.785098314699079
best_error: 3.785098259450243
best_error: 3.7850982036308833
best_error: 3.779171371020253
best_error: 3.779171315820509
best_error: 3.779171259287715
best_error: 3.7764417728620057
best_error: 3.776441718544552
best_error: 3.776441660823485
best_error: 3.7748313793999015
best_error: 3.774831325094916
best_error: 3.7748312671795623
best_error: 3.7745251994864653
best_error: 3.774525057170831
best_error: 3.7744899928810227
best_error: 3.7744899385786694
best_error: 3.774489880622146
best_error: 3.773970312791662
best_error: 3.7739702584933337
best_error: 3.773970200474131
best_error: 3.773919595903701
best_error: 3.7739195416057756
best_error: 3.7739194835804364
best_error: 3.7738863572621524
best_error: 3.7738863029644767
best_error: 3.773886244935146
best_error: 3.773873754165305
best_error: 3.773873699867724
best_error: 3.773873641836871
best_error: 3.773865475239485
best_error: 3.7738654209419895
best_error: 3.7738653629101266
best_error: 3.7738617491959205
best_error: 3.7738616948984456
best_error: 3.7738616368661377
best_error: 3.773858989096553
best_error: 3.773858934799099
best_error: 3.7738588767664534
best_error: 3.773858866168145
best_error: 3.773858706943897
best_error: 3.7738586526464397
best_error: 3.4460465099898134
best_error: 3.446046320457418
best_error: 3.441047470166576
best_error: 3.44104726239927
best_error: 3.4132398390785594
best_error: 3.4132396303232895
best_error: 3.2991316082112334
best_error: 3.299131397341273
best_error: 3.0831922244175387
best_error: 3.083192008706617
best_error: 3.03763350518084
best_error: 3.0376332870002614
best_error: 2.99924218830267
best_error: 2.99924206156236
best_error: 2.978717704134791
best_error: 2.9787174036089823
best_error: 2.9535790496182583
best_error: 2.9535787115191248
best_error: 2.790557869999675
best_error: 2.7905578088347838
best_error: 2.790557792399907
best_error: 2.7805361487161
best_error: 2.780535684383418
best_error: 2.7731471142665134
best_error: 2.7731470503165885
best_error: 2.7720589301411867
best_error: 2.77205846593905
best_error: 2.7470490983459075
best_error: 2.7470486911850993
best_error: 2.74698100849463
best_error: 2.746980922828717
best_error: 2.7467826981570767
best_error: 2.746782608428572
best_error: 2.724603375512565
best_error: 2.724602968608655
best_error: 2.7237353642526294
best_error: 2.7237349601397725
best_error: 2.716653133577978
best_error: 2.716652744570489
best_error: 2.7040394761021105
best_error: 2.7040391059992084
best_error: 2.6985094475878
best_error: 2.6985090796126032
best_error: 2.6951010085450076
best_error: 2.6951006427193724
best_error: 2.692148679277623
best_error: 2.6921485828370977
best_error: 2.6907520388096144
best_error: 2.6907516727764063
best_error: 2.690304151540696
best_error: 2.690303785480045
best_error: 2.690118795764188
best_error: 2.690118429692223
best_error: 2.689943971247464
best_error: 2.689943605146998
best_error: 2.689912994419202
best_error: 2.689912628313688
best_error: 2.6898953033340245
best_error: 2.6898949372256276
best_error: 2.689886392973205
best_error: 2.6898860268633475
best_error: 2.689880506181013
best_error: 2.689880140070194
best_error: 2.6898779072423817
best_error: 2.6898775411311506
best_error: 2.6898760053904596
best_error: 2.6898756392789176
best_error: 2.6898754238758804
best_error: 2.689875423476145
best_error: 2.689875421396514
best_error: 2.689875420007219
best_error: 2.6898754194938803
best_error: 2.689875418104569
best_error: 2.689875415700265
best_error: 2.689875414310941
best_error: 2.689875414214959
best_error: 2.689875412085299
best_error: 2.6898754116538424
best_error: 2.6898754107639826
best_error: 2.6898754106584586
best_error: 2.6898754105731344
best_error: 2.6898754105287974
