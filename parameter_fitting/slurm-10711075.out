ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.22375156233464
best_error: 12.223751346993396
best_error: 11.575751851542924
best_error: 11.575751776974084
best_error: 10.709725720392601
best_error: 10.709725581276714
best_error: 10.256790817532377
best_error: 10.256790634040257
best_error: 9.895690767878307
best_error: 9.895690560891904
best_error: 9.250002170296842
best_error: 9.250002038698858
best_error: 9.214974426831251
best_error: 9.214974309524152
best_error: 9.214974295562119
best_error: 8.679439822165051
best_error: 8.679439653630478
best_error: 7.869842184173063
best_error: 7.86984209288609
best_error: 7.869842028782955
best_error: 7.762911168842365
best_error: 7.762911081094652
best_error: 7.762911011168456
best_error: 7.694205881635134
best_error: 7.694205794615662
best_error: 7.69420572420103
best_error: 7.674556332579471
best_error: 7.674556167378622
best_error: 7.6629649796280415
best_error: 7.662964891630525
best_error: 7.662964821750818
best_error: 7.608544502213272
best_error: 7.608544410525888
best_error: 7.608544344176687
best_error: 7.602893150759519
best_error: 7.602893058427757
best_error: 7.6028929926511
best_error: 7.599218444811615
best_error: 7.59921835206136
best_error: 7.59921828665645
best_error: 7.597327309347143
best_error: 7.597327216381677
best_error: 7.597327151167963
best_error: 7.596006493796116
best_error: 7.596006400680406
best_error: 7.596006335600162
best_error: 7.595318526811719
best_error: 7.5953184336173845
best_error: 7.5953183686063355
best_error: 7.594781054197295
best_error: 7.594780960941548
best_error: 7.594780895984586
best_error: 7.59475146625386
best_error: 7.594751372994725
best_error: 7.5947513080407285
best_error: 7.594731878080395
best_error: 7.5947317848190306
best_error: 7.594731719867002
best_error: 7.59471522024278
best_error: 7.594715126979514
best_error: 7.594715062029165
best_error: 7.594711841536476
best_error: 7.594711748272828
best_error: 7.594711683322814
best_error: 7.594709976829928
best_error: 7.594709883566065
best_error: 7.594709818616226
best_error: 7.594708853725603
best_error: 7.594708760461615
best_error: 7.594708695511901
best_error: 7.594708194401717
best_error: 7.594708101137638
best_error: 7.5947080361879795
best_error: 7.594707796457026
best_error: 7.594707703192903
best_error: 7.5947076382432925
best_error: 7.594707575949144
best_error: 7.594707417735419
best_error: 5.903672143191086
best_error: 5.903671849526249
best_error: 5.718670636098631
best_error: 5.7186701530485315
best_error: 5.682652635404219
best_error: 5.682652196995056
best_error: 5.6441018242921395
best_error: 5.6441014173354525
best_error: 5.563694515198986
best_error: 5.563694153249047
best_error: 5.491138342833441
best_error: 5.491137984982731
best_error: 5.425655935166878
best_error: 5.425655582190895
best_error: 5.411160302648707
best_error: 5.411159949233312
best_error: 5.402314648094947
best_error: 5.402314294511939
best_error: 5.398755242821689
best_error: 5.398754890062385
best_error: 5.394481991310583
best_error: 5.394481637757368
best_error: 5.3933679406663
best_error: 5.3933675869063205
best_error: 5.392748940103873
best_error: 5.392748586229045
best_error: 5.392281994015159
best_error: 5.392281640053707
best_error: 5.392048934449016
best_error: 5.392048580444328
best_error: 5.3918599260288715
best_error: 5.391859571989148
best_error: 5.391774555931573
best_error: 5.391774201876012
best_error: 5.391721273959411
best_error: 5.39172091989397
best_error: 5.391685801027542
best_error: 5.3916854469555275
best_error: 5.39166477277015
best_error: 5.391664418694247
best_error: 5.39164992177829
best_error: 5.391649567699627
best_error: 5.391641772444228
best_error: 5.391641418364033
best_error: 5.3916355799096305
best_error: 5.391635225828301
best_error: 5.391632350989097
best_error: 5.391631996907174
best_error: 5.391629904990454
best_error: 5.391629550908066
best_error: 5.3916287036211585
best_error: 5.391628349538559
best_error: 5.391627759553072
best_error: 5.391627405470294
best_error: 5.391627328024777
best_error: 5.391627250290876
best_error: 5.391627082386253
best_error: 5.391627040175325
best_error: 5.391627016584835
best_error: 5.391626963264729
best_error: 5.353387110646139
best_error: 5.353386945419182
best_error: 5.0440518124535885
best_error: 5.044051357515396
