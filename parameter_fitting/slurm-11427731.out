ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.784861866217394
best_error: 23.784861214618576
best_error: 5.004813844174453
best_error: 5.004813843790263
best_error: 5.004790041384497
best_error: 5.00479004138125
best_error: 5.00479004137231
best_error: 5.004694712605152
best_error: 5.004694712601891
best_error: 5.0046947125929515
best_error: 5.004311503970504
best_error: 5.004311503967184
best_error: 5.004311503958245
best_error: 5.0027476083683835
best_error: 5.002747608364813
best_error: 5.002747608355886
best_error: 4.995939658489451
best_error: 4.995939658484508
best_error: 4.995939658475841
best_error: 4.952968987027498
best_error: 4.952968986984823
best_error: 4.9241522015009185
best_error: 4.924152201345081
best_error: 4.881280402830496
best_error: 4.881280402158456
best_error: 3.831672968341717
best_error: 3.831672889464852
best_error: 3.7602178617334827
best_error: 3.7602177736097335
best_error: 3.5340029511022863
best_error: 3.5340028261675145
best_error: 3.363519687138936
best_error: 3.363519538677259
best_error: 3.201540321909505
best_error: 3.201540221930793
best_error: 3.1812050404251306
best_error: 3.1812050246375327
best_error: 3.1757075604133287
best_error: 3.1757075453846353
best_error: 3.1589917405907717
best_error: 3.158991728595849
best_error: 3.1589917277198394
best_error: 3.1125114007321435
best_error: 3.1125113533215085
best_error: 3.067471760140762
best_error: 3.0674717320735265
best_error: 3.061177336561784
best_error: 3.061177286750316
best_error: 3.0510400520265075
best_error: 3.05103999814976
best_error: 3.019069041800103
best_error: 3.0190689616735886
best_error: 3.0013195516982
best_error: 3.0013194943553545
best_error: 2.9988041122297484
best_error: 2.998804085625099
best_error: 2.996802077697851
best_error: 2.9968020771674033
best_error: 2.996802073279083
best_error: 2.992605704025863
best_error: 2.9926056722155794
best_error: 2.9799326508378927
best_error: 2.9799325722765406
best_error: 2.972740150611946
best_error: 2.972739984311298
best_error: 2.971738912817456
best_error: 2.9717386884324886
best_error: 2.971738043514299
best_error: 2.9717378158383156
best_error: 2.971737799716388
best_error: 2.9637965174178036
best_error: 2.9637963162447174
best_error: 2.9105801837128435
best_error: 2.910580091737318
best_error: 2.6599277129585466
best_error: 2.6599276911061174
best_error: 2.5342457137432963
best_error: 2.5342456136468328
best_error: 2.440931742006677
best_error: 2.440931623435442
best_error: 2.4160489303577735
best_error: 2.4160487353208233
best_error: 2.3902271670272675
best_error: 2.3902270168018243
best_error: 2.377680811539961
best_error: 2.3776807654814918
best_error: 2.3776806787150635
best_error: 2.2734805171281507
best_error: 2.273480396424401
best_error: 2.2722013034684068
best_error: 2.272201105099885
best_error: 2.116657539587694
best_error: 2.1166574684375505
best_error: 2.0805946585215755
best_error: 2.080594653103567
best_error: 2.080594646783739
best_error: 2.0758972372301376
best_error: 2.0758971242709774
best_error: 2.072048244094315
best_error: 2.0720481882412476
best_error: 2.067740417710584
best_error: 2.0677404172902745
best_error: 2.0677404033066322
best_error: 2.0667532520361345
best_error: 2.0667532499078196
best_error: 2.0667532478874504
best_error: 2.066378715947807
best_error: 2.0663787144039754
best_error: 2.0663787114891004
best_error: 2.0659490621604593
best_error: 2.065949061502016
best_error: 2.065949061445748
best_error: 2.065949057615
best_error: 2.0599492780135495
best_error: 2.05994927730778
best_error: 2.0599492761911447
best_error: 2.0599492733044418
best_error: 2.050217814146494
best_error: 2.0502178138328446
best_error: 2.050217813517299
best_error: 2.0502178094235504
best_error: 2.042149140344276
best_error: 2.0421491402620564
best_error: 2.04214913528587
best_error: 2.031987383612235
best_error: 2.031987315809718
best_error: 2.0261256487158352
best_error: 2.026125638402722
best_error: 2.0199578486762872
best_error: 2.019957837177177
best_error: 2.007516846126819
best_error: 2.0075168350514896
best_error: 1.9988331451202246
best_error: 1.9988331443360425
best_error: 1.9988331432017212
best_error: 1.9898097924317744
best_error: 1.9898097695489994
best_error: 1.9863894542307068
best_error: 1.9863894538506852
best_error: 1.9863894537719253
best_error: 1.9856160266233351
best_error: 1.9856160210255698
best_error: 1.984970874673023
best_error: 1.9849708639390142
best_error: 1.983584138942082
best_error: 1.9835841233683382
best_error: 1.9834327122577111
best_error: 1.9834326999171246
best_error: 1.9827241379662002
best_error: 1.9827241296814726
best_error: 1.9791547830707632
best_error: 1.9791547318868574
best_error: 1.9750856767319958
best_error: 1.9750856301133164
best_error: 1.9733582957573321
best_error: 1.9733582733852553
best_error: 1.973129336153616
best_error: 1.9731292887922829
best_error: 1.9726773836669593
best_error: 1.9726773712599737
best_error: 1.9726368644940748
best_error: 1.972636842035555
best_error: 1.9725123976752479
best_error: 1.9725123950994417
best_error: 1.9706133817716769
best_error: 1.9706133799098844
best_error: 1.968211142119431
best_error: 1.9682111200497188
best_error: 1.966234926918161
best_error: 1.9662349266175736
best_error: 1.9662349178038818
best_error: 1.9659550146169553
best_error: 1.9659550051537988
best_error: 1.9656551243596008
best_error: 1.9656551241470483
best_error: 1.965655123918327
best_error: 1.965655123388026
best_error: 1.964374385997863
best_error: 1.9643743780970326
best_error: 1.9643406136747634
best_error: 1.9643406092835167
best_error: 1.9641117715507095
best_error: 1.9641117691809984
best_error: 1.9633422854366267
best_error: 1.9633422800783336
best_error: 1.9630223633955644
best_error: 1.963022362992562
best_error: 1.96302236238621
best_error: 1.9625900980629671
best_error: 1.9625900961820764
best_error: 1.9603819019873623
best_error: 1.960381883220824
best_error: 1.9598422297126614
best_error: 1.959842225069495
best_error: 1.9595852472871673
best_error: 1.9595852281504764
best_error: 1.9565825006582187
best_error: 1.9565824887397565
best_error: 1.9556738935235167
best_error: 1.9556738869469705
best_error: 1.9546082914779621
best_error: 1.954608226296689
best_error: 1.9522805030087684
best_error: 1.9522804754323477
best_error: 1.9515996250565755
best_error: 1.9515995933683385
best_error: 1.9513229822926206
best_error: 1.9513229120048947
best_error: 1.9494099354874372
best_error: 1.9494099320171814
best_error: 1.948917418741842
best_error: 1.9489173996695974
best_error: 1.9469314154024975
best_error: 1.946931406619558
best_error: 1.9411942417348473
best_error: 1.9411942150983017
best_error: 1.9350860671793333
best_error: 1.935086011717005
best_error: 1.9321992696995662
best_error: 1.9321992627680302
best_error: 1.93166510690747
best_error: 1.9316650909741153
best_error: 1.9314149163066718
best_error: 1.9314149097777078
best_error: 1.9313376156506008
best_error: 1.931337614220018
best_error: 1.9312914522440354
best_error: 1.9312914521603348
best_error: 1.9312914513946344
best_error: 1.9311864956113138
best_error: 1.931186493840732
best_error: 1.9305101363826231
best_error: 1.930510128872748
best_error: 1.9302129781294002
best_error: 1.9302129780180999
best_error: 1.930212977958457
best_error: 1.9301813702994826
best_error: 1.9301813662982668
best_error: 1.9301760385114874
best_error: 1.9301760383453064
best_error: 1.9301756881733443
best_error: 1.9301756881216958
best_error: 1.9301756880817251
best_error: 1.930175180073581
best_error: 1.930175180035237
best_error: 1.9301751800209155
best_error: 1.9301751799699434
best_error: 1.9301721537823762
best_error: 1.930172152428
best_error: 1.9301624681865863
best_error: 1.9301624665429358
best_error: 1.930160040703898
best_error: 1.9301600404513086
best_error: 1.9301571386108747
best_error: 1.9301571377850075
best_error: 1.9301568327571896
best_error: 1.9301568327455079
best_error: 1.9301568327233063
best_error: 1.930156832680076
best_error: 1.9301568326006862
best_error: 1.9301545849574706
best_error: 1.930154583978092
best_error: 1.9301541484253233
best_error: 1.9301541480662194
best_error: 1.9301430564360218
best_error: 1.9301430563950197
best_error: 1.9301430563542865
best_error: 1.9301076410306548
best_error: 1.9301076404557975
best_error: 1.9300631085377637
best_error: 1.9300631071745311
best_error: 1.9300308215789719
best_error: 1.9300308177095737
best_error: 1.9299659147729091
best_error: 1.9299659046702158
best_error: 1.929778444415567
best_error: 1.9297784165887604
