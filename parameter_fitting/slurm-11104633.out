ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.52514036834414
best_error: 97.52514022394878
best_error: 97.52514021220622
best_error: 97.52514019074607
best_error: 17.577327422731233
best_error: 17.577327422725393
best_error: 17.577327411547884
best_error: 17.56598779470103
best_error: 17.565987783257594
best_error: 17.51915803613163
best_error: 17.519158024125623
best_error: 17.287717504809116
best_error: 17.28771748738948
best_error: 9.131282727270566
best_error: 9.131282470038034
best_error: 8.838291240426523
best_error: 8.838291236288306
best_error: 8.838291225079995
best_error: 8.817466023020943
best_error: 8.81746601482148
best_error: 8.81746600976044
best_error: 8.7639997992798
best_error: 8.763999757863
best_error: 8.755634301611494
best_error: 8.755634270068018
best_error: 8.739034689554401
best_error: 8.739034686470497
best_error: 8.739034675418212
best_error: 8.727815687545023
best_error: 8.727815685439543
best_error: 8.727815674839526
best_error: 8.704379215112043
best_error: 8.704379210057482
best_error: 8.704379207763456
best_error: 8.704379205647879
best_error: 8.669969021923631
best_error: 8.66996899347702
best_error: 8.573463384026088
best_error: 8.573463370499285
best_error: 8.571179522260227
best_error: 8.57117950117313
best_error: 8.542890748436808
best_error: 8.54289069182558
best_error: 8.530702015369194
best_error: 8.530701999954307
best_error: 8.528673432945048
best_error: 8.528673417136858
best_error: 8.522878199377224
best_error: 8.52287818221711
best_error: 8.522816400182677
best_error: 8.522816316017105
best_error: 8.519736478764766
best_error: 8.519736462914974
best_error: 8.512833992619893
best_error: 8.512833977984634
best_error: 8.50445827447802
best_error: 8.504458260919549
best_error: 8.490379120697968
best_error: 8.490379108836015
best_error: 8.471670088262382
best_error: 8.4716700770669
best_error: 8.383684010962654
best_error: 8.3836839940396
best_error: 8.3572528505074
best_error: 8.357252834318743
best_error: 8.357196262179187
best_error: 8.357196245891604
best_error: 8.35325976144279
best_error: 8.35325974528957
best_error: 8.338337920750451
best_error: 8.338337905501467
best_error: 8.28780809399711
best_error: 8.28780794841381
best_error: 8.16169585396014
best_error: 8.161695846428456
best_error: 8.16169582474336
best_error: 8.043433620052522
best_error: 8.04343360591292
best_error: 8.043433602413986
best_error: 7.997261231191527
best_error: 7.997261218467299
best_error: 7.997261215793072
best_error: 7.702646160546576
best_error: 7.702646149794111
best_error: 7.5914381657675545
best_error: 7.591438158213953
best_error: 7.591438147349479
best_error: 7.521706911821601
best_error: 7.521706851811962
best_error: 7.514103366919148
best_error: 7.514103366639
best_error: 7.514103359812543
best_error: 7.514103351091474
best_error: 7.50905191234331
best_error: 7.509051910728644
best_error: 7.509051896204472
best_error: 7.506559589759062
best_error: 7.5065595889103855
best_error: 7.506559570660793
best_error: 7.504573930540905
best_error: 7.504573930351259
best_error: 7.504573914658637
best_error: 7.488974606524252
best_error: 7.488974605987106
best_error: 7.488974591253529
best_error: 7.464794620326021
best_error: 7.464794619336518
best_error: 7.46479460577938
best_error: 7.449313693976928
best_error: 7.449313691116046
best_error: 7.449313679391372
best_error: 7.446764904586294
best_error: 7.4467649016910755
best_error: 7.446764890034028
best_error: 7.446528274548482
best_error: 7.446528271652396
best_error: 7.446528259998766
best_error: 7.446498551238312
best_error: 7.446498530279401
best_error: 7.446498528302967
best_error: 7.417053646785461
best_error: 7.417053596332754
best_error: 7.413422521855843
best_error: 7.413422518619938
best_error: 7.413422354470418
best_error: 7.410682714042419
best_error: 7.410682506973196
best_error: 7.371831226407253
best_error: 7.37183120510898
best_error: 7.25271651805499
best_error: 7.252716511049648
best_error: 7.231451502471585
best_error: 7.231451491828804
best_error: 7.140290608721588
best_error: 7.140290606596887
best_error: 7.1402905969455475
best_error: 7.0642334461373775
best_error: 7.064233441526785
best_error: 7.064233435445444
best_error: 6.960891360288634
best_error: 6.960891355900735
best_error: 6.960891355249415
best_error: 6.949326649665654
best_error: 6.949326642434686
best_error: 6.949326642356782
best_error: 6.915254945219251
best_error: 6.915254935895132
