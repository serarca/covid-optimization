ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.9532814101728
best_error: 22.95328090070351
best_error: 4.720417757579792
best_error: 4.720417756457211
best_error: 4.720159878184003
best_error: 4.72015987817698
best_error: 4.720159878165785
best_error: 4.719123616022159
best_error: 4.719123616014985
best_error: 4.719123616003847
best_error: 4.714906475078054
best_error: 4.714906475070231
best_error: 4.7149064750593475
best_error: 4.696705174929878
best_error: 4.696705174918464
best_error: 4.696705174909306
best_error: 4.585199904670444
best_error: 4.5851999045609375
best_error: 4.497489196266886
best_error: 4.497489195809341
best_error: 4.355115007436777
best_error: 4.355115005277318
best_error: 3.7373153928060328
best_error: 3.7373153754924378
best_error: 3.4648810336576945
best_error: 3.4648810070348413
best_error: 3.356834281090451
best_error: 3.3568342444645443
best_error: 3.3353199255535326
best_error: 3.335319891165205
best_error: 3.333786407009882
best_error: 3.333786319134013
best_error: 3.326626926572737
best_error: 3.326626909577708
best_error: 3.3266268972802173
best_error: 3.2711680652182644
best_error: 3.271167978366124
best_error: 3.241245731269556
best_error: 3.241245639335605
best_error: 3.186104972986259
best_error: 3.1861048755676715
best_error: 3.1190870091180227
best_error: 3.119086899317341
best_error: 2.9746010306616597
best_error: 2.9746008985673997
best_error: 2.893264317814588
best_error: 2.8932641552566025
best_error: 2.8909728235811696
best_error: 2.8909726516784997
best_error: 2.7812184977588124
best_error: 2.781218347164288
best_error: 2.6076438966351647
best_error: 2.6076437261336327
best_error: 2.492857897119608
best_error: 2.492857851936872
best_error: 2.4748602077592126
best_error: 2.4748602023401416
best_error: 2.474860199424592
best_error: 2.4687454567548857
best_error: 2.468745446047935
best_error: 2.4416151813904032
best_error: 2.4416151727645503
best_error: 2.4321495939419724
best_error: 2.4321495339614456
best_error: 2.4214211198725697
best_error: 2.421421072799346
best_error: 2.4116722227975105
best_error: 2.4116721936195358
best_error: 2.4051852266194125
best_error: 2.4051852094216075
best_error: 2.4015854634357097
best_error: 2.4015854602469697
best_error: 2.401585458303603
best_error: 2.394881019886067
best_error: 2.3948810029694623
best_error: 2.3546543649669927
best_error: 2.354654307750108
best_error: 2.242208448355726
best_error: 2.2422083213921913
best_error: 2.1659137230489125
best_error: 2.165913684145276
best_error: 2.14649851723589
best_error: 2.14649848083434
best_error: 2.1013050569465808
best_error: 2.1013050280922876
best_error: 2.054521891770109
best_error: 2.0545218704969925
best_error: 2.004932893631831
best_error: 2.0049328785765375
best_error: 1.9970122581041887
best_error: 1.9970122118521059
best_error: 1.9483821397099599
best_error: 1.9483821053464319
best_error: 1.9483820572069386
best_error: 1.8146040427738515
best_error: 1.8146037929512804
best_error: 1.70906172638831
best_error: 1.7090617150433107
best_error: 1.6984920399784391
best_error: 1.6984920013965294
best_error: 1.6597979200260813
best_error: 1.6597978916190028
best_error: 1.658078315252288
best_error: 1.658078293859625
best_error: 1.6578470089178412
best_error: 1.657846983009604
best_error: 1.6571571237267095
best_error: 1.6571571176927324
best_error: 1.657027505118935
best_error: 1.6570275051182244
best_error: 1.6570275046429472
best_error: 1.6570275037580844
best_error: 1.6569306793029892
best_error: 1.6569306749329726
best_error: 1.6561527591563878
best_error: 1.6561527383577357
best_error: 1.654593028424538
best_error: 1.6545929762999103
best_error: 1.6524268338461878
best_error: 1.6524267703735385
best_error: 1.646592818927027
best_error: 1.6465927289961066
best_error: 1.6402459783304493
best_error: 1.6402459149788982
best_error: 1.6328466840568694
best_error: 1.632846678878994
best_error: 1.6326946633346688
best_error: 1.632694661644502
best_error: 1.6326826398648262
best_error: 1.6326826395035454
best_error: 1.6326826393652711
best_error: 1.6326797851458232
best_error: 1.6326797841723706
best_error: 1.6326695492940237
best_error: 1.6326695471139383
best_error: 1.6326463351269573
best_error: 1.632646331747366
best_error: 1.632543942482275
best_error: 1.6325439389773626
best_error: 1.6323231096564876
best_error: 1.6323230945782297
best_error: 1.6318076999996125
best_error: 1.6318076938206847
best_error: 1.6308221647724417
best_error: 1.6308221578121251
best_error: 1.6305600620019818
best_error: 1.630560058413113
best_error: 1.628413558592135
best_error: 1.6284135400759459
best_error: 1.6279735561284914
best_error: 1.627973552959431
best_error: 1.6279580429902811
best_error: 1.6279580423905278
best_error: 1.6279580419335653
best_error: 1.6279086454733993
best_error: 1.6279086433021923
best_error: 1.6278930474799942
best_error: 1.6278930404442056
best_error: 1.6272398847140075
best_error: 1.62723987635258
best_error: 1.6264144237092972
best_error: 1.6264144202089448
best_error: 1.6262782955144297
best_error: 1.6262782941925489
best_error: 1.6262284361195805
best_error: 1.626228434819557
best_error: 1.6260689343835317
best_error: 1.6260689341536319
best_error: 1.6260689337359633
best_error: 1.625326052539825
best_error: 1.6253260308414554
best_error: 1.6232500730036248
best_error: 1.6232500550195672
best_error: 1.6217812196877595
best_error: 1.621781200966676
best_error: 1.6204477276166294
best_error: 1.6204477098516106
best_error: 1.6197181033984154
best_error: 1.6197181033257195
best_error: 1.619718103086633
best_error: 1.6197181029501386
best_error: 1.6197181027892944
best_error: 1.6184077589951773
best_error: 1.6184077589399208
best_error: 1.6184077587040744
best_error: 1.618407758370657
best_error: 1.6184077582835044
best_error: 1.6162433921848747
best_error: 1.616243348455578
best_error: 1.6156185781168901
best_error: 1.6156185614035883
best_error: 1.613752507530905
best_error: 1.6137524979086186
best_error: 1.6134011559169545
best_error: 1.613401153745707
best_error: 1.612260099995177
best_error: 1.612260092367917
best_error: 1.6098800674224807
best_error: 1.6098800390128967
best_error: 1.6073135981067637
best_error: 1.6073135833804164
best_error: 1.6072990479101037
best_error: 1.6072990288306395
best_error: 1.6072617070192399
best_error: 1.6072616799255965
best_error: 1.606917202970069
best_error: 1.6069171865586216
best_error: 1.6068818839419137
best_error: 1.6068818603714559
best_error: 1.6063922698152668
best_error: 1.6063922236041717
best_error: 1.6047053416789097
best_error: 1.6047053267950755
best_error: 1.6037445059750663
best_error: 1.6037445058063404
best_error: 1.6033868712551944
best_error: 1.6033868672006875
best_error: 1.603366527360669
best_error: 1.6033665235904955
best_error: 1.603344219476297
best_error: 1.6033442189872795
best_error: 1.6033309807361413
best_error: 1.6033309798510471
best_error: 1.6033272512797436
best_error: 1.6033272508003082
best_error: 1.6033258223832416
best_error: 1.6033258223811182
best_error: 1.6033258223809117
best_error: 1.603323620281985
best_error: 1.6033236202316339
best_error: 1.6033156429635593
best_error: 1.6033156429611666
best_error: 1.6033156429419941
best_error: 1.6032599630809274
best_error: 1.6032599623092758
best_error: 1.6032263095817205
best_error: 1.6032263082466904
best_error: 1.6031839947708082
best_error: 1.6031839945324275
best_error: 1.6031258387563523
best_error: 1.603125838688065
best_error: 1.6031105619237667
best_error: 1.6031105570495843
best_error: 1.6031009632169801
best_error: 1.603100961568861
best_error: 1.6030870558739403
best_error: 1.6030870545301374
best_error: 1.603076810095809
best_error: 1.6030768074389672
best_error: 1.603069905249036
best_error: 1.6030699036144922
best_error: 1.6030688585192134
best_error: 1.603068856720036
best_error: 1.6030664435550692
best_error: 1.6030664428109225
best_error: 1.6030625994214336
best_error: 1.603062598786601
best_error: 1.6030612145740921
best_error: 1.6030612141621825
best_error: 1.6030611663962975
best_error: 1.6030611663850607
best_error: 1.6030609587572764
best_error: 1.6030609583075048
best_error: 1.60306087486952
best_error: 1.6030608748538029
best_error: 1.6030608229563097
best_error: 1.6030608229485919
best_error: 1.6030608229462038
best_error: 1.6030606728379317
best_error: 1.6030606727667054
best_error: 1.6030604661020285
best_error: 1.6030604660022871
best_error: 1.6030604430122921
best_error: 1.6030604428339714
best_error: 1.6030596857240726
best_error: 1.6030596856658712
