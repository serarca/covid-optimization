ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.344958576474554
best_error: 9.34495855673932
best_error: 3.7733428996157405
best_error: 3.773342899590279
best_error: 3.7733428981284405
best_error: 3.3710864277347357
best_error: 3.371086427643829
best_error: 3.371086425444549
best_error: 2.9305577866244725
best_error: 2.9305577863830563
best_error: 2.930557783981933
best_error: 2.8902694089670313
best_error: 2.8902694083069074
best_error: 2.8902694064972834
best_error: 2.885054171670812
best_error: 2.885054163525332
best_error: 2.8807632092334856
best_error: 2.880763208193805
best_error: 2.88076320635039
best_error: 2.8795488381763925
best_error: 2.8795488377194585
best_error: 2.879548835162516
best_error: 2.879069251419108
best_error: 2.879069250445908
best_error: 2.8790692483613123
best_error: 2.877458865802228
best_error: 2.877458857056653
best_error: 2.8645770749353665
best_error: 2.8645770500475494
best_error: 2.8516719496162817
best_error: 2.8516719110484354
best_error: 2.839334518761483
best_error: 2.839334518404592
best_error: 2.839327323076307
best_error: 2.8393272764236945
best_error: 2.830121736209272
best_error: 2.83012168194933
best_error: 2.8299783349398844
best_error: 2.829978277028334
best_error: 2.8272814739067216
best_error: 2.8272814148144194
best_error: 2.8248223702146875
best_error: 2.8248223106145818
best_error: 2.824369065288534
best_error: 2.824369064411663
best_error: 2.8243647231805267
best_error: 2.82436466401956
best_error: 2.824294626419315
best_error: 2.824294567521743
best_error: 2.824269190640153
best_error: 2.824269131851345
best_error: 2.8242493389926606
best_error: 2.8242492803826793
best_error: 2.8242393871446794
best_error: 2.824239328540779
best_error: 2.8242345289103783
best_error: 2.824234470313697
best_error: 2.8242304913793843
best_error: 2.8242304327868224
best_error: 2.8242289556470515
best_error: 2.8242288970560443
best_error: 2.8242286747292953
best_error: 2.8242286743244263
best_error: 2.8242285978815573
best_error: 2.8242285392909228
best_error: 2.8242283638492873
best_error: 2.824228305258883
best_error: 2.824228226601938
best_error: 2.8242282135192283
best_error: 2.8242282058979495
best_error: 2.8242281932717623
best_error: 2.824178993884723
best_error: 2.8241789928612033
best_error: 2.824165001518764
best_error: 2.8241650004621666
best_error: 2.8241486156901203
best_error: 2.824148558570325
best_error: 2.8241482773417
best_error: 2.824148276266681
best_error: 2.8241472690674847
best_error: 2.82414726798933
best_error: 2.8241472303691406
best_error: 2.824147026249239
best_error: 2.8241470258308103
best_error: 2.8241048686288748
best_error: 2.824104811197441
best_error: 2.8240665183394142
best_error: 2.8240664606226322
best_error: 2.8240426037899446
best_error: 2.824042546096391
best_error: 2.824010667424397
best_error: 2.8240106094624253
best_error: 2.824002688329131
best_error: 2.8240026301789163
best_error: 2.8239997420649643
best_error: 2.823999683779916
best_error: 2.823998418299877
best_error: 2.8239983600157657
best_error: 2.823997772283778
best_error: 2.82399771400012
best_error: 2.8239970613395102
best_error: 2.8239970030562165
best_error: 2.82399685762283
best_error: 2.8239967993396413
best_error: 2.8236884374948614
best_error: 2.823688379732462
best_error: 2.8221316515191606
best_error: 2.8221316508809404
best_error: 2.810800686592301
best_error: 2.8108006830704753
best_error: 2.805896153018983
best_error: 2.80589614808766
best_error: 2.8053407706880042
best_error: 2.805340765318947
best_error: 2.805328070064024
best_error: 2.805328064449885
best_error: 2.799737374347014
best_error: 2.79973732899427
best_error: 2.7923757482613065
best_error: 2.79237574682744
best_error: 2.7923757148884394
best_error: 2.7805525681864847
best_error: 2.780552506293682
best_error: 2.7607419701413263
best_error: 2.7607419701413134
best_error: 2.7590256058769342
best_error: 2.759025556108661
best_error: 2.758708161264864
best_error: 2.7586867673605053
best_error: 2.7586867168701943
best_error: 2.758680510805468
best_error: 2.7586552369425474
best_error: 2.7586524505855325
best_error: 2.7586511974975316
best_error: 2.7586503812593226
best_error: 2.7586503304876717
best_error: 2.758650275994662
best_error: 2.758650258992159
