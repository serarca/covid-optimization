ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.524390037156454
best_error: 11.524390034905787
best_error: 11.348975687536303
best_error: 11.348975666432747
best_error: 7.356248067590428
best_error: 7.356247999365927
best_error: 7.342953777225782
best_error: 7.342953629510594
best_error: 7.335376438571293
best_error: 7.335376391230854
best_error: 7.332749621099015
best_error: 7.332749574760998
best_error: 7.332048755682439
best_error: 7.332048755682438
best_error: 7.332048754790172
best_error: 7.331748114024866
best_error: 7.331748068016429
best_error: 7.33164316182535
best_error: 7.331643161825349
best_error: 7.331643160919057
best_error: 7.331491632429656
best_error: 7.33149158639975
best_error: 7.331461470998088
best_error: 7.33146142496566
best_error: 7.3314599709767805
best_error: 7.331459924944255
best_error: 7.331458059415681
best_error: 7.331458059415679
best_error: 7.331458058507304
best_error: 7.331445640104251
best_error: 7.331445640104249
best_error: 7.331445639194735
best_error: 7.33139597978735
best_error: 7.33139597887328
best_error: 7.331197596889266
best_error: 7.331197595956738
best_error: 7.3304073734631086
best_error: 7.330407373463108
best_error: 7.3304073724529815
best_error: 7.327267374208144
best_error: 7.327267374208143
best_error: 7.327267372920559
best_error: 7.322446840047881
best_error: 7.322446840047879
best_error: 7.322446838421454
best_error: 7.281979913230307
best_error: 7.281979913230306
best_error: 7.281979909259273
best_error: 7.253186105866739
best_error: 7.25318610023137
best_error: 7.240197824617896
best_error: 7.200926915060032
best_error: 7.200926915060029
best_error: 7.200926905393525
best_error: 7.193929319712387
best_error: 7.193929308385188
best_error: 7.193907793572914
best_error: 7.193907793572913
best_error: 7.193907782245458
best_error: 7.193906116906966
best_error: 7.1939061055795035
best_error: 7.19390607275906
best_error: 7.19390601932656
best_error: 7.193905987559771
best_error: 7.193905987559769
best_error: 7.193905976232314
best_error: 7.193905975058416
best_error: 7.077170032345026
best_error: 7.077170032345023
best_error: 7.077170009926189
best_error: 7.028250089509713
best_error: 7.014833942376183
best_error: 7.014833942376181
best_error: 7.012063532514546
best_error: 7.01150781716232
best_error: 7.011507817162318
best_error: 5.847081913032513
best_error: 5.847081619578487
best_error: 5.847078675136908
best_error: 5.847078381682573
best_error: 5.847065725378252
best_error: 5.847065431972487
best_error: 5.847013931779156
best_error: 5.847013638429504
best_error: 5.846806781531718
best_error: 5.846806488201237
best_error: 5.845978309750713
best_error: 5.845978016895787
best_error: 5.842669103879833
best_error: 5.842668811007069
best_error: 5.8294740828611555
best_error: 5.8294737911974295
best_error: 5.7771216690997305
best_error: 5.7771213824326235
best_error: 5.680701061264478
best_error: 5.6807009916399265
best_error: 5.661722523193339
best_error: 5.6617224673093025
best_error: 5.659747107745928
best_error: 5.659747107745926
best_error: 5.659747107745922
best_error: 5.636735196375257
best_error: 5.636735196375256
best_error: 5.599819409328168
best_error: 5.594046705287726
best_error: 5.594046705287723
best_error: 5.58721507522788
best_error: 5.587215059983176
best_error: 5.582573031879504
best_error: 5.5825730318795
best_error: 5.57448122016094
best_error: 5.574481220160939
best_error: 5.569444892186735
best_error: 5.569283168962391
best_error: 5.569283168962373
best_error: 5.568051883875302
best_error: 5.568051883875301
best_error: 5.56805188387529
best_error: 5.565690842192696
best_error: 5.565690842192695
best_error: 5.56569084219269
best_error: 5.56548568160484
best_error: 5.565485681604838
best_error: 5.565485681604834
best_error: 5.564679185340091
best_error: 5.564679185340089
best_error: 5.564679185340081
best_error: 5.5616988841954385
best_error: 5.561698884195432
best_error: 5.5595884498496675
best_error: 5.559588449849666
best_error: 5.559588449849659
best_error: 5.558708038390157
best_error: 5.558708038390155
best_error: 5.558708038390148
best_error: 5.557777995262027
best_error: 5.557777920522114
best_error: 5.557653682741725
best_error: 5.557653682741721
best_error: 5.557653682741713
best_error: 5.557509932777269
best_error: 5.5575099327772595
best_error: 5.557489452728234
best_error: 5.557489452728233
best_error: 5.557489452728224
best_error: 5.557475031962367
best_error: 5.557475031962366
best_error: 5.557475031962359
best_error: 5.557466180888151
best_error: 5.55746618088815
best_error: 5.557466180888145
best_error: 5.557461030637637
best_error: 5.557461030637635
best_error: 5.557461030637627
best_error: 5.557458347481297
best_error: 5.557458347481294
best_error: 5.557458347481286
best_error: 5.557457535307939
best_error: 5.557457535307938
best_error: 5.557457535307927
best_error: 5.557457038200221
best_error: 5.557457038200218
best_error: 5.557457038200214
best_error: 5.55745673266051
best_error: 5.557456732660509
best_error: 5.5574567326605
best_error: 5.5574565437587395
best_error: 5.557456543758738
best_error: 5.557456543758732
best_error: 5.557456425995948
best_error: 5.557456425995946
best_error: 5.557456425995937
best_error: 5.557456351712216
best_error: 5.557456351712213
best_error: 5.557456351712208
best_error: 5.557456304063284
best_error: 5.557456304063282
best_error: 5.557456304063277
best_error: 5.557456272766972
best_error: 5.55745627276697
best_error: 5.557456272766963
best_error: 5.557456251210639
best_error: 5.557456251210638
best_error: 5.5574562512106285
