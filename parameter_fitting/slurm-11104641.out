ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.49325302324695
best_error: 99.49325293547663
best_error: 99.49325286473372
best_error: 17.44107717292823
best_error: 17.441077172922277
best_error: 17.44107716028777
best_error: 17.39866486257489
best_error: 17.39866486256849
best_error: 17.398664848492015
best_error: 17.16320257283423
best_error: 17.163202572813752
best_error: 17.163202548126705
best_error: 16.427719963629208
best_error: 16.427718383467177
best_error: 13.024933476400722
best_error: 13.024933470649104
best_error: 13.024933312694724
best_error: 12.717741335471944
best_error: 12.717741330474205
best_error: 12.717741326337526
best_error: 12.71774122639092
best_error: 12.713287468425099
best_error: 12.713287459092383
best_error: 12.713287452128046
best_error: 12.705687460527344
best_error: 12.705687450899799
best_error: 12.705687443463088
best_error: 12.63415374620366
best_error: 12.634153735907924
best_error: 12.634153728462877
best_error: 12.538508020462638
best_error: 12.538508009792341
best_error: 12.5385080016441
best_error: 12.453707256048308
best_error: 12.453707244194849
best_error: 12.453707236695822
best_error: 12.2199595630176
best_error: 12.219959549636897
best_error: 12.219959541565757
best_error: 12.130301689140088
best_error: 12.130301676131152
best_error: 12.130301666926666
best_error: 12.097630560240477
best_error: 12.097630532325823
best_error: 11.888848891476758
best_error: 11.888848875987216
best_error: 11.888848868142473
best_error: 11.714271256918883
best_error: 11.714271252873592
best_error: 11.714271249633214
best_error: 11.714271232265782
best_error: 11.129445233449331
best_error: 11.129445223143126
best_error: 11.129445208972147
best_error: 10.41003842472497
best_error: 10.410038406794834
best_error: 10.410038403100351
best_error: 10.158130300858451
best_error: 10.158130295311869
best_error: 10.158130279533275
best_error: 10.021315014075668
best_error: 10.021314970958388
best_error: 9.388243302821294
best_error: 9.388243290219881
best_error: 9.388243286054148
best_error: 9.298366589000814
best_error: 9.298366581434703
best_error: 9.298366573461541
best_error: 9.254260547356253
best_error: 9.254260544580696
best_error: 9.254260544265154
best_error: 9.254260543638747
best_error: 9.254260543625232
best_error: 9.254260533932133
best_error: 9.25426053284878
best_error: 9.242592877707995
best_error: 9.242592875995285
best_error: 9.242592857434976
best_error: 9.223269653943795
best_error: 9.223269653031497
best_error: 9.22326961921703
best_error: 9.136856399582838
best_error: 9.13685639406707
best_error: 9.136856389463512
best_error: 9.136856385573937
best_error: 9.131447038423817
best_error: 9.13144703241585
best_error: 9.13144703163802
best_error: 9.131447029454637
best_error: 9.131447024910994
best_error: 9.127152862701454
best_error: 9.127152854742183
best_error: 9.127152851698739
best_error: 9.12715284961593
best_error: 9.11425522509043
best_error: 9.114255214792955
best_error: 9.114255212028041
best_error: 9.044583350264315
best_error: 9.044583344965687
best_error: 9.044583332479899
best_error: 8.944093633272473
best_error: 8.944093614912925
best_error: 8.890976741929691
best_error: 8.890976724563535
best_error: 8.881546693277853
best_error: 8.88154650900693
best_error: 8.843012036490919
best_error: 8.843012023009436
best_error: 8.835729385608339
best_error: 8.835729372276063
best_error: 8.831980872879996
best_error: 8.831980680406122
best_error: 8.826579623865147
best_error: 8.826579429795501
best_error: 8.826236954414775
best_error: 8.82623694072426
best_error: 8.826144539664893
best_error: 8.826144345552386
best_error: 8.825002398248607
best_error: 8.825002384437365
best_error: 8.821640096960074
best_error: 8.821640081840163
best_error: 8.820912145775328
best_error: 8.820912130043716
best_error: 8.81929974303239
best_error: 8.819299726555641
best_error: 8.815977767638454
best_error: 8.815977750909354
best_error: 8.80572711359077
best_error: 8.805727096140517
best_error: 8.801088932473364
best_error: 8.8010889136709
best_error: 8.792681453325375
best_error: 8.792681432856853
best_error: 8.790428259326347
best_error: 8.79042817118941
best_error: 8.778023387276003
best_error: 8.778023370235841
best_error: 8.772277042019342
best_error: 8.772277025261038
best_error: 8.77137422685179
best_error: 8.7713742101136
best_error: 8.75558372006172
best_error: 8.755583704699347
best_error: 8.740705968436892
best_error: 8.74070595463948
best_error: 8.71038189310094
best_error: 8.710381723067737
best_error: 8.64457227233567
best_error: 8.644572271013839
best_error: 8.644572207151871
best_error: 8.634033187390562
best_error: 8.63403318491208
best_error: 8.634033141073076
best_error: 8.632831707514221
best_error: 8.632831693835758
best_error: 8.615835057618355
best_error: 8.615834914279652
best_error: 8.61172173188086
best_error: 8.611721576698157
best_error: 8.583742708628812
best_error: 8.583742693430981
best_error: 8.583592553196429
best_error: 8.583592537757847
best_error: 8.558429314394537
best_error: 8.558429299598913
