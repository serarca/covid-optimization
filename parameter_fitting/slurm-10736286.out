ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.980311691608478
best_error: 9.980311685999071
best_error: 5.2880496137211495
best_error: 5.288049288140201
best_error: 4.898681400275461
best_error: 4.898681400275342
best_error: 4.898681394675592
best_error: 4.890342974388349
best_error: 4.890342921473388
best_error: 4.883420162524871
best_error: 4.883420162524756
best_error: 4.883420155988307
best_error: 4.8816512501683125
best_error: 4.8816512501682015
best_error: 4.881651243464828
best_error: 4.881542524976559
best_error: 4.881542524976443
best_error: 4.881542518265052
best_error: 4.881526504000231
best_error: 4.881526459825624
best_error: 4.881443947481051
best_error: 4.881443903302862
best_error: 4.881162805194795
best_error: 4.881162805194686
best_error: 4.881162798466342
best_error: 4.878033574624776
best_error: 4.8780335746246655
best_error: 4.878033567770596
best_error: 4.865025045584849
best_error: 4.865025045584744
best_error: 4.86502503820075
best_error: 4.804583032165738
best_error: 4.804583032165619
best_error: 4.804583022058963
best_error: 4.6413075446027445
best_error: 4.6413075446025704
best_error: 4.641307540843388
best_error: 4.618974442895881
best_error: 4.618974442895703
best_error: 4.6189744415446965
best_error: 4.4399943961878
best_error: 4.439994396187576
best_error: 4.088504293660782
best_error: 4.088504293660672
best_error: 4.088504246103058
best_error: 4.080596589238273
best_error: 4.080596589238171
best_error: 4.08059653634832
best_error: 4.080259623451731
best_error: 4.080259556553371
best_error: 4.080259551368295
best_error: 4.080224576032423
best_error: 4.080224576032313
best_error: 4.080224522743169
best_error: 4.080199223391654
best_error: 4.080199223391544
best_error: 4.080199170102636
best_error: 4.08019257547552
best_error: 4.080192575475417
best_error: 4.080192522186561
best_error: 4.0801895903961665
best_error: 4.080189590396051
best_error: 4.080189537107234
best_error: 4.080188174122382
best_error: 4.080188174122268
best_error: 4.080188120833467
best_error: 4.080187483577093
best_error: 4.080187483576986
best_error: 4.08018743028818
best_error: 4.080187142646421
best_error: 4.080187142646306
best_error: 4.080187089357504
best_error: 4.080187084623821
best_error: 4.0801870794093045
best_error: 4.0657086991127525
best_error: 4.065708699112637
best_error: 4.065708652321501
best_error: 4.056460541997309
best_error: 4.05646054199721
best_error: 4.056460492579641
best_error: 3.965215759351312
best_error: 3.965215536684885
best_error: 3.9603594947684657
best_error: 3.960359287373886
best_error: 3.890343443287307
best_error: 3.890343420602055
best_error: 3.890343393467095
best_error: 3.8496970998982847
best_error: 3.8496970462188855
best_error: 3.8465441212184017
best_error: 3.8465441212183022
best_error: 3.846544120386163
best_error: 3.8459263740859
best_error: 3.845926314081905
best_error: 3.84570343610649
best_error: 3.8457034361063926
best_error: 3.845703435934823
best_error: 3.845703435202753
best_error: 3.845308361132561
best_error: 3.84530836113246
best_error: 3.845308360230657
best_error: 3.8448780983783193
best_error: 3.8448780413241073
best_error: 3.844010140994965
best_error: 3.8440100837397972
best_error: 3.8415247393058976
best_error: 3.8415247393058145
best_error: 3.8415247381555178
best_error: 3.810094143234467
best_error: 3.8100941432344393
best_error: 3.8100941415659313
best_error: 3.8100941398824646
best_error: 3.7988447565987187
best_error: 3.7988447565986867
best_error: 3.7975198708330806
best_error: 3.797519870833052
best_error: 3.7950377807224207
best_error: 3.7950377807223887
best_error: 3.7922652624436894
best_error: 3.792265262443663
best_error: 3.7902925765813995
best_error: 3.7902925765813755
best_error: 3.789086870300168
best_error: 3.7890868703001557
best_error: 3.7312423678265816
best_error: 3.7312423015229035
best_error: 3.7145523194784316
best_error: 3.7145522271806173
best_error: 3.4955028352649564
best_error: 3.495502819736579
best_error: 3.4954955329749167
best_error: 3.4954954789987283
best_error: 3.4944930342297895
best_error: 3.494492980972334
best_error: 3.492366070311389
best_error: 3.4923660633854636
best_error: 3.490991875197506
best_error: 3.490991874682762
best_error: 3.4908412560968918
best_error: 3.4908412130651243
best_error: 3.490747141657944
best_error: 3.490717710355791
best_error: 3.490716393372929
best_error: 3.490716353314191
best_error: 3.4907156272599167
best_error: 3.4907154991532017
best_error: 3.490715459093934
best_error: 3.4907151068105415
best_error: 3.4907150770471835
best_error: 3.4907150746389988
best_error: 3.490715072765363
best_error: 3.4907150724453913
best_error: 3.4907150722618803
