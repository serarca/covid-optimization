ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 95.89609297699474
best_error: 95.89609287900936
best_error: 95.89609284974117
best_error: 95.89609281029519
best_error: 17.7825673876036
best_error: 17.78256707861633
best_error: 17.78256492324674
best_error: 14.865888414677567
best_error: 14.865888414342102
best_error: 14.865888384848462
best_error: 14.809320409669635
best_error: 14.8093204093099
best_error: 14.809320377504571
best_error: 14.541106533404182
best_error: 14.541106532985076
best_error: 14.541106488611522
best_error: 11.179475081154328
best_error: 11.179474702903391
best_error: 9.504860800120023
best_error: 9.504860559524559
best_error: 9.225902884531756
best_error: 9.225902679761623
best_error: 8.827092205352493
best_error: 8.827092124818835
best_error: 8.808799869611535
best_error: 8.808799819218276
best_error: 8.803528468423744
best_error: 8.803528468423304
best_error: 8.803528460362076
best_error: 8.803528444238282
best_error: 8.757547227334735
best_error: 8.757547227334067
best_error: 8.757547218864271
best_error: 8.75754720435286
best_error: 8.495113675944074
best_error: 8.495113592167183
best_error: 8.358862426266763
best_error: 8.358862385529248
best_error: 8.358862384888237
best_error: 8.296543086453243
best_error: 8.296543086451864
best_error: 8.296543075208316
best_error: 8.296543056444222
best_error: 7.9754245285140355
best_error: 7.975424494199123
best_error: 7.394948679119528
best_error: 7.394948674341141
best_error: 7.3949486441453995
best_error: 7.214380174350763
best_error: 7.214379776944201
best_error: 7.033249158684922
best_error: 7.033249139909302
best_error: 7.015415459548207
best_error: 7.0154154462255685
best_error: 7.012967159483655
best_error: 7.012966934823713
best_error: 7.01124483852739
best_error: 7.011244826191174
best_error: 7.011138289564213
best_error: 7.01113827722998
best_error: 7.011114189058619
best_error: 7.011114176724896
best_error: 7.011107023472858
best_error: 7.011107011139276
best_error: 7.01110401585567
best_error: 7.011104003522148
best_error: 7.011103037507325
best_error: 7.011102812975706
best_error: 7.007704266823889
best_error: 7.007704259309192
best_error: 7.000469203292693
best_error: 7.000469197765405
best_error: 7.000469195246298
best_error: 6.984805225717002
best_error: 6.984805216878138
best_error: 6.984805215793763
best_error: 6.981923977171393
best_error: 6.981923962113794
best_error: 6.98142512826483
best_error: 6.981425113789833
best_error: 6.980402165323431
best_error: 6.980402152189416
best_error: 6.976912844723548
best_error: 6.976912832872222
best_error: 6.950748376758718
best_error: 6.950748371851363
best_error: 6.950748369462206
best_error: 6.934612272685538
best_error: 6.934612271527393
best_error: 6.934612257674151
best_error: 6.925592373255348
best_error: 6.925592369826809
best_error: 6.925592368194415
best_error: 6.925092087461355
best_error: 6.925092083974189
best_error: 6.9250920824488125
best_error: 6.924771858578479
best_error: 6.924771855249843
best_error: 6.924771855190884
best_error: 6.924771853557695
best_error: 6.924140290951447
best_error: 6.92414028760559
best_error: 6.924140287575134
best_error: 6.924140285926194
best_error: 6.918061402106286
best_error: 6.918061395500328
best_error: 6.914027230929532
best_error: 6.914027226624984
best_error: 6.911908975613757
best_error: 6.911908971306288
best_error: 6.910621637551612
best_error: 6.910621633741844
best_error: 6.9102059976331764
best_error: 6.910205993687127
best_error: 6.9099382956989555
best_error: 6.909938291754477
best_error: 6.90977325190518
best_error: 6.909773248750543
best_error: 6.909675389263549
best_error: 6.90967538610312
best_error: 6.909613030000532
best_error: 6.909613026840514
best_error: 6.909569842100911
best_error: 6.909569838941181
best_error: 6.909544478609762
best_error: 6.909544475450202
best_error: 6.9094490376866045
best_error: 6.909448710521811
best_error: 6.9036715495535095
best_error: 6.903671212793805
best_error: 6.849789156487827
best_error: 6.849789081700528
best_error: 6.8438582192453
best_error: 6.843858196144958
best_error: 6.841895414557093
best_error: 6.841895340532934
best_error: 6.841429677721529
best_error: 6.841429654019189
best_error: 6.84141536982694
best_error: 6.841415346122792
best_error: 6.841413532042039
best_error: 6.841413458212955
best_error: 6.8414125564152135
best_error: 6.841412532710709
best_error: 6.8414125327107085
best_error: 6.841412532710708
best_error: 6.841412532710704
