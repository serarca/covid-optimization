ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.154322354994887
best_error: 10.154322344322132
best_error: 5.533336718067453
best_error: 5.533336704086514
best_error: 5.525271604379091
best_error: 5.525271525920591
best_error: 5.092041138417921
best_error: 5.092041138417331
best_error: 5.092041127299124
best_error: 4.130578748886904
best_error: 4.130578747068985
best_error: 4.130578734136867
best_error: 4.111890191275802
best_error: 4.111890189795359
best_error: 4.111890176140668
best_error: 4.032666364639749
best_error: 4.032666363870151
best_error: 4.032666347794456
best_error: 3.8173837302028604
best_error: 3.8173835700427907
best_error: 3.798680897742672
best_error: 3.7971556041687493
best_error: 3.797155597380064
best_error: 3.796743393196949
best_error: 3.796743384299048
best_error: 3.7964446432174874
best_error: 3.796444632686465
best_error: 3.7964215251200835
best_error: 3.79642151462116
best_error: 3.7964084293622413
best_error: 3.796408418780895
best_error: 3.7963881356590377
best_error: 3.796388125062889
best_error: 3.7963778470201133
best_error: 3.7963778462040856
best_error: 3.7963674242864216
best_error: 3.7963674137495134
best_error: 3.7963655276824384
best_error: 3.7963655171448467
best_error: 3.7963639046460584
best_error: 3.796363894107891
best_error: 3.796362642803224
best_error: 3.7963626322646014
best_error: 3.7963616680005527
best_error: 3.796361657461584
best_error: 3.7963602346531564
best_error: 3.796360224113671
best_error: 3.7963595019294742
best_error: 3.7963594913897323
best_error: 3.796359236656612
best_error: 3.7963592358395934
best_error: 3.796359219814368
best_error: 3.7963592092745224
best_error: 3.7963578852559103
best_error: 3.7963578747155835
best_error: 3.7963577827599417
best_error: 3.796357772219578
best_error: 3.7963577084864566
best_error: 3.7963576979460725
best_error: 3.796357576908684
best_error: 3.796357566368252
best_error: 3.7963575211873724
best_error: 3.796357510646916
best_error: 3.796357493208208
best_error: 3.796357482667747
best_error: 3.796357437568619
best_error: 3.796357427028137
best_error: 3.7963574147518644
best_error: 3.796357404211375
best_error: 3.7963573965727044
best_error: 3.7963573928541705
best_error: 3.7963573920720726
best_error: 3.796294536489711
best_error: 3.796294526973097
best_error: 3.7962593030891063
best_error: 3.796259294560829
best_error: 3.796254285806035
best_error: 3.7962542776245067
best_error: 3.7962490098874833
best_error: 3.796249002139489
best_error: 3.7962379918376135
best_error: 3.7962379840714773
best_error: 3.796035859882012
best_error: 3.7960358532962095
best_error: 3.795573998847845
best_error: 3.7955739919197797
best_error: 3.795306260399093
best_error: 3.7953062513455316
best_error: 3.7952530106655744
best_error: 3.795253001321766
best_error: 3.7952385492660667
best_error: 3.795238539814322
best_error: 3.7951557206931206
best_error: 3.7951557112909944
best_error: 3.7951058061804575
best_error: 3.7951057968450983
best_error: 3.7950671182139666
best_error: 3.7950671088675656
best_error: 3.7950357581138023
best_error: 3.795035748929107
best_error: 3.7950023059004154
best_error: 3.79500229686663
best_error: 3.7949614132154315
best_error: 3.7949614044763313
best_error: 3.7949277288058183
best_error: 3.7949277202287917
best_error: 3.7949226614332607
best_error: 3.7949226528531654
best_error: 3.7949193347701984
best_error: 3.794919326176037
best_error: 3.7949124049378264
best_error: 3.794912396339446
best_error: 3.794909440371079
best_error: 3.794909431856829
best_error: 3.7949075757142623
best_error: 3.794907567198866
best_error: 3.7949067859378105
best_error: 3.794906777421931
best_error: 3.794906510777623
best_error: 3.7949065022615764
best_error: 3.794906018255179
best_error: 3.7949060097388925
best_error: 3.7949058069802737
best_error: 3.7949057984638834
best_error: 3.794905745435634
best_error: 3.794905736919212
best_error: 3.794905704669966
best_error: 3.7949056961535277
best_error: 3.7949056191855997
best_error: 3.7949056106691224
best_error: 3.794905582846197
best_error: 3.794905574329701
best_error: 3.7949055713433486
best_error: 3.794905562826848
best_error: 3.7949055346739256
best_error: 3.7949055346684455
best_error: 3.794905533416737
best_error: 3.7949037643199093
best_error: 3.7949037558049583
best_error: 3.7949035126957433
best_error: 3.7949035041966956
best_error: 3.7949034895227705
best_error: 3.7949034810097118
best_error: 3.7949034599218114
best_error: 3.7949034514223134
best_error: 3.7949034474774557
best_error: 3.7949034389657017
best_error: 3.7949030716217997
best_error: 3.7949030631094245
best_error: 3.7949030047983383
best_error: 3.7949029962858525
best_error: 3.7949029459889507
best_error: 3.7949029374763663
best_error: 3.794902900734346
best_error: 3.7949028922216868
best_error: 3.794902864120531
best_error: 3.7949028556078175
best_error: 3.7949028059071863
best_error: 3.7949027973943714
best_error: 3.794902774082267
best_error: 3.7949027655693994
best_error: 3.7949027322036293
best_error: 3.794902731972192
best_error: 3.7949026986652377
best_error: 3.7949026901522442
best_error: 3.794902687535815
best_error: 3.7949026790228038
best_error: 3.794902677230951
best_error: 3.7949026772253207
best_error: 3.7949026770823813
best_error: 3.7949026728516193
