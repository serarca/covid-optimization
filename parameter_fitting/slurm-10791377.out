ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.99001637465739
best_error: 9.990016345605346
best_error: 9.28835157896398
best_error: 9.288351506712477
best_error: 7.293065484028382
best_error: 7.293065257377298
best_error: 5.690173745831851
best_error: 5.690173463445883
best_error: 5.377109925796608
best_error: 5.377109876239421
best_error: 5.377109747761844
best_error: 5.343818938149585
best_error: 5.343818876527868
best_error: 5.343818784036365
best_error: 4.53014406290735
best_error: 4.530144004738457
best_error: 4.530143925529835
best_error: 4.321264584494229
best_error: 4.3212645208803595
best_error: 4.072966568951492
best_error: 4.072966480539089
best_error: 3.6716205291499904
best_error: 3.671620525308552
best_error: 3.6716205048228403
best_error: 3.653508230712172
best_error: 3.6535081849701934
best_error: 3.6396841716080415
best_error: 3.6396841135159326
best_error: 3.6288929738789606
best_error: 3.628892972633863
best_error: 3.628892966312507
best_error: 3.624879233424424
best_error: 3.6248792305591486
best_error: 3.6248792258528852
best_error: 3.618774620785733
best_error: 3.6187745697056726
best_error: 3.5973148501901484
best_error: 3.597314804537016
best_error: 3.533670237566433
best_error: 3.5336702187392093
best_error: 3.494179709104732
best_error: 3.4941796508090506
best_error: 3.4257445543374394
best_error: 3.4257444734180056
best_error: 3.3412591124219633
best_error: 3.34125907671737
best_error: 3.22031409159566
best_error: 3.2203139929134936
best_error: 3.2133087344955795
best_error: 3.2133087343898827
best_error: 3.212241100385396
best_error: 3.2122410997379367
best_error: 3.2113448458466136
best_error: 3.2113447211380874
best_error: 3.2057330970242233
best_error: 3.2057329772442555
best_error: 3.1946603285788937
best_error: 3.1946603252173356
best_error: 3.191254040934334
best_error: 3.191254024444093
best_error: 3.190544732386148
best_error: 3.1905447276065813
best_error: 3.1882320927114787
best_error: 3.188232090493652
best_error: 3.1880881198679694
best_error: 3.1880881188281016
best_error: 3.1880695303884625
best_error: 3.188069529533271
best_error: 3.1880471294808617
best_error: 3.1880471294350277
best_error: 3.187989928046196
best_error: 3.1879899278459667
best_error: 3.187961091927876
best_error: 3.1879610917382637
best_error: 3.1878200368735223
best_error: 3.1878200366586826
best_error: 3.1878168569159056
best_error: 3.1878168566974727
best_error: 3.1878155455012314
best_error: 3.18781554528289
best_error: 3.187814311393205
best_error: 3.187814311198005
best_error: 3.187809614333656
best_error: 3.1878096141387666
best_error: 3.187806555759997
best_error: 3.1878065555003317
best_error: 3.1878055524908717
best_error: 3.18780555223135
best_error: 3.1878045723294286
best_error: 3.187804572070025
best_error: 3.187803986705133
best_error: 3.187803986445816
best_error: 3.187803418515457
best_error: 3.187803418256208
best_error: 3.187802963646263
best_error: 3.187802963387074
best_error: 3.1878025337463223
best_error: 3.187802533487196
best_error: 3.187800541523999
best_error: 3.187800541288799
best_error: 3.187798182014521
best_error: 3.187798072130877
best_error: 3.187796108101118
best_error: 3.1877961078665145
best_error: 3.187794765933223
best_error: 3.187794765698794
best_error: 3.1877946206256835
best_error: 3.187794620391272
best_error: 3.187794478340229
best_error: 3.1877944781058356
best_error: 3.1877944063119616
best_error: 3.1877944060775727
best_error: 3.1877943358074203
best_error: 3.1877943355730425
best_error: 3.1877942999194353
best_error: 3.18779429968506
best_error: 3.1877942648054534
best_error: 3.1877942645710813
best_error: 3.187794246678734
best_error: 3.1877942464443656
best_error: 3.1877942289566485
best_error: 3.187794228722276
best_error: 3.1877942195380315
best_error: 3.187794219303677
best_error: 3.187794210344592
best_error: 3.1877942101102277
best_error: 3.1877942051280312
best_error: 3.1877942048936623
best_error: 3.187794201166388
best_error: 3.1877942009320295
