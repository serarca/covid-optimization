ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 80
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 20.813379782100505
best_error: 20.813379688283643
best_error: 4.378799237151047
best_error: 4.378799235577572
best_error: 4.373211415977498
best_error: 4.373211415834294
best_error: 4.37321141459475
best_error: 4.350099851776762
best_error: 4.350099851614476
best_error: 4.350099850347706
best_error: 4.243724736605797
best_error: 4.243724736337287
best_error: 4.24372473495627
best_error: 4.134482264820301
best_error: 4.134482264402982
best_error: 4.1344822629339895
best_error: 4.122170141372742
best_error: 4.12217014093415
best_error: 4.1221701394618275
best_error: 4.067845240742619
best_error: 4.067845240201135
best_error: 4.067845238721002
best_error: 3.7052233062540476
best_error: 3.705223304406262
best_error: 3.705223303415936
best_error: 3.35462958583469
best_error: 3.3546295807073956
best_error: 3.160326201327951
best_error: 3.16032617120113
best_error: 3.0775475802449614
best_error: 3.077547579081002
best_error: 3.0775475723914694
best_error: 3.070085040828855
best_error: 3.070085025770668
best_error: 3.0566261588296113
best_error: 3.0566261409262454
best_error: 3.048370127545465
best_error: 3.0483701083277293
best_error: 3.0383280296653834
best_error: 3.0383280094758436
best_error: 3.034026151544774
best_error: 3.0340261311081473
best_error: 3.029306260761499
best_error: 3.0293062402751105
best_error: 2.611380692038434
best_error: 2.6113806900145136
best_error: 2.6113806122346803
best_error: 2.173400356601743
best_error: 2.173400198929297
best_error: 2.0737169383008305
best_error: 2.07371678105263
best_error: 2.039876925037609
best_error: 2.039876872452432
best_error: 2.036314018624573
best_error: 2.0363139332236857
best_error: 1.7235182610751403
best_error: 1.7235180679052204
best_error: 1.6915583111632992
best_error: 1.6915582220066374
best_error: 1.6753505868166214
best_error: 1.6753505530768633
best_error: 1.6665708437712496
best_error: 1.6665708330518132
best_error: 1.6605763399908213
best_error: 1.6605763275859076
best_error: 1.653844062197817
best_error: 1.6538440265929593
best_error: 1.5736639580871306
best_error: 1.573663902720164
best_error: 1.5593618240245706
best_error: 1.5593617391894903
best_error: 1.5349103701969922
best_error: 1.5349102938610133
best_error: 1.4782869087846484
best_error: 1.4782868443352586
best_error: 1.331302470748878
best_error: 1.331302337037866
best_error: 1.236511471398949
best_error: 1.2365113109397028
best_error: 1.236509131947205
best_error: 1.2365089714890298
best_error: 1.2289527555509745
best_error: 1.2289525993754908
best_error: 1.221110935133824
best_error: 1.2211108068317582
best_error: 1.1929414781656345
best_error: 1.1929412998899365
best_error: 1.142253164633246
best_error: 1.1422530822261137
best_error: 1.1307337095216674
best_error: 1.1307336356854203
best_error: 1.1052828237172252
best_error: 1.105282789226803
best_error: 1.0941681429031447
best_error: 1.0941681361919995
best_error: 1.0607509766311753
best_error: 1.0607509637442947
best_error: 1.0483671769193819
best_error: 1.0483670460876557
best_error: 0.982952160885799
best_error: 0.9829521113265994
best_error: 0.9632104011466883
best_error: 0.9632103772571852
best_error: 0.950221351002289
best_error: 0.9502213034803576
best_error: 0.948670492229387
best_error: 0.9486704862851792
best_error: 0.9477816977258611
best_error: 0.9477816976083588
best_error: 0.9477816970228826
best_error: 0.9477816964518462
best_error: 0.9470388463258945
best_error: 0.9470388380397097
best_error: 0.942545656253943
best_error: 0.9425456387467335
best_error: 0.9389893159123404
best_error: 0.9389893139854177
best_error: 0.9389892504927448
best_error: 0.9364384804424689
best_error: 0.9364384492991293
best_error: 0.9290327429746265
best_error: 0.9290326534148702
best_error: 0.91712089473064
best_error: 0.9171208339486427
best_error: 0.9008732557413883
best_error: 0.9008731697757899
best_error: 0.8883941425736331
best_error: 0.8883941268103106
best_error: 0.8873785883749296
best_error: 0.8873785882203206
best_error: 0.8873785882173537
best_error: 0.8873785877773378
best_error: 0.8871404353657052
best_error: 0.8871404322000553
best_error: 0.8863190201953651
best_error: 0.8863190116015457
best_error: 0.880138195824727
best_error: 0.8801381934564921
best_error: 0.880138185540301
best_error: 0.8724278491771537
best_error: 0.8724278349288366
best_error: 0.8723512952877313
best_error: 0.8723512706028806
best_error: 0.8696189319989593
best_error: 0.869618912941351
best_error: 0.8672022869901979
best_error: 0.8672022625725213
best_error: 0.8671891495172385
best_error: 0.8671891235685841
best_error: 0.867101520294709
best_error: 0.8671014932233223
best_error: 0.865912410739706
best_error: 0.865912395896627
best_error: 0.8654469503836009
best_error: 0.8654469108676511
best_error: 0.8638200762332634
best_error: 0.8638200723002544
best_error: 0.8627494173081952
best_error: 0.8627493888255944
best_error: 0.8617918768715653
best_error: 0.8617918667812736
best_error: 0.8611654646562689
best_error: 0.8611654595883549
best_error: 0.8610440562962441
best_error: 0.8610440541152488
best_error: 0.8605575439799047
best_error: 0.8605575417952177
best_error: 0.8605396340975028
best_error: 0.8605396326425336
best_error: 0.8604890376305937
best_error: 0.8604890306326644
best_error: 0.860471729291158
best_error: 0.8604717244091111
best_error: 0.8604499716399943
best_error: 0.8604499693891569
best_error: 0.8604372889119779
best_error: 0.8604372879943954
best_error: 0.8604281614603293
best_error: 0.8604281604175936
best_error: 0.8603994751518371
best_error: 0.860399473476743
best_error: 0.8603934145919822
best_error: 0.8603934145816278
best_error: 0.8603934126171864
best_error: 0.8602740054147947
best_error: 0.8602739982786294
best_error: 0.8598177741211144
best_error: 0.8598177549719835
best_error: 0.8593603736751659
best_error: 0.8593603550203329
best_error: 0.8589781073574856
best_error: 0.8589781065422706
best_error: 0.8588658926836389
best_error: 0.8588658922181616
best_error: 0.8585917744433301
best_error: 0.8585917736891564
best_error: 0.858323351980494
best_error: 0.8583233512103177
best_error: 0.8576167423564094
best_error: 0.8576167416859579
best_error: 0.857492701721896
best_error: 0.8574927016779228
best_error: 0.8574927011727074
best_error: 0.857460855210422
best_error: 0.8574608513409089
best_error: 0.8574258721133456
best_error: 0.857425867421435
best_error: 0.8573654631023883
best_error: 0.8573654582631896
best_error: 0.8572745941452315
best_error: 0.8572745920734782
best_error: 0.856876703265744
best_error: 0.8568766890700907
best_error: 0.855876565021931
best_error: 0.855876526007523
best_error: 0.855868660888641
best_error: 0.855868621147986
best_error: 0.855867746572462
best_error: 0.8558677068470092
best_error: 0.8558675572805814
best_error: 0.8558675172969525
best_error: 0.8552879054846682
best_error: 0.8552878694715578
best_error: 0.8549637968258886
best_error: 0.8549637643725212
best_error: 0.8544508205915097
best_error: 0.8544508175894258
best_error: 0.8543032532329989
best_error: 0.8543032530595283
best_error: 0.8543032527438448
best_error: 0.8542401003386894
best_error: 0.8542400985003892
best_error: 0.8542214498640444
best_error: 0.8542214486254553
best_error: 0.8542088886381319
best_error: 0.8542088883677876
best_error: 0.8542053418458928
best_error: 0.8542053416731217
best_error: 0.8542053416105113
best_error: 0.854202264941713
best_error: 0.8542022648671336
best_error: 0.8542015916766633
best_error: 0.8542015915922512
best_error: 0.8542013293937142
best_error: 0.8542013293281688
best_error: 0.8542009757432735
best_error: 0.854200975675314
best_error: 0.8542007832193106
best_error: 0.8542007826263571
best_error: 0.8542007175506089
best_error: 0.854200717280363
best_error: 0.8541997326408359
best_error: 0.8541997323385929
best_error: 0.854196842189501
best_error: 0.854196842107612
best_error: 0.8541853669991781
best_error: 0.8541853665739958
best_error: 0.8541836043373767
best_error: 0.8541836035257522
best_error: 0.8541758656629038
best_error: 0.8541758647033855
best_error: 0.8541726935306887
best_error: 0.8541726933858466
best_error: 0.8541687701210221
best_error: 0.8541687700062794
best_error: 0.8541646583884617
best_error: 0.8541646578640691
