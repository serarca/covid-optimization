ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.614864648767572
best_error: 23.614863924052315
best_error: 5.081195585215292
best_error: 5.081195585076504
best_error: 5.081192886660366
best_error: 5.08119288665731
best_error: 5.081192886638114
best_error: 5.081182088601449
best_error: 5.081182088598391
best_error: 5.08118208857919
best_error: 5.08113883483209
best_error: 5.081138834829019
best_error: 5.081138834809804
best_error: 5.080964828358523
best_error: 5.080964828355411
best_error: 5.080964828336134
best_error: 5.080252486413787
best_error: 5.080252486410496
best_error: 5.08025248639097
best_error: 5.077108590385673
best_error: 5.0771085903814575
best_error: 5.0771085903608855
best_error: 5.055009295595938
best_error: 5.055009295566578
best_error: 5.0550092955517245
best_error: 5.028526403021387
best_error: 5.028526402768818
best_error: 4.453264169754944
best_error: 4.4532640751317025
best_error: 3.72868873506331
best_error: 3.7286885449711646
best_error: 3.728688472066702
best_error: 3.3922096181173957
best_error: 3.3922095741390614
best_error: 3.386497807269605
best_error: 3.3864977993104755
best_error: 3.3864977209973706
best_error: 3.3861824133110168
best_error: 3.386182411160117
best_error: 3.386182401002928
best_error: 3.3860968968578993
best_error: 3.386096874845986
best_error: 3.3858313162105715
best_error: 3.3858312901091923
best_error: 3.38504223731882
best_error: 3.3850421813926745
best_error: 3.381162808982915
best_error: 3.3811627099589496
best_error: 3.37860400537679
best_error: 3.3786039510925177
best_error: 3.360319175981983
best_error: 3.360319154508527
best_error: 3.3583986409640283
best_error: 3.358398593751855
best_error: 3.35620104662148
best_error: 3.356201025619116
best_error: 3.3556954495950277
best_error: 3.3556954476484147
best_error: 3.3556954455253494
best_error: 3.355433648828148
best_error: 3.3554336430085447
best_error: 3.3552698029022623
best_error: 3.3552697975941017
best_error: 3.3551349344490546
best_error: 3.355134934127476
best_error: 3.3551349339637735
best_error: 3.3551349306689797
best_error: 3.3550997221091983
best_error: 3.3550997206059363
best_error: 3.355099718192268
best_error: 3.3548810662934243
best_error: 3.3548810647508236
best_error: 3.3548810624056693
best_error: 3.351751072256255
best_error: 3.3517510634334915
best_error: 3.341220179856191
best_error: 3.34122016478344
best_error: 3.341220163576777
best_error: 3.3362337794131243
best_error: 3.3362336563588157
best_error: 3.3189070790534054
best_error: 3.318907006664044
best_error: 3.301660992548179
best_error: 3.3016608891962114
best_error: 3.253906383578475
best_error: 3.2539062493682387
best_error: 3.0652322975004376
best_error: 3.065231878681433
best_error: 2.981662335952828
best_error: 2.981662078787855
best_error: 2.90910898896355
best_error: 2.9091089260309344
best_error: 2.881872502812789
best_error: 2.881872338990101
best_error: 2.7845350825910145
best_error: 2.7845350237123436
best_error: 2.6859089285750946
best_error: 2.685908696816912
best_error: 2.659038896204871
best_error: 2.6590388393788937
best_error: 2.2270854406347875
best_error: 2.2270851017685693
best_error: 2.1883062450537154
best_error: 2.1883060989881127
best_error: 2.107882425102853
best_error: 2.1078824163099656
best_error: 2.1078822692657373
best_error: 1.969297114302129
best_error: 1.9692971103674994
best_error: 1.9692971087067503
best_error: 1.941948865930522
best_error: 1.9419488367351443
best_error: 1.9362612800134482
best_error: 1.9362612446728358
best_error: 1.9263470837391299
best_error: 1.9263470528411974
best_error: 1.9257296495800629
best_error: 1.9257296436658107
best_error: 1.9256734493028989
best_error: 1.9256734469306753
best_error: 1.9256293277963368
best_error: 1.9256293266665852
best_error: 1.9256169581973415
best_error: 1.9256169580656601
best_error: 1.9256169580089533
best_error: 1.925616957562828
best_error: 1.9256152948445462
best_error: 1.9256152947901368
best_error: 1.92561529465778
best_error: 1.9256152942095186
best_error: 1.9256142758464339
best_error: 1.9256142756932022
best_error: 1.925614275667308
best_error: 1.9256142752130194
best_error: 1.925612727586991
best_error: 1.9256127266568561
best_error: 1.9256111128583193
best_error: 1.9256111121936206
best_error: 1.9256011647137203
best_error: 1.9256011629006795
best_error: 1.9255871255968793
best_error: 1.9255871240767137
best_error: 1.9255375563748078
best_error: 1.9255375562326333
best_error: 1.925537555753025
best_error: 1.9252308410185999
best_error: 1.9252308313453788
best_error: 1.9251130699182908
best_error: 1.9251130647727832
best_error: 1.9250528770506974
best_error: 1.9250528735889043
best_error: 1.925049659731099
best_error: 1.925049658594822
best_error: 1.9250493082690305
best_error: 1.9250493080314806
best_error: 1.9250493076374555
best_error: 1.92504906911009
best_error: 1.925049068913575
best_error: 1.9250490684784571
best_error: 1.925047781974597
best_error: 1.9250477817864768
best_error: 1.9250477813404487
best_error: 1.9250469622023467
best_error: 1.9250469616619363
best_error: 1.9250469615646446
best_error: 1.9250417116727363
best_error: 1.925041711297506
best_error: 1.925041711044286
best_error: 1.9250147340259567
best_error: 1.9250147319130209
best_error: 1.9249320811520931
best_error: 1.9249320760161717
best_error: 1.9248153853197767
best_error: 1.9248153747520542
best_error: 1.924601867672888
best_error: 1.924601854466756
best_error: 1.9230914945392437
best_error: 1.923091469915043
best_error: 1.9194164287552928
best_error: 1.9194163900453658
best_error: 1.916961332106318
best_error: 1.9169612754163317
best_error: 1.9123117823714426
best_error: 1.912311736266431
best_error: 1.9066931417914597
best_error: 1.9066931278152748
best_error: 1.9061668568596482
best_error: 1.906166845024592
best_error: 1.9059746325488802
best_error: 1.905974614767881
best_error: 1.9052348473341767
best_error: 1.9052348279579987
best_error: 1.9051226588061596
best_error: 1.9051226560416765
best_error: 1.9050786830733943
best_error: 1.905078682723549
best_error: 1.9050786824000299
best_error: 1.9050737129145956
best_error: 1.9050737126155481
best_error: 1.9050737126090698
best_error: 1.905073712240286
best_error: 1.9050730554869963
best_error: 1.9050730551365689
best_error: 1.905073054809809
best_error: 1.905073013813814
best_error: 1.9050730135432992
best_error: 1.9050730135073666
best_error: 1.9050730131393043
best_error: 1.905072958677046
best_error: 1.9050729584060526
best_error: 1.9050729583705754
best_error: 1.9050729580025398
best_error: 1.9050728656330407
best_error: 1.9050728653066478
best_error: 1.9050728649567574
best_error: 1.9050726090761243
best_error: 1.9050726089466214
best_error: 1.90507260885979
best_error: 1.905072608756508
best_error: 1.9050726083990381
best_error: 1.9050714195993064
best_error: 1.905071419589936
best_error: 1.9050714190737152
best_error: 1.905071418921227
best_error: 1.9050656265138983
best_error: 1.9050656223013298
best_error: 1.905061476460048
best_error: 1.9050614725661918
best_error: 1.9050458453365837
best_error: 1.9050458425108132
best_error: 1.9049525274123216
best_error: 1.9049525217767347
best_error: 1.9049367073301362
best_error: 1.904936701110791
best_error: 1.9048200332297451
best_error: 1.9048200208774038
best_error: 1.9046028911314188
best_error: 1.9046028745879309
best_error: 1.9039791742231884
best_error: 1.903979155047851
best_error: 1.9033745537101923
best_error: 1.9033745511367208
best_error: 1.9033745066033432
best_error: 1.9024451417319157
best_error: 1.9024451288654916
best_error: 1.9024451234702713
best_error: 1.9011991205035053
best_error: 1.9011991039763305
best_error: 1.8998990126147877
best_error: 1.8998989987470716
best_error: 1.8994811252088626
best_error: 1.8994811238013205
best_error: 1.8994810958993238
best_error: 1.8993048531368906
best_error: 1.8993048102205656
best_error: 1.898992842119958
best_error: 1.89899278247721
best_error: 1.8985364587721163
best_error: 1.8985363810002185
best_error: 1.897850373631404
best_error: 1.8978502740643117
best_error: 1.8963881807057865
best_error: 1.8963880680786993
best_error: 1.8963880435321678
best_error: 1.8943756943669354
best_error: 1.8943755916375178
best_error: 1.8943750489668871
best_error: 1.8943664272010832
best_error: 1.8943663133529571
best_error: 1.8937955164257188
best_error: 1.8937954127866439
best_error: 1.8909390906707764
best_error: 1.8909389598657698
best_error: 1.8890599612894006
best_error: 1.8890599495893334
best_error: 1.8890599313946115
best_error: 1.886763871933284
best_error: 1.886763865135049
best_error: 1.886622811647461
best_error: 1.886622810416292
best_error: 1.8863265606796815
best_error: 1.886326557736047
best_error: 1.8862072240453642
best_error: 1.8862072237365952
best_error: 1.886207223153842
