ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.717276750590635
best_error: 24.717276506317067
best_error: 4.827669572176187
best_error: 4.8276695712872
best_error: 4.827340257098782
best_error: 4.827340257089344
best_error: 4.827340257020983
best_error: 4.826014845659774
best_error: 4.82601484565014
best_error: 4.826014845581515
best_error: 4.820571398251639
best_error: 4.820571398241156
best_error: 4.820571398171465
best_error: 4.795967039961811
best_error: 4.79596703994635
best_error: 4.795967039872408
best_error: 4.570670520328722
best_error: 4.57067051974862
best_error: 4.510859257816728
best_error: 4.510859256631745
best_error: 4.438143648820753
best_error: 4.438143646429505
best_error: 3.009465803610403
best_error: 3.0094657408276886
best_error: 2.997782490424299
best_error: 2.9977824595311904
best_error: 2.9859336715990095
best_error: 2.985933640030232
best_error: 2.930478272413152
best_error: 2.9304782287421527
best_error: 2.4551861956034
best_error: 2.4551861016932537
best_error: 2.42450041208999
best_error: 2.42450030137848
best_error: 2.3230093335224775
best_error: 2.3230092403849207
best_error: 2.250784294732168
best_error: 2.2507842470899257
best_error: 2.2403594783988576
best_error: 2.2403594610907014
best_error: 2.2397621473890448
best_error: 2.239762143880798
best_error: 2.2397621387508178
best_error: 2.2387480873891894
best_error: 2.2387480813721035
best_error: 2.2387480785054517
best_error: 2.233578359540358
best_error: 2.2335783226144366
best_error: 2.2218608499272166
best_error: 2.221860786580569
best_error: 2.101401546550604
best_error: 2.101401453840321
best_error: 1.8458394573415708
best_error: 1.8458393625139662
best_error: 1.8079893559190474
best_error: 1.8079892161168598
best_error: 1.7668972236631202
best_error: 1.7668971438164698
best_error: 1.6197646511716648
best_error: 1.6197646262754373
best_error: 1.619764508672219
best_error: 1.5804631635683426
best_error: 1.5804630974820746
best_error: 1.5582624061075387
best_error: 1.5582623125131725
best_error: 1.5440441490032952
best_error: 1.5440440783930012
best_error: 1.5412213409896853
best_error: 1.541221320359871
best_error: 1.5412212774420952
best_error: 1.5284128059652966
best_error: 1.5284127674575536
best_error: 1.511097828665617
best_error: 1.5110977904354177
best_error: 1.4941264474458675
best_error: 1.4941264347776961
best_error: 1.4924005049129736
best_error: 1.4924004451566342
best_error: 1.4891386933278428
best_error: 1.489138691714496
best_error: 1.4891386881633346
best_error: 1.4877647319550578
best_error: 1.487764730057186
best_error: 1.4876964564003203
best_error: 1.487696454500578
best_error: 1.4876052755399984
best_error: 1.4876052711142567
best_error: 1.4872437941817103
best_error: 1.4872437780485837
best_error: 1.486594137193305
best_error: 1.4865941079378215
best_error: 1.4847915636491913
best_error: 1.4847915194334311
best_error: 1.4744229920983511
best_error: 1.4744228966335342
best_error: 1.4610296015109312
best_error: 1.4610294923049367
best_error: 1.4583940103859336
best_error: 1.4583939652925506
best_error: 1.4532075513930423
best_error: 1.4532075306438395
best_error: 1.4519204654182958
best_error: 1.4519204366683502
best_error: 1.4489135966636206
best_error: 1.4489135681641638
best_error: 1.4479590787656595
best_error: 1.447959078456977
best_error: 1.4479590732969256
best_error: 1.4476037205802592
best_error: 1.4476037145035912
best_error: 1.4462709568324812
best_error: 1.4462709381889192
best_error: 1.444126697611658
best_error: 1.4441266659270102
best_error: 1.4439948203472206
best_error: 1.4439948059904821
best_error: 1.443931343059002
best_error: 1.4439313292889913
best_error: 1.4433087552244188
best_error: 1.4433087549255208
best_error: 1.4433087545387497
best_error: 1.4433087532723328
best_error: 1.4419633257032831
best_error: 1.4419633256006887
best_error: 1.4419633249485275
best_error: 1.4419633246665575
best_error: 1.4414782982108483
best_error: 1.4414782808995619
best_error: 1.4413766876210832
best_error: 1.441376687385469
best_error: 1.4413766868318896
best_error: 1.4413723348449132
best_error: 1.4413723345871063
best_error: 1.4413723340455848
best_error: 1.4413643875592692
best_error: 1.441364386681271
best_error: 1.441341369849189
best_error: 1.4413413643225512
best_error: 1.4412856451538443
best_error: 1.441285644496561
best_error: 1.44128563971533
best_error: 1.4408539467688908
best_error: 1.4408539417953983
best_error: 1.440853941536294
best_error: 1.4400026021599055
best_error: 1.4400025954346096
best_error: 1.44000259222085
best_error: 1.4371654739419766
best_error: 1.4371654664762818
best_error: 1.4371654544366805
best_error: 1.4310735909582073
best_error: 1.4310735729265573
best_error: 1.4310735652993907
best_error: 1.4302454962086701
best_error: 1.4302454731561225
best_error: 1.4302451775103995
best_error: 1.4302451544468429
best_error: 1.4302361174406848
best_error: 1.430236094737935
best_error: 1.4300158150871072
best_error: 1.4300157964530331
best_error: 1.4300157887434874
best_error: 1.4275458089408186
best_error: 1.4275457841987076
best_error: 1.4256203384917785
best_error: 1.4256203159945378
best_error: 1.4151467993343487
best_error: 1.415146779306501
best_error: 1.4138276741303284
best_error: 1.4138276740472417
best_error: 1.4118011428993904
best_error: 1.4118011203211749
best_error: 1.4111163113447207
best_error: 1.4105111903307326
best_error: 1.4105111827900148
best_error: 1.4099023733052558
best_error: 1.4099023596405196
best_error: 1.4094389677025014
best_error: 1.409438965701606
best_error: 1.409407670179133
best_error: 1.409407665764597
best_error: 1.40929878317133
best_error: 1.4092987816966576
best_error: 1.4092225613957419
best_error: 1.4092225571408417
best_error: 1.4091167797763564
best_error: 1.4091167697345812
best_error: 1.4090269223125487
best_error: 1.4090269083629743
best_error: 1.408749984990696
best_error: 1.408749967118162
best_error: 1.4075977767555625
best_error: 1.407597746296511
best_error: 1.4058810959197843
best_error: 1.4058810443582757
best_error: 1.404535217044211
best_error: 1.4045351474277592
best_error: 1.40194964956132
best_error: 1.4019496143857326
best_error: 1.4002932480414987
best_error: 1.4002932431167485
best_error: 1.3992759297188895
best_error: 1.3992759263998846
best_error: 1.3989852704969223
best_error: 1.3989852655513924
best_error: 1.3989581662505537
best_error: 1.3989581661365107
best_error: 1.3989581660195918
best_error: 1.3989077975321362
best_error: 1.398907797241567
best_error: 1.3987902144071382
best_error: 1.3987902143392168
best_error: 1.3987902139743562
best_error: 1.3985141077906933
best_error: 1.398514104870334
best_error: 1.398191206257787
best_error: 1.3981912045113862
best_error: 1.397983722843922
best_error: 1.3979837055409265
best_error: 1.397421285952898
best_error: 1.397421285592979
best_error: 1.3974212855604917
best_error: 1.3974212849756762
best_error: 1.3974212848929257
best_error: 1.39679545738508
best_error: 1.3967954568950478
best_error: 1.39679545678273
best_error: 1.3967954557320934
best_error: 1.3959979815225034
best_error: 1.3959979795236779
best_error: 1.3941785402415154
best_error: 1.3941785349100948
best_error: 1.3941716264388475
best_error: 1.3941716139169205
best_error: 1.3932002069079357
best_error: 1.3932001820790054
best_error: 1.3929299241805808
best_error: 1.3929299238873583
best_error: 1.3929299234782169
best_error: 1.3928225443392832
best_error: 1.3928225418714744
best_error: 1.3927348181664185
best_error: 1.3927348137833602
best_error: 1.3926977613594402
best_error: 1.3926977590750371
best_error: 1.392691426876241
best_error: 1.3926914267977162
best_error: 1.3926895423938774
best_error: 1.3926895421440424
best_error: 1.3926893682213046
best_error: 1.3926893680580588
best_error: 1.3926892400209971
best_error: 1.3926892399390483
best_error: 1.3926892238724033
best_error: 1.3926892234748462
