ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.015317054959905
best_error: 8.015316662823702
best_error: 7.096258946101637
best_error: 7.096258555110722
best_error: 6.24958580025415
best_error: 6.249585385249491
best_error: 5.609488783777929
best_error: 5.609488372559755
best_error: 5.567387967330193
best_error: 5.567387556408544
best_error: 5.555374958928686
best_error: 5.5553747544199155
best_error: 5.553932406701206
best_error: 5.553931995026379
best_error: 5.546040047115067
best_error: 5.546039633675121
best_error: 5.53812352967245
best_error: 5.538123114918408
best_error: 5.5373270886632024
best_error: 5.537326673776985
best_error: 5.537308239982818
best_error: 5.537307825093522
best_error: 5.537303521197874
best_error: 5.537303106307803
best_error: 5.53730051911499
best_error: 5.537300518636185
best_error: 5.537300516694163
best_error: 5.537300488744952
best_error: 5.534143160996127
best_error: 5.534142729041541
best_error: 5.534125830028293
best_error: 5.534125398078788
best_error: 5.534065828375058
best_error: 5.5340653980350005
best_error: 5.527099415736682
best_error: 5.527098990050705
best_error: 5.524319311037385
best_error: 5.524318885054933
best_error: 5.52147193881083
best_error: 5.521471514425528
best_error: 5.518472812532787
best_error: 5.5184723888625555
best_error: 5.518248592042739
best_error: 5.518248388220182
best_error: 5.5180132124933134
best_error: 5.518012788754033
best_error: 5.516098547592931
best_error: 5.516098124689033
best_error: 5.515250301014287
best_error: 5.515250097499825
best_error: 5.515029021793402
best_error: 5.515028598712666
best_error: 5.5149060560795515
best_error: 5.5149056329785004
best_error: 5.514880369202157
best_error: 5.514879946096864
best_error: 5.514863645464998
best_error: 5.514863222356935
best_error: 5.514853369078475
best_error: 5.5148529459687055
best_error: 5.514846671694277
best_error: 5.5148462485834
best_error: 5.514842534620906
best_error: 5.514842111509356
best_error: 5.514839887945216
best_error: 5.514839464833227
best_error: 5.514838212595043
best_error: 5.5148377894827885
best_error: 5.514837169721636
best_error: 5.514836746609198
best_error: 5.51483648675271
best_error: 5.514836063640158
best_error: 5.514835655294012
best_error: 5.514835379553642
best_error: 5.5148353352138635
best_error: 5.514835244889769
best_error: 5.514835041378477
best_error: 5.23651149405523
best_error: 5.2365113220619905
best_error: 5.224149927623374
best_error: 5.224149767440586
best_error: 5.223493647293271
best_error: 5.223493486583193
best_error: 5.22162040982186
best_error: 5.22162024568957
best_error: 5.219562498585065
best_error: 5.219562334897082
best_error: 5.217503782584232
best_error: 5.217503622509529
best_error: 5.217471477534096
best_error: 5.2174713174310705
best_error: 5.217396523882536
best_error: 5.217396363666429
best_error: 5.217378393240805
best_error: 5.217378232995616
best_error: 5.151048921701588
best_error: 5.151048302359776
best_error: 5.095081204137276
best_error: 5.095081069233056
best_error: 5.088779178649839
best_error: 5.088778491967968
best_error: 5.02321664277939
best_error: 5.023216024013981
best_error: 5.019342905793312
best_error: 5.019342288157079
best_error: 5.01795973247625
best_error: 5.017959117157643
best_error: 5.0173716682703855
best_error: 5.017371052928969
best_error: 5.017239001061566
best_error: 5.017238833747182
best_error: 5.01714401296535
best_error: 5.017143397633295
best_error: 5.01247085918731
best_error: 5.012470686858277
best_error: 5.0104905075499016
best_error: 5.010489906826653
best_error: 5.006226425154542
best_error: 5.0062262486475255
best_error: 5.006115407153821
best_error: 5.006114813945578
best_error: 4.999666669119845
best_error: 4.999666491402893
best_error: 4.9991851692755125
best_error: 4.999184586729872
best_error: 4.995486392554037
best_error: 4.995486211858889
best_error: 4.992841675586261
best_error: 4.992841495702271
best_error: 4.987263340703958
best_error: 4.987262694204965
best_error: 4.95991738131995
best_error: 4.959917215476924
best_error: 4.9545083384070345
best_error: 4.954508175595772
best_error: 4.952587630176417
best_error: 4.952586998264129
best_error: 4.948586675499843
best_error: 4.94858653985686
best_error: 4.941953189076014
best_error: 4.941953025524679
best_error: 4.935947158655032
best_error: 4.935946995330305
best_error: 4.9336591121685025
best_error: 4.933658482321416
best_error: 4.898431757582479
best_error: 4.898431589893654
best_error: 4.887847211476809
best_error: 4.8878466029971825
best_error: 4.887613732398881
best_error: 4.887613564886351
best_error: 4.887496321395965
best_error: 4.887495712898416
best_error: 4.887486437334171
best_error: 4.887485828836125
best_error: 4.887482152998182
best_error: 4.88748154449989
best_error: 4.887481482245123
best_error: 4.887481427703575
best_error: 4.887480819205245
best_error: 4.887480757396918
best_error: 4.887480755959311
best_error: 4.88748075113493
best_error: 4.887480735557977
best_error: 4.887480734446141
best_error: 4.887480733008511
