ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.582088818194219
best_error: 13.582088806838366
best_error: 13.582088801191805
best_error: 13.566622920338727
best_error: 13.566622907909318
best_error: 13.566622902077558
best_error: 13.070139158042588
best_error: 13.070139101250772
best_error: 13.07013909538707
best_error: 11.571581683852909
best_error: 11.571581460671855
best_error: 9.867008602377698
best_error: 9.86700818538033
best_error: 7.835118275277397
best_error: 7.835117659330456
best_error: 6.11688507134871
best_error: 6.116884661471083
best_error: 5.906287825099689
best_error: 5.906287510388191
best_error: 5.852565108420102
best_error: 5.852564834309739
best_error: 5.451961456103981
best_error: 5.451961035083931
best_error: 5.277156202247629
best_error: 5.2771557756336005
best_error: 5.253478875934281
best_error: 5.253478571258686
best_error: 5.234765626677175
best_error: 5.234765195733905
best_error: 5.197811292360413
best_error: 5.197810857722325
best_error: 5.191569743788191
best_error: 5.191569308321014
best_error: 5.190160607745256
best_error: 5.190160305996706
best_error: 5.189082661323626
best_error: 5.189082225419105
best_error: 5.125653231758863
best_error: 5.125652721196406
best_error: 5.1240448481578404
best_error: 5.124044383662173
best_error: 5.1172791643567885
best_error: 5.117278690183576
best_error: 5.113236710756559
best_error: 5.113236208125438
best_error: 5.10838715424791
best_error: 5.108386663058532
best_error: 5.106096904944895
best_error: 5.1060966235599725
best_error: 5.104866387745311
best_error: 5.104865900541955
best_error: 5.102972533751661
best_error: 5.1029720503446825
best_error: 5.10281493990403
best_error: 5.1028146609175185
best_error: 5.102767228676175
best_error: 5.10276674524553
best_error: 5.1023131389250125
best_error: 5.102312869744423
best_error: 5.1021496099787385
best_error: 5.102149112435116
best_error: 5.100943230056481
best_error: 5.100942725678658
best_error: 5.0916522969263935
best_error: 5.091652039975188
best_error: 5.090272765788431
best_error: 5.090272508200854
best_error: 5.086121146793019
best_error: 5.086120874506346
best_error: 5.085965941722577
best_error: 5.085965665197575
best_error: 5.0858956405486815
best_error: 5.085895362055904
best_error: 5.085807265481399
best_error: 5.085806981060445
best_error: 5.085396751230341
best_error: 5.085396466830952
best_error: 5.083778789268677
best_error: 5.083778504157953
best_error: 5.077766716176561
best_error: 5.077766427372037
best_error: 5.074877367240297
best_error: 5.074877072566471
best_error: 5.074782231132888
best_error: 5.07478175642062
best_error: 5.053886497270787
best_error: 5.053886228295751
best_error: 5.051636602744594
best_error: 5.051636321058113
best_error: 5.051480880923641
best_error: 5.05148059972608
best_error: 5.05037675225498
best_error: 5.050376477853273
best_error: 5.049366106143584
best_error: 5.049365820139396
best_error: 5.0452529739118965
best_error: 5.0452526886462525
best_error: 5.039792210038055
best_error: 5.0397917037209545
best_error: 5.020354976646046
best_error: 5.020354698939772
best_error: 5.011049224052426
best_error: 5.011048939011193
best_error: 4.999274191984739
best_error: 4.999273906856928
best_error: 4.976385978761615
best_error: 4.976385406956322
best_error: 4.961107660530489
best_error: 4.961107396731058
best_error: 4.948479210798295
best_error: 4.948478917936772
best_error: 4.930692245456035
best_error: 4.930691967530522
best_error: 4.912393321113488
best_error: 4.912392767686605
best_error: 4.898131731791133
best_error: 4.898131442910657
best_error: 4.8872869075152625
best_error: 4.887286614543697
best_error: 4.866538846791316
best_error: 4.866538528834618
best_error: 4.850110759645018
best_error: 4.850110206761389
best_error: 4.847682149311602
best_error: 4.847681849011542
best_error: 4.835445934137199
best_error: 4.835445638652437
best_error: 4.833163232110433
best_error: 4.833162659010878
best_error: 4.789395442041748
best_error: 4.7893951535188055
best_error: 4.772215000473803
best_error: 4.77221472049476
best_error: 4.769940056145782
best_error: 4.769939443062185
best_error: 4.751522714169785
best_error: 4.751522063375342
best_error: 4.677130203344744
best_error: 4.677129910793304
best_error: 4.671725453957276
best_error: 4.6717251620044085
best_error: 4.670289486620733
best_error: 4.670288862325718
best_error: 4.65425346499339
best_error: 4.654252800487802
best_error: 4.64483220568723
best_error: 4.644831949796604
