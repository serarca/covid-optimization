ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.14882056816913
best_error: 98.14882048407966
best_error: 98.1488204111695
best_error: 17.504498847668547
best_error: 17.50449884766235
best_error: 17.504498835192287
best_error: 17.459324250732855
best_error: 17.45932425072595
best_error: 17.459324236803614
best_error: 17.218027493285362
best_error: 17.218027493257658
best_error: 17.218027470700182
best_error: 15.749581907932656
best_error: 15.74958190607103
best_error: 15.749581748804601
best_error: 12.37053850945099
best_error: 12.370538504496784
best_error: 12.370538440296208
best_error: 12.366022844291118
best_error: 12.366022841246926
best_error: 12.366022838209275
best_error: 12.366022554468039
best_error: 12.337129337642187
best_error: 12.337129334618862
best_error: 12.337129329802117
best_error: 12.337129317254927
best_error: 11.932366522348717
best_error: 11.93236651754775
best_error: 11.93236651175186
best_error: 11.932366500614306
best_error: 11.288421428495639
best_error: 11.288421426198513
best_error: 11.28842142026071
best_error: 11.288421400911457
best_error: 11.221353678678941
best_error: 11.221353650971519
best_error: 11.079275088876138
best_error: 11.07927508177324
best_error: 11.079275059709357
best_error: 10.262956142555026
best_error: 10.26295613158052
best_error: 10.262956120416556
best_error: 10.26295611632376
best_error: 10.07519426309756
best_error: 10.075194260166125
best_error: 10.075194257145483
best_error: 10.075194235684151
best_error: 9.820798060752912
best_error: 9.820798039451862
best_error: 9.403907404518051
best_error: 9.4039074036355
best_error: 9.403907399324721
best_error: 9.403907379596312
best_error: 9.168515095599929
best_error: 9.168515068298426
best_error: 9.068052223362097
best_error: 9.068052029750227
best_error: 9.037060614596424
best_error: 9.037060605787122
best_error: 9.037060594075994
best_error: 9.026471430944476
best_error: 9.0264714232752
best_error: 9.026471410785321
best_error: 9.003201326477477
best_error: 9.00320132262396
best_error: 9.003201299902736
best_error: 8.99279879782663
best_error: 8.99279879499067
best_error: 8.99279876098199
best_error: 8.955604606020778
best_error: 8.955604604964487
best_error: 8.95560454766425
best_error: 8.906721354374561
best_error: 8.906721188959118
best_error: 8.858592363700163
best_error: 8.858592222348186
best_error: 8.858198168403936
best_error: 8.858198155336783
best_error: 8.853273423968648
best_error: 8.85327341101756
best_error: 8.852734734157417
best_error: 8.852734598414136
best_error: 8.850388321967994
best_error: 8.8503883085592
best_error: 8.848716916461596
best_error: 8.848716791216127
best_error: 8.847988775813004
best_error: 8.847988761696426
best_error: 8.847843737209837
best_error: 8.847843618013044
best_error: 8.847794017372067
best_error: 8.847794003229385
best_error: 8.847757286744972
best_error: 8.84775716735704
best_error: 8.84775702930525
best_error: 8.847757014998336
best_error: 8.84775654168158
best_error: 8.847756422266908
best_error: 8.847361325611024
best_error: 8.84736120354152
best_error: 8.843613148651826
best_error: 8.843613135492781
best_error: 8.842857752905608
best_error: 8.842857739709432
best_error: 8.840376430888458
best_error: 8.840376417928509
best_error: 8.82136226946625
best_error: 8.82136225242582
best_error: 8.814590159114307
best_error: 8.814590143304695
best_error: 8.807276080045469
best_error: 8.807276062799247
best_error: 8.802821129168276
best_error: 8.802821110614412
best_error: 8.80118765699361
best_error: 8.801187634468352
best_error: 8.79661043992302
best_error: 8.796610418334762
best_error: 8.7793589478619
best_error: 8.77935892698348
best_error: 8.766971041274893
best_error: 8.766970882259926
best_error: 8.743939055614765
best_error: 8.743939038476128
best_error: 8.694765692680857
best_error: 8.694765678557864
best_error: 8.669668673636341
best_error: 8.6696686656604
best_error: 8.669668660463497
best_error: 8.60870418072536
best_error: 8.608704172755438
best_error: 8.608704169588467
best_error: 8.534307537235293
best_error: 8.534307521702129
best_error: 8.515205349933611
best_error: 8.51520532832102
best_error: 8.479153845671553
best_error: 8.479153821758802
best_error: 8.379195753427876
best_error: 8.379195725641722
best_error: 8.282234977400872
best_error: 8.282234951833251
best_error: 8.23007555078292
best_error: 8.230075548630595
best_error: 8.230075490662198
best_error: 8.208055781562821
best_error: 8.208055771963451
best_error: 8.163801800057811
best_error: 8.16380177654074
best_error: 8.11681878451778
best_error: 8.11681877474404
best_error: 8.089587468198474
best_error: 8.089587303518767
best_error: 8.088634581320635
best_error: 8.0886345672946
best_error: 8.087269518168634
best_error: 8.087269504282727
best_error: 8.086686612558529
best_error: 8.086686598676092
best_error: 8.086418194755574
best_error: 8.08641818087472
best_error: 8.086290659918483
best_error: 8.086290646038389
