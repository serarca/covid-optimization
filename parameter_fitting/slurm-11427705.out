ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.404349616299218
best_error: 25.404349159761104
best_error: 5.042787660759725
best_error: 5.042787660500757
best_error: 5.042769894021235
best_error: 5.042769894014571
best_error: 5.042769893964401
best_error: 5.042698742226515
best_error: 5.042698742219829
best_error: 5.042698742169626
best_error: 5.042412769692152
best_error: 5.042412769685388
best_error: 5.042412769635041
best_error: 5.041246514101511
best_error: 5.04124651409442
best_error: 5.041246514043488
best_error: 5.036186345795688
best_error: 5.0361863457870335
best_error: 5.036186345733602
best_error: 5.005291528623826
best_error: 5.005291528594553
best_error: 5.005291528531288
best_error: 4.961947392558006
best_error: 4.961947392389222
best_error: 4.355767036717475
best_error: 4.3557669711411
best_error: 3.350886215186657
best_error: 3.350886039032868
best_error: 3.3508858229025
best_error: 2.9304982188955306
best_error: 2.930497987554816
best_error: 2.930497470468468
best_error: 2.9304974132493795
best_error: 2.930496784099263
best_error: 2.619768772058838
best_error: 2.619768665971701
best_error: 2.5912331069379984
best_error: 2.5912330971105293
best_error: 2.5912330922134448
best_error: 2.5822395826771096
best_error: 2.5822395753147105
best_error: 2.5822395708031616
best_error: 2.5725410499003356
best_error: 2.572541045994265
best_error: 2.5725410386411642
best_error: 2.5710953332486177
best_error: 2.571095277308197
best_error: 2.5674354567136173
best_error: 2.567435449408747
best_error: 2.5674354469555163
best_error: 2.565708082351161
best_error: 2.565708077543282
best_error: 2.5657080767266796
best_error: 2.5657080726411228
best_error: 2.558834716878924
best_error: 2.558834698866655
best_error: 2.5576983702746
best_error: 2.5576983607802215
best_error: 2.5568406638599717
best_error: 2.5568406449125827
best_error: 2.555045795918172
best_error: 2.555045746548634
best_error: 2.5265481446474496
best_error: 2.5265481040493696
best_error: 2.5265480775598235
best_error: 2.517696943494899
best_error: 2.5176968825201973
best_error: 2.511815220187643
best_error: 2.5118151487853084
best_error: 2.5018072777153613
best_error: 2.5018072132926443
best_error: 2.492118083630667
best_error: 2.492117990500759
best_error: 2.4792710984144226
best_error: 2.4792710330403684
best_error: 2.468464034562538
best_error: 2.468463988506441
best_error: 2.4399966439552143
best_error: 2.439995604969845
best_error: 2.438815891757303
best_error: 2.438815849600558
best_error: 2.436856927811689
best_error: 2.4368569017871686
best_error: 2.436856839677408
best_error: 2.4318640943273344
best_error: 2.431864078011766
best_error: 2.4281370428014326
best_error: 2.4281370243695526
best_error: 2.416976384102847
best_error: 2.416976355092062
best_error: 2.390095441499753
best_error: 2.3900953733694914
best_error: 2.3227303364764085
best_error: 2.322730249531686
best_error: 2.290968507604443
best_error: 2.290968305272116
best_error: 2.256467261661771
best_error: 2.256467161288269
best_error: 2.225039777640366
best_error: 2.2250396698311237
best_error: 2.210332127663648
best_error: 2.2103320170969467
best_error: 2.2063809896484923
best_error: 2.206380821502179
best_error: 2.204167004713151
best_error: 2.2041668758862025
best_error: 2.0964963254723528
best_error: 2.096496204897254
best_error: 2.0964961530977457
best_error: 1.8507128020670667
best_error: 1.850712543498708
best_error: 1.8507123144369373
best_error: 1.8103942779188773
best_error: 1.8103942484773874
best_error: 1.7914467186807652
best_error: 1.791446697370633
best_error: 1.7860443307207787
best_error: 1.7860443017006395
best_error: 1.7855257569664522
best_error: 1.7855257539565743
best_error: 1.7854968032866054
best_error: 1.7854968003179488
best_error: 1.785366296998189
best_error: 1.7853662935659829
best_error: 1.785163860914434
best_error: 1.785163859918979
best_error: 1.7851136321072263
best_error: 1.7851136306544941
best_error: 1.7850811641294815
best_error: 1.785081162576338
best_error: 1.785066054722082
best_error: 1.7850660546075892
best_error: 1.7850660539739687
best_error: 1.784909556188536
best_error: 1.784909553693143
best_error: 1.7843887784206052
best_error: 1.7843887628467778
best_error: 1.7840023752691518
best_error: 1.7840023590058103
best_error: 1.782711997263084
best_error: 1.7827119779367373
best_error: 1.7815172909911792
best_error: 1.7815172672471096
best_error: 1.7812952726417908
best_error: 1.7812952461288203
best_error: 1.7804119203298416
best_error: 1.7804119194374364
best_error: 1.7803779936720894
best_error: 1.7803779902054604
best_error: 1.7803305753317589
best_error: 1.7803305752766725
best_error: 1.780330574638483
best_error: 1.780327324527456
best_error: 1.7803273240832587
best_error: 1.7803273238301773
best_error: 1.7803267721499012
best_error: 1.7803267717123894
best_error: 1.7803267714525273
best_error: 1.7803206428828335
best_error: 1.7803206410726966
best_error: 1.7803104731409274
best_error: 1.7803104696683882
best_error: 1.7802763152884387
best_error: 1.7802763092186158
best_error: 1.7801554256557486
best_error: 1.7801554146675775
best_error: 1.7798628240475067
best_error: 1.77986280335214
best_error: 1.7791193697789947
best_error: 1.7791193401018517
best_error: 1.7768201180904084
best_error: 1.776820077564661
best_error: 1.7760810650093077
best_error: 1.7760810624184904
best_error: 1.7760249307013936
best_error: 1.7760249227262406
best_error: 1.773272491710098
best_error: 1.7732724886857856
best_error: 1.7732724869999874
best_error: 1.7667496145304675
best_error: 1.7667495912728697
best_error: 1.7373885351799356
best_error: 1.737388494442925
best_error: 1.7339552532785205
best_error: 1.7339551908380313
best_error: 1.731312467712291
best_error: 1.7313124017211223
best_error: 1.7291961461161665
best_error: 1.7291961115759056
best_error: 1.7290805228711383
best_error: 1.729080483761677
best_error: 1.728060995883312
best_error: 1.7280609571074423
best_error: 1.724818165009369
best_error: 1.7248181268434624
best_error: 1.7205459622350303
best_error: 1.7205455396660974
best_error: 1.7198362108286935
best_error: 1.719836201630389
best_error: 1.7197464440865984
best_error: 1.7197464348180589
best_error: 1.7194838037810416
best_error: 1.7194837940841592
best_error: 1.719483791229905
best_error: 1.719099767823671
best_error: 1.7190997310475777
best_error: 1.717727780582303
best_error: 1.717727755839927
best_error: 1.715956136596713
best_error: 1.7159561363664548
best_error: 1.7159561358531021
best_error: 1.7159561354787374
best_error: 1.715826923545689
best_error: 1.7158269189099462
best_error: 1.7157972019887036
best_error: 1.7157971993421213
best_error: 1.7157872395136613
best_error: 1.7157872390998308
best_error: 1.71578723870946
best_error: 1.7157851939160524
best_error: 1.7157851938074271
best_error: 1.7157851936991892
best_error: 1.715785193457981
best_error: 1.7157851930992192
best_error: 1.715784899077279
best_error: 1.715784898626433
best_error: 1.7157848982640544
best_error: 1.7157846758582043
best_error: 1.7157846756996784
best_error: 1.7157846754122859
best_error: 1.7157846750448658
best_error: 1.7157846413425464
best_error: 1.715784640888323
best_error: 1.715784640882641
best_error: 1.7157846405262112
best_error: 1.7157846316178842
best_error: 1.715784631601094
best_error: 1.7157846311693823
best_error: 1.7157846308044769
best_error: 1.715784608231928
best_error: 1.7157846080470756
best_error: 1.7157846077795
best_error: 1.715784607417377
best_error: 1.7157841920408998
best_error: 1.7157841919094627
best_error: 1.7157841915890513
best_error: 1.7157841912262626
best_error: 1.7157838408761388
best_error: 1.7157838406441521
best_error: 1.7157838404596848
best_error: 1.7157838400706154
best_error: 1.7157831970003985
best_error: 1.7157831966076982
best_error: 1.715783196579144
best_error: 1.7157831961932017
best_error: 1.7157809780354005
best_error: 1.7157809771270425
best_error: 1.7157786038266543
best_error: 1.7157786023535482
best_error: 1.7157708684350317
best_error: 1.7157708657648354
best_error: 1.7157609495099735
best_error: 1.7157609457518652
best_error: 1.7157435804259435
best_error: 1.7157435749475878
best_error: 1.715701501060156
best_error: 1.7157014949844855
best_error: 1.7155953137626028
best_error: 1.7155953069197125
best_error: 1.7154812194211393
best_error: 1.7154812120568417
best_error: 1.7151858712905184
best_error: 1.7151858648445826
best_error: 1.7146166880341314
best_error: 1.7146166832318028
best_error: 1.714616602283364
best_error: 1.713135357953135
best_error: 1.7131353440706352
best_error: 1.708966988849858
best_error: 1.7089669520724302
best_error: 1.7079769879835185
best_error: 1.7079769566544991
best_error: 1.7079767935307013
best_error: 1.707592201104842
best_error: 1.7075921992166672
best_error: 1.7075921582790081
best_error: 1.7063378793076336
best_error: 1.7063370076234212
best_error: 1.7060380906274037
best_error: 1.7060380373226784
best_error: 1.7038963622729535
best_error: 1.7038963602215074
best_error: 1.7038963559463614
