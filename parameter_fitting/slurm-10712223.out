ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 14.721753345994431
best_error: 14.721753341658836
best_error: 14.721753337144484
best_error: 8.931513749342006
best_error: 8.93151365052325
best_error: 8.931513591757124
best_error: 8.838037899418143
best_error: 8.83803777591602
best_error: 8.83020531106451
best_error: 8.83020517197766
best_error: 8.714896710438202
best_error: 8.714896649466075
best_error: 8.714896525103821
best_error: 6.478014326054842
best_error: 6.478014298511656
best_error: 6.478014298287164
best_error: 6.445786488761535
best_error: 6.445785796298068
best_error: 6.443112378411982
best_error: 6.443112367968933
best_error: 6.443112349726045
best_error: 6.433038861838
best_error: 6.4330388536321506
best_error: 6.43303883281231
best_error: 6.430612256771299
best_error: 6.4306122486793535
best_error: 6.430612227662026
best_error: 6.430121777943336
best_error: 6.4301217698744555
best_error: 6.4301217488171645
best_error: 6.429904903246898
best_error: 6.429904895188214
best_error: 6.42990487411325
best_error: 6.429725775318214
best_error: 6.429725767267696
best_error: 6.429725746178928
best_error: 6.42958064706186
best_error: 6.42958063901796
best_error: 6.429580617917997
best_error: 6.429514650249416
best_error: 6.429514642208513
best_error: 6.4295146211034755
best_error: 6.429498610317859
best_error: 6.429498602277677
best_error: 6.429498581171415
best_error: 6.429489772093792
best_error: 6.42948976405401
best_error: 6.429489742947066
best_error: 6.429482432821532
best_error: 6.429482424782074
best_error: 6.429482403674575
best_error: 6.4294822263379405
best_error: 6.429482218298505
best_error: 6.429482197190982
best_error: 6.429482107638137
best_error: 6.429482107360261
best_error: 6.429482078491175
best_error: 6.42948200220863
best_error: 6.419148260811316
best_error: 6.419147573515318
best_error: 6.419018342972336
best_error: 6.419018113537666
best_error: 6.385356362714349
best_error: 6.385356362211646
best_error: 6.365388943436601
best_error: 6.365388942935677
best_error: 6.285909318279476
best_error: 6.285909317789162
best_error: 6.264461639565104
best_error: 6.264461287434649
best_error: 6.179439459141761
best_error: 6.179439121813528
best_error: 6.163232711558906
best_error: 6.163232373453185
best_error: 6.160614382898514
best_error: 6.160614044583232
best_error: 6.159306639050322
best_error: 6.15930630061796
best_error: 6.159046419646101
best_error: 6.159046419173933
best_error: 6.158848898017901
best_error: 6.1588485600745
best_error: 6.158833749916438
best_error: 6.158833412589032
best_error: 6.158827298542755
best_error: 6.158826961214771
best_error: 6.158824351103469
best_error: 6.158824013775231
best_error: 6.158823942356657
best_error: 6.158823941884503
best_error: 6.158823630359167
best_error: 6.158823594297439
best_error: 6.158823568141466
best_error: 6.158823548131183
best_error: 6.15878142276436
best_error: 6.158781084243693
best_error: 6.158701962874206
best_error: 6.1587016236228465
best_error: 6.130362036575362
best_error: 6.130361737673207
best_error: 6.123787174028152
best_error: 6.123786877314602
best_error: 6.092572908782295
best_error: 6.09257260927995
best_error: 6.0874114281933185
best_error: 6.0874111033718155
best_error: 6.085069723508788
best_error: 6.0850694064008914
best_error: 6.084192295672944
best_error: 6.084191975245448
best_error: 6.083756516866124
best_error: 6.0837561964498565
best_error: 6.083541155259654
best_error: 6.0835408353540155
best_error: 6.083330094100054
best_error: 6.083329774194871
best_error: 6.08329901424021
best_error: 6.083299013762603
best_error: 6.083298947511926
best_error: 6.08325275951186
best_error: 6.083252439607121
best_error: 6.083245059049545
best_error: 6.083244737443275
best_error: 6.083227077834226
best_error: 6.0832267562264315
best_error: 6.083226612603124
best_error: 6.083226515485215
best_error: 6.08322639961559
best_error: 6.083226376032284
best_error: 6.083226361824383
best_error: 6.083226360018496
best_error: 6.083226353689503
best_error: 6.0832263530561566
