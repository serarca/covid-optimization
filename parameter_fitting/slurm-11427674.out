ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 18.067155906273964
best_error: 18.06715505608956
best_error: 5.078587348566572
best_error: 5.078587348416122
best_error: 5.078584851190199
best_error: 5.078584851188815
best_error: 5.07858485118816
best_error: 5.078574858248019
best_error: 5.078574858246633
best_error: 5.078574858245979
best_error: 5.078534831396252
best_error: 5.078534831394858
best_error: 5.078534831394211
best_error: 5.078373836462551
best_error: 5.078373836461121
best_error: 5.078373836460495
best_error: 5.077715245699825
best_error: 5.077715245698243
best_error: 5.077715245697714
best_error: 5.074816637920564
best_error: 5.074816637918078
best_error: 5.054245311799274
best_error: 5.054245311746763
best_error: 5.054075916750138
best_error: 5.054075916696507
best_error: 5.053876587620077
best_error: 5.053876587565104
best_error: 4.644744190653348
best_error: 4.644744158682749
best_error: 4.563593468575063
best_error: 4.563593433571123
best_error: 4.330200266490689
best_error: 4.330200186871537
best_error: 4.2957792355715405
best_error: 4.295779148289157
best_error: 4.162981742477622
best_error: 4.162981624098766
best_error: 4.036292983323933
best_error: 4.036292841330007
best_error: 3.9520726663600474
best_error: 3.95207258631379
best_error: 3.945665069396278
best_error: 3.9456650070869888
best_error: 3.886602756860193
best_error: 3.8866027065208777
best_error: 3.751886881252031
best_error: 3.751886692972489
best_error: 3.6586784474696357
best_error: 3.6586782731594547
best_error: 3.6388239424324387
best_error: 3.638823855812498
best_error: 3.6152087236308126
best_error: 3.615208578742567
best_error: 3.5925988369317383
best_error: 3.5925988192745786
best_error: 3.5924330442135335
best_error: 3.5924330361265437
best_error: 3.5923726156157154
best_error: 3.5923726144058548
best_error: 3.5923726136947085
best_error: 3.592352202682128
best_error: 3.592352201587756
best_error: 3.5923522007723596
best_error: 3.588667401068615
best_error: 3.5886673980153376
best_error: 3.574055972610592
best_error: 3.5740559641903973
best_error: 3.51745960905256
best_error: 3.517459566629796
best_error: 3.2018898376682023
best_error: 3.201889772451734
best_error: 3.127672077031916
best_error: 3.1276720106309734
best_error: 3.1222640850507615
best_error: 3.1222639346811447
best_error: 3.076216703242088
best_error: 3.0762164662900027
best_error: 2.670800305790327
best_error: 2.6708001994840465
best_error: 2.5912445193008087
best_error: 2.5912444806889217
best_error: 2.582079523762163
best_error: 2.582079479831457
best_error: 2.5707267976748795
best_error: 2.5707267268851246
best_error: 2.5687631765585435
best_error: 2.5687631134151325
best_error: 2.562855951716181
best_error: 2.5628559182753508
best_error: 2.561738133377308
best_error: 2.5617381083041835
best_error: 2.5596562172153097
best_error: 2.5596561983121204
best_error: 2.546427566530219
best_error: 2.5464275039400333
best_error: 2.524384364524536
best_error: 2.5243843111827915
best_error: 2.5204817653833707
best_error: 2.5204817644999578
best_error: 2.520481762875805
best_error: 2.5204817618314834
best_error: 2.519399905748241
best_error: 2.5193998877057378
best_error: 2.5188128289891942
best_error: 2.5188128269832
best_error: 2.5188128253307993
best_error: 2.5180537706120667
best_error: 2.5180537556712514
best_error: 2.5169740824932147
best_error: 2.5169740583946525
best_error: 2.51412527812968
best_error: 2.5141252339724005
best_error: 2.5119593118050885
best_error: 2.5119592567481432
best_error: 2.4960418261596393
best_error: 2.4960417476878045
best_error: 2.4892779083225154
best_error: 2.4892778247991276
best_error: 2.4841926397148844
best_error: 2.4841925541068237
best_error: 2.4801250910547306
best_error: 2.4801250050097066
best_error: 2.4781644457088094
best_error: 2.478164347444022
best_error: 2.474482228781112
best_error: 2.4744820810068644
best_error: 2.409492944069855
best_error: 2.4094928382894745
best_error: 2.388022482663503
best_error: 2.3880224281902325
best_error: 2.375934900806945
best_error: 2.375934869485695
best_error: 2.2987924839521927
best_error: 2.2987924801728505
best_error: 2.2987924673614732
best_error: 2.262055838516316
best_error: 2.262055777456809
best_error: 2.2609628864012876
best_error: 2.2609628554112557
best_error: 2.258145388080719
best_error: 2.258145368106909
best_error: 2.2572713952392025
best_error: 2.2572713689037114
best_error: 2.2570157773864135
best_error: 2.257015776074054
best_error: 2.25683892060306
best_error: 2.25683892043381
best_error: 2.256838920225276
best_error: 2.256647940224628
best_error: 2.256647935014491
best_error: 2.2565772364982535
best_error: 2.2565772334915577
best_error: 2.2565487290220503
best_error: 2.2565487273632643
best_error: 2.2565360281240197
best_error: 2.2565360270799526
best_error: 2.2565151724631183
best_error: 2.256515171674224
best_error: 2.2564390993206844
best_error: 2.256439095875949
best_error: 2.2563387628171725
best_error: 2.256338753916214
best_error: 2.25613665856202
best_error: 2.2561366405112873
best_error: 2.2555711031717465
best_error: 2.2555710800833166
best_error: 2.253726526532186
best_error: 2.253726480588567
best_error: 2.25154726067557
best_error: 2.251547254569879
best_error: 2.2480683322377626
best_error: 2.2480683116960174
best_error: 2.2391770856608004
best_error: 2.239177066506607
best_error: 2.2388433490713426
best_error: 2.2388433391816096
best_error: 2.238654269782341
best_error: 2.2386542410022163
best_error: 2.238647355722914
best_error: 2.2386473239893356
best_error: 2.238614680776718
best_error: 2.238614639242323
best_error: 2.238607824980626
best_error: 2.2386077801853728
best_error: 2.238606709957585
best_error: 2.2386066631768022
best_error: 2.2374993271394494
best_error: 2.237499300760993
best_error: 2.2373560467689044
best_error: 2.2373560268326833
best_error: 2.2370067589316194
best_error: 2.23700674878617
best_error: 2.2361469511909906
best_error: 2.2361469430060086
best_error: 2.2356290437953765
best_error: 2.2356290380538257
best_error: 2.235479085720287
best_error: 2.235479085680627
best_error: 2.2354790848763275
best_error: 2.2351002687602888
best_error: 2.235100267703862
best_error: 2.2350671926707353
best_error: 2.2350671918207734
best_error: 2.235016668892472
best_error: 2.2350166680968444
best_error: 2.234981781494795
best_error: 2.23498178057127
best_error: 2.2349335127779146
best_error: 2.2349335084757316
best_error: 2.234903875004627
best_error: 2.2349038749197887
best_error: 2.23487253714979
best_error: 2.234872536553273
best_error: 2.2348148295660706
best_error: 2.2348148255601834
best_error: 2.234746331807605
best_error: 2.2347463315497174
best_error: 2.2346518491377885
best_error: 2.234651847730433
best_error: 2.234496036984152
best_error: 2.23449603610525
best_error: 2.2344907905047795
best_error: 2.234490790024925
best_error: 2.2344901716572707
best_error: 2.2344901706566698
best_error: 2.2344895702757173
best_error: 2.234489570079522
best_error: 2.2344894823365933
best_error: 2.234489482323684
best_error: 2.2344894747348762
best_error: 2.2344894746313075
best_error: 2.234489456966261
best_error: 2.234489456928887
best_error: 2.2344894094665904
best_error: 2.234489409421359
best_error: 2.234489397218382
best_error: 2.2344893968331982
best_error: 2.234489139443464
best_error: 2.2344891391966963
best_error: 2.234488368759989
best_error: 2.23448836833728
best_error: 2.2344852962835087
best_error: 2.234485294549496
best_error: 2.2344809420926337
best_error: 2.2344809406243495
best_error: 2.2344685484193616
best_error: 2.234468546511805
best_error: 2.234465816463518
best_error: 2.2344658152842345
best_error: 2.2344639839830815
best_error: 2.2344639824253845
best_error: 2.234461310345541
best_error: 2.2344613082419595
best_error: 2.2344585112439233
best_error: 2.2344585111290107
best_error: 2.234458383231996
best_error: 2.234458383175986
best_error: 2.234458336979503
best_error: 2.2344583369787863
best_error: 2.2344583369779203
best_error: 2.2344583332736687
best_error: 2.234458333207663
