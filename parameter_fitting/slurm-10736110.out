ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.534194511308936
best_error: 11.534194506634593
best_error: 11.304909932078932
best_error: 10.955192555997344
best_error: 10.955192477423298
best_error: 7.4265482125176066
best_error: 7.426547816160157
best_error: 7.019748767678342
best_error: 7.019748767678285
best_error: 7.019748765380969
best_error: 7.016289944266565
best_error: 7.016289944266508
best_error: 7.016289941741654
best_error: 7.015588539555
best_error: 7.0155884646451
best_error: 7.015425470665123
best_error: 7.015425470665063
best_error: 7.015425468130104
best_error: 7.015362545271406
best_error: 7.015362545271349
best_error: 7.015362542736433
best_error: 7.015352643086365
best_error: 7.015352568583191
best_error: 7.015344992413894
best_error: 7.015344992413839
best_error: 7.015344989878928
best_error: 7.015344778002808
best_error: 7.015344703498863
best_error: 7.015278656327848
best_error: 7.015278656327789
best_error: 7.015278653790219
best_error: 7.014871821616941
best_error: 7.0148718216168815
best_error: 7.0148718190646235
best_error: 7.01324782235672
best_error: 7.013247822356658
best_error: 7.013247819744929
best_error: 7.00681510609301
best_error: 7.0068151060929535
best_error: 7.006815103285137
best_error: 6.98229883838813
best_error: 6.982298838388073
best_error: 6.982298835019686
best_error: 6.979824054743988
best_error: 6.979824054743934
best_error: 6.979824051316823
best_error: 6.978673854325768
best_error: 6.974542626140183
best_error: 6.97454262614013
best_error: 6.974542622847442
best_error: 6.968046405750529
best_error: 6.968046405750528
best_error: 6.962424608590507
best_error: 6.9335360091061915
best_error: 6.93353600910613
best_error: 6.933536004642247
best_error: 6.914631310929015
best_error: 6.914631310928958
best_error: 6.9146313063600235
best_error: 6.905767577371665
best_error: 6.905767577371613
best_error: 6.905767573270856
best_error: 6.904237766089527
best_error: 6.904237766089478
best_error: 6.9042377622874795
best_error: 6.903941287072466
best_error: 6.903941287072418
best_error: 6.903941283376545
best_error: 6.903821337126841
best_error: 6.903821337126793
best_error: 6.903821333477154
best_error: 6.90379736757141
best_error: 6.903797367571407
best_error: 6.902921070710603
best_error: 6.619699356607967
best_error: 6.6196993566079225
best_error: 6.6196993460461755
best_error: 6.488634617139757
best_error: 6.488634617139749
best_error: 6.425632602198826
best_error: 6.425632316810214
best_error: 5.569687942017744
best_error: 5.569687795601823
best_error: 5.439367332833061
best_error: 5.439367332833025
best_error: 5.43936732333853
best_error: 5.43452762858321
best_error: 5.434527628583164
best_error: 5.434527625772339
best_error: 5.401497222355627
best_error: 5.4014971997387
best_error: 5.354546823698749
best_error: 5.354546778152713
best_error: 5.3119214226831755
best_error: 5.311921422683096
best_error: 5.30310077341438
best_error: 5.3031007734142985
best_error: 5.289763982832599
best_error: 5.289763982832494
best_error: 5.289763982832483
best_error: 5.288512731781865
best_error: 5.288512731781763
best_error: 5.288512731781674
best_error: 5.288255617707536
best_error: 5.28825561190341
best_error: 5.288218783825222
best_error: 5.288218778536629
best_error: 5.288112738178417
best_error: 5.288112732887306
best_error: 5.288004079664354
best_error: 5.288004079664255
best_error: 5.288004079664016
best_error: 5.287950066254044
best_error: 5.287950066253942
best_error: 5.2879500662537
best_error: 5.287949943335208
best_error: 5.287949943335106
best_error: 5.287949943334867
best_error: 5.287949820937181
best_error: 5.287949820937078
best_error: 5.287949820936842
best_error: 5.287949745154324
best_error: 5.2879497451542194
best_error: 5.28794974515398
best_error: 5.287949669916179
best_error: 5.287949669916076
best_error: 5.287949669915836
best_error: 5.2879495992534675
best_error: 5.287949599253368
best_error: 5.2879495992531265
best_error: 5.28794952990239
best_error: 5.2879495299022885
best_error: 5.287949529902045
best_error: 5.287947990948795
best_error: 5.2879479905073135
best_error: 5.287947767003025
best_error: 5.287947766562206
best_error: 5.287947543903327
best_error: 5.287947543463159
best_error: 5.2879474215328
best_error: 5.287947421092991
best_error: 5.287947299958091
best_error: 5.287947299518633
best_error: 5.287947228529997
best_error: 5.287947228174179
best_error: 5.287947068395693
best_error: 5.287947068040387
best_error: 5.2879470189138456
best_error: 5.287947018558694
best_error: 5.287946970322876
best_error: 5.287946969967884
best_error: 5.287946189827108
best_error: 5.287946189474612
best_error: 5.2879455471242975
best_error: 5.287945546773836
best_error: 5.287945451724319
best_error: 5.2879454513741555
best_error: 5.28794514289851
best_error: 5.287945142898392
best_error: 5.287945142898169
best_error: 5.287945142526901
best_error: 5.287945142526787
best_error: 5.287945142526562
best_error: 5.287945142155985
best_error: 5.287945142155875
best_error: 5.2879451421556505
best_error: 5.287945141908576
best_error: 5.287945141908464
best_error: 5.287945141908239
best_error: 5.287945141661846
best_error: 5.287945141661739
best_error: 5.287945141661513
best_error: 5.287945141319805
best_error: 5.287945141319696
best_error: 5.287945141319467
best_error: 5.287945140956323
best_error: 5.287945140956207
best_error: 5.287945140955983
best_error: 5.28794507930713
best_error: 5.287945079307019
best_error: 5.287945079306791
best_error: 5.287945079266171
best_error: 5.287945079266059
best_error: 5.2879450792658345
best_error: 5.287945079225278
best_error: 5.287945079225166
best_error: 5.287945079224939
best_error: 5.287945079202645
best_error: 5.287945079202535
best_error: 5.287945079202308
best_error: 5.287945079180056
best_error: 5.287945079179945
best_error: 5.28794507917972
best_error: 5.287945079165694
best_error: 5.287945079165586
best_error: 5.287945079165362
best_error: 5.287945079151376
best_error: 5.287945079151261
best_error: 5.287945079151041
best_error: 5.287945079135783
best_error: 5.287945079135668
best_error: 5.2879450791354445
best_error: 5.2879450787391
best_error: 5.287945078738991
best_error: 5.28794507873876
best_error: 5.287945078673596
best_error: 5.28794507867349
best_error: 5.287945078673262
best_error: 5.287945078608288
best_error: 5.287945078608181
best_error: 5.287945078607953
best_error: 5.287945078540291
best_error: 5.287945078540183
best_error: 5.287945078539952
best_error: 5.287945077059741
best_error: 5.287945077059635
best_error: 5.287945077059409
best_error: 5.287945076107329
best_error: 5.287945076107221
best_error: 5.287945076106994
best_error: 5.287945067219323
best_error: 5.287945067219212
best_error: 5.287945067218988
best_error: 5.287945067208165
best_error: 5.287945067208056
best_error: 5.287945067207828
best_error: 5.28794506692394
best_error: 5.287945066923832
best_error: 5.287945066923601
best_error: 5.287945066746468
best_error: 5.287945066746355
best_error: 5.287945066746131
best_error: 5.28794506662875
best_error: 5.287945066628639
best_error: 5.287945066628413
best_error: 5.28794506651124
best_error: 5.28794506651113
best_error: 5.287945066510903
best_error: 5.287945066451526
best_error: 5.287945066451418
best_error: 5.287945066451192
best_error: 5.287945066391922
best_error: 5.287945066391814
best_error: 5.287945066391588
best_error: 5.287945066361133
best_error: 5.287945066361025
best_error: 5.287945066360799
best_error: 5.2879450663401
best_error: 5.287945066339989
best_error: 5.287945066339766
best_error: 5.287945064823397
best_error: 5.287945064823283
best_error: 5.287945064823061
best_error: 5.287945064814192
best_error: 5.2879450648140836
best_error: 5.287945064813856
best_error: 5.287945064805
best_error: 5.28794506480489
best_error: 5.287945064804664
best_error: 5.287945064800292
best_error: 5.287945064800183
best_error: 5.287945064799958
