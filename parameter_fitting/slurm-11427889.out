ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 18.990962565410907
best_error: 18.990962241132703
best_error: 4.204043328374865
best_error: 4.204043326219645
best_error: 4.202405832823939
best_error: 4.2024058327988305
best_error: 4.202405832483092
best_error: 4.195757238220538
best_error: 4.195757238194359
best_error: 4.195757237876158
best_error: 4.167489440931589
best_error: 4.167489440900448
best_error: 4.167489440571979
best_error: 4.015555596597801
best_error: 4.015555596522997
best_error: 4.015555596148214
best_error: 3.853689660099387
best_error: 3.8536896599211
best_error: 3.8536896595333805
best_error: 3.6522329641928493
best_error: 3.6522329636879944
best_error: 3.6522329634268753
best_error: 3.5963139435499745
best_error: 3.596313942877262
best_error: 3.59631394271112
best_error: 3.396215719928837
best_error: 3.3962157182242465
best_error: 3.2448745985564726
best_error: 3.244874595726246
best_error: 3.219444073462128
best_error: 3.219444070840215
best_error: 3.218271889882246
best_error: 3.2182718889696615
best_error: 3.2182718871851086
best_error: 3.215761902732378
best_error: 3.215761901922219
best_error: 3.21576189982759
best_error: 3.215041083267922
best_error: 3.215041082555487
best_error: 3.2150410803019596
best_error: 3.214299855011696
best_error: 3.2142998543365495
best_error: 3.2142998519819668
best_error: 3.118708966060169
best_error: 3.118708951173167
best_error: 2.393261375607071
best_error: 2.3932612578324157
best_error: 2.0784847218333433
best_error: 2.07848455234534
best_error: 1.9585187474025263
best_error: 1.9585186491658146
best_error: 1.9465342812535158
best_error: 1.9465342324631165
best_error: 1.9456422135818152
best_error: 1.9456421483143254
best_error: 1.9456414302013596
best_error: 1.945641364658883
best_error: 1.945641208101295
best_error: 1.9456411425488838
best_error: 1.9456410977474752
best_error: 1.945641032063647
best_error: 1.9456388930501711
best_error: 1.9456388262740407
best_error: 1.6291210486613563
best_error: 1.6291208709826355
best_error: 1.6198861330226482
best_error: 1.6198860785500204
best_error: 1.5581863616501883
best_error: 1.5581862399318536
best_error: 1.536501223624829
best_error: 1.5365012094903125
best_error: 1.5365012094661608
best_error: 1.536501194813317
best_error: 1.5353160223697906
best_error: 1.5353159858193812
best_error: 1.509540740652766
best_error: 1.5095406981304849
best_error: 1.5061421330699267
best_error: 1.506142101195149
best_error: 1.503017179279165
best_error: 1.5030171587210983
best_error: 1.5026256360503658
best_error: 1.5026256342170285
best_error: 1.5025518909524396
best_error: 1.502551890913329
best_error: 1.5022827274466932
best_error: 1.5022827258239675
best_error: 1.5015676823519468
best_error: 1.5015676820064252
best_error: 1.4999759924484684
best_error: 1.4999759912998802
best_error: 1.4984293393878765
best_error: 1.4984293385492087
best_error: 1.4940344674401367
best_error: 1.4940344654877358
best_error: 1.4804113921754207
best_error: 1.480411391735408
best_error: 1.4478028508087744
best_error: 1.4478028508067433
best_error: 1.4478028495353046
best_error: 1.4478028476419342
best_error: 1.3218038761563295
best_error: 1.3218038358563176
best_error: 1.320740480898947
best_error: 1.320740408161542
best_error: 1.3205338139397917
best_error: 1.32053373537486
best_error: 1.3179463332439099
best_error: 1.3179462919529297
best_error: 1.3179428524248857
best_error: 1.3179428113056348
best_error: 1.3033276201724164
best_error: 1.3033275997014027
best_error: 1.2991237409492937
best_error: 1.2991237409437801
best_error: 1.299123740655443
best_error: 1.296688105051534
best_error: 1.2966881036432465
best_error: 1.2966880939386989
best_error: 1.2850669960761167
best_error: 1.2850669789864302
best_error: 1.2739901917930472
best_error: 1.2739901870759416
best_error: 1.2676004856467191
best_error: 1.2676004529873308
best_error: 1.255814555183308
best_error: 1.2558145509885743
best_error: 1.24646612078845
best_error: 1.246466082335847
best_error: 1.2359390126564824
best_error: 1.2359389854554268
best_error: 1.2294691346134607
best_error: 1.2294691185753601
best_error: 1.2236513898012598
best_error: 1.2236513630320336
best_error: 1.222448151030325
best_error: 1.2224481100680546
best_error: 1.220214157646088
best_error: 1.2202141322374045
best_error: 1.2196872103384242
best_error: 1.2196872067253615
best_error: 1.2196343836944903
best_error: 1.2196343826477183
best_error: 1.219634382354833
best_error: 1.2196262676938512
best_error: 1.219626263774036
best_error: 1.2196146321407748
best_error: 1.2196146293556214
best_error: 1.219570419435207
best_error: 1.2195704194351191
best_error: 1.2195704192403354
best_error: 1.2195704186965353
best_error: 1.2195704180157276
best_error: 1.2195328295564736
best_error: 1.2195328295564094
best_error: 1.2195328293655041
best_error: 1.2195328288105725
best_error: 1.2195328281388367
best_error: 1.219392058486397
best_error: 1.2193920583661504
best_error: 1.2193920582956226
best_error: 1.2193920576644401
best_error: 1.2193920571108527
best_error: 1.2177943490043435
best_error: 1.2177943444231039
best_error: 1.2173039498746765
best_error: 1.2173039350287846
best_error: 1.2166725634105593
best_error: 1.2166725392090971
best_error: 1.2157950522636345
best_error: 1.2157950333482916
best_error: 1.21476703330534
best_error: 1.2147670162874076
best_error: 1.2120440129106043
best_error: 1.212044011453999
best_error: 1.2120440106305548
best_error: 1.204008117824183
best_error: 1.2040080721407351
best_error: 1.1976492723167953
best_error: 1.1976492211104606
best_error: 1.1809803203360112
best_error: 1.1809802749850908
best_error: 1.1792011471970387
best_error: 1.179201010209192
best_error: 1.1546014564438298
best_error: 1.1546014500687536
best_error: 1.1517509911687296
best_error: 1.1517509764780014
best_error: 1.151563102827862
best_error: 1.1515631005969285
best_error: 1.151563085555846
best_error: 1.1507466673209972
best_error: 1.1507466601559837
best_error: 1.150614985610934
best_error: 1.1506149719741985
best_error: 1.148917125190228
best_error: 1.148917120622835
best_error: 1.1484673745430465
best_error: 1.1484673742722094
best_error: 1.1484673740667914
best_error: 1.1484536188565375
best_error: 1.1484536157193141
best_error: 1.1484468670488635
best_error: 1.148446866829284
best_error: 1.1484454004845182
best_error: 1.1484453998901096
best_error: 1.1484435572094076
best_error: 1.148443556171646
best_error: 1.14843338264403
best_error: 1.1484333821500174
best_error: 1.1484105914598641
best_error: 1.1484105906619917
best_error: 1.1483502851652594
best_error: 1.1483502842739355
best_error: 1.1482621879132677
best_error: 1.1482621873299856
best_error: 1.1473834936639278
best_error: 1.147383487921995
best_error: 1.1467925458245478
best_error: 1.1467925344459777
best_error: 1.1461801988933753
best_error: 1.1461801942370498
best_error: 1.1457566161443282
best_error: 1.1457566126589531
best_error: 1.1457098548253384
best_error: 1.145709853916738
best_error: 1.145691590112343
best_error: 1.1456915886720112
best_error: 1.1456862915044028
best_error: 1.1456862914058528
best_error: 1.1456862913195427
best_error: 1.145685803966971
best_error: 1.1456858039634725
best_error: 1.145685803780531
best_error: 1.145685538435576
best_error: 1.1456855383043965
best_error: 1.1456855382490152
best_error: 1.1456837654871568
best_error: 1.1456837652082188
best_error: 1.145677581453822
best_error: 1.1456775802834405
best_error: 1.1456359495270119
best_error: 1.1456359426188287
best_error: 1.1455661635911731
best_error: 1.1455661488822753
best_error: 1.1453936345700242
best_error: 1.1453936156907596
best_error: 1.1451625415994546
best_error: 1.1451625009029107
best_error: 1.144420278171511
best_error: 1.144420234625273
best_error: 1.1436188095735802
best_error: 1.143618807327808
best_error: 1.1436187968985099
best_error: 1.1429444652325025
best_error: 1.1429444519137872
best_error: 1.1428939492504064
best_error: 1.1428939393483466
best_error: 1.1420929540558244
best_error: 1.1420929522846053
best_error: 1.1413449074400703
best_error: 1.141344902202302
best_error: 1.1409392796932287
best_error: 1.1409392740133275
best_error: 1.1405135228452907
best_error: 1.140513522103342
best_error: 1.1405135206238644
best_error: 1.1404649369966067
best_error: 1.14046493699525
best_error: 1.1404649369552005
best_error: 1.1404431422545087
best_error: 1.1404431418556888
best_error: 1.1404320869035567
best_error: 1.1404320861619852
best_error: 1.1404199420483914
best_error: 1.140419941845544
best_error: 1.140411543593986
best_error: 1.1404115429339035
best_error: 1.1404019501943037
best_error: 1.1404019472060718
