ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.53197092658061
best_error: 101.53197080105359
best_error: 101.53197077482469
best_error: 16.54602275921338
best_error: 16.5460227592046
best_error: 16.546022743761398
best_error: 16.523910012474104
best_error: 16.52390999644758
best_error: 16.426693253197033
best_error: 16.42669323451068
best_error: 15.806886748846473
best_error: 15.8068867083655
best_error: 15.632522807560509
best_error: 15.63252275977121
best_error: 15.434293320627752
best_error: 15.43429326547831
best_error: 12.14542071980434
best_error: 12.145420694294394
best_error: 12.145420691514468
best_error: 11.604941588251787
best_error: 11.604941553057039
best_error: 10.94931557763332
best_error: 10.949315570670018
best_error: 10.715019513679499
best_error: 10.715019513679483
best_error: 10.715019511755067
best_error: 10.46465198958196
best_error: 10.464651935528197
best_error: 10.033355691244337
best_error: 10.033355665399027
best_error: 9.414354374026836
best_error: 9.414354217886377
best_error: 9.304850734205425
best_error: 9.304850714221526
best_error: 9.14756872332094
best_error: 9.147568714475588
best_error: 9.147568711693523
best_error: 9.10524186435983
best_error: 9.1052416455814
best_error: 9.098285844993182
best_error: 9.098285840469082
best_error: 9.098285833815508
best_error: 9.067400412084906
best_error: 9.067400199973697
best_error: 9.00037447597133
best_error: 9.000374472743609
best_error: 9.000374472107811
best_error: 9.000374465082901
best_error: 8.99702266443701
best_error: 8.997022663019546
best_error: 8.997022660847259
best_error: 8.997022653626534
best_error: 8.984002814820542
best_error: 8.984002543845577
best_error: 8.981976511421628
best_error: 8.981976509879068
best_error: 8.981976507850614
best_error: 8.981976500746745
best_error: 8.976032898203652
best_error: 8.97603289701975
best_error: 8.976032894615672
best_error: 8.976032887594496
best_error: 8.895144998951876
best_error: 8.895144998951874
best_error: 8.89514499895171
best_error: 8.895144991892812
best_error: 8.895144988776712
best_error: 8.7150600350463
best_error: 8.715059835780886
best_error: 8.573762195362491
best_error: 8.573762186519911
best_error: 8.573762168353078
best_error: 8.564154101979987
best_error: 8.564154096221658
best_error: 8.56415407286174
best_error: 8.560121650214981
best_error: 8.560121510309372
best_error: 8.5010299460158
best_error: 8.50102987600842
best_error: 8.438256046739397
best_error: 8.438255933077466
best_error: 8.378499900672367
best_error: 8.37849894302538
best_error: 8.355694852496082
best_error: 8.355694595434489
best_error: 8.34998558992022
best_error: 8.3499853235427
best_error: 8.346339081495032
best_error: 8.346338576879202
best_error: 8.343226212133235
best_error: 8.343225274298774
best_error: 8.319336123383858
best_error: 8.319335830280028
best_error: 8.227632750101574
best_error: 8.22763201421445
best_error: 8.023088071753767
best_error: 8.023087274267134
best_error: 7.999782154168575
best_error: 7.999781366958743
best_error: 7.913949017435325
best_error: 7.913948325616976
best_error: 7.826418365598077
best_error: 7.826418330012453
best_error: 7.7137875579770165
best_error: 7.713787549204158
best_error: 7.713787540051053
best_error: 7.627035478712822
best_error: 7.627035415840826
best_error: 7.525292853199128
best_error: 7.5252926187007
best_error: 7.328362754031733
best_error: 7.328362348487787
best_error: 7.010121379224198
best_error: 7.010121265274749
best_error: 7.002037479675414
best_error: 7.002037369170242
best_error: 6.991388273257552
best_error: 6.991388239092105
best_error: 6.988055311545984
best_error: 6.988055276242191
best_error: 6.988042375391486
best_error: 6.988042267928487
best_error: 6.987718950103306
best_error: 6.987718842666093
best_error: 6.983643150513947
best_error: 6.983643149304815
best_error: 6.983643144527173
best_error: 6.895718188089623
best_error: 6.8957175894818565
best_error: 6.808254738570749
best_error: 6.808254210990894
best_error: 6.698230797986406
best_error: 6.698230740355567
best_error: 6.6821907588923715
best_error: 6.682190705591388
best_error: 6.679750914765677
best_error: 6.67975082901712
best_error: 6.658879444744613
best_error: 6.65887936633588
best_error: 6.600303727175271
best_error: 6.600303513912515
best_error: 6.532466011219859
best_error: 6.532465656532196
best_error: 6.509007245819184
best_error: 6.509007043011721
best_error: 6.503123391046055
best_error: 6.5031231876002025
best_error: 6.495283213215732
best_error: 6.4952831661112596
best_error: 6.493252492683853
best_error: 6.493252442171606
best_error: 6.491598821320975
best_error: 6.491598769679621
best_error: 6.491307441529034
best_error: 6.491307181694388
best_error: 6.4910875473254785
best_error: 6.491087499271888
best_error: 6.4909184602112635
best_error: 6.490918411754613
best_error: 6.480235346158741
best_error: 6.480234998029627
best_error: 6.438004540167269
best_error: 6.438004129344083
best_error: 6.427058214050057
best_error: 6.427057756099293
