ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 74
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.43378689729039
best_error: 102.43378681453548
best_error: 102.43378671492698
best_error: 19.69844641153351
best_error: 19.69844641153136
best_error: 19.69844640690973
best_error: 19.692969049177712
best_error: 19.692969049175503
best_error: 19.692969044359202
best_error: 19.668504831943686
best_error: 19.66850483194097
best_error: 19.668504826168736
best_error: 19.482372839174946
best_error: 19.48237283912513
best_error: 19.482372821315035
best_error: 19.27705351292562
best_error: 19.277053512686958
best_error: 19.277053474930693
best_error: 18.797405855776564
best_error: 18.797405854680612
best_error: 18.797405762635176
best_error: 18.44385231032555
best_error: 18.44385075307366
best_error: 18.384438519531134
best_error: 18.384438517411663
best_error: 18.384438375717263
best_error: 14.484589418026275
best_error: 14.48458941107979
best_error: 14.484589370960395
best_error: 14.484589259589281
best_error: 14.457642345275284
best_error: 14.457642202785518
best_error: 14.382983927638062
best_error: 14.382983780678682
best_error: 14.08592672925079
best_error: 14.085926616035389
best_error: 13.58032983908544
best_error: 13.580329823071956
best_error: 13.580329816655604
best_error: 13.045486154842333
best_error: 13.045486140581144
best_error: 13.045486136045383
best_error: 12.701214764719097
best_error: 12.70121475544895
best_error: 12.70121474542915
best_error: 12.579358770919058
best_error: 12.579358740409681
best_error: 12.359834540813392
best_error: 12.359834425910126
best_error: 12.285090065958414
best_error: 12.285089961926786
best_error: 12.281928844445465
best_error: 12.281928732806147
best_error: 12.253423706694637
best_error: 12.253423693679165
best_error: 12.25342369138709
best_error: 12.24578929113946
best_error: 12.24578916829861
best_error: 12.229977341669802
best_error: 12.22997733160322
best_error: 12.22997732786023
best_error: 12.227133478524227
best_error: 12.227133468300256
best_error: 12.227133464568897
best_error: 12.2189521589656
best_error: 12.218951998697541
best_error: 12.202551668545205
best_error: 12.202551658171256
best_error: 12.202551654436494
best_error: 11.959965523683238
best_error: 11.959965516226596
best_error: 11.959965509969008
best_error: 11.885528727673936
best_error: 11.885528717813553
best_error: 11.885528713675829
best_error: 11.818294119788384
best_error: 11.818294106681533
best_error: 11.818294105339147
best_error: 11.815506529626525
best_error: 11.815506515324314
best_error: 11.815506515095983
best_error: 11.761783045113432
best_error: 11.761783029417451
best_error: 11.727201418429702
best_error: 11.727201402024093
best_error: 11.604790640716542
best_error: 11.604790610627534
best_error: 11.14620294648615
best_error: 11.146202757914555
best_error: 11.126991376764067
best_error: 11.126991365167477
best_error: 11.120327392994774
best_error: 11.120327380222193
best_error: 11.11757860439885
best_error: 11.117578472022908
best_error: 11.117201271837864
best_error: 11.11720125917087
best_error: 11.116290732868308
best_error: 11.116290600144062
best_error: 11.11605389279586
best_error: 11.11605376005156
best_error: 11.11604473574026
best_error: 11.116044723092697
best_error: 11.1154503946544
best_error: 11.115450381798157
best_error: 11.11355182289127
best_error: 11.113551809400294
best_error: 11.112043822866887
best_error: 11.112043808531642
best_error: 11.111002657987601
best_error: 11.111002643409783
best_error: 11.11048077519613
best_error: 11.110480667810629
best_error: 11.110237565871419
best_error: 11.11023745967719
best_error: 11.110148033075344
best_error: 11.110147935097315
best_error: 11.109946024588325
best_error: 11.10994592684789
best_error: 11.10990175332702
best_error: 11.10990173871016
best_error: 11.109491076533585
best_error: 11.109491062194934
best_error: 11.10920158677233
best_error: 11.109201479970631
best_error: 11.10888800767971
best_error: 11.108887913400242
best_error: 11.108354910672332
best_error: 11.108354896052735
best_error: 11.107019154505082
best_error: 11.107019057250888
best_error: 11.102462494670341
best_error: 11.10246239666422
best_error: 11.097302834099034
best_error: 11.097302731348863
best_error: 11.079180842749881
best_error: 11.079180828004098
best_error: 11.053607097634034
best_error: 11.053607097634032
best_error: 11.053607095236963
best_error: 11.053607093847067
best_error: 11.05055959699491
best_error: 11.050559594183484
best_error: 11.050559593133617
best_error: 11.047141237451111
best_error: 11.047141234624172
best_error: 11.04714123368667
best_error: 11.035606805070145
best_error: 11.035606804702713
best_error: 11.035606801521926
best_error: 11.035146306208654
best_error: 11.035146304114445
best_error: 11.035146302644064
best_error: 11.029960095370349
best_error: 11.029960094035285
best_error: 11.02996009175515
best_error: 11.004963316557067
best_error: 11.00496331587667
best_error: 11.004963312840262
best_error: 10.987160949338985
best_error: 10.987160878664183
best_error: 10.980607843936045
best_error: 10.980607843936044
best_error: 10.980607842756003
best_error: 10.980607839973986
best_error: 10.978867944236784
best_error: 10.97886794299484
best_error: 10.978867940234831
best_error: 10.974663716554574
best_error: 10.974663715259132
best_error: 10.974663712534847
best_error: 10.972315540999507
best_error: 10.972315539687818
best_error: 10.972315536981478
best_error: 10.970954093588524
best_error: 10.970954092270933
best_error: 10.970954089573297
best_error: 10.970243569294304
best_error: 10.970243567973647
best_error: 10.970243565280544
