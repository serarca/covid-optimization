ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 66
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 109.44933842610953
best_error: 109.44933822331738
best_error: 20.555326709414544
best_error: 20.555326709413674
best_error: 20.555326707855063
best_error: 20.55517243406274
best_error: 20.55517243249896
best_error: 20.554551060308683
best_error: 20.55455105872752
best_error: 20.551995022081037
best_error: 20.551995020427142
best_error: 20.540481700556057
best_error: 20.540481698549737
best_error: 20.453016718421985
best_error: 20.45301671242886
best_error: 20.449997195140654
best_error: 20.44999718897224
best_error: 15.036783636806092
best_error: 15.036783594866893
best_error: 14.964049784369198
best_error: 14.964049317250264
best_error: 14.569318365427876
best_error: 14.569318351323869
best_error: 14.53352065207017
best_error: 14.533520406061012
best_error: 14.502443443877183
best_error: 14.502443434077911
best_error: 14.496397328780905
best_error: 14.496397165176209
best_error: 14.491776834917417
best_error: 14.491776826775771
best_error: 14.491717158350685
best_error: 14.491717150208322
best_error: 14.490147621815861
best_error: 14.490147481985158
best_error: 14.489939372220258
best_error: 14.489939364799733
best_error: 14.489938144182283
best_error: 14.489938136761783
best_error: 14.48993807101818
best_error: 14.489938053587174
best_error: 14.489938051313308
best_error: 14.489938046553085
best_error: 14.489912430521024
best_error: 14.489912290659687
best_error: 14.48989555189964
best_error: 14.489895412034942
best_error: 14.489828051004999
best_error: 14.489827911126866
best_error: 14.489558264765522
best_error: 14.489558124833728
best_error: 14.488487561265675
best_error: 14.488487419809973
best_error: 14.485071219364869
best_error: 14.485071053654229
best_error: 14.480988981181376
best_error: 14.480988748186654
best_error: 14.480596157365685
best_error: 14.480595925732626
best_error: 14.479632789784837
best_error: 14.479632582890432
best_error: 14.478535647084719
best_error: 14.478535433924687
best_error: 14.4751189632105
best_error: 14.475118731711763
best_error: 14.450009422153732
best_error: 14.450009143437585
best_error: 14.439008543350717
best_error: 14.439008539186162
best_error: 14.439008538534468
best_error: 14.439008536596312
best_error: 14.430622318836663
best_error: 14.430622318527144
best_error: 14.430622304853093
best_error: 14.428969219575965
best_error: 14.428969205709857
best_error: 14.422647812899218
best_error: 14.422647812899216
best_error: 14.422647798547313
best_error: 14.413883801096691
best_error: 14.413883786954711
best_error: 14.413883785981646
best_error: 14.412992968405778
best_error: 14.412992573800345
best_error: 14.41015400567542
best_error: 14.410153960865399
best_error: 14.398259311423182
best_error: 14.398259252409446
best_error: 14.34402694968206
best_error: 14.344026884154927
best_error: 14.016364946904227
best_error: 14.016364946904226
best_error: 14.016364935755142
best_error: 14.010939426874396
best_error: 14.010939421592813
best_error: 14.010939419982568
best_error: 13.82131309366764
best_error: 13.821313056683952
best_error: 13.821313056278083
best_error: 13.48228868255734
best_error: 13.482288680009718
best_error: 13.478375451867672
best_error: 13.478375451794044
best_error: 13.478375448014013
best_error: 13.476930639863808
best_error: 13.476930623501573
best_error: 13.475596016024046
best_error: 13.47559599833261
best_error: 13.473261061481358
best_error: 13.473261043617606
best_error: 13.471117930630083
best_error: 13.471117923885389
best_error: 13.4710707029476
best_error: 13.471070702810515
best_error: 13.470798693419773
best_error: 13.470721946257413
best_error: 13.470721946257411
best_error: 13.470542085218836
best_error: 13.470542083719108
best_error: 13.470032453356453
best_error: 13.470032424383593
best_error: 13.469317153614458
best_error: 13.469317153459421
best_error: 13.468256844414203
best_error: 13.468256843814267
best_error: 13.467242619546978
best_error: 13.467242619142453
best_error: 13.466915514218393
best_error: 13.46691551383299
best_error: 13.466503137695383
best_error: 13.466503137428756
best_error: 13.466502011570691
best_error: 13.466502007100534
best_error: 13.466445050928797
best_error: 13.466445046724491
best_error: 13.466429384522332
best_error: 13.46642938393187
best_error: 13.466420009472474
best_error: 13.466420009316778
best_error: 13.466407993657437
best_error: 13.466407993528875
best_error: 13.466369676404994
best_error: 13.466369676124891
best_error: 13.466353195917872
best_error: 13.466353195787466
best_error: 13.46634869529211
best_error: 13.46634869518893
best_error: 13.46634347415663
best_error: 13.466343468955792
best_error: 13.466338951908858
best_error: 13.466338951836384
best_error: 13.466336019048258
best_error: 13.466336018976836
best_error: 13.466334425505432
best_error: 13.466334425434578
best_error: 13.4663340252249
best_error: 13.466334025154199
best_error: 13.46633402245546
best_error: 13.46633401725233
best_error: 13.466333930617175
best_error: 13.466333930546506
best_error: 13.466333902538132
best_error: 13.466333897335126
best_error: 13.46632554931664
best_error: 13.466325548812058
best_error: 13.466207683020542
best_error: 13.466207682773494
best_error: 13.466055326310006
best_error: 13.466055326096987
