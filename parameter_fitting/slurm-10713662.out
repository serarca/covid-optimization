ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.821073213650372
best_error: 13.82107320582695
best_error: 13.821073205777761
best_error: 13.814157378494663
best_error: 13.814157370032591
best_error: 13.520823694648515
best_error: 13.520823652331154
best_error: 11.878311101448627
best_error: 11.878310828836502
best_error: 10.57583083337357
best_error: 10.575830376415928
best_error: 9.00356110232643
best_error: 9.003560430239382
best_error: 6.212302808252114
best_error: 6.212302016778153
best_error: 6.018984636834907
best_error: 6.0189843904381775
best_error: 5.815956389340787
best_error: 5.815956160502873
best_error: 5.812873472776305
best_error: 5.812872717583437
best_error: 5.790852994913794
best_error: 5.790852768062011
best_error: 5.787103880039711
best_error: 5.787103653828293
best_error: 5.786990603714841
best_error: 5.786989848612299
best_error: 5.786973167095908
best_error: 5.786972411991226
best_error: 5.783564772938963
best_error: 5.783564546597486
best_error: 5.769851440724163
best_error: 5.769851213320079
best_error: 5.713703434841663
best_error: 5.713702687477593
best_error: 5.4994665831805625
best_error: 5.499465868623204
best_error: 5.383926966197233
best_error: 5.3839263472915775
best_error: 5.374596567070236
best_error: 5.37459600732694
best_error: 5.3745115973884445
best_error: 5.37451103943125
best_error: 5.3743669937205425
best_error: 5.37436644250254
best_error: 5.373851855405927
best_error: 5.373851304203219
best_error: 5.371724077655849
best_error: 5.371723526713918
best_error: 5.362170549628366
best_error: 5.362170001870037
best_error: 5.3345745935636515
best_error: 5.334574089023682
best_error: 5.3086792440672586
best_error: 5.30867874263256
best_error: 5.269806715986051
best_error: 5.26980621222137
best_error: 5.252884646080023
best_error: 5.2528841412163105
best_error: 5.242271300825935
best_error: 5.242270794211026
best_error: 5.241188983388099
best_error: 5.2411886541246195
best_error: 5.241186871963759
best_error: 5.241186365170614
best_error: 5.240310245319876
best_error: 5.240309738382735
best_error: 5.240266409475896
best_error: 5.240266080182712
best_error: 5.237299672468569
best_error: 5.2372991649747425
best_error: 5.223775505379759
best_error: 5.223774991696828
best_error: 5.2106986783475735
best_error: 5.2106981236803644
best_error: 5.183473207884775
best_error: 5.18347264986056
best_error: 5.154931816827843
best_error: 5.154931504476114
best_error: 5.154355577523644
best_error: 5.15435526502548
best_error: 5.152220400953601
best_error: 5.152219831862036
best_error: 5.1243665927907385
best_error: 5.124366320644967
best_error: 5.123789384830657
best_error: 5.123789129123354
best_error: 5.123487432052729
best_error: 5.123487176374768
best_error: 5.123359530473564
best_error: 5.123359274300659
best_error: 5.123299943444426
best_error: 5.123299687277424
best_error: 5.12327108935038
best_error: 5.123270833186188
best_error: 5.123260522284639
best_error: 5.123259878447584
best_error: 5.122802508457482
best_error: 5.122802237213023
best_error: 5.121952329091279
best_error: 5.1219520588771505
best_error: 5.1189865283933145
best_error: 5.118986266725707
best_error: 5.109533290723974
best_error: 5.109533009258807
best_error: 5.107789234490751
best_error: 5.107788950697056
best_error: 5.104243748971713
best_error: 5.104243467368203
best_error: 5.102925503976893
best_error: 5.102925216856486
best_error: 5.10071876297597
best_error: 5.100718475192545
best_error: 5.091355972233149
best_error: 5.091355687014444
best_error: 5.086030655643603
best_error: 5.086030025749673
best_error: 5.074081320005007
best_error: 5.074081046529974
best_error: 5.069121980867914
best_error: 5.069121706431147
best_error: 5.067160543071481
best_error: 5.067159874601828
best_error: 5.0362608938771505
best_error: 5.036260622236258
best_error: 5.024931311751977
best_error: 5.024931037770935
best_error: 5.024095627143714
best_error: 5.0240949717056305
best_error: 5.007845201989154
best_error: 5.00784454589539
best_error: 5.002691565605467
best_error: 5.002691271920936
best_error: 5.000866393350241
best_error: 5.000865736211363
best_error: 4.996243725870597
best_error: 4.996243441269522
best_error: 4.996006317891203
best_error: 4.996005648520491
best_error: 4.988076778795175
best_error: 4.98807609388407
best_error: 4.985251106503042
best_error: 4.985250827061115
best_error: 4.978403208259014
best_error: 4.978402513011141
best_error: 4.978400603455711
best_error: 4.978400339778842
best_error: 4.977303151868574
best_error: 4.977302877536308
best_error: 4.977069349698694
best_error: 4.977068649082531
best_error: 4.9719118009288
best_error: 4.971911515315005
best_error: 4.970449808300565
best_error: 4.970449521358587
best_error: 4.967701179849663
best_error: 4.967700486847386
best_error: 4.964369707703359
best_error: 4.964369416184073
best_error: 4.9627769033980975
best_error: 4.962776611424954
best_error: 4.957447709551526
best_error: 4.957447427124757
