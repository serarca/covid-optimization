ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.962685542974842
best_error: 22.96268480128082
best_error: 5.037860445039255
best_error: 5.037860444760131
best_error: 5.037850549139091
best_error: 5.03785054913655
best_error: 5.037850549130224
best_error: 5.037810937487246
best_error: 5.037810937484698
best_error: 5.037810937478373
best_error: 5.037652040480914
best_error: 5.037652040478341
best_error: 5.037652040472018
best_error: 5.03700914323641
best_error: 5.037009143233725
best_error: 5.037009143227414
best_error: 5.034313548218692
best_error: 5.034313548215483
best_error: 5.0343135482092745
best_error: 5.020922207154071
best_error: 5.0209222071459365
best_error: 5.020922207142104
best_error: 4.99488890148519
best_error: 4.994888901434816
best_error: 4.814339495206225
best_error: 4.814339487247705
best_error: 4.6441601755102875
best_error: 4.644160150861472
best_error: 4.436977130383362
best_error: 4.436977083579867
best_error: 4.090023704646393
best_error: 4.090023632433291
best_error: 4.090023618847647
best_error: 3.9732916752077516
best_error: 3.973291566641096
best_error: 3.803948881092481
best_error: 3.8039487980605613
best_error: 3.647855383744548
best_error: 3.6478552611070745
best_error: 3.528284654470822
best_error: 3.5282844448379813
best_error: 3.508009010856607
best_error: 3.5080088404498992
best_error: 3.442556694279572
best_error: 3.442556664692914
best_error: 3.416892574123996
best_error: 3.416892476123703
best_error: 3.4034063223746047
best_error: 3.4034063114418065
best_error: 3.4024465694302783
best_error: 3.4024465422798675
best_error: 3.402145525166296
best_error: 3.402145520729829
best_error: 3.4020488551019046
best_error: 3.4020488494535526
best_error: 3.402020886782432
best_error: 3.402020882914649
best_error: 3.401824412815746
best_error: 3.401824398485053
best_error: 3.401586248939588
best_error: 3.4015862293129975
best_error: 3.400805541264034
best_error: 3.400805501549194
best_error: 3.3977272811246344
best_error: 3.3977271922542287
best_error: 3.3864478782635774
best_error: 3.386447711539188
best_error: 3.3043175494397548
best_error: 3.304317297721017
best_error: 2.691561294677292
best_error: 2.691561140090198
best_error: 2.6486687656355774
best_error: 2.648668637649207
best_error: 2.648338761980387
best_error: 2.6483386341809023
best_error: 2.6226504059788116
best_error: 2.622650303008665
best_error: 2.6222127508306956
best_error: 2.6222126404427364
best_error: 2.58345783722587
best_error: 2.5834577205310154
best_error: 2.5435698677194223
best_error: 2.5435697472396424
best_error: 2.5148993470583476
best_error: 2.5148992227039972
best_error: 2.477359930707807
best_error: 2.4773598017071903
best_error: 2.459297571419779
best_error: 2.4592974399341814
best_error: 2.455656291764964
best_error: 2.455656144895963
best_error: 2.4501920388622636
best_error: 2.450191859387735
best_error: 2.341700492391581
best_error: 2.3417003213830414
best_error: 2.2777167853641855
best_error: 2.277716756773624
best_error: 2.2699454692329524
best_error: 2.2699454613577283
best_error: 2.2653347686053915
best_error: 2.265334763635738
best_error: 2.265334763342413
best_error: 2.2539100585822567
best_error: 2.2539100300091506
best_error: 2.151384725362863
best_error: 2.1513847251408706
best_error: 2.15138472278231
best_error: 2.151384722330612
best_error: 2.1513847197181297
best_error: 2.11088041354128
best_error: 2.110880334280482
best_error: 2.091138807434507
best_error: 2.0911387256703766
best_error: 2.059323095216969
best_error: 2.0593230619104332
best_error: 2.0463636213290806
best_error: 2.046363588902253
best_error: 2.0438908454625295
best_error: 2.043890834755351
best_error: 2.041170941116648
best_error: 2.0411709344565407
best_error: 2.039694484493809
best_error: 2.0396944404035025
best_error: 2.0387740381212933
best_error: 2.0387740298851704
best_error: 2.0382688503791555
best_error: 2.038268847942852
best_error: 2.038247537670174
best_error: 2.03824753762193
best_error: 2.0382475374502715
best_error: 2.038247537164183
best_error: 2.0382138421334273
best_error: 2.0382138402943055
best_error: 2.0378253201953784
best_error: 2.03782531894455
best_error: 2.0377832119799497
best_error: 2.0377832117436823
best_error: 2.037783211439621
best_error: 2.037712726404322
best_error: 2.037712725645895
best_error: 2.0373781000077105
best_error: 2.0373780985702634
best_error: 2.036757567347352
best_error: 2.036757556309146
best_error: 2.0361939314726207
best_error: 2.0361939243588227
best_error: 2.0354019842388764
best_error: 2.0354019824980174
best_error: 2.0352778593270258
best_error: 2.0352778576044677
best_error: 2.035011510981001
best_error: 2.0350115075457613
best_error: 2.033716224878986
best_error: 2.0337162064951007
best_error: 2.0308462489770913
best_error: 2.0308462134750322
best_error: 2.029271928866215
best_error: 2.0292719115981956
best_error: 2.0292718765618383
best_error: 2.0209685077044512
best_error: 2.020968450305021
best_error: 2.0175082773918196
best_error: 2.0175082310154604
best_error: 2.0141373118870733
best_error: 2.014137282147641
best_error: 2.0135408450685417
best_error: 2.0135408405799256
best_error: 2.0132867442323117
best_error: 2.0132867409562887
best_error: 2.0128926493275374
best_error: 2.0128926446024438
best_error: 2.0128643681370564
best_error: 2.012864367833133
best_error: 2.0127712209792663
best_error: 2.012771220841376
best_error: 2.012771220798234
best_error: 2.012386864437269
best_error: 2.0123868627915367
best_error: 2.010756962426276
best_error: 2.010756951442456
best_error: 2.0084315019643624
best_error: 2.008431483996394
best_error: 2.007870336000348
best_error: 2.0078703297205647
best_error: 2.006705053682161
best_error: 2.0067050426160127
best_error: 2.0061108980222597
best_error: 2.0061108926451543
best_error: 2.0059448898470817
best_error: 2.0059448898074876
best_error: 2.0059448897492316
best_error: 2.005944889745775
best_error: 2.005929227343794
best_error: 2.0059292273239957
best_error: 2.005929227320736
best_error: 2.0059292272875804
best_error: 2.0059283444916716
best_error: 2.005928344408921
best_error: 2.0059283444030584
best_error: 2.0059276912204265
best_error: 2.005927691189741
best_error: 2.005927691162513
best_error: 2.0059265296852895
best_error: 2.0059265288150283
best_error: 2.005925658101627
best_error: 2.0059256575351334
best_error: 2.005924979935247
best_error: 2.0059249795190532
best_error: 2.0059248080694916
best_error: 2.0059248077244227
best_error: 2.005924273955673
best_error: 2.005924273368261
best_error: 2.005922583593731
best_error: 2.0059225833910928
best_error: 2.005913788529753
best_error: 2.0059137880182076
best_error: 2.005887425305496
best_error: 2.005887422193381
best_error: 2.005859036622438
best_error: 2.005859032072168
best_error: 2.005836319152644
best_error: 2.0058363103126844
best_error: 2.005836176947577
best_error: 2.005836167030789
best_error: 2.005791993296714
best_error: 2.005791984332185
best_error: 2.0057488885640016
best_error: 2.0057488860102994
best_error: 2.0057388856171894
best_error: 2.005738884528149
best_error: 2.0057341174892986
best_error: 2.0057341153111174
best_error: 2.005731893359777
best_error: 2.0057318931710686
best_error: 2.00573165298458
best_error: 2.0057316528725138
best_error: 2.005731507798862
best_error: 2.005731507770753
best_error: 2.005731411609947
best_error: 2.005731411578698
best_error: 2.00573130493929
best_error: 2.005731304721082
best_error: 2.005731139929319
best_error: 2.0057311398791975
best_error: 2.005730892755395
best_error: 2.0057308924174126
best_error: 2.0057305647983714
best_error: 2.005730564775011
best_error: 2.0057305647710932
best_error: 2.0057304630719774
best_error: 2.0057304630175015
best_error: 2.005730005403074
best_error: 2.005730005263093
best_error: 2.0057280502921624
best_error: 2.0057280479670716
best_error: 2.0057263363315174
best_error: 2.005726333718067
best_error: 2.005707355918948
best_error: 2.0057073535192327
best_error: 2.005663128815291
best_error: 2.005663126287335
best_error: 2.0056365177230306
best_error: 2.0056365137233034
