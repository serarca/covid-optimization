ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.03347724845439
best_error: 24.033477135776224
best_error: 4.729564138637283
best_error: 4.729564137579832
best_error: 4.7285363733541494
best_error: 4.728536373324382
best_error: 4.728536373135809
best_error: 4.724360389924821
best_error: 4.724360389893546
best_error: 4.724360389703312
best_error: 4.706556438627567
best_error: 4.706556438588983
best_error: 4.706556438392045
best_error: 4.607410276144817
best_error: 4.6074102760209605
best_error: 4.607410275815133
best_error: 3.019521830775734
best_error: 3.019521738301951
best_error: 2.8394608834057062
best_error: 2.8394608357562743
best_error: 2.7750936322058557
best_error: 2.775093586200116
best_error: 2.747019507249755
best_error: 2.7470194714596716
best_error: 2.677410822686515
best_error: 2.677410763744915
best_error: 2.451108473222446
best_error: 2.451108321502435
best_error: 2.1274684649978464
best_error: 2.12746846445749
best_error: 2.127468329813216
best_error: 2.1101804132431594
best_error: 2.11018032049643
best_error: 2.0947267279614072
best_error: 2.0947266685051473
best_error: 2.0657694381605594
best_error: 2.0657693882663253
best_error: 2.027726373597301
best_error: 2.0277263691067318
best_error: 2.0277263620660073
best_error: 2.0270821396976655
best_error: 2.0270821032538135
best_error: 2.024265874571052
best_error: 2.024265846231339
best_error: 2.022226160080065
best_error: 2.022226149389342
best_error: 2.021263507132513
best_error: 2.0212634978051183
best_error: 2.0193754952786773
best_error: 2.019375489818394
best_error: 2.0193754866331126
best_error: 2.0040163085310825
best_error: 2.004016307203188
best_error: 2.004016299544304
best_error: 1.9606250357426316
best_error: 1.960624886281285
best_error: 1.9179494449682986
best_error: 1.917949257698305
best_error: 1.5276353645643228
best_error: 1.5276352019613466
best_error: 1.4881741607146535
best_error: 1.4881741018526327
best_error: 1.474465034285212
best_error: 1.4744649685517968
best_error: 1.366264438718324
best_error: 1.3662643277933872
best_error: 1.363435446202422
best_error: 1.3634353618779322
best_error: 1.3500301907165368
best_error: 1.3500301682385727
best_error: 1.338172109767158
best_error: 1.3381720690968182
best_error: 1.3112087245875772
best_error: 1.3112086878667133
best_error: 1.2507333931167315
best_error: 1.2507333928672069
best_error: 1.2507333924795854
best_error: 1.250733389693818
best_error: 1.239722737331039
best_error: 1.2397227369847648
best_error: 1.2397227365413408
best_error: 1.23972273366959
best_error: 1.238121844972729
best_error: 1.2381216879394248
best_error: 1.2048952612119281
best_error: 1.204895208263521
best_error: 1.1987226381941218
best_error: 1.1987226053933668
best_error: 1.1961155283017058
best_error: 1.196115516219956
best_error: 1.1934425525854357
best_error: 1.1934425492387417
best_error: 1.1934425332242409
best_error: 1.1911799022678122
best_error: 1.191179844513039
best_error: 1.1886405869039494
best_error: 1.1886405490349092
best_error: 1.1862250374815313
best_error: 1.1862249922124617
best_error: 1.185803043628877
best_error: 1.1858030364257433
best_error: 1.1832445830076705
best_error: 1.1832445656635968
best_error: 1.1820459607962308
best_error: 1.1820459568659032
best_error: 1.1756239969002047
best_error: 1.175623936728255
best_error: 1.1672798308854277
best_error: 1.167279794485375
best_error: 1.1658034053058501
best_error: 1.1658033854575878
best_error: 1.1653381496262996
best_error: 1.1653381419925355
best_error: 1.1651443374544435
best_error: 1.1651443366950722
best_error: 1.1651443365863212
best_error: 1.1651443361813403
best_error: 1.1650991595634106
best_error: 1.1650991575860639
best_error: 1.1650218560375316
best_error: 1.1650218485765795
best_error: 1.1649495292246064
best_error: 1.1649495234608178
best_error: 1.1646948562487152
best_error: 1.1646948475658296
best_error: 1.1645514998544795
best_error: 1.1645514860673314
best_error: 1.1643703091088984
best_error: 1.1643702962426976
best_error: 1.164311022460172
best_error: 1.1643110090398618
best_error: 1.1595713036181312
best_error: 1.1595712377437786
best_error: 1.1447081257669995
best_error: 1.1447080212861487
best_error: 1.142855162618825
best_error: 1.1428550999866365
best_error: 1.1428412755882096
best_error: 1.142841220081404
best_error: 1.1395949856410386
best_error: 1.1395949550478348
best_error: 1.1359678572177643
best_error: 1.135967845685727
best_error: 1.1331536523464403
best_error: 1.1331536399906303
best_error: 1.1268075605260475
best_error: 1.1268075533305262
best_error: 1.1258626362353907
best_error: 1.1258626359540067
best_error: 1.125862635251766
best_error: 1.1258615256013624
best_error: 1.1258615253177435
best_error: 1.1258615245984744
best_error: 1.124080264024854
best_error: 1.1240802372591583
best_error: 1.1234028992272806
best_error: 1.1234028705247
best_error: 1.1151336971833776
best_error: 1.1151336874277222
best_error: 1.1137947886140462
best_error: 1.1137947761587077
best_error: 1.1133020745995372
best_error: 1.1133020714626496
best_error: 1.1132909617337037
best_error: 1.113290958482671
best_error: 1.1132616701977804
best_error: 1.1132616701086528
best_error: 1.1132616696935989
best_error: 1.1132581846377887
best_error: 1.1132581831616373
best_error: 1.113256323433006
best_error: 1.1132563228421068
best_error: 1.113253524823566
best_error: 1.113253524020346
best_error: 1.1132331666722772
best_error: 1.1132331646478644
best_error: 1.1131968514942334
best_error: 1.1131968488961812
best_error: 1.113057449941057
best_error: 1.1130574447697326
best_error: 1.1127893483649856
best_error: 1.1127893425863327
best_error: 1.1118855028282817
best_error: 1.1118854939486982
best_error: 1.109157821082037
best_error: 1.109157783336549
best_error: 1.1086279024963743
best_error: 1.1086278863204668
best_error: 1.1061401870165668
best_error: 1.1061401739729977
best_error: 1.1060263284931546
best_error: 1.1060262977441109
best_error: 1.1059007527344196
best_error: 1.1059007092904805
best_error: 1.1054704126817319
best_error: 1.1054704000751299
best_error: 1.1052005042321276
best_error: 1.1052004999293734
best_error: 1.1050636721807667
best_error: 1.1050636715286657
best_error: 1.105008374905542
best_error: 1.105008374133425
best_error: 1.104971103815654
best_error: 1.1049711023840911
best_error: 1.1049549797187015
best_error: 1.1049549785699877
best_error: 1.104946629132278
best_error: 1.1049466284376661
best_error: 1.104941924380916
best_error: 1.1049419235991906
best_error: 1.1049408989137033
best_error: 1.1049408981977455
best_error: 1.1049402790602227
best_error: 1.1049402783647497
best_error: 1.1049401688423395
best_error: 1.1049401679377304
best_error: 1.1049400649208758
best_error: 1.1049400647561947
best_error: 1.1049399370228443
best_error: 1.1049399366669264
best_error: 1.1049399000181808
best_error: 1.1049398997980766
best_error: 1.104939852427488
best_error: 1.1049398523083207
best_error: 1.104939772063983
best_error: 1.104939772051738
best_error: 1.1049397509766479
best_error: 1.1049397508948717
best_error: 1.104939744026626
best_error: 1.1049397437760093
best_error: 1.1049397412545143
best_error: 1.1049397412100626
best_error: 1.1049397376848809
best_error: 1.104939737666783
best_error: 1.1049397376267496
