ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.79271271577144
best_error: 97.79271259194697
best_error: 97.7927125854683
best_error: 14.45840952495454
best_error: 14.458409524941189
best_error: 14.458409501259155
best_error: 14.37909486977686
best_error: 14.379094844187788
best_error: 13.98706828485
best_error: 13.987068248495731
best_error: 11.98681195776973
best_error: 11.986811954337838
best_error: 11.986811952555076
best_error: 11.930741532189012
best_error: 11.930741528293094
best_error: 11.887495780989378
best_error: 11.887495779193639
best_error: 11.887495776929876
best_error: 11.544466522810666
best_error: 11.54446650445892
best_error: 11.52848050885202
best_error: 11.52848048840665
best_error: 11.511216120680013
best_error: 11.511216098003228
best_error: 11.379830973859463
best_error: 11.379830967024958
best_error: 11.09604274438856
best_error: 11.096042734043836
best_error: 11.096042722479666
best_error: 11.087777077077105
best_error: 11.087777077076943
best_error: 11.087777075277174
best_error: 11.087777066992544
best_error: 9.842777023922318
best_error: 9.842776970447762
best_error: 9.306109459491996
best_error: 9.306109311179313
best_error: 9.251215425140378
best_error: 9.251215424554088
best_error: 9.251215415455505
best_error: 9.251215410226042
best_error: 9.207930291257469
best_error: 9.207930291224221
best_error: 9.207930281311775
best_error: 9.207930275560932
best_error: 9.062795052234229
best_error: 9.062795052140546
best_error: 9.062795040909783
best_error: 9.062795034360605
best_error: 8.963981324439395
best_error: 8.963981123567768
best_error: 8.950012540168144
best_error: 8.950012325443726
best_error: 8.935813200955142
best_error: 8.935812981730637
best_error: 8.902242143732824
best_error: 8.902241935284238
best_error: 8.894549504740636
best_error: 8.894549335627659
best_error: 8.678870408126201
best_error: 8.67887040235132
best_error: 8.678870396848026
best_error: 8.67887038798352
best_error: 8.62199436428378
best_error: 8.62199429072244
best_error: 8.617588241296811
best_error: 8.617588111860838
best_error: 8.49021443834898
best_error: 8.490214416361122
best_error: 8.442510109687785
best_error: 8.44251002348879
best_error: 8.054658351720459
best_error: 8.054658188687537
best_error: 7.953129558868767
best_error: 7.953129558080629
best_error: 7.9531295563710875
best_error: 7.9531295466088565
best_error: 7.953129534602308
best_error: 7.9463837173825675
best_error: 7.946383703462997
best_error: 7.946383694396421
best_error: 7.922395735083841
best_error: 7.922395732912669
best_error: 7.922395732484246
best_error: 7.922395722388826
best_error: 7.922395711959526
best_error: 7.761772749666466
best_error: 7.761772662935638
best_error: 7.578447309873917
best_error: 7.578446944666154
best_error: 7.514069367248247
best_error: 7.514069043571761
best_error: 7.478848691292312
best_error: 7.478848512246765
best_error: 7.455340853817997
best_error: 7.455340786103307
best_error: 7.446778479256034
best_error: 7.446778419288197
best_error: 7.3843470679232635
best_error: 7.384346674371011
best_error: 7.335180585305887
best_error: 7.335180163784754
best_error: 7.319710261182258
best_error: 7.319710203760168
best_error: 7.1252658519479475
best_error: 7.125265281200878
best_error: 6.939449377839765
best_error: 6.939449003447161
best_error: 6.934739894091906
best_error: 6.934739873627371
best_error: 6.930512159610435
best_error: 6.930512138951804
best_error: 6.929809809643414
best_error: 6.929809789005742
best_error: 6.929554763607154
best_error: 6.929554616082579
best_error: 6.881088899913662
best_error: 6.881088881012134
best_error: 6.879344103200943
best_error: 6.879343947074169
best_error: 6.878956839446937
best_error: 6.878956811908842
best_error: 6.714973706724473
best_error: 6.7149735536131745
best_error: 6.600062323993446
best_error: 6.6000622820288815
best_error: 6.598575055526498
best_error: 6.5985750416607925
best_error: 6.598208688866603
best_error: 6.598208688223449
best_error: 6.598208687333887
best_error: 6.598208686764438
best_error: 6.598208686048637
best_error: 6.598208683202539
best_error: 6.589764236385698
best_error: 6.589764093197885
best_error: 6.563369533881646
best_error: 6.563369533277361
best_error: 6.563369533205602
best_error: 6.5633695327184896
best_error: 6.563369531164984
best_error: 6.563369530224735
best_error: 6.5633695283798605
best_error: 6.544773624020817
best_error: 6.544773617112082
best_error: 6.541203535852976
best_error: 6.541203528258159
best_error: 6.5403070652575135
best_error: 6.540307057137515
best_error: 6.539977863955498
best_error: 6.5399778557722525
best_error: 6.539829367298568
best_error: 6.539829359086791
best_error: 6.539709805635788
best_error: 6.539709797401233
best_error: 6.53969321800675
best_error: 6.539693209769036
best_error: 6.539686590759
best_error: 6.539686582520024
best_error: 6.539682254615647
best_error: 6.539682246375857
best_error: 6.5396811311373
best_error: 6.5396811228973
best_error: 6.539680690124931
best_error: 6.539680681884845
best_error: 6.539680488108891
best_error: 6.5396804798687675
best_error: 6.539680361227339
best_error: 6.539680352987191
best_error: 6.539680297673368
best_error: 6.5396802894332104
best_error: 6.539680215878453
