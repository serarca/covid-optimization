ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.192104058292404
best_error: 9.192104036650957
best_error: 8.580196216618729
best_error: 8.580196135923051
best_error: 4.504477066039225
best_error: 4.504476848411166
best_error: 4.322929055131165
best_error: 4.322928997888353
best_error: 4.30694125202769
best_error: 4.306941209081583
best_error: 4.297776880966756
best_error: 4.297776846722077
best_error: 4.297239655132125
best_error: 4.297239621173928
best_error: 4.296890079859163
best_error: 4.296890046197698
best_error: 4.2966549598874355
best_error: 4.296654926203744
best_error: 4.296522784089214
best_error: 4.296522750555899
best_error: 4.296423680033303
best_error: 4.296423646609691
best_error: 4.2963592523991645
best_error: 4.296359218969444
best_error: 4.296331762966898
best_error: 4.296331729534578
best_error: 4.296300621971328
best_error: 4.296300588536171
best_error: 4.29628867995387
best_error: 4.296288679953868
best_error: 4.296288677243334
best_error: 4.296281658575643
best_error: 4.2962816251387554
best_error: 4.2962811485204515
best_error: 4.296281115083514
best_error: 4.296281048036733
best_error: 4.296281048036731
best_error: 4.296281043754267
best_error: 4.296244625323817
best_error: 4.2962446253238165
best_error: 4.296244622566123
best_error: 4.296235512893933
best_error: 4.296235512893932
best_error: 4.296235510133674
best_error: 4.296198952378361
best_error: 4.296198949610272
best_error: 4.296050321795241
best_error: 4.296050318991162
best_error: 4.29541818213036
best_error: 4.295418182130359
best_error: 4.295418179173405
best_error: 4.292241655585027
best_error: 4.292241655585026
best_error: 4.292241651968459
best_error: 4.266013711383504
best_error: 4.266013711383502
best_error: 4.26601370450211
best_error: 4.243855515111834
best_error: 4.243855513179727
best_error: 4.243517421653259
best_error: 4.243517419336619
best_error: 4.240003002857398
best_error: 4.240003002857397
best_error: 4.24000299997517
best_error: 4.198003676743694
best_error: 4.198003673000078
best_error: 4.168546351902197
best_error: 4.1685463519021955
best_error: 4.1685463506563565
best_error: 4.1616794632139555
best_error: 4.161679463213955
best_error: 4.159083655331083
best_error: 4.15908365533108
best_error: 4.159083655326562
best_error: 4.158799218702143
best_error: 4.158799218702142
best_error: 4.158716754835387
best_error: 4.158716754835385
best_error: 4.127612112650074
best_error: 4.1276121123165534
best_error: 4.12761210054284
best_error: 4.0909773796029585
best_error: 4.0909773792983986
best_error: 4.085391611885529
best_error: 4.085391611885528
best_error: 4.085391611400678
best_error: 4.030949385562933
best_error: 4.030949380581055
best_error: 4.024067826124171
best_error: 4.0240678261241705
best_error: 4.024067820357631
best_error: 4.01810986920928
best_error: 4.0181098627621905
best_error: 4.016526219894354
best_error: 4.016526219894353
best_error: 4.015525219646337
best_error: 4.015525219646336
best_error: 4.015525212969029
best_error: 3.9815629435744
best_error: 3.9815629435743993
best_error: 3.981562941978138
best_error: 3.9708126782418574
best_error: 3.970812678241856
best_error: 3.9708126778256547
best_error: 3.9672429883215434
best_error: 3.967242988321543
best_error: 3.9594335915282577
best_error: 3.9361339161307756
best_error: 3.936133887773091
best_error: 3.9342847336607214
best_error: 3.93347501580567
best_error: 3.933474986625783
best_error: 3.9304956012103363
best_error: 3.9304955879755736
best_error: 3.93018991601724
best_error: 3.930189880074555
best_error: 3.926152071455172
best_error: 3.9261520714551716
best_error: 3.9261520584053238
best_error: 3.9261206276229133
best_error: 3.9261205820406437
best_error: 3.9261169151431425
best_error: 3.926116869560309
best_error: 3.9259308139073346
best_error: 3.925930813907334
best_error: 3.9259308139073332
best_error: 3.9259308008740588
best_error: 3.9259252003946856
best_error: 3.9259251518315494
best_error: 3.925922545106947
best_error: 3.9259225451069453
best_error: 3.925922532073868
best_error: 3.9259216120843754
best_error: 3.9259215635206965
best_error: 3.9259204796148452
best_error: 3.925920479614844
best_error: 3.9259204665818155
best_error: 3.9259201338610703
best_error: 3.925920133861068
best_error: 3.9259201338610645
best_error: 3.925920120828047
best_error: 3.9259201150653475
best_error: 3.9259201150653467
best_error: 3.925920114043317
