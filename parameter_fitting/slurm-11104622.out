ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 105.47510418055691
best_error: 105.47510407290227
best_error: 105.47510401401931
best_error: 18.12226443610854
best_error: 18.122264436103098
best_error: 18.122264426398004
best_error: 18.107346573720864
best_error: 18.107346573715226
best_error: 18.107346563609795
best_error: 18.04099355746034
best_error: 18.04099355745353
best_error: 18.04099354544809
best_error: 17.58410218386068
best_error: 17.584102183815148
best_error: 17.58410215394615
best_error: 17.489143670735313
best_error: 17.489143670670188
best_error: 17.489143636210155
best_error: 17.37284387934565
best_error: 17.37284387924869
best_error: 17.372843838832523
best_error: 12.766275582736313
best_error: 12.766275576847718
best_error: 12.766275576704233
best_error: 12.766275570662398
best_error: 12.766275567038262
best_error: 12.628696821612523
best_error: 12.628696777776788
best_error: 12.553537421752203
best_error: 12.553537420760328
best_error: 12.553537390404601
best_error: 12.235150040472533
best_error: 12.235150032571838
best_error: 12.23515002553745
best_error: 12.214712759492214
best_error: 12.214712742375294
best_error: 11.675356727208259
best_error: 11.67535671318889
best_error: 10.854586469790997
best_error: 10.85458621000377
best_error: 10.823122787340889
best_error: 10.823122785656185
best_error: 10.823122771155232
best_error: 10.819024149232106
best_error: 10.819024148585676
best_error: 10.819024130940228
best_error: 10.805317568515019
best_error: 10.805317568368384
best_error: 10.805317549291104
best_error: 10.771706727857746
best_error: 10.771706703909011
best_error: 10.731311093615837
best_error: 10.731311066949317
best_error: 10.614368283868863
best_error: 10.61436782178439
best_error: 10.573388255222621
best_error: 10.573388242545073
best_error: 10.539044023882097
best_error: 10.53904401236896
best_error: 10.516455617976598
best_error: 10.516455427129198
best_error: 10.4732624998003
best_error: 10.473262485843948
best_error: 10.467554047568367
best_error: 10.46755403814876
best_error: 10.457124391099972
best_error: 10.457124159952702
best_error: 10.387288399096803
best_error: 10.38728814494397
best_error: 10.32700783347876
best_error: 10.327007823837217
best_error: 10.326307442410176
best_error: 10.326307394523239
best_error: 10.318155828192557
best_error: 10.318155818333377
best_error: 10.317599165263895
best_error: 10.317599118922807
best_error: 10.27793925927138
best_error: 10.277939207000069
best_error: 10.254257318902262
best_error: 10.254257306934665
best_error: 10.2434238309543
best_error: 10.243423818037442
best_error: 10.238951204688117
best_error: 10.238951151086352
best_error: 10.218284115985707
best_error: 10.218284101400384
best_error: 10.216714904257472
best_error: 10.216714851679647
best_error: 10.172880130238516
best_error: 10.172880076223919
best_error: 10.075717525069793
best_error: 10.075717471566687
best_error: 10.073841017855933
best_error: 10.073840939847212
best_error: 9.82330030803004
best_error: 9.823299996156278
best_error: 9.801856498325451
best_error: 9.80185646992421
best_error: 9.740759301262177
best_error: 9.74075928117809
best_error: 9.7276638203553
best_error: 9.727663802924624
best_error: 9.726409210988418
best_error: 9.726409016761934
best_error: 9.725419787284023
best_error: 9.725419770591264
best_error: 9.723617348325298
best_error: 9.723617331760721
best_error: 9.723351477222383
best_error: 9.723351460664823
best_error: 9.723231577511417
best_error: 9.723231560957029
best_error: 9.723155462950547
best_error: 9.723155446397671
best_error: 9.723150478034395
best_error: 9.723150461481614
best_error: 9.723149658100336
best_error: 9.723149475020442
best_error: 9.72289917526648
best_error: 9.722899160104962
best_error: 9.722589149031814
best_error: 9.722589134243238
best_error: 9.721060376686847
best_error: 9.721060363312787
best_error: 9.721014759862438
best_error: 9.721014746455287
best_error: 9.720942689050034
best_error: 9.720942675647413
best_error: 9.720922708729116
best_error: 9.72092269532775
best_error: 9.720907983246661
best_error: 9.720907969846223
best_error: 9.720895955898655
best_error: 9.720895942498979
best_error: 9.720883313471255
best_error: 9.720883300072384
best_error: 9.720858685766732
best_error: 9.720858672369399
best_error: 9.720817374509664
best_error: 9.720817361114939
best_error: 9.720784818262864
best_error: 9.720784804870195
best_error: 9.720781835195606
best_error: 9.720781821803085
best_error: 9.720779909155429
best_error: 9.720779895763002
best_error: 9.72077866912852
best_error: 9.720778655736158
best_error: 9.720777874136243
best_error: 9.720777860743913
best_error: 9.720777746197586
best_error: 9.72077772903697
best_error: 9.72077770106252
best_error: 9.720777687670198
best_error: 9.720777654113899
best_error: 9.720777640721579
best_error: 9.72077763547251
best_error: 9.72077762208019
best_error: 9.720777621853747
best_error: 9.720777621496836
