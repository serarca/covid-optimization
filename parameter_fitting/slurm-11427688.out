ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.66681854411477
best_error: 23.666817837147217
best_error: 5.063172139214127
best_error: 5.063172139017301
best_error: 5.063166155948919
best_error: 5.063166155946185
best_error: 5.063166155933046
best_error: 5.063142208915318
best_error: 5.06314220891258
best_error: 5.063142208899438
best_error: 5.063046196575225
best_error: 5.063046196572471
best_error: 5.063046196559314
best_error: 5.062658518312997
best_error: 5.0626585183101716
best_error: 5.062658518296956
best_error: 5.061046929090792
best_error: 5.061046929087647
best_error: 5.061046929074208
best_error: 5.053396417834926
best_error: 5.053396417829567
best_error: 5.053396417815503
best_error: 4.766726231987479
best_error: 4.766726212799031
best_error: 4.652113448994966
best_error: 4.652113414154585
best_error: 4.40135165265266
best_error: 4.401351579022421
best_error: 3.3797792838646497
best_error: 3.3797790911610663
best_error: 3.379779031014816
best_error: 3.0712618308142345
best_error: 3.0712617985421935
best_error: 3.0679065774865024
best_error: 3.067906574099555
best_error: 3.067906567120628
best_error: 3.0664411118504047
best_error: 3.066441110395475
best_error: 3.0664411008614794
best_error: 3.0623760855231414
best_error: 3.0623760722009212
best_error: 3.0492420678046517
best_error: 3.049242046700985
best_error: 3.0374965154780678
best_error: 3.0374963571402054
best_error: 3.00448300971496
best_error: 3.004482998858846
best_error: 3.004482807058645
best_error: 2.992068816835412
best_error: 2.9920688121485006
best_error: 2.992068632552926
best_error: 2.9770960244389015
best_error: 2.977095888686726
best_error: 2.957814505366341
best_error: 2.9578144978656375
best_error: 2.9578144566537783
best_error: 2.9540796075527815
best_error: 2.9540795865667895
best_error: 2.944634788017879
best_error: 2.9446346948875415
best_error: 2.9375164049858573
best_error: 2.9375162205632694
best_error: 2.930295648913958
best_error: 2.9302955943847
best_error: 2.927783007505914
best_error: 2.927782975222205
best_error: 2.9277829480170374
best_error: 2.923088225420843
best_error: 2.9230882037730304
best_error: 2.9230881641778774
best_error: 2.9063486096547315
best_error: 2.9063485461852867
best_error: 2.739207894907878
best_error: 2.7392078330312097
best_error: 2.7392077578368887
best_error: 2.5874796702004295
best_error: 2.58747947210387
best_error: 2.4406645738031365
best_error: 2.440664317702127
best_error: 2.1448183389912217
best_error: 2.144818213143491
best_error: 2.020512966138396
best_error: 2.0205128484472157
best_error: 2.0192643052408727
best_error: 2.019264289379967
best_error: 2.0192642557925433
best_error: 2.012635971567144
best_error: 2.012635960838767
best_error: 2.01255534602822
best_error: 2.0125553296314513
best_error: 2.0122766136661707
best_error: 2.012276610341032
best_error: 2.0121817592050593
best_error: 2.0121817560433457
best_error: 2.0120334733951766
best_error: 2.0120334730860847
best_error: 2.0120334726301707
best_error: 2.012033470554381
best_error: 2.0117859112294885
best_error: 2.0117859042680895
best_error: 2.011304149884308
best_error: 2.0113041374335365
best_error: 2.0073247283100937
best_error: 2.0073246826788487
best_error: 1.9977810096362618
best_error: 1.997780900436342
best_error: 1.9782684932736379
best_error: 1.9782683513274417
best_error: 1.978231180927134
best_error: 1.9782310686345446
best_error: 1.9736605638159472
best_error: 1.9736604820303736
best_error: 1.968107590059432
best_error: 1.9681075694298884
best_error: 1.9679668774372974
best_error: 1.9679668649908393
best_error: 1.9678873778322603
best_error: 1.9678873758331061
best_error: 1.9678873751356454
best_error: 1.965849547433487
best_error: 1.965849546624758
best_error: 1.9658495456969738
best_error: 1.9656769452030616
best_error: 1.9656769434145858
best_error: 1.9655078082756596
best_error: 1.9655078066369105
best_error: 1.9655078052564319
best_error: 1.964522803285547
best_error: 1.9645227978579993
best_error: 1.9639795436601417
best_error: 1.9639795409844314
best_error: 1.963964951362602
best_error: 1.9639649507232968
best_error: 1.9639649505831047
best_error: 1.9639649501093155
best_error: 1.9639500358336226
best_error: 1.9639500357439792
best_error: 1.9639500350512953
best_error: 1.9639500346332732
best_error: 1.9639351801747953
best_error: 1.9639351764931468
best_error: 1.9638967301100985
best_error: 1.9638967282516766
best_error: 1.9638123850239722
best_error: 1.9638123790762836
best_error: 1.9637837096068507
best_error: 1.963783702208011
best_error: 1.9637053825905948
best_error: 1.9637053817511696
best_error: 1.9637053777046765
best_error: 1.9635372745198736
best_error: 1.963537254473958
best_error: 1.9631991152128643
best_error: 1.9631991103163997
best_error: 1.9627593212169614
best_error: 1.9627593108749093
best_error: 1.9603786902889164
best_error: 1.9603786774770517
best_error: 1.9565021609904278
best_error: 1.9565021319356
best_error: 1.9557261818529554
best_error: 1.9557261621605457
best_error: 1.9511766003386253
best_error: 1.9511765763793238
best_error: 1.950170940884264
best_error: 1.9501709367796847
best_error: 1.9501709291145284
best_error: 1.9498183255239028
best_error: 1.9498183177154829
best_error: 1.9497837707613344
best_error: 1.9497837685244002
best_error: 1.9497762761304411
best_error: 1.9497762754218848
best_error: 1.949776275371928
best_error: 1.9497666658189579
best_error: 1.9497666636965045
best_error: 1.9497639056914053
best_error: 1.94976390552161
best_error: 1.9497639049307087
best_error: 1.9497616789292433
best_error: 1.9497616782486815
best_error: 1.9497616781725446
best_error: 1.9497578808560525
best_error: 1.949757877970773
best_error: 1.9497529539937022
best_error: 1.9497529506736757
best_error: 1.9497377160360712
best_error: 1.9497377119240467
best_error: 1.9497324988426354
best_error: 1.9497324953736888
best_error: 1.9497291083082209
best_error: 1.9497291048443262
best_error: 1.9497242907595294
best_error: 1.9497242906689092
best_error: 1.9497242900044207
best_error: 1.9497224175093637
best_error: 1.9497224171552594
best_error: 1.949722416764446
best_error: 1.9497149892503314
best_error: 1.949714987971636
best_error: 1.9496905439600212
best_error: 1.9496905386887957
best_error: 1.9496604888145965
best_error: 1.949660483144397
best_error: 1.9494891253733917
best_error: 1.9494891193130388
best_error: 1.949353954284698
best_error: 1.9493539513396252
best_error: 1.9492485366033805
best_error: 1.9492485350624953
best_error: 1.9490965190027123
best_error: 1.9490965095370356
best_error: 1.9489292848964732
best_error: 1.94892926770556
best_error: 1.948520973787558
best_error: 1.9485209268752286
best_error: 1.9480428938328334
best_error: 1.9480428420488116
best_error: 1.9467112307947831
best_error: 1.946711144477158
best_error: 1.9401785242926095
best_error: 1.9401784191148597
best_error: 1.9339331669877746
best_error: 1.933933139015796
best_error: 1.9279120344859706
best_error: 1.9279120335776074
best_error: 1.9273608037398313
best_error: 1.927360801612719
best_error: 1.9269556636627905
best_error: 1.9269556632712241
best_error: 1.9268160850923146
best_error: 1.9268160845396545
best_error: 1.9266328948103628
best_error: 1.926632891699283
best_error: 1.9266282160958657
best_error: 1.9266282159845292
best_error: 1.9266282159499597
best_error: 1.926627695052112
best_error: 1.9266276949727887
best_error: 1.9266276949416496
best_error: 1.9266276949126018
best_error: 1.9266274218596413
best_error: 1.926627421783615
best_error: 1.9266274214786916
best_error: 1.9266267787734688
best_error: 1.9266267780764637
best_error: 1.9266226910222748
best_error: 1.9266226892695277
best_error: 1.9266165857611544
best_error: 1.9266165843001373
best_error: 1.9265952870225407
best_error: 1.9265952847429988
best_error: 1.9265125963027887
best_error: 1.9265125808845744
best_error: 1.9264625242393203
best_error: 1.9264625116582772
best_error: 1.9263348495594903
best_error: 1.9263348489972116
best_error: 1.9263348451714482
