ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.317029490457434
best_error: 11.317029483140015
best_error: 11.313701654782824
best_error: 11.313701647210223
best_error: 8.012064880870607
best_error: 8.01206444710551
best_error: 7.069434721265641
best_error: 7.0694341693671205
best_error: 5.971950738692669
best_error: 5.971950217281774
best_error: 5.738965077213541
best_error: 5.738965019463597
best_error: 5.646642438046159
best_error: 5.646642329033969
best_error: 5.64440671530121
best_error: 5.6444067152561885
best_error: 5.644406699696205
best_error: 5.643775225984723
best_error: 5.643775225939684
best_error: 5.643775210404268
best_error: 5.641255804118261
best_error: 5.641255804073024
best_error: 5.641255788553057
best_error: 5.638949322401009
best_error: 5.63894932235553
best_error: 5.638949306773003
best_error: 5.631903406683193
best_error: 5.631903406637106
best_error: 5.631903390906707
best_error: 5.603290912610931
best_error: 5.603290912562327
best_error: 5.603290896257432
best_error: 5.48034539301353
best_error: 5.480345392952786
best_error: 5.480345373850568
best_error: 4.8944183315160235
best_error: 4.89441820015084
best_error: 4.80335472312452
best_error: 4.803354627874393
best_error: 4.800906733794264
best_error: 4.800906643270396
best_error: 4.7934906974968055
best_error: 4.793490683391856
best_error: 4.792784827686156
best_error: 4.792784746076656
best_error: 4.792725317802675
best_error: 4.792725317687027
best_error: 4.792725317059664
best_error: 4.792440642821145
best_error: 4.792440642705772
best_error: 4.792440642078357
best_error: 4.791301434224242
best_error: 4.791301434108605
best_error: 4.7913014334823085
best_error: 4.786784274203425
best_error: 4.78678419436601
best_error: 4.769178552378497
best_error: 4.769178476855419
best_error: 4.700070001824841
best_error: 4.700069941346253
best_error: 4.549168722882973
best_error: 4.549168700361621
best_error: 4.549168699627975
best_error: 4.521556891277404
best_error: 4.521556881596749
best_error: 4.395908496314511
best_error: 4.395908496212442
best_error: 4.395908496201438
best_error: 4.395908488019064
best_error: 4.345148523350152
best_error: 4.345148402913418
best_error: 4.3348796333225605
best_error: 4.334879552261542
best_error: 4.328620457926808
best_error: 4.328620365245051
best_error: 4.316965408658605
best_error: 4.3169653203506515
best_error: 4.298581275005418
best_error: 4.29858113997676
best_error: 4.25474524943642
best_error: 4.254745125433751
best_error: 4.142492303102728
best_error: 4.142492302800367
best_error: 4.12453548361455
best_error: 4.124535466441664
best_error: 4.085342761981324
best_error: 4.0853426965417565
best_error: 4.081891395919968
best_error: 4.0818913808333335
best_error: 4.051955669445574
best_error: 4.051955644052096
best_error: 4.007410107592106
best_error: 4.007410037711266
best_error: 4.002910265630022
best_error: 4.002910137635434
best_error: 3.9628245774974173
best_error: 3.962824552918908
best_error: 3.944753130474234
best_error: 3.9447531247203225
best_error: 3.9421376212188717
best_error: 3.942137613945737
best_error: 3.9415035286576923
best_error: 3.941503497212177
best_error: 3.935194721856766
best_error: 3.935194696701184
best_error: 3.931129916031298
best_error: 3.9311299150676717
best_error: 3.9311299123400865
best_error: 3.931012763925841
best_error: 3.931012757722589
best_error: 3.9309951878561575
best_error: 3.930995180411636
best_error: 3.9309839119068064
best_error: 3.9309839044519164
best_error: 3.9309388396184666
best_error: 3.930938832246146
best_error: 3.930924600488619
best_error: 3.9309245931871812
best_error: 3.9309071316673245
best_error: 3.930907124349681
best_error: 3.930896677955789
best_error: 3.9308966706284556
best_error: 3.930893134424249
best_error: 3.930893111478853
best_error: 3.930892408940891
best_error: 3.930892401708303
best_error: 3.930869259017679
best_error: 3.930869251763569
best_error: 3.9308670911813337
best_error: 3.9308670839247624
best_error: 3.9308650881145
best_error: 3.930865080962392
best_error: 3.9308640756898874
best_error: 3.930864068536615
best_error: 3.930863135664152
best_error: 3.9308631285098046
best_error: 3.9308626558887902
best_error: 3.930862648733894
best_error: 3.9308622105599995
best_error: 3.930862203404594
best_error: 3.930861983368076
best_error: 3.930861976212411
best_error: 3.9308617725269848
best_error: 3.930861765371076
best_error: 3.9308616647861117
best_error: 3.9308616576300763
best_error: 3.930861564830571
best_error: 3.930861557674426
best_error: 3.930861513582328
best_error: 3.9308615064261234
best_error: 3.9308614660665904
best_error: 3.9308614589103366
