ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 68
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.48244277652434
best_error: 102.48244256406568
best_error: 20.428663165036657
best_error: 20.428663165035598
best_error: 20.428663163109352
best_error: 20.42847046249367
best_error: 20.428470460560845
best_error: 20.427694112244257
best_error: 20.42769411028909
best_error: 20.424497212384498
best_error: 20.424497210335847
best_error: 20.410039169485184
best_error: 20.41003916698493
best_error: 20.301809783294978
best_error: 20.301809776242862
best_error: 20.298997919250517
best_error: 20.298997912056002
best_error: 15.137566658794475
best_error: 15.137566605609827
best_error: 13.930094567128766
best_error: 13.930094533810891
best_error: 13.911530200613194
best_error: 13.911530192494775
best_error: 13.91153019076884
best_error: 13.911078701697898
best_error: 13.91107869359404
best_error: 13.911078691865061
best_error: 13.909306708777859
best_error: 13.909306700825805
best_error: 13.909306698967855
best_error: 13.905979843406538
best_error: 13.905979838996341
best_error: 13.905979801376054
best_error: 13.903335372602218
best_error: 13.90333536735799
best_error: 13.903335342123981
best_error: 13.881159869055697
best_error: 13.881159860154678
best_error: 13.881159860144553
best_error: 13.857560253044205
best_error: 13.857560220619344
best_error: 13.853816193703228
best_error: 13.853816183663168
best_error: 13.848254570680162
best_error: 13.848254560463335
best_error: 13.84709696321077
best_error: 13.847096952972176
best_error: 13.84668842259431
best_error: 13.846688412355551
best_error: 13.846500446186345
best_error: 13.846500435947517
best_error: 13.846477047205262
best_error: 13.846477036965577
best_error: 13.846472766848045
best_error: 13.846472756608204
best_error: 13.846470279158844
best_error: 13.846470268918912
best_error: 13.846462477362055
best_error: 13.846462467121839
best_error: 13.84646232917996
best_error: 13.846462318939736
best_error: 13.846462188106738
best_error: 13.846462177866517
best_error: 13.846462116529924
best_error: 13.846462106289692
best_error: 13.846462074436396
best_error: 13.846462064196164
best_error: 13.846461939198516
best_error: 13.846461928958286
best_error: 13.812968763674604
best_error: 13.812968754814559
best_error: 13.812968754581664
best_error: 13.796215684621568
best_error: 13.796215677322802
best_error: 13.796215675613434
best_error: 13.789527217583872
best_error: 13.789527211910645
best_error: 13.789527197274253
best_error: 13.789217214494357
best_error: 13.789217208825775
best_error: 13.789217194143172
best_error: 13.789061683907986
best_error: 13.789061678241737
best_error: 13.78906166353594
best_error: 13.788982325387732
best_error: 13.78898231972267
best_error: 13.788982305005042
best_error: 13.78894183957534
best_error: 13.788941833910885
best_error: 13.788941819187226
best_error: 13.788937496655471
best_error: 13.788937191894567
best_error: 13.78825880490684
best_error: 13.788258799206009
best_error: 13.788258785103055
best_error: 13.785716242138367
best_error: 13.785716236437793
best_error: 13.785716222410182
best_error: 13.730977553741933
best_error: 13.730977546117593
best_error: 13.73097754477225
best_error: 13.72997068637004
best_error: 13.729970657162127
best_error: 13.729879723970463
best_error: 13.729879715989643
best_error: 13.729879714997736
best_error: 13.729875684227448
best_error: 13.7298756550211
best_error: 13.729874145526148
best_error: 13.729874137545309
best_error: 13.7298741365534
best_error: 13.729861292475348
best_error: 13.729861284494458
best_error: 13.729861283502544
best_error: 13.729859978379977
best_error: 13.729859970399072
best_error: 13.729859969407169
best_error: 13.72985900557633
best_error: 13.729858997595429
best_error: 13.729858996603516
best_error: 13.729858550344336
best_error: 13.729858542363436
best_error: 13.72985854137152
best_error: 13.729858054990409
best_error: 13.729858047009502
best_error: 13.72985804601759
best_error: 13.729857903456113
best_error: 13.729857895475202
best_error: 13.729857894483292
best_error: 13.729857816901806
best_error: 13.729857808920896
best_error: 13.729857807928983
best_error: 13.729857743024372
best_error: 13.729857735043463
best_error: 13.72985773405155
best_error: 13.729857708975114
best_error: 13.729857700994202
best_error: 13.729857700002292
best_error: 13.729857677144603
best_error: 13.729857669163694
best_error: 13.729857668171782
best_error: 13.727471402553677
best_error: 13.727471394958702
best_error: 13.727471393586594
best_error: 13.724977662581566
best_error: 13.724977633673555
best_error: 13.717399025645726
best_error: 13.717398734416978
best_error: 13.717059505021501
best_error: 13.717059498948867
best_error: 13.717059496842403
best_error: 13.7170594960967
best_error: 13.716279657079308
best_error: 13.71627965099437
best_error: 13.716279649060407
best_error: 13.716279648146958
best_error: 13.716143219566945
best_error: 13.716143213484118
best_error: 13.716143211517101
best_error: 13.71614321063328
best_error: 13.716063508671796
best_error: 13.716063502590199
best_error: 13.716063500603873
best_error: 13.716063499737361
best_error: 13.716026131989379
best_error: 13.716026125908357
best_error: 13.716026123912982
best_error: 13.716026123054576
best_error: 13.716000420852009
best_error: 13.716000414431416
best_error: 13.716000411917161
best_error: 13.71598957476338
best_error: 13.715989568342948
best_error: 13.715989565828426
best_error: 13.715988464824452
best_error: 13.715988458404041
best_error: 13.71598845588949
best_error: 13.715987719051409
best_error: 13.715987712631012
best_error: 13.71598771011644
best_error: 13.715987403202146
best_error: 13.71598739678175
best_error: 13.715987394267172
best_error: 13.715987330942058
best_error: 13.715987324521663
best_error: 13.715987322007084
best_error: 13.715987299931312
best_error: 13.71598727188216
