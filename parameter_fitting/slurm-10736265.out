ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.400811921881946
best_error: 10.400811918192243
best_error: 9.351432111094672
best_error: 9.351431997273796
best_error: 7.861116675461808
best_error: 7.861116401165903
best_error: 5.365539694389542
best_error: 5.365539628763729
best_error: 5.365539625628337
best_error: 5.356991730730481
best_error: 5.356991730730477
best_error: 5.3569917163280945
best_error: 5.339044166708601
best_error: 5.339044166708597
best_error: 5.339044123576989
best_error: 5.31091413589439
best_error: 5.310914135894385
best_error: 5.310914090291908
best_error: 5.195252599273916
best_error: 5.195252599273909
best_error: 5.195252576899103
best_error: 5.092341691457965
best_error: 5.092341691457959
best_error: 5.092341619121311
best_error: 5.0903018206453625
best_error: 5.090301820645356
best_error: 5.090301747678771
best_error: 5.089591416652633
best_error: 5.089591416652626
best_error: 5.089591343622385
best_error: 5.089540400322839
best_error: 5.089540400322834
best_error: 5.089540327294172
best_error: 5.089527059869496
best_error: 5.089526994976515
best_error: 5.089526956919927
best_error: 5.089526326875887
best_error: 5.089526326875881
best_error: 5.089526253847651
best_error: 4.220493668158288
best_error: 4.220493626662525
best_error: 4.220493517511198
best_error: 4.094143446591084
best_error: 4.09414343457439
best_error: 4.094143424117623
best_error: 4.094047111696028
best_error: 4.0940470998798775
best_error: 4.094047089230851
best_error: 4.093994229156746
best_error: 4.093994217504252
best_error: 4.093994206698702
best_error: 4.093964132406219
best_error: 4.093964120746189
best_error: 4.093964109941956
best_error: 4.093962562261099
best_error: 4.093962550600676
best_error: 4.093962539796512
best_error: 4.093962086599466
best_error: 4.0939620749389345
best_error: 4.093962064134818
best_error: 4.093962009935476
best_error: 4.093962009935475
best_error: 4.093962009935473
best_error: 4.093961987470818
best_error: 4.093694287823332
best_error: 4.093694287823328
best_error: 4.092150507456585
best_error: 4.092150507456582
best_error: 4.0919909806219525
best_error: 4.091990980621952
best_error: 4.091365378889798
best_error: 4.091365378889796
best_error: 4.09127660848047
best_error: 4.091276608480468
best_error: 4.09127660841784
best_error: 4.091261821795868
best_error: 4.091261821795863
best_error: 4.091261821735295
best_error: 4.0912525714669705
best_error: 4.091252571466969
best_error: 4.091252571407685
best_error: 4.091246814114726
best_error: 4.091246814114723
best_error: 4.091246814056237
best_error: 4.0912433626741365
best_error: 4.091243362674132
best_error: 4.091243362359945
best_error: 4.091241388697765
best_error: 4.091241388697761
best_error: 4.091241388383869
best_error: 4.091240862738144
best_error: 4.09124086273814
best_error: 4.091240862424188
best_error: 4.091240571289534
best_error: 4.091240571289531
best_error: 4.091240556557896
best_error: 4.091240548060371
best_error: 4.091224556129352
best_error: 4.091224556129347
best_error: 4.09122081788201
best_error: 4.091220817882008
best_error: 4.091220480447112
best_error: 4.091220457108786
best_error: 4.091215621916641
best_error: 4.091215598579829
best_error: 4.091196663224948
best_error: 4.091196663224947
best_error: 4.091096592414152
best_error: 4.09109659241415
best_error: 4.031775805572468
best_error: 4.031775681241529
best_error: 4.020001079005671
best_error: 4.0200009449064
best_error: 4.013710310200219
best_error: 4.013710310200215
best_error: 4.013710296743978
best_error: 4.012537411185612
best_error: 4.01253741118561
best_error: 4.012537396894709
best_error: 4.011774980631512
best_error: 4.011774980631509
best_error: 4.0117749658301145
best_error: 4.011246708815204
best_error: 4.011246708815201
best_error: 4.011246693942591
best_error: 4.010897186039033
best_error: 4.01089718603903
best_error: 4.010897171042246
best_error: 4.010842349790097
best_error: 4.010842296164464
best_error: 4.010834193966573
best_error: 4.01083419396657
best_error: 4.010834179003597
best_error: 4.010750176417699
best_error: 4.010750176417694
best_error: 4.01075016145123
best_error: 4.010734008942902
best_error: 4.010734008942897
best_error: 4.010733993975761
best_error: 4.010732302291631
best_error: 4.010732248749838
best_error: 4.009652403141483
best_error: 4.009652403141481
best_error: 4.009652398612998
best_error: 4.0096438746559455
best_error: 4.0096438260790555
best_error: 4.0096221825224685
best_error: 4.009622182522464
best_error: 4.009622177992986
best_error: 4.009621304447434
best_error: 4.009621255866822
best_error: 4.009614676894127
best_error: 4.009614676894125
best_error: 4.009614672364399
best_error: 4.0096131770786885
best_error: 4.009613177078686
best_error: 4.009613172548912
best_error: 4.009612995289733
best_error: 4.00961299528973
best_error: 4.009612990759949
best_error: 4.009612980021632
best_error: 4.009612969982699
best_error: 4.009554794959192
best_error: 4.009554748573494
best_error: 4.009552724571169
best_error: 4.009552678186589
best_error: 4.0095444602780494
best_error: 4.009544413897956
best_error: 4.009521345967328
best_error: 4.009521300887497
best_error: 4.009480361058524
best_error: 4.0094803163824215
best_error: 4.0094724907229455
best_error: 4.009472490722944
best_error: 4.009472490315764
best_error: 4.009470846493946
best_error: 4.009470846493943
best_error: 4.009470846086652
best_error: 4.009470608048516
best_error: 4.009470607759736
best_error: 4.009470605982065
best_error: 4.009470603539076
