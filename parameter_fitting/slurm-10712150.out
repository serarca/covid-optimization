ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.085589382570332
best_error: 9.085589339165661
best_error: 7.792658536315583
best_error: 7.792658344460078
best_error: 3.667146946186674
best_error: 3.6671469299428203
best_error: 3.140549358546877
best_error: 3.1405489411401364
best_error: 3.1026066088214215
best_error: 3.102606603268685
best_error: 3.0489205352687634
best_error: 3.048920128194808
best_error: 2.9973838347659156
best_error: 2.997383430675648
best_error: 2.9898714194124705
best_error: 2.989871016112992
best_error: 2.989564636493715
best_error: 2.989564233165485
best_error: 2.9894720850362173
best_error: 2.989472081313931
best_error: 2.989407760858237
best_error: 2.989407358558042
best_error: 2.9893988421864326
best_error: 2.989398439885478
best_error: 2.9893973887208034
best_error: 2.989396986419724
best_error: 2.989396844438832
best_error: 2.98939684071669
best_error: 2.954122430119588
best_error: 2.95412206333126
best_error: 2.9424258519975344
best_error: 2.9424255041192158
best_error: 2.93007993277301
best_error: 2.930079595391091
best_error: 2.8515195954311015
best_error: 2.851519267252651
best_error: 2.8389566424831703
best_error: 2.8389563184258475
best_error: 2.330744370527295
best_error: 2.33074436880967
best_error: 2.3307442948892314
best_error: 2.2555733668213147
best_error: 2.255573013941043
best_error: 2.2112665558387747
best_error: 2.211266197885664
best_error: 2.177282733724553
best_error: 2.177282732005388
best_error: 2.177282659047912
best_error: 2.1758996206126504
best_error: 2.175899263596314
best_error: 2.134997852796425
best_error: 2.134997486765035
best_error: 2.0107409930675346
best_error: 2.0107405861172234
best_error: 2.010279062543029
best_error: 2.010279060688271
best_error: 2.010278987029887
best_error: 2.010218940867712
best_error: 2.0102185340421825
best_error: 2.0094561776746076
best_error: 2.0094561758158562
best_error: 2.009456102140605
best_error: 2.0070098705728814
best_error: 2.007009463759862
best_error: 2.006721963960718
best_error: 2.006721962098934
best_error: 2.006721888430664
best_error: 2.0022963261048194
best_error: 2.002295931659377
best_error: 1.9843760662980725
best_error: 1.98437606404967
best_error: 1.984375988272445
best_error: 1.746818753196366
best_error: 1.7468187510239643
best_error: 1.746818677947097
best_error: 1.7038312625803447
best_error: 1.7038312602781476
best_error: 1.7038311875353056
best_error: 1.6915514946552255
best_error: 1.6915511140307253
best_error: 1.6542476126462384
best_error: 1.6542472381991489
best_error: 1.6536549988005431
best_error: 1.6536546242741472
best_error: 1.65345463047244
best_error: 1.6534542559192489
best_error: 1.6533276961850214
best_error: 1.653327321614837
best_error: 1.6532655480513743
best_error: 1.653265173472892
best_error: 1.6532218271172767
best_error: 1.653221452532934
best_error: 1.6532024031812194
best_error: 1.653202028594269
best_error: 1.6531942471782501
best_error: 1.6531942449390584
best_error: 1.6531941729932156
best_error: 1.6531938041468213
best_error: 1.6531831197374869
best_error: 1.6531831174982332
best_error: 1.6530835290561887
best_error: 1.6530831544752105
best_error: 1.653078973641044
best_error: 1.6530789714016154
best_error: 1.618814814672112
best_error: 1.6188144793826744
best_error: 1.5975550201812672
best_error: 1.5975546662778153
best_error: 1.5896931762110174
best_error: 1.5896931739087488
best_error: 1.5741476863276624
best_error: 1.5741476840868875
best_error: 1.5741239035663028
best_error: 1.5741235629173695
best_error: 1.5740733015678017
best_error: 1.5740732993314028
best_error: 1.574073228386056
best_error: 1.5737634566820926
best_error: 1.5737631150962708
best_error: 1.5735751518242587
best_error: 1.57357480931849
best_error: 1.5735616124848142
best_error: 1.5735612699757668
best_error: 1.5735547562002676
best_error: 1.573554413689558
best_error: 1.5735512566846612
best_error: 1.5735509141730932
best_error: 1.573549466791736
best_error: 1.5735491242797512
best_error: 1.5735486703150312
best_error: 1.5735486680777293
best_error: 1.5735041696525318
best_error: 1.5735038269358685
best_error: 1.5734673003429822
best_error: 1.573467298108224
best_error: 1.5734672271531402
best_error: 1.5734240799061057
best_error: 1.5734240776724806
best_error: 1.5734240067064875
best_error: 1.573423851494403
best_error: 1.573423508505707
best_error: 1.5734197742018898
best_error: 1.5734197719682155
best_error: 1.5734197010027877
best_error: 1.5734186192126938
best_error: 1.5734182762512345
best_error: 1.5734150313646746
best_error: 1.5734150291205515
best_error: 1.5734149581631496
best_error: 1.573414298663745
best_error: 1.5734142964246378
best_error: 1.5734142254633339
best_error: 1.573414144955228
best_error: 1.5734138020331625
best_error: 1.573413334077907
best_error: 1.573412991151608
best_error: 1.573412970194813
best_error: 1.573412930732919
best_error: 1.5734129020977081
best_error: 1.5734129013923528
best_error: 1.5734128838873627
