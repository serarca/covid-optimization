ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.289857823078833
best_error: 19.289857553592366
best_error: 4.234016833910713
best_error: 4.234016831858511
best_error: 4.231953887750784
best_error: 4.231953887706588
best_error: 4.231953887076056
best_error: 4.223558055533897
best_error: 4.22355805548757
best_error: 4.223558054851165
best_error: 4.187485848036227
best_error: 4.187485847980158
best_error: 4.187485847318681
best_error: 3.9809467619299737
best_error: 3.9809467617863032
best_error: 3.9809467609937235
best_error: 3.8211314822284725
best_error: 3.821131481949956
best_error: 3.8211314810938397
best_error: 3.6548460694212133
best_error: 3.6548460688569406
best_error: 3.6548460680201527
best_error: 3.42419375054186
best_error: 3.4241937491370344
best_error: 3.4241937486611946
best_error: 3.263953203608872
best_error: 3.2639532013992976
best_error: 3.2628121991238532
best_error: 3.2628121902705813
best_error: 3.2515874775732097
best_error: 3.251587472883324
best_error: 3.24608272727573
best_error: 3.2460827251562687
best_error: 3.2423134507332527
best_error: 3.242313448519888
best_error: 3.228998099327407
best_error: 3.228998095931354
best_error: 3.2279632896399097
best_error: 3.2279632861927094
best_error: 3.1398242339955
best_error: 3.13982422803678
best_error: 3.139824220713087
best_error: 2.550728550707673
best_error: 2.550728439418532
best_error: 2.313564510606806
best_error: 2.3135643547533915
best_error: 2.1312507621979817
best_error: 2.1312507492921613
best_error: 2.131250702531467
best_error: 2.1290592301302262
best_error: 2.1290591896907936
best_error: 2.0217464111182464
best_error: 2.021746266139274
best_error: 1.8780404499312595
best_error: 1.8780403369454282
best_error: 1.6893385904650189
best_error: 1.6893385689324407
best_error: 1.6778451716597704
best_error: 1.677845123420349
best_error: 1.667199747999413
best_error: 1.667199732540111
best_error: 1.658969694846652
best_error: 1.6589696797899238
best_error: 1.6211756438679101
best_error: 1.6211756434080635
best_error: 1.6211756424166095
best_error: 1.6156415578594518
best_error: 1.6156415574169671
best_error: 1.6156415570292282
best_error: 1.5996089895079106
best_error: 1.5996089884944271
best_error: 1.562481257473341
best_error: 1.5624812358446445
best_error: 1.501120871065174
best_error: 1.5011208560832878
best_error: 1.4997226073048133
best_error: 1.4997225609977576
best_error: 1.4943846819618627
best_error: 1.49438465300441
best_error: 1.4879585040951135
best_error: 1.4879585021344386
best_error: 1.4724509304198963
best_error: 1.4724508899122575
best_error: 1.4133587852771967
best_error: 1.4133587004459667
best_error: 1.3817406346302175
best_error: 1.3817406069966072
best_error: 1.3773284370707939
best_error: 1.3773283858081369
best_error: 1.3708751610627372
best_error: 1.3708751349413586
best_error: 1.3684973868351358
best_error: 1.3684973549785462
best_error: 1.367041852345329
best_error: 1.3670418219841474
best_error: 1.3654017304304478
best_error: 1.365401703530068
best_error: 1.3636424810040313
best_error: 1.3636424476271034
best_error: 1.3602334443374402
best_error: 1.3602334106988392
best_error: 1.3602332611562298
best_error: 1.360233227517617
best_error: 1.3599149673991604
best_error: 1.3599149291492534
best_error: 1.359280148019809
best_error: 1.359280110587744
best_error: 1.3549029018456218
best_error: 1.3549028325216728
best_error: 1.3545924864773857
best_error: 1.3545924189691982
best_error: 1.3532956764449497
best_error: 1.3532956734068182
best_error: 1.3532956512472074
best_error: 1.3470750869746269
best_error: 1.3470750467994983
best_error: 1.3438288312510245
best_error: 1.343828819568227
best_error: 1.342348618803077
best_error: 1.3423486066214596
best_error: 1.3412476009142682
best_error: 1.3412475851903647
best_error: 1.3392701953298545
best_error: 1.3392701863416747
best_error: 1.336636555437094
best_error: 1.336636546175308
best_error: 1.3356777096947494
best_error: 1.3356777040649765
best_error: 1.3324710041359447
best_error: 1.332471000834702
best_error: 1.3207222992537615
best_error: 1.3207222866533193
best_error: 1.3078604742419417
best_error: 1.307860428830544
best_error: 1.3034533189016846
best_error: 1.3034532950463906
best_error: 1.2993683450701239
best_error: 1.2993683178173552
best_error: 1.2983865229200708
best_error: 1.2983865117086395
best_error: 1.2932335906020298
best_error: 1.2932335674025304
best_error: 1.29305334283885
best_error: 1.2930533285442647
best_error: 1.2929297009062417
best_error: 1.2929296969579114
best_error: 1.2898314946427154
best_error: 1.2898314889074698
best_error: 1.287547474872234
best_error: 1.2875474743037207
best_error: 1.284370291361319
best_error: 1.2843702884536063
best_error: 1.2801913557550408
best_error: 1.2801913488782015
best_error: 1.2663595432489
best_error: 1.2663595129182976
best_error: 1.258616491223066
best_error: 1.2586164198764287
best_error: 1.2226989306025442
best_error: 1.222698894077375
best_error: 1.1550735467644637
best_error: 1.1550734605723378
best_error: 1.1435587898116168
best_error: 1.1435586355706795
best_error: 1.1196028072121238
best_error: 1.119602750284498
best_error: 1.117258195342656
best_error: 1.1172581913014923
best_error: 1.1161373891044197
best_error: 1.1161373887315156
best_error: 1.1161373886261345
best_error: 1.116137388557626
best_error: 1.1151766674313972
best_error: 1.115176666413076
best_error: 1.1151766621652646
best_error: 1.1144934193116318
best_error: 1.114493419258745
best_error: 1.1144934183383604
best_error: 1.1144864755197141
best_error: 1.1144864741618266
best_error: 1.1144383511583325
best_error: 1.1144383498635482
best_error: 1.1144368328745538
best_error: 1.1144368323238805
best_error: 1.1144368322819833
best_error: 1.1144205739135478
best_error: 1.1144205731969947
best_error: 1.1143997001140749
best_error: 1.1143996995388334
best_error: 1.1143876815830815
best_error: 1.1143876797350605
best_error: 1.114366387115589
best_error: 1.1143663864679823
best_error: 1.1143207566359925
best_error: 1.1143207561680448
best_error: 1.1143207560836974
best_error: 1.1141120331630754
best_error: 1.11411203066329
best_error: 1.1140893378586338
best_error: 1.1140893361972437
best_error: 1.1140684357076547
best_error: 1.1140684347685936
best_error: 1.1140652303554568
best_error: 1.1140652302294343
best_error: 1.1140553590639817
best_error: 1.1140553589285285
best_error: 1.1140455405460243
best_error: 1.1140455402400553
best_error: 1.1140444915129724
best_error: 1.1140444912032588
best_error: 1.1140396904752543
best_error: 1.1140396896181266
best_error: 1.1140296525400801
best_error: 1.114029651847877
best_error: 1.1140100497471752
best_error: 1.1140100496296859
best_error: 1.1140100495372898
best_error: 1.1139928385180187
best_error: 1.1139928382560007
best_error: 1.1139660831928517
best_error: 1.1139660830618279
best_error: 1.1139660829833842
best_error: 1.1139511835800975
best_error: 1.1139511829667017
best_error: 1.113935923696738
best_error: 1.1139359236127038
best_error: 1.113935923555517
best_error: 1.1139359235115076
best_error: 1.1139218632740076
best_error: 1.1139218627589507
best_error: 1.1138991659104513
best_error: 1.1138991635372433
best_error: 1.1138702310608681
best_error: 1.11387022831259
best_error: 1.113729836664015
best_error: 1.1137298335452335
best_error: 1.1133561333731214
best_error: 1.1133561272943857
best_error: 1.1128628390511413
best_error: 1.1128628356057186
best_error: 1.1125467662066688
best_error: 1.112546760691313
best_error: 1.1123889639201758
best_error: 1.1123889619681682
best_error: 1.1123340775775281
best_error: 1.1123340767961678
best_error: 1.1123264385581435
best_error: 1.1123264381678921
best_error: 1.112324386940125
best_error: 1.112324386696205
best_error: 1.1123241169708231
best_error: 1.112324116927178
best_error: 1.1123239501289306
best_error: 1.1123239500275042
best_error: 1.112323785964162
best_error: 1.112323785836216
best_error: 1.1123234371362514
best_error: 1.112323437112276
best_error: 1.112323258212575
best_error: 1.112323258199649
best_error: 1.1123232581940667
best_error: 1.1123232029332422
best_error: 1.1123232025835343
best_error: 1.1123231374077591
best_error: 1.1123231370775029
