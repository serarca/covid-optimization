ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 62
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.17054781963151
best_error: 99.170547619589
best_error: 99.17054761338315
best_error: 20.758236207067895
best_error: 20.758236207067473
best_error: 20.75823620618132
best_error: 20.758177657401905
best_error: 20.758177656513908
best_error: 20.757942527501356
best_error: 20.75794252660765
best_error: 20.75698688325721
best_error: 20.756986882340172
best_error: 20.752907002110593
best_error: 20.75290700109168
best_error: 20.731162797584744
best_error: 20.731162795954994
best_error: 15.417931294800173
best_error: 15.417931192291526
best_error: 15.39757713388887
best_error: 15.397577107155293
best_error: 15.392861826864134
best_error: 15.392861826623099
best_error: 15.392861769547752
best_error: 15.390750677998515
best_error: 15.390750651380362
best_error: 15.389795069910353
best_error: 15.389795069647487
best_error: 15.389795012877796
best_error: 15.387778235153572
best_error: 15.387778234903015
best_error: 15.387778177884513
best_error: 15.38738903315286
best_error: 15.387389032904686
best_error: 15.387388975838157
best_error: 15.387354305591284
best_error: 15.387354305343322
best_error: 15.387354248272505
best_error: 15.38734632889139
best_error: 15.387346328643481
best_error: 15.387346271571676
best_error: 15.38734546393049
best_error: 15.38734546368258
best_error: 15.387345406610674
best_error: 15.387345267254595
best_error: 15.387345267006687
best_error: 15.387345261424485
best_error: 15.387345260497355
best_error: 15.38058498500784
best_error: 15.380584984936025
best_error: 15.380584925452101
best_error: 15.35727230527704
best_error: 15.357272206553034
best_error: 15.345142055296428
best_error: 15.345141903407798
best_error: 15.339603379457797
best_error: 15.339603178505886
best_error: 15.322301061070508
best_error: 15.322300819659514
best_error: 15.257456630784956
best_error: 15.257456617056153
best_error: 15.2503247458713
best_error: 15.250324732727709
best_error: 15.249227897756697
best_error: 15.24922788462729
best_error: 15.248770230794067
best_error: 15.248770217670579
best_error: 15.2487336103199
best_error: 15.248733362825691
best_error: 15.2486340445763
best_error: 15.248634031455868
best_error: 15.24735995564864
best_error: 15.247359944128048
best_error: 15.246818167399045
best_error: 15.246817896064986
best_error: 15.246711412777223
best_error: 15.246711135910934
best_error: 15.240486916314005
best_error: 15.240486635188068
best_error: 15.162479837719447
best_error: 15.162479819222687
best_error: 15.158097622765624
best_error: 15.158097604775005
best_error: 15.144540838492324
best_error: 15.14454082422183
best_error: 15.144245334193215
best_error: 15.144245319929063
best_error: 15.144098510987657
best_error: 15.144098496726643
best_error: 15.144024601954747
best_error: 15.144024587695316
best_error: 15.143987211591972
best_error: 15.143987197333336
best_error: 15.143977238238918
best_error: 15.143977021446734
best_error: 15.143360854851396
best_error: 15.143360840602242
best_error: 15.141056092265572
best_error: 15.14105607774071
best_error: 15.133161690189986
best_error: 15.133161674355472
best_error: 15.131143721540752
best_error: 15.131143703491922
best_error: 15.118111896215758
best_error: 15.118111877523503
best_error: 15.114663351601925
best_error: 15.11466333380346
best_error: 15.114505934010406
best_error: 15.114505780101592
best_error: 15.114503176553947
best_error: 15.114503158755806
best_error: 15.114498327506684
best_error: 15.114498173597504
best_error: 15.114496932630821
best_error: 15.114496778721573
best_error: 15.112855527485356
best_error: 15.11285537940751
best_error: 15.107215665919023
best_error: 15.107215536083826
best_error: 15.09296788230881
best_error: 15.092967756221178
best_error: 15.09268061271662
best_error: 15.09268059242016
best_error: 15.092336368027748
best_error: 15.092336246868978
best_error: 15.092280347944278
best_error: 15.092280327672293
best_error: 15.092186515550546
best_error: 15.09218639437669
best_error: 15.092181303964761
best_error: 15.092181283735025
best_error: 15.08136984290207
best_error: 15.081369842797821
best_error: 15.081369750552712
best_error: 15.07650577499589
best_error: 15.076505674856644
best_error: 15.064870015345392
best_error: 15.064869989656449
best_error: 15.049315905078348
best_error: 15.049315881756089
best_error: 15.023381872242098
best_error: 15.023381850793442
best_error: 14.985218308855108
best_error: 14.985218124193986
best_error: 14.945643417457019
best_error: 14.945643395706089
best_error: 14.918258215263275
best_error: 14.91825819269162
best_error: 14.735325373213325
best_error: 14.735325345615003
best_error: 14.623183865701574
best_error: 14.623183835849705
best_error: 14.498412392906069
best_error: 14.498412386470225
best_error: 14.498412369152916
best_error: 14.46760368956889
best_error: 14.467603689162633
best_error: 14.467603668930913
best_error: 14.343570682518674
best_error: 14.343570679359475
best_error: 14.343570520153975
best_error: 14.330879766121408
best_error: 14.330879740082697
best_error: 14.325187319413923
best_error: 14.325187214300016
best_error: 14.299566068150709
best_error: 14.299566007293711
best_error: 14.289743087603577
best_error: 14.289743048197229
best_error: 14.288505461698428
best_error: 14.288505437831065
best_error: 14.273733008077313
best_error: 14.273732986030009
best_error: 14.27101100698904
best_error: 14.271011006822052
best_error: 14.271010906258653
best_error: 14.270554195473931
best_error: 14.270554195344939
best_error: 14.270554095396207
best_error: 14.270384520563116
best_error: 14.270384426454441
best_error: 14.270312552605438
best_error: 14.270312458491961
best_error: 14.270281230000318
best_error: 14.270281135884751
best_error: 14.270262780028144
best_error: 14.270262685911351
best_error: 14.270252683992911
best_error: 14.270252589875437
