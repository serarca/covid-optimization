ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 74
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.7256123791204
best_error: 101.72561230029083
best_error: 101.72561219724528
best_error: 19.71998946721929
best_error: 19.719989467217026
best_error: 19.719989462668668
best_error: 19.713994714553827
best_error: 19.71399470980247
best_error: 19.687087110273886
best_error: 19.68708710453365
best_error: 19.468309894782866
best_error: 19.468309874224296
best_error: 19.420460023078356
best_error: 19.42045999790473
best_error: 19.35493525872565
best_error: 19.35493522683352
best_error: 18.730532174758523
best_error: 18.73053215534736
best_error: 18.730530696102758
best_error: 14.90010401559951
best_error: 14.900103874556162
best_error: 14.720202036808258
best_error: 14.720202032626265
best_error: 14.720202025720747
best_error: 14.720201686814262
best_error: 14.710454802019946
best_error: 14.710454790040664
best_error: 14.710454783267734
best_error: 14.33805806369782
best_error: 14.33805804893968
best_error: 14.338058048230955
best_error: 14.338058044224859
best_error: 13.847588730128955
best_error: 13.847588704702048
best_error: 13.847588703694468
best_error: 13.164925758759466
best_error: 13.164925715327211
best_error: 12.746019023006138
best_error: 12.74601901227174
best_error: 12.746019002031229
best_error: 12.742647077743822
best_error: 12.742647047322679
best_error: 12.43874639861733
best_error: 12.438746309587621
best_error: 12.421345887902293
best_error: 12.42134587094089
best_error: 12.421345870747333
best_error: 12.396360023337362
best_error: 12.39636000780501
best_error: 12.396360006832442
best_error: 12.354723299760746
best_error: 12.354723288939908
best_error: 12.354723284353891
best_error: 12.354274100522272
best_error: 12.354273908671528
best_error: 12.33740150882633
best_error: 12.337401500486031
best_error: 12.337401494223874
best_error: 12.331039901190717
best_error: 12.331039892870908
best_error: 12.331039886684522
best_error: 12.310363597587074
best_error: 12.31036359102912
best_error: 12.3103635784633
best_error: 12.24400081035024
best_error: 12.244000799421446
best_error: 12.244000795714943
best_error: 12.204313512369762
best_error: 12.204313495092169
best_error: 12.123708277030577
best_error: 12.123708259470192
best_error: 12.107607384051688
best_error: 12.107607366443188
best_error: 12.006551037735925
best_error: 12.00655102446677
best_error: 12.006551021833303
best_error: 11.856819182070296
best_error: 11.856819170916793
best_error: 11.856819165637381
best_error: 11.795101114955399
best_error: 11.795101101755167
best_error: 11.795101097072944
best_error: 11.748526036096017
best_error: 11.748526019684043
best_error: 11.748526017174603
best_error: 11.700752005517918
best_error: 11.700751985495618
best_error: 11.548499488191409
best_error: 11.548499454790653
best_error: 11.324133317882678
best_error: 11.324133317882676
best_error: 11.32413331250349
best_error: 11.324133298764833
best_error: 11.139130890129808
best_error: 11.139130887283896
best_error: 11.139130830859619
best_error: 11.085208982319486
best_error: 11.085208929279048
best_error: 11.077744483552555
best_error: 11.077744462731703
best_error: 11.07680956495934
best_error: 11.076809518765678
best_error: 11.068673011581675
best_error: 11.068672974564665
best_error: 11.067463748749969
best_error: 11.067463711635721
best_error: 11.06717224572088
best_error: 11.067172208592414
best_error: 11.067127716007644
best_error: 11.06712767887701
best_error: 11.067113245517437
best_error: 11.067113226154433
best_error: 11.059853599218375
best_error: 11.059853564032295
best_error: 11.056733565659401
best_error: 11.056733546069044
best_error: 11.047823902671235
best_error: 11.047823883421255
best_error: 11.044934018207943
best_error: 11.044933998308665
best_error: 11.041724082091337
best_error: 11.04172406272655
best_error: 11.03119319433334
best_error: 11.031193157485298
best_error: 11.030930189823934
best_error: 11.030930152981366
best_error: 11.030898168672204
best_error: 11.030898131830307
best_error: 11.030878424168542
best_error: 11.03087838732706
best_error: 11.030867566632747
best_error: 11.030867529791491
best_error: 11.030860436949087
best_error: 11.030860400107978
best_error: 11.030855523635125
best_error: 11.030855486794122
best_error: 11.030853943154408
best_error: 11.030853906313437
best_error: 11.030852964247291
best_error: 11.03085292740634
best_error: 11.030852441711422
best_error: 11.030852404870483
best_error: 11.030852092610541
best_error: 11.030852055769609
best_error: 11.030851919227262
best_error: 11.030851882386333
best_error: 11.030851794306933
best_error: 11.030851757466007
best_error: 11.030851715799166
best_error: 11.030851714539958
best_error: 11.030851707988027
best_error: 11.030851705750823
best_error: 11.030851704167569
best_error: 11.030851702908357
best_error: 11.030851699800445
best_error: 11.030851698667458
best_error: 11.03085169849684
