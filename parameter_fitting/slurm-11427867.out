ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 80
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.02312937141099
best_error: 21.023129202460364
best_error: 4.387718202646234
best_error: 4.38771820088418
best_error: 4.385280779199642
best_error: 4.385280779160522
best_error: 4.385280778690193
best_error: 4.375298165707941
best_error: 4.375298165666064
best_error: 4.3752981651895375
best_error: 4.331016307106786
best_error: 4.3310163070511
best_error: 4.331016306547756
best_error: 4.010658469630366
best_error: 4.010658469272612
best_error: 4.010658468707905
best_error: 3.9185778291748967
best_error: 3.9185778285961113
best_error: 3.918577828125058
best_error: 3.8124543164378606
best_error: 3.81245431547404
best_error: 3.812454315230141
best_error: 3.5368043743150674
best_error: 3.536804269117033
best_error: 3.0459322727345954
best_error: 3.045932260003082
best_error: 2.9684739954540955
best_error: 2.9684739831129554
best_error: 2.9478027146101753
best_error: 2.9478027048411826
best_error: 2.947802700534926
best_error: 2.8271410950335305
best_error: 2.827141062785085
best_error: 2.8180701899707103
best_error: 2.818070156548656
best_error: 2.8085059568546478
best_error: 2.808505923120785
best_error: 2.808505921584149
best_error: 2.623771536428675
best_error: 2.6237715043679275
best_error: 2.6237714595603085
best_error: 2.316759377290004
best_error: 2.316759353975977
best_error: 2.316759236703131
best_error: 2.2399261165747517
best_error: 2.239926030205726
best_error: 2.2366696408651476
best_error: 2.2366695753932646
best_error: 2.0975849285686925
best_error: 2.097584722224627
best_error: 1.770386820827085
best_error: 1.7703866233923629
best_error: 1.7128149861431066
best_error: 1.7128149180472065
best_error: 1.6794438162921184
best_error: 1.679443761514313
best_error: 1.653139562783103
best_error: 1.6531395565033977
best_error: 1.651690793750127
best_error: 1.6516907903359113
best_error: 1.6516907878332978
best_error: 1.6465317640633483
best_error: 1.6465317636747876
best_error: 1.6465317585825305
best_error: 1.5597136279091577
best_error: 1.5597135637223571
best_error: 1.3517053395645915
best_error: 1.3517052168310537
best_error: 1.335611578786559
best_error: 1.3356115150580998
best_error: 1.3124834064480924
best_error: 1.3124834013741877
best_error: 1.223855763340134
best_error: 1.2238557371292162
best_error: 1.171786587769956
best_error: 1.1717863822059955
best_error: 1.1679204059124917
best_error: 1.1679201964493746
best_error: 1.1574366531505316
best_error: 1.1574366366191058
best_error: 1.119131990531392
best_error: 1.1191319479016166
best_error: 1.0881023223002724
best_error: 1.0881022574726302
best_error: 1.0791386458081433
best_error: 1.0791386332118242
best_error: 1.0641174684424684
best_error: 1.0641174489952687
best_error: 1.0586138834999492
best_error: 1.0586138526689541
best_error: 1.051468287113465
best_error: 1.0514682786425438
best_error: 1.048173257173262
best_error: 1.0481732164182418
best_error: 1.0454051713794978
best_error: 1.0454051360373426
best_error: 1.03474851857437
best_error: 1.0347484984869424
best_error: 1.0317644946347817
best_error: 1.0317644796480197
best_error: 1.0308309476595623
best_error: 1.0308309270573224
best_error: 1.0306587757283847
best_error: 1.030658774293879
best_error: 1.03062330388791
best_error: 1.0306233026798193
best_error: 1.0304077991620046
best_error: 1.030407793870913
best_error: 1.0302673479425712
best_error: 1.0302673478977504
best_error: 1.0302673443021009
best_error: 1.0288593414788698
best_error: 1.028859340809357
best_error: 1.028859340643435
best_error: 1.025899795887221
best_error: 1.0258997937028296
best_error: 1.0173965288273512
best_error: 1.0173965218166707
best_error: 0.9640205660157438
best_error: 0.9640205644744703
best_error: 0.9640205630267897
best_error: 0.9590230494042603
best_error: 0.9590230167512681
best_error: 0.9568472639170928
best_error: 0.9568472635058682
best_error: 0.9531683242143356
best_error: 0.9531683235387317
best_error: 0.9531683232462622
best_error: 0.9510083944098665
best_error: 0.9510083749193291
best_error: 0.9502253670677824
best_error: 0.9502253599693447
best_error: 0.9496668342682532
best_error: 0.9496668306424688
best_error: 0.9489528443195822
best_error: 0.9489528443123612
best_error: 0.948952843622766
best_error: 0.9488068089215814
best_error: 0.9488068059457894
best_error: 0.9486272147379708
best_error: 0.9486272139207285
best_error: 0.9485138680689311
best_error: 0.9485138674426332
best_error: 0.9485138672711575
best_error: 0.9480247449187421
best_error: 0.9480247310183265
best_error: 0.9476142783428355
best_error: 0.9476142566704329
best_error: 0.9462485891403136
best_error: 0.9462485571362788
best_error: 0.9452513471527675
best_error: 0.9452513344847838
best_error: 0.9438933317197659
best_error: 0.9438933316490236
best_error: 0.9438933309637908
best_error: 0.9436474115953856
best_error: 0.9436474041448484
best_error: 0.9434302637881079
best_error: 0.943430258776292
best_error: 0.9430898271623418
best_error: 0.9430898268184532
best_error: 0.94308982636411
best_error: 0.9429508649380126
best_error: 0.9429508582574638
best_error: 0.9428235811685479
best_error: 0.9428235744371396
best_error: 0.9422547548763699
best_error: 0.9422547502833375
best_error: 0.9409158284750123
best_error: 0.9409158272955576
best_error: 0.9409158202705176
best_error: 0.9366511223796564
best_error: 0.936651094697939
best_error: 0.9360129844198835
best_error: 0.9360129720704742
best_error: 0.9294056008366404
best_error: 0.9294056005642838
best_error: 0.9294056005368313
best_error: 0.9294055988141412
best_error: 0.9257442198638657
best_error: 0.9257442073766411
best_error: 0.9240316835615299
best_error: 0.9240316801535144
best_error: 0.9236748550185717
best_error: 0.9236748533254111
best_error: 0.9236720406928828
best_error: 0.9236720402486692
best_error: 0.9236714681882132
best_error: 0.9236714681802034
best_error: 0.923671468053427
best_error: 0.923671467981377
best_error: 0.9236710879593117
best_error: 0.9236710878898063
best_error: 0.9236710877557962
best_error: 0.9236709633341417
best_error: 0.9236709630641036
best_error: 0.9236708687698549
best_error: 0.9236708681396051
best_error: 0.9236703833118274
best_error: 0.9236703822354727
best_error: 0.9236691753007699
best_error: 0.923669174072353
best_error: 0.9236664890117054
best_error: 0.9236664887037024
best_error: 0.9236600883210513
best_error: 0.9236600875796622
best_error: 0.9236487799713374
best_error: 0.9236487791654538
best_error: 0.9236357936604485
best_error: 0.9236357919957834
best_error: 0.9235861202564625
best_error: 0.9235861200572135
best_error: 0.923586119942568
best_error: 0.9234960176154005
best_error: 0.9234960174484772
best_error: 0.9234960172510854
best_error: 0.9231953665602047
best_error: 0.9231953656587865
best_error: 0.9230003326055232
best_error: 0.9230003130833476
best_error: 0.9227676402724262
best_error: 0.9227676319628064
best_error: 0.9223020658847585
best_error: 0.922302051501837
best_error: 0.9197562016367464
best_error: 0.9197561988720754
best_error: 0.919373462375307
best_error: 0.9193734612427283
best_error: 0.9193673233113765
best_error: 0.919367322012772
best_error: 0.9193594804831341
best_error: 0.9193594802547357
best_error: 0.9193552625221462
best_error: 0.9193552598334231
best_error: 0.9193476790507382
best_error: 0.9193476758112433
best_error: 0.9193345905676291
best_error: 0.9193345881563362
best_error: 0.9192727868418901
best_error: 0.9192727849650534
best_error: 0.9191277849959606
best_error: 0.9191277816929795
best_error: 0.9188777419701049
best_error: 0.9188777416366765
best_error: 0.9183302374008377
best_error: 0.9183302288660659
best_error: 0.9178648727850658
best_error: 0.917864855950749
best_error: 0.9164302895306671
best_error: 0.9164302750400407
best_error: 0.9158585038864513
best_error: 0.9158585028545684
best_error: 0.9153756745482697
best_error: 0.9153756738417596
best_error: 0.9153697450573266
best_error: 0.9153697439958673
best_error: 0.915361393787377
best_error: 0.9153613928190244
best_error: 0.9153605626723649
best_error: 0.9153605621214338
best_error: 0.9153605251995738
best_error: 0.9153605249821866
best_error: 0.9153604613075264
best_error: 0.9153604612239478
best_error: 0.9153604603828792
best_error: 0.9153604602895455
