ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.367125327177492
best_error: 11.367125316611432
best_error: 11.061575949390994
best_error: 11.061575900928199
best_error: 6.589646897645236
best_error: 6.589646406332612
best_error: 6.1935152442575285
best_error: 6.193515244257271
best_error: 6.171976775223228
best_error: 6.171976744107656
best_error: 6.169980828996078
best_error: 6.169980802795667
best_error: 6.168330055242026
best_error: 6.16833003447071
best_error: 6.167869802568415
best_error: 6.167869802567387
best_error: 6.167869792978805
best_error: 6.167143962009036
best_error: 6.167143962008002
best_error: 6.167143952430065
best_error: 6.165258893600195
best_error: 6.165258893599589
best_error: 6.165258890459666
best_error: 6.16234330978939
best_error: 6.162343309788374
best_error: 6.162343300142295
best_error: 6.142344384877607
best_error: 6.1423443848765835
best_error: 6.1423443742835255
best_error: 6.053208169382835
best_error: 6.053208169382337
best_error: 6.053208168026921
best_error: 5.993134642301325
best_error: 5.993134642301203
best_error: 5.981043410602617
best_error: 5.959594210606729
best_error: 5.946227447406655
best_error: 5.83449008283645
best_error: 5.496290044974245
best_error: 5.03220490743282
best_error: 5.032204841148966
best_error: 5.029865186469484
best_error: 5.02986512723556
best_error: 5.026754632529622
best_error: 5.026754619441565
best_error: 5.026754613661264
best_error: 5.023691272479028
best_error: 5.0236912724787235
best_error: 5.023691270643052
best_error: 5.023008610241485
best_error: 5.023008610241086
best_error: 5.023008609615342
best_error: 5.023008608367316
best_error: 5.0229387971199335
best_error: 5.022938797119544
best_error: 5.022938796724349
best_error: 5.0229387952438955
best_error: 5.0226792950024315
best_error: 5.0226792950020505
best_error: 5.02267929310907
best_error: 5.0220288719191855
best_error: 5.022028855115431
best_error: 5.020562970052223
best_error: 5.020562953703833
best_error: 5.013974243175551
best_error: 5.01397422867874
best_error: 4.981403742148113
best_error: 4.981403742148042
best_error: 4.981403740374663
best_error: 4.969986127866493
best_error: 4.969986127058544
best_error: 4.949599559416464
best_error: 4.949599532054173
best_error: 4.882385760631589
best_error: 4.882385760631339
best_error: 4.882385753856883
best_error: 4.852891816336267
best_error: 4.852891816336149
best_error: 4.823623357089818
best_error: 4.8236233247165865
best_error: 4.7441626481991666
best_error: 4.744162648198732
best_error: 4.744162629731607
best_error: 4.727810796579119
best_error: 4.7278107901780535
best_error: 4.727810784223689
best_error: 4.726285968443005
best_error: 4.726285968442595
best_error: 4.726285967261764
best_error: 4.726266831987877
best_error: 4.72626683198747
best_error: 4.726266830986284
best_error: 4.7262652705861585
best_error: 4.726265270585755
best_error: 4.726265269651263
best_error: 4.726265115990274
best_error: 4.726265096315659
best_error: 4.726243474341704
best_error: 4.726243474341313
best_error: 4.726242587861652
best_error: 4.726242587861261
best_error: 4.726241947298181
best_error: 4.726241947297797
best_error: 4.726241498292725
best_error: 4.726241498292344
best_error: 4.72624135983107
best_error: 4.726241359830679
best_error: 4.726241303078496
best_error: 4.726241303078106
best_error: 4.7262412218799765
best_error: 4.726241221879587
best_error: 4.726241202950603
best_error: 4.726241202950216
best_error: 4.726241187774004
best_error: 4.726241187773613
best_error: 4.726241177966989
best_error: 4.7262411779666005
best_error: 4.726241170541797
best_error: 4.726241170541409
best_error: 4.726241164481374
best_error: 4.726241164480991
best_error: 4.726241160635723
best_error: 4.726241160635338
best_error: 4.7262411560817865
best_error: 4.726241156081402
best_error: 4.726241154135902
best_error: 4.726241154135515
best_error: 4.726241152966808
best_error: 4.726241152966424
best_error: 4.726241151771506
best_error: 4.726241151448392
best_error: 4.726241151448003
best_error: 4.7262411508565485
best_error: 4.7262411507399955
best_error: 4.72624115073961
best_error: 4.7262411505569215
best_error: 4.726241150556522
best_error: 4.726241150523213
