ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.763967500795774
best_error: 10.763967488583646
best_error: 10.377861024984588
best_error: 10.377860970205605
best_error: 6.29683729912582
best_error: 6.296836885384359
best_error: 5.595444094003385
best_error: 5.595443924124014
best_error: 5.5657631406704
best_error: 5.565763140669839
best_error: 5.565763131618779
best_error: 5.5578791579556635
best_error: 5.557879157955111
best_error: 5.557879148499831
best_error: 5.555186762320998
best_error: 5.555186762320442
best_error: 5.555186752688956
best_error: 5.5541131556172365
best_error: 5.554113155616673
best_error: 5.554113145896422
best_error: 5.553580062976061
best_error: 5.553580062975504
best_error: 5.553580053240024
best_error: 5.552061190626064
best_error: 5.552061190625499
best_error: 5.55206118081208
best_error: 5.545914703861809
best_error: 5.545914703861251
best_error: 5.545914693803336
best_error: 5.520102041150077
best_error: 5.520102041149521
best_error: 5.520102029866024
best_error: 5.39376148020072
best_error: 5.3937614802001415
best_error: 5.393761464219411
best_error: 5.2602403529421435
best_error: 5.260240352941574
best_error: 5.260240346127474
best_error: 5.180685843538049
best_error: 5.180685843537567
best_error: 5.179325740617927
best_error: 5.179325740617467
best_error: 5.154872082284661
best_error: 5.154872082284204
best_error: 5.126547185100189
best_error: 5.126547185100115
best_error: 5.030455557762414
best_error: 5.030455557762008
best_error: 4.944193744145209
best_error: 4.944193744144966
best_error: 4.734720515001628
best_error: 4.734720515001426
best_error: 4.7213435226934175
best_error: 4.721343301276538
best_error: 4.6544740396297275
best_error: 4.654474039629429
best_error: 4.654474038700939
best_error: 4.654474035110555
best_error: 4.654235907147494
best_error: 4.654235907147193
best_error: 4.654235906517568
best_error: 4.6542359026278834
best_error: 4.6540911724634055
best_error: 4.654091172463111
best_error: 4.654091171928626
best_error: 4.654091167945472
best_error: 4.6540047725694675
best_error: 4.6540047725691664
best_error: 4.654004772490139
best_error: 4.6540047680525785
best_error: 4.65395410499809
best_error: 4.653954104997792
best_error: 4.653954104966758
best_error: 4.653954100481819
best_error: 4.65392442089331
best_error: 4.653924420893016
best_error: 4.653924420858021
best_error: 4.653924416377402
best_error: 4.653912398637004
best_error: 4.653912398636708
best_error: 4.653912398494134
best_error: 4.653912394100866
best_error: 4.653900917202238
best_error: 4.653900917201947
best_error: 4.6539009170581345
best_error: 4.653900912666054
best_error: 4.653895262197635
best_error: 4.653895262197341
best_error: 4.6538952620529175
best_error: 4.653895257661427
best_error: 4.653892237907508
best_error: 4.653892237907219
best_error: 4.653892237762459
best_error: 4.653892233371287
best_error: 4.653890410197293
best_error: 4.653890410196998
best_error: 4.653890410052045
best_error: 4.653890405661064
best_error: 4.653889525163396
best_error: 4.653889525163111
best_error: 4.653889525018059
best_error: 4.653889520627164
best_error: 4.653888914047545
best_error: 4.6538889140472515
best_error: 4.653888913902147
best_error: 4.653888909511311
best_error: 4.653888647318033
best_error: 4.653888647317736
best_error: 4.653888647172603
best_error: 4.6538886427818
best_error: 4.653888562731668
best_error: 4.653888562731367
best_error: 4.653888562586215
best_error: 4.653888558195433
best_error: 4.653888532771306
best_error: 4.6538885327710116
best_error: 4.653888532625853
best_error: 4.653888528235071
best_error: 4.653888513427255
best_error: 4.65388851342696
best_error: 4.653888513281806
best_error: 4.6538885088910185
best_error: 4.653888504489455
best_error: 4.653888504489158
best_error: 4.653888504344009
best_error: 4.653888499953218
best_error: 4.6538884996156344
best_error: 4.653888499615339
best_error: 4.653888499470185
best_error: 4.653888495079398
best_error: 4.6538884914332215
best_error: 4.6538884851887
best_error: 4.653888484652065
