ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.522980414389464
best_error: 11.522980395234242
best_error: 11.52298036383481
best_error: 11.39075262132637
best_error: 11.390752597790707
best_error: 11.390752561452825
best_error: 10.057094578039603
best_error: 10.057094500311031
best_error: 10.057094441215552
best_error: 9.271482235460574
best_error: 9.271482134308291
best_error: 9.206820313132742
best_error: 9.206820209814612
best_error: 9.151049510537879
best_error: 9.151049405128072
best_error: 7.904129812233484
best_error: 7.904129657020536
best_error: 7.639368508242952
best_error: 7.639368351261586
best_error: 7.49972429558361
best_error: 7.499724222316793
best_error: 4.97219177450488
best_error: 4.972191575517986
best_error: 4.707874612391523
best_error: 4.707874301758821
best_error: 4.519071124195736
best_error: 4.519070838734148
best_error: 3.8717500812956303
best_error: 3.8717498632354923
best_error: 3.6800210944825844
best_error: 3.680020980801832
best_error: 3.6069332663369256
best_error: 3.6069330455105946
best_error: 3.594569753373708
best_error: 3.594569638985956
best_error: 3.450827384329682
best_error: 3.4508271212732344
best_error: 3.269885356232346
best_error: 3.269885032150082
best_error: 2.9994930104557036
best_error: 2.9994926609895236
best_error: 2.994817750300279
best_error: 2.9948177252197787
best_error: 2.876165873191664
best_error: 2.8761658462772326
best_error: 2.8390964970905364
best_error: 2.8390964782318804
best_error: 2.788313274690712
best_error: 2.788312887369139
best_error: 2.5446798662529804
best_error: 2.5446795119992025
best_error: 2.370726846965586
best_error: 2.370726507038686
best_error: 2.366879290184647
best_error: 2.3668788945172237
best_error: 2.3037366820719325
best_error: 2.303736279840721
best_error: 2.2186081030401006
best_error: 2.2186077044386137
best_error: 1.939248254691757
best_error: 1.9392479241767786
best_error: 1.7705911763807514
best_error: 1.7705908559312589
best_error: 1.6824152990067662
best_error: 1.6824149822676828
best_error: 1.63534017673348
best_error: 1.6353398595382047
best_error: 1.6272986877842142
best_error: 1.6272983704178166
best_error: 1.6226649121560663
best_error: 1.6226645930147847
best_error: 1.6208900001089654
best_error: 1.6208896800237411
best_error: 1.619986900599692
best_error: 1.6199865804146416
best_error: 1.6195554575274693
best_error: 1.619555137282324
best_error: 1.6193318279711861
best_error: 1.6193315077011783
best_error: 1.6192151812887148
best_error: 1.6192148608198067
best_error: 1.6191134499047621
best_error: 1.619113129026089
best_error: 1.6191058200380397
best_error: 1.6191058200375599
best_error: 1.6191055273818407
best_error: 1.6191052065023175
best_error: 1.6191008402134166
best_error: 1.6191005193333496
best_error: 1.6191001754970067
best_error: 1.6191001406079497
best_error: 1.6191001226774602
best_error: 1.619100086221878
best_error: 1.6191000862202558
best_error: 1.6191000486082912
best_error: 1.6191000368893829
best_error: 1.6191000368877555
best_error: 1.619100034777997
best_error: 1.6190254747212156
best_error: 1.619025151960657
best_error: 1.6189981630617059
best_error: 1.6189978402381664
best_error: 1.6189117570127167
best_error: 1.6189114337851742
best_error: 1.618846502875336
best_error: 1.6188461778537417
best_error: 1.6187282961639884
best_error: 1.618727971395883
best_error: 1.618665485911553
best_error: 1.6186651624586292
best_error: 1.618310789584135
best_error: 1.618310466178417
best_error: 1.616929988439911
best_error: 1.6169296652309337
best_error: 1.616414285336491
best_error: 1.6164139623713982
best_error: 1.6160906303477236
best_error: 1.6160903074352997
best_error: 1.6158693496555308
best_error: 1.6158690267797435
best_error: 1.6157173587246685
best_error: 1.6157170358743296
best_error: 1.6156057055119897
best_error: 1.61560538268052
best_error: 1.6154913453998394
best_error: 1.6154910225844543
best_error: 1.6154272105763698
best_error: 1.6154268877700635
best_error: 1.6154216593675965
best_error: 1.615421336562057
best_error: 1.6154015278416933
best_error: 1.6154015278412608
best_error: 1.612230315895824
best_error: 1.6122303158953986
best_error: 1.5872545256767765
best_error: 1.5872542107358827
best_error: 1.5797257989977624
best_error: 1.579725491716836
best_error: 1.5707199851084557
best_error: 1.5707199851080427
best_error: 1.5462856187421725
best_error: 1.5462856187417209
best_error: 1.5326589959246413
best_error: 1.5326586618414735
best_error: 1.5210840240812784
best_error: 1.521084024080925
best_error: 1.502629721592044
best_error: 1.502629721591716
best_error: 1.4915625122575205
best_error: 1.4915621762515103
best_error: 1.4761790818607436
best_error: 1.4761790818603995
best_error: 1.4590944745853722
best_error: 1.4590944745850676
best_error: 1.4578402273764732
best_error: 1.457840227376169
best_error: 1.4572061961605804
best_error: 1.4572061961602827
best_error: 1.4566670634836296
best_error: 1.4566670634833199
best_error: 1.456635047736418
best_error: 1.4566350477360874
best_error: 1.4566284631723274
best_error: 1.4566284631720086
best_error: 1.4566255783348934
best_error: 1.4566255783345765
best_error: 1.4566228831870283
best_error: 1.4566228831867358
best_error: 1.4566218321290032
best_error: 1.4566218321286954
best_error: 1.4566211784033756
best_error: 1.4566211784030898
best_error: 1.4566207261281323
best_error: 1.4566207261278499
best_error: 1.4566204415923731
best_error: 1.4566204415920803
best_error: 1.4566202242438344
best_error: 1.4566202242435486
best_error: 1.456620106356775
best_error: 1.4566201063564646
best_error: 1.4566199885256141
best_error: 1.4566199885253135
best_error: 1.4566199399735582
best_error: 1.4566199399732793
best_error: 1.456619910599161
best_error: 1.456619910598879
best_error: 1.4566198792149816
best_error: 1.4566198792129996
