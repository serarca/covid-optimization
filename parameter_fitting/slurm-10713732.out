ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.331141588369162
best_error: 12.33114152125432
best_error: 11.929559578668414
best_error: 11.929559477383258
best_error: 10.38447852361663
best_error: 10.384478281467459
best_error: 8.563075114962006
best_error: 8.56307476829566
best_error: 7.916774169882672
best_error: 7.916773923505071
best_error: 7.879667248801555
best_error: 7.879667041441577
best_error: 6.3347654393463895
best_error: 6.334765225397986
best_error: 5.92206756999129
best_error: 5.922067303513032
best_error: 5.892712806782085
best_error: 5.892712553337812
best_error: 5.331517869120715
best_error: 5.331517424388824
best_error: 5.1767416001897715
best_error: 5.176741172026105
best_error: 4.912963596660473
best_error: 4.912963162103981
best_error: 4.856243190470077
best_error: 4.856242749413294
best_error: 4.820705597877457
best_error: 4.820705154657539
best_error: 4.81956262805116
best_error: 4.819562409834813
best_error: 4.812338534921471
best_error: 4.8123380901105355
best_error: 4.7872626497087705
best_error: 4.787262174643114
best_error: 4.783858396971622
best_error: 4.783858199317511
best_error: 4.781101066184477
best_error: 4.7811005758251826
best_error: 4.76172906772343
best_error: 4.761728861146149
best_error: 4.748240830305655
best_error: 4.748240610619994
best_error: 4.72923948861663
best_error: 4.7292392749087915
best_error: 4.727748204250236
best_error: 4.727747990594365
best_error: 4.7242900907845
best_error: 4.724289870632838
best_error: 4.721481583720534
best_error: 4.721481362069394
best_error: 4.71589063425872
best_error: 4.715890411375421
best_error: 4.714517445034632
best_error: 4.714517220849437
best_error: 4.709590645072069
best_error: 4.709590420802456
best_error: 4.688447445997909
best_error: 4.688446994811123
best_error: 4.608205371809465
best_error: 4.608205161787067
best_error: 4.578816102624066
best_error: 4.5788159160845465
best_error: 4.556993949446003
best_error: 4.556993727545773
best_error: 4.512619286605888
best_error: 4.512619070555675
best_error: 4.398536260906862
best_error: 4.398535782934564
best_error: 4.296487356578551
best_error: 4.296487165580447
best_error: 4.256736136745985
best_error: 4.256735938679124
best_error: 4.251493708394006
best_error: 4.251493510649788
best_error: 4.25121743720422
best_error: 4.251217039458431
best_error: 4.2466073847004076
best_error: 4.246607202381466
best_error: 4.219911672277755
best_error: 4.219911483233716
best_error: 4.200336065916399
best_error: 4.200335646888428
best_error: 4.182863410265172
best_error: 4.182863001791704
best_error: 4.040910319049233
best_error: 4.04091015213359
best_error: 3.9983155723916575
best_error: 3.998315148792114
best_error: 3.8585418497843285
best_error: 3.858541422140128
best_error: 3.8548549374582155
best_error: 3.8548548207695537
best_error: 3.8548548020558266
best_error: 3.7846990164403462
best_error: 3.7846985783487828
best_error: 3.6706408386636844
best_error: 3.670640402448791
best_error: 3.6528756844985755
best_error: 3.6528755864435443
best_error: 3.6528755518850717
best_error: 3.652517181264367
best_error: 3.652516752110616
best_error: 3.5710164167919087
best_error: 3.571015978074168
best_error: 3.5683894096618314
best_error: 3.5683893242533387
best_error: 3.56838927712331
best_error: 3.567046665297938
best_error: 3.567046227807784
best_error: 3.561947267558166
best_error: 3.5619468301383366
best_error: 3.561347818265224
best_error: 3.561347380786245
best_error: 3.561055199474297
best_error: 3.561054761966431
best_error: 3.5608981737032446
best_error: 3.5608977361743275
best_error: 3.5607959742289337
best_error: 3.5607955366863173
best_error: 3.5607535701582576
best_error: 3.5607531326099418
best_error: 3.5607447712508744
best_error: 3.560744333701379
best_error: 3.5607430524624006
best_error: 3.5607426149126686
best_error: 3.5607423674218497
best_error: 3.560741929872029
best_error: 3.5607419185064852
best_error: 3.560741908518088
best_error: 3.5607418930419947
best_error: 3.5607418622338933
best_error: 3.560741852245498
best_error: 3.5607418367694277
best_error: 3.5607418270996503
best_error: 3.5607418171112455
best_error: 3.560741801635191
best_error: 3.5607417949456885
best_error: 3.5607417794696024
best_error: 3.5607417652730566
best_error: 3.560354503977363
best_error: 3.560354064736127
best_error: 3.560114015667039
best_error: 3.560113574512771
best_error: 3.559894396674949
best_error: 3.559893954561466
best_error: 3.5593353620358688
best_error: 3.5593349138328425
best_error: 3.5586266717784465
best_error: 3.558626222941711
best_error: 3.5560721518939977
best_error: 3.5560717041323153
best_error: 3.548666815655157
best_error: 3.54866637110144
best_error: 3.5475497804406118
best_error: 3.5475493388674355
best_error: 3.547168538426643
best_error: 3.5471680951441376
best_error: 3.5469827236222526
best_error: 3.546982280293679
