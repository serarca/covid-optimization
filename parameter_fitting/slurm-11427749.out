ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.951499342020803
best_error: 24.95149889163122
best_error: 4.961246273538432
best_error: 4.961246273018665
best_error: 4.961183235229221
best_error: 4.961183235224162
best_error: 4.961183235199318
best_error: 4.9609304873451965
best_error: 4.960930487340101
best_error: 4.960930487315231
best_error: 4.959909870036712
best_error: 4.959909870031464
best_error: 4.959909870006494
best_error: 4.9556658481346565
best_error: 4.955665848128725
best_error: 4.955665848103373
best_error: 4.935593100421777
best_error: 4.935593100410885
best_error: 4.935593100384831
best_error: 4.070590610560264
best_error: 4.070590555859773
best_error: 3.853324327273664
best_error: 3.8533242705696917
best_error: 3.3715987299654886
best_error: 3.371598640744683
best_error: 3.2150121958698143
best_error: 3.215012089938128
best_error: 3.1732027730983585
best_error: 3.1732026620544467
best_error: 3.032036426002392
best_error: 3.0320362897259905
best_error: 2.7841374316752923
best_error: 2.784137285454161
best_error: 2.7548864867483824
best_error: 2.754886486471628
best_error: 2.7548864862221283
best_error: 2.7548864754260096
best_error: 2.751450350853395
best_error: 2.7514503261239427
best_error: 2.733403113038077
best_error: 2.7334030883164933
best_error: 2.713810766975747
best_error: 2.713810662742572
best_error: 2.65734861324262
best_error: 2.657348511564284
best_error: 2.484974520750249
best_error: 2.484974437746011
best_error: 2.2591609271604742
best_error: 2.259160848216818
best_error: 2.0433993378024784
best_error: 2.0433991337636015
best_error: 1.8279458629144936
best_error: 1.8279458345849842
best_error: 1.8279457832079375
best_error: 1.8199983509581399
best_error: 1.819998296440698
best_error: 1.8041661101726651
best_error: 1.804166027024593
best_error: 1.7786711274816307
best_error: 1.7786711196751204
best_error: 1.778626571163068
best_error: 1.778626562995894
best_error: 1.778545802510016
best_error: 1.778545801945768
best_error: 1.7785458019346096
best_error: 1.7785404968415508
best_error: 1.77854049612576
best_error: 1.7785377230692523
best_error: 1.7785377228252859
best_error: 1.7785377224695003
best_error: 1.778521911962443
best_error: 1.7785219092311433
best_error: 1.7784905678072267
best_error: 1.7784905635733903
best_error: 1.7783942516857818
best_error: 1.7783942422579648
best_error: 1.7782410456656397
best_error: 1.7782410338389634
best_error: 1.776846898713659
best_error: 1.7768468754667506
best_error: 1.7750991073284335
best_error: 1.7750990585311452
best_error: 1.7729161768742998
best_error: 1.7729161287949342
best_error: 1.7644779278869118
best_error: 1.7644778844340487
best_error: 1.7554752125332507
best_error: 1.7554751820592498
best_error: 1.7550669779813841
best_error: 1.755066953604358
best_error: 1.754692989789505
best_error: 1.75469298122544
best_error: 1.7546929736658405
best_error: 1.7533505221273413
best_error: 1.7533505099808162
best_error: 1.7504550470799882
best_error: 1.7504550452655447
best_error: 1.7500697548326656
best_error: 1.7500697527621147
best_error: 1.7487543025308594
best_error: 1.7487542859353389
best_error: 1.7483386730518007
best_error: 1.7483386623543675
best_error: 1.7482892563158143
best_error: 1.748289253699731
best_error: 1.7482817486135793
best_error: 1.7482817478823622
best_error: 1.748281747872389
best_error: 1.7482773016519717
best_error: 1.7482772997823772
best_error: 1.7482738089329717
best_error: 1.7482738076032587
best_error: 1.748264646537941
best_error: 1.7482646442096987
best_error: 1.7482547408095914
best_error: 1.7482547393914885
best_error: 1.74822156776995
best_error: 1.748221567377241
best_error: 1.748221567065725
best_error: 1.7480554730881
best_error: 1.748055473078348
best_error: 1.7480554724328308
best_error: 1.747434545578087
best_error: 1.7474345444379478
best_error: 1.746656655706828
best_error: 1.7466566539233586
best_error: 1.7434524042939776
best_error: 1.7434524014206807
best_error: 1.7319490906367994
best_error: 1.7319490873877066
best_error: 1.7283276895123172
best_error: 1.728327662491735
best_error: 1.7275201751098732
best_error: 1.7275201198433092
best_error: 1.7270509993261547
best_error: 1.7270509926957969
best_error: 1.7268974848120056
best_error: 1.7268974794209213
best_error: 1.7268733443485151
best_error: 1.7268733376856849
best_error: 1.7268402575023711
best_error: 1.7268402526875706
best_error: 1.7267796768244492
best_error: 1.7267796762096135
best_error: 1.7267015316274055
best_error: 1.7267015294299042
best_error: 1.726598748901259
best_error: 1.7265987441514046
best_error: 1.725917642415138
best_error: 1.7259176275253956
best_error: 1.7242405563608296
best_error: 1.7242405319846257
best_error: 1.7227083627440143
best_error: 1.722708332467819
best_error: 1.7223037328799693
best_error: 1.7223037316673904
best_error: 1.7212906695521213
best_error: 1.721290665531618
best_error: 1.7207338660651519
best_error: 1.7207338585087673
best_error: 1.720115182740703
best_error: 1.720115181640625
best_error: 1.7200609651340668
best_error: 1.720060957624228
best_error: 1.7200354455846345
best_error: 1.7200354419474306
best_error: 1.7200311569925395
best_error: 1.7200311569286972
best_error: 1.720029980453941
best_error: 1.7200299803823123
best_error: 1.720028449199165
best_error: 1.720028448563301
best_error: 1.7200229396124374
best_error: 1.7200229386535972
best_error: 1.720021580803847
best_error: 1.7200215797408407
best_error: 1.7200170589455361
best_error: 1.720017057959671
best_error: 1.7199874977059548
best_error: 1.7199874957583692
best_error: 1.7198233785516677
best_error: 1.7198233755735135
best_error: 1.719325033035559
best_error: 1.7193250101339836
best_error: 1.719092445384682
best_error: 1.719092436923134
best_error: 1.7190598322479718
best_error: 1.7190598281483753
best_error: 1.7190544682688738
best_error: 1.719054467180274
best_error: 1.7190534973104905
best_error: 1.719053497019041
best_error: 1.7190534550302694
best_error: 1.719053454395808
best_error: 1.7190533377153157
best_error: 1.7190533374176706
best_error: 1.7190532967048475
best_error: 1.719053296377183
best_error: 1.7190531698394447
best_error: 1.7190531697594165
best_error: 1.7190531696823088
best_error: 1.7190531029279112
best_error: 1.7190531024282276
best_error: 1.7190528420128102
best_error: 1.7190528416828048
best_error: 1.7190516834638299
best_error: 1.7190516830506162
best_error: 1.7190496533114439
best_error: 1.7190496532391821
best_error: 1.7190496531467034
best_error: 1.7190436532493896
best_error: 1.7190436530489641
best_error: 1.7190436530199389
best_error: 1.719036022749339
best_error: 1.7190360225461703
best_error: 1.719036022513053
best_error: 1.7190077516239866
best_error: 1.719007751144258
best_error: 1.7188108555438832
best_error: 1.718810843209995
best_error: 1.7186952872304824
best_error: 1.7186952721659656
best_error: 1.7179186814447969
best_error: 1.7179186434170617
best_error: 1.717117045140711
best_error: 1.7171170197491474
best_error: 1.7163302735817083
best_error: 1.7163302695697766
best_error: 1.716123463815633
best_error: 1.7161234571434067
best_error: 1.7161020576098267
best_error: 1.7161020572310794
best_error: 1.7160569624690953
best_error: 1.7160569573226203
best_error: 1.7160155819415783
best_error: 1.7160155782085391
best_error: 1.7159617971935395
best_error: 1.7159617962973621
best_error: 1.7159437139101437
best_error: 1.7159437128376096
best_error: 1.7159427853536886
best_error: 1.715942785301859
best_error: 1.7159419225862351
best_error: 1.7159419224003005
best_error: 1.715941850750706
best_error: 1.7159418506175828
best_error: 1.715941833512786
best_error: 1.7159418334692023
best_error: 1.7159418041084558
best_error: 1.7159418040387036
best_error: 1.7159417998049278
best_error: 1.7159417997352064
best_error: 1.715941799416189
best_error: 1.7159417993464678
best_error: 1.7159417992738446
best_error: 1.7159417992697952
best_error: 1.7159417992692778
