ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.551222708620287
best_error: 11.551222653568637
best_error: 11.551222634839561
best_error: 11.132745318538499
best_error: 11.132745238104894
best_error: 11.132745219876131
best_error: 10.005843156107412
best_error: 10.005843010201376
best_error: 9.319092222878446
best_error: 9.319092045035397
best_error: 9.050459687640004
best_error: 9.050459515638652
best_error: 8.931961521460366
best_error: 8.931961345111642
best_error: 8.320666659012494
best_error: 8.32066655119455
best_error: 8.32066654970179
best_error: 7.784707705468327
best_error: 7.78470760536807
best_error: 7.784707578237969
best_error: 7.546388979565062
best_error: 7.546388895063512
best_error: 7.546388843666814
best_error: 7.314163923837454
best_error: 7.3141638513008
best_error: 7.31416377863788
best_error: 7.185084642434619
best_error: 7.185084581007544
best_error: 7.185084491470841
best_error: 6.924994269522493
best_error: 6.924994074463554
best_error: 6.921956871599715
best_error: 6.921956794640424
best_error: 6.921956725045058
best_error: 6.716233611653158
best_error: 6.716233387871144
best_error: 5.918973121297849
best_error: 5.918972327528611
best_error: 5.493823772747228
best_error: 5.493823034423643
best_error: 4.484393729374892
best_error: 4.484393293886282
best_error: 4.245438712129102
best_error: 4.2454385355172715
best_error: 4.136232247997524
best_error: 4.13623181758631
best_error: 4.113231819434432
best_error: 4.1132316480968765
best_error: 4.108536802266725
best_error: 4.108536371314721
best_error: 4.108382053972771
best_error: 4.10838163416939
best_error: 4.101380248318314
best_error: 4.101380072567212
best_error: 4.082701357035358
best_error: 4.082701186456161
best_error: 4.030644978012004
best_error: 4.030644810519987
best_error: 3.832749221888032
best_error: 3.832749075497096
best_error: 3.661953151721817
best_error: 3.661953024219473
best_error: 3.6617375414365654
best_error: 3.6617372163727664
best_error: 3.4946714268839836
best_error: 3.4946713254242923
best_error: 3.3749711442249244
best_error: 3.3749708470985116
best_error: 3.266726329110843
best_error: 3.2667260134274807
best_error: 3.2651310074061035
best_error: 3.2651306946735312
best_error: 3.232658005947467
best_error: 3.232657688338095
best_error: 3.216801024735306
best_error: 3.2168007076607634
best_error: 3.21019299099096
best_error: 3.2101929736731796
best_error: 3.2070625291538217
best_error: 3.207062211781495
best_error: 3.2059097018778453
best_error: 3.2059096845044235
best_error: 3.205853683417588
best_error: 3.20585336584781
best_error: 3.205831742242397
best_error: 3.2058314246690487
best_error: 3.205824176302844
best_error: 3.2058238587282504
best_error: 3.205819524764553
best_error: 3.2058192071892018
best_error: 3.2058165776557446
best_error: 3.2058162600798905
best_error: 3.20581479424881
best_error: 3.2058144766726744
best_error: 3.2058136451329116
best_error: 3.205813327556595
best_error: 3.2058129642626074
best_error: 3.205812646686182
best_error: 3.2058125268644835
best_error: 3.205812209287978
best_error: 3.205812204386919
best_error: 3.2058118868103573
best_error: 3.205811838835017
best_error: 3.2058118171830197
best_error: 3.205811766476115
best_error: 2.952019424712528
best_error: 2.9520190864487867
best_error: 2.7139587620854178
best_error: 2.7139583357429204
best_error: 2.693044454687317
best_error: 2.6930440045040944
best_error: 2.6651068336449244
best_error: 2.6651063667772332
best_error: 2.478411394979982
best_error: 2.4784109562901198
best_error: 2.451436591117215
best_error: 2.451436158395911
best_error: 2.4405303644578327
best_error: 2.440529935823064
best_error: 2.4356324420754603
best_error: 2.4356320139929224
best_error: 2.4338190288084682
best_error: 2.43381902880467
best_error: 2.433818880861028
best_error: 2.4333734093941217
best_error: 2.4333729810532647
best_error: 2.4332215276506615
best_error: 2.433221527646868
best_error: 2.4332213797169304
best_error: 2.4332137233306406
best_error: 2.4332132949753023
best_error: 2.433203533646876
best_error: 2.433203105290489
best_error: 2.4331985588636713
best_error: 2.433198130506799
best_error: 2.4331972188764013
best_error: 2.433197218872647
best_error: 2.433197070943436
best_error: 2.433196912824604
best_error: 2.4331968947685496
best_error: 2.4331968675201767
best_error: 2.4331966648107053
best_error: 2.433196647659986
best_error: 2.433196644105628
best_error: 2.4331966440942363
