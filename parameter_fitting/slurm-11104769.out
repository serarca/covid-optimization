ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 92
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.4174259205871
best_error: 99.41742580270143
best_error: 99.41742579975607
best_error: 15.25322094005097
best_error: 15.253220928445261
best_error: 15.239963787587584
best_error: 15.2399637832856
best_error: 15.234833755648479
best_error: 15.234833752007535
best_error: 15.20451453787772
best_error: 15.204514534720342
best_error: 15.192726062001988
best_error: 15.192726061990655
best_error: 15.192726061910307
best_error: 15.19272606176542
best_error: 15.188905073977836
best_error: 15.18890507048463
best_error: 15.18890374019278
best_error: 15.188903740114359
best_error: 15.188903739991671
best_error: 15.187557977325087
best_error: 15.187557977245941
best_error: 15.187557977123118
best_error: 15.182092384830348
best_error: 15.182092381077629
best_error: 15.158439908340874
best_error: 15.158439903721021
best_error: 15.015730038613121
best_error: 15.015730029042643
best_error: 14.33536894471617
best_error: 14.335368944682232
best_error: 14.335368910667187
best_error: 14.333934804662405
best_error: 14.33393477045298
best_error: 14.32813226369789
best_error: 14.328132228876328
best_error: 14.307777770981001
best_error: 14.307777741502203
best_error: 14.082081660054392
best_error: 14.082081610692104
best_error: 13.93761767000069
best_error: 13.93761764379152
best_error: 13.92657457326284
best_error: 13.926574568457799
best_error: 13.925507467490796
best_error: 13.925507462873167
best_error: 13.924691314433574
best_error: 13.924691314380894
best_error: 13.924691313221771
best_error: 13.924691312490818
best_error: 13.92351181517396
best_error: 13.92351181391929
best_error: 13.923511813206026
best_error: 13.915118878315353
best_error: 13.915118877146451
best_error: 13.915118876689252
best_error: 13.859570968408015
best_error: 13.85957096796614
best_error: 13.859570967682156
best_error: 13.841546417050925
best_error: 13.841546417019869
best_error: 13.841546404240177
best_error: 13.80611065727183
best_error: 13.806110654577378
best_error: 13.725276588821362
best_error: 13.725276588710205
best_error: 13.725276585037772
best_error: 13.645702733977181
best_error: 13.645702733260908
best_error: 13.645702732945335
best_error: 13.555961250724128
best_error: 13.555961250097273
best_error: 13.555961246273242
best_error: 13.53008242997294
best_error: 13.530082429487917
best_error: 13.530082423367498
best_error: 13.53008242200815
best_error: 13.499276682197344
best_error: 13.499276680834823
best_error: 13.49927667421469
best_error: 13.49616627433277
best_error: 13.496166273835769
best_error: 13.49616625461047
best_error: 13.490138765758582
best_error: 13.490138764918486
best_error: 13.486654997377533
best_error: 13.486654996792675
best_error: 13.486654996389122
best_error: 13.4772723906923
best_error: 13.477272388392766
best_error: 13.4615445405597
best_error: 13.461544540164963
best_error: 13.461544532158692
best_error: 13.457173058586484
best_error: 13.457173057544846
best_error: 13.45717304584798
best_error: 13.453839220101354
best_error: 13.45383921919462
best_error: 13.453839210875952
best_error: 13.450691650830798
best_error: 13.45069165014013
best_error: 13.447436475603482
best_error: 13.44743647506077
best_error: 13.435965313450065
best_error: 13.43596531001913
best_error: 13.428878530998833
best_error: 13.428878525251257
best_error: 13.428878518910883
best_error: 13.426992790164805
best_error: 13.426992784481214
best_error: 13.426992778113497
best_error: 13.426453828691155
best_error: 13.426453822872512
best_error: 13.378830266121893
best_error: 13.378830263362325
best_error: 13.378830261564733
best_error: 13.37536560880865
best_error: 13.375365603426683
best_error: 13.375365594129295
best_error: 13.34804588374319
best_error: 13.348045880387236
best_error: 13.34804586347025
best_error: 13.313796436688818
best_error: 13.313796430993154
best_error: 13.264251522502203
best_error: 13.264251515648269
best_error: 13.264251445543026
best_error: 13.038608269577056
best_error: 13.038608269401456
best_error: 13.038608233369676
best_error: 13.018018103829146
best_error: 13.018018103586112
best_error: 13.018018101062637
best_error: 13.013122593035362
best_error: 13.013122591914378
best_error: 13.013122582038712
best_error: 13.011278335921721
best_error: 13.011278334823054
best_error: 13.011278325195654
best_error: 13.010907702978518
best_error: 13.010907702574984
best_error: 13.010907698823399
best_error: 13.0108643383445
best_error: 13.01086433659787
best_error: 13.01076439301659
best_error: 13.01076439259338
best_error: 13.010764388615883
best_error: 13.01056433026795
best_error: 13.010564330267885
best_error: 13.010564330245854
best_error: 13.010564329709025
best_error: 13.009099922710826
best_error: 13.00909991753514
best_error: 13.008347648836677
best_error: 13.008347648260923
best_error: 13.008347643558345
best_error: 13.007961448270708
best_error: 13.00796144578725
best_error: 13.00775373883932
best_error: 13.007753738839096
best_error: 13.00775373879393
best_error: 13.007753737342028
best_error: 13.007740812116939
best_error: 13.007740811859499
best_error: 13.007740810951972
best_error: 13.00773118900657
best_error: 13.007731188739983
best_error: 13.007731187576898
