ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.672225526685464
best_error: 8.672225497331095
best_error: 8.035618252910412
best_error: 8.035618164347815
best_error: 3.671468915538611
best_error: 3.671468911780816
best_error: 3.6712455646932995
best_error: 3.67124556187373
best_error: 3.6712455618497457
best_error: 3.663091654509715
best_error: 3.663091654509711
best_error: 3.6630916510662237
best_error: 3.6610172501733245
best_error: 3.6610172501733187
best_error: 3.661017246536936
best_error: 3.660101166019545
best_error: 3.6601011660195413
best_error: 3.660101162302823
best_error: 3.6555726486693123
best_error: 3.655572648669307
best_error: 3.6547284686962533
best_error: 3.6547284686962493
best_error: 3.654728464421545
best_error: 3.65403003463208
best_error: 3.6540300346320755
best_error: 3.6540300302836983
best_error: 3.65390735006964
best_error: 3.653907350069635
best_error: 3.6539073457047215
best_error: 3.653826577420287
best_error: 3.653826577420282
best_error: 3.6538265730447015
best_error: 3.6537625494679604
best_error: 3.653762549467951
best_error: 3.653762545106035
best_error: 3.653741959725275
best_error: 3.6537419597252723
best_error: 3.653741955360263
best_error: 3.653737956673827
best_error: 3.6537379566738224
best_error: 3.6537379523082136
best_error: 3.6537363149320354
best_error: 3.6537363149320337
best_error: 3.6537363105661753
best_error: 3.653735655650754
best_error: 3.6537356556507476
best_error: 3.6318609606608554
best_error: 3.6318609606608505
best_error: 3.621297678099122
best_error: 3.621297678099116
best_error: 3.620258312627768
best_error: 3.6202583126277617
best_error: 3.619806344599387
best_error: 3.619806344599378
best_error: 3.6194744140703548
best_error: 3.619474414070351
best_error: 3.619305278599641
best_error: 3.6193052785996356
best_error: 3.6192363662761373
best_error: 3.6192363662761267
best_error: 3.619174297286224
best_error: 3.6191742972862193
best_error: 3.619162981175242
best_error: 3.6191629811752377
best_error: 3.619160107348372
best_error: 3.6191601073483683
best_error: 3.619085097834963
best_error: 3.619085097834952
best_error: 3.618101829670176
best_error: 3.61810182967017
best_error: 3.6180839818501127
best_error: 3.6180839818501034
best_error: 3.617968422069898
best_error: 3.6179684220698847
best_error: 3.5936769057030267
best_error: 3.5936768696107286
best_error: 3.5602334578426964
best_error: 3.560233457842694
best_error: 3.553763335328644
best_error: 3.5537633353286386
best_error: 3.5537633345857573
best_error: 3.5428320709313255
best_error: 3.542832070931324
best_error: 3.54283207081535
best_error: 3.542464055341572
best_error: 3.5424640553415663
best_error: 3.542464055256223
best_error: 3.542256273780198
best_error: 3.5422562737801955
best_error: 3.542256273670572
best_error: 3.5421421339993655
best_error: 3.5421421339993637
best_error: 3.542142133905224
best_error: 3.5420763870548813
best_error: 3.5420763869552196
best_error: 3.5420383143387477
best_error: 3.542038314338744
best_error: 3.5420383142394813
best_error: 3.5420160745718285
best_error: 3.5420160745718263
best_error: 3.5420160744658107
best_error: 3.542006036310677
best_error: 3.542006036310675
best_error: 3.5420060362047865
best_error: 3.5419999681937733
best_error: 3.5419999681937675
best_error: 3.541999968087952
best_error: 3.5419962909041516
best_error: 3.5419962909041502
best_error: 3.541996290798385
best_error: 3.5419940598777364
best_error: 3.541994059877733
best_error: 3.541994059771999
best_error: 3.541992704209064
best_error: 3.5419927042090613
best_error: 3.5419927041033406
best_error: 3.541991879214413
best_error: 3.54199187921441
best_error: 3.5419918791086964
best_error: 3.5419913756822794
best_error: 3.5419913756822785
best_error: 3.5419913755765733
best_error: 3.541991067162642
best_error: 3.5419910671626367
best_error: 3.541991067056942
best_error: 3.5419908295297278
best_error: 3.5419908295297255
best_error: 3.5419908294240288
best_error: 3.5419906881884655
best_error: 3.541990688188465
best_error: 3.5419906880827776
best_error: 3.541990603813525
best_error: 3.541990603813524
best_error: 3.541990603707832
best_error: 3.541990553222598
best_error: 3.541990553222596
best_error: 3.541990553116899
best_error: 3.5419905195271317
best_error: 3.5419905195271304
best_error: 3.541990519421438
best_error: 3.5419905021134275
best_error: 3.541990502113424
best_error: 3.5419905020077267
best_error: 3.54199048979197
best_error: 3.541990489791968
best_error: 3.541990489686279
best_error: 3.541990477599282
best_error: 3.5419904775992785
best_error: 3.541990476515914
best_error: 3.541990476515913
