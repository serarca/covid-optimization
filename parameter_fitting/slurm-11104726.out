ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.82390934627378
best_error: 98.82390914864139
best_error: 14.433918700363296
best_error: 14.433918700349807
best_error: 14.4339186763827
best_error: 14.400107552879987
best_error: 14.400107528077003
best_error: 14.252803742403053
best_error: 14.252803713944939
best_error: 13.358719873825358
best_error: 13.35871981651295
best_error: 13.203886332789331
best_error: 13.203886272117892
best_error: 13.046266291281814
best_error: 13.046266225530676
best_error: 11.713091149094206
best_error: 11.713091143815841
best_error: 11.699996967934414
best_error: 11.699996964665845
best_error: 11.419543060024145
best_error: 11.419543051053722
best_error: 11.418594849347734
best_error: 11.418594840511494
best_error: 11.418123797410447
best_error: 11.41812378869906
best_error: 11.418081566181566
best_error: 11.41808155746892
best_error: 11.342705334335808
best_error: 11.342705327129712
best_error: 9.469839383338567
best_error: 9.469839383336113
best_error: 9.469839373431855
best_error: 9.469839369067246
best_error: 9.458590183822508
best_error: 9.45859013183516
best_error: 9.458170589428573
best_error: 9.458170589360034
best_error: 9.45817057989266
best_error: 9.45817057409906
best_error: 9.036154687274028
best_error: 9.036154482476165
best_error: 8.820004077934898
best_error: 8.820003873243943
best_error: 8.770129255343107
best_error: 8.770129063790968
best_error: 8.700585979869734
best_error: 8.700585821166856
best_error: 8.61789195030927
best_error: 8.617891795098577
best_error: 8.5868122523313
best_error: 8.586812099276475
best_error: 8.573949292777307
best_error: 8.57394914220739
best_error: 8.573087044083715
best_error: 8.573087009388187
best_error: 8.573086920499373
best_error: 8.488318168561491
best_error: 8.488318047388677
best_error: 7.915560408488895
best_error: 7.915560058339581
best_error: 7.002838719893303
best_error: 7.002838216796644
best_error: 6.6100435387812055
best_error: 6.6100435270964235
best_error: 6.6029140725113145
best_error: 6.602914066103277
best_error: 6.582496732344966
best_error: 6.58249672787829
best_error: 6.581287688080499
best_error: 6.581287571753709
best_error: 6.57868587838269
best_error: 6.578685874269596
best_error: 6.5768154801900724
best_error: 6.576815365858856
best_error: 6.576709857866062
best_error: 6.576709853742836
best_error: 6.576636895323585
best_error: 6.5766367809942
best_error: 6.576601276846192
best_error: 6.576601272729423
best_error: 6.576600222158741
best_error: 6.576600107829736
best_error: 6.576599795567345
best_error: 6.576599791450662
best_error: 6.574301408833929
best_error: 6.574301405214943
best_error: 6.574301405102381
best_error: 6.573073789973954
best_error: 6.573073786494648
best_error: 6.573073786247924
best_error: 6.5727030152210295
best_error: 6.572702580674309
best_error: 6.572518240544351
best_error: 6.572518237123192
best_error: 6.572518236820697
best_error: 6.572456355855476
best_error: 6.572456352437726
best_error: 6.5724563521321056
best_error: 6.572415888038192
best_error: 6.572415884622677
best_error: 6.5724158843150065
best_error: 6.572388577615262
best_error: 6.5723885742012556
best_error: 6.572388573892202
best_error: 6.57236941841198
best_error: 6.572369414999031
best_error: 6.572369414689009
best_error: 6.5723556229051425
best_error: 6.572355619492953
best_error: 6.572355619182237
best_error: 6.572346933201369
best_error: 6.572346929789658
best_error: 6.5723469294785
best_error: 6.572344362376388
best_error: 6.572344358964818
best_error: 6.572344358653532
best_error: 6.572342351671684
best_error: 6.572342348260225
best_error: 6.572342347948836
best_error: 6.572340721169853
best_error: 6.5723407177584825
best_error: 6.572340717447013
best_error: 6.572339510310184
best_error: 6.572339506898879
best_error: 6.572339506587351
best_error: 6.572338784032463
best_error: 6.572338780621198
best_error: 6.572338780309633
best_error: 6.572338533354653
best_error: 6.572338465190396
best_error: 6.572338461779147
best_error: 6.572338461467564
best_error: 6.572338278303821
best_error: 6.572338274892589
best_error: 6.572338274580991
best_error: 6.572338196721152
best_error: 6.571460373955919
best_error: 6.571460370450481
best_error: 6.571460370228847
best_error: 6.571434798224321
best_error: 6.571434794720671
best_error: 6.571434794497426
best_error: 6.571413488731125
best_error: 6.571413485228963
best_error: 6.571413485004377
best_error: 6.57138816088472
best_error: 6.571388157384327
best_error: 6.5713881571581485
best_error: 6.571371892944937
best_error: 6.571371889445683
best_error: 6.571371889218478
best_error: 6.571345940185907
best_error: 6.571345936688467
best_error: 6.571345936459629
best_error: 6.57132201845213
best_error: 6.5713220149563645
best_error: 6.57132201472602
best_error: 6.571310587160454
best_error: 6.571310583665485
best_error: 6.571310583434421
best_error: 6.571310135309289
best_error: 6.571310131814348
best_error: 6.5713101315832585
best_error: 6.571309734554025
best_error: 6.571309731059118
best_error: 6.571309730828
best_error: 6.571309023963566
best_error: 6.571309020468705
best_error: 6.571309020237545
best_error: 6.571308368539976
best_error: 6.571308365045161
best_error: 6.571308364813959
best_error: 6.571308271584924
best_error: 6.571308268090115
best_error: 6.571308267858907
best_error: 6.571308229997981
best_error: 6.571308226503174
best_error: 6.571308226271964
best_error: 6.571308212177669
best_error: 6.571308208682864
best_error: 6.571308208451653
best_error: 6.57130819121454
best_error: 6.57130818771974
best_error: 6.571308187488524
best_error: 6.57130818334199
best_error: 6.571308179847189
best_error: 6.571308179615974
best_error: 6.571308162625588
best_error: 6.571308159130789
best_error: 6.571308158899571
best_error: 6.5713081563810585
best_error: 6.571308156149842
best_error: 6.571308153208863
best_error: 6.571308152977647
best_error: 6.571308135626698
