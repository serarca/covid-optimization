ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 66
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 103.19409540808815
best_error: 103.19409523089986
best_error: 103.19409520688905
best_error: 20.56105797514597
best_error: 20.561057975145136
best_error: 20.56105797365216
best_error: 20.56088782959999
best_error: 20.560887828101407
best_error: 20.560201783187953
best_error: 20.560201781670035
best_error: 20.557366883075964
best_error: 20.557366881476504
best_error: 20.544330828232816
best_error: 20.544330826225096
best_error: 20.431249880182996
best_error: 20.43124987280227
best_error: 20.428618890106186
best_error: 20.42861888256825
best_error: 20.082888062156126
best_error: 20.08288802493039
best_error: 15.89123847327494
best_error: 15.89123790849667
best_error: 14.057646968401604
best_error: 14.057646967169276
best_error: 14.057646891739644
best_error: 14.052923790276779
best_error: 14.05292378485019
best_error: 14.052923780091858
best_error: 14.052923776646125
best_error: 14.049618510796659
best_error: 14.049618503582622
best_error: 14.049618500650292
best_error: 14.042605568919196
best_error: 14.042605561349465
best_error: 14.042605559623842
best_error: 14.018069027315208
best_error: 14.018069018982477
best_error: 14.009929918728018
best_error: 14.009929889350053
best_error: 14.000361761409696
best_error: 14.000361753159755
best_error: 13.993421442359644
best_error: 13.99342109006812
best_error: 13.974767551374015
best_error: 13.974767545621251
best_error: 13.974767545527886
best_error: 13.97476754340053
best_error: 13.967309649408655
best_error: 13.967309623242556
best_error: 13.962092188791948
best_error: 13.962092163396594
best_error: 13.95995785480265
best_error: 13.959957851239167
best_error: 13.959957827305676
best_error: 13.959919416189729
best_error: 13.959919391293653
best_error: 13.959887739823245
best_error: 13.959887714927644
best_error: 13.959872861204747
best_error: 13.959872836309334
best_error: 13.959865414810768
best_error: 13.959865389915453
best_error: 13.959860797596187
best_error: 13.959860772700953
best_error: 13.959858734181237
best_error: 13.95985870928603
best_error: 13.95985724355827
best_error: 13.959857218663096
best_error: 13.959857133705786
best_error: 13.959857108810592
best_error: 13.959857060198765
best_error: 13.959857035303578
best_error: 13.959857028986846
best_error: 13.959857004091665
best_error: 13.959709586550225
best_error: 13.95970958298987
best_error: 13.959709559013277
best_error: 13.959696024424904
best_error: 13.959695710048685
best_error: 13.959547272473987
best_error: 13.95954695808378
best_error: 13.959544892946926
best_error: 13.959544868055467
best_error: 13.95953764980576
best_error: 13.959537624914406
best_error: 13.959533161296433
best_error: 13.95953313640514
best_error: 13.959532429554738
best_error: 13.959532404663438
best_error: 13.95953193616731
best_error: 13.959531911276041
best_error: 13.959530177100305
best_error: 13.959530152209048
best_error: 13.959529343248235
best_error: 13.959529318357001
best_error: 13.959529289381788
best_error: 13.959529264490541
best_error: 13.959529247514265
best_error: 13.959529222623013
best_error: 13.959529108667258
best_error: 13.959529083776031
best_error: 13.959529021903002
best_error: 13.959528997011741
best_error: 13.959528980330026
best_error: 13.959528964529433
best_error: 13.959528956424387
best_error: 13.959528948753949
best_error: 13.959528944768387
best_error: 13.959528942074826
best_error: 13.959528939538497
best_error: 13.959528938114243
best_error: 13.959528936783881
best_error: 13.95952893597283
best_error: 13.959528935497287
best_error: 13.959528300166063
best_error: 13.959528296607212
best_error: 13.959528272604867
best_error: 13.959528218060644
best_error: 13.959528214501802
best_error: 13.959528190499451
best_error: 13.959527889638874
best_error: 13.959527886080025
best_error: 13.95952786207764
best_error: 13.959527741847918
best_error: 13.959527716956707
best_error: 13.959527409411423
best_error: 13.959527405852576
best_error: 13.959527381850144
best_error: 13.959527104733926
best_error: 13.959527101175079
best_error: 13.9595270844437
best_error: 13.959527043178817
best_error: 13.959527039619973
best_error: 13.959527037641124
best_error: 13.959527035347698
best_error: 13.959526969472051
best_error: 13.959526965913206
best_error: 13.959526941910699
best_error: 13.95952544058291
best_error: 13.959525437024086
best_error: 13.959525413021337
best_error: 13.959520749535049
best_error: 13.959520435142249
best_error: 13.959519132863834
best_error: 13.959519128926484
best_error: 13.95951910635955
best_error: 13.959519092050812
best_error: 13.959519061320151
best_error: 13.9595190573828
best_error: 13.959519034815862
