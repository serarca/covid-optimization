ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 78
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.76014060472271
best_error: 99.76014052670453
best_error: 99.76014043469192
best_error: 18.863913545910385
best_error: 18.863913545906602
best_error: 18.863913538003736
best_error: 18.843300182334993
best_error: 18.84330017389066
best_error: 18.74588428717629
best_error: 18.745884276041597
best_error: 14.780707411484428
best_error: 14.780707156225043
best_error: 14.194582198663241
best_error: 14.194582197603753
best_error: 14.194581465790058
best_error: 13.962430222393724
best_error: 13.962430116578716
best_error: 13.879181869253847
best_error: 13.879181859210398
best_error: 13.87918160146437
best_error: 13.651208466816811
best_error: 13.651208456415068
best_error: 13.651208443919444
best_error: 12.984433915209745
best_error: 12.984433904656889
best_error: 12.984433901151249
best_error: 12.98443388654843
best_error: 12.4719274318814
best_error: 12.471927406978159
best_error: 12.47192740042211
best_error: 11.497579138302026
best_error: 11.497579117216196
best_error: 11.497579113614957
best_error: 11.261548750773319
best_error: 11.261548716493705
best_error: 11.037053944380565
best_error: 11.037053860536396
best_error: 10.879180603738503
best_error: 10.87918054292225
best_error: 10.867397202116106
best_error: 10.867397180533459
best_error: 10.867397178385993
best_error: 10.793334329913375
best_error: 10.793334313008025
best_error: 10.793334307085306
best_error: 10.701077198427447
best_error: 10.701077184060583
best_error: 10.701077176534142
best_error: 10.5131012031783
best_error: 10.51310118992535
best_error: 10.51310118197643
best_error: 10.289953245067359
best_error: 10.28995322805391
best_error: 10.289953222969405
best_error: 10.262865813950096
best_error: 10.262865795488011
best_error: 10.262865791690375
best_error: 10.256844752068908
best_error: 10.256844722841851
best_error: 10.119628090171904
best_error: 10.119628064905898
best_error: 10.11147101917193
best_error: 10.11147099254631
best_error: 10.111035559413457
best_error: 10.11103553254113
best_error: 10.110973790582051
best_error: 10.110973763698656
best_error: 9.924705552422814
best_error: 9.924705545122038
best_error: 9.924705508551762
best_error: 9.787870589177928
best_error: 9.787870386199295
best_error: 9.744708867040384
best_error: 9.744708853441933
best_error: 9.74044206976609
best_error: 9.740442056613327
best_error: 9.740442054858208
best_error: 9.740088807321534
best_error: 9.740088794348495
best_error: 9.7400887916776
best_error: 9.74005185713275
best_error: 9.740051844160254
best_error: 9.74005184148933
best_error: 9.740041024525722
best_error: 9.7400408642828
best_error: 9.740040297345725
best_error: 9.740040284373347
best_error: 9.740040281702406
best_error: 9.735334236102098
best_error: 9.735334222524084
best_error: 9.730406870391274
best_error: 9.730406854890639
best_error: 9.726619113319527
best_error: 9.726619098117478
best_error: 9.719625289698033
best_error: 9.719625274801448
best_error: 9.708417538513535
best_error: 9.708417523026206
best_error: 9.656633495261547
best_error: 9.656633477386553
best_error: 9.641088882634715
best_error: 9.641088862196824
best_error: 9.636795820300838
best_error: 9.636795800112042
best_error: 9.635534428150418
best_error: 9.635534406737872
best_error: 9.604565773407208
best_error: 9.604565753554867
best_error: 9.603497105278986
best_error: 9.603497083961752
best_error: 9.551065946507027
best_error: 9.551065940151037
best_error: 9.444501116295577
best_error: 9.444501116185593
best_error: 9.444501107365797
best_error: 9.319164853819888
best_error: 9.319164850979176
best_error: 9.319164850932413
best_error: 9.220572148704877
best_error: 9.220572146599931
best_error: 9.202173317742034
best_error: 9.202173310533116
best_error: 9.202173181555855
best_error: 9.174965101988693
best_error: 9.174965091219313
best_error: 9.172571884318147
best_error: 9.172571879999374
best_error: 9.172571808921035
best_error: 9.168136490616355
best_error: 9.168136480160655
best_error: 9.161573593815422
best_error: 9.161573589219648
best_error: 9.161573523772756
best_error: 9.077418533995688
best_error: 9.077418198392998
best_error: 9.001413241534145
best_error: 9.001413227626653
best_error: 9.001234372624133
best_error: 9.001234358747068
best_error: 9.001224374443307
best_error: 9.001224360572198
best_error: 9.001197889696877
best_error: 9.001197875802948
best_error: 9.001150303536878
best_error: 9.001150289645377
best_error: 9.001126102764827
best_error: 9.001126088874539
best_error: 9.001123835840216
best_error: 9.001123821950037
best_error: 9.001121637015538
best_error: 9.001121623125465
best_error: 9.001120497802242
best_error: 9.001120483912237
best_error: 9.00111939510067
best_error: 9.001119381210712
best_error: 9.001118807468469
best_error: 9.001118793578536
best_error: 9.001118240302542
best_error: 9.00111822641265
best_error: 9.001117918007125
best_error: 9.001117904117239
best_error: 9.001117608786272
best_error: 9.00111759489642
best_error: 9.001117401053946
best_error: 9.001117387164095
best_error: 9.001117205364103
best_error: 9.001117191474266
best_error: 9.001116954330353
best_error: 9.001116940440513
best_error: 9.001116738630621
best_error: 9.0011167247408
best_error: 9.001116341057005
best_error: 9.001116332834158
best_error: 9.001116327876652
best_error: 9.000789467888605
best_error: 9.000789459761636
best_error: 9.000789454714514
