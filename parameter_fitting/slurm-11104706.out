ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.10856957920608
best_error: 97.10856943980039
best_error: 97.10856934821544
best_error: 15.081826904309471
best_error: 15.081826904299241
best_error: 15.081826887451916
best_error: 15.046627559368417
best_error: 15.04662754239975
best_error: 14.898149082781476
best_error: 14.898149063803583
best_error: 14.355399418108123
best_error: 14.355399417958443
best_error: 14.355399417923817
best_error: 14.355399408291499
best_error: 14.355399407003778
best_error: 14.220925443111526
best_error: 14.220925414509514
best_error: 14.204598091967423
best_error: 14.204598062953266
best_error: 14.195387495699823
best_error: 14.195387466409795
best_error: 14.191112397402833
best_error: 14.191112367984262
best_error: 14.190568644459699
best_error: 14.190568615032284
best_error: 14.19017362495521
best_error: 14.190173624952548
best_error: 14.190173624875586
best_error: 14.19017361412454
best_error: 14.187268306874996
best_error: 14.187268306872063
best_error: 14.18726830679474
best_error: 14.187268296044582
best_error: 14.175638412351935
best_error: 14.175638412347894
best_error: 14.175638412269102
best_error: 14.175638401522532
best_error: 14.129110308176678
best_error: 14.129110308167224
best_error: 14.129110308082799
best_error: 14.129110297351254
best_error: 13.942108169381514
best_error: 13.942108169282884
best_error: 13.94210816916945
best_error: 13.942108166777789
best_error: 13.942108158570626
best_error: 13.244856401793655
best_error: 13.244856400336356
best_error: 13.244856397330784
best_error: 13.244856396582211
best_error: 13.244856390996482
best_error: 13.243336657551
best_error: 13.243336655942782
best_error: 13.243336652607947
best_error: 13.243336652500263
best_error: 13.243336646752331
best_error: 12.984463746949427
best_error: 12.984463691205425
best_error: 12.984463687157877
best_error: 12.694252093306956
best_error: 12.69425209036153
best_error: 12.694252066066376
best_error: 12.298305310939838
best_error: 12.298305206075314
best_error: 12.061564142276675
best_error: 12.061564131837338
best_error: 12.061564127086537
best_error: 12.061564025361914
best_error: 11.970795092952855
best_error: 11.970794971921922
best_error: 11.690374156886426
best_error: 11.690374106997034
best_error: 11.690374068631264
best_error: 11.652481835287096
best_error: 11.652481835159598
best_error: 11.652481826285921
best_error: 11.65248174123915
best_error: 11.138072586032651
best_error: 11.138072585953715
best_error: 11.138072576697297
best_error: 11.138072506507529
best_error: 10.107030549068835
best_error: 10.1070305463733
best_error: 10.107030535716778
best_error: 10.107030506937106
best_error: 9.910903119648317
best_error: 9.91090311962804
best_error: 9.91090310776023
best_error: 9.910903098109616
best_error: 9.3230560971633
best_error: 9.323055660531642
best_error: 8.293569746846403
best_error: 8.293569618739435
best_error: 8.2469497128575
best_error: 8.246949674439662
best_error: 8.246949639252659
best_error: 8.219486048790163
best_error: 8.219485921553808
best_error: 7.965298244058746
best_error: 7.965298241838386
best_error: 7.9652982410269
best_error: 7.965298193123218
best_error: 7.957032204861219
best_error: 7.957031919630111
best_error: 7.713873305670509
best_error: 7.713873288107232
best_error: 7.644877489979823
best_error: 7.644877425428504
best_error: 7.630733758337766
best_error: 7.630733379869645
best_error: 7.611286297434523
best_error: 7.611285934854549
best_error: 7.600631046112074
best_error: 7.600630929267826
best_error: 7.600630886319305
best_error: 7.548393362326696
best_error: 7.548393294182754
best_error: 7.472226189631573
best_error: 7.472226168501734
best_error: 7.469881366608515
best_error: 7.469880915252819
best_error: 7.428703983585894
best_error: 7.428703928687938
best_error: 7.412593434461458
best_error: 7.412593426351606
best_error: 7.411648632720452
best_error: 7.411648095929739
best_error: 7.391851429700849
best_error: 7.391851426261324
best_error: 7.391851020584117
best_error: 7.389362422974534
best_error: 7.389362371698436
best_error: 7.387445772810722
best_error: 7.387445767811373
best_error: 7.387445383240825
best_error: 7.387350211391981
best_error: 7.387350208631959
best_error: 7.387350191998283
best_error: 7.387150409686308
best_error: 7.387149994892481
best_error: 7.385643876872033
best_error: 7.385643865063903
best_error: 7.385516094497435
best_error: 7.385515633317494
best_error: 7.385513035184282
best_error: 7.385513033283029
best_error: 7.385512599185219
best_error: 7.382905883172439
best_error: 7.3829058793436
best_error: 7.382905459691908
best_error: 7.362666945133108
best_error: 7.3626668866983085
best_error: 7.343396149653162
best_error: 7.343396076301461
best_error: 7.329851114508278
best_error: 7.329851034562669
best_error: 7.2728814400105595
best_error: 7.2728813442956834
best_error: 7.258523139904266
best_error: 7.258523042398155
best_error: 7.225669680979725
best_error: 7.225669545532085
best_error: 7.197436589701938
best_error: 7.197436502507377
best_error: 7.191859131958545
best_error: 7.191859045716418
best_error: 7.162715956857414
best_error: 7.162715883971337
best_error: 7.162634194533693
best_error: 7.162634170739571
best_error: 7.162633949923975
