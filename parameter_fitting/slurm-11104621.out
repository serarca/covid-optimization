ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 104.6227156448018
best_error: 104.6227154920307
best_error: 104.62271547827888
best_error: 18.13018853903205
best_error: 18.13018853902663
best_error: 18.130188529401174
best_error: 18.123697813701277
best_error: 18.123697803896885
best_error: 18.09652418356287
best_error: 18.09652417301131
best_error: 17.9636100840895
best_error: 17.963610069409945
best_error: 16.029981000491738
best_error: 16.02998089511012
best_error: 15.68311207951627
best_error: 15.683111972981592
best_error: 15.33875901881495
best_error: 15.338758896494085
best_error: 14.92456409766642
best_error: 14.924563949452192
best_error: 14.463348881997362
best_error: 14.463348705405764
best_error: 12.484937188450846
best_error: 12.484937062036117
best_error: 12.27008334098194
best_error: 12.270083256495845
best_error: 12.154423576194263
best_error: 12.154423549047078
best_error: 12.063010755703342
best_error: 12.063010737523891
best_error: 12.063010736780333
best_error: 11.979538988848002
best_error: 11.979538972282
best_error: 11.979538969938163
best_error: 11.328133182895321
best_error: 11.328133165243536
best_error: 10.788088247609915
best_error: 10.788088237513822
best_error: 10.788088236137265
best_error: 10.649017330773608
best_error: 10.64901733076757
best_error: 10.649017315334447
best_error: 10.586798430478115
best_error: 10.586798429688246
best_error: 10.586798415871405
best_error: 10.466454502539051
best_error: 10.46645449601532
best_error: 10.466454493354746
best_error: 10.441679189210484
best_error: 10.44167918564207
best_error: 10.441679185165576
best_error: 10.441679180275877
best_error: 10.431774419886239
best_error: 10.431774110322532
best_error: 10.429149447214591
best_error: 10.429149137436273
best_error: 10.397855983846204
best_error: 10.397855779991225
best_error: 10.38481220045771
best_error: 10.384812187488953
best_error: 10.346599863461115
best_error: 10.34659985096281
best_error: 10.334749943995227
best_error: 10.334749931474926
best_error: 10.310908256039017
best_error: 10.310908209722438
best_error: 10.20663168211977
best_error: 10.206631631804612
best_error: 10.004960341270571
best_error: 10.004960273352506
best_error: 9.956704127984551
best_error: 9.956704084324146
best_error: 9.911679800205718
best_error: 9.911679799213246
best_error: 9.911679751809245
best_error: 9.90990049435883
best_error: 9.909900471533163
best_error: 9.89317086158638
best_error: 9.89317083687236
best_error: 9.881125858899399
best_error: 9.881125855614993
best_error: 9.881125833111282
best_error: 9.876303992741004
best_error: 9.87630392998077
best_error: 9.864609268608945
best_error: 9.864609243304747
best_error: 9.850273412831612
best_error: 9.850273387485979
best_error: 9.846946061396663
best_error: 9.846946037390108
best_error: 9.84611442937955
best_error: 9.846114368433737
best_error: 9.84601041381647
best_error: 9.846010389835858
best_error: 9.845982873467221
best_error: 9.845982849487488
best_error: 9.845979073359917
best_error: 9.84597904938031
best_error: 9.84597847403441
best_error: 9.84597841308948
best_error: 9.836253856255185
best_error: 9.836253798019886
best_error: 9.829341666608705
best_error: 9.829341650893085
best_error: 9.827524712651059
best_error: 9.827524654835953
best_error: 9.815877675475516
best_error: 9.815877620854081
best_error: 9.813686891494424
best_error: 9.813686837554648
best_error: 9.813272053099071
best_error: 9.81327199987637
best_error: 9.813142943306499
best_error: 9.813142926716809
best_error: 9.78166028379805
best_error: 9.781660266678422
best_error: 9.779440469309991
best_error: 9.779440452228696
best_error: 9.77768557127694
best_error: 9.777685407080126
best_error: 9.77554642674378
best_error: 9.775546268395061
best_error: 9.774530078861966
best_error: 9.774530059810209
best_error: 9.773077848191452
best_error: 9.773077829245167
best_error: 9.770843481586688
best_error: 9.770843463984422
best_error: 9.77076660496299
best_error: 9.770766451529832
best_error: 9.770595179258592
best_error: 9.770595161662389
best_error: 9.769559226613723
best_error: 9.76955920853462
best_error: 9.769326485658716
best_error: 9.769326467591029
best_error: 9.768984480563912
best_error: 9.768984462515611
best_error: 9.768789715541804
best_error: 9.768789697504596
best_error: 9.768676301997147
best_error: 9.768676283966428
best_error: 9.768670979795907
best_error: 9.768670961765425
best_error: 9.76866779333525
best_error: 9.768667775304902
best_error: 9.768665896995078
best_error: 9.768665878964805
best_error: 9.768664777652774
best_error: 9.768664759622546
best_error: 9.76866412418052
best_error: 9.768664106150307
best_error: 9.768663748179252
best_error: 9.768663730149067
best_error: 9.768663729878726
best_error: 9.768663711848534
best_error: 9.768663702595559
best_error: 9.768663697906545
