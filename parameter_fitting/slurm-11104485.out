ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 70
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.04907334468656
best_error: 102.04907325909318
best_error: 102.0490731528245
best_error: 20.266551116013932
best_error: 20.26655111601261
best_error: 20.26655111330173
best_error: 20.264756698491073
best_error: 20.26475669572321
best_error: 20.25719463582877
best_error: 20.257194632816027
best_error: 20.218445503588264
best_error: 20.218445498976752
best_error: 16.947561566053306
best_error: 16.947561155236535
best_error: 15.99580723922054
best_error: 15.995807230334146
best_error: 15.995806165228617
best_error: 15.459360687217412
best_error: 15.459360508044607
best_error: 15.196834285468626
best_error: 15.196834179102112
best_error: 15.057729528521232
best_error: 15.05772951997045
best_error: 15.057729517590055
best_error: 15.057729508758062
best_error: 14.69346443805928
best_error: 14.693464432107039
best_error: 14.693464426949784
best_error: 14.693464417641772
best_error: 14.197983179910656
best_error: 14.197983145420299
best_error: 14.037803391998834
best_error: 14.037803302376114
best_error: 13.891026798251502
best_error: 13.891026727914035
best_error: 13.781783725134229
best_error: 13.781783721096595
best_error: 13.78178371818322
best_error: 13.781783707516803
best_error: 13.762021240696237
best_error: 13.762021214986683
best_error: 13.671264146459578
best_error: 13.67126412800853
best_error: 13.671247744721873
best_error: 13.671247693905629
best_error: 13.639429558307148
best_error: 13.639429489519989
best_error: 13.565328655653524
best_error: 13.565328641918857
best_error: 13.565328641281791
best_error: 13.558546891894096
best_error: 13.558546879157571
best_error: 13.558546877833209
best_error: 13.551019705090221
best_error: 13.551019693317615
best_error: 13.551019691261578
best_error: 13.52751075778459
best_error: 13.527510748798868
best_error: 13.527510744414815
best_error: 13.496536110241314
best_error: 13.49653610479898
best_error: 13.49653610458256
best_error: 13.49653610407624
best_error: 13.49653608008931
best_error: 13.425405310628328
best_error: 13.425405307826761
best_error: 13.425405271855979
best_error: 13.42540526423933
best_error: 13.124289131997084
best_error: 13.124288616723629
best_error: 13.01239584821268
best_error: 13.012395643265412
best_error: 12.992366941823384
best_error: 12.992366782299706
best_error: 12.983193927236538
best_error: 12.983193925614765
best_error: 12.983193819546402
best_error: 12.970056399597922
best_error: 12.97005637712994
best_error: 12.9700563753345
best_error: 12.94237187915109
best_error: 12.94237185660495
best_error: 12.94237185579754
best_error: 12.869281270871781
best_error: 12.869281200161893
best_error: 12.824918234676979
best_error: 12.824918209497334
best_error: 12.71851395861637
best_error: 12.718513927769514
best_error: 12.698710269701563
best_error: 12.698710233321314
best_error: 12.550293328759496
best_error: 12.550293308325084
best_error: 12.45450552854549
best_error: 12.45450550951388
best_error: 12.297602986136535
best_error: 12.29760298270838
best_error: 12.297602936789707
best_error: 12.29760292887519
best_error: 12.274740499907766
best_error: 12.274740475540726
best_error: 12.255359691488502
best_error: 12.255359395384403
best_error: 12.252415026723828
best_error: 12.25241501940932
best_error: 12.252415001445506
best_error: 12.244769374735458
best_error: 12.24476909036508
best_error: 12.240186536485737
best_error: 12.240186529369533
best_error: 12.240186513791242
best_error: 12.239932406087853
best_error: 12.239932398976002
best_error: 12.239932383389878
best_error: 12.239913520462101
best_error: 12.239913235664378
best_error: 12.198745938993122
best_error: 12.19874591843291
best_error: 12.190978952682185
best_error: 12.19097893494537
best_error: 12.18232097871752
best_error: 12.182320963069778
best_error: 12.172820828566215
best_error: 12.17282064972619
best_error: 12.170759129176716
best_error: 12.170759116034866
best_error: 12.161835922371694
best_error: 12.161835910040985
best_error: 12.11495427554889
best_error: 12.114954266125713
best_error: 12.114954258122951
best_error: 12.114329664511386
best_error: 12.114329664511384
best_error: 12.114329663522463
best_error: 12.114329647077975
best_error: 12.09206675159151
best_error: 12.092066746640665
best_error: 12.092066666598818
best_error: 12.089340836430052
best_error: 12.089340832415232
best_error: 12.089309012049466
best_error: 12.089309007178338
best_error: 12.089308928242215
best_error: 12.08925740419175
best_error: 12.089257399334246
best_error: 12.089257320618504
best_error: 12.08925067657474
best_error: 12.089250671717199
best_error: 12.089250593001193
best_error: 12.08924825888309
best_error: 12.089248254025547
best_error: 12.08924817530944
best_error: 12.089248119967243
best_error: 12.089248036393567
best_error: 12.089248030303319
best_error: 12.089247946729635
best_error: 12.089247894353832
best_error: 12.08924789241646
best_error: 12.08924789155611
best_error: 12.08924788962556
best_error: 12.089247889357825
