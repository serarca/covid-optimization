ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 80
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 18.621713743756658
best_error: 18.621713625764343
best_error: 4.912738429936407
best_error: 4.9127384296324355
best_error: 4.912738427642735
best_error: 4.906045541214264
best_error: 4.906045538813072
best_error: 4.87752210562814
best_error: 4.877522102714515
best_error: 4.718968213289268
best_error: 4.7189682074753305
best_error: 4.411919939306221
best_error: 4.41191992679385
best_error: 3.6077244476715924
best_error: 3.607724393390718
best_error: 3.309636803778009
best_error: 3.3096367226405796
best_error: 2.987745016864242
best_error: 2.9877449039856963
best_error: 2.2170496021629926
best_error: 2.2170494784718704
best_error: 2.0625701555847424
best_error: 2.0625701450531118
best_error: 2.0578656186597515
best_error: 2.057865613968382
best_error: 2.0439295194142204
best_error: 2.043929511043824
best_error: 2.0439252139302644
best_error: 2.0439252049233234
best_error: 2.043784017322182
best_error: 2.0437839995392877
best_error: 2.033800059407731
best_error: 2.033800051666769
best_error: 2.033550842274708
best_error: 2.0335508296364653
best_error: 2.0210184350145126
best_error: 2.0210184331238676
best_error: 2.0193958933846745
best_error: 2.0193958782835697
best_error: 2.0032718143586647
best_error: 2.0032718127680744
best_error: 2.003271812718582
best_error: 2.001401484792099
best_error: 2.001401475165446
best_error: 1.778758689539346
best_error: 1.77875868716007
best_error: 1.7787586819785222
best_error: 1.7641219495069842
best_error: 1.7641219448107577
best_error: 1.7636546652936471
best_error: 1.7636546444496508
best_error: 1.7559101070473833
best_error: 1.7559100950343773
best_error: 1.7513687570207457
best_error: 1.751368754711134
best_error: 1.7513687507312505
best_error: 1.7447476932143249
best_error: 1.7447476697023419
best_error: 1.7300096001124303
best_error: 1.7300095877113992
best_error: 1.5769653473179535
best_error: 1.5769653424809567
best_error: 1.57696532729384
best_error: 1.5767749013852477
best_error: 1.5767748988859775
best_error: 1.5747509508789341
best_error: 1.574750950643583
best_error: 1.5714122225205989
best_error: 1.5714122223767348
best_error: 1.5626568695942507
best_error: 1.5626568676388108
best_error: 1.5560408375944608
best_error: 1.5560408326579667
best_error: 1.5403606033681374
best_error: 1.5403606032370283
best_error: 1.540360598683688
best_error: 1.5060213674593916
best_error: 1.5060213611864812
best_error: 1.4593069495364739
best_error: 1.4593069413825859
best_error: 1.4373926077454107
best_error: 1.4373925825087388
best_error: 1.4085226014136032
best_error: 1.4085225891417088
best_error: 1.3224262863716094
best_error: 1.3224262671081235
best_error: 1.300188094762584
best_error: 1.3001880746623269
best_error: 1.2041037145698048
best_error: 1.2041037071174805
best_error: 1.0936862035490784
best_error: 1.0936861870132093
best_error: 0.9300363542926868
best_error: 0.9300363381436663
best_error: 0.9300363230059914
best_error: 0.9180490981753183
best_error: 0.9180490930035627
best_error: 0.9000987845988526
best_error: 0.9000987794089365
best_error: 0.8920805191104136
best_error: 0.892080510513818
best_error: 0.8912293612532042
best_error: 0.8912293488549139
best_error: 0.8904871738176962
best_error: 0.8904871727572012
best_error: 0.8903366755964113
best_error: 0.8903366737587699
best_error: 0.89032970526786
best_error: 0.8903297022465511
best_error: 0.8901816750125168
best_error: 0.8901816731879264
best_error: 0.8901538607515473
best_error: 0.8901538575482257
best_error: 0.889903656131063
best_error: 0.8899036558335094
best_error: 0.8899036555670362
best_error: 0.8897461270075546
best_error: 0.8897461267581592
best_error: 0.889746126483127
best_error: 0.8897461264768632
best_error: 0.8896127353272708
best_error: 0.8896127351403561
best_error: 0.8896127351105004
best_error: 0.8896127348270758
best_error: 0.889612734792405
best_error: 0.8877308042694848
best_error: 0.8877308041796388
best_error: 0.8877308041480886
best_error: 0.8877200026947177
best_error: 0.887720002601752
best_error: 0.8877200025711136
best_error: 0.8877043610761072
best_error: 0.8877043609193036
best_error: 0.8876985342696584
best_error: 0.8876985340679417
best_error: 0.8876953611897735
best_error: 0.887695361089901
best_error: 0.8876911596824816
best_error: 0.8876911595497478
best_error: 0.8876790348981158
best_error: 0.8876790347876967
best_error: 0.8876417746737755
best_error: 0.8876417735584764
best_error: 0.8874598594762954
best_error: 0.887459857692049
best_error: 0.886804104302877
best_error: 0.8868041033800322
best_error: 0.886696208713887
best_error: 0.8866962073830558
best_error: 0.8862726068274857
best_error: 0.8862726053676984
best_error: 0.8856057649168528
best_error: 0.8856057634646511
best_error: 0.8854761000991443
best_error: 0.8854760984725027
best_error: 0.8850149156980958
best_error: 0.8850149150311608
best_error: 0.8843921387518842
best_error: 0.8843921381534794
best_error: 0.8828390175778823
best_error: 0.882839014797958
best_error: 0.8826289768452353
best_error: 0.8826289756819592
best_error: 0.8812768898158968
best_error: 0.8812768881032668
best_error: 0.8790958176481594
best_error: 0.879095815962915
best_error: 0.8760936895253443
best_error: 0.8760936878887122
best_error: 0.8747950802780463
best_error: 0.8747950798966386
best_error: 0.874795079645978
best_error: 0.8747101559040883
best_error: 0.8747101557284971
best_error: 0.8747101555500049
best_error: 0.8747101552507799
best_error: 0.874237579975264
best_error: 0.87423757754481
best_error: 0.874193221182789
best_error: 0.8741932211285713
best_error: 0.8741860465732962
best_error: 0.8741860457851146
best_error: 0.8741839724003398
best_error: 0.8741839723820652
best_error: 0.8741839723739058
best_error: 0.8741838990775281
best_error: 0.8741838990537616
best_error: 0.8741838473613018
best_error: 0.8741838473376222
best_error: 0.8741838460609802
best_error: 0.8741838460373011
best_error: 0.8741838452401531
best_error: 0.8741838452164731
best_error: 0.874183844807284
best_error: 0.8741838447836049
best_error: 0.8741838447103614
best_error: 0.8741838446866816
best_error: 0.874183844494204
best_error: 0.8741838444705246
best_error: 0.8741838398201215
best_error: 0.8741838397760567
best_error: 0.8741837990750925
best_error: 0.8741837990090262
best_error: 0.8741837203634176
best_error: 0.8741837203373509
best_error: 0.8741836623711382
best_error: 0.8741836623451691
best_error: 0.8741833997593534
best_error: 0.874183399733199
best_error: 0.874182381194255
best_error: 0.8741823811290191
best_error: 0.8741789163220259
best_error: 0.8741789157741606
best_error: 0.8741598201740786
best_error: 0.8741598188575612
best_error: 0.8740848082326907
best_error: 0.8740848081824119
best_error: 0.8740848081283186
best_error: 0.8740848078279148
best_error: 0.8740547501744367
best_error: 0.8740547501648472
best_error: 0.8740547501248497
best_error: 0.8740547498260741
best_error: 0.8740153397407675
best_error: 0.874015339740552
best_error: 0.874015339620204
best_error: 0.8740043633448742
best_error: 0.8740043632094872
best_error: 0.873992649269982
best_error: 0.8739926491710467
best_error: 0.8739005221067399
best_error: 0.8739005219313867
best_error: 0.8738921766322317
best_error: 0.8738921765473745
best_error: 0.8738829255115337
best_error: 0.8738829253571322
best_error: 0.8738241353479317
best_error: 0.8738241351318412
best_error: 0.8737928854214735
best_error: 0.873792884603736
best_error: 0.8737898440755777
best_error: 0.8737898439693182
best_error: 0.8737740560404419
best_error: 0.8737740557042076
best_error: 0.873762226632885
best_error: 0.8737622265419005
best_error: 0.873744378813925
best_error: 0.8737443787106111
best_error: 0.8737190706038662
best_error: 0.8737190705999051
best_error: 0.8737190705049599
best_error: 0.8737145536976214
best_error: 0.8737145536783295
best_error: 0.8737100015325501
best_error: 0.8737100005138185
best_error: 0.8737047061790437
best_error: 0.8737047060082567
best_error: 0.8737026591527272
best_error: 0.873702658948605
best_error: 0.8737000510504183
best_error: 0.8737000508077912
best_error: 0.8736970285862442
best_error: 0.8736970283190176
best_error: 0.8736956431581191
best_error: 0.8736956431543597
best_error: 0.8736956431401153
best_error: 0.8736948029204621
best_error: 0.873694802906496
best_error: 0.8736944007407158
best_error: 0.873694400647338
best_error: 0.8736939350662449
best_error: 0.8736939349834647
