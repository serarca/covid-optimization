ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.810807197383777
best_error: 23.810807193984502
best_error: 23.810807175618855
best_error: 23.810807135516495
best_error: 8.029135497518483
best_error: 8.029135219311705
best_error: 7.743937046681104
best_error: 7.743937031477742
best_error: 5.835709984271476
best_error: 5.835709772335099
best_error: 4.899094384550135
best_error: 4.899094382898971
best_error: 4.899094382854875
best_error: 4.898370937307122
best_error: 4.8983709356443565
best_error: 4.898370935612049
best_error: 4.895471764078467
best_error: 4.895471762368022
best_error: 4.883774153690235
best_error: 4.883774151764724
best_error: 4.8337826397865085
best_error: 4.833782636193126
best_error: 3.5870451111543105
best_error: 3.5870448655560216
best_error: 3.53461393431113
best_error: 3.534613817985079
best_error: 3.322522126822276
best_error: 3.3225221205857043
best_error: 3.321997093494062
best_error: 3.321997093276119
best_error: 3.3219970916520953
best_error: 3.320320733100922
best_error: 3.320320732908863
best_error: 3.320320732771681
best_error: 3.32032073124605
best_error: 3.3122251487995475
best_error: 3.312225135757509
best_error: 3.2496642233753437
best_error: 3.249664214950418
best_error: 3.129240335284913
best_error: 3.1292400683631683
best_error: 2.8389148791496086
best_error: 2.8389148503222827
best_error: 2.8354745966187322
best_error: 2.8354745448392276
best_error: 2.820224562205989
best_error: 2.8202245294645416
best_error: 2.76790027899383
best_error: 2.7679002077859867
best_error: 2.7072669184642426
best_error: 2.7072663488631834
best_error: 2.2771348960975537
best_error: 2.277134385124716
best_error: 2.277115537036337
best_error: 2.1661097547234185
best_error: 2.166109694809436
best_error: 1.9154726507120057
best_error: 1.915472258170746
best_error: 1.8217144328123585
best_error: 1.8217143572737675
best_error: 1.8127834812465193
best_error: 1.812783480697994
best_error: 1.8127834783112287
best_error: 1.801050256122054
best_error: 1.8010501886269008
best_error: 1.7938217237598841
best_error: 1.793821719549538
best_error: 1.7909214611136042
best_error: 1.7909214600058099
best_error: 1.7896738797578056
best_error: 1.789673867903187
best_error: 1.7877002811857017
best_error: 1.7877002784593312
best_error: 1.7877002744367794
best_error: 1.7875985520545443
best_error: 1.7875985316626262
best_error: 1.7871415562583093
best_error: 1.787141537048297
best_error: 1.7867455212635133
best_error: 1.7867455089529738
best_error: 1.7856717022631066
best_error: 1.7856716972322886
best_error: 1.7842485345065306
best_error: 1.7842485311013954
best_error: 1.77871540251577
best_error: 1.7787153518345613
best_error: 1.7718915060587395
best_error: 1.7718912653696755
best_error: 1.755928995192805
best_error: 1.7559288661597634
best_error: 1.7477058065084565
best_error: 1.7477056118082617
best_error: 1.7374413721764839
best_error: 1.737441286069914
best_error: 1.7355980070366266
best_error: 1.7355979030717807
best_error: 1.7355871844842454
best_error: 1.7355870763211527
best_error: 1.7355668227300922
best_error: 1.7355667130607961
best_error: 1.73550845774828
best_error: 1.7355083452558027
best_error: 1.6918174370988766
best_error: 1.6918171967868165
best_error: 1.6918069969820224
best_error: 1.6897946689565766
best_error: 1.6897945855369392
best_error: 1.6897935276441813
best_error: 1.689793444224439
best_error: 1.6867445759892163
best_error: 1.686744573692447
best_error: 1.6867445725867651
best_error: 1.6867445654546938
best_error: 1.6867445631579243
best_error: 1.686744562052243
best_error: 1.6867129606548914
best_error: 1.6867129584229112
best_error: 1.6867129572422634
best_error: 1.6758561114238057
best_error: 1.675856109718326
best_error: 1.6647185080873985
best_error: 1.6647184918391205
best_error: 1.617499973105871
best_error: 1.6174998902760394
best_error: 1.6174876684627635
best_error: 1.6174841970555005
best_error: 1.617484114236773
best_error: 1.6174798697876565
best_error: 1.6174797715934865
best_error: 1.6168358945752548
best_error: 1.616835848721192
best_error: 1.6168340259896143
best_error: 1.6168340239448258
best_error: 1.6168302601643232
best_error: 1.6168302196621789
best_error: 1.6168287278185718
best_error: 1.6139476668687391
best_error: 1.6139476231102514
best_error: 1.6139458901733275
best_error: 1.6131767369844119
best_error: 1.6131767353701199
best_error: 1.61317673450575
best_error: 1.6033492285914226
best_error: 1.6033492234683642
best_error: 1.5848866347021053
best_error: 1.5848865973974091
best_error: 1.5831088456057472
best_error: 1.5831088402231601
best_error: 1.5829712868145505
best_error: 1.5829712863539798
best_error: 1.5829712855052513
best_error: 1.5828412886067673
best_error: 1.5828412873882036
best_error: 1.5828294194087695
best_error: 1.5828294182352685
best_error: 1.5828256471923225
best_error: 1.5828256466677153
best_error: 1.5828256460728491
best_error: 1.5828237511302463
best_error: 1.5828237497351834
best_error: 1.582820463357261
best_error: 1.5828204618601098
best_error: 1.582818622567773
best_error: 1.5828186202402659
best_error: 1.5828181845974805
best_error: 1.582818181123096
best_error: 1.582816174576702
best_error: 1.5828161716186684
best_error: 1.582807561686576
best_error: 1.5828075605184737
best_error: 1.5827979255789901
best_error: 1.5827979243930017
best_error: 1.5827077198098072
best_error: 1.5827077185456195
best_error: 1.5826168499115492
best_error: 1.582616848381371
best_error: 1.582480535604564
best_error: 1.5824805339706804
best_error: 1.5820250856901825
best_error: 1.5820250836470426
best_error: 1.5820250836252463
best_error: 1.5798707173789757
best_error: 1.57987066651342
best_error: 1.5798704650519506
best_error: 1.5731170324241737
best_error: 1.5731170138530797
best_error: 1.5721657476297137
best_error: 1.5721657344178999
best_error: 1.5719833094047062
best_error: 1.5719833056693773
best_error: 1.5719572558312054
best_error: 1.5719572517698006
best_error: 1.5719219319441384
best_error: 1.5719219306560481
best_error: 1.5718824884003755
best_error: 1.5718824876722155
best_error: 1.5718824872241826
best_error: 1.5718790243145222
best_error: 1.5718790231170494
best_error: 1.5718776105678953
best_error: 1.571877609372992
best_error: 1.5718752315091415
best_error: 1.5718752302353207
best_error: 1.5718718593566883
best_error: 1.5718718581260538
best_error: 1.5718698538293407
best_error: 1.571869851091273
best_error: 1.5718688165530312
best_error: 1.5718688146743063
best_error: 1.5718684092523494
best_error: 1.5718684078013785
best_error: 1.5718684017437599
best_error: 1.5718684007634167
best_error: 1.5718684006260966
best_error: 1.571868342697341
best_error: 1.5718683413987542
best_error: 1.5718682783765556
best_error: 1.5718682770409433
best_error: 1.5718681600778073
best_error: 1.5718681584088652
best_error: 1.5718681321308063
best_error: 1.5718681308125813
best_error: 1.5718678171936376
best_error: 1.5718678157225492
best_error: 1.5718671999856357
best_error: 1.5718671990369892
best_error: 1.5718671988679238
best_error: 1.5718652151727759
best_error: 1.5718652149435222
best_error: 1.5718652140291867
best_error: 1.5718622394495674
best_error: 1.5718622391773664
best_error: 1.571862238306168
best_error: 1.5718583947102338
best_error: 1.571858394198817
best_error: 1.5718583935795167
best_error: 1.5718549192479885
best_error: 1.5718549185370403
best_error: 1.5718549181269952
best_error: 1.5718282267721153
best_error: 1.5718282252565843
best_error: 1.5717992090472714
best_error: 1.5717992033916146
best_error: 1.5717489357048589
best_error: 1.571748927729889
best_error: 1.571498920087451
best_error: 1.5714988939572208
best_error: 1.5712954025009793
best_error: 1.571295370496356
best_error: 1.5709264489347547
best_error: 1.570926391800248
best_error: 1.5708682810991133
best_error: 1.57086823070673
best_error: 1.5708440175970446
best_error: 1.5708439695070517
best_error: 1.5708075197480442
best_error: 1.5708074787860522
best_error: 1.5707926876310674
best_error: 1.5707926487589594
best_error: 1.5707504456999424
best_error: 1.5707504049548424
best_error: 1.5706578178869217
best_error: 1.5706577742646195
best_error: 1.5706229749289091
best_error: 1.5706229266851617
