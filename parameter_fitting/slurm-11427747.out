ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.350125689177855
best_error: 25.35012534217788
best_error: 4.964131096339097
best_error: 4.964131095831065
best_error: 4.9640509473253065
best_error: 4.964050947318345
best_error: 4.964050947267244
best_error: 4.963729404946598
best_error: 4.9637294049395795
best_error: 4.96372940488839
best_error: 4.962427873297771
best_error: 4.962427873290528
best_error: 4.962427873238991
best_error: 4.956961112385407
best_error: 4.956961112377134
best_error: 4.956961112324168
best_error: 4.929881243468116
best_error: 4.929881243451658
best_error: 4.929881243393023
best_error: 4.87313078940245
best_error: 4.873130789323511
best_error: 4.873130789285114
best_error: 4.41802934836204
best_error: 4.418029328211544
best_error: 3.6093221647970326
best_error: 3.6093220856991195
best_error: 3.380175403647486
best_error: 3.380175310868704
best_error: 3.222922669844684
best_error: 3.2229225665997343
best_error: 2.932018381665096
best_error: 2.932018288039612
best_error: 2.804501476093871
best_error: 2.804501305984258
best_error: 2.5493870403231127
best_error: 2.5493868921944682
best_error: 2.5463792453415817
best_error: 2.5463792438812933
best_error: 2.546379241522426
best_error: 2.5463792313853806
best_error: 2.5261786461867346
best_error: 2.5261786109006463
best_error: 2.524716161399121
best_error: 2.524716145586064
best_error: 2.5233656019605446
best_error: 2.5233655863809297
best_error: 2.521869449405894
best_error: 2.5218694450116472
best_error: 2.5218694386029346
best_error: 2.5178420261235273
best_error: 2.517842012013762
best_error: 2.5047606257861323
best_error: 2.504760566858617
best_error: 2.408649584424309
best_error: 2.4086494925907966
best_error: 2.385814557020519
best_error: 2.385814477404329
best_error: 2.3272656140660413
best_error: 2.327265572192736
best_error: 2.2937016861273465
best_error: 2.2937014363802763
best_error: 2.2532041635640225
best_error: 2.2532039483837245
best_error: 1.9123803584150676
best_error: 1.9123801193538386
best_error: 1.8568808153571033
best_error: 1.8568808087942432
best_error: 1.8506322361157712
best_error: 1.8506322239005362
best_error: 1.8359455802887994
best_error: 1.8359452229904565
best_error: 1.7628633231354751
best_error: 1.7628631058308213
best_error: 1.718481310805091
best_error: 1.7184812111162906
best_error: 1.6879105032513015
best_error: 1.6879104783150591
best_error: 1.68125089660963
best_error: 1.6812508963305743
best_error: 1.681250896050495
best_error: 1.6812508956347554
best_error: 1.6804421101887852
best_error: 1.680442050599778
best_error: 1.6794046125896946
best_error: 1.6794045991770041
best_error: 1.6790156632559792
best_error: 1.679015663099686
best_error: 1.6790156625626202
best_error: 1.678798576476682
best_error: 1.6787985729050618
best_error: 1.6784765857497603
best_error: 1.6784765844584804
best_error: 1.678476582281844
best_error: 1.6765387628622614
best_error: 1.6765387626272992
best_error: 1.6765387454328866
best_error: 1.67557613370664
best_error: 1.6755761115904368
best_error: 1.6752913303390125
best_error: 1.6752913184968177
best_error: 1.6752118071878384
best_error: 1.6752118025167146
best_error: 1.6751582313821567
best_error: 1.6751582286124247
best_error: 1.675130924343445
best_error: 1.675130921700681
best_error: 1.6750234908927504
best_error: 1.6750234884495094
best_error: 1.6746337622539402
best_error: 1.6746337610718325
best_error: 1.672288945339051
best_error: 1.6722888977115034
best_error: 1.6702977336936566
best_error: 1.6702977062436508
best_error: 1.6694676850430623
best_error: 1.6694676849364805
best_error: 1.6694676843947271
best_error: 1.6694111880790654
best_error: 1.6694111879752993
best_error: 1.6694111874361888
best_error: 1.6690389844997882
best_error: 1.6690389814759157
best_error: 1.6662774077951235
best_error: 1.666277388911848
best_error: 1.6649835445063461
best_error: 1.6649835026674216
best_error: 1.658517906994441
best_error: 1.6585178547434327
best_error: 1.6580120528728426
best_error: 1.658012011854083
best_error: 1.6566607486580534
best_error: 1.6566607125047
best_error: 1.6534539652716398
best_error: 1.6534539647143693
best_error: 1.6534539644624602
best_error: 1.6526207637218864
best_error: 1.6526207575538117
best_error: 1.6525541755006117
best_error: 1.6525541726413326
best_error: 1.6525445082801988
best_error: 1.652544507863073
best_error: 1.6525445075415686
best_error: 1.6525418158270029
best_error: 1.6525418150498528
best_error: 1.6525234823100194
best_error: 1.6525234813214618
best_error: 1.652458008016567
best_error: 1.6524580073188968
best_error: 1.652223919908397
best_error: 1.6522239198256319
best_error: 1.6522239192652006
best_error: 1.652223919140028
best_error: 1.6506955586228345
best_error: 1.6506955556327654
best_error: 1.6506955523449787
best_error: 1.647940858038273
best_error: 1.6479408545565644
best_error: 1.647940846969958
best_error: 1.6198525806490482
best_error: 1.6198525699248736
best_error: 1.6198525423347376
best_error: 1.6146820841904381
best_error: 1.614682078150455
best_error: 1.6096635490480369
best_error: 1.6096635448729486
best_error: 1.6094312121532952
best_error: 1.6094312095970558
best_error: 1.6093712676415561
best_error: 1.6093712655482977
best_error: 1.6093150852500455
best_error: 1.6093150810348624
best_error: 1.6093090126995682
best_error: 1.6093090105876002
best_error: 1.609299524554086
best_error: 1.6092995245440482
best_error: 1.6092995242800592
best_error: 1.6092995237801728
best_error: 1.609292143709021
best_error: 1.6092921429909877
best_error: 1.60929214294361
best_error: 1.609222893320425
best_error: 1.609222890833982
best_error: 1.6090229343148799
best_error: 1.6090229249871058
best_error: 1.6088009468413214
best_error: 1.6088009358985593
best_error: 1.6055567108441196
best_error: 1.605556688744946
best_error: 1.6052079713678713
best_error: 1.6052079572121931
best_error: 1.604492575959326
best_error: 1.604492568715099
best_error: 1.6039057413616282
best_error: 1.6039057159294023
best_error: 1.6037615500221767
best_error: 1.6037615487543804
best_error: 1.6037554369871683
best_error: 1.6037554367219244
best_error: 1.6037554366273188
best_error: 1.6037510288541832
best_error: 1.6037510286392094
best_error: 1.6037510286171694
best_error: 1.6037510285431236
best_error: 1.6037464336437994
best_error: 1.6037464333325684
best_error: 1.6037331596403204
best_error: 1.6037331575343206
best_error: 1.6036840323363335
best_error: 1.6036840173830158
best_error: 1.6036407954188203
best_error: 1.6036407772930963
best_error: 1.6035025176146716
best_error: 1.6035024900169328
best_error: 1.6029559715078172
best_error: 1.6029559243957547
best_error: 1.6028730047605173
best_error: 1.602872943818633
best_error: 1.6021358790361555
best_error: 1.6021358255361
best_error: 1.6012598018698148
best_error: 1.6012597881753508
best_error: 1.6011691735417493
best_error: 1.6011691699605755
best_error: 1.6011189895448832
best_error: 1.6011189840716136
best_error: 1.6010508485926764
best_error: 1.6010508425858845
best_error: 1.601024392234465
best_error: 1.6010243861342834
best_error: 1.6009308980585863
best_error: 1.6009308939110574
best_error: 1.6009086109755168
best_error: 1.6009086091373161
best_error: 1.600906251537169
best_error: 1.6009062507467526
best_error: 1.6009049713299068
best_error: 1.600904970884129
best_error: 1.6009030370300934
best_error: 1.6009030366841352
best_error: 1.6008990117995208
best_error: 1.6008990117871356
best_error: 1.6008990116028563
best_error: 1.6008791656938481
best_error: 1.6008791654055856
best_error: 1.600849655336886
best_error: 1.6008496550400264
best_error: 1.600556230838956
best_error: 1.6005562268626568
best_error: 1.5999128616493534
best_error: 1.5999128548149466
best_error: 1.5972183078811457
best_error: 1.5972182972523377
best_error: 1.5943942710915195
best_error: 1.5943942673215343
best_error: 1.594394266795557
best_error: 1.5943713053155681
best_error: 1.594371301802098
best_error: 1.593462819643682
best_error: 1.5934628168025284
best_error: 1.593308945806791
best_error: 1.5933089427627423
best_error: 1.5918951714604155
best_error: 1.591895169349555
