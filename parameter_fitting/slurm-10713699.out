ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.710463882987128
best_error: 13.71046387558812
best_error: 13.710463871109251
best_error: 13.703438381240003
best_error: 13.70343837337161
best_error: 13.70343836876645
best_error: 13.263177579134556
best_error: 13.263177531301288
best_error: 13.263177524471553
best_error: 10.344589386777713
best_error: 10.344588997581026
best_error: 8.241075998327894
best_error: 8.241075372794086
best_error: 6.322768334757523
best_error: 6.322767697782563
best_error: 5.74879803797468
best_error: 5.748797615096949
best_error: 5.44898611508016
best_error: 5.448985757360918
best_error: 5.437392292258085
best_error: 5.43739192739024
best_error: 5.435484021237731
best_error: 5.435483656114179
best_error: 5.432285503236098
best_error: 5.4322851389269955
best_error: 5.431225854766988
best_error: 5.431225491548635
best_error: 5.430819260097019
best_error: 5.4308188968241815
best_error: 5.430694484041418
best_error: 5.430694120751854
best_error: 5.430565093622804
best_error: 5.4305647303162585
best_error: 5.430474189673326
best_error: 5.43047382635485
best_error: 5.430471927197811
best_error: 5.430471571558259
best_error: 5.364183676882666
best_error: 5.364183280471384
best_error: 5.250459365555197
best_error: 5.250458924340682
best_error: 5.214431767977662
best_error: 5.214431298476313
best_error: 5.213095056970086
best_error: 5.213094584790022
best_error: 5.178734134894993
best_error: 5.178733587368463
best_error: 5.150949576895886
best_error: 5.15094899566498
best_error: 5.130136522149941
best_error: 5.130135921991403
best_error: 5.129929649104428
best_error: 5.129929399363535
best_error: 5.129878551044429
best_error: 5.1298779508223165
best_error: 5.129733099633498
best_error: 5.129732499375587
best_error: 5.1297260841086345
best_error: 5.129725834395212
best_error: 5.12579280816886
best_error: 5.125792214771883
best_error: 5.110868361020329
best_error: 5.110867818373776
best_error: 5.110476195576538
best_error: 5.110475909602007
best_error: 5.110373118688599
best_error: 5.110372596983387
best_error: 5.110305403002101
best_error: 5.1103048720774025
best_error: 5.1102871522505104
best_error: 5.110286625553633
best_error: 5.094817910186817
best_error: 5.09481762667801
best_error: 5.093682748389415
best_error: 5.093682448209677
best_error: 5.093378857162458
best_error: 5.093378549230597
best_error: 5.093288099926161
best_error: 5.093287789605984
best_error: 5.093158959049465
best_error: 5.093158648792368
best_error: 5.092742585867692
best_error: 5.092742273057663
best_error: 5.073624243135633
best_error: 5.073623957532119
best_error: 5.0000344614380055
best_error: 5.0000338859114075
best_error: 4.9925203274971315
best_error: 4.99252003518474
best_error: 4.98686552010426
best_error: 4.986865228140745
best_error: 4.972430284192998
best_error: 4.972429690653491
best_error: 4.965439316230392
best_error: 4.965439046916758
best_error: 4.960619797667768
best_error: 4.960619518773944
best_error: 4.946290460297514
best_error: 4.946290161004406
best_error: 4.946072895936558
best_error: 4.946072596735271
best_error: 4.946030777840665
best_error: 4.9460304786570894
best_error: 4.946021557948526
best_error: 4.946021258768837
best_error: 4.946019338647954
best_error: 4.946018759633377
best_error: 4.946008588384991
best_error: 4.946008009368603
best_error: 4.946007810638537
best_error: 4.939816216029678
best_error: 4.939815627965734
best_error: 4.932417481031669
best_error: 4.932417206138965
best_error: 4.928417806659688
best_error: 4.928417531541285
best_error: 4.927426542049737
best_error: 4.927426264350119
best_error: 4.922640120359411
best_error: 4.922639896504678
best_error: 4.8992238756697635
best_error: 4.899223592640488
best_error: 4.88557059664966
best_error: 4.88557029800661
best_error: 4.885352845942341
best_error: 4.885352231132064
best_error: 4.885169323179045
best_error: 4.8851690245303105
best_error: 4.885096877141429
best_error: 4.885096578491719
best_error: 4.885094966519442
best_error: 4.885094351649423
best_error: 4.869062167081774
best_error: 4.86906185785451
best_error: 4.867150509611612
best_error: 4.867150201395681
best_error: 4.866953410792757
best_error: 4.866953102058227
best_error: 4.866673594902908
best_error: 4.86667328665506
best_error: 4.866516098758817
best_error: 4.866515793053448
best_error: 4.865944591295024
best_error: 4.865944289497467
best_error: 4.865557345449363
best_error: 4.865557042651233
best_error: 4.865410022066793
best_error: 4.865409722459917
best_error: 4.865406693686948
best_error: 4.865406391272515
best_error: 4.865374962797757
best_error: 4.8653746632194705
best_error: 4.865343077058177
best_error: 4.865342774803073
best_error: 4.865327891419103
best_error: 4.865327589298222
