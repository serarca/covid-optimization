ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.72810032477929
best_error: 96.72810024187355
best_error: 96.72810016922368
best_error: 17.53207926989925
best_error: 17.532079269892833
best_error: 17.532079259698392
best_error: 17.489259441974696
best_error: 17.489259430909915
best_error: 17.27666942075957
best_error: 17.27666940344266
best_error: 15.307932365322717
best_error: 15.30793234447505
best_error: 15.307932343494569
best_error: 15.307930719316566
best_error: 12.907660573570528
best_error: 12.907660291980557
best_error: 11.753788362595625
best_error: 11.75378822934687
best_error: 11.619329860671261
best_error: 11.619329852512932
best_error: 11.619329590957854
best_error: 11.341849176029978
best_error: 11.341849172555104
best_error: 11.341849164338733
best_error: 10.28615514673526
best_error: 10.286155126174819
best_error: 9.791751278169656
best_error: 9.791751266628918
best_error: 9.37003928501223
best_error: 9.370039259171342
best_error: 8.94104492238713
best_error: 8.941044877137202
best_error: 8.742933369413896
best_error: 8.742933361456117
best_error: 8.693296011982763
best_error: 8.693296000393142
best_error: 8.628246492345959
best_error: 8.628246488332897
best_error: 8.594901780309812
best_error: 8.594901779918176
best_error: 8.594901774963544
best_error: 8.553651696503845
best_error: 8.553651691572073
best_error: 8.553651686802628
best_error: 8.527881849024732
best_error: 8.527881844269995
best_error: 8.442792747938894
best_error: 8.442792743007963
best_error: 8.346124404476653
best_error: 8.34612438020643
best_error: 8.252871114559628
best_error: 8.252870968340511
best_error: 8.211547358817043
best_error: 8.211547341786453
best_error: 8.211512542886094
best_error: 8.211512416070903
best_error: 8.211049776839934
best_error: 8.211049759407793
best_error: 8.210811545929316
best_error: 8.210811528530584
best_error: 8.210711949215131
best_error: 8.210711824379988
best_error: 8.210211260980477
best_error: 8.21021113869933
best_error: 8.200432527796503
best_error: 8.200432510021933
best_error: 8.155958988919222
best_error: 8.155958963216984
best_error: 8.117780697571522
best_error: 8.11778067521977
best_error: 8.092200482345767
best_error: 8.09220045911329
best_error: 8.00343040343124
best_error: 8.00343038280426
best_error: 7.885003236874939
best_error: 7.885003209332622
best_error: 7.825518808166331
best_error: 7.825518777941976
best_error: 7.742117648525419
best_error: 7.742117631765552
best_error: 7.7421176271393275
best_error: 7.5426367970650725
best_error: 7.5426367809351635
best_error: 7.542636778764243
best_error: 7.125451087718721
best_error: 7.125451070396383
best_error: 6.743132719229421
best_error: 6.74313270565746
best_error: 6.7431327037925834
best_error: 6.645249743138173
best_error: 6.645249735806441
best_error: 6.645249733321738
best_error: 6.613094627114993
best_error: 6.613094626018844
best_error: 6.613094516178996
best_error: 6.5003457059321095
best_error: 6.500345702067546
best_error: 6.500345692881485
best_error: 6.4694180489732105
best_error: 6.469418044587912
best_error: 6.469418040741393
best_error: 6.45963477860498
best_error: 6.459634773989207
best_error: 6.45963476911202
best_error: 6.454304278635896
best_error: 6.4543042725282005
best_error: 6.454304267654223
best_error: 6.435291186754294
best_error: 6.435291179898698
best_error: 6.435291175182552
best_error: 6.4331405038636245
best_error: 6.433140469405243
best_error: 6.424781773688281
best_error: 6.424781767252677
best_error: 6.424781761704342
best_error: 6.4228626390376355
best_error: 6.422862605002026
best_error: 6.4222816927933515
best_error: 6.422281685924178
best_error: 6.422281680636184
best_error: 6.42095052413858
best_error: 6.420950517294093
best_error: 6.420950511996117
best_error: 6.419165465802089
best_error: 6.419165430458937
best_error: 6.294236748001076
best_error: 6.294236543193549
best_error: 6.251903941032298
best_error: 6.251903929807613
best_error: 6.251903925044928
best_error: 6.195618327605157
best_error: 6.195618297828356
best_error: 6.138779348905283
best_error: 6.138779329696995
best_error: 6.138779323692939
best_error: 6.117067279242878
best_error: 6.117067278997056
best_error: 6.117067278865669
best_error: 6.117067263645578
best_error: 6.093554947270511
best_error: 6.093554940529286
best_error: 6.076894817965904
best_error: 6.07689479352733
best_error: 6.062203918635664
best_error: 6.062203860817767
best_error: 6.0509240678878085
best_error: 6.0509240474234005
best_error: 6.046154029491231
best_error: 6.046154001763462
