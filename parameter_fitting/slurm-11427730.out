ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.255967672298507
best_error: 24.255967070395617
best_error: 5.005484567535869
best_error: 5.005484567154708
best_error: 5.005459093373029
best_error: 5.00545909336948
best_error: 5.005459093356823
best_error: 5.005357062384898
best_error: 5.005357062381335
best_error: 5.005357062368673
best_error: 5.004946774964493
best_error: 5.0049467749608665
best_error: 5.0049467749481895
best_error: 5.003270080301259
best_error: 5.003270080297363
best_error: 5.003270080284629
best_error: 4.995926732065524
best_error: 4.995926732060148
best_error: 4.99592673204738
best_error: 4.947401870821239
best_error: 4.947401870769116
best_error: 4.912039171297198
best_error: 4.91203917107332
best_error: 4.842298281142302
best_error: 4.842298279607457
best_error: 4.8249670556279805
best_error: 4.824967053501943
best_error: 3.534062374428944
best_error: 3.5340622702397906
best_error: 3.495840992029831
best_error: 3.4958408873997566
best_error: 3.369755239518852
best_error: 3.369755118198733
best_error: 3.2649597091692844
best_error: 3.264959649664023
best_error: 3.2649596181057485
best_error: 3.176354735761224
best_error: 3.1763546104930946
best_error: 3.1488868987147005
best_error: 3.148886748840466
best_error: 3.1066639627979526
best_error: 3.1066639164252234
best_error: 3.0555665405138708
best_error: 3.0555664691512128
best_error: 3.041670318512753
best_error: 3.0416703176017847
best_error: 3.0416703012810262
best_error: 3.0370383526912326
best_error: 3.0370383397542877
best_error: 3.032966258057275
best_error: 3.0329662447264614
best_error: 3.0211570013641347
best_error: 3.021156989072501
best_error: 3.0180032115270166
best_error: 3.0180032003750825
best_error: 3.006114284688168
best_error: 3.006114279436557
best_error: 3.0061142746063827
best_error: 2.9697898485596084
best_error: 2.9697898060343544
best_error: 2.9515421965336897
best_error: 2.9515420060288604
best_error: 2.9067704261323026
best_error: 2.906770361883577
best_error: 2.7357990987828855
best_error: 2.735799044421035
best_error: 2.690501764322992
best_error: 2.6905017632131036
best_error: 2.690501763049029
best_error: 2.690501759476695
best_error: 2.645857881532624
best_error: 2.645857696451106
best_error: 2.606589642227367
best_error: 2.6065895149021805
best_error: 2.575666084817767
best_error: 2.5756660390822548
best_error: 2.535032342829516
best_error: 2.5350322894542625
best_error: 2.3311563967491526
best_error: 2.3311563686057917
best_error: 2.2816278852102494
best_error: 2.2816278840536945
best_error: 2.281627879256957
best_error: 2.2140597427776734
best_error: 2.214059665476733
best_error: 2.094238904862242
best_error: 2.094238899447687
best_error: 1.9937208425940764
best_error: 1.9937208389758305
best_error: 1.993720838554893
best_error: 1.9937208380350793
best_error: 1.9925383834188326
best_error: 1.9925382663414948
best_error: 1.9815553168050235
best_error: 1.9815553062193445
best_error: 1.97873219373609
best_error: 1.978732151324418
best_error: 1.978420147217147
best_error: 1.9784200432705932
best_error: 1.967787396159223
best_error: 1.9677873899447946
best_error: 1.9667547714718072
best_error: 1.966754757064161
best_error: 1.9661045766295222
best_error: 1.966104576554775
best_error: 1.9661045748974928
best_error: 1.9661045734381921
best_error: 1.9659728147455224
best_error: 1.9659728145345108
best_error: 1.9659728139775599
best_error: 1.965972811753961
best_error: 1.9653227014207963
best_error: 1.9653227012154908
best_error: 1.9653227006565581
best_error: 1.9653226984481011
best_error: 1.9481502134532667
best_error: 1.9481501492685656
best_error: 1.9301635437166988
best_error: 1.9301635185768236
best_error: 1.9255440647815454
best_error: 1.925543994540334
best_error: 1.9243431380375524
best_error: 1.924343129342569
best_error: 1.923565878920099
best_error: 1.9235658782193041
best_error: 1.9235579642505545
best_error: 1.9235579636465252
best_error: 1.9235539498561525
best_error: 1.9235539498136964
best_error: 1.9235539492700033
best_error: 1.923548614467486
best_error: 1.923548614085113
best_error: 1.9235486138680462
best_error: 1.9235349233390857
best_error: 1.9235349225723013
best_error: 1.9234976786613753
best_error: 1.9234976729572753
best_error: 1.9234444909401751
best_error: 1.9234444854014534
best_error: 1.92327892305001
best_error: 1.9232789178278935
best_error: 1.9225069015734748
best_error: 1.922506898980836
best_error: 1.9185002914651343
best_error: 1.9185002727518308
best_error: 1.9119306881700289
best_error: 1.9119306505852882
best_error: 1.910104984712623
best_error: 1.9101049842299371
best_error: 1.9101049828433774
best_error: 1.9101049827902483
best_error: 1.8965148988728262
best_error: 1.8965148968954935
best_error: 1.8941566690805394
best_error: 1.8941566652751793
best_error: 1.8903460999925885
best_error: 1.8903460806258012
best_error: 1.8899909155154941
best_error: 1.8899908772312453
best_error: 1.8897497431931745
best_error: 1.8897497335660056
best_error: 1.8891686283633513
best_error: 1.88916862213003
best_error: 1.888917376385961
best_error: 1.8889173750936894
best_error: 1.8888729433583016
best_error: 1.888872942800488
best_error: 1.8888729427024007
best_error: 1.8888456783637215
best_error: 1.8888456782676442
best_error: 1.888845677745897
best_error: 1.8888302013686131
best_error: 1.8888302013201925
best_error: 1.8888302007331077
best_error: 1.8887551671762828
best_error: 1.8887551596580712
best_error: 1.8885977838892645
best_error: 1.888597769290566
best_error: 1.8880979968607365
best_error: 1.8880979680646472
best_error: 1.8873295139528592
best_error: 1.8873294771123001
best_error: 1.885846987266919
best_error: 1.8858469464256356
best_error: 1.8854838812904484
best_error: 1.8854838722951515
best_error: 1.8853786182645853
best_error: 1.8853786153008292
best_error: 1.8850643535849074
best_error: 1.8850643504813893
best_error: 1.8848396404569163
best_error: 1.8848396403589232
best_error: 1.8848396397700007
best_error: 1.8848396395110125
best_error: 1.884752196691637
best_error: 1.884752196583995
best_error: 1.884752196163295
best_error: 1.8847521957878903
best_error: 1.8844742756159374
best_error: 1.8844742696274377
best_error: 1.884057106480134
best_error: 1.8840571047217862
best_error: 1.884057102369616
best_error: 1.8832815886179535
best_error: 1.8832815819359854
best_error: 1.882309191583202
best_error: 1.8823091858302388
best_error: 1.8821680404696526
best_error: 1.8821680385986332
best_error: 1.8819250543314567
best_error: 1.8819250522887987
best_error: 1.8818972199806934
best_error: 1.881897217643187
best_error: 1.8818949358248016
best_error: 1.881894935753211
best_error: 1.8818949356917434
best_error: 1.8818939577968694
best_error: 1.8818939577251956
best_error: 1.8818939576836455
best_error: 1.88189258961965
best_error: 1.881892588566391
best_error: 1.8818864080101134
best_error: 1.8818864072143753
best_error: 1.8818589635190976
best_error: 1.8818589632447293
best_error: 1.8816753557651722
best_error: 1.8816753418740018
best_error: 1.8813348682309834
best_error: 1.8813348441216018
best_error: 1.8794735897324313
best_error: 1.8794735171871715
best_error: 1.8776073235514568
best_error: 1.8776072579809295
best_error: 1.8763792575933538
best_error: 1.8763792473285053
best_error: 1.8761764191019532
best_error: 1.8761764174438114
best_error: 1.876145921685392
best_error: 1.8761459207855864
best_error: 1.8761379127247961
best_error: 1.8761379113860321
best_error: 1.8761361464980868
best_error: 1.8761361460490362
best_error: 1.876135543204777
best_error: 1.87613554305235
best_error: 1.876134442352965
best_error: 1.8761344418916377
best_error: 1.8761337857724643
best_error: 1.876133785144958
best_error: 1.8761334875796811
best_error: 1.87613348686154
best_error: 1.876132938911294
best_error: 1.8761329382381577
best_error: 1.8761326191750174
best_error: 1.8761326189223135
best_error: 1.8761319666391127
best_error: 1.8761319663654625
best_error: 1.8761254491610095
best_error: 1.876125448182018
best_error: 1.8760908291737466
best_error: 1.8760908230276843
best_error: 1.8760612311505591
best_error: 1.876061221236418
best_error: 1.876022120863172
best_error: 1.8760221029442175
best_error: 1.8759550251905108
best_error: 1.8759550021340488
best_error: 1.8758363519889485
best_error: 1.8758363291880258
best_error: 1.8757727427482587
best_error: 1.8757727237981376
best_error: 1.87569504668422
best_error: 1.8756950443368934
