ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.392681766674364
best_error: 10.392681763049623
best_error: 4.878924849271553
best_error: 4.8789243373127125
best_error: 3.8920015127203285
best_error: 3.8920013710883117
best_error: 3.8162632445320988
best_error: 3.816263226285154
best_error: 3.8032787426943684
best_error: 3.8032787424783288
best_error: 3.8032787253124063
best_error: 3.759891066883956
best_error: 3.75989094909294
best_error: 3.54552899248729
best_error: 3.5455289047212815
best_error: 3.352197147283801
best_error: 3.3521969338677122
best_error: 3.3371045140162168
best_error: 3.337104350501799
best_error: 3.289936524881994
best_error: 3.289936352057346
best_error: 3.183952217137228
best_error: 3.1839520339713765
best_error: 3.183190206538092
best_error: 3.1831902061740136
best_error: 3.183190198814414
best_error: 3.138798399797255
best_error: 3.138798399371745
best_error: 3.1387983921250457
best_error: 3.114876871580995
best_error: 3.1148768575765446
best_error: 3.1148767858667545
best_error: 3.0437995273572085
best_error: 3.0437994084432765
best_error: 2.9987523583293862
best_error: 2.998752347588827
best_error: 2.895240271190238
best_error: 2.895240258215817
best_error: 2.6391196743590593
best_error: 2.639119644318887
best_error: 2.6371844562235314
best_error: 2.6371844306450507
best_error: 2.626678635048376
best_error: 2.6266786123500507
best_error: 2.60178749980836
best_error: 2.601787365955938
best_error: 2.5680331450431324
best_error: 2.568033144032195
best_error: 2.560590924385931
best_error: 2.560590852026535
best_error: 2.557819589405573
best_error: 2.5578195244363955
best_error: 2.519787139865169
best_error: 2.5197869798625803
best_error: 2.458276982050621
best_error: 2.4582769804029865
best_error: 2.4582768538916495
best_error: 2.3896164362796517
best_error: 2.389616426322337
best_error: 2.389616316641054
best_error: 2.3823651124383827
best_error: 2.3823651021837717
best_error: 2.37003309083336
best_error: 2.3700330863369268
best_error: 2.366633731488215
best_error: 2.3666337271505142
best_error: 2.3662967146875213
best_error: 2.366296677649444
best_error: 2.3662903828210773
best_error: 2.3662903789191487
best_error: 2.3662531362718093
best_error: 2.366253099318185
best_error: 2.366248101444577
best_error: 2.366248064488683
best_error: 2.366247278323003
best_error: 2.366247241366738
best_error: 2.3662470569168605
best_error: 2.3662470530218824
best_error: 2.366052951423784
best_error: 2.3660529131801034
best_error: 2.365785045742103
best_error: 2.365785004347931
best_error: 2.365543002619507
best_error: 2.36554296118615
best_error: 2.364559109678774
best_error: 2.3645590680234028
best_error: 2.3603867096741675
best_error: 2.360386666514555
best_error: 2.3567110875121604
best_error: 2.3567110432895704
best_error: 2.356246358661418
best_error: 2.356246317007943
best_error: 2.355993477898649
best_error: 2.3559934384328756
best_error: 2.355885727211681
best_error: 2.3558856888035273
best_error: 2.355674885908329
best_error: 2.3556748478463705
best_error: 2.355031810455176
best_error: 2.355031809560925
best_error: 2.3550317745447247
best_error: 2.3530810300122327
best_error: 2.3530810270064877
best_error: 2.3530809969021638
best_error: 2.3527219342696326
best_error: 2.3527219278793874
best_error: 2.3519562879848923
best_error: 2.351956283215012
best_error: 2.3515439679661987
best_error: 2.3515439299481393
best_error: 2.3512623244515223
best_error: 2.3512623215262103
best_error: 2.3508798051733413
best_error: 2.350879802645663
best_error: 2.3506403123092414
best_error: 2.350640308666288
best_error: 2.3497366870848766
best_error: 2.349736684391797
best_error: 2.3491872511646363
best_error: 2.3491872119135313
best_error: 2.3491838349037133
best_error: 2.3491838329237
best_error: 2.3489567550783153
best_error: 2.3489567531040114
best_error: 2.348954971393577
best_error: 2.3489549315661566
best_error: 2.3489143872765514
best_error: 2.3489143475641527
best_error: 2.3489123896179667
best_error: 2.348912349906604
best_error: 2.34891205337272
best_error: 2.348912051161759
best_error: 2.3489048325216437
best_error: 2.348904830314674
