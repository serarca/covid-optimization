ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.489950980030002
best_error: 24.48995037696316
best_error: 5.0396460154157605
best_error: 5.0396460151444025
best_error: 5.039632763585575
best_error: 5.039632763582006
best_error: 5.039632763563699
best_error: 5.039579706601442
best_error: 5.0395797065978645
best_error: 5.0395797065795485
best_error: 5.039366680387792
best_error: 5.039366680384178
best_error: 5.039366680365828
best_error: 5.038501563541016
best_error: 5.038501563537249
best_error: 5.038501563518765
best_error: 5.034816127387646
best_error: 5.034816127383129
best_error: 5.034816127364135
best_error: 5.0148121883997
best_error: 5.014812188386657
best_error: 5.014812188367876
best_error: 4.983106448373736
best_error: 4.983106448298519
best_error: 4.741836638381209
best_error: 4.741836625233735
best_error: 4.594510062739337
best_error: 4.594510032730583
best_error: 4.3716868853359365
best_error: 4.3716868251332155
best_error: 3.4644817364480964
best_error: 3.4644815875183865
best_error: 2.9650352218801412
best_error: 2.965035195655496
best_error: 2.9555156888558174
best_error: 2.9555156887622207
best_error: 2.9555156884976657
best_error: 2.9555156883688753
best_error: 2.9555156772397777
best_error: 2.950870958856032
best_error: 2.9508709566550912
best_error: 2.950870945692489
best_error: 2.9401492492246204
best_error: 2.9401492458858502
best_error: 2.9401492350556753
best_error: 2.936427196930232
best_error: 2.9364271939177553
best_error: 2.936427182487952
best_error: 2.934183829487791
best_error: 2.9341838235880164
best_error: 2.9341838148832475
best_error: 2.933319881588576
best_error: 2.933319859676285
best_error: 2.9332390615655486
best_error: 2.933238954263402
best_error: 2.932136975078203
best_error: 2.9321369098904797
best_error: 2.906498393211826
best_error: 2.9064983595181246
best_error: 2.8853279332503465
best_error: 2.8853278960821003
best_error: 2.8707629295434294
best_error: 2.870762903629858
best_error: 2.870762862231193
best_error: 2.8514125765060663
best_error: 2.85141257148519
best_error: 2.8514124809508545
best_error: 2.8110036255958435
best_error: 2.8110034172154275
best_error: 2.786059394155501
best_error: 2.7860593587218485
best_error: 2.765990574883133
best_error: 2.7659905300397414
best_error: 2.658293608912111
best_error: 2.6582935844461666
best_error: 2.6582934556273976
best_error: 2.4177858471227673
best_error: 2.4177856709517873
best_error: 2.040671411053547
best_error: 2.0406714054623323
best_error: 2.040671277808237
best_error: 2.0278727826367327
best_error: 2.027872731218115
best_error: 2.0186649030102033
best_error: 2.018664868233279
best_error: 2.018664865544481
best_error: 1.9929568658082772
best_error: 1.992956736454748
best_error: 1.9563233234529407
best_error: 1.9563231281679447
best_error: 1.949411025702666
best_error: 1.9494108781824622
best_error: 1.9210940094729199
best_error: 1.9210939684292094
best_error: 1.9146565659251045
best_error: 1.9146565437152714
best_error: 1.913716808998819
best_error: 1.9137167593432247
best_error: 1.9113471965388265
best_error: 1.911347178659919
best_error: 1.911080915743214
best_error: 1.9110809080634925
best_error: 1.9110122994227963
best_error: 1.9110122981061326
best_error: 1.910971206391627
best_error: 1.9109712060823805
best_error: 1.9109712057017658
best_error: 1.9109259430906602
best_error: 1.9109259424035017
best_error: 1.9108083293291913
best_error: 1.9108083292043503
best_error: 1.9108083286684248
best_error: 1.9108083285150437
best_error: 1.910413719165557
best_error: 1.9104137191546595
best_error: 1.9104137185525452
best_error: 1.9104137183091425
best_error: 1.9104137181168164
best_error: 1.909323210485486
best_error: 1.909323205366508
best_error: 1.9069292367088826
best_error: 1.9069292223933627
best_error: 1.901432425200018
best_error: 1.9014324158095441
best_error: 1.900079366030205
best_error: 1.9000793322938796
best_error: 1.8909180557318357
best_error: 1.890918045414456
best_error: 1.8906290755272988
best_error: 1.890629068506793
best_error: 1.8859678754314972
best_error: 1.8859678665397848
best_error: 1.8850099931859887
best_error: 1.8850099386378705
best_error: 1.8841851886135152
best_error: 1.8841851821397466
best_error: 1.8839734499081084
best_error: 1.883973444545778
best_error: 1.8830507586638268
best_error: 1.8830507514542845
best_error: 1.8827676469091776
best_error: 1.8827676450488946
best_error: 1.8826420568939681
best_error: 1.8826420558661128
best_error: 1.8825915219707292
best_error: 1.882591520918932
best_error: 1.8806038815030057
best_error: 1.880603859366413
best_error: 1.880023251211766
best_error: 1.8800231969316061
best_error: 1.8792847389155105
best_error: 1.8792846947684867
best_error: 1.8782010234564734
best_error: 1.8782010225602122
best_error: 1.8782010222624783
best_error: 1.8767814661191589
best_error: 1.8767814580553517
best_error: 1.8655115477512405
best_error: 1.8655115402302471
best_error: 1.862356830998333
best_error: 1.8623568305102376
best_error: 1.8623568301030673
best_error: 1.8589297634585933
best_error: 1.8589297289831221
best_error: 1.8564305585072862
best_error: 1.8564305378996817
best_error: 1.8533554595053516
best_error: 1.8533554422750294
best_error: 1.8529785945072712
best_error: 1.8529785849005347
best_error: 1.8527940163070207
best_error: 1.85279401336802
best_error: 1.852775869969346
best_error: 1.8527758639815628
best_error: 1.8527690046348357
best_error: 1.8527690034085489
best_error: 1.8527625734855804
best_error: 1.85276257256482
best_error: 1.8527567968708585
best_error: 1.852756795059541
best_error: 1.852749134118684
best_error: 1.852749133031545
best_error: 1.852732880518618
best_error: 1.852732879757219
best_error: 1.8526544705437207
best_error: 1.852654469663807
best_error: 1.8525713023345185
best_error: 1.8525713022152641
best_error: 1.852571301888023
best_error: 1.8524701729215483
best_error: 1.8524701709102878
best_error: 1.8523699075399351
best_error: 1.852369902439321
best_error: 1.8523482831885303
best_error: 1.852348280649976
best_error: 1.852343279522607
best_error: 1.8523432781013727
best_error: 1.8523428274516882
best_error: 1.8523428256094454
best_error: 1.8523419421581209
best_error: 1.8523419421327574
best_error: 1.8523419419053133
best_error: 1.8523418081645002
best_error: 1.8523418075111382
best_error: 1.8523415050044734
best_error: 1.852341504093233
best_error: 1.8523404774115233
best_error: 1.8523404766790863
best_error: 1.852336731768972
best_error: 1.8523367310685117
best_error: 1.852335237057073
best_error: 1.852335236292881
best_error: 1.8523203018272452
best_error: 1.8523203012904843
best_error: 1.852320299775274
best_error: 1.8523061580771831
best_error: 1.8523061557002325
best_error: 1.8522906723649708
best_error: 1.8522906719457037
best_error: 1.8522780396451375
best_error: 1.8522780395524423
best_error: 1.8522780395240093
best_error: 1.8522733240673823
best_error: 1.8522733233883912
best_error: 1.8522730862787407
best_error: 1.8522730856302794
best_error: 1.8522711512097447
best_error: 1.852271150626111
best_error: 1.8522706932087822
best_error: 1.852270692474269
best_error: 1.8522691672432017
best_error: 1.8522691664318633
best_error: 1.8522544125382536
best_error: 1.8522544111081616
best_error: 1.8522540918922366
best_error: 1.852254088289908
best_error: 1.8522487018216633
best_error: 1.8522487006446144
best_error: 1.852239294352265
best_error: 1.8522392942840507
best_error: 1.8522392942618
best_error: 1.8521741583118172
best_error: 1.8521741579945843
best_error: 1.8520735592614614
best_error: 1.8520735495905845
best_error: 1.8517767902805906
best_error: 1.8517767889449679
best_error: 1.8517712231627774
best_error: 1.8517712221217641
best_error: 1.8517704148042373
best_error: 1.8517704132442583
best_error: 1.8507152859163833
best_error: 1.850715285900994
best_error: 1.8507152858200533
best_error: 1.850715285770095
best_error: 1.8506645261470025
best_error: 1.8506645257109817
best_error: 1.8506430447993825
best_error: 1.8506430432624796
best_error: 1.8506400754298375
best_error: 1.8506400733411374
best_error: 1.8506390226015903
best_error: 1.8506390223019331
best_error: 1.8506389266102148
best_error: 1.8506389263128735
best_error: 1.8506388568842338
best_error: 1.8506388567406113
best_error: 1.8506388535875125
best_error: 1.8506388535729945
