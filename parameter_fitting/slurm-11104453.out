ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 68
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.87395071964306
best_error: 101.87395051172423
best_error: 20.368234046880353
best_error: 20.36823404687914
best_error: 20.36823404531239
best_error: 20.36791312036127
best_error: 20.367913118789268
best_error: 20.36662358326914
best_error: 20.366623581680827
best_error: 20.361369935408952
best_error: 20.36136993375283
best_error: 20.338771247940898
best_error: 20.33877124599421
best_error: 20.204801248530977
best_error: 20.204801243507834
best_error: 20.2033968052025
best_error: 20.203396800130722
best_error: 17.17156331122913
best_error: 17.17156287782067
best_error: 16.296665969603552
best_error: 16.296665403275313
best_error: 15.127291811965495
best_error: 15.127291698943177
best_error: 15.113874241618513
best_error: 15.113874237811777
best_error: 15.113874214765822
best_error: 15.113235573115674
best_error: 15.113235569062425
best_error: 15.113235548695918
best_error: 15.112222442050937
best_error: 15.112222436321748
best_error: 15.112222435794848
best_error: 15.110570342831561
best_error: 15.110570338778391
best_error: 15.110570318211462
best_error: 14.396316392783643
best_error: 14.396316340390282
best_error: 14.203828944433372
best_error: 14.203828899404796
best_error: 13.637297217140025
best_error: 13.637297207137818
best_error: 13.637297203858715
best_error: 13.541217855891443
best_error: 13.541217849057995
best_error: 13.541217841261378
best_error: 13.519023172792197
best_error: 13.519023166971316
best_error: 13.519023145838222
best_error: 13.489769636846955
best_error: 13.489769632965656
best_error: 13.48976958545356
best_error: 13.462526843108126
best_error: 13.462526839554531
best_error: 13.462526792304367
best_error: 13.447575306660436
best_error: 13.44757527637215
best_error: 13.264308976731302
best_error: 13.26430897029442
best_error: 13.264308967988224
best_error: 13.264308964231905
best_error: 13.135439807682296
best_error: 13.135439801260983
best_error: 13.135439800063569
best_error: 13.135439795203869
best_error: 12.940020245207759
best_error: 12.940020125086914
best_error: 12.904655116264433
best_error: 12.90465500179015
best_error: 12.82273929282403
best_error: 12.822739292734154
best_error: 12.822739165519186
best_error: 12.768125550762784
best_error: 12.768125505887918
best_error: 12.734504039793373
best_error: 12.73450403414203
best_error: 12.734504032422329
best_error: 12.734504027447747
best_error: 12.712558759548287
best_error: 12.712558754350745
best_error: 12.712558752233623
best_error: 12.712558747378084
best_error: 12.702354584238318
best_error: 12.7023545792743
best_error: 12.702354576942746
best_error: 12.70235457214789
best_error: 12.696156737314139
best_error: 12.696156732500032
best_error: 12.696156730047548
best_error: 12.696156725280815
best_error: 12.691795337669024
best_error: 12.69179533294151
best_error: 12.691795330425652
best_error: 12.691795325663609
best_error: 12.690203299262894
best_error: 12.690203294547594
best_error: 12.690203292024496
best_error: 12.690203287267792
best_error: 12.689715697964008
best_error: 12.689715693252424
best_error: 12.689715690727127
best_error: 12.689715685972052
best_error: 12.689628093217083
best_error: 12.689628088506055
best_error: 12.68962808598054
best_error: 12.689628081225626
best_error: 12.68962179378737
best_error: 12.689621789076392
best_error: 12.689621786550855
best_error: 12.689621781795942
best_error: 12.689621363984646
best_error: 12.689621306191093
best_error: 12.673883617226473
best_error: 12.673883538973831
best_error: 12.662731848564459
best_error: 12.662731843845439
best_error: 12.66273184201785
best_error: 12.662731836678871
best_error: 12.661368757763114
best_error: 12.661368682818221
best_error: 12.520627921209355
best_error: 12.520627904267887
best_error: 12.520627555970073
best_error: 12.520478039748689
best_error: 12.52047803364217
best_error: 12.52047789186329
best_error: 12.51991052621584
best_error: 12.519910520106645
best_error: 12.519910378271621
best_error: 12.518822979644641
best_error: 12.518822973530316
best_error: 12.518822831587809
best_error: 12.518817965716153
best_error: 12.51881795960428
best_error: 12.518817817709476
best_error: 12.51880871089435
best_error: 12.518808704782462
best_error: 12.518808562887365
best_error: 12.518802091965439
best_error: 12.518802085853546
best_error: 12.518801943958238
best_error: 12.518798849716712
best_error: 12.518798843604818
best_error: 12.518798701709407
best_error: 12.518796399461156
best_error: 12.518796393349264
best_error: 12.518796251453782
best_error: 12.518795293865397
best_error: 12.518795287753498
best_error: 12.518795145857975
best_error: 12.518795017887923
best_error: 12.51879501150848
best_error: 12.518501388276052
best_error: 12.518501382162597
best_error: 12.518501240236626
best_error: 12.518277628193154
best_error: 12.518277611246049
best_error: 12.518277262853388
best_error: 12.517933263512024
best_error: 12.517933257396123
best_error: 12.517933115424173
best_error: 12.517551613548994
best_error: 12.517551596598786
best_error: 12.517551248162484
best_error: 12.509708317186735
best_error: 12.509708314595725
best_error: 12.509708230122659
best_error: 12.455661129476981
best_error: 12.455661124738654
best_error: 12.45566112180837
best_error: 12.455368157914307
best_error: 12.455368153200178
best_error: 12.455368150246427
best_error: 12.454201108527643
best_error: 12.454201103833142
best_error: 12.454201100860779
best_error: 12.449571884423875
best_error: 12.449571879797169
best_error: 12.449571876761082
best_error: 12.447032689370893
best_error: 12.447032606298592
best_error: 12.44663040182662
best_error: 12.44663039724367
best_error: 12.446630394166544
best_error: 12.446551634393343
best_error: 12.446551551598308
best_error: 12.446548473615982
best_error: 12.44654839082061
best_error: 12.446548081095777
best_error: 12.446548076513508
best_error: 12.446548073435764
best_error: 12.446547997170057
best_error: 12.44654791437463
best_error: 12.446547738693848
best_error: 12.446547731036478
best_error: 12.446547724087699
best_error: 12.446547722380837
