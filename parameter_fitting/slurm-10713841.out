ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.444031578577388
best_error: 11.444031561205128
best_error: 11.444031533400329
best_error: 11.286425145017661
best_error: 11.286425122914324
best_error: 11.286425090107226
best_error: 9.656909058784436
best_error: 9.656908977799887
best_error: 9.65690896045135
best_error: 9.099072860676904
best_error: 9.099072764771504
best_error: 9.083386097601034
best_error: 9.083386000921687
best_error: 8.546485729268227
best_error: 8.546485607603639
best_error: 7.782383368467507
best_error: 7.782383299653167
best_error: 7.782383287402219
best_error: 7.494996626268645
best_error: 7.494996569204561
best_error: 7.494996534656543
best_error: 7.100587210967848
best_error: 7.100587170190021
best_error: 7.100587104574057
best_error: 3.6069066450865894
best_error: 3.606906059658335
best_error: 3.218975641476988
best_error: 3.2189748480656983
best_error: 1.8237699049265372
best_error: 1.8237696088007964
best_error: 1.811398180717714
best_error: 1.8113978849551948
best_error: 1.8047440098650003
best_error: 1.804743713450971
best_error: 1.8002655235226865
best_error: 1.8002652266707933
best_error: 1.798347024019417
best_error: 1.7983467269801092
best_error: 1.7976317919710785
best_error: 1.7976314948623677
best_error: 1.7975417347702904
best_error: 1.797541437652841
best_error: 1.7974884676533627
best_error: 1.797488170530735
best_error: 1.7974652597732552
best_error: 1.7974649626483843
best_error: 1.7974486604369704
best_error: 1.7974486052839596
best_error: 1.7974484424552997
best_error: 1.7974483042686127
best_error: 1.79744830426512
best_error: 1.7974482796029068
best_error: 1.789018147023343
best_error: 1.7890178243914971
best_error: 1.7888749857085817
best_error: 1.7888746686587924
best_error: 1.7845168396012525
best_error: 1.7845165221048958
best_error: 1.7840606201842908
best_error: 1.784060620182948
best_error: 1.7770499210762294
best_error: 1.7770496042398882
best_error: 1.7761750949023796
best_error: 1.7761750949010244
best_error: 1.7751535828676368
best_error: 1.7751532658369846
best_error: 1.7742907102513423
best_error: 1.7742907102499683
best_error: 1.7742836286083286
best_error: 1.7742833100301323
best_error: 1.7696416883704331
best_error: 1.7696413493192211
best_error: 1.7674329906065513
best_error: 1.7674329906052373
best_error: 1.762199575701133
best_error: 1.7621992124327281
best_error: 1.7614435179267884
best_error: 1.7614431612205426
best_error: 1.7611227854641123
best_error: 1.7611224313988907
best_error: 1.7186766503242432
best_error: 1.7186763079568865
best_error: 1.7081319587249495
best_error: 1.708131655650095
best_error: 1.705731823485521
best_error: 1.7057318234840912
best_error: 1.6478570365197462
best_error: 1.6478570365183807
best_error: 1.6253996219346563
best_error: 1.6253996219333375
best_error: 1.6150320349884084
best_error: 1.615032034987057
best_error: 1.6109141445954545
best_error: 1.6109141445940671
best_error: 1.6025552564222978
best_error: 1.602555256420922
best_error: 1.598254662378906
best_error: 1.5982542935637887
best_error: 1.5665910060329828
best_error: 1.5665910060315087
best_error: 1.5506945091873332
best_error: 1.550694171017572
best_error: 1.540508796945836
best_error: 1.5405087969444675
best_error: 1.5295798733985468
best_error: 1.5295798733972112
best_error: 1.5179995471955596
best_error: 1.517999183144639
best_error: 1.511413097180982
best_error: 1.5114130971796724
best_error: 1.5006824886346806
best_error: 1.5006824886334056
best_error: 1.4937471608143627
best_error: 1.4937467600987548
best_error: 1.4918631387193202
best_error: 1.4918631387180525
best_error: 1.488350663293795
best_error: 1.4883506632925028
best_error: 1.4863026500073344
best_error: 1.4863022541819586
best_error: 1.4807150803834266
best_error: 1.4807150803821385
best_error: 1.4775223304711222
best_error: 1.4775223304698093
best_error: 1.477314293955438
best_error: 1.4773138998217452
best_error: 1.4683484364073776
best_error: 1.4683484364060844
best_error: 1.4631406520053063
best_error: 1.4631406520040218
best_error: 1.460517361164173
best_error: 1.4605169593591802
best_error: 1.436746269043717
best_error: 1.4367458550373753
best_error: 1.4299965560086827
best_error: 1.4299965560074017
best_error: 1.422179847874001
best_error: 1.4221798478727887
best_error: 1.4045437515594124
best_error: 1.4045433153856597
best_error: 1.4028636125326872
best_error: 1.4028636125314025
best_error: 1.4019819731017233
best_error: 1.40198153674112
best_error: 1.3981918392214248
best_error: 1.3981918392201242
best_error: 1.3981916833794088
