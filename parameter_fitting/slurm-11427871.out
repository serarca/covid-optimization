ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 80
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 20.660558801807934
best_error: 20.66055847133504
best_error: 4.35031677182271
best_error: 4.350316769925405
best_error: 4.349165895346166
best_error: 4.349165895331022
best_error: 4.3491658952094525
best_error: 4.34450752605319
best_error: 4.344507526037426
best_error: 4.344507525915161
best_error: 4.324909772804027
best_error: 4.324909772785379
best_error: 4.3249097726603445
best_error: 4.225784439978379
best_error: 4.225784439935014
best_error: 4.225784439802361
best_error: 4.037755355307054
best_error: 4.037755355115607
best_error: 4.037755355045791
best_error: 3.411225217764624
best_error: 3.4112252136946144
best_error: 3.2918379817212955
best_error: 3.291837975583527
best_error: 3.1893590529338844
best_error: 3.189359044859624
best_error: 3.0060297107480216
best_error: 3.0060297000396723
best_error: 2.9900090503432595
best_error: 2.990009026576719
best_error: 2.9795007412571044
best_error: 2.9795007320456643
best_error: 2.9715721011387815
best_error: 2.9715720912770776
best_error: 2.941918914919281
best_error: 2.9419188946631336
best_error: 2.934751593143155
best_error: 2.9347515659340377
best_error: 2.87348225846397
best_error: 2.8734822273844025
best_error: 2.650511131232367
best_error: 2.6505111059846462
best_error: 2.6505110718954006
best_error: 2.137405860268414
best_error: 2.137405849954714
best_error: 2.137405717617719
best_error: 2.1112583156926648
best_error: 2.11125820580836
best_error: 2.0927290483650665
best_error: 2.0927289977684222
best_error: 2.0461205602845123
best_error: 2.046120500891118
best_error: 1.7101762244098966
best_error: 1.7101761415157946
best_error: 1.693869995859477
best_error: 1.693869875311897
best_error: 1.6872186256483814
best_error: 1.6872185862828148
best_error: 1.6834292125181596
best_error: 1.6834292088768796
best_error: 1.683429206610416
best_error: 1.6830778298624318
best_error: 1.6830778276147962
best_error: 1.683077824569272
best_error: 1.6825287001964813
best_error: 1.6825286927136758
best_error: 1.6806093628801972
best_error: 1.6806093389560737
best_error: 1.665035919024249
best_error: 1.665035821060263
best_error: 1.6159674392657437
best_error: 1.6159672440973611
best_error: 1.4877842195409385
best_error: 1.4877839460675313
best_error: 1.4875893780738965
best_error: 1.4875892324951472
best_error: 1.4597307870430019
best_error: 1.4597305456069523
best_error: 1.408268138872919
best_error: 1.4082679527215705
best_error: 1.341402384921953
best_error: 1.3414022727575965
best_error: 1.2869760678157758
best_error: 1.286976053402995
best_error: 1.2797144973670846
best_error: 1.2797144306167474
best_error: 1.2772435331220897
best_error: 1.2772435081392843
best_error: 1.276341400638254
best_error: 1.2763413991311874
best_error: 1.2759624649463377
best_error: 1.2759624599086388
best_error: 1.275879618621683
best_error: 1.2758796178070677
best_error: 1.2758528843635764
best_error: 1.2758528836457201
best_error: 1.2757688034376928
best_error: 1.2757687996569345
best_error: 1.2755202546051312
best_error: 1.2755202430927925
best_error: 1.2749377189860276
best_error: 1.2749376974868998
best_error: 1.2733591940536142
best_error: 1.2733591553650117
best_error: 1.2710248553380372
best_error: 1.271024792222774
best_error: 1.2651524696907839
best_error: 1.2651523859913225
best_error: 1.2450894371840262
best_error: 1.245089381965367
best_error: 1.2392118018935272
best_error: 1.2392116859572446
best_error: 1.2180786793239158
best_error: 1.218078590770286
best_error: 1.215647913067456
best_error: 1.2156478319207884
best_error: 1.2098565719128644
best_error: 1.2098565176007843
best_error: 1.2029692835388415
best_error: 1.2029692399308523
best_error: 1.1942339441095797
best_error: 1.1942339264945843
best_error: 1.193279146378145
best_error: 1.1932791365825484
best_error: 1.1925732911745321
best_error: 1.192573288873851
best_error: 1.192112618153305
best_error: 1.19211261157059
best_error: 1.1920685130057118
best_error: 1.1920685114494989
best_error: 1.1920532908623047
best_error: 1.1920532893726452
best_error: 1.1915139178095844
best_error: 1.1915139178021128
best_error: 1.1915139173817846
best_error: 1.1915139173636062
best_error: 1.1915139166604085
best_error: 1.1876451945298272
best_error: 1.1876451942030306
best_error: 1.187645192778719
best_error: 1.1833678848774192
best_error: 1.1833678670708272
best_error: 1.1580598436216858
best_error: 1.1580598223915908
best_error: 1.1376563346197421
best_error: 1.1376563059771256
best_error: 1.1316614187031804
best_error: 1.1316613879679722
best_error: 1.1308396662244147
best_error: 1.1308396588167653
best_error: 1.1304156906149694
best_error: 1.1304156848247107
best_error: 1.1278331301213276
best_error: 1.1278331060485425
best_error: 1.1269821865700413
best_error: 1.1269821852848347
best_error: 1.1269821788810503
best_error: 1.1267917044348525
best_error: 1.1267917017696047
best_error: 1.1261267053108128
best_error: 1.1261267017916652
best_error: 1.125711443907668
best_error: 1.125711440093978
best_error: 1.1232755073274248
best_error: 1.1232755052647736
best_error: 1.121699802492091
best_error: 1.1216998024664209
best_error: 1.1216998024480578
best_error: 1.1216998014385444
best_error: 1.1186688441648924
best_error: 1.1186688053185925
best_error: 1.115732644347398
best_error: 1.1157326366422446
best_error: 1.1131344857864192
best_error: 1.1131344825769953
best_error: 1.1109895703137003
best_error: 1.1109895512265937
best_error: 1.1095037878196197
best_error: 1.109503771529073
best_error: 1.1087707374972111
best_error: 1.1087707176834098
best_error: 1.108008954910434
best_error: 1.10800894307009
best_error: 1.107329848427969
best_error: 1.1073298446205322
best_error: 1.1069699948530796
best_error: 1.1069699939715953
best_error: 1.1065122293166338
best_error: 1.1065122192821983
best_error: 1.106330065029543
best_error: 1.1063300611597378
best_error: 1.1062549214561264
best_error: 1.1062549183461203
best_error: 1.1062418249708594
best_error: 1.1062418245657653
best_error: 1.1062390432990732
best_error: 1.1062390428524564
best_error: 1.1060194235162657
best_error: 1.1060194234588299
best_error: 1.1060194233946377
best_error: 1.105481877627878
best_error: 1.105481875884973
best_error: 1.1051169398184553
best_error: 1.1051169350765182
best_error: 1.1044251614841416
best_error: 1.1044251555265485
best_error: 1.1021656842464675
best_error: 1.1021656647579732
best_error: 1.10009028992246
best_error: 1.1000902871762048
best_error: 1.099626969074168
best_error: 1.0996269401286578
best_error: 1.0991393845358366
best_error: 1.0991393689111633
best_error: 1.097735873316336
best_error: 1.0977358670903468
best_error: 1.0965436107940336
best_error: 1.0965435849139324
best_error: 1.0949748389487104
best_error: 1.0949748311548746
best_error: 1.0947495715366542
best_error: 1.0947495700710603
best_error: 1.0947004744526392
best_error: 1.0947004743642195
best_error: 1.0946919326750324
best_error: 1.0946919323756625
best_error: 1.0946906848097433
best_error: 1.0946906842296869
best_error: 1.094690306005856
best_error: 1.0946903051685128
best_error: 1.0946895246025934
best_error: 1.0946895237735321
best_error: 1.0946864190654635
best_error: 1.0946864189659042
best_error: 1.0946864184560858
best_error: 1.0946698176302372
best_error: 1.094669816288303
best_error: 1.0946530113530208
best_error: 1.0946530088395579
best_error: 1.094627214938877
best_error: 1.094627212179577
best_error: 1.0945651762674524
best_error: 1.0945651704352217
best_error: 1.094459016772048
best_error: 1.0944590092762414
best_error: 1.0941305673991277
best_error: 1.0941305517665285
best_error: 1.0935142631681003
best_error: 1.0935142523017793
best_error: 1.0933915837377852
best_error: 1.093391580553056
best_error: 1.093391341920106
best_error: 1.0933913389091314
