ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 16.165062516718642
best_error: 16.165062454216027
best_error: 10.089893223778795
best_error: 10.089893217427246
best_error: 10.044257447879094
best_error: 10.044257440750469
best_error: 9.908606274412278
best_error: 9.908606259694919
best_error: 9.908606251332284
best_error: 9.90147868282507
best_error: 9.901478666966543
best_error: 9.901478658948392
best_error: 8.375991885465886
best_error: 8.375991795001083
best_error: 8.375991780923384
best_error: 8.340575405921108
best_error: 8.340575333154767
best_error: 8.340575300826139
best_error: 8.307083006879253
best_error: 8.307082965687496
best_error: 8.307082901340038
best_error: 8.305837159837912
best_error: 8.305837118153093
best_error: 8.30583705383208
best_error: 8.30410988455846
best_error: 8.304109847443316
best_error: 8.304109778827486
best_error: 6.0262240644349685
best_error: 6.026224002942157
best_error: 6.026223981017347
best_error: 5.969051557700025
best_error: 5.9690515024229605
best_error: 5.969051473439407
best_error: 5.915568510916558
best_error: 5.91556846019871
best_error: 5.915568426517474
best_error: 5.861859195276827
best_error: 5.861859147418961
best_error: 5.861859109978811
best_error: 5.8113379623024235
best_error: 5.81133791878737
best_error: 5.811337876737535
best_error: 5.793071869336581
best_error: 5.793071843436534
best_error: 5.776042582199799
best_error: 5.776042537484777
best_error: 5.776042495452641
best_error: 5.774884403829532
best_error: 5.774884358999748
best_error: 5.774884317016904
best_error: 5.7738570826033015
best_error: 5.773857037672026
best_error: 5.773856995732691
best_error: 5.772996759883103
best_error: 5.772996714867069
best_error: 5.77299667296392
best_error: 5.772310336532746
best_error: 5.772310291449227
best_error: 5.7723102495748835
best_error: 5.7709149199600445
best_error: 5.770914874739752
best_error: 5.770914832923539
best_error: 5.770246058713409
best_error: 5.7702460134277285
best_error: 5.770245971639255
best_error: 5.769909750836513
best_error: 5.769909705518012
best_error: 5.769909663743446
best_error: 5.7690697513266755
best_error: 5.769069705926321
best_error: 5.769069664186329
best_error: 5.768798741911179
best_error: 5.768798696484443
best_error: 5.768798654755485
best_error: 5.768666318186867
best_error: 5.768666272747245
best_error: 5.768666231023673
best_error: 5.7686349403797275
best_error: 5.768634894937051
best_error: 5.76863485321475
best_error: 5.7686140752481885
best_error: 5.768614029803487
best_error: 5.768613988082042
best_error: 5.768562726972524
best_error: 5.76856268152282
best_error: 5.768562639803431
best_error: 5.768537183539061
best_error: 5.768537138086873
best_error: 5.768537096368537
best_error: 5.768519427044476
best_error: 5.7685193815905595
best_error: 5.768519339872938
best_error: 5.768518638459277
best_error: 5.768518593005282
best_error: 5.768518551287729
best_error: 5.768517954171321
best_error: 5.768517908717261
best_error: 5.768517866999725
best_error: 5.768517224207876
best_error: 5.768517178753749
best_error: 5.768517137036244
best_error: 5.768516714846665
best_error: 5.768516669392489
best_error: 5.768516627675013
best_error: 5.768515471941379
best_error: 5.768515426487082
best_error: 5.768515384769639
best_error: 5.7685149979064665
best_error: 5.768514952452122
best_error: 5.768514910734694
best_error: 5.768514557378869
best_error: 5.768514511924481
best_error: 5.768514470207046
best_error: 5.768514344101898
best_error: 5.768514298647495
best_error: 5.768514256930087
best_error: 5.768514181607991
best_error: 5.768513799946453
best_error: 5.768513774072527
best_error: 5.748555642518342
best_error: 5.748555592735341
best_error: 5.748555554253075
best_error: 5.712146707471462
best_error: 5.712146707471453
best_error: 5.644405928136951
best_error: 5.644405876795924
best_error: 5.644405845698693
best_error: 5.574272600403906
best_error: 5.574272544504503
best_error: 5.570301128439006
best_error: 5.5703010721180535
best_error: 5.568949037641686
best_error: 5.568949017460394
best_error: 5.568755106162536
best_error: 5.568755049677525
best_error: 5.5687115871134125
best_error: 5.568711530623776
best_error: 5.568706304906731
best_error: 5.568706284728883
best_error: 5.568701866699781
best_error: 5.568701810209116
best_error: 5.568696225392385
best_error: 5.568696214591794
best_error: 5.568696204012182
best_error: 5.568696057374508
best_error: 5.568696035994303
best_error: 5.568696000942664
best_error: 5.568696000942663
best_error: 5.568695979562458
best_error: 5.568695978731933
best_error: 5.568695971061068
best_error: 5.5686959710299755
