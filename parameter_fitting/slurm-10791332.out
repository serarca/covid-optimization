ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.818907454105911
best_error: 10.818907417713902
best_error: 10.47908963004345
best_error: 10.479089564583605
best_error: 9.205804286725249
best_error: 9.20580408903589
best_error: 6.7345419155684585
best_error: 6.734541461704886
best_error: 5.198389713281308
best_error: 5.198389348042441
best_error: 4.869561967755158
best_error: 4.869561964253353
best_error: 4.869561718427532
best_error: 4.866627008128981
best_error: 4.866626976193375
best_error: 4.866626907422098
best_error: 4.849183019096555
best_error: 4.849182979027522
best_error: 4.849182939155991
best_error: 4.701075782241394
best_error: 4.70107571649722
best_error: 4.56471431396111
best_error: 4.564714046979594
best_error: 4.4695043551764915
best_error: 4.469504284914007
best_error: 4.469226293090728
best_error: 4.4692262840646055
best_error: 4.46798487878013
best_error: 4.4679848739577155
best_error: 4.467984871694741
best_error: 4.466299168066265
best_error: 4.4662990842198464
best_error: 4.453265378864864
best_error: 4.453265284672349
best_error: 4.40626269019366
best_error: 4.406262678280652
best_error: 4.402314336078071
best_error: 4.402314157916369
best_error: 4.192761459429592
best_error: 4.1927613462689255
best_error: 4.161571438083258
best_error: 4.161571225377432
best_error: 4.1215316591798885
best_error: 4.121531649030336
best_error: 4.120020698397224
best_error: 4.1200206728907265
best_error: 4.119879346653635
best_error: 4.119879322616072
best_error: 4.119112949128473
best_error: 4.119112925895246
best_error: 4.118817084453938
best_error: 4.118817061372096
best_error: 4.1187289009374775
best_error: 4.118728878015015
best_error: 4.118693254064133
best_error: 4.118693231156594
best_error: 4.118677001563992
best_error: 4.1186769780894155
best_error: 4.118654760288086
best_error: 4.118654611710033
best_error: 4.118654574314848
best_error: 4.118654550701452
best_error: 4.11865320341831
best_error: 4.118653179805223
best_error: 4.118653041316313
best_error: 4.118652952775733
best_error: 4.118652952775732
best_error: 4.117420950793016
best_error: 4.117420948939263
best_error: 4.117420941947779
best_error: 4.117313938652087
best_error: 4.117313936751179
best_error: 4.1173139302395025
best_error: 4.117274763611314
best_error: 4.1172747617403305
best_error: 4.117274755123002
best_error: 4.117245402209514
best_error: 4.117245400442519
best_error: 4.117245393639207
best_error: 4.117223892086303
best_error: 4.117223890295386
best_error: 4.117223883628142
best_error: 4.117205132624258
best_error: 4.117205130834108
best_error: 4.117205124152614
best_error: 4.117195482664459
best_error: 4.117195480874665
best_error: 4.117195474185876
best_error: 4.1171830887715934
best_error: 4.1171830869602655
best_error: 4.117183080427389
best_error: 4.11717099960666
best_error: 4.117170997775343
best_error: 4.117170991400978
best_error: 4.117170761752275
best_error: 4.117170759920971
best_error: 4.1171707535464295
best_error: 4.117170558514011
best_error: 4.117170556682704
best_error: 4.117170550308021
best_error: 4.117170518028616
best_error: 4.117170498799377
best_error: 4.116812073729816
best_error: 4.116812073025284
best_error: 4.116812063207227
best_error: 4.116158237362233
best_error: 4.116158220103739
best_error: 4.116004234064002
best_error: 4.116004213962293
best_error: 4.11558073715171
best_error: 4.115580715776047
best_error: 4.114175885125862
best_error: 4.114175859950494
best_error: 4.111011144100744
best_error: 4.111011137723574
best_error: 4.107280492064774
best_error: 4.107280486011172
best_error: 4.09575344759489
best_error: 4.095753427525015
best_error: 4.094737101537608
best_error: 4.094737086851663
best_error: 4.094577540462476
best_error: 4.09457752408759
best_error: 4.094477803829575
best_error: 4.094477787463383
best_error: 4.09416211788384
best_error: 4.094162100726465
best_error: 4.088499639584661
best_error: 4.088499610180844
best_error: 4.084012931009427
best_error: 4.08401291181523
best_error: 4.083972102445417
best_error: 4.083972084010861
best_error: 4.08396142482616
best_error: 4.083961406391019
best_error: 4.083955886395825
best_error: 4.0839558682916275
best_error: 4.0839529724010175
best_error: 4.083952954296665
best_error: 4.083951411076945
best_error: 4.083951392972508
best_error: 4.083950574916579
best_error: 4.083950556812094
best_error: 4.083950128568272
best_error: 4.083950110463769
best_error: 4.0839498620922345
best_error: 4.083949848034618
best_error: 4.083949837166148
best_error: 4.083949837127614
best_error: 4.083949832545558
best_error: 4.083949832507022
best_error: 4.083949831587245
best_error: 4.083949831535943
