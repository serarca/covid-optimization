ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.32077369297882
best_error: 24.320773689921886
best_error: 24.320773673271685
best_error: 24.320773628272956
best_error: 3.798239940046597
best_error: 3.798239736867552
best_error: 2.8653057962230646
best_error: 2.8653056508398915
best_error: 2.3137703536424437
best_error: 2.3137701065863556
best_error: 2.2520745735339043
best_error: 2.2520745721410433
best_error: 2.252074556920763
best_error: 2.207922841346342
best_error: 2.207922827708153
best_error: 2.2079227725372035
best_error: 2.1955933510360053
best_error: 2.195593348043001
best_error: 2.1955932579740516
best_error: 2.114043299899608
best_error: 2.1140432628393118
best_error: 2.112507520630406
best_error: 2.112507518135359
best_error: 2.1125075073155233
best_error: 2.098789889609007
best_error: 2.0987898887975622
best_error: 2.0987898877681523
best_error: 2.098789876132093
best_error: 2.0622391961087554
best_error: 2.062239152107369
best_error: 1.9785376820515692
best_error: 1.9785375864250165
best_error: 1.860613594436878
best_error: 1.8606135042234073
best_error: 1.7754808998678522
best_error: 1.775480683556635
best_error: 1.7008495240998973
best_error: 1.7008493764868147
best_error: 1.6566650243376282
best_error: 1.6566649985368214
best_error: 1.6441492277869472
best_error: 1.6441492270604292
best_error: 1.6441492196510001
best_error: 1.634713814294972
best_error: 1.6347137997284498
best_error: 1.6277389228213217
best_error: 1.6277387919585713
best_error: 1.6228412648910333
best_error: 1.6228412340298954
best_error: 1.611786743922614
best_error: 1.61178665899105
best_error: 1.5913945587418328
best_error: 1.5913945002277827
best_error: 1.5506823175814566
best_error: 1.5506821876028891
best_error: 1.4929027227897178
best_error: 1.4929026133993302
best_error: 1.4928975562852451
best_error: 1.4856037326400076
best_error: 1.485603687072185
best_error: 1.485600423849891
best_error: 1.483555784610421
best_error: 1.4835557818146372
best_error: 1.483553504569206
best_error: 1.4757723080982779
best_error: 1.4757722665158617
best_error: 1.449980949070333
best_error: 1.4499808727716574
best_error: 1.4345233639962849
best_error: 1.4345232920294244
best_error: 1.3247760187251503
best_error: 1.3247759823996166
best_error: 1.3079533793327094
best_error: 1.3079533298718646
best_error: 1.3039481366661658
best_error: 1.3039481228376077
best_error: 1.302534950352307
best_error: 1.3025349323966742
best_error: 1.298710619948032
best_error: 1.2987105594330692
best_error: 1.2967928331627265
best_error: 1.296792814388214
best_error: 1.2946973215593889
best_error: 1.294697284627916
best_error: 1.2935712014416973
best_error: 1.2935711812312942
best_error: 1.2922497939851252
best_error: 1.2922497522262493
best_error: 1.2908601616199311
best_error: 1.2908601417646626
best_error: 1.289999547752437
best_error: 1.2899995051238062
best_error: 1.289195827698323
best_error: 1.2891957466649786
best_error: 1.2743590015662383
best_error: 1.2743589537928297
best_error: 1.1978464571253542
best_error: 1.197846390737873
best_error: 1.1968900026019669
best_error: 1.1968899565423305
best_error: 1.1963956773234836
best_error: 1.1963956528383293
best_error: 1.1963318437981116
best_error: 1.1963318306866055
best_error: 1.1963313610146766
best_error: 1.1963313487427882
best_error: 1.1941200784979884
best_error: 1.1941200780054582
best_error: 1.1941200726261447
best_error: 1.1908059817923047
best_error: 1.1908059815374028
best_error: 1.1908059812557625
best_error: 1.190805976681088
best_error: 1.177626474594372
best_error: 1.1776264670174685
best_error: 1.1749935432566543
best_error: 1.1749935119285135
best_error: 1.1727077701765447
best_error: 1.172707766496694
best_error: 1.1725727168033016
best_error: 1.1725727064252132
best_error: 1.1720004028503157
best_error: 1.1720003953731666
best_error: 1.171879916230084
best_error: 1.1718799138570766
best_error: 1.1718762275246506
best_error: 1.1718762263146605
best_error: 1.1718762256936068
best_error: 1.1718759214481143
best_error: 1.1718759205441998
best_error: 1.171875919625457
best_error: 1.1718389420679676
best_error: 1.1718389409413958
best_error: 1.1718389402471034
best_error: 1.1717456237580017
best_error: 1.1717456227697576
best_error: 1.1717456217536983
best_error: 1.1707703706181467
best_error: 1.1707703428407112
best_error: 1.1688741660351853
best_error: 1.1688741174296993
best_error: 1.1644933415234906
best_error: 1.1644932838549171
best_error: 1.1644817594477896
best_error: 1.16448170205568
best_error: 1.1628871468011965
best_error: 1.162887121902022
best_error: 1.1628863028022385
best_error: 1.1628862781338012
best_error: 1.162822413953593
best_error: 1.1628223965544215
best_error: 1.1628223897428978
best_error: 1.1628221414123001
best_error: 1.1628221247666581
best_error: 1.1628220220260652
best_error: 1.1628220053803937
best_error: 1.1628215446482781
best_error: 1.1628215280212815
best_error: 1.1628196364866905
best_error: 1.1628196198592244
best_error: 1.1628120159058548
best_error: 1.16281199935317
best_error: 1.1627823936604016
best_error: 1.1627823783275013
best_error: 1.1626823750228141
best_error: 1.1626823634228836
best_error: 1.1626782136674678
best_error: 1.1626782023548978
best_error: 1.162661867884514
best_error: 1.1626618569599219
best_error: 1.1626010999937026
best_error: 1.1626010911743772
best_error: 1.1623891426182449
best_error: 1.162389141393681
best_error: 1.1623891380067854
best_error: 1.1585448042413584
best_error: 1.1585447820800723
best_error: 1.1572205127796533
best_error: 1.1572205117023449
best_error: 1.1572205074196826
best_error: 1.1567155814343975
best_error: 1.1567155778819866
best_error: 1.1567155771632915
best_error: 1.1565797245559004
best_error: 1.1565797177810646
best_error: 1.1562862551288533
best_error: 1.1562862379056424
best_error: 1.156021464411675
best_error: 1.1560214542527572
best_error: 1.1558014415694489
best_error: 1.155801436304818
best_error: 1.155786191270884
best_error: 1.1557861894087367
best_error: 1.1557861878590874
best_error: 1.1557840448232337
best_error: 1.1557840429098265
best_error: 1.1557840414467337
best_error: 1.1557824169417903
best_error: 1.1557824144659505
best_error: 1.155782413614697
best_error: 1.1557809873525025
best_error: 1.1557809867495832
best_error: 1.155780986228389
best_error: 1.1557809840186022
best_error: 1.1557710710453812
best_error: 1.155771069291585
best_error: 1.155771067749056
best_error: 1.1557348449702975
best_error: 1.1557348414554947
best_error: 1.1556478926027987
best_error: 1.155647884275524
best_error: 1.1555039616533478
best_error: 1.1555039493054218
best_error: 1.1551087420356876
best_error: 1.1551087147452703
best_error: 1.154468216612798
best_error: 1.1544681818312115
best_error: 1.1485628672736792
best_error: 1.1485628002267279
best_error: 1.1479686504289055
best_error: 1.1479685813261349
best_error: 1.146661323390456
best_error: 1.1466612720448166
best_error: 1.1462287926606782
best_error: 1.1462287680645893
best_error: 1.146093811741689
best_error: 1.1460937813301806
best_error: 1.1460035707593237
best_error: 1.1460035403404802
best_error: 1.1458850060535237
best_error: 1.1458849837288316
best_error: 1.1458689370979556
best_error: 1.1458689152120132
best_error: 1.1458670686005468
best_error: 1.1458670480858757
best_error: 1.1458668232337632
best_error: 1.1458668027789236
best_error: 1.1458662169617746
best_error: 1.145866196824209
best_error: 1.1458657875520046
best_error: 1.145865767414995
best_error: 1.145864530042853
best_error: 1.1458645108693202
best_error: 1.1458581815196558
best_error: 1.1458581621885855
best_error: 1.1458428189183743
best_error: 1.1458428022262042
best_error: 1.1458137642475805
best_error: 1.1458137484801432
best_error: 1.1457497518005129
best_error: 1.1457497429646168
best_error: 1.1455914224388335
best_error: 1.145591415476746
best_error: 1.1454355852144638
best_error: 1.1454355801351894
best_error: 1.1452393181587048
best_error: 1.1452393084398726
best_error: 1.1450475923599865
best_error: 1.1450475681378807
best_error: 1.1450206469731676
best_error: 1.1450206224766308
best_error: 1.144919215995836
best_error: 1.1449191904446057
best_error: 1.1432787009832373
best_error: 1.1432786693838586
best_error: 1.1278732351061256
best_error: 1.1278732023459028
best_error: 1.1049632706931565
best_error: 1.104963159619894
best_error: 1.1049605376616314
best_error: 1.104959800103385
