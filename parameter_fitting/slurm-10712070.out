ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.606961397919422
best_error: 13.606961262515458
best_error: 12.200110921231165
best_error: 12.200110917863302
best_error: 12.200110904322203
best_error: 12.076024423149796
best_error: 12.076024419059728
best_error: 12.076024413824333
best_error: 11.237888855187439
best_error: 11.237888845549389
best_error: 11.237888838430578
best_error: 10.666639998686652
best_error: 10.666639986023961
best_error: 10.493141373334215
best_error: 10.493141360135361
best_error: 10.459932182381696
best_error: 10.459932168708121
best_error: 10.44987447111192
best_error: 10.449874457305071
best_error: 8.640732035960378
best_error: 8.640731977121758
best_error: 8.640731903766937
best_error: 8.636257461328533
best_error: 8.636257409219462
best_error: 8.6362573273408
best_error: 8.632234090363577
best_error: 8.632234043625672
best_error: 8.632233954005796
best_error: 8.629847611861933
best_error: 8.629847569259503
best_error: 8.629847474385297
best_error: 7.508378846698247
best_error: 7.508378782961933
best_error: 7.508378712072058
best_error: 6.808817731131357
best_error: 6.808817671496345
best_error: 6.80881760178076
best_error: 6.502509229626365
best_error: 6.502509171430501
best_error: 6.502509102827235
best_error: 6.354671657124209
best_error: 6.354671598064703
best_error: 6.3546715306215855
best_error: 6.280292434972369
best_error: 6.280292370529892
best_error: 6.280292308021599
best_error: 6.231511644587273
best_error: 6.2315115770391625
best_error: 6.231511517454656
best_error: 6.223335011359267
best_error: 6.2233349430725085
best_error: 6.223334885300679
best_error: 6.219815081387486
best_error: 6.219815012781965
best_error: 6.219814955271871
best_error: 6.2185455763815725
best_error: 6.218545507661046
best_error: 6.218545450479777
best_error: 6.2178106861515605
best_error: 6.217810617364461
best_error: 6.21781056023784
best_error: 6.2173450999347715
best_error: 6.217345031105496
best_error: 6.217344974013499
best_error: 6.217110786203566
best_error: 6.2171107173530675
best_error: 6.217110660278486
best_error: 6.216947891142489
best_error: 6.216947822277238
best_error: 6.216947765214769
best_error: 6.216920994106381
best_error: 6.216920925238348
best_error: 6.216920868177388
best_error: 6.2169058382407805
best_error: 6.216905769371166
best_error: 6.216905712311096
best_error: 6.216884086744251
best_error: 6.216884017872385
best_error: 6.216883960813555
best_error: 6.21687648123649
best_error: 6.216876412363834
best_error: 6.216876355305432
best_error: 6.216872610099847
best_error: 6.216872541226788
best_error: 6.216872484168585
best_error: 6.216866947239364
best_error: 6.2168668783657175
best_error: 6.216866821307859
best_error: 6.216865046224614
best_error: 6.216864977350774
best_error: 6.216864920293034
best_error: 6.216863951217833
best_error: 6.216863882343871
best_error: 6.21686382528617
best_error: 6.216863338671213
best_error: 6.2168632697971935
best_error: 6.21686321273952
best_error: 6.2168624525389315
best_error: 6.216862383664819
best_error: 6.216862326607217
best_error: 6.216862147691628
best_error: 6.2168620788174795
best_error: 6.216862021759903
best_error: 6.216861995651188
best_error: 6.216861926777027
best_error: 6.216861869719434
best_error: 6.21686177263651
best_error: 6.216861703762335
best_error: 6.216861646704764
best_error: 6.216861572329217
best_error: 5.113666939773507
best_error: 5.1136667820908155
best_error: 4.613743854866169
best_error: 4.613743635318107
best_error: 4.443949472141888
best_error: 4.4439492259465485
best_error: 3.817791053697481
best_error: 3.817790643451062
best_error: 3.8177811527691983
best_error: 3.817780742521463
best_error: 3.817741548736407
best_error: 3.8177411384834254
best_error: 3.817583127491061
best_error: 3.817582717217121
best_error: 3.816949360679716
best_error: 3.816948950321971
best_error: 3.8144129839613328
best_error: 3.814412573268304
best_error: 3.8042712118365034
best_error: 3.8042708011400177
best_error: 3.763572207836323
best_error: 3.7635717960754427
best_error: 3.7464436399119814
best_error: 3.7464432278118105
best_error: 3.7361263970316747
best_error: 3.736126324127266
best_error: 3.735931446615767
best_error: 3.735931033724068
best_error: 3.735921433113635
best_error: 3.7359210202206197
best_error: 3.735881378783923
best_error: 3.7358809658856797
best_error: 3.735721156326751
best_error: 3.735720743407553
best_error: 3.735080184282202
best_error: 3.7350797712792105
best_error: 3.73475442783273
best_error: 3.734754014787132
best_error: 3.7345312798577486
best_error: 3.734530866782994
best_error: 3.7344383246743247
best_error: 3.7344379115874125
best_error: 3.7344283016566417
best_error: 3.734427888568406
best_error: 3.734424240692504
best_error: 3.734423827603755
best_error: 3.7344233581187556
best_error: 3.7344229450298845
best_error: 3.7344223733744677
best_error: 3.734422236835933
best_error: 3.734422192549895
best_error: 3.7344221196576024
