ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 74
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 107.86289122273689
best_error: 107.86289110324127
best_error: 107.86289103860062
best_error: 19.677095411982513
best_error: 19.677095411979995
best_error: 19.677095407502755
best_error: 19.675381750351352
best_error: 19.675381745824634
best_error: 19.66834376997494
best_error: 19.668343765252118
best_error: 19.63686610133882
best_error: 19.63686609567615
best_error: 19.411458777068077
best_error: 19.411458761964518
best_error: 19.397783668504402
best_error: 19.397783652696518
best_error: 19.38321300279052
best_error: 19.383212986217877
best_error: 13.078308039633663
best_error: 13.07830802410551
best_error: 12.893204882461914
best_error: 12.893204811867248
best_error: 12.879230358494413
best_error: 12.879230350174396
best_error: 12.879230348623548
best_error: 12.879230347547143
best_error: 12.876827374469048
best_error: 12.876827328038324
best_error: 12.876048345506309
best_error: 12.876048299012446
best_error: 12.875966127863434
best_error: 12.875966081650079
best_error: 12.875961537172705
best_error: 12.875961528860689
best_error: 12.8759615273327
best_error: 12.875961526242154
best_error: 12.875957860801982
best_error: 12.87595781458794
best_error: 12.875955463680794
best_error: 12.875955455368832
best_error: 12.875955453840804
best_error: 12.87595545275028
best_error: 12.875954372494139
best_error: 12.875954364182196
best_error: 12.875954362654152
best_error: 12.875954361563632
best_error: 12.867233156078111
best_error: 12.86723314776764
best_error: 12.867233146303725
best_error: 12.867233145192545
best_error: 12.834009348513394
best_error: 12.834009340593063
best_error: 12.834009339230075
best_error: 12.834009337803554
best_error: 12.729275260537834
best_error: 12.729275255033627
best_error: 12.729275253822658
best_error: 12.729275250470788
best_error: 12.657487984360372
best_error: 12.657487983175141
best_error: 12.657487967965473
best_error: 12.643180499967027
best_error: 12.643180499110965
best_error: 12.643180483276474
best_error: 12.613479103694367
best_error: 12.61347910140895
best_error: 12.61347908588876
best_error: 12.569375974010867
best_error: 12.56937595874216
best_error: 12.566926647852558
best_error: 12.566926632326041
best_error: 12.550463966471222
best_error: 12.550463952265972
best_error: 12.434570227688164
best_error: 12.434570213487767
best_error: 12.38827931949496
best_error: 12.38827927567883
best_error: 12.229304562459049
best_error: 12.229304520654022
best_error: 12.198984405816999
best_error: 12.198984393799066
best_error: 12.172804602746854
best_error: 12.172804590410486
best_error: 12.137163107966964
best_error: 12.137163095359037
best_error: 11.984289748251769
best_error: 11.984289740450953
best_error: 11.984289740408109
best_error: 11.953853144208601
best_error: 11.95385313501908
best_error: 11.950680267022202
best_error: 11.950680257729074
best_error: 11.945585372318503
best_error: 11.945585362846561
best_error: 11.94530439417614
best_error: 11.945304384697584
best_error: 11.945239164991953
best_error: 11.9452391555112
best_error: 11.945236032478594
best_error: 11.945236022997738
best_error: 11.945233329147381
best_error: 11.945233319666439
best_error: 11.945232457674006
best_error: 11.94523241582305
best_error: 11.847422977526147
best_error: 11.847422972656863
best_error: 11.84742294890944
best_error: 11.842296022716592
best_error: 11.842296017736604
best_error: 11.842295994627007
best_error: 11.840836064734006
best_error: 11.840836059682118
best_error: 11.840836037196697
best_error: 11.840803464949989
best_error: 11.840803459897534
best_error: 11.84080343741187
best_error: 11.840774025746034
best_error: 11.840774020693068
best_error: 11.84077399820719
best_error: 11.84076009865728
best_error: 11.840760093604073
best_error: 11.84076007111809
best_error: 11.840759602206072
best_error: 11.840759597152857
best_error: 11.840759574666869
best_error: 11.840759154500248
best_error: 11.840759149447026
best_error: 11.840759126961036
best_error: 11.84075910161264
best_error: 11.840759096559415
best_error: 11.840759074073427
best_error: 11.84075905655153
best_error: 11.840759051498308
best_error: 11.840759029012318
best_error: 11.840759025833258
best_error: 11.84075902078003
best_error: 11.840758998294042
best_error: 11.840758996202135
best_error: 11.840758973716145
best_error: 11.840758970581604
best_error: 11.84075894809561
best_error: 11.840758932494559
best_error: 11.840758932095966
best_error: 11.84075892704274
best_error: 11.840758927015164
best_error: 11.840758926217084
best_error: 11.840758924881985
best_error: 11.840758921764257
