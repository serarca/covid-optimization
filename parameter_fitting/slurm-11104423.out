ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 105.52885148933753
best_error: 105.52885128975268
best_error: 105.52885128359716
best_error: 20.664592197615917
best_error: 20.664592197615267
best_error: 20.664592196453025
best_error: 20.6645063098478
best_error: 20.66450630868252
best_error: 20.66416098829564
best_error: 20.664160987120724
best_error: 20.662750698700968
best_error: 20.662750697486185
best_error: 20.656597685661442
best_error: 20.656597684263055
best_error: 20.618911306211015
best_error: 20.6189113033535
best_error: 20.490250002381234
best_error: 20.49024999125382
best_error: 18.359564931093274
best_error: 18.359564654786922
best_error: 16.472443545862724
best_error: 16.47244302426791
best_error: 14.631143225836716
best_error: 14.63114255628152
best_error: 14.249444210021846
best_error: 14.249444206598184
best_error: 14.249444190754309
best_error: 14.248848833788722
best_error: 14.248848829530843
best_error: 14.248848827239618
best_error: 14.248848825894038
best_error: 14.248033443902024
best_error: 14.248033439302217
best_error: 14.248033436756455
best_error: 14.247919814659845
best_error: 14.247919810059049
best_error: 14.247919807511444
best_error: 14.247816490847224
best_error: 14.247816486245531
best_error: 14.247816483696248
best_error: 14.247757538897641
best_error: 14.247757534295438
best_error: 14.247757531745197
best_error: 14.247704669853757
best_error: 14.247704665251096
best_error: 14.247704662699995
best_error: 14.247671126135874
best_error: 14.247671121531404
best_error: 14.24767111898576
best_error: 14.247613299349165
best_error: 14.247613294374492
best_error: 14.247613292114023
best_error: 14.247551446814889
best_error: 14.247551419799038
best_error: 14.247487994866592
best_error: 14.247487989891635
best_error: 14.247487987629507
best_error: 14.247469546724876
best_error: 14.247469541749876
best_error: 14.2474695394875
best_error: 14.24746572755412
best_error: 14.247465722579118
best_error: 14.247465720316686
best_error: 14.247463226097082
best_error: 14.247463221122072
best_error: 14.24746321885961
best_error: 14.247456299821025
best_error: 14.247456294845996
best_error: 14.247456292583445
best_error: 14.247455979333811
best_error: 14.247455974358775
best_error: 14.247455972096223
best_error: 14.247455701052921
best_error: 14.247455696077893
best_error: 14.24745569381533
best_error: 14.247455560821134
best_error: 14.247455555846107
best_error: 14.247455553583546
best_error: 14.247455471590767
best_error: 14.247455466615737
best_error: 14.247455464353173
best_error: 14.247455393878756
best_error: 14.247455388903724
best_error: 14.24745538664116
best_error: 14.247455368225816
best_error: 14.24745536325079
best_error: 14.247455360988223
best_error: 14.2474553439129
best_error: 14.247455338937874
best_error: 14.247455336675307
best_error: 14.247455320509442
best_error: 14.247455315534411
best_error: 14.247455313271846
best_error: 14.245841117790157
best_error: 14.2458411132048
best_error: 14.245841110646754
best_error: 14.239535985550917
best_error: 14.239535981428649
best_error: 14.239535978732789
best_error: 14.239535978535104
best_error: 14.239114083410843
best_error: 14.239114079293834
best_error: 14.23911407653399
best_error: 14.23911407639797
best_error: 14.225498453446495
best_error: 14.225498450468402
best_error: 14.225498430601847
best_error: 14.219660454551985
best_error: 14.219660430976274
best_error: 14.217946536747897
best_error: 14.217946514017346
best_error: 14.213426412185807
best_error: 14.213426389386255
best_error: 14.211575491347908
best_error: 14.211575468575852
best_error: 14.211062681425224
best_error: 14.21106265866533
best_error: 14.210867719679555
best_error: 14.210867696924284
best_error: 14.210812636978709
best_error: 14.210812614225222
best_error: 14.210795450933833
best_error: 14.210795428180905
best_error: 14.210786731897599
best_error: 14.210786709144966
best_error: 14.21077594539887
best_error: 14.210775922646565
best_error: 14.210772154883923
best_error: 14.210772132131767
best_error: 14.21077004982067
best_error: 14.2107700270686
best_error: 14.210766388758294
best_error: 14.21076636600633
best_error: 14.210765511698249
best_error: 14.210765488946322
best_error: 14.210765253387779
best_error: 14.210765230635836
best_error: 14.210765084648482
best_error: 14.210765061896542
best_error: 14.21076490839394
best_error: 14.210764885641996
best_error: 14.210764825552367
best_error: 14.210764802800444
best_error: 14.21076472458537
best_error: 14.210764701833444
best_error: 14.210764691695045
best_error: 14.210764668943119
best_error: 14.210764665112507
best_error: 14.210764642360594
best_error: 14.210764623227782
best_error: 14.210764617384939
best_error: 14.210764611072952
