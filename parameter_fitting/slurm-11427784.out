ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.51144354986733
best_error: 24.5114434733969
best_error: 4.812310330057004
best_error: 4.812310329219115
best_error: 4.811208178471073
best_error: 4.811208178429522
best_error: 4.811208178153106
best_error: 4.80672775758228
best_error: 4.806727757538289
best_error: 4.80672775725833
best_error: 4.787611545231058
best_error: 4.787611545175195
best_error: 4.787611544880662
best_error: 4.7323684590975565
best_error: 4.732368458989083
best_error: 4.732368458662057
best_error: 4.7304676008399085
best_error: 4.730467600728828
best_error: 4.730467600401614
best_error: 4.722570325176593
best_error: 4.722570325054043
best_error: 4.722570324726467
best_error: 4.685010624498863
best_error: 4.685010624304318
best_error: 4.685010623987851
best_error: 3.853815216129826
best_error: 3.8538151751084437
best_error: 3.520634669216987
best_error: 3.520634592873884
best_error: 3.0281388165084313
best_error: 3.028138723088814
best_error: 2.5928730515297165
best_error: 2.5928729522428178
best_error: 2.5672033396641876
best_error: 2.567203253211916
best_error: 2.2799772474752196
best_error: 2.2799771780778837
best_error: 2.2799771707831793
best_error: 2.2798130285113594
best_error: 2.279812903349902
best_error: 2.252838821247559
best_error: 2.252838720258384
best_error: 2.1808928201944973
best_error: 2.180892576659703
best_error: 2.084762685316122
best_error: 2.0847626789779867
best_error: 2.0847625606581
best_error: 2.0018006979296454
best_error: 2.001800628243176
best_error: 1.9935534563454786
best_error: 1.9935534419719518
best_error: 1.9921885303717803
best_error: 1.9921885267786543
best_error: 1.9921885247419866
best_error: 1.9905429983863578
best_error: 1.9905429701718618
best_error: 1.9886649950307507
best_error: 1.9886649947420485
best_error: 1.9886649943633592
best_error: 1.9886649885370433
best_error: 1.982092047224663
best_error: 1.9820920283813592
best_error: 1.9505458912477835
best_error: 1.9505458414792505
best_error: 1.7676202016657045
best_error: 1.7676200940074474
best_error: 1.7466322244068808
best_error: 1.7466321263073312
best_error: 1.7221542858313965
best_error: 1.7221542516046788
best_error: 1.7049195165524398
best_error: 1.7049194588473346
best_error: 1.6772635576902812
best_error: 1.6772634779122872
best_error: 1.5204902825666247
best_error: 1.5204902261488136
best_error: 1.4840568475278006
best_error: 1.484056789202416
best_error: 1.4712598352045938
best_error: 1.4712597467101756
best_error: 1.4033804296778232
best_error: 1.4033803659038417
best_error: 1.3686996693574245
best_error: 1.3686996312663187
best_error: 1.366657858322546
best_error: 1.3666578547943615
best_error: 1.359455429723334
best_error: 1.3594554266860275
best_error: 1.3160331621428296
best_error: 1.316033160336171
best_error: 1.3075218930468921
best_error: 1.3075218211654187
best_error: 1.3074321743849284
best_error: 1.3074320878972747
best_error: 1.3036367448968356
best_error: 1.3036367434963259
best_error: 1.3036367421093302
best_error: 1.3032237956692299
best_error: 1.3032237883529953
best_error: 1.3028630588849717
best_error: 1.3028630545225122
best_error: 1.3002497362289076
best_error: 1.3002496719559289
best_error: 1.2991373677752338
best_error: 1.2991373340704695
best_error: 1.2986375597468398
best_error: 1.298637558509921
best_error: 1.2986375573421012
best_error: 1.298542620655889
best_error: 1.2985426144282652
best_error: 1.298493625834768
best_error: 1.2984936195275771
best_error: 1.2979600931228783
best_error: 1.2979600882063567
best_error: 1.295487003677217
best_error: 1.2954869326224305
best_error: 1.294770685462286
best_error: 1.2947706527793639
best_error: 1.2889048626218809
best_error: 1.2889047850888502
best_error: 1.266591816555688
best_error: 1.2665916797393086
best_error: 1.2409488324747482
best_error: 1.2409488137954987
best_error: 1.2392406325936938
best_error: 1.2392406217778715
best_error: 1.2362980053967996
best_error: 1.2362979677396562
best_error: 1.231815498179986
best_error: 1.2318154416360718
best_error: 1.2297531684850211
best_error: 1.2297531227613934
best_error: 1.2242477499228261
best_error: 1.2242477203053854
best_error: 1.2231794111666752
best_error: 1.2231793813483212
best_error: 1.220710594508916
best_error: 1.2207105523290749
best_error: 1.2133573039193282
best_error: 1.213357283010693
best_error: 1.2115725466983442
best_error: 1.2115725426153936
best_error: 1.2110816157679722
best_error: 1.2110816093503727
best_error: 1.2105986448173387
best_error: 1.2105986383364706
best_error: 1.2103629479130087
best_error: 1.2103629436141878
best_error: 1.2099117709644533
best_error: 1.2099117668340813
best_error: 1.2096182955647081
best_error: 1.209618288323893
best_error: 1.209174867318646
best_error: 1.20917485986725
best_error: 1.2075262937899256
best_error: 1.2075262887320752
best_error: 1.203529288914648
best_error: 1.2035292840720764
best_error: 1.1922764739333471
best_error: 1.1922764537887465
best_error: 1.1853541823980682
best_error: 1.185354180815855
best_error: 1.1853541804125711
best_error: 1.1851840360185752
best_error: 1.1851840358775567
best_error: 1.1851840341358237
best_error: 1.1850539610932869
best_error: 1.18505396092127
best_error: 1.1850539593181912
best_error: 1.1848691546973602
best_error: 1.1848691541119387
best_error: 1.1848691529708424
best_error: 1.183020379149439
best_error: 1.1830203775208687
best_error: 1.1829644284561838
best_error: 1.182964428163836
best_error: 1.1829644270720232
best_error: 1.1813239617816982
best_error: 1.1813239585491608
best_error: 1.1763924853095131
best_error: 1.1763924468965588
best_error: 1.1723838552392305
best_error: 1.1723838009599372
best_error: 1.1623084456154056
best_error: 1.1623083870211066
best_error: 1.148719461412997
best_error: 1.1487194470937026
best_error: 1.148032060904299
best_error: 1.1480320518355647
best_error: 1.1426076798408367
best_error: 1.1426076351996217
best_error: 1.140425610806181
best_error: 1.1404256033157
best_error: 1.1395905318676294
best_error: 1.1395905306548983
best_error: 1.1389472839452224
best_error: 1.1389472755980705
best_error: 1.1353919750722645
best_error: 1.1353919499387377
best_error: 1.1331654554429118
best_error: 1.1331654546177208
best_error: 1.133165453021937
best_error: 1.133165452960777
best_error: 1.1282036785661633
best_error: 1.12820365311406
best_error: 1.1178751771304267
best_error: 1.1178751740324038
best_error: 1.1178751739856765
best_error: 1.1117839127310891
best_error: 1.1117838655995813
best_error: 1.1091435687316908
best_error: 1.1091435106854248
best_error: 1.108722388841536
best_error: 1.1087222942573123
best_error: 1.1021157150498584
best_error: 1.102115691096381
best_error: 1.097311363593075
best_error: 1.0973113562208843
best_error: 1.097253659240576
best_error: 1.0972536588122395
best_error: 1.097253658537542
best_error: 1.093883379463501
best_error: 1.0938833377900834
best_error: 1.0912085482985747
best_error: 1.0912085371613456
best_error: 1.0893122810643974
best_error: 1.0893122730392737
best_error: 1.088360929141912
best_error: 1.0883609287059421
best_error: 1.0878718485690835
best_error: 1.0878718343446938
best_error: 1.087472028158907
best_error: 1.0874720253062946
best_error: 1.087349832567436
best_error: 1.087349809924171
best_error: 1.0870531343711125
best_error: 1.0870531216909272
best_error: 1.0868816831213257
best_error: 1.086881675661585
best_error: 1.086825668047737
best_error: 1.0868256644423229
best_error: 1.0867942130036619
best_error: 1.0867942098684664
best_error: 1.0866784051435234
best_error: 1.0866784034151278
best_error: 1.0866783986190949
best_error: 1.0859250688776403
best_error: 1.085925047880185
best_error: 1.0859095301795214
best_error: 1.0859095023466145
best_error: 1.0859084822459593
best_error: 1.0859084530768612
best_error: 1.0859082488227754
best_error: 1.0859082189851608
best_error: 1.0859082033648688
