ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 72
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.69978353933942
best_error: 101.69978345866635
best_error: 101.69978335230641
best_error: 20.038077697883008
best_error: 20.038077697881278
best_error: 20.038077694287058
best_error: 20.0344152434554
best_error: 20.03441523975385
best_error: 20.01861635022124
best_error: 20.018616346030406
best_error: 19.92267300926225
best_error: 19.922673000266304
best_error: 19.634319141045694
best_error: 19.634319101820445
best_error: 17.958644814716862
best_error: 17.95864455356175
best_error: 16.008653239416066
best_error: 16.00865299023485
best_error: 15.4625804986613
best_error: 15.462580306889922
best_error: 15.090915358037744
best_error: 15.090915241342202
best_error: 15.06174687478181
best_error: 15.061746872154252
best_error: 15.061746864875285
best_error: 15.061746366725338
best_error: 15.025055981960541
best_error: 15.025055919554138
best_error: 14.850172462195076
best_error: 14.850172447706719
best_error: 14.850172445316355
best_error: 14.850172442629942
best_error: 14.383785420379276
best_error: 14.383785415019638
best_error: 14.383785408908796
best_error: 14.383785398741283
best_error: 13.943287870287506
best_error: 13.943287726615079
best_error: 13.650623881791297
best_error: 13.650623847685377
best_error: 13.562125864611865
best_error: 13.562125791501268
best_error: 13.449436535023837
best_error: 13.449436529316333
best_error: 13.449436526878678
best_error: 13.449436515600926
best_error: 13.422276033938893
best_error: 13.422276004476414
best_error: 13.355768923180673
best_error: 13.35576891688514
best_error: 13.355768915611256
best_error: 13.35576890375779
best_error: 13.334117068237816
best_error: 13.334117042291723
best_error: 13.274830494703732
best_error: 13.274830493694939
best_error: 13.274830491091215
best_error: 13.274830488056576
best_error: 13.274830476003117
best_error: 13.202826982828938
best_error: 13.202826909727325
best_error: 13.14845313377061
best_error: 13.148453117700011
best_error: 13.148453117372496
best_error: 13.12109182601213
best_error: 13.121091811647922
best_error: 13.121091810379657
best_error: 13.102177885254411
best_error: 13.102177872426907
best_error: 13.102177870124773
best_error: 13.076662322003548
best_error: 13.076662312405533
best_error: 13.076662307394987
best_error: 13.058326833653542
best_error: 13.058326529917817
best_error: 13.049192221394591
best_error: 13.049192216391859
best_error: 13.049192203501494
best_error: 13.049192192064538
best_error: 13.037837228399468
best_error: 13.037837221504118
best_error: 13.037837219088736
best_error: 13.037837214162735
best_error: 12.983414647079524
best_error: 12.983414408381435
best_error: 12.727717648456071
best_error: 12.727717448639668
best_error: 12.66848279735138
best_error: 12.668482602332835
best_error: 12.444568921097998
best_error: 12.444568901739972
best_error: 12.292216745466709
best_error: 12.29221671030098
best_error: 12.083466553275606
best_error: 12.083466525500082
best_error: 12.073996268250738
best_error: 12.073996258909307
best_error: 12.073996258838077
best_error: 12.073996252403132
best_error: 11.96045907758787
best_error: 11.960459070510595
best_error: 11.960459058054619
best_error: 11.96045905638633
best_error: 11.948351924052925
best_error: 11.948351903078612
best_error: 11.915486767142811
best_error: 11.915486744220024
best_error: 11.826732132515183
best_error: 11.826732115319013
best_error: 11.792821155974954
best_error: 11.79282101568599
best_error: 11.792229924812665
best_error: 11.792229909689535
best_error: 11.79073659524407
best_error: 11.790736449799255
best_error: 11.787445617692605
best_error: 11.787445604297913
best_error: 11.775965134043592
best_error: 11.775965121070486
best_error: 11.749119635158312
best_error: 11.749119619093795
best_error: 11.737031875547153
best_error: 11.737031856177568
best_error: 11.73449866889007
best_error: 11.734498649452933
best_error: 11.733302078892727
best_error: 11.73330205926672
best_error: 11.72838067590935
best_error: 11.728380656457004
best_error: 11.72213751527941
best_error: 11.722137421856926
best_error: 11.715059411570435
best_error: 11.715059393925927
best_error: 11.711098071245551
best_error: 11.711097991082703
best_error: 11.710972401342069
best_error: 11.710972383781721
best_error: 11.69532759441052
best_error: 11.695327590156069
best_error: 11.695327505249793
best_error: 11.694253199625141
best_error: 11.694253196239393
best_error: 11.693526403236563
best_error: 11.693526398999378
best_error: 11.693526314407066
best_error: 11.69347751543628
best_error: 11.693477511198905
best_error: 11.693477426605599
best_error: 11.693473680233122
best_error: 11.69347367685041
best_error: 11.693454702520766
best_error: 11.693454698283318
best_error: 11.69345461368956
best_error: 11.693450713821798
best_error: 11.693450710439176
best_error: 11.693449112309086
best_error: 11.693449108071622
best_error: 11.693449023477761
best_error: 11.693445923044447
best_error: 11.69344591880697
best_error: 11.693445834213044
best_error: 11.677542025839765
best_error: 11.677542022539187
best_error: 11.67247130638689
best_error: 11.672471299666451
best_error: 11.668156510477262
best_error: 11.66815651047726
best_error: 11.668156505422026
best_error: 11.649165641749754
best_error: 11.64916563838768
best_error: 11.623436527355732
best_error: 11.623436527245232
best_error: 11.623436523953558
best_error: 11.534914038261359
best_error: 11.534914035946779
best_error: 11.534914034035232
