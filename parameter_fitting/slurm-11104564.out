ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 76
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.10025359694333
best_error: 102.10025343870679
best_error: 102.10025341987047
best_error: 19.307101865521396
best_error: 19.307101865518266
best_error: 19.307101859892285
best_error: 19.304896292279537
best_error: 19.304896286588402
best_error: 19.295826334494627
best_error: 19.295826328544475
best_error: 19.255055668845436
best_error: 19.255055661655934
best_error: 18.96227712168485
best_error: 18.962277102809768
best_error: 18.91943263333783
best_error: 18.919432612408077
best_error: 18.869082517831792
best_error: 18.86908249487986
best_error: 13.618413693211338
best_error: 13.618413638679527
best_error: 11.906474386145273
best_error: 11.906474372639002
best_error: 11.906474370806777
best_error: 11.903374922409327
best_error: 11.903374750923962
best_error: 11.880523781185673
best_error: 11.880523768374516
best_error: 11.880523766091622
best_error: 11.839513308767078
best_error: 11.839513203244543
best_error: 11.833959599368033
best_error: 11.833959498278785
best_error: 11.833088938480394
best_error: 11.83308892783019
best_error: 11.833088923806747
best_error: 11.832880909695362
best_error: 11.832880808842003
best_error: 11.832879598298454
best_error: 11.832879587649982
best_error: 11.832879583626642
best_error: 11.832744054718212
best_error: 11.832744044070283
best_error: 11.832744040046254
best_error: 11.832201855516969
best_error: 11.832201844871221
best_error: 11.832201840844458
best_error: 11.830143577006593
best_error: 11.830143475373958
best_error: 11.824318679246549
best_error: 11.824318563691769
best_error: 11.804092976991864
best_error: 11.804092851395094
best_error: 11.720719113207801
best_error: 11.720719097932676
best_error: 11.720719096507125
best_error: 11.712428185401235
best_error: 11.712428170182505
best_error: 11.712428168701948
best_error: 11.179506301732461
best_error: 11.179506286991344
best_error: 11.179506081142947
best_error: 10.990066936667356
best_error: 10.990066914330097
best_error: 10.814643438499335
best_error: 10.814643435261026
best_error: 10.814643427470461
best_error: 10.80917642847744
best_error: 10.80917641971264
best_error: 10.809176415702156
best_error: 10.805825276402274
best_error: 10.805825269231443
best_error: 10.80582526401823
best_error: 10.804688628459012
best_error: 10.804688614129091
best_error: 10.80468861379392
best_error: 10.759538331274724
best_error: 10.759538319296247
best_error: 10.759538319270568
best_error: 10.740389785402733
best_error: 10.740389624234865
best_error: 10.733353793392252
best_error: 10.733353784285356
best_error: 10.733353784235632
best_error: 10.733353780552653
best_error: 10.727110562781048
best_error: 10.727110552648323
best_error: 10.727110552410098
best_error: 10.727110551597717
best_error: 10.727106490259285
best_error: 10.72710636280555
best_error: 10.725256003014184
best_error: 10.725255888778841
best_error: 10.72373421756912
best_error: 10.72373420530188
best_error: 10.723734204518141
best_error: 10.720264921860469
best_error: 10.720264909969474
best_error: 10.720264909258177
best_error: 10.6999618333034
best_error: 10.699961822629614
best_error: 10.699961822061725
best_error: 10.672289515205115
best_error: 10.672289503351767
best_error: 10.672289502430274
best_error: 10.666086680287943
best_error: 10.666086665845384
best_error: 10.666086664479938
best_error: 10.661611519092755
best_error: 10.661611504220515
best_error: 10.661611502643732
best_error: 10.651795880296664
best_error: 10.651795863237652
best_error: 10.651795860199467
best_error: 10.643082909486566
best_error: 10.643082894399058
best_error: 10.643082891652188
best_error: 10.63627114875669
best_error: 10.636271136743726
best_error: 10.636271134204938
best_error: 10.635054513510605
best_error: 10.635054374848794
best_error: 10.631080952532315
best_error: 10.63108093728524
best_error: 10.631080933875552
best_error: 10.613451165180434
best_error: 10.613451153977913
best_error: 10.613451151293003
best_error: 10.610294990890859
best_error: 10.610294977839715
best_error: 10.610294974744523
best_error: 10.605238708681288
best_error: 10.605238695828799
best_error: 10.605238692994131
best_error: 10.590172432723314
best_error: 10.590172418829148
best_error: 10.590009047780136
best_error: 10.59000903392398
best_error: 10.589943318315548
best_error: 10.589943304463068
best_error: 10.58993894796011
best_error: 10.589938934107884
best_error: 10.589938605991598
best_error: 10.589938594457294
best_error: 10.589938546056274
best_error: 10.58993851169616
