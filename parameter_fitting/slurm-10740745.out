ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.285430686410553
best_error: 11.285430682151302
best_error: 6.950727094121936
best_error: 6.950726693845286
best_error: 6.7949466745477825
best_error: 6.7949463038470626
best_error: 6.415777373060823
best_error: 6.41577726688103
best_error: 6.387725201769507
best_error: 6.387725169818464
best_error: 6.385345516263633
best_error: 6.38534551626362
best_error: 6.3853455093356635
best_error: 6.384456075549617
best_error: 6.384456075549604
best_error: 6.384456068562568
best_error: 6.38188931774383
best_error: 6.381889317743818
best_error: 6.381889313624945
best_error: 6.375481931809531
best_error: 6.375481931809523
best_error: 6.375481930744332
best_error: 6.357882768066439
best_error: 6.357882768066434
best_error: 6.346264569577312
best_error: 6.3462645695773094
best_error: 6.3056348884779245
best_error: 6.305634888477921
best_error: 6.169427875067089
best_error: 6.169427875067088
best_error: 5.390602494907608
best_error: 5.390602187144025
best_error: 5.235459265711712
best_error: 5.2354592657117065
best_error: 4.983500160756251
best_error: 4.983499971055661
best_error: 4.98338426302953
best_error: 4.9833841399280825
best_error: 4.915269813511449
best_error: 4.915269746997531
best_error: 4.899385215736802
best_error: 4.899385215736797
best_error: 4.899385211026913
best_error: 4.89852411032611
best_error: 4.898524110326102
best_error: 4.8985241083505695
best_error: 4.898524103674423
best_error: 4.897783101090054
best_error: 4.897783068430923
best_error: 4.893035202305692
best_error: 4.893035175773327
best_error: 4.865484585474587
best_error: 4.865484585474586
best_error: 4.865484575812976
best_error: 4.846385390525761
best_error: 4.846385287504107
best_error: 4.790600066788006
best_error: 4.790600066788001
best_error: 4.790600027539348
best_error: 4.790593950305402
best_error: 4.790593944233811
best_error: 4.790593914176892
best_error: 4.767740226432184
best_error: 4.76774022643218
best_error: 4.767740201713902
best_error: 4.729804100353222
best_error: 4.72980410035321
best_error: 4.729804093829154
best_error: 4.725413592762404
best_error: 4.725413592762396
best_error: 4.725413589454273
best_error: 4.725413587320515
best_error: 4.7247827779066345
best_error: 4.724782771879799
best_error: 4.724782765127656
best_error: 4.7243985576906615
best_error: 4.724398548745036
best_error: 4.724398544628317
best_error: 4.717488316334193
best_error: 4.717488316334182
best_error: 4.717488292349059
best_error: 4.707183184921491
best_error: 4.707183177636388
best_error: 4.707135003924709
best_error: 4.70713499731199
best_error: 4.707120688612961
best_error: 4.707120682114297
best_error: 4.707113220980033
best_error: 4.707113214585098
best_error: 4.707110588002595
best_error: 4.707110581606206
best_error: 4.707109334449945
best_error: 4.7071093280629075
best_error: 4.707108775059163
best_error: 4.707108768671815
best_error: 4.707108404975395
best_error: 4.707108398587838
best_error: 4.707108349154463
best_error: 4.707108349154448
best_error: 4.707108342960902
best_error: 4.70709424033891
best_error: 4.707094238902602
best_error: 4.707043678931574
best_error: 4.707043674923801
best_error: 4.70704171351666
best_error: 4.707041709562937
best_error: 4.707040559936924
best_error: 4.707040556165476
best_error: 4.70704002394375
best_error: 4.707040020171167
best_error: 4.707039609192031
best_error: 4.707039605509358
best_error: 4.707038846744314
best_error: 4.707038843060593
best_error: 4.70703879800619
best_error: 4.707038794322405
best_error: 4.707038758697852
best_error: 4.707038755033298
best_error: 4.707038736218582
best_error: 4.707038732570145
best_error: 4.707038720040279
best_error: 4.707038716391821
best_error: 4.7070387079550065
best_error: 4.70703870430653
best_error: 4.707038698406228
best_error: 4.70703869475774
best_error: 4.707038690891803
best_error: 4.707038687243308
best_error: 4.7070386861095885
best_error: 4.707038682461088
best_error: 4.7070386788927046
best_error: 4.707038676151866
best_error: 4.707038674385035
best_error: 4.707038673189143
