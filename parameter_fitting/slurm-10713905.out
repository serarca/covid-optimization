ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 18.441620181677713
best_error: 18.441620181579225
best_error: 18.441620178271677
best_error: 18.38247751375671
best_error: 18.382477513622867
best_error: 18.382477513505442
best_error: 18.382477511978994
best_error: 18.200939464457697
best_error: 18.20093946300092
best_error: 18.200939442802756
best_error: 18.139360654807426
best_error: 18.13936065283903
best_error: 18.139360625454174
best_error: 16.812901208924288
best_error: 16.81290119122247
best_error: 16.019742693476726
best_error: 16.019742467486616
best_error: 15.989660939496833
best_error: 15.989660904089835
best_error: 15.989660795083612
best_error: 15.833001150569494
best_error: 15.833001105069913
best_error: 15.83269825332849
best_error: 15.832698206948596
best_error: 15.832695412407809
best_error: 15.832695366040493
best_error: 15.832693334421425
best_error: 15.832693288063986
best_error: 15.799183889594737
best_error: 15.799183844552449
best_error: 15.787424903848356
best_error: 15.78742485285166
best_error: 15.687630028021339
best_error: 15.687630028020951
best_error: 15.687630026572453
best_error: 15.584904130657478
best_error: 15.584904123038562
best_error: 15.548876242255766
best_error: 15.548876242255353
best_error: 15.54887624042278
best_error: 15.535426205679078
best_error: 15.5354262027295
best_error: 15.533780208097458
best_error: 15.533780207970452
best_error: 15.533780206175862
best_error: 15.531731108464593
best_error: 15.531731107737695
best_error: 15.531731106493782
best_error: 15.516573971581884
best_error: 15.516573968615408
best_error: 15.512743705145233
best_error: 15.512743700412084
best_error: 15.494798884137545
best_error: 15.494798882552557
best_error: 15.494798880817513
best_error: 15.473530969060997
best_error: 15.473530969060578
best_error: 15.473530964673591
best_error: 15.392220411790333
best_error: 15.39222038046254
best_error: 15.378300834686971
best_error: 15.378300817834749
best_error: 15.371434303789062
best_error: 15.371434292414579
best_error: 15.37059050273333
best_error: 15.370590502025719
best_error: 15.370381072007525
best_error: 15.37038107200668
best_error: 15.370381071555112
best_error: 15.370374139503353
best_error: 15.370374139184099
best_error: 15.370349598624426
best_error: 15.370349598624014
best_error: 15.370347823503353
best_error: 15.370347823502943
best_error: 15.370346502984104
best_error: 15.37034650298369
best_error: 15.370345708653208
best_error: 15.370345708652794
best_error: 15.370345199756612
best_error: 15.370345199756198
best_error: 15.3703448578358
best_error: 15.370344857835386
best_error: 15.370342852707527
best_error: 15.370342852707111
best_error: 15.370342780593539
best_error: 15.370342780593127
best_error: 15.37034273448268
best_error: 15.370342734482264
best_error: 15.370342704485928
best_error: 15.370342704485514
best_error: 15.370342684455602
best_error: 15.370342684455188
best_error: 15.370342650079625
best_error: 15.37034265007921
best_error: 15.370342630801277
best_error: 15.37034263080086
best_error: 15.37034262010025
best_error: 15.370342620099839
best_error: 15.370342614239656
best_error: 15.370342614239242
best_error: 15.370313580744257
best_error: 15.370313580743844
best_error: 15.370211179580036
best_error: 15.370211179493936
best_error: 15.369984494890623
best_error: 15.369984494421791
best_error: 15.369950862115006
best_error: 15.369950861589775
best_error: 15.369847251335518
best_error: 15.369847250757456
best_error: 15.36955142828705
best_error: 15.369551428111969
best_error: 15.3695514278719
best_error: 15.369489144109732
best_error: 15.369489143538718
best_error: 15.36947236790379
best_error: 15.369472367291088
best_error: 15.369458784918905
best_error: 15.369458784304836
best_error: 15.369454285048347
best_error: 15.369454284436415
best_error: 15.369452508582278
best_error: 15.369452507966653
best_error: 15.369448644588935
best_error: 15.369448644587699
best_error: 15.369448644088367
best_error: 15.369440310252863
best_error: 15.369440310248507
best_error: 15.369440146492801
best_error: 15.369440146491568
best_error: 15.369439968906853
best_error: 15.369439968906367
best_error: 15.369439920422368
best_error: 15.36943992042232
best_error: 15.36943992042195
best_error: 15.369439894372727
best_error: 15.369439894371714
