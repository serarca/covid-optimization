ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.109608808106294
best_error: 23.109608733004208
best_error: 4.582650877998662
best_error: 4.582650876838479
best_error: 4.5798175347681305
best_error: 4.579817534705013
best_error: 4.579817534294879
best_error: 4.5681648167046065
best_error: 4.568164816635101
best_error: 4.568164816215362
best_error: 4.527697718988107
best_error: 4.527697718891555
best_error: 4.527697718440153
best_error: 4.525679034794686
best_error: 4.525679034696123
best_error: 4.525679034244181
best_error: 4.517293907138743
best_error: 4.517293907031548
best_error: 4.517293906577552
best_error: 4.477858578385637
best_error: 4.477858578230802
best_error: 4.4778585777721664
best_error: 4.036689741362349
best_error: 4.0366897380424165
best_error: 3.927433468869138
best_error: 3.927433463352155
best_error: 3.7771252245411358
best_error: 3.7771252148059897
best_error: 3.6727988913744065
best_error: 3.672798698357026
best_error: 3.649704837689864
best_error: 3.649704823353505
best_error: 2.656060305063284
best_error: 2.6560602959987074
best_error: 2.6560602837428093
best_error: 2.6552259043777076
best_error: 2.6552258787222422
best_error: 2.6204454717712253
best_error: 2.620445441823071
best_error: 2.418666102321204
best_error: 2.418666094172517
best_error: 2.4186660465767553
best_error: 2.34970666512673
best_error: 2.3497066598103715
best_error: 2.3497065955150873
best_error: 2.2662318034519724
best_error: 2.2662318023321406
best_error: 2.2662317152230327
best_error: 2.0419203224791844
best_error: 2.0419201949006487
best_error: 1.903689628204388
best_error: 1.9036895910229577
best_error: 1.9029018229313202
best_error: 1.9029017748694537
best_error: 1.8971022231870025
best_error: 1.8971021212926429
best_error: 1.8889787005683556
best_error: 1.8889786300867477
best_error: 1.7421261021840326
best_error: 1.742126053468887
best_error: 1.722782794603088
best_error: 1.7227827245791318
best_error: 1.7154201260093607
best_error: 1.715420125757686
best_error: 1.7154201255788393
best_error: 1.7154201210312396
best_error: 1.71349222258091
best_error: 1.7134922224051496
best_error: 1.7134922217257125
best_error: 1.7134922185586512
best_error: 1.711506375089559
best_error: 1.7115063612721726
best_error: 1.685475896100048
best_error: 1.6854757785051175
best_error: 1.6413536926338177
best_error: 1.6413534875875495
best_error: 1.4828824852157663
best_error: 1.4828822518023792
best_error: 1.410287612643174
best_error: 1.4102873743082844
best_error: 1.3740413989452154
best_error: 1.374041243357836
best_error: 1.3668696739975936
best_error: 1.3668696279731953
best_error: 1.3587379192577083
best_error: 1.358737854317289
best_error: 1.3189493645136179
best_error: 1.3189492555188236
best_error: 1.3146831887678838
best_error: 1.31468313544915
best_error: 1.313287835427277
best_error: 1.313287822937799
best_error: 1.313023473870014
best_error: 1.3130234710603108
best_error: 1.3129780826889261
best_error: 1.3129780808652043
best_error: 1.312732317510701
best_error: 1.3127323151786614
best_error: 1.312453829117045
best_error: 1.3124538152306444
best_error: 1.3120982594481805
best_error: 1.3120982457558101
best_error: 1.308135149328259
best_error: 1.3081351410198325
best_error: 1.2944379412900084
best_error: 1.294437940372262
best_error: 1.2289527212831006
best_error: 1.2289527208797955
best_error: 1.2289527189308778
best_error: 1.2289527160447349
best_error: 1.1422813765255246
best_error: 1.1422813349734762
best_error: 1.110585613172705
best_error: 1.1105856063872006
best_error: 1.1105855619609522
best_error: 1.0982751550655216
best_error: 1.0982750698541355
best_error: 1.0894369723495623
best_error: 1.0894369682781218
best_error: 1.0894368986603569
best_error: 1.0772535615205383
best_error: 1.0772535542816442
best_error: 1.0772535518465185
best_error: 1.0768074512209467
best_error: 1.0768074487428174
best_error: 1.0768074387577515
best_error: 1.0760319024672662
best_error: 1.0760318952853647
best_error: 1.0759733700120226
best_error: 1.0759733677613532
best_error: 1.0757167329601258
best_error: 1.0757167298162056
best_error: 1.0756144154517855
best_error: 1.0756144147502775
best_error: 1.0756144145515345
best_error: 1.0756144140989174
best_error: 1.0751233077713314
best_error: 1.0751232952441665
best_error: 1.0737743832580262
best_error: 1.0737743425626214
best_error: 1.0702660384805076
best_error: 1.0702659647592254
best_error: 1.0568170349576087
best_error: 1.0568169055570384
best_error: 1.0565285376662588
best_error: 1.0565283784570045
best_error: 1.05571804452967
best_error: 1.0557178440618866
best_error: 1.043664285906659
best_error: 1.043664114568229
best_error: 1.0216510731534436
best_error: 1.0216509876132118
best_error: 1.0138434737503006
best_error: 1.0138434703868584
best_error: 1.0138434429962104
best_error: 1.0120455677085582
best_error: 1.0120455592992137
best_error: 1.0120455495453218
best_error: 1.0114136425065205
best_error: 1.0114136311562791
best_error: 1.01141363066744
best_error: 1.0110912478708352
best_error: 1.0110912339707694
best_error: 1.0110247005281763
best_error: 1.0110246856299936
best_error: 0.9998260880234217
best_error: 0.9998260740971268
best_error: 0.9958910523885234
best_error: 0.9958910399768289
best_error: 0.9859074518701457
best_error: 0.9859074434714516
best_error: 0.9859074343066205
best_error: 0.9845083058582095
best_error: 0.9845082969011563
best_error: 0.9845082927674116
best_error: 0.9802922825036806
best_error: 0.9802922710845499
best_error: 0.9801636946630782
best_error: 0.9801636884979351
best_error: 0.9801636882385997
best_error: 0.9774629935631935
best_error: 0.9774629865896091
best_error: 0.9759686807053477
best_error: 0.9759686772797309
best_error: 0.9759686763512794
best_error: 0.9748280944806936
best_error: 0.9748280916633618
best_error: 0.9748280905175325
best_error: 0.9737506191862602
best_error: 0.9737506180634865
best_error: 0.9737506171649993
best_error: 0.9737506165003506
best_error: 0.9723002711970006
best_error: 0.9723002681414248
best_error: 0.9691955975610347
best_error: 0.9691955944267854
best_error: 0.9650108792704376
best_error: 0.9650108534272915
best_error: 0.9630799381199517
best_error: 0.963079916855649
best_error: 0.9590517210573956
best_error: 0.9590517115536143
best_error: 0.956097156762289
best_error: 0.9560971447500975
best_error: 0.9491375313884634
best_error: 0.9491375140033798
best_error: 0.9468255464502391
best_error: 0.9468255434304658
best_error: 0.9468255326651781
best_error: 0.9466621070261121
best_error: 0.9466621018944689
best_error: 0.9466158794153219
best_error: 0.9466158778242867
best_error: 0.946578301977962
best_error: 0.9465782987913361
best_error: 0.9465016361218949
best_error: 0.9465016333189085
best_error: 0.9461614576725741
best_error: 0.9461614541719655
best_error: 0.9439381697794963
best_error: 0.9439381648800869
best_error: 0.9435838805240847
best_error: 0.9435838716419102
best_error: 0.9425345042718355
best_error: 0.9425344992647101
best_error: 0.9403177752516778
best_error: 0.9403177730645976
best_error: 0.9388980401797238
best_error: 0.9388980225962607
best_error: 0.9380114052653774
best_error: 0.9380114041419456
best_error: 0.9374940072011709
best_error: 0.937494003405186
best_error: 0.935031129778709
best_error: 0.9350311167947148
best_error: 0.9303935035014507
best_error: 0.9303935012016155
best_error: 0.9303934992751021
best_error: 0.9303934980080367
best_error: 0.9256480151689795
best_error: 0.9256480145335908
best_error: 0.9256480135924265
best_error: 0.9256480078347212
best_error: 0.9168823292329129
best_error: 0.9168823250689124
best_error: 0.9168823202001611
best_error: 0.9138797874635549
best_error: 0.9138797391117656
best_error: 0.9138093363531133
best_error: 0.9138092905639086
best_error: 0.9127983432981458
best_error: 0.9127982956235375
best_error: 0.9124560304069952
best_error: 0.9124559985382829
best_error: 0.9117557976930278
best_error: 0.9117557642403099
best_error: 0.9089067286712407
best_error: 0.908906618629676
best_error: 0.9047057262898559
best_error: 0.9047057150042563
best_error: 0.9045440255782876
best_error: 0.904544017385161
best_error: 0.9045281055623619
best_error: 0.9045281022146855
best_error: 0.9044525294654789
best_error: 0.9044525292361955
best_error: 0.9044413062165414
best_error: 0.9044413049947911
best_error: 0.9044401093518156
best_error: 0.9044401089094063
best_error: 0.9044400594191875
best_error: 0.9044400593874997
best_error: 0.9044400386160778
best_error: 0.9044400385831043
best_error: 0.9044400232044072
best_error: 0.9044400231613801
best_error: 0.9044400145468117
best_error: 0.9044400145360367
best_error: 0.9044400144904919
best_error: 0.9044399725030361
best_error: 0.9044399721982821
best_error: 0.9044396527342942
best_error: 0.9044396517430694
best_error: 0.9044395250613178
best_error: 0.9044395248227635
best_error: 0.904439388136835
best_error: 0.9044393878760034
best_error: 0.9044389054510753
best_error: 0.9044389054259405
best_error: 0.9044379088229273
best_error: 0.9044379087044025
best_error: 0.9044323831771716
best_error: 0.9044323808163292
