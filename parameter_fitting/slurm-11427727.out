ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.256632826804488
best_error: 25.256632381803357
best_error: 5.008361761414896
best_error: 5.008361761045714
best_error: 5.0083281348961
best_error: 5.008328134890633
best_error: 5.00832813485389
best_error: 5.008193399414676
best_error: 5.008193399409186
best_error: 5.0081933993724075
best_error: 5.007650756195792
best_error: 5.007650756190205
best_error: 5.007650756153284
best_error: 5.005418912263779
best_error: 5.005418912257763
best_error: 5.005418912220271
best_error: 4.995355542642343
best_error: 4.99535554263393
best_error: 4.995355542594086
best_error: 4.907417964626959
best_error: 4.9074179644286
best_error: 4.829285708296248
best_error: 4.8292857068365285
best_error: 4.378814658643676
best_error: 4.378814617664284
best_error: 4.038553885722212
best_error: 4.038553800078892
best_error: 3.6738675764526145
best_error: 3.673867478877848
best_error: 3.251710154300605
best_error: 3.2517099887708425
best_error: 2.816828778738523
best_error: 2.816828551062961
best_error: 2.7088222565780193
best_error: 2.7088222549829535
best_error: 2.708822245123362
best_error: 2.6817423623472747
best_error: 2.681742339246341
best_error: 2.6814857723270547
best_error: 2.6814857478773
best_error: 2.6748405839574763
best_error: 2.6748405365381736
best_error: 2.5993195014617316
best_error: 2.5993194228111167
best_error: 2.333199352722807
best_error: 2.333199273720817
best_error: 2.192819504810855
best_error: 2.1928194345977583
best_error: 2.0939567567314907
best_error: 2.0939566946138233
best_error: 2.0070965733004345
best_error: 2.0070964803782076
best_error: 1.9278884495250697
best_error: 1.9278883149853692
best_error: 1.8900926331246672
best_error: 1.8900925175673018
best_error: 1.876322169949409
best_error: 1.876322099155104
best_error: 1.8415912436357873
best_error: 1.8415911813750325
best_error: 1.8151497988167724
best_error: 1.8151496155546047
best_error: 1.789691097049226
best_error: 1.7896910754059858
best_error: 1.789691070930179
best_error: 1.7783709598758668
best_error: 1.7783709155329752
best_error: 1.7739320759041661
best_error: 1.7739320446622018
best_error: 1.7725474407373798
best_error: 1.772547425265224
best_error: 1.7719273894892944
best_error: 1.7719273880179427
best_error: 1.7718946946120284
best_error: 1.7718946944093157
best_error: 1.7718946943705458
best_error: 1.7718946939585083
best_error: 1.771857045254883
best_error: 1.771857045078741
best_error: 1.7718570450424844
best_error: 1.771857044609751
best_error: 1.7716209874918705
best_error: 1.771620987009043
best_error: 1.7716209868903514
best_error: 1.7716209868688702
best_error: 1.7713199671781488
best_error: 1.7713199670728939
best_error: 1.7713199665628852
best_error: 1.770031432683546
best_error: 1.770031395558243
best_error: 1.7665449568244855
best_error: 1.7665449193708005
best_error: 1.7624987065092186
best_error: 1.7624987052741241
best_error: 1.7624986897360047
best_error: 1.761197860916871
best_error: 1.7611978395877828
best_error: 1.7602726691948638
best_error: 1.7602726690584958
best_error: 1.7602726685489074
best_error: 1.7602726684977852
best_error: 1.7602726683516874
best_error: 1.7602726681881657
best_error: 1.7601460364130959
best_error: 1.7601460357615366
best_error: 1.7601460356838456
best_error: 1.760146035639727
best_error: 1.760139070727256
best_error: 1.7601390694261563
best_error: 1.7601332629207627
best_error: 1.760133261063107
best_error: 1.7601187222785912
best_error: 1.7601187207450864
best_error: 1.7598625748732093
best_error: 1.7598625748415886
best_error: 1.7598625745247898
best_error: 1.7598625741554756
best_error: 1.7598625739718148
best_error: 1.7591167090121147
best_error: 1.759116696287133
best_error: 1.7577778034560974
best_error: 1.7577777701034918
best_error: 1.755820367004561
best_error: 1.7558202950012287
best_error: 1.7506318853962164
best_error: 1.7506318021142304
best_error: 1.7382226242200347
best_error: 1.7382225715124267
best_error: 1.7335179815039115
best_error: 1.733517950425703
best_error: 1.7335074145022953
best_error: 1.733507384231752
best_error: 1.7329594004534312
best_error: 1.7329593797366072
best_error: 1.7326289581392484
best_error: 1.7326289559005432
best_error: 1.7326289491157763
best_error: 1.730635290843651
best_error: 1.7306352762964199
best_error: 1.7285682450705366
best_error: 1.7285682414670196
best_error: 1.7270374536482083
best_error: 1.727037452990972
best_error: 1.727037452570513
best_error: 1.7249335232031089
best_error: 1.724933523178111
best_error: 1.7249335225643727
best_error: 1.7249335220138866
best_error: 1.724933494629638
best_error: 1.7249334946026607
best_error: 1.7249334939909706
best_error: 1.7249334934402947
best_error: 1.7249231335661381
best_error: 1.7249231328970702
best_error: 1.724923132429428
best_error: 1.7194413363173868
best_error: 1.7194413356589562
best_error: 1.7174008139725936
best_error: 1.7174008132047198
best_error: 1.7174008121291067
best_error: 1.7154371366246233
best_error: 1.7154371335662604
best_error: 1.7152402966228941
best_error: 1.7152402929597625
best_error: 1.715074458985159
best_error: 1.7150744572695755
best_error: 1.7149300554715305
best_error: 1.7149300554311484
best_error: 1.7149300547604898
best_error: 1.714711459768603
best_error: 1.7147114590804253
best_error: 1.7130991542183513
best_error: 1.7130991504185118
best_error: 1.7090555462530919
best_error: 1.7090555458170968
best_error: 1.7090555455463596
best_error: 1.7090555442380602
best_error: 1.709055544217288
best_error: 1.7074268285297678
best_error: 1.7074268140770121
best_error: 1.704778882251576
best_error: 1.7047788448683416
best_error: 1.704740539599257
best_error: 1.7047404918705091
best_error: 1.7047040511278562
best_error: 1.7047039924893221
best_error: 1.703661911967076
best_error: 1.703661884736049
best_error: 1.7036189183735437
best_error: 1.703618886997083
best_error: 1.7029747827525237
best_error: 1.7029747361642469
best_error: 1.7021093482144727
best_error: 1.7021093476638358
best_error: 1.7021093475496345
best_error: 1.7021093463308563
best_error: 1.7013543832675173
best_error: 1.7013543814507353
best_error: 1.7005063311070636
best_error: 1.7005063308542288
best_error: 1.700506318961014
best_error: 1.7001425166800663
best_error: 1.7001425147938933
best_error: 1.7001425058930502
best_error: 1.6981988947816478
best_error: 1.6981988732200812
best_error: 1.697793239923489
best_error: 1.69779320089331
best_error: 1.697155875421842
best_error: 1.697155850012501
best_error: 1.6971552600192814
best_error: 1.6971552348655932
best_error: 1.6969572352051532
best_error: 1.6969572349247515
best_error: 1.6969572349055542
best_error: 1.6965977606963916
best_error: 1.6965977581103493
best_error: 1.6965123637176611
best_error: 1.696512363557481
best_error: 1.696499176293779
best_error: 1.6964991742399391
best_error: 1.6964969775726217
best_error: 1.696496976659206
best_error: 1.6964934458605347
best_error: 1.6964934448774482
best_error: 1.6964884512781373
best_error: 1.6964884502585482
best_error: 1.6964815351722848
best_error: 1.6964815350941818
best_error: 1.6964725496764035
best_error: 1.6964725491525774
best_error: 1.6964507925600056
best_error: 1.6964507917685197
best_error: 1.6963749388641929
best_error: 1.6963749342752497
best_error: 1.6962111487419773
best_error: 1.6962111452704565
best_error: 1.696155103288727
best_error: 1.696155087645986
best_error: 1.6959297893669905
best_error: 1.695929773298725
best_error: 1.695868347276998
best_error: 1.6958683460211361
best_error: 1.6952795325173176
best_error: 1.6952795311772437
best_error: 1.69523636784274
best_error: 1.6952363520934202
best_error: 1.6950137363887083
best_error: 1.6950137249646826
best_error: 1.6940440773403722
best_error: 1.694044067946908
best_error: 1.6939879322135862
best_error: 1.6939879206395552
best_error: 1.693796024850547
best_error: 1.6937960243584613
best_error: 1.6937960242050822
best_error: 1.6937480618338767
best_error: 1.6937480610035163
best_error: 1.6937468092335035
best_error: 1.6937468089152126
best_error: 1.6937467894840759
best_error: 1.6937467891439066
best_error: 1.6937467735108143
best_error: 1.6937467733331864
best_error: 1.6937467405664626
best_error: 1.693746740310387
best_error: 1.6937467381486773
best_error: 1.6937467377178255
