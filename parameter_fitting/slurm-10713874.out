ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.547887605986881
best_error: 13.547887603589167
best_error: 13.547887594221969
best_error: 13.460435855516803
best_error: 13.460435851968247
best_error: 13.460435838204452
best_error: 11.472086056960231
best_error: 11.472086025766034
best_error: 11.457054849522738
best_error: 11.457054815332823
best_error: 11.440992827149769
best_error: 11.440992793344728
best_error: 10.501684696894625
best_error: 10.501684604915756
best_error: 9.85532316476519
best_error: 9.855323054972278
best_error: 9.055060288558245
best_error: 9.05506009841724
best_error: 6.812923364744083
best_error: 6.812923362724661
best_error: 6.812923339927746
best_error: 6.189049097172113
best_error: 6.18904907656046
best_error: 6.189049067769678
best_error: 5.901917331758975
best_error: 5.901917091875611
best_error: 5.802966959888762
best_error: 5.802966448241048
best_error: 4.732329245832358
best_error: 4.732329104222375
best_error: 4.702551514417079
best_error: 4.702550866163142
best_error: 4.682692977241693
best_error: 4.682692873907129
best_error: 4.646573749073968
best_error: 4.646573689550132
best_error: 4.6394359012445205
best_error: 4.6394358586121704
best_error: 4.635292627950177
best_error: 4.635292599251985
best_error: 4.633734155435734
best_error: 4.63373413465641
best_error: 4.632890958344618
best_error: 4.632890941628285
best_error: 4.632480526824885
best_error: 4.632480512127023
best_error: 4.631031909848618
best_error: 4.63103190903071
best_error: 4.631031901073756
best_error: 4.630915372318361
best_error: 4.6309153714745745
best_error: 4.630915363661364
best_error: 4.6308367317216295
best_error: 4.630836730860238
best_error: 4.630836723144733
best_error: 4.63078096379655
best_error: 4.630780962922625
best_error: 4.630780955276771
best_error: 4.630738390954592
best_error: 4.63073839007107
best_error: 4.630738382478577
best_error: 4.630701115175705
best_error: 4.630701114283754
best_error: 4.6307011067381545
best_error: 4.630655669428991
best_error: 4.630655668526712
best_error: 4.630655661038455
best_error: 4.630562374166532
best_error: 4.630562373242974
best_error: 4.630562365873104
best_error: 4.630478172576849
best_error: 4.630477543718387
best_error: 4.6304519916059235
best_error: 4.630451990656993
best_error: 4.6304519834283315
best_error: 4.6304455799475255
best_error: 4.630445578997443
best_error: 4.6304455717765
best_error: 4.630441015032098
best_error: 4.63044101408114
best_error: 4.63044100686572
best_error: 4.63043753796332
best_error: 4.630437537011735
best_error: 4.630437529800497
best_error: 4.630434483047187
best_error: 4.6304344820950565
best_error: 4.630434474887498
best_error: 4.630430706291698
best_error: 4.630430705338849
best_error: 4.630430698135866
best_error: 4.63042272339284
best_error: 4.63042272243851
best_error: 4.6304227152451904
best_error: 4.630413595996176
best_error: 4.630412967140272
best_error: 4.630271114643061
best_error: 4.63027111373089
best_error: 4.630271106392639
best_error: 4.630045439021426
best_error: 4.630045438158137
best_error: 4.630045430677674
best_error: 4.629177990375947
best_error: 4.629177989818247
best_error: 4.629177981668118
best_error: 4.626248150651872
best_error: 4.626248138152887
best_error: 4.62037754465986
best_error: 4.620377522862684
best_error: 4.618110571608485
best_error: 4.618110548925026
best_error: 4.617902059387031
best_error: 4.61790203767146
best_error: 4.61775220640762
best_error: 4.61775218474984
best_error: 4.617740821951792
best_error: 4.617740800298698
best_error: 4.617734691467767
best_error: 4.617734669817223
best_error: 4.617731366272099
best_error: 4.617731344622919
best_error: 4.61772952462759
best_error: 4.617729502978751
best_error: 4.617728531983108
best_error: 4.617728510334414
best_error: 4.61772799553159
best_error: 4.6177279738830155
best_error: 4.617727705193126
best_error: 4.61772768354462
best_error: 4.617727548039998
best_error: 4.617727526391523
best_error: 4.617727463111744
best_error: 4.617727463109912
best_error: 4.617727428598296
best_error: 4.617727428596464
best_error: 4.61772742523433
best_error: 4.617727425232501
best_error: 4.617727422889448
best_error: 4.61772742288762
best_error: 4.617727414848189
