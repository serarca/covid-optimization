ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.248378459567906
best_error: 22.248378338469124
best_error: 4.50303782001
best_error: 4.503037818474085
best_error: 4.500858431318257
best_error: 4.500858431271286
best_error: 4.50085843091659
best_error: 4.491917237144136
best_error: 4.491917237093764
best_error: 4.491917236734505
best_error: 4.452246637810195
best_error: 4.452246637742106
best_error: 4.452246637363922
best_error: 4.1747924268637355
best_error: 4.174792426396957
best_error: 4.174792426086094
best_error: 2.8393311207480787
best_error: 2.839331089606569
best_error: 2.8212048495572737
best_error: 2.8212048306188926
best_error: 2.7982009275786077
best_error: 2.798200926914969
best_error: 2.7982009074701835
best_error: 2.701032999496108
best_error: 2.701032967880307
best_error: 2.5910465630432897
best_error: 2.5910465299345034
best_error: 2.591046529351097
best_error: 2.42512887635577
best_error: 2.425128846475057
best_error: 2.42512880629964
best_error: 2.307980061488521
best_error: 2.307980032290764
best_error: 2.3079799706054347
best_error: 2.1758398031132993
best_error: 2.175839773464981
best_error: 2.17583969234303
best_error: 2.1079956626661143
best_error: 2.10799562421608
best_error: 2.1079955709914717
best_error: 2.1065781610862024
best_error: 2.106578076718604
best_error: 2.0977871206520513
best_error: 2.0977870473331213
best_error: 1.934166701455035
best_error: 1.9341666840538796
best_error: 1.9341666198175347
best_error: 1.7919621804783281
best_error: 1.7919619562436653
best_error: 1.7729842222994574
best_error: 1.7729841308123204
best_error: 1.7223647856248645
best_error: 1.7223647695282072
best_error: 1.719745088466905
best_error: 1.7197450819222602
best_error: 1.7193700981278306
best_error: 1.7193700926226083
best_error: 1.7193700924049977
best_error: 1.7190419343744179
best_error: 1.7190419284507583
best_error: 1.7177549572742412
best_error: 1.7177549485653711
best_error: 1.7130437055262409
best_error: 1.7130436851162887
best_error: 1.6441834148675363
best_error: 1.6441833790934322
best_error: 1.4332223963908626
best_error: 1.433222385042849
best_error: 1.428155903132934
best_error: 1.4281558730157302
best_error: 1.425921226488901
best_error: 1.4259212240133703
best_error: 1.4259212216948702
best_error: 1.425510942805694
best_error: 1.425510935483214
best_error: 1.4248729951969321
best_error: 1.4248729927757002
best_error: 1.4248729901614525
best_error: 1.4200547144945697
best_error: 1.4200547025937786
best_error: 1.3759628077093933
best_error: 1.3759627634898235
best_error: 1.348552093443101
best_error: 1.3485520905089112
best_error: 1.3485520894689582
best_error: 1.2990040863985712
best_error: 1.2990039776515911
best_error: 1.235911316490278
best_error: 1.2359113153708987
best_error: 1.2277367458342257
best_error: 1.227736656941675
best_error: 1.2243439472885802
best_error: 1.2243439091504489
best_error: 1.222387918782343
best_error: 1.2223879182348458
best_error: 1.2223879175743042
best_error: 1.2218434055427831
best_error: 1.2218434050803009
best_error: 1.2218434046776934
best_error: 1.2194241949685847
best_error: 1.2194241923493998
best_error: 1.1931197066857437
best_error: 1.193119681895196
best_error: 1.1781261969652865
best_error: 1.1781261896746351
best_error: 1.1781261766451996
best_error: 1.155148981770099
best_error: 1.155148924136178
best_error: 1.1315847637514167
best_error: 1.1315846760439354
best_error: 1.1144250791711268
best_error: 1.1144250507178868
best_error: 1.1121930707508572
best_error: 1.1121929987493697
best_error: 1.1051241359514246
best_error: 1.1051240552541217
best_error: 1.0990944887510115
best_error: 1.0990944546349093
best_error: 1.0935793691776041
best_error: 1.0935793649585257
best_error: 1.0901945995244462
best_error: 1.0901945994694768
best_error: 1.090194598946206
best_error: 1.0901945983766732
best_error: 1.0901945959091894
best_error: 1.090194590921657
best_error: 1.085228260925675
best_error: 1.0852282599549783
best_error: 1.085228259365974
best_error: 1.0790579837343808
best_error: 1.0790579672646807
best_error: 1.066386814307426
best_error: 1.0663867664445963
best_error: 1.0465551203465897
best_error: 1.0465550282793223
best_error: 1.0309939957586836
best_error: 1.030993957240638
best_error: 1.0242614864460196
best_error: 1.0242614286047727
best_error: 1.0167091330690248
best_error: 1.0167090827776881
best_error: 1.0021298426616665
best_error: 1.0021298196631132
best_error: 0.9984087778444781
best_error: 0.9984087650763862
best_error: 0.9956769436704509
best_error: 0.9956769287949164
best_error: 0.99431364961287
best_error: 0.994313648326777
best_error: 0.9943136481712169
best_error: 0.9943136477045965
best_error: 0.9937189476186724
best_error: 0.9937189347006103
best_error: 0.993034545305708
best_error: 0.9930345447199528
best_error: 0.9930345441871489
best_error: 0.9930345440271094
best_error: 0.9928907609827826
best_error: 0.9928907515411871
best_error: 0.9928906838193672
best_error: 0.9928906740151443
best_error: 0.9924875221260548
best_error: 0.9924875216654534
best_error: 0.9924875215419315
best_error: 0.9924875208546817
best_error: 0.9916873602862148
best_error: 0.9916873397956105
best_error: 0.9916738336503282
best_error: 0.9916738097447747
best_error: 0.9908935883323524
best_error: 0.990893545835564
best_error: 0.9905709897560058
best_error: 0.9905709586989707
best_error: 0.9898817933554525
best_error: 0.9898817742231358
best_error: 0.9880167343910258
best_error: 0.9880167300714042
best_error: 0.9876166586568793
best_error: 0.9876166432907616
best_error: 0.9874371156211796
best_error: 0.987437101013764
best_error: 0.985987878062811
best_error: 0.9859878775423837
best_error: 0.9859878771770344
best_error: 0.9859878766021114
best_error: 0.9858580060464994
best_error: 0.9858580013096517
best_error: 0.985684528175956
best_error: 0.9856845181210452
best_error: 0.9852017092566338
best_error: 0.9852016999036656
best_error: 0.98276075538963
best_error: 0.9827607425606498
best_error: 0.9826791012165521
best_error: 0.9826790752854754
best_error: 0.9826743998998717
best_error: 0.9826743699758008
best_error: 0.9815743819130383
best_error: 0.9815743642926569
best_error: 0.9803517153582277
best_error: 0.980351710060977
best_error: 0.9773505645043428
best_error: 0.9773505597367773
best_error: 0.9773373466700085
best_error: 0.977337343411279
best_error: 0.9773373405960784
best_error: 0.9756960292297319
best_error: 0.9756960243001177
best_error: 0.9756960221853074
best_error: 0.9738450780393987
best_error: 0.9738450770348374
best_error: 0.9738450765037295
best_error: 0.9737560207341562
best_error: 0.9737560153850948
best_error: 0.9736493523008398
best_error: 0.9736493460564257
best_error: 0.9732373112436297
best_error: 0.9732373108967782
best_error: 0.9732373095413221
best_error: 0.9728138738635111
best_error: 0.9728138719629363
best_error: 0.9721522714668666
best_error: 0.9721522631874434
best_error: 0.9714058341321093
best_error: 0.9714058223106483
best_error: 0.9701093004138357
best_error: 0.9701092841431033
best_error: 0.9688296787321566
best_error: 0.96882967019324
best_error: 0.9682897582648582
best_error: 0.9682897341587386
best_error: 0.9667542688709012
best_error: 0.9667542464330797
best_error: 0.960269916402938
best_error: 0.9602698873116507
best_error: 0.9586806127895311
best_error: 0.95868060575803
best_error: 0.9505448956705369
best_error: 0.9505448818181176
best_error: 0.9429998256374061
best_error: 0.9429997959081581
best_error: 0.9268777087872422
best_error: 0.9268776805753741
best_error: 0.9172922710310806
best_error: 0.9172922488533695
best_error: 0.9168373199120684
best_error: 0.9168373108087513
best_error: 0.9166814946890557
best_error: 0.9166814900569281
best_error: 0.9163957950302763
best_error: 0.9163957929631095
best_error: 0.9163957919591594
best_error: 0.9157241558995557
best_error: 0.9157241507097741
best_error: 0.9152138779239557
best_error: 0.9152138727354305
best_error: 0.9148236183128343
best_error: 0.9148236164724896
best_error: 0.9139092465224143
best_error: 0.9139092434371769
best_error: 0.9124151561335487
best_error: 0.9124151462905878
best_error: 0.9078750703403583
best_error: 0.9078750229502583
best_error: 0.9060961660974602
best_error: 0.9060961532599265
best_error: 0.903749395818498
best_error: 0.9037493758362041
best_error: 0.9022374471767647
best_error: 0.9022374348121025
best_error: 0.9020656952871731
best_error: 0.9020656886291941
best_error: 0.902011541060751
best_error: 0.9020115404250904
