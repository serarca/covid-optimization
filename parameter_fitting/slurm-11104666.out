ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.94609529079612
best_error: 98.94609518449832
best_error: 98.94609513975989
best_error: 98.94609512911924
best_error: 18.477222040314526
best_error: 18.477221842173847
best_error: 18.477220462554893
best_error: 16.61484240410348
best_error: 16.61484238822315
best_error: 16.59408957701149
best_error: 16.594089560500052
best_error: 16.502509691182
best_error: 16.502509671704512
best_error: 15.912180762128658
best_error: 15.912180717942814
best_error: 15.880607061119543
best_error: 15.880607015210687
best_error: 14.896282949005636
best_error: 14.896282822959911
best_error: 10.466872476954913
best_error: 10.466871986678392
best_error: 9.799148442661753
best_error: 9.799148281279034
best_error: 9.789040428473825
best_error: 9.78904026701641
best_error: 9.78757502799053
best_error: 9.787574866312163
best_error: 9.787376439112597
best_error: 9.787376419612885
best_error: 9.787376416862479
best_error: 9.787215412775836
best_error: 9.787215251047087
best_error: 9.785770504319878
best_error: 9.785770342457617
best_error: 9.780975690698748
best_error: 9.780975671324168
best_error: 9.780975668434476
best_error: 9.730977540404576
best_error: 9.730977521692829
best_error: 9.730977517558628
best_error: 9.522526165280093
best_error: 9.522526148681182
best_error: 9.522526137931624
best_error: 9.38550840859753
best_error: 9.38550839309514
best_error: 9.385508379659315
best_error: 9.351866350778245
best_error: 9.351866317363966
best_error: 9.245832298838781
best_error: 9.245832232567105
best_error: 9.033107358205562
best_error: 9.033107296131128
best_error: 8.65701750813073
best_error: 8.65701749582303
best_error: 8.657017492446181
best_error: 8.603100657219171
best_error: 8.60310064918647
best_error: 8.60310064214838
best_error: 8.514939623674612
best_error: 8.514939620553474
best_error: 8.514939612281179
best_error: 8.514939609566119
best_error: 8.472572888386672
best_error: 8.472572869326381
best_error: 8.456214602875985
best_error: 8.45621459613088
best_error: 8.456214588784231
best_error: 8.425384458839783
best_error: 8.42538444713356
best_error: 8.425384444185058
best_error: 8.41990137079471
best_error: 8.419901356950538
best_error: 8.419901355851135
best_error: 8.41848973019726
best_error: 8.418489715107626
best_error: 8.418489715104222
best_error: 8.418138224621172
best_error: 8.418138209338002
best_error: 8.402400774337117
best_error: 8.402400761586334
best_error: 8.402400759281514
best_error: 8.344394088416726
best_error: 8.34439407913636
best_error: 8.344394073318632
best_error: 8.310760306123498
best_error: 8.310760297800051
best_error: 8.310760290809817
best_error: 8.297828209429923
best_error: 8.297828201756907
best_error: 8.29782819398994
best_error: 8.297307925547987
best_error: 8.297307685433525
best_error: 8.296169552924745
best_error: 8.296169545205771
best_error: 8.296169537482221
best_error: 8.295605806421268
best_error: 8.295605573787393
best_error: 8.285238966252761
best_error: 8.285238966252718
best_error: 8.285238961818033
best_error: 8.272564052061782
best_error: 8.27256404352741
best_error: 8.272564036130762
best_error: 8.264457664015715
best_error: 8.264457477975046
best_error: 8.262645139810465
best_error: 8.262644956592835
best_error: 8.261641787127104
best_error: 8.261641611723341
best_error: 8.260024663205439
best_error: 8.260024489937164
best_error: 8.259234688285783
best_error: 8.25923451637151
best_error: 8.258781253892575
best_error: 8.258781082791732
best_error: 8.258544756093814
best_error: 8.258544585088265
best_error: 8.25840616191208
best_error: 8.25840599673839
best_error: 8.258326758630886
best_error: 8.258326593495422
best_error: 8.258280538877305
best_error: 8.258280373764105
best_error: 8.258278337481759
best_error: 8.258278172369621
best_error: 8.25827691984702
best_error: 8.258276754735558
best_error: 8.258271901260215
best_error: 8.258271896608125
best_error: 8.258271896593524
best_error: 8.258271891831455
best_error: 8.257537034403295
best_error: 8.25753702997855
best_error: 8.257537029732411
best_error: 8.257537024975854
best_error: 8.242902851181341
best_error: 8.242902839398338
best_error: 8.230808710839172
best_error: 8.230808704525597
best_error: 8.146605985005072
best_error: 8.146605967503593
best_error: 8.124118524372886
best_error: 8.12411851005712
best_error: 8.11995440290748
best_error: 8.11995438878103
best_error: 8.106213139123753
best_error: 8.106213125899428
best_error: 8.10500973635385
best_error: 8.105009733817306
best_error: 8.10500967429227
best_error: 8.100988628321444
best_error: 8.100988278965895
best_error: 8.0916447375023
best_error: 8.09164455041382
best_error: 8.08703264409912
best_error: 8.087032430087493
best_error: 8.065986478566817
best_error: 8.065986202580348
best_error: 8.06507442858327
best_error: 8.065074421126173
best_error: 8.06507441910641
best_error: 8.046650571687323
best_error: 8.046650563630987
best_error: 8.044721162389434
best_error: 8.044721154249626
best_error: 8.044249013203553
best_error: 8.044249005071773
best_error: 8.04409821087607
best_error: 8.044098202746673
best_error: 8.04403961593286
best_error: 8.044039607832417
best_error: 8.044014564507258
best_error: 8.04401455640721
best_error: 8.044004018922877
best_error: 8.044004010823034
best_error: 8.04399963562197
best_error: 8.043999627522213
best_error: 8.043997880066504
best_error: 8.043997871966786
best_error: 8.043997165068214
best_error: 8.043997156968505
best_error: 8.043997054127829
best_error: 8.043996913955052
best_error: 8.043996905855355
best_error: 8.043996858196552
best_error: 8.043996850096848
best_error: 8.043996770556408
best_error: 8.043996761791286
best_error: 8.043996754006926
