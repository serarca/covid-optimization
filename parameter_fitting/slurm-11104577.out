ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 78
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.99544219810413
best_error: 98.99544212180433
best_error: 98.99544202852033
best_error: 18.708593930677583
best_error: 18.70859393067316
best_error: 18.708593925177166
best_error: 18.690783796786107
best_error: 18.69078379097695
best_error: 18.61163238753514
best_error: 18.611632380010356
best_error: 17.664029039821553
best_error: 17.66402894893241
best_error: 17.197083585658213
best_error: 17.197083438143707
best_error: 16.688051621603957
best_error: 16.688051411651898
best_error: 15.836709229965127
best_error: 15.836708918265394
best_error: 13.38874114140712
best_error: 13.388740898995433
best_error: 12.563275449987403
best_error: 12.563275326931942
best_error: 12.39632224566504
best_error: 12.396322243908841
best_error: 12.39632223919326
best_error: 12.396322233376296
best_error: 12.164678436591087
best_error: 12.164678436437297
best_error: 12.164678434071249
best_error: 12.164678425458357
best_error: 11.831394146383888
best_error: 11.831394077062507
best_error: 11.615138149133488
best_error: 11.615138147429562
best_error: 11.61513814543279
best_error: 11.615138138881624
best_error: 11.33693169927183
best_error: 11.336931677323264
best_error: 10.979323221156978
best_error: 10.979323198543405
best_error: 10.67676304634138
best_error: 10.676763044035404
best_error: 10.676763037415034
best_error: 10.40857403533709
best_error: 10.40857402691844
best_error: 10.361249865244396
best_error: 10.361249854728971
best_error: 10.35021133527073
best_error: 10.350211300137294
best_error: 10.124779163480333
best_error: 10.124779107758853
best_error: 10.111480713462228
best_error: 10.111480690108667
best_error: 10.088239829065433
best_error: 10.088239807085985
best_error: 10.075141623612186
best_error: 10.075141616891916
best_error: 10.075141589774645
best_error: 10.074629503859216
best_error: 10.074629497151273
best_error: 10.074629469885048
best_error: 10.074608411654689
best_error: 10.074608129929258
best_error: 10.070604580699955
best_error: 10.070604573267842
best_error: 10.070604554835992
best_error: 10.070588170646154
best_error: 10.07058814997137
best_error: 10.069752589637602
best_error: 10.069752582216518
best_error: 10.069752563585428
best_error: 10.069635786897372
best_error: 10.069635779477787
best_error: 10.069635760819484
best_error: 10.069620901411769
best_error: 10.069620880743985
best_error: 10.069619750259172
best_error: 10.06961974283979
best_error: 10.069619724177759
best_error: 10.06961127446235
best_error: 10.069611267043076
best_error: 10.069611248379069
best_error: 10.069610944579965
best_error: 10.069610923912252
best_error: 10.069610808714497
best_error: 10.069610791815261
best_error: 10.068721787296512
best_error: 10.068721779877091
best_error: 10.06872176119912
best_error: 10.065153913789386
best_error: 10.065153906369257
best_error: 10.065153887634516
best_error: 10.051973053531562
best_error: 10.051972925956493
best_error: 9.965691553882348
best_error: 9.965691537048453
best_error: 9.938564121030758
best_error: 9.938564101640017
best_error: 9.933353132546276
best_error: 9.933353110134467
best_error: 9.921371356329157
best_error: 9.92137133302006
best_error: 9.836036805302605
best_error: 9.836036779686868
best_error: 9.833755382162272
best_error: 9.833755355209028
best_error: 9.80498922556572
best_error: 9.80498919883599
best_error: 9.610854469667924
best_error: 9.610854445793807
best_error: 9.587330636249419
best_error: 9.587330554042701
best_error: 9.581785031824126
best_error: 9.581785007490122
best_error: 9.523477104330887
best_error: 9.52347708171211
best_error: 9.51203853123872
best_error: 9.512038507109757
best_error: 9.432676100508147
best_error: 9.43267609975705
best_error: 9.432676081724946
best_error: 9.422869576153662
best_error: 9.42286954971416
best_error: 9.241461726069453
best_error: 9.241461699694014
best_error: 9.223376224252199
best_error: 9.22337619513473
best_error: 9.094312546678724
best_error: 9.094312526275008
best_error: 8.918321528448786
best_error: 8.918321528448784
best_error: 8.918321524949421
best_error: 8.9183215211546
best_error: 8.918321510102222
best_error: 8.915170514069274
best_error: 8.915170508959896
best_error: 8.915170372800212
best_error: 8.905907357379238
best_error: 8.905907353917051
best_error: 8.905907349811397
best_error: 8.905907339023267
best_error: 8.905008413030387
best_error: 8.905008411904898
best_error: 8.905008405588207
best_error: 8.905008405136371
best_error: 8.872006764178826
best_error: 8.872006758971295
best_error: 8.872006617093362
best_error: 8.788116274611689
best_error: 8.788116254866788
best_error: 8.576797035703287
best_error: 8.576797019580159
best_error: 8.481747516803779
best_error: 8.481747509481915
best_error: 8.481747503726538
best_error: 8.47550035128332
best_error: 8.475500343479654
best_error: 8.475500339012914
best_error: 8.465386307974256
best_error: 8.465386232578592
best_error: 8.447347212037059
best_error: 8.447347141431003
best_error: 8.432239867865945
best_error: 8.432239867865944
best_error: 8.432239864386307
best_error: 8.418830657292741
best_error: 8.418830654965692
