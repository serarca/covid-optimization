ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.027401552205987
best_error: 11.027401541365528
best_error: 11.02140148294683
best_error: 11.021401471691387
best_error: 4.728805374754623
best_error: 4.728805226543145
best_error: 4.679297910942674
best_error: 4.679297363524084
best_error: 4.337440193583194
best_error: 4.337439670470065
best_error: 4.332889689877707
best_error: 4.332889561907854
best_error: 4.3316768181250165
best_error: 4.331676690190129
best_error: 4.331619816262229
best_error: 4.331619293850412
best_error: 4.331562719320193
best_error: 4.331562591388585
best_error: 4.331538981953281
best_error: 4.331538459532993
best_error: 4.3315318495578765
best_error: 4.331531327136844
best_error: 4.331503360141385
best_error: 4.3315032322121825
best_error: 4.331325636855082
best_error: 4.331325508934038
best_error: 4.330614127828255
best_error: 4.3306139999398034
best_error: 4.327758208295435
best_error: 4.3277580805382145
best_error: 4.316174506774836
best_error: 4.3161743795551235
best_error: 4.267635584297641
best_error: 4.267635458163353
best_error: 4.048159386593121
best_error: 4.0481589445150705
best_error: 3.946835441050192
best_error: 3.9468350377604215
best_error: 3.8986534302901026
best_error: 3.8986530772722583
best_error: 3.894419057855604
best_error: 3.8944187106019292
best_error: 3.865121284087852
best_error: 3.8651209623943927
best_error: 3.786723220451244
best_error: 3.7867229247456193
best_error: 3.6709288236962374
best_error: 3.6709285283630813
best_error: 3.605401439180376
best_error: 3.6054011372384007
best_error: 3.592141732892002
best_error: 3.5921415560894863
best_error: 3.5849759176373763
best_error: 3.584975612042184
best_error: 3.58187514703275
best_error: 3.5818749702625654
best_error: 3.580218387591268
best_error: 3.5802180809559214
best_error: 3.5733458530505304
best_error: 3.573345677939391
best_error: 3.5730384518822462
best_error: 3.5730381416737016
best_error: 3.513942620267399
best_error: 3.5139422670410916
best_error: 3.496482273339939
best_error: 3.4964818860464177
best_error: 3.473554009674474
best_error: 3.4735536173374078
best_error: 3.4419913927234584
best_error: 3.441990998354848
best_error: 3.4402659500415247
best_error: 3.4402657961882985
best_error: 3.4396902065768264
best_error: 3.439689812072121
best_error: 3.4330348208565495
best_error: 3.4330346689092863
best_error: 3.4323391460770107
best_error: 3.4323389941446716
best_error: 3.429592937137768
best_error: 3.429592785266082
best_error: 3.4293321375866648
best_error: 3.4293317378122747
best_error: 3.426372968381832
best_error: 3.4263728167571927
best_error: 3.4234793632531844
best_error: 3.423479212124775
best_error: 3.4233830661770734
best_error: 3.4233826663114755
best_error: 3.415777339871231
best_error: 3.4157769424387894
best_error: 3.4144816020826743
best_error: 3.414481450420594
best_error: 3.413430600522506
best_error: 3.4134302051180403
best_error: 3.412139292345593
best_error: 3.4121391408354076
best_error: 3.4115216309433434
best_error: 3.4115214780675984
best_error: 3.410537890310268
best_error: 3.410537500573845
best_error: 3.4100483626970575
best_error: 3.4100482100366625
best_error: 3.4096145007885656
best_error: 3.4096143469553897
best_error: 3.408702672587152
best_error: 3.4087022789935855
best_error: 3.4086183901766205
best_error: 3.4086182391725717
best_error: 3.4081190025999275
best_error: 3.4081188514098972
best_error: 3.408104622247034
best_error: 3.408104228136308
best_error: 3.4080756908057275
best_error: 3.408075539917028
best_error: 3.408075406276413
best_error: 3.4080735004021028
best_error: 3.4080735001129288
best_error: 3.4080734987123273
best_error: 3.408073453564622
best_error: 3.4080733304471327
best_error: 3.408073329403715
best_error: 3.4080732913022
best_error: 3.4080732910130127
best_error: 3.408073289612418
best_error: 3.408073272179651
best_error: 3.4080732713950717
best_error: 3.4080732711058914
best_error: 3.4080732697053016
best_error: 3.4080732668124814
best_error: 3.408073266582523
best_error: 3.408073266561181
best_error: 3.408073266350443
