ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.115152593112835
best_error: 25.11515246771465
best_error: 4.9135386607593485
best_error: 4.913538660121523
best_error: 4.913172895389477
best_error: 4.913172895365737
best_error: 4.913172895190762
best_error: 4.911696341205466
best_error: 4.911696341181118
best_error: 4.9116963410052135
best_error: 4.905571982801911
best_error: 4.905571982774927
best_error: 4.905571982595188
best_error: 4.876894424561602
best_error: 4.876894424518916
best_error: 4.876894424322204
best_error: 4.095252837430031
best_error: 4.0952528011845954
best_error: 3.720205252388281
best_error: 3.7202051740431767
best_error: 3.188892365841651
best_error: 3.1888922742006427
best_error: 2.7445922152996616
best_error: 2.7445920647357642
best_error: 2.4689104017864563
best_error: 2.468910365146049
best_error: 2.4689103150030824
best_error: 2.428242038215856
best_error: 2.4282419917625417
best_error: 2.4282419466929754
best_error: 2.397242001698368
best_error: 2.397241947050706
best_error: 2.3972419084536036
best_error: 2.3786205888014633
best_error: 2.378620520952091
best_error: 2.3700023915539803
best_error: 2.370002296664041
best_error: 2.235537023824365
best_error: 2.235536984883976
best_error: 2.2063614935467686
best_error: 2.2063614249734207
best_error: 2.2025396756954394
best_error: 2.2025395695688443
best_error: 2.1985974416707323
best_error: 2.1985974195653717
best_error: 2.1976685587479117
best_error: 2.197668557458452
best_error: 2.1976685513475154
best_error: 2.1971606416833716
best_error: 2.197160627420276
best_error: 2.1957961311176564
best_error: 2.1957961086484277
best_error: 2.1950884782007307
best_error: 2.1950884712077907
best_error: 2.1950884700322284
best_error: 2.193087274415292
best_error: 2.1930872743759973
best_error: 2.1930872740027643
best_error: 2.193087273839794
best_error: 2.1930872660226113
best_error: 2.187235536192918
best_error: 2.187235503507375
best_error: 2.169305177038148
best_error: 2.1693051127567293
best_error: 2.164636040341742
best_error: 2.1646359942025706
best_error: 2.162903552598658
best_error: 2.1629035107107044
best_error: 2.1469479747517672
best_error: 2.14694794219197
best_error: 2.12660826236186
best_error: 2.126608191089665
best_error: 2.11537345866915
best_error: 2.1153733711091474
best_error: 2.0512884351089915
best_error: 2.0512882893416005
best_error: 1.9893226765063414
best_error: 1.9893225154577454
best_error: 1.8856389800140494
best_error: 1.8856389754294092
best_error: 1.8856389741105373
best_error: 1.8617106849602352
best_error: 1.8617106806721486
best_error: 1.8617106791816849
best_error: 1.8579783301773438
best_error: 1.8579783006084765
best_error: 1.823821995933498
best_error: 1.8238219912409261
best_error: 1.7548713796318114
best_error: 1.7548709494467893
best_error: 1.6488872633439862
best_error: 1.648886859524633
best_error: 1.4237982839534324
best_error: 1.4237982579650639
best_error: 1.4097758658997668
best_error: 1.4097758416306068
best_error: 1.3982187474079228
best_error: 1.39821873855211
best_error: 1.3954729608239904
best_error: 1.3954729376163244
best_error: 1.393891985500474
best_error: 1.3938919601172983
best_error: 1.387499197768061
best_error: 1.3874990880080127
best_error: 1.371564336171542
best_error: 1.3715643057875206
best_error: 1.365641872931297
best_error: 1.3656418200299325
best_error: 1.3651944752241854
best_error: 1.3651944497724502
best_error: 1.3651197694022879
best_error: 1.3651197679259008
best_error: 1.3651197616415218
best_error: 1.3651163359644023
best_error: 1.365116332914467
best_error: 1.365116332175888
best_error: 1.365116289489136
best_error: 1.3651162864383055
best_error: 1.3651162857016712
best_error: 1.3651162509439336
best_error: 1.3651162475608358
best_error: 1.3651162361681048
best_error: 1.3651162330015243
best_error: 1.3651162326006474
best_error: 1.3651161697313117
best_error: 1.3651161663482947
best_error: 1.3591770023541745
best_error: 1.3591769628267132
best_error: 1.35823519355302
best_error: 1.3582351792763432
best_error: 1.3580233610888224
best_error: 1.3580233548663094
best_error: 1.3578928844109464
best_error: 1.357892881017371
best_error: 1.3577499377364406
best_error: 1.3577499372784902
best_error: 1.357749937138024
best_error: 1.3577499356763518
best_error: 1.3573616418555594
best_error: 1.3573616336451486
best_error: 1.3572031413628438
best_error: 1.3572031368919237
best_error: 1.3561125841848172
best_error: 1.3561125766503586
best_error: 1.3549011078060211
best_error: 1.3549010914881614
best_error: 1.352925772014538
best_error: 1.3529257472619713
best_error: 1.3485975294968569
best_error: 1.3485974940459573
best_error: 1.3483135491033658
best_error: 1.3483135253769662
best_error: 1.3467642512942435
best_error: 1.3467642422573147
best_error: 1.3456734714861047
best_error: 1.345673467466591
best_error: 1.3450591242418495
best_error: 1.3450591216953174
best_error: 1.3444367672986939
best_error: 1.3444367659983785
best_error: 1.344324306643256
best_error: 1.3443243016631
best_error: 1.343969798179163
best_error: 1.3439697929200083
best_error: 1.3430232629418355
best_error: 1.3430232408694465
best_error: 1.339392263185025
best_error: 1.3393922000543592
best_error: 1.3303434039307833
best_error: 1.3303433355492031
best_error: 1.3185999926801444
best_error: 1.318599957031829
best_error: 1.3078951322707377
best_error: 1.3078949058941642
best_error: 1.292426017166561
best_error: 1.292425980186442
best_error: 1.2791261663125228
best_error: 1.2791261436300025
best_error: 1.2781812101889671
best_error: 1.2781811851816822
best_error: 1.269862184034405
best_error: 1.2698621761025535
best_error: 1.261781366795327
best_error: 1.261781224772277
best_error: 1.2549301579660104
best_error: 1.254930044188476
best_error: 1.2497482387695689
best_error: 1.249748175355521
best_error: 1.2459575830348446
best_error: 1.245957572441405
best_error: 1.2442544486701224
best_error: 1.2442544339887305
best_error: 1.243976935189492
best_error: 1.2439769255461874
best_error: 1.243819005811477
best_error: 1.2438189894066811
best_error: 1.2436682844684468
best_error: 1.2436682837446476
best_error: 1.2436682832611843
best_error: 1.2435561050811743
best_error: 1.2435561040283427
best_error: 1.243556103985339
best_error: 1.242692214175907
best_error: 1.2426922039290424
best_error: 1.2418529138628907
best_error: 1.2418529046395013
best_error: 1.2418358540168133
best_error: 1.241835852677714
best_error: 1.241005771447903
best_error: 1.2410057702887942
best_error: 1.240624147426275
best_error: 1.2406241448267403
best_error: 1.2404567723153073
best_error: 1.2404567660418315
best_error: 1.2403869666532576
best_error: 1.240386959808
best_error: 1.240258020647461
best_error: 1.240258015010546
best_error: 1.2401677159134061
best_error: 1.2401677101071307
best_error: 1.2398965873583663
best_error: 1.2398965872742098
best_error: 1.2398965863236584
best_error: 1.2397733303389575
best_error: 1.2397733263847417
best_error: 1.2394428579930479
best_error: 1.2394428534070547
best_error: 1.2382609097858968
best_error: 1.2382609025505205
best_error: 1.2347558983019973
best_error: 1.2347558440997815
best_error: 1.2332594982043614
best_error: 1.2332594956908471
best_error: 1.2332594817157205
best_error: 1.2307838130025863
best_error: 1.230783811170937
best_error: 1.2307837857604575
best_error: 1.2279866981814767
best_error: 1.227986639896046
best_error: 1.223788835332446
best_error: 1.223788772422474
best_error: 1.2230957353253082
best_error: 1.2230957257977877
best_error: 1.2227375940563956
best_error: 1.2198241461820638
best_error: 1.2198241075030087
best_error: 1.2195608354735648
best_error: 1.2195608232446882
best_error: 1.2194596222254221
best_error: 1.2194596218799598
best_error: 1.219439738125958
best_error: 1.21943973772019
best_error: 1.219436785726928
best_error: 1.2194345979312882
best_error: 1.219434445471659
best_error: 1.2194343736933506
best_error: 1.2194343735228013
