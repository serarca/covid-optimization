ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.49963964805332
best_error: 98.49963956642925
best_error: 98.49963948470042
best_error: 18.282408731485145
best_error: 18.282408731480473
best_error: 18.282408722589736
best_error: 18.2566306833261
best_error: 18.25663067381316
best_error: 18.130680703117502
best_error: 18.130680689587884
best_error: 13.234016912394933
best_error: 13.234016797787856
best_error: 13.125636351790238
best_error: 13.12563634275883
best_error: 13.125636342478487
best_error: 13.125636124778888
best_error: 12.850208260928104
best_error: 12.850208251263181
best_error: 12.850208250800081
best_error: 12.850208234996021
best_error: 12.373574886735513
best_error: 12.37357486033347
best_error: 12.216612639187165
best_error: 12.216612632773362
best_error: 12.216612624870482
best_error: 12.216612607646182
best_error: 11.841293883463564
best_error: 11.841293844663008
best_error: 11.038580115361087
best_error: 11.038580104847586
best_error: 11.03858010394762
best_error: 11.03858008445756
best_error: 10.451093253068038
best_error: 10.451093251475251
best_error: 10.451093245337384
best_error: 10.451093244289414
best_error: 10.451093224127458
best_error: 10.069133222867341
best_error: 10.069133191068598
best_error: 10.025294828787468
best_error: 10.025294825393116
best_error: 10.025294821421689
best_error: 10.025294800244128
best_error: 9.882872001424019
best_error: 9.88287189830259
best_error: 9.856971621219436
best_error: 9.856971580630201
best_error: 9.715875566408215
best_error: 9.71587554369655
best_error: 9.715875538663933
best_error: 9.669512244221282
best_error: 9.669512226553712
best_error: 9.669512216937413
best_error: 9.64538984021632
best_error: 9.645389679980887
best_error: 9.474380848773812
best_error: 9.474380835306514
best_error: 9.474380823329163
best_error: 9.41312551500387
best_error: 9.413125486009154
best_error: 9.374240070832515
best_error: 9.374240056708803
best_error: 9.374240045713544
best_error: 9.35723686696934
best_error: 9.357236842770359
best_error: 9.323136549982582
best_error: 9.323136535874658
best_error: 9.323136525411892
best_error: 9.294121554167017
best_error: 9.294121530868921
best_error: 9.236300162369421
best_error: 9.236300142387917
best_error: 9.13661804434447
best_error: 9.136617875152334
best_error: 9.127217860061588
best_error: 9.127217846378137
best_error: 9.117351836906044
best_error: 9.117351667076143
best_error: 9.116802383089624
best_error: 9.116802368165473
best_error: 9.116802363386512
best_error: 9.088493283684915
best_error: 9.088493269705014
best_error: 9.08849326912061
best_error: 9.069447572634449
best_error: 9.069447552794339
best_error: 9.058173936345842
best_error: 9.058173917100268
best_error: 9.020651260354327
best_error: 9.020651239834367
best_error: 9.002460340845671
best_error: 9.002460320343452
best_error: 8.99214757016452
best_error: 8.99214750306061
best_error: 8.989026370042819
best_error: 8.98902635081879
best_error: 8.984314608961892
best_error: 8.984314589801937
best_error: 8.983995453846658
best_error: 8.98399539275236
best_error: 8.983946715245683
best_error: 8.983946696083857
best_error: 8.98370379460999
best_error: 8.983703733794862
best_error: 8.982470112799733
best_error: 8.982470092534873
best_error: 8.972588431026034
best_error: 8.972588409761148
best_error: 8.915252822760095
best_error: 8.91525280347485
best_error: 8.89594251579594
best_error: 8.895942479730458
best_error: 8.895690276000092
best_error: 8.895690239926772
best_error: 8.89566575698744
best_error: 8.895665738375351
best_error: 8.856103675165338
best_error: 8.856103657682027
best_error: 8.750515598395925
best_error: 8.75051558344634
best_error: 8.620863160207776
best_error: 8.620863141815732
best_error: 8.612444691111577
best_error: 8.612444671031076
best_error: 8.573434849963181
best_error: 8.573434830475819
best_error: 8.510853728842775
best_error: 8.51085370748114
best_error: 8.470731012507564
best_error: 8.470730990882297
best_error: 8.41665832837084
best_error: 8.416658303119302
best_error: 8.416658299947958
best_error: 8.4109982974938
best_error: 8.410998274439825
best_error: 8.287967670759608
best_error: 8.287967646984644
best_error: 8.287967643916213
best_error: 8.217096236330221
best_error: 8.217096221689765
best_error: 8.024403238790446
best_error: 8.024403233634752
best_error: 8.024403154411194
best_error: 7.973696445609034
best_error: 7.973696433685727
best_error: 7.973696422436918
best_error: 7.897394875170732
best_error: 7.897394860232108
best_error: 7.897394859465589
