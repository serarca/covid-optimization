ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.328933340030755
best_error: 23.32893310848475
best_error: 4.62495101974934
best_error: 4.6249510184553575
best_error: 4.624219651288173
best_error: 4.624219651275663
best_error: 4.624219651184716
best_error: 4.6212637224206246
best_error: 4.621263722407674
best_error: 4.621263722316224
best_error: 4.60894936444194
best_error: 4.608949364426971
best_error: 4.608949364333504
best_error: 4.548786468874881
best_error: 4.548786468844012
best_error: 4.5487864687441695
best_error: 4.400586509722535
best_error: 4.40058650954846
best_error: 4.40058650951274
best_error: 3.6033515886285055
best_error: 3.603351575215858
best_error: 2.9265235183718596
best_error: 2.9265234917403817
best_error: 2.9018246753972385
best_error: 2.901824622833176
best_error: 2.88533863070016
best_error: 2.8853386131186194
best_error: 2.8626895654580955
best_error: 2.86268954484139
best_error: 2.7711955310622933
best_error: 2.7711954772956138
best_error: 2.7498121031168528
best_error: 2.749812047542791
best_error: 2.7236454938093275
best_error: 2.72364543644898
best_error: 2.556776236357816
best_error: 2.5567761703677525
best_error: 2.5567761617857823
best_error: 2.4283557507093105
best_error: 2.4283556770616603
best_error: 2.428355655243044
best_error: 2.356651374781163
best_error: 2.3566512943324396
best_error: 2.3566512795147365
best_error: 2.344948298331642
best_error: 2.344948190957632
best_error: 2.343017036309789
best_error: 2.343016934107943
best_error: 2.0988611879349333
best_error: 2.0988611654892413
best_error: 2.0988610662554525
best_error: 2.0325344722534
best_error: 2.032534250055406
best_error: 1.9421086807137196
best_error: 1.9421086771483376
best_error: 1.9421086728304584
best_error: 1.9386750375345634
best_error: 1.9386750370820842
best_error: 1.9386750370389227
best_error: 1.93867502940786
best_error: 1.937561627864274
best_error: 1.9375616247111282
best_error: 1.9375616198913264
best_error: 1.9362407422532264
best_error: 1.9362407390397394
best_error: 1.9362407348106194
best_error: 1.9323353702963688
best_error: 1.9323353494065538
best_error: 1.921352003469121
best_error: 1.921351964961362
best_error: 1.9086733478845452
best_error: 1.9086731592305954
best_error: 1.8808460238338742
best_error: 1.8808458500537488
best_error: 1.7836850235241837
best_error: 1.7836850174673233
best_error: 1.7836849688176373
best_error: 1.5352004409352862
best_error: 1.5352003356749526
best_error: 1.4547708767028018
best_error: 1.4547708381317248
best_error: 1.3986209469668254
best_error: 1.3986208387424441
best_error: 1.3555613586000752
best_error: 1.3555613573693845
best_error: 1.3555612975750604
best_error: 1.3540681087098645
best_error: 1.354068030311934
best_error: 1.3465536990446854
best_error: 1.346553647356053
best_error: 1.3345569659035892
best_error: 1.3345569355402263
best_error: 1.3310086741327385
best_error: 1.3310086671631476
best_error: 1.3310086470286087
best_error: 1.3262517710555728
best_error: 1.326251721500858
best_error: 1.3179086795510528
best_error: 1.3179085945279183
best_error: 1.3143479569779901
best_error: 1.3143479162712672
best_error: 1.3131987320150653
best_error: 1.313198731211093
best_error: 1.3131911559674314
best_error: 1.3131911558384477
best_error: 1.313191155525402
best_error: 1.313191155348223
best_error: 1.3131818080276432
best_error: 1.313181806636615
best_error: 1.3131653121013762
best_error: 1.3131653020829734
best_error: 1.3131224735471136
best_error: 1.3131224645193882
best_error: 1.3129835288095404
best_error: 1.3129835261283735
best_error: 1.312283667748311
best_error: 1.3122836647060936
best_error: 1.31059535892195
best_error: 1.3105953438112747
best_error: 1.3097564542724403
best_error: 1.3097564432765136
best_error: 1.3076237406637536
best_error: 1.3076237195876523
best_error: 1.3067366669814862
best_error: 1.306736641707915
best_error: 1.3035834593813975
best_error: 1.3035834163855897
best_error: 1.2851591796178181
best_error: 1.2851590896300045
best_error: 1.27650046123343
best_error: 1.2765003651695581
best_error: 1.2610726046023155
best_error: 1.2610725204754467
best_error: 1.2543084373151243
best_error: 1.2543083523259664
best_error: 1.2520554987405015
best_error: 1.2520553986581213
best_error: 1.248526801500085
best_error: 1.2485267667816025
best_error: 1.2475861650369815
best_error: 1.2475861509250818
best_error: 1.2473605029877104
best_error: 1.247360491234366
best_error: 1.2463619022459702
best_error: 1.2463618950449578
best_error: 1.2461847954944627
best_error: 1.246184790877782
best_error: 1.2461773020506848
best_error: 1.2461772950484105
best_error: 1.2460195231679891
best_error: 1.2460195185143126
best_error: 1.2459330891882507
best_error: 1.2459330713360455
best_error: 1.2456452945539536
best_error: 1.245645290419329
best_error: 1.2453112028040794
best_error: 1.245311198784402
best_error: 1.2450280989119875
best_error: 1.2450280933212565
best_error: 1.244364087182057
best_error: 1.244364083543189
best_error: 1.2417662582507227
best_error: 1.2417662520207473
best_error: 1.241760195586312
best_error: 1.2417601952758979
best_error: 1.2417601947260215
best_error: 1.2417601940942438
best_error: 1.2417601926866633
best_error: 1.2411317209846642
best_error: 1.2411317208107784
best_error: 1.2411317201562722
best_error: 1.2411317194336933
best_error: 1.2411317183905164
best_error: 1.2378516297330042
best_error: 1.237851616746567
best_error: 1.2362114392253871
best_error: 1.2362114298538425
best_error: 1.2351848093022832
best_error: 1.2351848074041591
best_error: 1.2351325910964686
best_error: 1.2351325892513931
best_error: 1.2350981984387388
best_error: 1.2350981984384026
best_error: 1.235098198277526
best_error: 1.235098197686916
best_error: 1.2350159695047866
best_error: 1.23501596768664
best_error: 1.234923008404378
best_error: 1.2349230033962746
best_error: 1.2346909598479603
best_error: 1.2346909487631514
best_error: 1.2342183162896894
best_error: 1.2342183016813002
best_error: 1.2318444622360274
best_error: 1.231844425558863
best_error: 1.226222905676445
best_error: 1.2262228652531793
best_error: 1.2242996020077341
best_error: 1.2242996016505308
best_error: 1.224299601544885
best_error: 1.224299599807935
best_error: 1.2240993008456853
best_error: 1.2240992816399459
best_error: 1.2152468770991285
best_error: 1.2152468670550625
best_error: 1.211378050831869
best_error: 1.2113780507684984
best_error: 1.2099568913954375
best_error: 1.2099568910283662
best_error: 1.2082376867757514
best_error: 1.2082376846564724
best_error: 1.2082376668021038
best_error: 1.2077771303987346
best_error: 1.207777127254827
best_error: 1.2077771239008208
best_error: 1.207525479227896
best_error: 1.2075254770669857
best_error: 1.2075080284683128
best_error: 1.2075080264736813
best_error: 1.2074703638163005
best_error: 1.2074703628620604
best_error: 1.2074280279878096
best_error: 1.2074280257066123
best_error: 1.2073652276372888
best_error: 1.207365221706612
best_error: 1.2072389179516614
best_error: 1.2072389096728697
best_error: 1.2069644099798886
best_error: 1.206964397961426
best_error: 1.206648273212889
best_error: 1.2066482555831717
best_error: 1.2065435975323344
best_error: 1.206543573426942
best_error: 1.20601837175824
best_error: 1.2060183559249231
best_error: 1.2046088898286749
best_error: 1.2046088766910767
best_error: 1.203523290058281
best_error: 1.2035232756976786
best_error: 1.2034068057147598
best_error: 1.2034068051292461
best_error: 1.2034068049789186
best_error: 1.2028519693941704
best_error: 1.2028519624770093
best_error: 1.2026603440615653
best_error: 1.202660334511814
best_error: 1.202106695850436
best_error: 1.2021066936662144
best_error: 1.2021066931379534
best_error: 1.2018609236068383
best_error: 1.2018609230648254
best_error: 1.2018609211883504
best_error: 1.2016577303206235
best_error: 1.2016577256764809
best_error: 1.2016097191254378
best_error: 1.2016097097815406
best_error: 1.201370317651894
best_error: 1.201370316736143
best_error: 1.201285621957501
best_error: 1.2012856192761943
best_error: 1.2011530764924472
best_error: 1.2011530667141173
best_error: 1.2011280584237962
best_error: 1.2011280534603563
best_error: 1.2010773219395747
best_error: 1.201077320526072
best_error: 1.2010323993207361
best_error: 1.2010323961413838
best_error: 1.2009683156283426
best_error: 1.2009683138318286
best_error: 1.200791923059732
best_error: 1.2007919100895965
best_error: 1.2007215896979206
best_error: 1.2007215813860952
best_error: 1.200669770049537
best_error: 1.200669765745044
best_error: 1.200662978497004
best_error: 1.2006629751008169
