ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.67741054572365
best_error: 97.67741045522622
best_error: 97.677410422316
best_error: 97.67741037589772
best_error: 18.633247332530715
best_error: 18.633247022362614
best_error: 18.63324485876655
best_error: 15.586281737641015
best_error: 15.586281736804155
best_error: 15.58628170208
best_error: 15.487570621369631
best_error: 15.487570620443137
best_error: 15.487570581878854
best_error: 15.218988294100225
best_error: 15.218988292768643
best_error: 15.21898825820286
best_error: 15.218988257009126
best_error: 14.251862472083761
best_error: 14.251862395103371
best_error: 14.251862391544787
best_error: 11.34593007079368
best_error: 11.345929775608736
best_error: 10.64807405248642
best_error: 10.64807405248553
best_error: 10.648074046520824
best_error: 10.648074038486406
best_error: 10.632070706821144
best_error: 10.632070706820166
best_error: 10.632070701573769
best_error: 10.63207069518388
best_error: 10.627738536683752
best_error: 10.627738536682878
best_error: 10.627738530809753
best_error: 10.62773852296999
best_error: 9.997371578159832
best_error: 9.997371578158948
best_error: 9.997371568448685
best_error: 9.997371559262522
best_error: 9.69550763448016
best_error: 9.695507634391186
best_error: 9.695507632023935
best_error: 9.695507622964866
best_error: 9.695507612579961
best_error: 9.189830399977284
best_error: 9.189830387690725
best_error: 9.189830381039377
best_error: 8.543956377832359
best_error: 8.543956370668766
best_error: 8.543956370326494
best_error: 8.543956352449577
best_error: 8.539283443492625
best_error: 8.53928325311
best_error: 8.454042935245498
best_error: 8.454042769301978
best_error: 8.394297113625557
best_error: 8.394297094758771
best_error: 8.38141464224292
best_error: 8.381414624972228
best_error: 8.356819601837572
best_error: 8.35681958521285
best_error: 8.254141451874021
best_error: 8.254141439835152
best_error: 8.218898786437833
best_error: 8.21889877441814
best_error: 8.21439685160083
best_error: 8.214396627210029
best_error: 8.189466306885015
best_error: 8.189466292345925
best_error: 8.17844321914304
best_error: 8.17844320543579
best_error: 8.175139183501845
best_error: 8.175139169813011
best_error: 8.17128980115165
best_error: 8.17128978738448
best_error: 8.1590689736218
best_error: 8.159068825717547
best_error: 8.139164949321104
best_error: 8.139164732774782
best_error: 8.093187146366416
best_error: 8.0931870532551
best_error: 8.08607885631111
best_error: 8.086078856125074
best_error: 8.086078855405468
best_error: 8.081584684900147
best_error: 8.0815846849001
best_error: 8.081584684899921
best_error: 8.08109087098502
best_error: 8.081090870984967
best_error: 8.081090870984792
best_error: 8.080975472321429
best_error: 8.080975465572081
best_error: 8.080966317879989
best_error: 8.080966317879945
best_error: 8.080966317879762
best_error: 8.080962661348245
best_error: 8.080962661348215
best_error: 8.080962661348018
best_error: 8.080961708420954
best_error: 8.080961701667201
best_error: 8.080961209191525
best_error: 8.080961209191491
best_error: 8.080961209191294
best_error: 8.080961190394373
best_error: 8.08096119012366
best_error: 8.080961189956584
best_error: 8.07636879603681
best_error: 8.076368722440748
best_error: 8.075593775511214
best_error: 8.07559373340785
best_error: 8.072588864801517
best_error: 8.072588815298129
best_error: 8.0602509392649
best_error: 8.06025088191285
best_error: 8.00272317834714
best_error: 8.002723135344477
best_error: 7.92290289576353
best_error: 7.922902834855976
best_error: 7.917669608472105
best_error: 7.91766955535473
best_error: 7.904553345092115
best_error: 7.904553343702225
best_error: 7.904553336712018
best_error: 7.903843053846581
best_error: 7.903843051760868
best_error: 7.903843044417711
best_error: 7.902554156122314
best_error: 7.902554131150245
best_error: 7.902554117278139
best_error: 7.902554049843727
best_error: 7.897835797922719
best_error: 7.897835794866485
best_error: 7.897835787229131
best_error: 7.894516326549482
best_error: 7.894516302213957
best_error: 7.8945162875442785
best_error: 7.88110147598214
best_error: 7.881101450045596
best_error: 7.88110144036987
best_error: 7.870905847142818
best_error: 7.87090584530106
best_error: 7.870905805831488
best_error: 7.859606922652947
best_error: 7.859606922142346
best_error: 7.859606860547526
best_error: 7.844348306733332
best_error: 7.844348203812
best_error: 7.8034595834188165
best_error: 7.803459069867838
best_error: 7.790743823827277
best_error: 7.790743823805626
best_error: 7.790743774165367
best_error: 7.772556274166658
best_error: 7.772556239610424
best_error: 7.76553366175683
best_error: 7.7655336272900195
best_error: 7.744978060615742
best_error: 7.744978011576124
best_error: 7.730647467901589
best_error: 7.7306470319532
best_error: 7.7099629328670325
best_error: 7.709962893898276
best_error: 7.658312251968936
best_error: 7.658312204359325
best_error: 7.653217463251291
best_error: 7.653217409409653
best_error: 7.615333774865755
best_error: 7.615333702814156
best_error: 7.499860082112562
best_error: 7.499860052521296
best_error: 7.3949868780580506
best_error: 7.39498684422965
best_error: 7.333984579143158
best_error: 7.333984541327265
best_error: 7.1543593517098785
best_error: 7.154359305258058
