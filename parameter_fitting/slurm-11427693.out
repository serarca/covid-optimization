ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 20.341457624865708
best_error: 20.341456770035872
best_error: 5.0611797547114294
best_error: 5.0611797545054795
best_error: 5.0611750709851835
best_error: 5.061175070983348
best_error: 5.061175070981499
best_error: 5.061156327359777
best_error: 5.061156327357938
best_error: 5.06115632735609
best_error: 5.061081213004427
best_error: 5.0610812130025735
best_error: 5.061081213000733
best_error: 5.060778496761841
best_error: 5.060778496759928
best_error: 5.060778496758118
best_error: 5.059530072108542
best_error: 5.059530072106362
best_error: 5.059530072104692
best_error: 5.0538241447719905
best_error: 5.0538241447679635
best_error: 5.05382414476747
best_error: 4.981992330741975
best_error: 4.981992329772456
best_error: 4.980155201397557
best_error: 4.980155200360375
best_error: 4.97820466849847
best_error: 4.978204667386919
best_error: 4.1346997090328665
best_error: 4.134699699165033
best_error: 4.134699590411514
best_error: 4.131686932167294
best_error: 4.1316869319986695
best_error: 4.131686816041326
best_error: 4.051502314710149
best_error: 4.051502266328072
best_error: 3.8659646311108764
best_error: 3.8659644913499447
best_error: 3.6921623368949725
best_error: 3.692162147931222
best_error: 3.6216978019461794
best_error: 3.621697741824055
best_error: 3.5700514367538045
best_error: 3.5700512167880953
best_error: 3.517477049700563
best_error: 3.5174770112107536
best_error: 3.514634640485632
best_error: 3.51463460138395
best_error: 3.513455270995245
best_error: 3.513455267635048
best_error: 3.513297677089844
best_error: 3.5132976751085776
best_error: 3.513297674939017
best_error: 3.5132380684834943
best_error: 3.513238066989942
best_error: 3.5132380663451226
best_error: 3.513002023827765
best_error: 3.513002023009225
best_error: 3.5130020217041005
best_error: 3.512125655829184
best_error: 3.5121256483300467
best_error: 3.500237874414276
best_error: 3.50023778696054
best_error: 3.477771727853336
best_error: 3.4777715423228903
best_error: 3.3329585079983697
best_error: 3.3329582760552254
best_error: 2.9958695057186446
best_error: 2.9958693692583926
best_error: 2.8110654059458353
best_error: 2.8110651478038657
best_error: 2.6328343037121296
best_error: 2.6328342585632623
best_error: 2.5891357663335657
best_error: 2.5891357069636185
best_error: 2.5864013362014067
best_error: 2.586401318984559
best_error: 2.583178564624758
best_error: 2.5831783649919755
best_error: 2.4387940478680017
best_error: 2.4387939433984593
best_error: 2.4297408936153744
best_error: 2.4297408538732075
best_error: 2.421072167308261
best_error: 2.4210721307329766
best_error: 2.4154626658894505
best_error: 2.415462661969931
best_error: 2.41546265917766
best_error: 2.413567940332512
best_error: 2.4135679284796576
best_error: 2.4122429528094083
best_error: 2.412242939337219
best_error: 2.410953014938227
best_error: 2.410952953923827
best_error: 2.408421031050715
best_error: 2.408420962891311
best_error: 2.4000300920337696
best_error: 2.4000300036148023
best_error: 2.3821375378448253
best_error: 2.3821374456533633
best_error: 2.342592932345677
best_error: 2.3425928943534324
best_error: 2.3390195262492885
best_error: 2.3390194830277053
best_error: 2.3370642713239316
best_error: 2.337064208331606
best_error: 2.3268718075325148
best_error: 2.3268717609199414
best_error: 2.3161904711636314
best_error: 2.316190434482687
best_error: 2.3034783604255953
best_error: 2.3034783214012
best_error: 2.291083295449763
best_error: 2.2910832492271114
best_error: 2.2671453950293947
best_error: 2.267145383793496
best_error: 2.2224151883667274
best_error: 2.2224151725192662
best_error: 2.210392809635294
best_error: 2.2103927984740386
best_error: 2.2083232048207524
best_error: 2.208323201973341
best_error: 2.2078320129362754
best_error: 2.207832010869908
best_error: 2.2078320086928995
best_error: 2.2075325459052118
best_error: 2.2075325422538215
best_error: 2.2075325391410696
best_error: 2.2052508259999395
best_error: 2.2052507864058954
best_error: 2.2005903394012942
best_error: 2.200590339232591
best_error: 2.200590308609409
best_error: 2.1948591055479714
best_error: 2.1948590587461747
best_error: 2.1927386994993547
best_error: 2.192738688752943
best_error: 2.1893732914549933
best_error: 2.1893732834446884
best_error: 2.1891797992846422
best_error: 2.189179744563491
best_error: 2.1878140713948597
best_error: 2.187814027677289
best_error: 2.1851701878249394
best_error: 2.1851701767481084
best_error: 2.184556508617493
best_error: 2.1845564776356485
best_error: 2.1845470951431163
best_error: 2.1845470616637725
best_error: 2.1845410901622735
best_error: 2.1845410529195446
best_error: 2.1837110049681567
best_error: 2.18371097438884
best_error: 2.18274540831324
best_error: 2.1827453910351817
best_error: 2.182042124798949
best_error: 2.1820420947332213
best_error: 2.181938763532382
best_error: 2.1819387515990964
best_error: 2.181647079173794
best_error: 2.1816470682741973
best_error: 2.1813877788148393
best_error: 2.1813877258006276
best_error: 2.180717243192183
best_error: 2.1807172228893794
best_error: 2.1802094817849302
best_error: 2.1802094695241085
best_error: 2.1799697825595232
best_error: 2.1799697590026805
best_error: 2.1782793469179755
best_error: 2.1782793099943247
best_error: 2.178243547806656
best_error: 2.1782435096685835
best_error: 2.1782162379725474
best_error: 2.1782161970112552
best_error: 2.177157064989315
best_error: 2.177157056556624
best_error: 2.176816604142428
best_error: 2.176816599028257
best_error: 2.176647665531483
best_error: 2.1766476577224196
best_error: 2.1765855763758926
best_error: 2.1765855731369608
best_error: 2.176557539173318
best_error: 2.17655753871463
best_error: 2.176557538620744
best_error: 2.1765494163842036
best_error: 2.176549413758476
best_error: 2.1765382729853986
best_error: 2.1765382706767826
best_error: 2.1763452188604977
best_error: 2.1763452132479717
best_error: 2.1760100208085573
best_error: 2.1760100047832105
best_error: 2.175355908534343
best_error: 2.1753558833080042
best_error: 2.173555607123502
best_error: 2.1735555706550778
best_error: 2.17203026450923
best_error: 2.172030247137065
best_error: 2.1685543347683747
best_error: 2.1685543298638503
best_error: 2.167174551856333
best_error: 2.167174531797841
best_error: 2.165219900946558
best_error: 2.1652198795095408
best_error: 2.16355632750039
best_error: 2.163556305042832
best_error: 2.1633996128108923
best_error: 2.163399600211425
best_error: 2.1632325730126096
best_error: 2.163232572147169
best_error: 2.1632325718136887
best_error: 2.1632325711474114
best_error: 2.1603389440847733
best_error: 2.160338939748456
best_error: 2.1568985826626186
best_error: 2.156898575617954
best_error: 2.1568690452179453
best_error: 2.156869043677583
best_error: 2.156869043621705
best_error: 2.154214434579522
best_error: 2.15421440329796
best_error: 2.1536968289812544
best_error: 2.153696823919411
best_error: 2.1536507619083993
best_error: 2.1536507616748737
best_error: 2.153650761467795
best_error: 2.153599269871705
best_error: 2.1535992692896047
best_error: 2.153434888455443
best_error: 2.153434883372918
best_error: 2.1532096937736527
best_error: 2.1532096860612358
best_error: 2.153120997045538
best_error: 2.153120985187491
best_error: 2.1528659072681284
best_error: 2.152865906220127
best_error: 2.1524007056954697
best_error: 2.1524006965013833
best_error: 2.152244070911252
best_error: 2.152244058578359
best_error: 2.1521628021077324
best_error: 2.1521627962475147
best_error: 2.1521144263923175
best_error: 2.1521144228542237
best_error: 2.1520743449442166
best_error: 2.152074341379385
best_error: 2.1520708849877668
best_error: 2.1520708839751537
