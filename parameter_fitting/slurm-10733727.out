ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.24747439921191
best_error: 10.247474372388252
best_error: 9.939453184889668
best_error: 9.93945312506145
best_error: 5.568812684033263
best_error: 5.568812684033259
best_error: 5.568812681068909
best_error: 5.463891664814125
best_error: 5.4638916648141205
best_error: 5.4638916607650625
best_error: 5.458369008175611
best_error: 5.4583690081756036
best_error: 5.458369002294364
best_error: 5.458053387880399
best_error: 5.458053387880396
best_error: 5.458053381992027
best_error: 5.45799134739716
best_error: 5.457991347397154
best_error: 5.457991341505275
best_error: 5.457950324548591
best_error: 5.4579503245485865
best_error: 5.457950318653045
best_error: 5.45791225650414
best_error: 5.457912256504136
best_error: 5.4579122506062365
best_error: 5.45787087931708
best_error: 5.457870879317075
best_error: 5.4578708734168435
best_error: 5.457831276987676
best_error: 5.457831276987671
best_error: 5.457831271075134
best_error: 5.457813443153613
best_error: 5.457813341891239
best_error: 5.457804923131902
best_error: 5.457804923131897
best_error: 5.457804917219245
best_error: 5.457774953737416
best_error: 5.457774953737412
best_error: 5.457774947822033
best_error: 5.457654963044324
best_error: 5.457654963044319
best_error: 5.457654957117998
best_error: 5.457329206478832
best_error: 5.4573291052064095
best_error: 5.455874654521794
best_error: 5.455874553633178
best_error: 5.449432193341806
best_error: 5.44943209248041
best_error: 5.411946403588344
best_error: 5.411946304581614
best_error: 5.101744188149506
best_error: 5.101744188149503
best_error: 5.10174418545622
best_error: 5.09656456050074
best_error: 5.096564560500738
best_error: 5.0963620998931365
best_error: 5.096362099893131
best_error: 5.090138849646007
best_error: 5.090138849646005
best_error: 5.0657649542354495
best_error: 5.065764954235446
best_error: 4.982172212235521
best_error: 4.982172212235519
best_error: 4.907946428657919
best_error: 4.907946428657917
best_error: 4.90794642708748
best_error: 4.907946425489657
best_error: 4.901244493225002
best_error: 4.901244431172648
best_error: 4.778556699808203
best_error: 4.778556699808202
best_error: 4.776044748079759
best_error: 4.776044748079756
best_error: 4.773713626501481
best_error: 4.773713626501478
best_error: 4.770878546710909
best_error: 4.770878546710908
best_error: 4.770878544939694
best_error: 4.762482242078211
best_error: 4.762482209529088
best_error: 4.7429557677227185
best_error: 4.742955767722716
best_error: 4.74295576464967
best_error: 4.742955757283701
best_error: 4.739355775924705
best_error: 4.7393557759247
best_error: 4.739355772013848
best_error: 4.739355765890155
best_error: 4.738034187388939
best_error: 4.738034187388938
best_error: 4.7380341833806385
best_error: 4.738034177499392
best_error: 4.737438136198763
best_error: 4.737438136198761
best_error: 4.737438132014269
best_error: 4.737438126331246
best_error: 4.737360629353731
best_error: 4.7373605805862145
best_error: 4.7370204291868765
best_error: 4.737020429186876
best_error: 4.737020427902353
best_error: 4.737020419209744
best_error: 4.736888035678529
best_error: 4.7368879899396426
best_error: 4.736044466710669
best_error: 4.736044428272821
best_error: 4.73576491006688
best_error: 4.735764871645094
best_error: 4.735748678227177
best_error: 4.735748639801896
best_error: 4.735744610552269
best_error: 4.735744610552268
best_error: 4.735744600517849
best_error: 4.735743527098981
best_error: 4.735743488672599
best_error: 4.735741594785112
best_error: 4.735741556357885
best_error: 4.735740608823356
best_error: 4.735740570395697
best_error: 4.735740497233127
best_error: 4.735740458805419
best_error: 4.735740458285709
best_error: 4.735740443443509
best_error: 4.735740442689875
best_error: 4.735740442689871
best_error: 4.735740440327005
best_error: 4.735740432595907
best_error: 4.7357404325959065
best_error: 4.735740430233053
best_error: 4.735740429915292
best_error: 4.735740429915291
best_error: 4.735740429915252
best_error: 4.735740428990036
best_error: 4.735740428990035
best_error: 4.735740428989998
