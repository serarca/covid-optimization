ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 90
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.20351803821825
best_error: 98.2035178892489
best_error: 13.429112412444987
best_error: 13.429112412434144
best_error: 13.42911238378616
best_error: 13.325036459287698
best_error: 13.325036459274738
best_error: 13.325036427279612
best_error: 12.754377605979833
best_error: 12.754377605919851
best_error: 12.754377553346743
best_error: 12.512367562619346
best_error: 12.512367562503929
best_error: 12.512367498450214
best_error: 12.207938517968635
best_error: 12.207938517745012
best_error: 12.207938433485102
best_error: 11.433804320464816
best_error: 11.433804320158604
best_error: 11.433804288729048
best_error: 11.424433067235473
best_error: 11.424433046928256
best_error: 11.368879330398013
best_error: 11.368879329831225
best_error: 11.368879329379192
best_error: 11.368197702662563
best_error: 11.368197702078803
best_error: 11.368197701615376
best_error: 11.363539352795252
best_error: 11.36353935219203
best_error: 11.363539351751136
best_error: 11.347012954093348
best_error: 11.347012953260323
best_error: 11.347012952993513
best_error: 11.166891558182751
best_error: 11.166891555216353
best_error: 11.164014863623379
best_error: 11.164014860583203
best_error: 11.014724671231505
best_error: 11.014724670862403
best_error: 11.014724666636782
best_error: 10.964527769034996
best_error: 10.964527764927496
best_error: 10.964020616882186
best_error: 10.964020612563345
best_error: 10.904183652032577
best_error: 10.904183647028315
best_error: 10.904183646615458
best_error: 10.777854875036963
best_error: 10.777854872391458
best_error: 10.777854856783291
best_error: 10.720684939534909
best_error: 10.720684938045492
best_error: 10.720684925381072
best_error: 10.502241832927792
best_error: 10.502241830525096
best_error: 10.365505513587976
best_error: 10.36550551289115
best_error: 10.365505510590523
best_error: 10.307466321060614
best_error: 10.30746630614527
best_error: 10.28095405956873
best_error: 10.280954058233826
best_error: 10.280954044042362
best_error: 10.082452340719751
best_error: 10.082452322751006
best_error: 9.90913041523586
best_error: 9.909130333129484
best_error: 9.640260671413376
best_error: 9.640260620608032
best_error: 9.555750565609726
best_error: 9.555750544758347
best_error: 9.555750517590006
best_error: 9.52813461071321
best_error: 9.528134546802024
best_error: 9.526170028417841
best_error: 9.526170022911275
best_error: 9.52616998359784
best_error: 9.500065115113598
best_error: 9.500065055000984
best_error: 9.076482090991705
best_error: 9.076482054188046
best_error: 8.903009541042398
best_error: 8.903009296407983
best_error: 8.747199936325371
best_error: 8.747199912296985
best_error: 8.717483600417836
best_error: 8.717483420761246
best_error: 8.530226176301213
best_error: 8.530226150091417
best_error: 8.43533682828435
best_error: 8.435336809099784
best_error: 8.432296637359718
best_error: 8.432296425263383
best_error: 8.43111943538795
best_error: 8.431119416170269
best_error: 8.430083325173038
best_error: 8.430083111698345
best_error: 8.429598756440425
best_error: 8.429598737190714
best_error: 8.42786045605182
best_error: 8.427860247662883
best_error: 8.420582695683954
best_error: 8.420582488020768
best_error: 8.368350627216579
best_error: 8.368350605621668
best_error: 8.323822124173297
best_error: 8.323822103444067
best_error: 8.165698220838543
best_error: 8.165698204359517
best_error: 8.061589634975268
best_error: 8.061589632095151
best_error: 8.061589628872447
best_error: 8.028914774865425
best_error: 8.028914755554617
best_error: 7.929320227547665
best_error: 7.92932020314607
best_error: 7.739479056963347
best_error: 7.739478999122218
best_error: 7.739478968718634
best_error: 7.670268797381929
best_error: 7.670268742687785
best_error: 7.65644249084615
best_error: 7.656442452181316
best_error: 7.650516371503065
best_error: 7.65051581449259
best_error: 7.644020410609607
best_error: 7.644020363540786
best_error: 7.634284584363155
best_error: 7.634284508609327
best_error: 7.627095708333631
best_error: 7.6270956293110235
best_error: 7.624593281052322
best_error: 7.624593199938773
best_error: 7.6242617346456685
best_error: 7.624261270534941
best_error: 7.62412650030597
best_error: 7.62412641905735
best_error: 7.623881314732901
best_error: 7.6238812334182855
best_error: 7.623847027538502
best_error: 7.623846946214634
best_error: 7.623842595335243
best_error: 7.623842131251219
best_error: 7.600485019703547
best_error: 7.600485016337109
best_error: 7.600485003056553
best_error: 7.600484998456345
best_error: 7.596735210937319
best_error: 7.596735206207137
best_error: 7.59673518947518
best_error: 7.595489210806084
best_error: 7.595489206118404
best_error: 7.5954892057500265
best_error: 7.595489189256856
best_error: 7.594894889362782
best_error: 7.5948948846954005
best_error: 7.594894884135458
best_error: 7.594894867772005
best_error: 7.594872434493988
best_error: 7.594872429827381
best_error: 7.594872429260177
best_error: 7.594872412901641
best_error: 7.594865924889875
best_error: 7.594865920223469
best_error: 7.594865919654192
best_error: 7.594865903297073
best_error: 7.5948650561647595
best_error: 7.59486505149837
best_error: 7.594865050928825
best_error: 7.594865034571899
best_error: 7.594864660933309
best_error: 7.594864606826762
best_error: 7.58728268336473
best_error: 7.587282630804675
best_error: 7.586555955315638
best_error: 7.586555547713848
best_error: 7.579078372198908
best_error: 7.579077969152682
best_error: 7.577565452820966
best_error: 7.577565451020429
best_error: 7.577565434160664
