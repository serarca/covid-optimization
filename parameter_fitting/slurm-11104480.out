ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 70
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.97524068572133
best_error: 101.97524060035241
best_error: 101.97524049397576
best_error: 20.227593870533582
best_error: 20.227593870532118
best_error: 20.227593868001566
best_error: 20.225706034157817
best_error: 20.225706031610105
best_error: 20.217910306651437
best_error: 20.217910303952863
best_error: 20.181209046933493
best_error: 20.18120904320577
best_error: 18.332218611947958
best_error: 18.33221836108954
best_error: 15.8599331351279
best_error: 15.859932856020418
best_error: 14.824071699599035
best_error: 14.82407169920625
best_error: 14.824071698158573
best_error: 14.824071695236308
best_error: 14.824071100771036
best_error: 14.750646016147993
best_error: 14.7506458947478
best_error: 14.329882038914128
best_error: 14.329882037119994
best_error: 14.329882023589004
best_error: 14.32988201969593
best_error: 14.237566196549817
best_error: 14.23756619557154
best_error: 14.237566189439661
best_error: 14.237566182038389
best_error: 14.237566177156998
best_error: 14.058342834632185
best_error: 14.058342824226036
best_error: 14.058342819876675
best_error: 14.058342815360753
best_error: 13.874212228525575
best_error: 13.874212173954719
best_error: 13.260219899327463
best_error: 13.26021988276307
best_error: 13.259272553738455
best_error: 13.259272424451328
best_error: 13.240298447958484
best_error: 13.240298317000622
best_error: 13.24028353963559
best_error: 13.240283524355817
best_error: 13.240283523482315
best_error: 13.22614515505851
best_error: 13.226145140382213
best_error: 13.226145139036817
best_error: 13.225311014265984
best_error: 13.225310873368715
best_error: 13.205077655199574
best_error: 13.205077504794058
best_error: 13.170219028178309
best_error: 13.170219015456142
best_error: 13.170219012620919
best_error: 13.163656605893486
best_error: 13.163656593710366
best_error: 13.163656590352169
best_error: 13.150747304937049
best_error: 13.150747293135119
best_error: 13.150747289439337
best_error: 13.10659504168381
best_error: 13.106595030486957
best_error: 13.106595026207252
best_error: 13.062841076552768
best_error: 13.062841066208234
best_error: 13.062841061091355
best_error: 12.895351519456216
best_error: 12.89535151239197
best_error: 12.895351506044804
best_error: 12.895351503934151
best_error: 12.770033089733232
best_error: 12.770033079241284
best_error: 12.770033068197591
best_error: 12.766325009579395
best_error: 12.766324998031845
best_error: 12.766324987502644
best_error: 12.7516580334147
best_error: 12.751658014069035
best_error: 12.751658007906595
best_error: 12.74476984211271
best_error: 12.74476982386238
best_error: 12.744769549183156
best_error: 12.693048413500321
best_error: 12.693048405270213
best_error: 12.69304839745566
best_error: 12.620936547543668
best_error: 12.62093653798604
best_error: 12.6209365314181
best_error: 12.347387786135775
best_error: 12.347387783267973
best_error: 12.329646388665477
best_error: 12.329646372270501
best_error: 12.329646371929181
best_error: 12.30380146283674
best_error: 12.303801462147003
best_error: 12.303801434419025
best_error: 12.298786991990221
best_error: 12.298786991350418
best_error: 12.298786964364849
best_error: 12.297944030471495
best_error: 12.297944029827084
best_error: 12.297944002806966
best_error: 12.297735261025782
best_error: 12.297735260380229
best_error: 12.297735233351595
best_error: 12.297681966443637
best_error: 12.29768196579779
best_error: 12.297681938766928
best_error: 12.29768010306596
best_error: 12.297680102420099
best_error: 12.297680075389163
best_error: 12.297679678528386
best_error: 12.297679677882522
best_error: 12.297679650851567
best_error: 12.297679612038781
best_error: 12.297679611392917
best_error: 12.297679611139497
best_error: 12.297679605123445
best_error: 12.253918928998164
best_error: 12.253918922861567
best_error: 12.253918824635658
best_error: 12.248032961859904
best_error: 12.248032867405762
best_error: 12.23571104040899
best_error: 12.23571096208584
best_error: 12.23503496534693
best_error: 12.235034887262831
best_error: 12.234571248383237
best_error: 12.234571170266083
best_error: 12.23436656984506
best_error: 12.23436649171334
best_error: 12.23419539374315
best_error: 12.234195315599266
best_error: 12.234125076503199
best_error: 12.234124998354314
best_error: 12.234079734031452
best_error: 12.234079655879349
best_error: 12.23405060878312
best_error: 12.234050530628947
best_error: 12.234031459923209
best_error: 12.234031381767672
best_error: 12.234016746175518
best_error: 12.23401666831801
best_error: 12.23400968206307
best_error: 12.23400960420506
best_error: 12.234004043303507
best_error: 12.23400396544509
best_error: 12.234001518234791
best_error: 12.234001440376195
best_error: 12.234000520315991
best_error: 12.234000442457319
best_error: 12.234000346490774
best_error: 12.234000268632085
best_error: 12.234000261133751
best_error: 12.234000217438219
best_error: 12.234000214223908
best_error: 12.234000207503144
best_error: 12.234000201926793
best_error: 12.234000201162901
best_error: 12.234000199731167
