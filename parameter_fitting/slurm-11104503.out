ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 70
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 110.5467280174406
best_error: 110.54672787310611
best_error: 110.54672782415878
best_error: 20.228349322649976
best_error: 20.228349322648477
best_error: 20.22834931996045
best_error: 20.227669074459744
best_error: 20.227669071751354
best_error: 20.224899747041338
best_error: 20.22489974425536
best_error: 20.21298315915685
best_error: 20.21298315602175
best_error: 20.145660482931035
best_error: 20.145660477352195
best_error: 16.475197837392567
best_error: 16.475197782692746
best_error: 14.750557084471515
best_error: 14.750556744662827
best_error: 14.277050845128421
best_error: 14.277050721980299
best_error: 14.254461259207524
best_error: 14.254461164583335
best_error: 14.244341374996242
best_error: 14.244341366958771
best_error: 14.243839972351967
best_error: 14.243839892927813
best_error: 14.243812249126073
best_error: 14.24381216969905
best_error: 14.243808666687872
best_error: 14.243808587260457
best_error: 14.24380857454462
best_error: 14.243808566525743
best_error: 14.240926733423185
best_error: 14.240926653175524
best_error: 14.229480569131923
best_error: 14.229480485822375
best_error: 14.186773891285945
best_error: 14.186773883495952
best_error: 14.030494500958559
best_error: 14.030494488396892
best_error: 13.97288223564831
best_error: 13.972882229691342
best_error: 13.972882229097578
best_error: 13.94554336608849
best_error: 13.94554335912336
best_error: 13.945543355954975
best_error: 13.829238287049527
best_error: 13.829238280296254
best_error: 13.829238279033977
best_error: 13.764203926644615
best_error: 13.76420391625872
best_error: 13.759224830985566
best_error: 13.759224818171756
best_error: 13.724400118845793
best_error: 13.724400070656229
best_error: 13.724400067547005
best_error: 13.673037516368769
best_error: 13.673037506101979
best_error: 13.673037505563478
best_error: 13.658158851170278
best_error: 13.658158843021384
best_error: 13.658158842670609
best_error: 13.62284247374897
best_error: 13.622842433911124
best_error: 13.622842431889731
best_error: 13.613729534244664
best_error: 13.61372953262159
best_error: 13.613729531971366
best_error: 13.61372952877166
best_error: 13.609952929008912
best_error: 13.609952907446434
best_error: 13.609518515533527
best_error: 13.609518499390227
best_error: 13.609292247437246
best_error: 13.609292225542426
best_error: 13.608934051178867
best_error: 13.608934018509224
best_error: 13.608934017280696
best_error: 13.607024926027393
best_error: 13.607024925807508
best_error: 13.607024918480477
best_error: 13.606748516371473
best_error: 13.606748516154806
best_error: 13.606748508782308
best_error: 13.59350919144785
best_error: 13.593509156748954
best_error: 13.593509154618346
best_error: 13.536990537763401
best_error: 13.536990504577332
best_error: 13.536990501225185
best_error: 13.474649065558985
best_error: 13.474649018981527
best_error: 13.403708787876031
best_error: 13.403708786999974
best_error: 13.40370875185932
best_error: 13.282802648815585
best_error: 13.282802646776345
best_error: 13.282802626319182
best_error: 13.226613211406363
best_error: 13.226613208911202
best_error: 13.226613198796647
best_error: 13.22661319225157
best_error: 13.193424077878424
best_error: 13.193424073720605
best_error: 13.1934240734323
best_error: 13.19342406259804
best_error: 13.097115301737329
best_error: 13.097115266372404
best_error: 13.097115256085486
best_error: 13.051456708880822
best_error: 13.051456601947912
best_error: 13.046798280689712
best_error: 13.046798234908099
best_error: 13.040714141336545
best_error: 13.040714106435757
best_error: 13.029846309100977
best_error: 13.029846276485117
best_error: 13.025392841164074
best_error: 13.025392810732235
best_error: 13.025392802505536
best_error: 13.017598111149953
best_error: 13.017598106420223
best_error: 13.01759810545645
best_error: 13.00258001630278
best_error: 13.002580009681875
best_error: 13.002580008006376
best_error: 13.002535295117418
best_error: 13.002535261195986
best_error: 13.002535251120383
best_error: 12.994472247881834
best_error: 12.994472213229933
best_error: 12.994472202916608
best_error: 12.96711685899113
best_error: 12.967116851622364
best_error: 12.967116849109377
best_error: 12.962579897561103
best_error: 12.962579887855824
best_error: 12.962579882406505
best_error: 12.943947420244774
best_error: 12.94394741532351
best_error: 12.943947413492904
best_error: 12.943525991864632
best_error: 12.943525987491602
best_error: 12.943525985983836
best_error: 12.943375062807235
best_error: 12.943375059209238
best_error: 12.943375058127643
best_error: 12.94324058506215
best_error: 12.943240580834088
best_error: 12.943240579474434
best_error: 12.941085091812202
best_error: 12.941085088126353
best_error: 12.94108508666157
best_error: 12.939330009429202
best_error: 12.939330005575993
best_error: 12.939330003545088
best_error: 12.93812525557221
best_error: 12.938125252578825
best_error: 12.938125251093492
best_error: 12.935138353907815
best_error: 12.93513835118496
best_error: 12.93513834960975
best_error: 12.931788261637774
best_error: 12.931788261337676
best_error: 12.931007159153562
best_error: 12.93100715820579
best_error: 12.931007157743146
best_error: 12.930303243182408
best_error: 12.93030324100721
best_error: 12.930303239271815
best_error: 12.929808360372121
best_error: 12.929808358907795
best_error: 12.929808358073288
