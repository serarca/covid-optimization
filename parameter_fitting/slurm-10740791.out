ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.466754621044618
best_error: 10.466754608920327
best_error: 10.05254963793695
best_error: 10.052549582623191
best_error: 6.231867676217384
best_error: 6.23186720023086
best_error: 5.028311256197815
best_error: 5.028310935197663
best_error: 4.87876350982274
best_error: 4.878763509822141
best_error: 4.878763497441927
best_error: 4.874603100049986
best_error: 4.874603100049382
best_error: 4.8746030853240265
best_error: 4.871622054596264
best_error: 4.871622030310869
best_error: 4.861378851556917
best_error: 4.8613788063534615
best_error: 4.818156814225299
best_error: 4.818156748983019
best_error: 4.538806734905973
best_error: 4.538806730464281
best_error: 4.538806697791366
best_error: 4.335024560226598
best_error: 4.335024560226
best_error: 4.335024552219026
best_error: 4.300745247858265
best_error: 4.300745247857742
best_error: 4.285408419873638
best_error: 4.285408419873086
best_error: 4.16173898876408
best_error: 4.161738988763808
best_error: 4.161738986280613
best_error: 4.156569332735186
best_error: 4.156569302871441
best_error: 4.155142838345667
best_error: 4.155142838345362
best_error: 4.155142834870298
best_error: 4.155059246484867
best_error: 4.155059246484582
best_error: 4.155059246241258
best_error: 4.1550592420434285
best_error: 4.155010869533283
best_error: 4.1550108685026945
best_error: 4.155010868018377
best_error: 4.155010865081606
best_error: 4.1546726707840245
best_error: 4.154672669078657
best_error: 4.1546726687927364
best_error: 4.154672666301621
best_error: 4.153376161231475
best_error: 4.153376157025801
best_error: 4.153376156638597
best_error: 4.149070831222964
best_error: 4.149070817936908
best_error: 4.116536087898124
best_error: 4.1165360878976704
best_error: 4.1165360605755525
best_error: 4.102526898027176
best_error: 4.102526882025819
best_error: 4.102526856047731
best_error: 4.09579173751344
best_error: 4.095791737512922
best_error: 4.095791697110505
best_error: 4.085018121453658
best_error: 4.085018121453077
best_error: 4.08501808330815
best_error: 4.027873807982513
best_error: 4.027873807981782
best_error: 4.02787378193858
best_error: 4.027873758101918
best_error: 3.8927523427698394
best_error: 3.8927523427695365
best_error: 3.892752338912477
best_error: 3.892752334510454
best_error: 3.8898623555528657
best_error: 3.889862340727307
best_error: 3.889633664032938
best_error: 3.8896336640326523
best_error: 3.88961244683944
best_error: 3.889612446839152
best_error: 3.88959695945853
best_error: 3.889596959458244
best_error: 3.889596959443328
best_error: 3.8895906058922805
best_error: 3.8895906058919887
best_error: 3.889590605818971
best_error: 3.8895878694253945
best_error: 3.889587869425104
best_error: 3.8895878693429573
best_error: 3.88958505454702
best_error: 3.889585054546727
best_error: 3.8895850544042507
best_error: 3.88958290272355
best_error: 3.8895829027232622
best_error: 3.8895829025053477
best_error: 3.8895811136448915
best_error: 3.889581113644604
best_error: 3.8895811134056992
best_error: 3.8895805003518378
best_error: 3.88958050035155
best_error: 3.889580500112445
best_error: 3.889579954457334
best_error: 3.8895799544570426
best_error: 3.889579954206211
best_error: 3.8895785337920588
best_error: 3.8895785337917697
best_error: 3.8895785335404973
best_error: 3.889578474236156
best_error: 3.889578474235864
best_error: 3.8895784739845736
best_error: 3.8895784216461697
best_error: 3.889578421645878
best_error: 3.889578421394569
best_error: 3.8895783922962237
best_error: 3.889578392295935
best_error: 3.889578392044614
best_error: 3.8895783666938915
best_error: 3.889578366693601
best_error: 3.889578366442273
best_error: 3.8895783511675983
best_error: 3.889578351167312
best_error: 3.8895783509159747
best_error: 3.8895783380109803
best_error: 3.8895783380106934
best_error: 3.889578337759358
best_error: 3.889578292457195
best_error: 3.889578292456908
best_error: 3.8895782922055524
best_error: 3.889578290941866
best_error: 3.889578290941574
best_error: 3.8895782906902205
best_error: 3.889578289564067
best_error: 3.889578289563781
best_error: 3.8895782893124284
