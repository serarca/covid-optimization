ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.540493137608788
best_error: 22.54049313433572
best_error: 22.540493117260258
best_error: 22.54049308241927
best_error: 2.4378082958312324
best_error: 2.4378081971588244
best_error: 2.331273877295535
best_error: 2.3312738494548033
best_error: 2.3203414930054533
best_error: 2.3203414729778085
best_error: 2.2795326603685218
best_error: 2.2795326273426952
best_error: 2.268625572880524
best_error: 2.268625528515969
best_error: 2.2470515244871776
best_error: 2.2470514836289275
best_error: 2.210481957255543
best_error: 2.210481895102264
best_error: 2.145181929800714
best_error: 2.145181880874969
best_error: 2.1008788710089603
best_error: 2.100878858023822
best_error: 2.0516150571337515
best_error: 2.0516150477210435
best_error: 2.0516150319512865
best_error: 1.968473555660191
best_error: 1.9684734903830048
best_error: 1.9613987783488742
best_error: 1.9613987336335035
best_error: 1.8580575865492674
best_error: 1.858057585823762
best_error: 1.8580575856339197
best_error: 1.8580575803948505
best_error: 1.8580575682942126
best_error: 1.7370177679818048
best_error: 1.737017670448967
best_error: 1.7223412748475098
best_error: 1.722341273522438
best_error: 1.7223412585469426
best_error: 1.7151816492049687
best_error: 1.7151816105672517
best_error: 1.7099659687888633
best_error: 1.7099659352757164
best_error: 1.6511799652617842
best_error: 1.6511798921198613
best_error: 1.6211062599699573
best_error: 1.6211062498638755
best_error: 1.6211061707904386
best_error: 1.569488659251241
best_error: 1.5694886456015882
best_error: 1.569488604771592
best_error: 1.5690382955626307
best_error: 1.5690382818943973
best_error: 1.5690382413193222
best_error: 1.553270597188052
best_error: 1.5532705863273595
best_error: 1.5084247902520644
best_error: 1.5084247791992467
best_error: 1.5032685814959756
best_error: 1.5032685674956425
best_error: 1.4968143145478054
best_error: 1.496814309064306
best_error: 1.4900830644761462
best_error: 1.4900829747695812
best_error: 1.4825531580596913
best_error: 1.4825530703655883
best_error: 1.4824720049524236
best_error: 1.4824719173101852
best_error: 1.4747714270475398
best_error: 1.4747712873644827
best_error: 1.4367627571696886
best_error: 1.436762755765862
best_error: 1.4367627339439464
best_error: 1.433417032339976
best_error: 1.4334169061550335
best_error: 1.4313651713340831
best_error: 1.4313650270707547
best_error: 1.4280827193394237
best_error: 1.428082555403316
best_error: 1.4168806099622853
best_error: 1.4168803396305873
best_error: 1.401342511971274
best_error: 1.401342400352452
best_error: 1.3818299566830805
best_error: 1.3818299492648234
best_error: 1.3579174190113894
best_error: 1.3579170264997302
best_error: 1.3579169628744752
best_error: 1.3351396529536004
best_error: 1.3351394345286383
best_error: 1.3275200459046608
best_error: 1.3275200348730152
best_error: 1.3214289818952878
best_error: 1.3214286080672588
best_error: 1.3029975983358328
best_error: 1.3029973667418713
best_error: 1.2799441486438163
best_error: 1.2799438939208605
best_error: 1.2621797499949674
best_error: 1.2621797158590344
best_error: 1.2410949926549442
best_error: 1.2410949541029102
best_error: 1.2144913588597057
best_error: 1.2144913560497985
best_error: 1.214491352468745
best_error: 1.102154846178357
best_error: 1.1021548250001698
best_error: 1.0856033775905036
best_error: 1.0856033710035176
best_error: 1.0460948367499134
best_error: 1.0460947541593315
best_error: 1.0460947332508284
best_error: 1.045800011103034
best_error: 1.0457999394074005
best_error: 1.0420663413904487
best_error: 1.0420662745662868
best_error: 1.0389942588725705
best_error: 1.0389941942871743
best_error: 1.036498280943984
best_error: 1.036498221223222
best_error: 1.0347654567458664
best_error: 1.0347654557535817
best_error: 1.0347654495013652
best_error: 1.0278153761560223
best_error: 1.027815375817485
best_error: 1.0278153690416945
best_error: 0.9904148675328744
best_error: 0.9904148486458265
best_error: 0.9772212412160585
best_error: 0.9772211997696953
best_error: 0.9766514799033262
best_error: 0.9766514288749215
best_error: 0.9743628608811207
best_error: 0.9743628250030969
best_error: 0.9730154887325952
best_error: 0.9730154622386645
best_error: 0.9696961670717427
best_error: 0.9696961599109061
best_error: 0.9679663723160921
best_error: 0.9679663719787134
best_error: 0.9679663692231256
best_error: 0.9656418088181513
best_error: 0.9656417827350167
best_error: 0.9652624715056279
best_error: 0.9652624493188533
best_error: 0.9635620812276998
best_error: 0.9635620750244971
best_error: 0.9630025577793755
best_error: 0.9630025446933529
best_error: 0.9615030763123771
best_error: 0.961503042367054
best_error: 0.9576236200317975
best_error: 0.9576235845646305
best_error: 0.950280560628301
best_error: 0.9502805368606735
best_error: 0.9466641231454301
best_error: 0.9466640858121071
best_error: 0.9442078885365319
best_error: 0.9442078519222181
best_error: 0.9419091672704789
best_error: 0.9419091444966887
best_error: 0.9399188574449698
best_error: 0.9399188418107801
best_error: 0.9355136654112706
best_error: 0.9355136510723616
best_error: 0.9354662011041326
best_error: 0.9354661874838306
best_error: 0.9352924015150331
best_error: 0.9352923932727245
best_error: 0.9336987294126472
best_error: 0.933698699910375
best_error: 0.9334366652448403
best_error: 0.9334366651141152
best_error: 0.933436664940278
best_error: 0.9334366637427002
best_error: 0.9333672806946107
best_error: 0.9333672804043404
best_error: 0.9333672803665779
best_error: 0.9333672790555692
best_error: 0.9333606702883296
best_error: 0.9333606698841937
best_error: 0.9333606685011445
best_error: 0.933354788470583
best_error: 0.9333547881002885
best_error: 0.9333547866929374
best_error: 0.9333438020356871
best_error: 0.9333438017332134
best_error: 0.9333438017066458
best_error: 0.9333438003562523
best_error: 0.933336204814715
best_error: 0.9333362044806067
best_error: 0.9333362030775837
best_error: 0.9332918322440671
best_error: 0.9332918319044896
best_error: 0.9332918304287618
best_error: 0.9329807836045257
best_error: 0.93298076571762
best_error: 0.9326770512829211
best_error: 0.9326770252518122
best_error: 0.9312531416490625
best_error: 0.9312530917409684
best_error: 0.928804835135795
best_error: 0.9288047528853641
best_error: 0.9288032015578023
best_error: 0.9163991215965602
best_error: 0.9163990788202432
best_error: 0.9160682458390801
best_error: 0.9160681981958005
best_error: 0.9159205129152737
best_error: 0.9159204593986127
best_error: 0.9159204439481564
best_error: 0.9153786427242652
best_error: 0.9153786160787492
best_error: 0.8904057705494846
best_error: 0.8904057590915824
best_error: 0.8900987878345517
best_error: 0.8900987804632688
best_error: 0.8899191005928465
best_error: 0.8899190968715232
best_error: 0.8897500602840573
best_error: 0.8897500513584233
best_error: 0.8895971661012085
best_error: 0.8895971577159305
best_error: 0.889390209867219
best_error: 0.8893902079514338
best_error: 0.8893812817137362
best_error: 0.8893812797651768
best_error: 0.8893798448608206
best_error: 0.8893798421862225
best_error: 0.8893792840206446
best_error: 0.8893792805926427
best_error: 0.8893784989244076
best_error: 0.8893784971215695
best_error: 0.8893766463371484
best_error: 0.8893766438672733
best_error: 0.8893735027449113
best_error: 0.8893734996874586
best_error: 0.8893681117538648
best_error: 0.8893681078433444
best_error: 0.8893647270479513
best_error: 0.8893647241698137
best_error: 0.889361521892811
best_error: 0.8893615198518602
best_error: 0.8893605683159974
best_error: 0.8893605681106673
best_error: 0.889360567931043
best_error: 0.8893605672975688
best_error: 0.8893605668703448
best_error: 0.8893604702418372
best_error: 0.889360470077634
best_error: 0.8893604698569095
best_error: 0.8893604692247021
best_error: 0.8893604687949896
best_error: 0.889360414648639
best_error: 0.8893604144984399
best_error: 0.8893604142637712
best_error: 0.8893604136326789
best_error: 0.8893604132004878
best_error: 0.8893603542320099
best_error: 0.8893603540868789
best_error: 0.8893603538471742
best_error: 0.8893603532164797
best_error: 0.8893603527835588
best_error: 0.8893601903435456
best_error: 0.889360190197099
best_error: 0.8893601899588452
best_error: 0.8893601893297369
best_error: 0.8893601888930646
best_error: 0.8893599873193186
best_error: 0.889359987008132
best_error: 0.8893599869347939
best_error: 0.8893599863048736
best_error: 0.8893599858672849
best_error: 0.8893594319955802
best_error: 0.8893594316400525
best_error: 0.8893594316110206
best_error: 0.8893594309769774
best_error: 0.8893594305471508
best_error: 0.8893572447208631
best_error: 0.8893572445273906
best_error: 0.8893572443348485
best_error: 0.8893572436758111
best_error: 0.8893572432975222
best_error: 0.8893563547118039
best_error: 0.8893563538674885
best_error: 0.8893563535822424
best_error: 0.8893563533580999
best_error: 0.8893552520248297
best_error: 0.8893552490315606
