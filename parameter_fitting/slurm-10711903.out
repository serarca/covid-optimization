ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.189199164799966
best_error: 12.189198979648479
best_error: 10.50534844097756
best_error: 10.505348021075566
best_error: 8.352789259317447
best_error: 8.352788562115483
best_error: 5.825393299433024
best_error: 5.825392840856457
best_error: 5.604244509441368
best_error: 5.604244101037201
best_error: 5.574996025014619
best_error: 5.574995621351066
best_error: 5.5695637211915985
best_error: 5.569563462419518
best_error: 5.561347614961594
best_error: 5.5613472169516545
best_error: 5.533102890661891
best_error: 5.533102490581831
best_error: 5.530135027395858
best_error: 5.530134626854704
best_error: 5.528292063327313
best_error: 5.5282916625001
best_error: 5.526951251001847
best_error: 5.526950849966635
best_error: 5.526206137052745
best_error: 5.526205736861925
best_error: 5.525091112591137
best_error: 5.525090712227391
best_error: 5.524791339659789
best_error: 5.5247909392495735
best_error: 5.524699131809995
best_error: 5.524698731385469
best_error: 5.524643124873039
best_error: 5.524642724439843
best_error: 5.524611037313016
best_error: 5.524610636874842
best_error: 5.524590599259694
best_error: 5.52459019881835
best_error: 5.5245778415264795
best_error: 5.524577441083137
best_error: 5.524571664664288
best_error: 5.52457126422
best_error: 5.524567556383394
best_error: 5.524567155938469
best_error: 5.524565438035513
best_error: 5.52456503759025
best_error: 5.5245640723580784
best_error: 5.524563671912631
best_error: 5.524563331728223
best_error: 5.524562931282665
best_error: 5.524562882053095
best_error: 5.524562481607454
best_error: 5.524562363804526
best_error: 5.524562093014788
best_error: 5.524561631775956
best_error: 5.524561231330123
best_error: 5.524558186089484
best_error: 5.524557785643139
best_error: 5.524544420169757
best_error: 5.524544019721389
best_error: 5.524489625617441
best_error: 5.5244892251610676
best_error: 5.524286949750848
best_error: 5.52428654830444
best_error: 5.523545968024592
best_error: 5.523545566471667
best_error: 5.502006931593156
best_error: 5.5020066749684595
best_error: 5.383106984400086
best_error: 5.383106379517272
best_error: 5.207088384515837
best_error: 5.207088234688072
best_error: 5.1630780424946
best_error: 5.163077307435859
best_error: 5.1474510197634835
best_error: 5.14745086899368
best_error: 5.144895334534001
best_error: 5.144894592554405
best_error: 5.127752101418647
best_error: 5.127751920491276
best_error: 5.1255161492640475
best_error: 5.12551597046804
best_error: 5.12400343552142
best_error: 5.124003262317328
best_error: 5.123229564259541
best_error: 5.123229390978791
best_error: 5.1232176120998805
best_error: 5.123216941069689
best_error: 5.123158882003921
best_error: 5.12315870316443
best_error: 5.122690652867135
best_error: 5.122690474359498
best_error: 5.122217886836642
best_error: 5.122217240431107
best_error: 5.122028696311528
best_error: 5.122028059025583
best_error: 5.0928187989406
best_error: 5.09281862577861
best_error: 5.076355933600482
best_error: 5.076355766454148
best_error: 4.962876496729459
best_error: 4.962876302497032
best_error: 4.950978385936482
best_error: 4.950977724814723
best_error: 4.946715439277844
best_error: 4.946714777742383
best_error: 4.938220688876497
best_error: 4.938220486619281
best_error: 4.926798699872151
best_error: 4.9267980576147234
best_error: 4.914410834459034
best_error: 4.914410606128752
best_error: 4.904724329345557
best_error: 4.904723730109744
best_error: 4.884983695702223
best_error: 4.884983466970528
best_error: 4.881259290320849
best_error: 4.88125869046729
best_error: 4.867738405621867
best_error: 4.86773817650202
best_error: 4.858195228499844
best_error: 4.858194631348641
best_error: 4.836909993201592
best_error: 4.836909763294093
best_error: 4.814754813599273
best_error: 4.814754198470718
best_error: 4.807809232055551
best_error: 4.807809022043214
best_error: 4.801638736452548
best_error: 4.801638515319168
best_error: 4.784477155243135
best_error: 4.7844765461434715
best_error: 4.774762156555201
best_error: 4.774761930939419
best_error: 4.766782301185092
best_error: 4.766782075968328
best_error: 4.7427519970360335
best_error: 4.742751403986081
best_error: 4.735894214481821
best_error: 4.7358939886615845
best_error: 4.728431299546251
best_error: 4.728431074555513
best_error: 4.727002097380545
best_error: 4.727001513574168
best_error: 4.701567781463231
best_error: 4.701567207224301
best_error: 4.701519780335179
best_error: 4.701519206882166
best_error: 4.697833668510851
best_error: 4.69783344411066
best_error: 4.697714932510011
best_error: 4.697714360631526
best_error: 4.696008811841763
best_error: 4.696008587192142
best_error: 4.695993373739054
best_error: 4.695992801735164
best_error: 4.695756553650422
best_error: 4.6957559743684225
best_error: 4.672770397729783
best_error: 4.67276982755166
best_error: 4.670948635826489
best_error: 4.670948414371554
best_error: 4.668802821336619
best_error: 4.668802601998745
best_error: 4.664683410475639
best_error: 4.664682836768611
