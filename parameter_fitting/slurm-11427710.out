ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.53685655621606
best_error: 23.536855856903554
best_error: 5.03839699827568
best_error: 5.038396997998985
best_error: 5.038385379472369
best_error: 5.038385379469632
best_error: 5.038385379460592
best_error: 5.038338865698883
best_error: 5.038338865696138
best_error: 5.038338865687096
best_error: 5.03815219110178
best_error: 5.038152191099006
best_error: 5.038152191089958
best_error: 5.037395414959936
best_error: 5.037395414957037
best_error: 5.037395414947967
best_error: 5.03419557316338
best_error: 5.034195573159875
best_error: 5.034195573150767
best_error: 5.0175554674436205
best_error: 5.017555467433592
best_error: 5.0175554674268685
best_error: 4.992288202485068
best_error: 4.9922882024342465
best_error: 4.897506326687018
best_error: 4.8975063246742625
best_error: 4.882804751671463
best_error: 4.882804748965237
best_error: 4.866447772026919
best_error: 4.866447768432742
best_error: 3.4786256821389583
best_error: 3.478625551133268
best_error: 3.4604976681371795
best_error: 3.4604975394547393
best_error: 3.29374824671457
best_error: 3.293748113927502
best_error: 3.2077348700145567
best_error: 3.207734791508093
best_error: 3.202118476760447
best_error: 3.202118473464121
best_error: 3.20211843985025
best_error: 3.1948309495315486
best_error: 3.194830939506224
best_error: 3.1948309377954263
best_error: 3.1844012624201357
best_error: 3.1844012496045475
best_error: 3.1779051394903597
best_error: 3.1779051158695335
best_error: 3.1678166697939183
best_error: 3.1678166402715493
best_error: 3.157363363412768
best_error: 3.1573633279637505
best_error: 3.119358739735323
best_error: 3.119358721287104
best_error: 3.103534756860949
best_error: 3.1035347211447646
best_error: 3.0949060007546354
best_error: 3.0949059527110263
best_error: 3.0756066988715944
best_error: 3.075606644147679
best_error: 3.053360607276076
best_error: 3.053360349125197
best_error: 2.745555336106574
best_error: 2.745555171719823
best_error: 2.4973813939730154
best_error: 2.4973813369810354
best_error: 2.2443348165756087
best_error: 2.244334700183293
best_error: 2.14917547223414
best_error: 2.149175398483857
best_error: 2.1317676965344323
best_error: 2.131767540321871
best_error: 2.1069584803429016
best_error: 2.1069583777801655
best_error: 2.100804011472232
best_error: 2.1008039929768985
best_error: 2.0812784043029042
best_error: 2.081278390249842
best_error: 2.078340028927026
best_error: 2.078339972423589
best_error: 2.073069257121876
best_error: 2.0730692342663217
best_error: 2.072647779286033
best_error: 2.0726477700054335
best_error: 2.0724723779708416
best_error: 2.07247237778583
best_error: 2.072472377192044
best_error: 2.072472374029603
best_error: 2.072413556941097
best_error: 2.0724135569045217
best_error: 2.072413556748691
best_error: 2.0724135561626396
best_error: 2.072413552990639
best_error: 2.0721911353849625
best_error: 2.0721911332047505
best_error: 2.072191131411711
best_error: 2.0714761658553145
best_error: 2.071476154315256
best_error: 2.0675656479795657
best_error: 2.0675656202688115
best_error: 2.064241587436552
best_error: 2.0642415657538282
best_error: 2.0622504965058686
best_error: 2.0622504955368197
best_error: 2.0622504925163296
best_error: 2.0615007007656483
best_error: 2.0615006941451357
best_error: 2.061057724072952
best_error: 2.0610577178125506
best_error: 2.0601130489378168
best_error: 2.060113044846493
best_error: 2.060113035707889
best_error: 2.059019629495639
best_error: 2.0590195325905536
best_error: 2.058162363539485
best_error: 2.058162318886263
best_error: 2.0556257443740877
best_error: 2.0556256698458975
best_error: 2.0420476314770157
best_error: 2.042047460290734
best_error: 2.028466499983266
best_error: 2.0284663512707595
best_error: 2.0061380540970437
best_error: 2.006138053796463
best_error: 2.006138053055554
best_error: 2.006138052455343
best_error: 2.005781810955664
best_error: 2.005781800451823
best_error: 2.0042690650364605
best_error: 2.0042690506578054
best_error: 2.0042215851538026
best_error: 2.0042215687884184
best_error: 2.0039965297151716
best_error: 2.003996526149355
best_error: 2.0038896757397855
best_error: 2.003889672336639
best_error: 2.0037909598955674
best_error: 2.0037909578974076
best_error: 2.0033870471281077
best_error: 2.003387037258523
best_error: 2.0028272972819186
best_error: 2.002827287018972
best_error: 1.996803981885351
best_error: 1.9968039762792573
best_error: 1.9885302444829132
best_error: 1.9885301744795982
best_error: 1.9850962002359185
best_error: 1.9850961788068233
best_error: 1.980279297510223
best_error: 1.9802792955567574
best_error: 1.971601753880155
best_error: 1.971601726176254
best_error: 1.9708384356848532
best_error: 1.9708384203006557
best_error: 1.9699206145722798
best_error: 1.9699205856354447
best_error: 1.9679226246473105
best_error: 1.9679226127656775
best_error: 1.9676712027784016
best_error: 1.9676711989524236
best_error: 1.96759227111722
best_error: 1.9675922665005654
best_error: 1.9675709999390945
best_error: 1.9675709977429605
best_error: 1.9675606173337876
best_error: 1.9675606161503287
best_error: 1.9675576069152612
best_error: 1.9675576062100406
best_error: 1.9675500069972054
best_error: 1.9675500059208384
best_error: 1.967541819137615
best_error: 1.967541818472707
best_error: 1.967530923974144
best_error: 1.9675309228399123
best_error: 1.9674438704741284
best_error: 1.9674438698165755
best_error: 1.9674438639230922
best_error: 1.967299784051224
best_error: 1.9672997834978043
best_error: 1.9672997746471033
best_error: 1.9658607909873447
best_error: 1.9658607560731916
best_error: 1.9657034455494125
best_error: 1.9657034369958564
best_error: 1.9657034353447418
best_error: 1.9655583325780044
best_error: 1.9655583196472608
best_error: 1.9649246817495571
best_error: 1.9649246699256642
best_error: 1.9646414378662127
best_error: 1.9646414364800202
best_error: 1.964588124041026
best_error: 1.9645881233449125
best_error: 1.9644377365614727
best_error: 1.9644377282433414
best_error: 1.9643419987616222
best_error: 1.9643419923411976
best_error: 1.9642612261399077
best_error: 1.9642612258710443
best_error: 1.9642612258409935
best_error: 1.963973504639176
best_error: 1.96397350335753
best_error: 1.9628580836355893
best_error: 1.9628580811470693
best_error: 1.9628537341665233
best_error: 1.9628537336527017
best_error: 1.9628537323081456
best_error: 1.9628521310426295
best_error: 1.9628521290736878
best_error: 1.9622607969534969
best_error: 1.9622607948702304
best_error: 1.9611462173860286
best_error: 1.9611462153254127
best_error: 1.9605137129200185
best_error: 1.9605137102951193
best_error: 1.9602071793881708
best_error: 1.9602071784517714
best_error: 1.9600923785669004
best_error: 1.9600923755793707
best_error: 1.9599683892062147
best_error: 1.9599683877969216
best_error: 1.9595772477481292
best_error: 1.9595772471273352
best_error: 1.9592162253771477
best_error: 1.9592162082198703
best_error: 1.958943911237038
best_error: 1.958943910804651
best_error: 1.958943910801763
best_error: 1.9588497507124811
best_error: 1.9588497505518694
best_error: 1.9588497499801585
best_error: 1.958796824941624
best_error: 1.9587968247438892
best_error: 1.958796824101631
best_error: 1.958672994188985
best_error: 1.958672994061726
best_error: 1.9586729930448405
best_error: 1.9584885833499646
best_error: 1.958488582595113
best_error: 1.958488581713994
best_error: 1.9583490530588656
best_error: 1.9583490528629213
best_error: 1.9583490528527003
best_error: 1.9583490519948952
best_error: 1.9582125723372892
best_error: 1.9582125572697646
best_error: 1.9579965641488588
best_error: 1.9579965641203494
best_error: 1.95799656136094
best_error: 1.957896501211279
best_error: 1.9578964967133239
best_error: 1.9578938300137587
best_error: 1.9578938274736624
best_error: 1.9578680561035389
best_error: 1.9578680534678878
best_error: 1.9578604431198834
best_error: 1.957860440599938
best_error: 1.9578587557939395
best_error: 1.957858755602797
best_error: 1.957858724884361
best_error: 1.9578587247108508
best_error: 1.9578587220586752
