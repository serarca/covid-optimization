ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.46906073575755
best_error: 12.469060693710219
best_error: 12.469060681380043
best_error: 12.268027951978638
best_error: 12.268027896063213
best_error: 12.268027884162862
best_error: 10.921153476248339
best_error: 10.921153312145098
best_error: 9.13042966894114
best_error: 9.130429390513909
best_error: 8.512925468995144
best_error: 8.512925190128849
best_error: 8.36836657561394
best_error: 8.368366319161037
best_error: 8.3490483308067
best_error: 8.349048118555423
best_error: 7.780690243596349
best_error: 7.780690032028939
best_error: 5.563308215736594
best_error: 5.56330797591564
best_error: 5.445608036812377
best_error: 5.445607793959433
best_error: 5.395042480702843
best_error: 5.395042232169376
best_error: 5.378035384485656
best_error: 5.378035137554829
best_error: 5.372524812055505
best_error: 5.372524564501551
best_error: 5.3696268646054826
best_error: 5.369626616723961
best_error: 5.368661235461891
best_error: 5.368660963956632
best_error: 4.816733779781282
best_error: 4.816733386615888
best_error: 4.788287681237415
best_error: 4.788287273381702
best_error: 4.758719289220972
best_error: 4.758718869599438
best_error: 4.736416022707909
best_error: 4.736415480941234
best_error: 4.6304303050277245
best_error: 4.63042980202442
best_error: 4.552228467191519
best_error: 4.552227973263811
best_error: 4.5476620690161
best_error: 4.547661869280377
best_error: 4.541499429563521
best_error: 4.541498983955931
best_error: 4.533467229789716
best_error: 4.533467003451026
best_error: 4.514511046395097
best_error: 4.514510846209581
best_error: 4.5043640398028995
best_error: 4.504363819906047
best_error: 4.477021396779735
best_error: 4.47702117064811
best_error: 4.472772955529052
best_error: 4.472772728789563
best_error: 4.457798823563419
best_error: 4.457798595532539
best_error: 4.4072949850422685
best_error: 4.407294754632175
best_error: 4.406143994154122
best_error: 4.406143548161255
best_error: 4.333330905253085
best_error: 4.333330678131034
best_error: 4.328990126741944
best_error: 4.328989705986137
best_error: 4.316093473997981
best_error: 4.316093068940629
best_error: 4.142104870148939
best_error: 4.142104545287614
best_error: 4.132137057232018
best_error: 4.13213668711506
best_error: 4.025743959225264
best_error: 4.025743607276675
best_error: 3.9583743952837853
best_error: 3.9583740363884634
best_error: 3.937607266390102
best_error: 3.9376071337797796
best_error: 3.9376071142398694
best_error: 3.8486811627512387
best_error: 3.848680754164815
best_error: 3.8340513159897194
best_error: 3.834050913155626
best_error: 3.773515651120063
best_error: 3.7735155232125406
best_error: 3.773515499318786
best_error: 3.740343123771275
best_error: 3.7403427386784145
best_error: 3.640979669211407
best_error: 3.640979555548495
best_error: 3.6409795166041654
best_error: 3.6091572063896313
best_error: 3.609156782535437
best_error: 3.607070417650693
best_error: 3.607070322855977
best_error: 3.6070702633208915
best_error: 3.5796229380112186
best_error: 3.5796228374984267
best_error: 3.5685915933937205
best_error: 3.568591183924027
best_error: 3.5626046375500744
best_error: 3.5626045458360887
best_error: 3.5626044841755258
best_error: 3.558789132064991
best_error: 3.558788722741059
best_error: 3.5566015708837484
best_error: 3.5566011613686976
best_error: 3.556220925653
best_error: 3.556220830883301
best_error: 3.5562207724372104
best_error: 3.5558885418296735
best_error: 3.5558881321993647
best_error: 3.5517471539248024
best_error: 3.5517470610846402
best_error: 3.5324915599385895
best_error: 3.532491138332927
best_error: 3.4549315886838414
best_error: 3.454931522158218
best_error: 3.345581948250742
best_error: 3.345581502846975
best_error: 3.2249808961821342
best_error: 3.224980454972025
best_error: 3.1952056431391718
best_error: 3.19520520385579
best_error: 3.193159606200223
best_error: 3.1931591667074426
best_error: 3.193047907564176
best_error: 3.1930478811499867
best_error: 3.193047753849325
best_error: 3.1930276994197255
best_error: 3.193027259910399
best_error: 3.192900133126037
best_error: 3.1928996936006944
best_error: 3.1928847733736982
best_error: 3.192884333846425
best_error: 3.1928804850117007
best_error: 3.1928800454839035
best_error: 3.192879082670441
best_error: 3.1928790120768182
best_error: 3.1928789634777774
best_error: 3.1928789370652226
best_error: 3.192878883490947
best_error: 3.1928788679716282
best_error: 3.1928788550287366
best_error: 3.1928788525640255
best_error: 3.1816774520029147
best_error: 3.1816770122908817
best_error: 3.1699179641564106
best_error: 3.1699175314287684
best_error: 3.1604688076001795
best_error: 3.1604683508022955
best_error: 3.1537569066659707
best_error: 3.153756459329742
