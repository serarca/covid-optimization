ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.062444030399273
best_error: 13.06244399971197
best_error: 13.062443993591195
best_error: 12.965644770800798
best_error: 12.965644732639678
best_error: 12.965644727181541
best_error: 10.856696132320133
best_error: 10.85669588825018
best_error: 7.268376681410146
best_error: 7.268376310130692
best_error: 7.1086453706959585
best_error: 7.108645110938844
best_error: 7.097462221513188
best_error: 7.097461979543597
best_error: 6.31938346190001
best_error: 6.319383239599729
best_error: 6.066534508458034
best_error: 6.0665342826266055
best_error: 6.045223434269305
best_error: 6.045223208158156
best_error: 6.040580175357821
best_error: 6.0405798610520876
best_error: 5.983183653745323
best_error: 5.983183188661326
best_error: 5.682272389412511
best_error: 5.6822719598437725
best_error: 5.184778338845701
best_error: 5.184777923976703
best_error: 5.079686820094388
best_error: 5.079686397592489
best_error: 5.034850117863742
best_error: 5.034849694133301
best_error: 5.013122025152892
best_error: 5.01312159977483
best_error: 5.007370604548342
best_error: 5.00737034463332
best_error: 5.005666916986016
best_error: 5.005666490575227
best_error: 5.005461771658576
best_error: 5.005461345219382
best_error: 5.0053718037354855
best_error: 5.005371377283818
best_error: 5.0053602424451284
best_error: 5.005359815991875
best_error: 5.005354353515878
best_error: 5.0053540936908565
best_error: 4.9354637590968995
best_error: 4.935463291904964
best_error: 4.934876901158354
best_error: 4.934876406991464
best_error: 4.933668410395439
best_error: 4.933667939314523
best_error: 4.93264635306717
best_error: 4.93264586952346
best_error: 4.928072762157708
best_error: 4.928072277395547
best_error: 4.9080524379701576
best_error: 4.908051942866193
best_error: 4.902995077708803
best_error: 4.902994848852007
best_error: 4.9013513965810365
best_error: 4.901351164870393
best_error: 4.90076102639497
best_error: 4.900760794985472
best_error: 4.900361649791542
best_error: 4.90036141853289
best_error: 4.900139011570155
best_error: 4.900138780400013
best_error: 4.900005938941291
best_error: 4.900005707825673
best_error: 4.89977470357138
best_error: 4.899774472522699
best_error: 4.899698799039664
best_error: 4.899698568013265
best_error: 4.899668108757872
best_error: 4.89966787774059
best_error: 4.8996542687650795
best_error: 4.899654037751936
best_error: 4.899642950057846
best_error: 4.89964271904708
best_error: 4.899639567069805
best_error: 4.899639070846887
best_error: 4.899638467190421
best_error: 4.899638236180612
best_error: 4.899638222056015
best_error: 4.899637991046264
best_error: 4.899637985775669
best_error: 4.896066485859029
best_error: 4.896066256865929
best_error: 4.8853618783884105
best_error: 4.885361389039225
best_error: 4.869598443676596
best_error: 4.869598200926063
best_error: 4.865201200998908
best_error: 4.865200958989363
best_error: 4.843885418536092
best_error: 4.843885179349543
best_error: 4.834488853864211
best_error: 4.834488616247713
best_error: 4.834421044173056
best_error: 4.834420808327349
best_error: 4.819460602317472
best_error: 4.819460372171553
best_error: 4.81721393301161
best_error: 4.81721340263317
best_error: 4.792681095228436
best_error: 4.79268087748906
best_error: 4.768930341121374
best_error: 4.7689297934221795
best_error: 4.731978226443662
best_error: 4.73197800912722
best_error: 4.728613098170209
best_error: 4.728612880734024
best_error: 4.727429727835201
best_error: 4.727429508442455
best_error: 4.726772151856096
best_error: 4.726771595320079
best_error: 4.726753605410081
best_error: 4.726753385992756
best_error: 4.726717931376638
best_error: 4.726717711958065
best_error: 4.72671694404559
best_error: 4.726716387501305
best_error: 4.7159923411608435
best_error: 4.715992128388081
best_error: 4.709524313676954
best_error: 4.709524119532535
best_error: 4.7073354225681125
best_error: 4.707335220063193
best_error: 4.7055798225320675
best_error: 4.705579612370329
best_error: 4.704024732905115
best_error: 4.704024518627386
best_error: 4.700492802818765
best_error: 4.700492586262367
best_error: 4.699340291500606
best_error: 4.699340071131003
best_error: 4.698840960312772
best_error: 4.698840738665395
best_error: 4.6951727093062665
best_error: 4.695172486228122
best_error: 4.694987994736076
best_error: 4.694987771962369
best_error: 4.667542892947351
best_error: 4.667542323882706
best_error: 4.637563236302414
best_error: 4.637563004764018
best_error: 4.6189714010154885
best_error: 4.61897118400889
best_error: 4.569150978295106
best_error: 4.569150763625492
best_error: 4.54677339169802
best_error: 4.546772769706562
best_error: 4.51321587210994
best_error: 4.513215660544768
best_error: 4.507816691401102
best_error: 4.507816071444934
best_error: 4.478188758975576
best_error: 4.478188543133783
best_error: 4.465708628177351
best_error: 4.465708009385713
best_error: 4.41100638586704
best_error: 4.411006155355435
best_error: 4.369629733047013
best_error: 4.369629171671591
