ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.63021420874518
best_error: 23.63021380457333
best_error: 4.723586396662432
best_error: 4.723586395555534
best_error: 4.723273219563714
best_error: 4.723273219556234
best_error: 4.723273219531774
best_error: 4.722013657109391
best_error: 4.722013657101742
best_error: 4.722013657077278
best_error: 4.716869026151689
best_error: 4.716869026143297
best_error: 4.716869026118846
best_error: 4.694286080876121
best_error: 4.694286080863422
best_error: 4.694286080839792
best_error: 4.533651211055687
best_error: 4.533651210836586
best_error: 4.4583642970150645
best_error: 4.458364296400206
best_error: 4.367305006018449
best_error: 4.367305004419638
best_error: 3.4161804340382877
best_error: 3.416180304649172
best_error: 3.241995791395839
best_error: 3.2419957620029214
best_error: 3.1761839488475063
best_error: 3.17618391223336
best_error: 3.0556720342968786
best_error: 3.05567185060615
best_error: 3.029374637085191
best_error: 3.029374441558218
best_error: 2.7724765355541643
best_error: 2.772476367617413
best_error: 2.413440153335621
best_error: 2.413440132533886
best_error: 2.4115237150031006
best_error: 2.4115237093759445
best_error: 2.411523705245273
best_error: 2.4086341285913746
best_error: 2.408634126161896
best_error: 2.408634119005929
best_error: 2.399025720251784
best_error: 2.399025700611397
best_error: 2.3973290092405954
best_error: 2.397328986959339
best_error: 2.3963919779006617
best_error: 2.396391954822698
best_error: 2.3959836406799444
best_error: 2.395983617301448
best_error: 2.3951622231003133
best_error: 2.3951622196360827
best_error: 2.395162207420954
best_error: 2.387315973795406
best_error: 2.3873159676464373
best_error: 2.3873159659337886
best_error: 2.387315964991582
best_error: 2.359353087261129
best_error: 2.3593530666176985
best_error: 2.2269269772676035
best_error: 2.2269268870102663
best_error: 2.013411230013897
best_error: 2.0134110538928307
best_error: 1.9919980835215885
best_error: 1.9919980324234388
best_error: 1.8673841659282484
best_error: 1.8673841274978529
best_error: 1.6778054222596563
best_error: 1.677805329386631
best_error: 1.6400258500138722
best_error: 1.6400258499978353
best_error: 1.6400258494591617
best_error: 1.6400258468153002
best_error: 1.59104449633173
best_error: 1.5910444963153
best_error: 1.591044494036345
best_error: 1.5730264206544513
best_error: 1.5730264206406883
best_error: 1.5730264202294304
best_error: 1.57302641878807
best_error: 1.5660031765912172
best_error: 1.566003176491296
best_error: 1.5660031759352577
best_error: 1.5660031749683667
best_error: 1.5626981344691873
best_error: 1.5626981343617785
best_error: 1.5626981343381319
best_error: 1.5626981339273653
best_error: 1.562698133276011
best_error: 1.560794590306586
best_error: 1.5607945849277107
best_error: 1.56061210340821
best_error: 1.5606121006313431
best_error: 1.5605944728658645
best_error: 1.5605944716074085
best_error: 1.5605872617387655
best_error: 1.5605872604674855
best_error: 1.560558913469338
best_error: 1.5605589120778254
best_error: 1.5604619289101773
best_error: 1.560461927000576
best_error: 1.5594861036830727
best_error: 1.5594860968101387
best_error: 1.5557970168056132
best_error: 1.5557970058178268
best_error: 1.5556031306628042
best_error: 1.5556031304161484
best_error: 1.5556031303853157
best_error: 1.5556031296517983
best_error: 1.554530003282642
best_error: 1.554530003179974
best_error: 1.55453000295638
best_error: 1.5545300024584936
best_error: 1.5535036256846946
best_error: 1.5535036183490192
best_error: 1.5531714780319592
best_error: 1.5531714763858782
best_error: 1.552101617521515
best_error: 1.5521016090310262
best_error: 1.549059047518022
best_error: 1.5490590282730736
best_error: 1.5438884672535635
best_error: 1.5438884402625161
best_error: 1.5417349799313416
best_error: 1.541734963006197
best_error: 1.5384077648774253
best_error: 1.5384077648093686
best_error: 1.538407764477924
best_error: 1.538407763020399
best_error: 1.5378957601133925
best_error: 1.5378957046691415
best_error: 1.537206398205887
best_error: 1.5372063763865773
best_error: 1.5365346880511748
best_error: 1.536534673060512
best_error: 1.536376912948524
best_error: 1.5363769128060465
best_error: 1.5363769124953035
best_error: 1.5363769124165154
best_error: 1.5363693252664115
best_error: 1.5363693241567262
best_error: 1.536362862828138
best_error: 1.536362861278352
best_error: 1.5363471625878518
best_error: 1.5363471624335907
best_error: 1.5363471620716718
best_error: 1.5363244338615853
best_error: 1.5363244338564477
best_error: 1.5363244333536568
best_error: 1.5362474665902743
best_error: 1.5362474629218774
best_error: 1.5359226634535132
best_error: 1.5359226558764467
best_error: 1.5349452706542346
best_error: 1.5349452421113556
best_error: 1.5337073764623668
best_error: 1.533707334490475
best_error: 1.5322857652464241
best_error: 1.532285705817201
best_error: 1.530227621077511
best_error: 1.530227593633089
best_error: 1.5292571471979488
best_error: 1.5292571320261075
best_error: 1.5290747024434852
best_error: 1.5290747024194418
best_error: 1.5290747018563282
best_error: 1.5290091727337178
best_error: 1.5290091726778965
best_error: 1.5290091720981545
best_error: 1.528996260895073
best_error: 1.5289962608576473
best_error: 1.5289962602817588
best_error: 1.528996260234693
best_error: 1.5289380498671263
best_error: 1.5289380498095637
best_error: 1.5289380492223257
best_error: 1.528774329886478
best_error: 1.5287743288044342
best_error: 1.5287743286432038
best_error: 1.5285642198954061
best_error: 1.5285642167964513
best_error: 1.528150535376873
best_error: 1.5281505291622357
best_error: 1.526821073096513
best_error: 1.5268210596812388
best_error: 1.5239835373186674
best_error: 1.5239835142855975
best_error: 1.5208827483725773
best_error: 1.5208827277892147
best_error: 1.5154257854310855
best_error: 1.5154257827757436
best_error: 1.5154257678528131
best_error: 1.5123456190752504
best_error: 1.5123456181196562
best_error: 1.5123456151071988
best_error: 1.5122372834294537
best_error: 1.5122372794140984
best_error: 1.5121746637898168
best_error: 1.5121746631069823
best_error: 1.5121723185628624
best_error: 1.5121723180158144
best_error: 1.5121685365822188
best_error: 1.5121685352389265
best_error: 1.5121658221569905
best_error: 1.5121658211036595
best_error: 1.5121580722850214
best_error: 1.5121580722775478
best_error: 1.5121580720042218
best_error: 1.5121542975050266
best_error: 1.5121542972355795
best_error: 1.5121527383137567
best_error: 1.5121527382786828
best_error: 1.5121527382261366
best_error: 1.5121493682901208
best_error: 1.512149367242141
best_error: 1.5121465833003591
best_error: 1.5121465820802293
best_error: 1.5121408623139894
best_error: 1.512140860394403
best_error: 1.5121268949263404
best_error: 1.512126892434432
best_error: 1.5120762974694484
best_error: 1.512076293878998
best_error: 1.5116993208993637
best_error: 1.5116993105908316
best_error: 1.5109761236376784
best_error: 1.5109761202769019
best_error: 1.5109761143963767
best_error: 1.508699452037408
best_error: 1.5086994374500322
best_error: 1.506902152429862
best_error: 1.5069021301687644
best_error: 1.5068590064281089
best_error: 1.5068589780324382
best_error: 1.506858407273819
best_error: 1.5068583785154481
best_error: 1.5068582223206033
best_error: 1.506858193502811
best_error: 1.5063986829263638
best_error: 1.5063986789292223
best_error: 1.5062204552660774
best_error: 1.5062204402357877
best_error: 1.505594746971377
best_error: 1.5055947469615483
best_error: 1.5052924701254273
best_error: 1.5052924680234119
best_error: 1.5048707060557365
best_error: 1.5048707052071328
best_error: 1.504864712182459
best_error: 1.5048647120711323
best_error: 1.5048599267548106
best_error: 1.5048599266599865
best_error: 1.5048453033018674
best_error: 1.5048453032370046
best_error: 1.5048453032293116
best_error: 1.504801120530317
best_error: 1.504801120508263
best_error: 1.5048011204967997
best_error: 1.504801120341737
best_error: 1.5047350578616616
best_error: 1.5047350577692122
best_error: 1.5047350576530187
best_error: 1.5045396425537414
best_error: 1.5045396396996369
best_error: 1.5043854143670463
best_error: 1.5043854112040593
best_error: 1.5043312825243615
best_error: 1.5043312820869255
best_error: 1.504320234107754
best_error: 1.5043202331587873
best_error: 1.5043201249163385
best_error: 1.504320123709891
best_error: 1.5043201118538787
best_error: 1.5043201102669073
best_error: 1.5042638710903145
best_error: 1.5042638705188578
best_error: 1.5042172496838833
best_error: 1.5042172488554764
best_error: 1.5042077554806312
best_error: 1.5042077547873745
best_error: 1.5041956357466129
best_error: 1.5041956347394363
best_error: 1.504130355640824
best_error: 1.5041303543314397
