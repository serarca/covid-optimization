ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 7.780384835360101
best_error: 7.780384810820453
best_error: 7.41057697798572
best_error: 7.410576935163894
best_error: 5.853835668607087
best_error: 5.853835627139596
best_error: 5.853835477313943
best_error: 5.219846352796123
best_error: 5.219846264599585
best_error: 5.219846254396607
best_error: 5.204213263021739
best_error: 5.204213173315281
best_error: 5.204213171157322
best_error: 4.473253908249745
best_error: 4.473253862869376
best_error: 3.880087981455201
best_error: 3.8800878961043344
best_error: 3.7146343673610023
best_error: 3.7146343211141204
best_error: 2.2482363377248
best_error: 2.248236302087987
best_error: 2.248236182879915
best_error: 2.2421787269818476
best_error: 2.242178368511227
best_error: 2.0735924234645644
best_error: 2.073592415369516
best_error: 2.0735921951763414
best_error: 2.032169440303593
best_error: 2.03216943634599
best_error: 2.0321692070258015
best_error: 1.8865277691117044
best_error: 1.8865275046911845
best_error: 1.6011710049596841
best_error: 1.6011706392424947
best_error: 1.587926331581966
best_error: 1.5879259576192113
best_error: 1.576049990306645
best_error: 1.5760496132158663
best_error: 1.5674057705703215
best_error: 1.5674053939701258
best_error: 1.5536464046755822
best_error: 1.5536460206172704
best_error: 1.5472553762669616
best_error: 1.5472549872022796
best_error: 1.5435940183674908
best_error: 1.5435936291156593
best_error: 1.5377088925447078
best_error: 1.5377084997447925
best_error: 1.5356568466345755
best_error: 1.5356564525941425
best_error: 1.5350062246363132
best_error: 1.5350058279700798
best_error: 1.5341363153308707
best_error: 1.5341362993153012
best_error: 1.5340943144307353
best_error: 1.5340939169281689
best_error: 1.534036426649517
best_error: 1.5340360291306334
best_error: 1.5339933628605862
best_error: 1.533992965329567
best_error: 1.5339605785565786
best_error: 1.5339601810163497
best_error: 1.5339394230264323
best_error: 1.5339390254802177
best_error: 1.5339176355875486
best_error: 1.5339172380352069
best_error: 1.533907454584186
best_error: 1.5339070570289925
best_error: 1.5338944707072835
best_error: 1.5338940731484372
best_error: 1.533891446263112
best_error: 1.5338910487034152
best_error: 1.533889322570231
best_error: 1.5338889250099395
best_error: 1.5338873948919263
best_error: 1.5338869973310794
best_error: 1.5338863634556614
best_error: 1.5338859658945254
best_error: 1.5338851359097343
best_error: 1.53388473834826
best_error: 1.5338846819031848
best_error: 1.5338842843415947
best_error: 1.5338840238076568
best_error: 1.533883777167043
best_error: 1.5338836537957146
best_error: 1.5338836135942167
best_error: 1.5338835832986026
best_error: 1.533883567194747
best_error: 1.4379379051565189
best_error: 1.4379378757063142
best_error: 1.4378180961191935
best_error: 1.4378180649977483
best_error: 1.4376797255960077
best_error: 1.4376796945589632
best_error: 1.4368770187199627
best_error: 1.4368769910493469
best_error: 1.4355049366639847
best_error: 1.435504905735749
best_error: 1.433256128114758
best_error: 1.4332560966517516
best_error: 1.4327716789477698
best_error: 1.432771647384555
best_error: 1.4326841101883447
best_error: 1.4326840786058286
best_error: 1.432588773058269
best_error: 1.432588741576271
best_error: 1.41582871184174
best_error: 1.415828421123416
best_error: 1.4067393743385748
best_error: 1.4067390914954314
best_error: 1.4048306639272528
best_error: 1.404830630155871
best_error: 1.4016057364269043
best_error: 1.4016054572735692
best_error: 1.3936782761825168
best_error: 1.393678239015228
best_error: 1.3702230763142342
best_error: 1.3702230363134793
best_error: 1.3428632118057446
best_error: 1.3428631746354829
best_error: 1.3323464088042258
best_error: 1.3323463714860206
best_error: 1.3248263820050727
best_error: 1.324826342776304
best_error: 1.312548160472403
best_error: 1.3125481201985703
best_error: 1.3113164325939928
best_error: 1.3113163921425375
best_error: 1.3110969032462205
best_error: 1.3110968974881407
best_error: 1.3110966251813037
best_error: 1.3109455665910348
best_error: 1.3109455261568361
best_error: 1.3109320415834809
best_error: 1.310932035829354
best_error: 1.310931763502233
best_error: 1.2679937101897603
best_error: 1.2679934149371523
best_error: 1.2679908628688716
best_error: 1.2679905676159686
best_error: 1.2679794735572254
best_error: 1.267979178303188
best_error: 1.26793391586037
best_error: 1.2679336206017011
best_error: 1.267751677868446
best_error: 1.2677513825912987
best_error: 1.267022610624144
best_error: 1.2670223152731
best_error: 1.2661489791251759
best_error: 1.2661486836856097
best_error: 1.265854144413166
best_error: 1.265853848943752
best_error: 1.2656633391333783
best_error: 1.2656630436446041
best_error: 1.2656509853941307
best_error: 1.2656509472276631
best_error: 1.2656190494037953
best_error: 1.265618753909814
best_error: 1.2530630728925554
best_error: 1.253063036098207
best_error: 1.2530629859103453
best_error: 1.2530303352234744
best_error: 1.25303003021265
best_error: 1.245000520853135
best_error: 1.245000163535177
best_error: 1.2384401828524125
best_error: 1.2384398539523773
best_error: 1.2381223027155122
best_error: 1.2381219696030685
best_error: 1.2377262285724409
best_error: 1.237725890430813
best_error: 1.2369076831154637
best_error: 1.2369073444351586
best_error: 1.2357292321765108
best_error: 1.2357288920006582
best_error: 1.23551600417419
best_error: 1.2355156639425997
best_error: 1.2354268530591772
best_error: 1.235426512804264
best_error: 1.235385901220356
best_error: 1.2353855609547337
best_error: 1.235366403271168
best_error: 1.2353660630004348
best_error: 1.2353613405016026
best_error: 1.2353613116303765
best_error: 1.2353612507389178
best_error: 1.235360950115171
best_error: 1.2353606098424268
best_error: 1.235338661699102
best_error: 1.2353383214901692
best_error: 1.2353368037154113
best_error: 1.235336463836202
best_error: 1.2353329747797313
best_error: 1.235332974491193
