ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.858118262299076
best_error: 24.85811770917793
best_error: 5.040478334346453
best_error: 5.040478334078469
best_error: 5.040463910213217
best_error: 5.040463910208965
best_error: 5.040463910182573
best_error: 5.040406155477009
best_error: 5.040406155472747
best_error: 5.040406155446339
best_error: 5.040174200670851
best_error: 5.040174200666542
best_error: 5.040174200640078
best_error: 5.039231105750899
best_error: 5.039231105746407
best_error: 5.039231105719707
best_error: 5.03519302759764
best_error: 5.035193027592256
best_error: 5.035193027564594
best_error: 5.01259049122893
best_error: 5.012590491212946
best_error: 5.012590491183269
best_error: 4.977536232142403
best_error: 4.977536232048391
best_error: 4.62436463058219
best_error: 4.6243646043512685
best_error: 4.215433155120685
best_error: 4.215433069640402
best_error: 3.739926151160056
best_error: 3.7399260368062994
best_error: 3.3057023329264705
best_error: 3.305702137400591
best_error: 2.9550426140290234
best_error: 2.9550423620061834
best_error: 2.8981558458557997
best_error: 2.898155798136224
best_error: 2.8734826766367147
best_error: 2.8734826733024863
best_error: 2.8734826674624245
best_error: 2.8722358247795143
best_error: 2.8722358240548256
best_error: 2.872235815004671
best_error: 2.864009115170959
best_error: 2.864009108562223
best_error: 2.8640091036783013
best_error: 2.8321548439014124
best_error: 2.8321548369321166
best_error: 2.832154830119777
best_error: 2.814329571733388
best_error: 2.8143295711602825
best_error: 2.814329569055316
best_error: 2.8143295575573375
best_error: 2.803870308971525
best_error: 2.8038703062530788
best_error: 2.8038702948186027
best_error: 2.798074175483289
best_error: 2.7980741728795193
best_error: 2.7980741614604288
best_error: 2.7954698942805205
best_error: 2.79546986500937
best_error: 2.7953038929408764
best_error: 2.795303844432509
best_error: 2.769968212535724
best_error: 2.76996817299762
best_error: 2.6074651979880974
best_error: 2.6074649764934947
best_error: 2.5669587423115017
best_error: 2.566958519182499
best_error: 2.5041796102709193
best_error: 2.504179364048112
best_error: 2.479410896971728
best_error: 2.47941068567966
best_error: 2.199190515446053
best_error: 2.19919031414348
best_error: 1.9805764388257885
best_error: 1.9805764279800602
best_error: 1.9805763106908236
best_error: 1.9734417410675218
best_error: 1.973441679997172
best_error: 1.9520410008693398
best_error: 1.9520409482203396
best_error: 1.9200297248529636
best_error: 1.9200296905708891
best_error: 1.9200296488271027
best_error: 1.9089660230980083
best_error: 1.9089659916324357
best_error: 1.9089659339667273
best_error: 1.9016563027704603
best_error: 1.9016562668796688
best_error: 1.9016562255229268
best_error: 1.8960755033313739
best_error: 1.8960754022960997
best_error: 1.891165467821121
best_error: 1.8911653697003055
best_error: 1.857628271533136
best_error: 1.8576282648829245
best_error: 1.8576282513701738
best_error: 1.8565047028317248
best_error: 1.856504668225333
best_error: 1.8560636334282796
best_error: 1.856063627607248
best_error: 1.8559901911525798
best_error: 1.8559901908356577
best_error: 1.8559901904590952
best_error: 1.8559646727574899
best_error: 1.8559646724663665
best_error: 1.8559646720711263
best_error: 1.8558645030526888
best_error: 1.8558645025100895
best_error: 1.855864502409741
best_error: 1.855696646425959
best_error: 1.8556966456408248
best_error: 1.8552466331180621
best_error: 1.8552466316591454
best_error: 1.8552466315778116
best_error: 1.8541114088222392
best_error: 1.8541114059801758
best_error: 1.8531103282510262
best_error: 1.8531103170218748
best_error: 1.8516575786245986
best_error: 1.85165756824269
best_error: 1.8512855880343055
best_error: 1.8512855805304178
best_error: 1.8491217904332262
best_error: 1.8491217680569025
best_error: 1.8484511973880922
best_error: 1.8484511701800972
best_error: 1.8480571914900665
best_error: 1.8480571676735265
best_error: 1.8476594401618587
best_error: 1.847659428419892
best_error: 1.8475094390941933
best_error: 1.8475094345798442
best_error: 1.8474495010410212
best_error: 1.8474494992333883
best_error: 1.84725726754995
best_error: 1.8472572598231323
best_error: 1.8469641820551181
best_error: 1.8469641771209686
best_error: 1.846047697630212
best_error: 1.8460476922321414
best_error: 1.8452483522669778
best_error: 1.8452483474008847
best_error: 1.8424564889371788
best_error: 1.8424564869989424
best_error: 1.8424564832877064
best_error: 1.8266020032363042
best_error: 1.8266019443828692
best_error: 1.818465204562218
best_error: 1.8184651918608936
best_error: 1.8110915822137437
best_error: 1.8110915739828075
best_error: 1.8106532515596008
best_error: 1.8106532482921123
best_error: 1.810562812483394
best_error: 1.8105628046688125
best_error: 1.8102437061869283
best_error: 1.8102437019666482
best_error: 1.8099387084518852
best_error: 1.8099386993082343
best_error: 1.8096309276396516
best_error: 1.8096309118702183
best_error: 1.8089354970155977
best_error: 1.808935483694792
best_error: 1.8085736035438296
best_error: 1.8085735900133664
best_error: 1.8085003112774536
best_error: 1.808500306698173
best_error: 1.8084737817986427
best_error: 1.8084737796750492
best_error: 1.808462278933498
best_error: 1.808462276721952
best_error: 1.808386920104547
best_error: 1.8083869190903044
best_error: 1.8082178816756493
best_error: 1.8082178798513606
best_error: 1.8077269186321314
best_error: 1.8077269155305131
best_error: 1.8077269141971073
best_error: 1.8054817572669961
best_error: 1.805481732103456
best_error: 1.805481724927582
best_error: 1.804745600945697
best_error: 1.8047455769797454
best_error: 1.8035797747838687
best_error: 1.8035797523709156
best_error: 1.801578814679395
best_error: 1.8015787791409128
best_error: 1.801452186879216
best_error: 1.8014521768378733
best_error: 1.801426760892513
best_error: 1.8014267549611145
best_error: 1.8014252934196935
best_error: 1.8014252886723208
best_error: 1.8013196680104364
best_error: 1.801319665694605
best_error: 1.80114770516923
best_error: 1.8011477017342385
best_error: 1.801078707179536
best_error: 1.8010787027814181
best_error: 1.8010185020299496
best_error: 1.8010185010268143
best_error: 1.800944678680549
best_error: 1.8009446747146456
best_error: 1.8008628259927726
best_error: 1.8008628185283997
best_error: 1.8006137397698863
best_error: 1.8006137264451356
best_error: 1.8002265630965275
best_error: 1.800226545488225
best_error: 1.7988017696220657
best_error: 1.7988017516787076
best_error: 1.7980604293719775
best_error: 1.798060414809536
best_error: 1.7972015517699846
best_error: 1.7972015198484055
best_error: 1.7966886143806906
best_error: 1.796688564849451
best_error: 1.7962499440831923
best_error: 1.7962499343249048
best_error: 1.7960802796906035
best_error: 1.7960802765265271
best_error: 1.7960584706246217
best_error: 1.7960584701868265
best_error: 1.7960584699715239
best_error: 1.7960398167856306
best_error: 1.7960398150702273
best_error: 1.796011798478706
best_error: 1.796011798168823
best_error: 1.7960117980644972
best_error: 1.7959930662445953
best_error: 1.7959930657524301
best_error: 1.7959831548355703
best_error: 1.7959831528280232
best_error: 1.7959788243450725
best_error: 1.7959788234484002
best_error: 1.7959758694268992
best_error: 1.795975868833427
best_error: 1.7959740311788386
best_error: 1.7959740306073777
best_error: 1.7959718142752576
best_error: 1.7959718141965357
best_error: 1.795971813752657
best_error: 1.7959678060677033
best_error: 1.795967805569606
best_error: 1.7959678055407846
best_error: 1.7959612959894533
best_error: 1.7959612950727433
best_error: 1.7959502547222739
best_error: 1.795950253494793
best_error: 1.7959410052007498
best_error: 1.7959409806954707
best_error: 1.7959029476592707
best_error: 1.7959029372266553
best_error: 1.795830590175142
best_error: 1.7958305797025855
best_error: 1.7957055569275786
best_error: 1.795705516636418
best_error: 1.7953788121396013
best_error: 1.7953788017543024
best_error: 1.7950408123625217
best_error: 1.7950408101309632
best_error: 1.7937144598924453
best_error: 1.7937144205115318
best_error: 1.7929906273374752
best_error: 1.7929905555605308
best_error: 1.7916003200740167
best_error: 1.7916002872116497
best_error: 1.7906237827490639
best_error: 1.7906237493845123
best_error: 1.7903203338441467
best_error: 1.790320333812268
best_error: 1.7903203330429038
best_error: 1.7901453212496279
best_error: 1.7901453207294025
best_error: 1.7901062879039802
best_error: 1.7901062725179104
