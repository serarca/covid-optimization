ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.625736145693406
best_error: 23.625736115245804
best_error: 23.625736083694402
best_error: 4.694791313204131
best_error: 4.6947913123966645
best_error: 4.693019718377397
best_error: 4.693019718288857
best_error: 4.693019717733984
best_error: 4.685699276313828
best_error: 4.685699276216509
best_error: 4.685699275659462
best_error: 4.6521227534624225
best_error: 4.652122753319467
best_error: 4.652122752755036
best_error: 4.322819829498752
best_error: 4.322819826487912
best_error: 4.00583742587243
best_error: 4.005837404666348
best_error: 2.505846659324182
best_error: 2.5058464719352354
best_error: 1.9837558316682533
best_error: 1.983755690211953
best_error: 1.9773483188122896
best_error: 1.9773481810271805
best_error: 1.9445231910958065
best_error: 1.9445231190729126
best_error: 1.80770465538923
best_error: 1.8077046397140557
best_error: 1.7946109478956485
best_error: 1.7946109114559805
best_error: 1.791004583791065
best_error: 1.7910045833577812
best_error: 1.7910045828184442
best_error: 1.791004581720258
best_error: 1.7901252225684703
best_error: 1.7901252204498295
best_error: 1.786949811664137
best_error: 1.7869497929177331
best_error: 1.7534642039787676
best_error: 1.753464144651559
best_error: 1.6700105772829692
best_error: 1.6700104910458307
best_error: 1.6236258501024738
best_error: 1.6236257330324424
best_error: 1.585395207497125
best_error: 1.5853951089089122
best_error: 1.5659756471298578
best_error: 1.565975620075481
best_error: 1.557033051178971
best_error: 1.5570330291841359
best_error: 1.5564666919992225
best_error: 1.5564666895125159
best_error: 1.5563659681931645
best_error: 1.5563659675633832
best_error: 1.556365966374635
best_error: 1.556234352228014
best_error: 1.5562343476895486
best_error: 1.5553197603638202
best_error: 1.5553197311112346
best_error: 1.553342434279541
best_error: 1.5533423848100767
best_error: 1.5467398709291873
best_error: 1.5467397608809177
best_error: 1.5338520445492643
best_error: 1.5338518367715759
best_error: 1.5064299427226664
best_error: 1.5064296617423636
best_error: 1.3602165452912516
best_error: 1.3602165414737863
best_error: 1.360128817804153
best_error: 1.3601288081319014
best_error: 1.356024830229294
best_error: 1.356024692272108
best_error: 1.3112952743104835
best_error: 1.3112952566124532
best_error: 1.2794839627684291
best_error: 1.2794838132287767
best_error: 1.2708062109555107
best_error: 1.270806176215147
best_error: 1.2664404142082464
best_error: 1.2664404082011924
best_error: 1.2646418393230727
best_error: 1.2646418270093778
best_error: 1.2539475143379422
best_error: 1.253947478898303
best_error: 1.2283631786667086
best_error: 1.228363131701526
best_error: 1.2177070216389105
best_error: 1.217706983119096
best_error: 1.192260361236597
best_error: 1.192260276152278
best_error: 1.1423296431961572
best_error: 1.1423296352827774
best_error: 1.1423296327993675
best_error: 1.0958479966691217
best_error: 1.0958479532591425
best_error: 1.0879177530749224
best_error: 1.087917718000969
best_error: 1.0782775719948443
best_error: 1.0782775420105513
best_error: 1.0473280713581596
best_error: 1.047328058670538
best_error: 1.047328051041668
best_error: 1.0466299578870062
best_error: 1.0466299438135989
best_error: 1.044895891996633
best_error: 1.0448958784853422
best_error: 1.0389813439274895
best_error: 1.0389813318163705
best_error: 1.038361435599596
best_error: 1.038361426170475
best_error: 1.0366506524913324
best_error: 1.0366506497546504
best_error: 1.0366506158461695
best_error: 1.0354219663667432
best_error: 1.0354219588979958
best_error: 1.0320693424391867
best_error: 1.0320692977229338
best_error: 1.0212627514800114
best_error: 1.0212627068594768
best_error: 1.0179253577904612
best_error: 1.017925322121122
best_error: 1.0112105420197244
best_error: 1.0112104675929139
best_error: 0.9943154233198227
best_error: 0.9943153568551013
best_error: 0.9857828095179219
best_error: 0.9857827850505494
best_error: 0.9796095632734994
best_error: 0.9796095537618729
best_error: 0.9796095266646812
best_error: 0.9782594472736933
best_error: 0.9782594432979604
best_error: 0.9777466214906206
best_error: 0.977746617109984
best_error: 0.9772840794859698
best_error: 0.9772840632253658
best_error: 0.9771758894980493
best_error: 0.9771758883042565
best_error: 0.9770678183443424
best_error: 0.9770678033701036
best_error: 0.9770028755835258
best_error: 0.9770028697739714
best_error: 0.9768846717928318
best_error: 0.9768846639695299
best_error: 0.9765339943170315
best_error: 0.9765339937994858
best_error: 0.9765339924965142
best_error: 0.9761690354985543
best_error: 0.9761690350102364
best_error: 0.9761690337723494
best_error: 0.9761507670212929
best_error: 0.9761507652951776
best_error: 0.9755187564440512
best_error: 0.9755187557601992
best_error: 0.9755187557584886
best_error: 0.9749588641408424
best_error: 0.9749588588051579
best_error: 0.9739821978072194
best_error: 0.9739821924123049
best_error: 0.9681873945270831
best_error: 0.9681873816948046
best_error: 0.9313218584611298
best_error: 0.9313218460175563
best_error: 0.9313217704108858
best_error: 0.9196874313956995
best_error: 0.9196874091894212
best_error: 0.9196873680758212
best_error: 0.9131210612969092
best_error: 0.9131209077084838
best_error: 0.9028102436890026
best_error: 0.9028102225327038
best_error: 0.901963372373355
best_error: 0.901963362538575
best_error: 0.9011535941689541
best_error: 0.9011535920318333
best_error: 0.90115357488689
best_error: 0.899693629891877
best_error: 0.8996935738886995
best_error: 0.8988760468910884
best_error: 0.8988760160688382
best_error: 0.898103058539149
best_error: 0.8981030506803462
best_error: 0.8979325505568293
best_error: 0.8979325494843521
best_error: 0.8971702654925793
best_error: 0.8971702599473202
best_error: 0.8967003209919271
best_error: 0.8967003173448497
best_error: 0.8965384883310564
best_error: 0.8965384882602234
best_error: 0.8965384863117069
best_error: 0.8963057349707061
best_error: 0.896305729205845
best_error: 0.8959212224380981
best_error: 0.8959212151021972
best_error: 0.8949109720654883
best_error: 0.8949109589015443
best_error: 0.8917719377937412
best_error: 0.8917718991172712
best_error: 0.8880843807047754
best_error: 0.8880843798271393
best_error: 0.8880843461495606
best_error: 0.8848673645416925
best_error: 0.884867363765999
best_error: 0.8848673387405585
best_error: 0.8785157984911736
best_error: 0.8785157840912664
best_error: 0.8783750825833903
best_error: 0.8783750797574337
best_error: 0.8780999205344452
best_error: 0.8780999194892456
best_error: 0.8778515634998476
best_error: 0.8778515614473308
best_error: 0.8778063985470539
best_error: 0.8778063976637428
best_error: 0.8777960301831824
best_error: 0.8777960297175648
best_error: 0.8777929185640251
best_error: 0.8777929181476093
best_error: 0.8777920650363406
best_error: 0.8777920647933644
best_error: 0.8777917276627747
best_error: 0.8777917274309647
best_error: 0.8777915932949645
best_error: 0.8777915932025036
best_error: 0.8777915402514727
best_error: 0.8777915400283102
best_error: 0.8777914633864448
best_error: 0.8777914633772939
best_error: 0.8777914632980448
best_error: 0.8777914336231721
best_error: 0.8777914336230844
best_error: 0.877791433616529
best_error: 0.8777914159924906
best_error: 0.8777914159914794
best_error: 0.8777913903958486
best_error: 0.877791390238973
best_error: 0.8777913604739936
best_error: 0.8777913604596518
best_error: 0.8777912902921162
best_error: 0.8777912901011133
best_error: 0.8777910295556439
best_error: 0.8777910293372034
best_error: 0.8777901048852295
best_error: 0.8777901043570521
best_error: 0.8777891219609374
best_error: 0.8777891214681707
best_error: 0.8777866091437078
best_error: 0.877786608452721
best_error: 0.8777848534221196
best_error: 0.8777848532886832
best_error: 0.8777764399175516
best_error: 0.8777764374382083
best_error: 0.8777627828711172
best_error: 0.8777627805054905
best_error: 0.8777275963900213
best_error: 0.8777275902971549
best_error: 0.8776897307021824
best_error: 0.8776897216049321
