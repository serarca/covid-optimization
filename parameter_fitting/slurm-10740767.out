ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.87448070024395
best_error: 10.874480691115481
best_error: 10.529183468229617
best_error: 10.52918342157206
best_error: 7.501339490940961
best_error: 7.5013390745872774
best_error: 5.957091803729728
best_error: 5.95709138047423
best_error: 5.558243786419736
best_error: 5.558243786419519
best_error: 5.558243778369291
best_error: 5.557582991625987
best_error: 5.5575829916257575
best_error: 5.557582981997094
best_error: 5.5549650381491675
best_error: 5.554965038148932
best_error: 5.5549650283754
best_error: 5.544201649516548
best_error: 5.544201649516318
best_error: 5.544201639183599
best_error: 5.496362008058234
best_error: 5.496362008058009
best_error: 5.496361995575836
best_error: 5.393653436267764
best_error: 5.393653436267642
best_error: 5.371363079515889
best_error: 5.3713630795157385
best_error: 5.3540516950929256
best_error: 5.3540516950927755
best_error: 5.231879559873179
best_error: 5.231879559873054
best_error: 5.2245431172043455
best_error: 5.224543117204199
best_error: 4.687462018185794
best_error: 4.687462018185659
best_error: 4.606137222946206
best_error: 4.606137222946022
best_error: 4.60613719496322
best_error: 4.568375085282714
best_error: 4.568375085282596
best_error: 4.568375084392398
best_error: 4.562237807576364
best_error: 4.562237802474604
best_error: 4.561824115292575
best_error: 4.561824115292464
best_error: 4.5618241140287275
best_error: 4.561382850747077
best_error: 4.561382835505966
best_error: 4.561276599391376
best_error: 4.561276599391272
best_error: 4.561276597766582
best_error: 4.56123499158161
best_error: 4.561234991581506
best_error: 4.561234989953692
best_error: 4.561213691164681
best_error: 4.56121367723257
best_error: 4.561094515518335
best_error: 4.561094515518228
best_error: 4.5610945138801435
best_error: 4.560988933078424
best_error: 4.560988920031151
best_error: 4.559671746327985
best_error: 4.559671746327897
best_error: 4.559671744533441
best_error: 4.555205571386055
best_error: 4.555205571385971
best_error: 4.555205569215222
best_error: 4.53298713788024
best_error: 4.532987137880166
best_error: 4.532987135529871
best_error: 4.521907606709068
best_error: 4.521907606709001
best_error: 4.519759323511992
best_error: 4.519759323511919
best_error: 4.508727463574393
best_error: 4.508727463574288
best_error: 4.506885476378654
best_error: 4.506885476378539
best_error: 4.504676094008393
best_error: 4.50467609400827
best_error: 4.486695434384088
best_error: 4.486695434383924
best_error: 4.486695428486487
best_error: 4.467453936535254
best_error: 4.467453936535068
best_error: 4.467453922655821
best_error: 4.3913939986849355
best_error: 4.391393949889124
best_error: 4.391393904573859
best_error: 4.388260664171052
best_error: 4.388260393842285
best_error: 4.36245135176921
best_error: 4.362451188296899
best_error: 4.298572239493391
best_error: 4.298572239493186
best_error: 4.298572188966543
best_error: 4.298269436216601
best_error: 4.298269420427968
best_error: 4.29826938060223
best_error: 4.265096215439973
best_error: 4.265096215439875
best_error: 4.262870487713072
best_error: 4.262870487712965
best_error: 4.261328428348184
best_error: 4.2613284237769555
best_error: 4.261328422730668
best_error: 4.261053133372752
best_error: 4.261053132075328
best_error: 4.2610531319012726
best_error: 4.261039461064175
best_error: 4.261039461064072
best_error: 4.261038557140194
best_error: 4.261038557140088
best_error: 4.261038557138493
best_error: 4.26103851930317
best_error: 4.261038519303067
best_error: 4.26103851929484
best_error: 4.261038493749663
best_error: 4.2610384937427375
best_error: 4.2610384937294175
best_error: 4.261038491245544
best_error: 4.261038491245445
best_error: 4.2610384910622034
best_error: 4.261038491055639
best_error: 4.261038491041912
best_error: 4.261038487299285
best_error: 4.261038487293221
best_error: 4.26103848727892
best_error: 4.261038486927265
best_error: 4.261038486921248
best_error: 4.261038486906893
best_error: 4.261038486679051
best_error: 4.26103848667307
best_error: 4.26103848665868
best_error: 4.261038486578
best_error: 4.261038486572031
