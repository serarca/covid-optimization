ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 78
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.33352919450328
best_error: 100.33352904521188
best_error: 100.33352902405039
best_error: 18.834254491480223
best_error: 18.834254491476457
best_error: 18.83425448412589
best_error: 18.830057913852645
best_error: 18.830057906381327
best_error: 18.81258917264118
best_error: 18.812589164675266
best_error: 18.729876096701243
best_error: 18.72987608624166
best_error: 18.003450030181668
best_error: 18.003449989568537
best_error: 17.927605109861364
best_error: 17.92760506424248
best_error: 16.65275594632595
best_error: 16.65275578962259
best_error: 14.062420751240099
best_error: 14.062420339033096
best_error: 11.832024757852576
best_error: 11.832024296487466
best_error: 10.976396902546238
best_error: 10.976396796911681
best_error: 10.954664630164594
best_error: 10.954664538390828
best_error: 10.952809997491329
best_error: 10.952809984482151
best_error: 10.952809978236525
best_error: 10.952664830411292
best_error: 10.95266474140502
best_error: 10.951810263523756
best_error: 10.951810250529835
best_error: 10.95181024428232
best_error: 10.95177387564761
best_error: 10.951773786623406
best_error: 10.951749223491339
best_error: 10.951749134466615
best_error: 10.95174750128
best_error: 10.951747483282519
best_error: 10.951747481998156
best_error: 10.950884975327366
best_error: 10.950884962334506
best_error: 10.950884956085517
best_error: 10.93870417707031
best_error: 10.938704164170906
best_error: 10.938704157830639
best_error: 10.937966183515558
best_error: 10.937966170618786
best_error: 10.937966164276027
best_error: 10.908579813143962
best_error: 10.908579800647772
best_error: 10.908579793899111
best_error: 10.792546616419965
best_error: 10.79254660428464
best_error: 10.792546597155436
best_error: 10.558429068735787
best_error: 10.558429059060362
best_error: 10.558429049423346
best_error: 10.54576974397889
best_error: 10.54576973434178
best_error: 10.545769724671949
best_error: 10.495221309990448
best_error: 10.495221300849835
best_error: 10.49522129070473
best_error: 10.341079122139984
best_error: 10.341079113982047
best_error: 10.341079102918783
best_error: 10.094162666685836
best_error: 10.094162649119474
best_error: 10.090377263886134
best_error: 10.090377246549531
best_error: 10.07624951031903
best_error: 10.076249492785914
best_error: 9.985707434951115
best_error: 9.985707382582635
best_error: 9.976071247984992
best_error: 9.976071202699055
best_error: 9.97315682270207
best_error: 9.973156778732978
best_error: 9.97167827715634
best_error: 9.971678261131455
best_error: 9.971619901812979
best_error: 9.971619861745467
best_error: 9.971571014745198
best_error: 9.971570972014721
best_error: 9.970755948816564
best_error: 9.970755933259952
best_error: 9.967276628632243
best_error: 9.967276613096658
best_error: 9.95143133548456
best_error: 9.951431320678493
best_error: 9.911115630290876
best_error: 9.911115618083402
best_error: 9.909573782704538
best_error: 9.909573773267494
best_error: 9.906584006804989
best_error: 9.906583997571406
best_error: 9.897765092745978
best_error: 9.897765087070058
best_error: 9.867943245397896
best_error: 9.867943245397894
best_error: 9.867943241307415
best_error: 9.847413143566445
best_error: 9.847413134425542
best_error: 9.847412998211034
best_error: 9.844010635837739
best_error: 9.844010635837737
best_error: 9.844010632608816
best_error: 9.790376743986549
best_error: 9.790376738600678
best_error: 9.64551589053357
best_error: 9.645515875218571
best_error: 9.645515873186286
best_error: 9.641133099263046
best_error: 9.641133098439928
best_error: 9.641132922692828
best_error: 9.625675505669458
best_error: 9.62567533070194
best_error: 9.623505515904952
best_error: 9.623505345986787
best_error: 9.61743411051349
best_error: 9.617433948166552
best_error: 9.613352891074339
best_error: 9.61335287940919
best_error: 9.52882038450334
best_error: 9.528820375207385
best_error: 9.519274323583963
best_error: 9.51927431400595
best_error: 9.513557941323388
best_error: 9.513557931716615
best_error: 9.511444708668291
best_error: 9.511444699020204
best_error: 9.511373365289867
best_error: 9.51137335564318
best_error: 9.51133526617978
best_error: 9.511335256533854
best_error: 9.511314975014539
best_error: 9.511314965369003
best_error: 9.511304230362802
best_error: 9.511304220717482
best_error: 9.511299121911078
best_error: 9.511298935310979
best_error: 9.494124139659512
best_error: 9.494124130755381
best_error: 9.478076705676738
best_error: 9.478076697199306
best_error: 9.44612760763263
best_error: 9.446127599605887
best_error: 9.444567229486637
best_error: 9.444567135005329
best_error: 9.44378109865007
best_error: 9.443780997595672
best_error: 9.431821115413813
best_error: 9.43182101588805
best_error: 9.428179171618916
best_error: 9.428179153433312
best_error: 9.428178795981687
best_error: 9.428111888888767
best_error: 9.428111880872963
best_error: 9.42751198852647
best_error: 9.427511980379055
best_error: 9.399487959728937
best_error: 9.39948794792056
best_error: 9.3994877494887
best_error: 9.398568530235812
best_error: 9.398568522036438
best_error: 9.397996244934225
best_error: 9.397996236775189
best_error: 9.397362441596599
best_error: 9.39736243346113
best_error: 9.396894295306906
best_error: 9.39689428717573
best_error: 9.396732802802573
best_error: 9.396732794679535
best_error: 9.396669559187146
best_error: 9.396669551064758
best_error: 9.396658264910414
best_error: 9.396658256788143
best_error: 9.396654211658662
best_error: 9.396654203536432
best_error: 9.396652386430532
best_error: 9.396652378308321
best_error: 9.39665090223813
best_error: 9.396650894115943
best_error: 9.396650528141391
best_error: 9.396650439942945
best_error: 9.396650364986115
best_error: 9.39665035686394
best_error: 9.396650354637828
best_error: 9.396650346515647
best_error: 9.396650342006538
