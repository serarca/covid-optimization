ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 27.686020528870614
best_error: 27.686020341532956
best_error: 12.260855800613438
best_error: 12.260855790051146
best_error: 12.260855774076584
best_error: 12.090173522446365
best_error: 12.090173511548825
best_error: 11.995484048723474
best_error: 11.995484039358155
best_error: 11.950836157267473
best_error: 11.950836147452545
best_error: 11.87906657279272
best_error: 11.87906655982611
best_error: 11.810605737249581
best_error: 11.810605720118026
best_error: 11.275155379942165
best_error: 11.275155316900525
best_error: 11.038636727009006
best_error: 11.038636634807633
best_error: 10.923149023581137
best_error: 10.923148917313314
best_error: 10.787818820118478
best_error: 10.7878186977171
best_error: 9.209443712815393
best_error: 9.209443549382648
best_error: 8.935491262165332
best_error: 8.93549120095819
best_error: 8.935491112279369
best_error: 8.862696596416964
best_error: 8.862696569771858
best_error: 8.862696437166601
best_error: 8.644919420422603
best_error: 8.644919397612911
best_error: 8.644919260697172
best_error: 8.522981986902781
best_error: 8.522981964269936
best_error: 8.522981826379961
best_error: 8.442285861212662
best_error: 8.442285838057508
best_error: 8.442285701089133
best_error: 8.401102246820614
best_error: 8.401102220660109
best_error: 8.40110208638648
best_error: 8.371261914792912
best_error: 8.37126188685816
best_error: 8.371261753983049
best_error: 8.357611964935955
best_error: 8.357611936939321
best_error: 8.357611804224945
best_error: 8.35011539475266
best_error: 8.35011536730522
best_error: 8.350115233974515
best_error: 8.348908418854316
best_error: 8.348908391282697
best_error: 8.348908258059739
best_error: 8.348206001803469
best_error: 8.348205974159585
best_error: 8.348205840999306
best_error: 8.347831660307637
best_error: 8.347831632625255
best_error: 8.347831499498382
best_error: 8.34758933814524
best_error: 8.347589310437936
best_error: 8.34758917733269
best_error: 8.347470578480316
best_error: 8.347470550760793
best_error: 8.347470417666152
best_error: 8.347386088053792
best_error: 8.347386060325581
best_error: 8.347385927238443
best_error: 8.347348419163435
best_error: 8.34734839143136
best_error: 8.347348258347607
best_error: 8.347331888076404
best_error: 8.347331777538091
best_error: 7.147649578141027
best_error: 7.147649425695906
best_error: 7.145897394234273
best_error: 7.14589724143218
best_error: 7.138846815314732
best_error: 7.138846661089891
best_error: 7.111114520225661
best_error: 7.1111143734339795
best_error: 7.106714708022045
best_error: 7.106714561763525
best_error: 7.102620612018248
best_error: 7.102620466346295
best_error: 7.097193335878323
best_error: 7.09719319062134
best_error: 7.088266033812245
best_error: 7.088265886861008
best_error: 7.0833884056575585
best_error: 7.083388257796969
best_error: 7.08234967220653
best_error: 7.082349525579384
best_error: 7.081630728868392
best_error: 7.081630582108451
best_error: 7.0809700053622535
best_error: 7.080969858480474
best_error: 7.080551527463072
best_error: 7.0805513805042395
best_error: 7.0801772243776995
best_error: 7.0801770773500055
best_error: 7.079839184123442
best_error: 7.079839037033624
best_error: 7.079571081573287
best_error: 7.079570934434225
best_error: 7.078898464895666
best_error: 7.078898317633225
best_error: 7.0785714042867856
best_error: 7.078571256964425
best_error: 7.078450418739498
best_error: 7.078450271394999
best_error: 7.0782857440980065
best_error: 7.078072895705098
best_error: 7.078072748291509
best_error: 7.078053967771137
best_error: 7.0780538203540955
best_error: 7.078036901931659
best_error: 7.078036754511499
best_error: 7.078023413698177
best_error: 7.078023266275547
best_error: 7.078012148531224
best_error: 7.078012001106527
best_error: 7.077990084076651
best_error: 7.077989936647928
best_error: 7.077978106542016
best_error: 7.077977959111092
best_error: 7.077940763209318
best_error: 7.077940743296165
best_error: 7.0778253019337996
best_error: 7.075345540760469
best_error: 7.075345392959314
best_error: 7.073529673796298
best_error: 7.073529525739504
best_error: 7.066256328010876
best_error: 7.066256178929519
best_error: 7.037016413868324
best_error: 7.037016259225775
best_error: 6.917795735282258
best_error: 6.917795560792502
best_error: 6.757477653070187
best_error: 6.757477449303078
best_error: 6.757454109349344
best_error: 6.757453905578016
best_error: 6.757359929589004
best_error: 6.757359725800786
best_error: 6.756983132520654
best_error: 6.756982928664907
best_error: 6.755474696109221
best_error: 6.755474491983447
best_error: 6.749420999212802
best_error: 6.749420794008395
best_error: 6.725048017795245
best_error: 6.725047811322574
best_error: 6.721650551332424
best_error: 6.721650344273057
best_error: 6.721626240681279
best_error: 6.721626033617728
best_error: 6.721528993158467
best_error: 6.721528786078149
best_error: 6.721500432796357
best_error: 6.7215002257111225
best_error: 6.72147772985821
best_error: 6.721477522769058
best_error: 6.721453136009607
best_error: 6.721452928916218
best_error: 6.721438386374613
best_error: 6.721438179278694
best_error: 6.721411604940862
best_error: 6.721411397840324
best_error: 6.7214015438441805
best_error: 6.721401336741909
best_error: 6.72139831104341
best_error: 6.721398103940587
best_error: 6.7213961559978355
best_error: 6.721395948894646
best_error: 6.721394548271535
best_error: 6.721394341168056
best_error: 6.7213923172840495
best_error: 6.7213921101801875
best_error: 6.721391219901471
best_error: 6.72139101279742
best_error: 6.72138928945348
best_error: 6.721389082349101
best_error: 6.721388656028127
best_error: 6.721388448923644
best_error: 6.721388329968356
best_error: 6.721388258204877
best_error: 6.721388219633994
