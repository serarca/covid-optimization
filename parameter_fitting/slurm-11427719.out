ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.555779760816794
best_error: 25.55577967404978
best_error: 5.0357642266528835
best_error: 5.03576422639766
best_error: 5.035764226307673
best_error: 5.035529244744378
best_error: 5.035529244654004
best_error: 5.035529244398687
best_error: 5.034583114542197
best_error: 5.034583114449411
best_error: 5.03458311419457
best_error: 5.030696553959546
best_error: 5.030696553856672
best_error: 5.0306965536039625
best_error: 5.013310292251026
best_error: 5.013310292098995
best_error: 5.01331029185979
best_error: 4.877861963017254
best_error: 4.8778619611209795
best_error: 4.778518642642868
best_error: 4.778518629461468
best_error: 4.384071227540859
best_error: 4.38407111021853
best_error: 4.218255636057497
best_error: 4.218255473075742
best_error: 3.9201036728480267
best_error: 3.920103428075217
best_error: 3.6135057520251586
best_error: 3.613505424114846
best_error: 3.2710882755800754
best_error: 3.271088240524736
best_error: 3.2699311218016622
best_error: 3.2699311208061568
best_error: 3.2698376397831153
best_error: 3.269837638780328
best_error: 3.2570466562672453
best_error: 3.257046621808536
best_error: 3.235298752348713
best_error: 3.2352986826911354
best_error: 3.1870850585318657
best_error: 3.1870849194843465
best_error: 3.076324923309952
best_error: 3.07632477640028
best_error: 2.3095105836763725
best_error: 2.3095105405200895
best_error: 2.305134416143449
best_error: 2.3051343848463755
best_error: 2.288467221536023
best_error: 2.288467212972457
best_error: 2.2884672125978747
best_error: 2.2775182036144574
best_error: 2.2775182028453793
best_error: 2.2775181959669863
best_error: 2.276694865345576
best_error: 2.2766948645185234
best_error: 2.276694857481064
best_error: 2.2739424140903255
best_error: 2.273942410377505
best_error: 2.2739424055757125
best_error: 2.264215588164766
best_error: 2.2642155846183942
best_error: 2.2642155792343974
best_error: 2.2526658563087327
best_error: 2.252665780140349
best_error: 2.251042701330213
best_error: 2.2510426580054013
best_error: 2.2483727360865515
best_error: 2.24837269292683
best_error: 2.244169300696121
best_error: 2.24416925818327
best_error: 2.06608122801703
best_error: 2.0660808505426753
best_error: 2.066055121137642
best_error: 2.006618584567004
best_error: 2.006618561630704
best_error: 2.0066184042438504
best_error: 2.0066183813076366
best_error: 2.00661764700529
best_error: 2.00661762406944
best_error: 2.0066134796039834
best_error: 2.006613456670196
best_error: 2.0066101735146953
best_error: 2.006610150582724
best_error: 2.0044069303576233
best_error: 2.0044069140577165
best_error: 2.0033279151864516
best_error: 2.0033278500962455
best_error: 1.9935271187200767
best_error: 1.9935270626718822
best_error: 1.8923381172364733
best_error: 1.8923380451886451
best_error: 1.885988959066928
best_error: 1.88598889902579
best_error: 1.8781297488440631
best_error: 1.8781296767766937
best_error: 1.8781251713067744
best_error: 1.876863616524525
best_error: 1.8768635860271095
best_error: 1.8505815489058595
best_error: 1.850581415180016
best_error: 1.829770170411593
best_error: 1.8297699573400665
best_error: 1.8297572124912287
best_error: 1.8256979727499714
best_error: 1.8256979465341965
best_error: 1.8229336714758155
best_error: 1.8229336696152925
best_error: 1.8229336639395572
best_error: 1.8229149967513851
best_error: 1.8229149925507133
best_error: 1.8229149722168863
best_error: 1.8222379085383489
best_error: 1.8222378803271742
best_error: 1.8222378507356274
best_error: 1.8091380192164492
best_error: 1.8091379732590738
best_error: 1.80840263228602
best_error: 1.8084026162180329
best_error: 1.8066735250464163
best_error: 1.8066735168423618
best_error: 1.800330170323123
best_error: 1.8003301287965616
best_error: 1.7996434267788726
best_error: 1.7996434135558719
best_error: 1.7996386943111986
best_error: 1.7996386792460737
best_error: 1.7996385728331838
best_error: 1.799638557171201
best_error: 1.7968688951095233
best_error: 1.796868884138016
best_error: 1.796853020387157
best_error: 1.7968530052761917
best_error: 1.7968488303929715
best_error: 1.7968488125237687
best_error: 1.795678158406459
best_error: 1.7956781438046407
best_error: 1.7910699727456367
best_error: 1.7910699675092518
best_error: 1.7730836685585956
best_error: 1.7730836216121353
best_error: 1.7536571112633643
best_error: 1.7536570332611598
best_error: 1.7522266871279917
best_error: 1.7522266543144753
best_error: 1.7518682949248872
best_error: 1.7518682684979412
best_error: 1.7511677656570144
best_error: 1.7511677619663584
best_error: 1.751167759394485
best_error: 1.7510180696417579
best_error: 1.7510180512012627
best_error: 1.7499546065580438
best_error: 1.7499545883482468
best_error: 1.7494088479954775
best_error: 1.7494088305212976
best_error: 1.7481695702257587
best_error: 1.7481695592813884
best_error: 1.7462220666460455
best_error: 1.746221971618271
best_error: 1.7399031212663456
best_error: 1.7399030426645232
best_error: 1.7241184154261524
best_error: 1.724118403763206
best_error: 1.7238537155279963
best_error: 1.723853705388638
best_error: 1.7228837691065406
best_error: 1.7228837649593647
best_error: 1.7148740181306033
best_error: 1.7148740177698825
best_error: 1.714874015840664
best_error: 1.713742168897581
best_error: 1.7137421577408178
best_error: 1.7136833109208782
best_error: 1.7136833083578724
best_error: 1.7136353638579613
best_error: 1.713635353656371
best_error: 1.7113499283853826
best_error: 1.7113499193626611
best_error: 1.7084500339164035
best_error: 1.7084500327664305
best_error: 1.70845003166985
best_error: 1.7074537436595776
best_error: 1.7074537406048953
best_error: 1.706529228346369
best_error: 1.7065291651528256
best_error: 1.7065270189887423
best_error: 1.7012368867748984
best_error: 1.7012368717408168
best_error: 1.6974069786008195
best_error: 1.6974069771632445
best_error: 1.6971082969148923
best_error: 1.6971082932145407
best_error: 1.697095236531165
best_error: 1.6970952358895162
best_error: 1.6970942295727816
best_error: 1.697094228928746
best_error: 1.6970940451319472
best_error: 1.6970940451125833
best_error: 1.6970940445062848
best_error: 1.6970939793618325
best_error: 1.697093978730819
best_error: 1.6970938985825605
best_error: 1.6970938979486438
best_error: 1.6970937638286514
best_error: 1.6970937631952976
best_error: 1.6970932451257101
best_error: 1.6970932450315774
best_error: 1.69709324449819
best_error: 1.6970928378644317
best_error: 1.6970928372115777
best_error: 1.697092745905734
best_error: 1.6970927452693605
best_error: 1.697092739169059
best_error: 1.6970927385435646
best_error: 1.6970927164333616
best_error: 1.6970927158036917
best_error: 1.6970927151835982
