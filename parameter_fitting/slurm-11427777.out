ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.033971799311395
best_error: 23.03397179390432
best_error: 23.03397177770597
best_error: 23.033971741660793
best_error: 16.43714156414208
best_error: 16.43714129375039
best_error: 9.167893912091762
best_error: 9.167893782893705
best_error: 8.322390614366503
best_error: 8.322390610602277
best_error: 8.322390608584461
best_error: 8.28994349947634
best_error: 8.289943490132412
best_error: 8.189943930390433
best_error: 8.189943930389378
best_error: 8.103987246378985
best_error: 8.103987246377793
best_error: 7.731730662012455
best_error: 7.731730662008934
best_error: 5.788635710501058
best_error: 5.788635710479246
best_error: 3.95245222987735
best_error: 3.9524522126116195
best_error: 2.652339411686873
best_error: 2.6523393340386523
best_error: 2.5907237422553675
best_error: 2.590723726800945
best_error: 2.590723719701673
best_error: 2.572283403564533
best_error: 2.572283383155947
best_error: 2.57228338191287
best_error: 2.4845880410542525
best_error: 2.484588016702537
best_error: 2.4471121599519465
best_error: 2.447112155518048
best_error: 2.44711210191831
best_error: 2.4269998079864368
best_error: 2.4269997173782953
best_error: 2.266329129799332
best_error: 2.266328964840805
best_error: 2.1936121837838347
best_error: 2.1936120724118715
best_error: 2.1484222848425385
best_error: 2.148422281011695
best_error: 2.1484222727384146
best_error: 2.070870236270933
best_error: 2.0708702347037855
best_error: 2.0708702345792305
best_error: 2.0708702232147917
best_error: 2.0318254267162237
best_error: 2.0318253731415576
best_error: 1.987202676555318
best_error: 1.987202676318025
best_error: 1.987202676134203
best_error: 1.9872026720958897
best_error: 1.9872026612647489
best_error: 1.9859525037823036
best_error: 1.985952503562015
best_error: 1.9859525033631917
best_error: 1.9859524992641837
best_error: 1.9859524884497644
best_error: 1.9853183770047138
best_error: 1.9853183768876417
best_error: 1.9853183765889053
best_error: 1.9853183724704806
best_error: 1.985318362357045
best_error: 1.9837518368287965
best_error: 1.9837517720824196
best_error: 1.9445523578167068
best_error: 1.944552308484556
best_error: 1.8292287239348286
best_error: 1.8292286347635867
best_error: 1.7692052375564409
best_error: 1.76920506109144
best_error: 1.7588929963793023
best_error: 1.75889297350672
best_error: 1.740383759669017
best_error: 1.7403836204336798
best_error: 1.7244634393530986
best_error: 1.7244632935032898
best_error: 1.6949044203794759
best_error: 1.6949044034035654
best_error: 1.6786590360190405
best_error: 1.6786589945959716
best_error: 1.6584278150607068
best_error: 1.6584277512312244
best_error: 1.646193792418103
best_error: 1.646193490154651
best_error: 1.6333175873611026
best_error: 1.6333174200102567
best_error: 1.6061576696901778
best_error: 1.6061576101055117
best_error: 1.5911624081112432
best_error: 1.5911621997169618
best_error: 1.5525338256679186
best_error: 1.5525334916035112
best_error: 1.4867697340229782
best_error: 1.4867694691349487
best_error: 1.472160565201992
best_error: 1.4721604636297954
best_error: 1.4363976385558195
best_error: 1.4363976361292357
best_error: 1.407465590769877
best_error: 1.4074654183257564
best_error: 1.4015364567504818
best_error: 1.4015362185480131
best_error: 1.3663545532005386
best_error: 1.3663545317864945
best_error: 1.3663512221914589
best_error: 1.3663512010203207
best_error: 1.3634501737845433
best_error: 1.3634501698265042
best_error: 1.3634494072924996
best_error: 1.3634494033743763
best_error: 1.3634494008556397
best_error: 1.36344940066882
best_error: 1.3634494004376947
best_error: 1.3634494001764894
best_error: 1.363449399964747
best_error: 1.3633955150311987
best_error: 1.363395512849082
best_error: 1.3633955116688998
best_error: 1.3584854327876494
best_error: 1.3584854058857516
best_error: 1.357922292556646
best_error: 1.357922289705886
best_error: 1.3573300942587894
best_error: 1.3573300913378432
best_error: 1.354291240418249
best_error: 1.3542912369240787
best_error: 1.3410096974746029
best_error: 1.341009649693373
best_error: 1.3399431351167004
best_error: 1.3399431334022358
best_error: 1.339943132953033
best_error: 1.3391631926678185
best_error: 1.3391631906516184
best_error: 1.339163190303489
best_error: 1.3384880824849554
best_error: 1.3384880801406478
best_error: 1.3360879819471023
best_error: 1.3360879790115319
best_error: 1.332173019486965
best_error: 1.3321730170535766
best_error: 1.3302652858699902
best_error: 1.3302652691868797
best_error: 1.3287471738172996
best_error: 1.3287471626008986
best_error: 1.328434210028797
best_error: 1.3284341978153436
best_error: 1.32622543205681
best_error: 1.3262254301359588
best_error: 1.3245750712447224
best_error: 1.3245750689275062
best_error: 1.3210230642762248
best_error: 1.3210229459931613
best_error: 1.3182798425999127
best_error: 1.3182798082334977
best_error: 1.3132662504262609
best_error: 1.313266175704055
best_error: 1.3083561091699198
best_error: 1.308356109051635
best_error: 1.3083561079965194
best_error: 1.3062449849588074
best_error: 1.3062449848415187
best_error: 1.3062449834200565
best_error: 1.2729784795148789
best_error: 1.2729783502913543
best_error: 1.272970607391229
best_error: 1.2722792343724765
best_error: 1.272279226330489
best_error: 1.2720185294704345
best_error: 1.2720184629831548
best_error: 1.264520736356654
best_error: 1.2645207142702817
best_error: 1.2569836838184534
best_error: 1.2569836817051065
best_error: 1.2554073245041995
best_error: 1.2554073057193575
best_error: 1.2536265893976246
best_error: 1.2536265869813792
best_error: 1.252888693469953
best_error: 1.2528886630129603
best_error: 1.2525861512903635
best_error: 1.2525861260275502
best_error: 1.2519720996384378
best_error: 1.251972097775522
best_error: 1.2514270186499616
best_error: 1.2514270185422598
best_error: 1.251427018409113
best_error: 1.2459129081783782
best_error: 1.2459129080225266
best_error: 1.2459129074774387
best_error: 1.2445047243738703
best_error: 1.244504646251139
best_error: 1.2409642620754406
best_error: 1.240964183337914
best_error: 1.2409639362874123
best_error: 1.2378521273296763
best_error: 1.2378521263464186
best_error: 1.237852126282457
best_error: 1.2356970152567082
best_error: 1.2356969922511694
best_error: 1.2351729617420548
best_error: 1.2351729482106837
best_error: 1.2349536112419373
best_error: 1.2349536110369541
best_error: 1.2349536108378572
best_error: 1.2347314074668738
best_error: 1.2347314073031639
best_error: 1.2347314072825142
best_error: 1.234190830444673
best_error: 1.2341908180506844
best_error: 1.2340608995615112
best_error: 1.234060892126293
best_error: 1.2339905983026382
best_error: 1.2339905981313555
best_error: 1.2339643899693256
best_error: 1.233964388848547
best_error: 1.2338774874872702
best_error: 1.2338774813859887
best_error: 1.2337068100575406
best_error: 1.2337068027986282
best_error: 1.23348484819981
best_error: 1.2334848414001842
best_error: 1.2334028411694968
best_error: 1.2334028332147262
best_error: 1.2333775415228136
best_error: 1.2333775316071047
best_error: 1.2333554468112424
best_error: 1.2333554386162624
best_error: 1.233351934520626
best_error: 1.2333519276650327
best_error: 1.2333497427886486
best_error: 1.2333497382750462
best_error: 1.2333464809968913
best_error: 1.2333464773970007
best_error: 1.2333454547970872
best_error: 1.2333454522777567
best_error: 1.2333453948121371
best_error: 1.2333453919580217
best_error: 1.2333453730330495
best_error: 1.2333453699081387
best_error: 1.2333453603638866
best_error: 1.2333453572395436
best_error: 1.2333453560554857
best_error: 1.233345325575653
best_error: 1.233345322387625
best_error: 1.2333452233051059
best_error: 1.2333452208551288
best_error: 1.2333450662455914
best_error: 1.2333450635690633
best_error: 1.2333415343308107
best_error: 1.2333415312699232
best_error: 1.2333236446001088
best_error: 1.2333236387546687
best_error: 1.2333126785312019
best_error: 1.2333126699569272
