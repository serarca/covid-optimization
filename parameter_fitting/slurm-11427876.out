ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 17.427645984895577
best_error: 17.427645744534466
best_error: 4.889128865120718
best_error: 4.889128864831491
best_error: 4.889128862486685
best_error: 4.884556513299601
best_error: 4.8845565105792295
best_error: 4.865204457068963
best_error: 4.865204453985694
best_error: 4.77197758815776
best_error: 4.77197758336664
best_error: 3.8332083902807472
best_error: 3.83320836391263
best_error: 3.4835748121671917
best_error: 3.483574811015547
best_error: 3.4835748098214454
best_error: 3.4530271052794155
best_error: 3.453027097266946
best_error: 3.3950628430371466
best_error: 3.3950628342837383
best_error: 3.049219463237925
best_error: 3.0492194367839414
best_error: 2.8136850298082208
best_error: 2.8136849794214784
best_error: 2.5248656810350485
best_error: 2.524865600759441
best_error: 2.04835071963039
best_error: 2.048350668521753
best_error: 2.0376408248962745
best_error: 2.037640803500033
best_error: 1.8461769166485922
best_error: 1.8461769146534368
best_error: 1.8238745612379537
best_error: 1.8238744566378116
best_error: 1.725364628327894
best_error: 1.7253645844166927
best_error: 1.7137887578173148
best_error: 1.7137887427521628
best_error: 1.7107470487139365
best_error: 1.7107470484843048
best_error: 1.710747045272154
best_error: 1.6984111047010109
best_error: 1.6984110895352087
best_error: 1.682160436545618
best_error: 1.6821604056627257
best_error: 1.6489641445589533
best_error: 1.6489641021236656
best_error: 1.624913709828303
best_error: 1.6249136458615114
best_error: 1.5917036763748735
best_error: 1.5917036105183209
best_error: 1.4958709577908302
best_error: 1.4958708930513545
best_error: 1.4311686079574668
best_error: 1.431168578904077
best_error: 1.4021947087155957
best_error: 1.4021946391841644
best_error: 1.3580204920266428
best_error: 1.358020458660215
best_error: 1.3163825205328
best_error: 1.3163824853827746
best_error: 1.3069090041500855
best_error: 1.306908986679746
best_error: 1.286516355104329
best_error: 1.286516335383455
best_error: 1.2366780585176556
best_error: 1.2366780580031789
best_error: 1.2357222328944357
best_error: 1.235722232666565
best_error: 1.2316892308422704
best_error: 1.231689230210782
best_error: 1.231689219864601
best_error: 1.2316111541695032
best_error: 1.2316111536857355
best_error: 1.2232931849326731
best_error: 1.2232931819861326
best_error: 1.213321612692255
best_error: 1.213321610239315
best_error: 1.2133216039377972
best_error: 1.2130685730623032
best_error: 1.213068572964828
best_error: 1.2130685727362573
best_error: 1.213068572647165
best_error: 1.2087543655074011
best_error: 1.2087543650955768
best_error: 1.2025861160085893
best_error: 1.2025861152776667
best_error: 1.2025861144023335
best_error: 1.2021371514187262
best_error: 1.2021371412990647
best_error: 1.2016586806846363
best_error: 1.2016586799465445
best_error: 1.2016586798710966
best_error: 1.2012431874429628
best_error: 1.2012431851234617
best_error: 1.2003192127932678
best_error: 1.2003192003353496
best_error: 1.2001644541504812
best_error: 1.2001644363657926
best_error: 1.198749958187934
best_error: 1.1987499358215417
best_error: 1.1987357911304997
best_error: 1.1987357682498865
best_error: 1.198728194698738
best_error: 1.1987281714893367
best_error: 1.1987261313909334
best_error: 1.1987261079853617
best_error: 1.1987261003084644
best_error: 1.1987260943286833
best_error: 1.1987245934286326
best_error: 1.1987245697590665
best_error: 1.1986874776371443
best_error: 1.1986874515105495
best_error: 1.1984847085171224
best_error: 1.1984846749119018
best_error: 1.197242255466333
best_error: 1.1972422211202722
best_error: 1.1964166987095894
best_error: 1.196416659136549
best_error: 1.196233925020245
best_error: 1.1962338830722787
best_error: 1.1839315550153489
best_error: 1.1839315473931589
best_error: 1.1806372671786243
best_error: 1.1806372605475035
best_error: 1.1753281865518652
best_error: 1.175328186390922
best_error: 1.1753281847500137
best_error: 1.1726711548600266
best_error: 1.1726711539020886
best_error: 1.1726711528470555
best_error: 1.1718773180663034
best_error: 1.1718773172455528
best_error: 1.1718773164200595
best_error: 1.1692815279760955
best_error: 1.1692815244593446
best_error: 1.1665555263556067
best_error: 1.1665555167060975
best_error: 1.1653893243495042
best_error: 1.165389313193682
best_error: 1.1639104652533474
best_error: 1.1639104553080875
best_error: 1.1615488690617684
best_error: 1.1615488657392927
best_error: 1.161200200950892
best_error: 1.1612002005878035
best_error: 1.1611285318234659
best_error: 1.1611285289017121
best_error: 1.1611104519280107
best_error: 1.1611104498585438
best_error: 1.1609869615806456
best_error: 1.1609869611508696
best_error: 1.160815267697275
best_error: 1.1608152661167974
best_error: 1.1607811042994292
best_error: 1.1607811033172795
best_error: 1.1607678847762681
best_error: 1.1607678847311038
best_error: 1.1607678847271463
best_error: 1.1607678846554403
best_error: 1.1607678846553449
best_error: 1.1607669651559933
best_error: 1.1607669649866421
best_error: 1.1607643184272831
best_error: 1.1607643181760048
best_error: 1.1607624007265884
best_error: 1.1607624006590012
best_error: 1.1607624005610868
best_error: 1.1607581718149027
best_error: 1.1607581716179405
best_error: 1.1607284279976218
best_error: 1.1607284277968337
best_error: 1.160728427730109
best_error: 1.1606431974878475
best_error: 1.1606431971929971
best_error: 1.1603906705601008
best_error: 1.1603906696550055
best_error: 1.1599419180144794
best_error: 1.1599419130109938
best_error: 1.158292115271195
best_error: 1.1582921115896925
best_error: 1.158151229984117
best_error: 1.1581512292407
best_error: 1.1581507810185583
best_error: 1.1581507800157849
best_error: 1.1536867238227366
best_error: 1.153686717637352
best_error: 1.153488114570624
best_error: 1.1534880991331555
best_error: 1.1524051823867947
best_error: 1.1524051731292413
best_error: 1.1494009447267997
best_error: 1.1494009323982335
best_error: 1.1492013205349876
best_error: 1.1492013117092725
best_error: 1.1491966162111775
best_error: 1.1491966077602962
best_error: 1.149194176390168
best_error: 1.1491941680647864
best_error: 1.1490588794303644
best_error: 1.14905887060109
best_error: 1.1481187568813425
best_error: 1.1481187241511055
best_error: 1.1419088951507725
best_error: 1.1419088717223473
best_error: 1.1372045017685062
best_error: 1.1372045017119816
best_error: 1.1372045015708934
best_error: 1.13718335318765
best_error: 1.1371833531129756
best_error: 1.1371833530263422
best_error: 1.13717622929875
best_error: 1.1371762292375014
best_error: 1.1371762291357748
best_error: 1.1371065705851862
best_error: 1.1371065702212844
best_error: 1.1368470132068487
best_error: 1.1368470122580403
best_error: 1.1364257437281362
best_error: 1.1364257397049875
best_error: 1.1357342107537254
best_error: 1.1357342046000267
best_error: 1.1349948307108013
best_error: 1.134994827683538
best_error: 1.134443301896729
best_error: 1.1344433008304562
best_error: 1.1344213091494701
best_error: 1.1344213088842463
best_error: 1.1344209094729356
best_error: 1.1344209094020234
best_error: 1.134420856862978
best_error: 1.1344208568124237
best_error: 1.13442083232151
best_error: 1.134420832263411
best_error: 1.1344208286134831
best_error: 1.134420828577428
best_error: 1.1344208285594826
best_error: 1.134420828553311
best_error: 1.1344208285273727
