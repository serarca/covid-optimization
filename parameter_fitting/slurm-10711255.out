ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.811007113338109
best_error: 10.81100710046156
best_error: 10.811007030170348
best_error: 9.116837888219559
best_error: 9.116837820380908
best_error: 9.116837812688226
best_error: 5.515895158336482
best_error: 5.515895154610798
best_error: 4.606832322646984
best_error: 4.606832165659147
best_error: 4.047890399588303
best_error: 4.04789026566925
best_error: 3.8617685611290353
best_error: 3.8617685575363043
best_error: 3.816257633210434
best_error: 3.8162574991398035
best_error: 3.792393463552246
best_error: 3.7923933272605117
best_error: 3.7865937613680396
best_error: 3.7865936245389333
best_error: 3.7828233343091298
best_error: 3.7828231971312043
best_error: 3.7807618599444988
best_error: 3.7807617225754573
best_error: 3.7795535858425744
best_error: 3.779553448361468
best_error: 3.778688326216268
best_error: 3.7786881886548738
best_error: 3.778279087120397
best_error: 3.7782789495210327
best_error: 3.777965870149444
best_error: 3.777965732521028
best_error: 3.777830979022813
best_error: 3.7778308413818817
best_error: 3.777828265563873
best_error: 3.7778281279226955
best_error: 3.7778261710281917
best_error: 3.77782603338681
best_error: 3.777825128139467
best_error: 3.777824990497993
best_error: 3.7778243002973952
best_error: 3.7778241626558433
best_error: 3.777823912807817
best_error: 3.7778237751662225
best_error: 3.7778235937217013
best_error: 3.7778235486781115
best_error: 3.7691506195286983
best_error: 3.769150616001799
best_error: 3.7483776220778866
best_error: 3.7483776185744304
best_error: 3.663866262128326
best_error: 3.6638662587180892
best_error: 3.325143987677067
best_error: 3.3251439846319206
best_error: 2.9184419079541115
best_error: 2.9184415388290796
best_error: 2.813180003739259
best_error: 2.813179718605621
best_error: 2.767072468624373
best_error: 2.7670721686910023
best_error: 2.621083481887312
best_error: 2.621083134980947
best_error: 2.4753481736189125
best_error: 2.4753478091307652
best_error: 2.471652700484436
best_error: 2.4716526996168904
best_error: 2.4570059257766825
best_error: 2.4570055436851184
best_error: 2.455507826207774
best_error: 2.4555074437519906
best_error: 2.4545020364712107
best_error: 2.4545016537711732
best_error: 2.4540824322850887
best_error: 2.4540820494832207
best_error: 2.4540039429350866
best_error: 2.45400356011385
best_error: 2.453990908113449
best_error: 2.453990525288989
best_error: 2.4539846947141055
best_error: 2.4539843118881213
best_error: 2.4539816170734685
best_error: 2.453981234246714
best_error: 2.4539796900083273
best_error: 2.4539793071810942
best_error: 2.453978975067819
best_error: 2.4539785922404103
best_error: 2.453978516950372
best_error: 2.4539782419838776
best_error: 2.4539782244265407
best_error: 2.4539782235569545
best_error: 2.448525805866387
best_error: 2.4485254246838304
best_error: 2.4292429164739913
best_error: 2.429242547841108
best_error: 2.4100818873350276
best_error: 2.410081530571336
best_error: 2.400596467431586
best_error: 2.400596116266173
best_error: 2.400320285928313
best_error: 2.400319934733841
best_error: 2.399215331643497
best_error: 2.399214980332692
best_error: 2.394791861612661
best_error: 2.3947915098364625
best_error: 2.3922697658817196
best_error: 2.3922694138404066
best_error: 2.39063841029357
best_error: 2.3906380580808526
best_error: 2.3899340503070645
best_error: 2.3899336980203443
best_error: 2.3897858330274175
best_error: 2.3897858307786572
best_error: 2.3743700800725924
best_error: 2.3743697506062915
best_error: 2.3721311845184987
best_error: 2.372130855854582
best_error: 2.3631733110513276
best_error: 2.3631729814425873
best_error: 2.3598336149876618
best_error: 2.359833285027248
best_error: 2.35939936645268
best_error: 2.3593993631477197
best_error: 2.359132807881994
best_error: 2.35913247784782
best_error: 2.358095975016888
best_error: 2.358095646026105
best_error: 2.357958803343877
best_error: 2.357958474337215
best_error: 2.3578529528836984
best_error: 2.357852623864752
best_error: 2.357849589770587
best_error: 2.35784958783786
best_error: 2.3578495508666117
