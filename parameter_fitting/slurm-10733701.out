ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.491602786142469
best_error: 10.49160275808048
best_error: 10.34804402770157
best_error: 10.348043984172625
best_error: 5.770541719102363
best_error: 5.770541719102351
best_error: 5.77054171519967
best_error: 5.730424811598146
best_error: 5.730424705381708
best_error: 5.727865156849823
best_error: 5.727865156849813
best_error: 5.7278651503126685
best_error: 5.727824594923483
best_error: 5.727824594923473
best_error: 5.7278245883781835
best_error: 5.7277588562519055
best_error: 5.727758856251896
best_error: 5.727758849692617
best_error: 5.727732767992734
best_error: 5.727732662676543
best_error: 5.727715294555485
best_error: 5.727715294555474
best_error: 5.727715287992357
best_error: 5.727707004363715
best_error: 5.727707004363707
best_error: 5.727706997800504
best_error: 5.727703995138833
best_error: 5.727703995138824
best_error: 5.72770398857555
best_error: 5.727703844423581
best_error: 5.7277037391043955
best_error: 5.727703556621218
best_error: 5.727703556621208
best_error: 5.7277035500579245
best_error: 5.727702143945737
best_error: 5.727702143945725
best_error: 5.727702137382403
best_error: 5.727701847277079
best_error: 5.72770184727707
best_error: 5.727701840713749
best_error: 5.727701716676033
best_error: 5.7277016406723416
best_error: 5.726234900177437
best_error: 5.726234794820086
best_error: 5.72405307011315
best_error: 5.724052964154618
best_error: 5.71298514616745
best_error: 5.71298503973658
best_error: 5.618746671398823
best_error: 5.618746567611016
best_error: 5.354570829606341
best_error: 5.354570829606329
best_error: 5.354570801298386
best_error: 5.244275179749072
best_error: 5.244275179749065
best_error: 5.241703312719138
best_error: 5.241703312719132
best_error: 5.237395449224717
best_error: 5.237395449224709
best_error: 5.141654867791628
best_error: 5.141654776358418
best_error: 5.131851739387608
best_error: 5.131851673125737
best_error: 5.129406060743891
best_error: 5.1294060607438885
best_error: 5.122902271967114
best_error: 5.122902207899318
best_error: 5.120965069720844
best_error: 5.1209650697208415
best_error: 5.120965068367127
best_error: 5.119967563276065
best_error: 5.119967495414418
best_error: 5.11957345725095
best_error: 5.1195734572509455
best_error: 5.119573455898494
best_error: 5.1195601123295535
best_error: 5.119560045562915
best_error: 5.119558164161431
best_error: 5.119558164161425
best_error: 5.119558162790635
best_error: 5.119349448049563
best_error: 5.119349448049557
best_error: 5.119349446667823
best_error: 5.118740152024301
best_error: 5.118740152024296
best_error: 5.118740150610624
best_error: 5.118090931389395
best_error: 5.1180908511158165
best_error: 5.115752584887619
best_error: 5.1157525046588805
best_error: 5.10337433443137
best_error: 5.103374252873037
best_error: 5.07512408969221
best_error: 5.075124089692206
best_error: 5.072393256305501
best_error: 5.072393256305494
best_error: 5.071291470105901
best_error: 5.071291470105895
best_error: 5.070781075842557
best_error: 5.070781075842552
best_error: 5.070569820632416
best_error: 5.070569820632412
best_error: 5.070200357403531
best_error: 5.0702003574035235
best_error: 5.070170939503164
best_error: 5.07017093950316
best_error: 5.042964391315192
best_error: 5.0429643913151825
best_error: 5.034996884218083
best_error: 5.03499688421807
best_error: 5.033580147940931
best_error: 5.033580147940912
best_error: 5.032997605626134
best_error: 5.032997605626123
best_error: 5.032285966400018
best_error: 5.032285966400007
best_error: 5.028802341525118
best_error: 5.028802341525102
best_error: 5.020832434022297
best_error: 5.020832434022282
best_error: 4.996568993672833
best_error: 4.996568993672771
best_error: 4.940211043342026
best_error: 4.94021103819163
best_error: 4.916966327011417
best_error: 4.916966273943941
best_error: 4.912662725792593
best_error: 4.91266256816645
best_error: 4.896792173558206
best_error: 4.896792131940236
best_error: 4.896398362818934
best_error: 4.896398321651743
best_error: 4.896261913593181
best_error: 4.896261872621215
best_error: 4.896202969146391
best_error: 4.8962029282578525
best_error: 4.89617589880818
best_error: 4.896175857913326
best_error: 4.89617403713238
best_error: 4.8961739962370645
best_error: 4.896173879868442
best_error: 4.89617387325818
best_error: 4.896173868401144
best_error: 4.896173867072541
best_error: 4.896173860885105
