ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.15779436546055
best_error: 25.157793860893072
best_error: 5.041514952272568
best_error: 5.041514952008672
best_error: 5.0414990625054585
best_error: 5.041499062500221
best_error: 5.041499062463114
best_error: 5.04143543397084
best_error: 5.041435433965588
best_error: 5.0414354339284575
best_error: 5.041179802429566
best_error: 5.041179802424258
best_error: 5.041179802387032
best_error: 5.040139007761351
best_error: 5.040139007755806
best_error: 5.040139007718194
best_error: 5.0356558093878165
best_error: 5.035655809381138
best_error: 5.035655809341905
best_error: 5.009586989691524
best_error: 5.00958698967072
best_error: 5.009586989626069
best_error: 4.970820048619704
best_error: 4.970820048497749
best_error: 4.493672946135529
best_error: 4.493672902224122
best_error: 3.7262995255550764
best_error: 3.7262994028885545
best_error: 3.335266180117492
best_error: 3.335266004883014
best_error: 3.335265930082815
best_error: 3.335265903962608
best_error: 2.777869264851467
best_error: 2.7778690448755867
best_error: 2.7312703853375377
best_error: 2.7312703823808873
best_error: 2.7312703742335707
best_error: 2.72915930158004
best_error: 2.7291592985046553
best_error: 2.72915929023379
best_error: 2.720853247533247
best_error: 2.720853243922779
best_error: 2.720853235251967
best_error: 2.696024497729547
best_error: 2.696024389152582
best_error: 2.691408739379699
best_error: 2.6914087342920623
best_error: 2.691408725144763
best_error: 2.6901292951596556
best_error: 2.6901292652491584
best_error: 2.6890697403664245
best_error: 2.6890696454928165
best_error: 2.676170173223839
best_error: 2.676170151924116
best_error: 2.6754763591183144
best_error: 2.675476349673262
best_error: 2.6754763489241298
best_error: 2.6744570863122594
best_error: 2.674457054091856
best_error: 2.673663015951866
best_error: 2.6736629741199835
best_error: 2.6715066989350964
best_error: 2.671506665914583
best_error: 2.661323100948616
best_error: 2.6613230396311267
best_error: 2.574517942962438
best_error: 2.5745177112073008
best_error: 2.574517341058443
best_error: 2.1888591353692157
best_error: 2.188858911140609
best_error: 2.1888588983829065
best_error: 2.133295333132801
best_error: 2.133295273202314
best_error: 1.9639310711594629
best_error: 1.96393093198593
best_error: 1.835612595467988
best_error: 1.8356125474866332
best_error: 1.835612440452408
best_error: 1.834104456653502
best_error: 1.8341043461776492
best_error: 1.8187985666275555
best_error: 1.8187985617073577
best_error: 1.8186277962731316
best_error: 1.818627784933399
best_error: 1.8184755579161829
best_error: 1.818475548859492
best_error: 1.8183461459131502
best_error: 1.8183461390843962
best_error: 1.8181484675909128
best_error: 1.8181484640302767
best_error: 1.8177789703538676
best_error: 1.817778970226664
best_error: 1.8177789654868761
best_error: 1.817497172303866
best_error: 1.8174971687694579
best_error: 1.817478018008515
best_error: 1.81747801583195
best_error: 1.817435788847966
best_error: 1.8174357884088501
best_error: 1.817435788229192
best_error: 1.817358003540752
best_error: 1.817358003221201
best_error: 1.8173580029327967
best_error: 1.8167599507058074
best_error: 1.8167599422013956
best_error: 1.8164330800846702
best_error: 1.8164330782935065
best_error: 1.8158206877192837
best_error: 1.8158206871706162
best_error: 1.8158206870989528
best_error: 1.8158206868810265
best_error: 1.815668626985449
best_error: 1.8156686255255006
best_error: 1.8156254092271689
best_error: 1.8156254063112374
best_error: 1.815618761778429
best_error: 1.8156187601835023
best_error: 1.8156099992715287
best_error: 1.8156099984706235
best_error: 1.8155784420478225
best_error: 1.8155784410400424
best_error: 1.815439436934605
best_error: 1.8154394345354503
best_error: 1.8151387099184964
best_error: 1.8151387002628807
best_error: 1.8146388267541598
best_error: 1.8146388151233155
best_error: 1.8116697562870057
best_error: 1.8116697519338343
best_error: 1.8043579518695998
best_error: 1.804357837835974
best_error: 1.7991357702965904
best_error: 1.799135745454251
best_error: 1.7984492628584774
best_error: 1.7984492119886177
best_error: 1.7957603878092752
best_error: 1.795760366124153
best_error: 1.794673181245457
best_error: 1.794673167767412
best_error: 1.7940006570765457
best_error: 1.7940006510615327
best_error: 1.7938110628959019
best_error: 1.7938110574475552
best_error: 1.7937107520844364
best_error: 1.7937107363304774
best_error: 1.7935825371619512
best_error: 1.793582536580743
best_error: 1.7935825364636446
best_error: 1.7935825364484734
best_error: 1.793581555970386
best_error: 1.7935815545587959
best_error: 1.7935795782920405
best_error: 1.7935795777353485
best_error: 1.7935795775882861
best_error: 1.7935771069694504
best_error: 1.793577106363078
best_error: 1.793577106265622
best_error: 1.7935702354081378
best_error: 1.7935702349408138
best_error: 1.7935702347164888
best_error: 1.7935561347119964
best_error: 1.7935561343071027
best_error: 1.7935561340352217
best_error: 1.7935561340193653
best_error: 1.793524050203622
best_error: 1.7935240497445388
best_error: 1.7935240495441662
best_error: 1.7935240494893185
best_error: 1.7934121097597437
best_error: 1.793412108149984
best_error: 1.7931816477963105
best_error: 1.7931816449073699
best_error: 1.7919823169981053
best_error: 1.7919823067557263
best_error: 1.7919823002656101
best_error: 1.7882312373243214
best_error: 1.7882312171238097
best_error: 1.7817134526473735
best_error: 1.781713393295191
best_error: 1.7809309453182975
best_error: 1.7809308432743212
best_error: 1.7800349371692592
best_error: 1.780034790209261
best_error: 1.779611023127441
best_error: 1.7796108501325372
best_error: 1.7791982058978228
best_error: 1.7791980129600666
best_error: 1.771250174852642
best_error: 1.7712499840665326
best_error: 1.7661806287368045
best_error: 1.7661805879264447
best_error: 1.7656400990343648
best_error: 1.7656400587237997
best_error: 1.7637844917529617
best_error: 1.7637844497870643
best_error: 1.7635701342291044
best_error: 1.763570094092311
best_error: 1.7634801568187635
best_error: 1.7634800944778752
best_error: 1.7633243415183026
best_error: 1.7633241924923018
best_error: 1.759110790680959
best_error: 1.7591107853769627
best_error: 1.7576802518047503
best_error: 1.7576802509077387
best_error: 1.7521532847526993
best_error: 1.7521532763578194
best_error: 1.7521532689311203
best_error: 1.7517948494791022
best_error: 1.7517948421857787
best_error: 1.751794836391457
best_error: 1.751557319832105
best_error: 1.7515573124239194
best_error: 1.7513107453501728
best_error: 1.7513107369416325
best_error: 1.7510796386917
best_error: 1.7510796237129194
best_error: 1.7508552603679568
best_error: 1.7508552449589656
best_error: 1.749812380565135
best_error: 1.7498123627619058
best_error: 1.749149427731378
best_error: 1.7491494140245367
best_error: 1.7481112956785914
best_error: 1.74811128824905
best_error: 1.7466235699558417
best_error: 1.7466235686027338
best_error: 1.7466235608311096
best_error: 1.7427410942965764
best_error: 1.7427410778743906
best_error: 1.7398162315099608
best_error: 1.7398161660437572
best_error: 1.7398160869053705
best_error: 1.7327741272975836
best_error: 1.732774092230591
best_error: 1.729692975202118
best_error: 1.7296929611655105
best_error: 1.7282875711457424
best_error: 1.7282875603046386
best_error: 1.727848135205681
best_error: 1.7278481333684865
best_error: 1.7277236465476182
best_error: 1.7277236458172138
best_error: 1.7276584477385768
best_error: 1.7276584434848514
best_error: 1.7276011578511035
best_error: 1.7276011535021987
best_error: 1.727444581407198
best_error: 1.7274445753030951
best_error: 1.7269763845464314
best_error: 1.7269763741116078
best_error: 1.7257108409925663
best_error: 1.7257108349787693
best_error: 1.725710828825547
best_error: 1.7256698416261156
best_error: 1.7256698392843057
best_error: 1.7256698252569007
best_error: 1.7256559082291767
best_error: 1.7256559081218787
best_error: 1.7256558895826601
best_error: 1.7256540955306812
best_error: 1.7256540760358836
best_error: 1.72565331309972
best_error: 1.7256532930420105
best_error: 1.7256531838432538
best_error: 1.725653163569774
best_error: 1.7251248192730642
best_error: 1.725124818485415
best_error: 1.7251248038623126
best_error: 1.7241999614523453
best_error: 1.7241999392440264
