ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 70
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.01017485154172
best_error: 102.01017476614638
best_error: 102.01017465975646
best_error: 20.261455624611845
best_error: 20.261455624610456
best_error: 20.26145562184106
best_error: 20.259433104710155
best_error: 20.259433101893237
best_error: 20.251000994826256
best_error: 20.251000991805142
best_error: 20.209540418303398
best_error: 20.20954041387673
best_error: 16.509591014237934
best_error: 16.50959065467423
best_error: 15.284267204962514
best_error: 15.284267199726596
best_error: 15.284267198474566
best_error: 15.284266393228018
best_error: 15.227169405373413
best_error: 15.22716922713004
best_error: 14.933735762514814
best_error: 14.933735726129076
best_error: 14.933735572794472
best_error: 14.769421053742754
best_error: 14.769421050779957
best_error: 14.769421040871212
best_error: 14.769421032335583
best_error: 14.281312254155
best_error: 14.281312241969339
best_error: 14.281312240899645
best_error: 14.281312232589979
best_error: 13.835386849333847
best_error: 13.835386841982565
best_error: 13.835386839242389
best_error: 13.835386829524833
best_error: 13.780089215719094
best_error: 13.780089185865574
best_error: 13.557118515349858
best_error: 13.557118319189545
best_error: 13.464404279371102
best_error: 13.464404265074341
best_error: 13.464404263773087
best_error: 13.455294089684486
best_error: 13.455294075651882
best_error: 13.455294074211707
best_error: 13.447071767609684
best_error: 13.447071754620879
best_error: 13.44707175252279
best_error: 13.438606574138882
best_error: 13.438606562639436
best_error: 13.438606559507946
best_error: 13.433135651104195
best_error: 13.43313564084529
best_error: 13.433135636678893
best_error: 13.428076652500607
best_error: 13.428076416465743
best_error: 13.419589100162272
best_error: 13.41958883426334
best_error: 13.399755363755979
best_error: 13.39975535980832
best_error: 13.39975534120586
best_error: 13.399755320829541
best_error: 13.370604898327551
best_error: 13.370604894025249
best_error: 13.370604878674117
best_error: 13.370604856899849
best_error: 13.251627031640089
best_error: 13.251627025433997
best_error: 13.251627024815367
best_error: 13.251626998693355
best_error: 12.919402329814416
best_error: 12.919402321190603
best_error: 12.919402310724344
best_error: 12.913006535493457
best_error: 12.913006527105466
best_error: 12.913006514043197
best_error: 12.889135200160277
best_error: 12.889135191550672
best_error: 12.889135175826564
best_error: 12.886998662773891
best_error: 12.886998654169888
best_error: 12.88699863846843
best_error: 12.825896119322783
best_error: 12.825896108653946
best_error: 12.825896103132056
best_error: 12.78506456937664
best_error: 12.785064558193673
best_error: 12.785064555227036
best_error: 12.785064554118359
best_error: 12.770865367241477
best_error: 12.770865355371516
best_error: 12.770865354966068
best_error: 12.770865351923858
best_error: 12.765193437148817
best_error: 12.765193425222545
best_error: 12.765193425008452
best_error: 12.765193421806602
best_error: 12.761529274355082
best_error: 12.7615292619777
best_error: 12.76152925900184
best_error: 12.760097896084451
best_error: 12.760097883643057
best_error: 12.760097880720341
best_error: 12.76001832093372
best_error: 12.760018308491754
best_error: 12.760018305569034
best_error: 12.760011489353122
best_error: 12.760011461481309
best_error: 12.760000287347781
best_error: 12.760000274905693
best_error: 12.760000271982964
best_error: 12.759982562360387
best_error: 12.759982549918176
best_error: 12.759982546995445
best_error: 12.759979600683115
best_error: 12.75997958824088
best_error: 12.759979585318144
best_error: 12.759977648631352
best_error: 12.759977636189104
best_error: 12.75997763326638
best_error: 12.759977166299842
best_error: 12.759977153857584
best_error: 12.759977152750807
best_error: 12.742835179360606
best_error: 12.742835152097008
best_error: 12.534976178970654
best_error: 12.534976157002902
best_error: 12.33526174175951
best_error: 12.335261727327602
best_error: 12.335261513965364
best_error: 12.28494120319453
best_error: 12.284940995793129
best_error: 12.25167842012044
best_error: 12.251678225141122
best_error: 12.238009398558079
best_error: 12.238009387864038
best_error: 12.238009383713353
best_error: 12.23562326060341
best_error: 12.235623248411823
best_error: 12.235623246512898
best_error: 12.234657962316236
best_error: 12.234657825143067
best_error: 12.226282713689333
best_error: 12.226282700199611
best_error: 12.226282699603315
best_error: 12.224780477309166
best_error: 12.22478031948826
best_error: 12.221056671426437
best_error: 12.221056658621592
best_error: 12.221056657424587
best_error: 12.212982473583226
best_error: 12.212982459757685
best_error: 12.19898592351254
best_error: 12.198985905137622
best_error: 12.196327335848382
best_error: 12.196327316670793
best_error: 12.19308252808667
best_error: 12.193082509396401
best_error: 12.18549861991707
best_error: 12.185498531744123
best_error: 12.177639936144283
best_error: 12.177639876286182
best_error: 12.170984235449819
best_error: 12.17098419696221
best_error: 12.16944655620499
best_error: 12.169446518446058
best_error: 12.168340987470039
best_error: 12.168340950347009
best_error: 12.167924716608425
best_error: 12.167924683649584
best_error: 12.167625521894832
best_error: 12.16762548894811
best_error: 12.167532952571246
best_error: 12.167532919628266
best_error: 12.167475818537211
best_error: 12.167475785596537
best_error: 12.167421116089715
best_error: 12.167421083380518
best_error: 12.167414923239054
best_error: 12.16741489053005
best_error: 12.16741193616396
best_error: 12.167411903455054
best_error: 12.167410341407727
best_error: 12.16741030869887
best_error: 12.167409382798503
best_error: 12.167409350089676
best_error: 12.167409062494716
best_error: 12.167409039043864
best_error: 12.167408999505064
best_error: 12.167408966796186
best_error: 12.167408459843221
best_error: 12.167408427134271
best_error: 12.167408404882133
best_error: 12.16740840455274
best_error: 12.167408399582369
best_error: 12.167408386663347
best_error: 12.167408386333955
best_error: 12.167408381363579
best_error: 12.167408375367504
best_error: 12.16740837503811
best_error: 12.167408370067736
best_error: 12.167408368348571
best_error: 12.167408368019178
best_error: 12.167408363048803
best_error: 12.167408362321549
best_error: 12.16740836212121
best_error: 12.167408361989839
