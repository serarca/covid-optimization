ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 72
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 107.1817156134333
best_error: 107.1817154496713
best_error: 107.18171542431607
best_error: 19.994330814031773
best_error: 19.994330814029862
best_error: 19.99433081062997
best_error: 19.993610271169807
best_error: 19.99361026774811
best_error: 19.990685499860728
best_error: 19.990685496357507
best_error: 19.97825641143737
best_error: 19.978256407574385
best_error: 19.91267039959293
best_error: 19.91267039348486
best_error: 16.724069471155723
best_error: 16.724069178861974
best_error: 15.104223988068945
best_error: 15.104223529284484
best_error: 13.147657465138181
best_error: 13.147657448493328
best_error: 12.976196080843078
best_error: 12.976196069194419
best_error: 12.971366051079249
best_error: 12.971365939850884
best_error: 12.964378876689153
best_error: 12.964378774006484
best_error: 12.963732260599475
best_error: 12.963732249632404
best_error: 12.963142933462958
best_error: 12.963142831210579
best_error: 12.962401332479182
best_error: 12.96240123048633
best_error: 12.962334112912053
best_error: 12.962334102042607
best_error: 12.962301910430345
best_error: 12.962301808430778
best_error: 12.962244118602582
best_error: 12.962244016599112
best_error: 12.962238312123883
best_error: 12.962238301255265
best_error: 12.96210037890167
best_error: 12.962100276868187
best_error: 12.961405643498157
best_error: 12.961405541149194
best_error: 12.958709876766628
best_error: 12.958709769810088
best_error: 12.949681520389595
best_error: 12.94968138932063
best_error: 12.946990061418454
best_error: 12.946989841520232
best_error: 12.944150386189243
best_error: 12.944150187252196
best_error: 12.941699580205121
best_error: 12.941699398995777
best_error: 12.939474765945876
best_error: 12.93947459712328
best_error: 12.93170122186103
best_error: 12.931701210830385
best_error: 12.919789722989925
best_error: 12.919789712254104
best_error: 12.878462131254626
best_error: 12.878462121073984
best_error: 12.8531046475861
best_error: 12.853104637058442
best_error: 12.847355274505643
best_error: 12.847355264130156
best_error: 12.84365727922954
best_error: 12.84365724378349
best_error: 12.780170958394859
best_error: 12.780170919387826
best_error: 12.594095198649356
best_error: 12.594095160246852
best_error: 12.478726823099656
best_error: 12.478726785119619
best_error: 12.32456728000381
best_error: 12.32456724222757
best_error: 12.324285291787685
best_error: 12.32428525385346
best_error: 12.287085708647254
best_error: 12.28708567016584
best_error: 12.244823425576698
best_error: 12.24482338696447
best_error: 12.235203935379714
best_error: 12.235203896692326
best_error: 12.230509442190897
best_error: 12.230509403446053
best_error: 12.227715331194705
best_error: 12.227715292450686
best_error: 12.226127282757314
best_error: 12.226127243950927
best_error: 12.181339099814796
best_error: 12.181339042779298
best_error: 11.835167993168026
best_error: 11.835167977166348
best_error: 11.75399928443456
best_error: 11.753999269229672
best_error: 11.748108200459784
best_error: 11.748108087770426
best_error: 11.747255084103962
best_error: 11.747255069124085
best_error: 11.745964646952062
best_error: 11.745964632180922
best_error: 11.744717096217297
best_error: 11.74471708113377
best_error: 11.744436217429527
best_error: 11.744436202355368
best_error: 11.744184080594367
best_error: 11.744184065104308
best_error: 11.744018415431114
best_error: 11.744018399946823
best_error: 11.743883865336471
best_error: 11.74388384985688
best_error: 11.743798378202532
best_error: 11.743798362748676
best_error: 11.74374805494932
best_error: 11.743748039496335
best_error: 11.743728532067628
best_error: 11.743728516614995
best_error: 11.743720980689616
best_error: 11.743720965237099
best_error: 11.743719881120322
best_error: 11.743719865667808
best_error: 11.74371908656122
best_error: 11.743719071108728
best_error: 11.743718457939872
best_error: 11.743718442487387
best_error: 11.743717937741183
best_error: 11.743717922288713
best_error: 11.743717541220025
best_error: 11.743717525767565
best_error: 11.743717302588255
best_error: 11.743717287135793
best_error: 11.743717286882896
best_error: 11.743717244525731
best_error: 11.743717231422606
best_error: 11.743717215970133
best_error: 11.743717108602278
best_error: 11.743717093149813
best_error: 11.743717080802927
best_error: 11.743717073704797
