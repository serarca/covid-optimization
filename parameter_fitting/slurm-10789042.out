ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.338451006270542
best_error: 9.338450994851858
best_error: 8.589818960148236
best_error: 8.589818927492967
best_error: 7.992062505153109
best_error: 7.992062355982169
best_error: 7.537004373024327
best_error: 7.537004296292601
best_error: 5.8932540168761465
best_error: 5.893253964190656
best_error: 5.893253841515603
best_error: 5.820084973478192
best_error: 5.820084901473154
best_error: 5.820084791791728
best_error: 5.12148478553914
best_error: 5.1214846862941314
best_error: 5.121484591793356
best_error: 4.679512553721611
best_error: 4.679512426950619
best_error: 4.345496021995135
best_error: 4.34549589733624
best_error: 3.6887734614052032
best_error: 3.688773422276291
best_error: 2.297320394402869
best_error: 2.2973203479559174
best_error: 2.29732025837329
best_error: 2.227120001731776
best_error: 2.2271198120446893
best_error: 2.1579416592327343
best_error: 2.1579414834703377
best_error: 2.0371764227631393
best_error: 2.0371764112952624
best_error: 2.037176274800549
best_error: 1.9909551317735326
best_error: 1.9909551180346974
best_error: 1.9909549838698335
best_error: 1.9771040086409635
best_error: 1.9771039927979233
best_error: 1.9771038598059085
best_error: 1.9730264858573077
best_error: 1.9730264694708388
best_error: 1.9730263366507634
best_error: 1.9727760937953316
best_error: 1.9727760772760763
best_error: 1.9727759445779287
best_error: 1.972484880569243
best_error: 1.9724848640293646
best_error: 1.9724847313392069
best_error: 1.9721905307112269
best_error: 1.9721905140110119
best_error: 1.9721903814684345
best_error: 1.9720017846879059
best_error: 1.9720017421357423
best_error: 1.9719924754743774
best_error: 1.9719924587599797
best_error: 1.9719923262229875
best_error: 1.9719639160902238
best_error: 1.9719638993750586
best_error: 1.9719637668364824
best_error: 1.9719433494165721
best_error: 1.9719433327008433
best_error: 1.9719432001611241
best_error: 1.971928722384796
best_error: 1.971928705668677
best_error: 1.971928573128149
best_error: 1.9719192702281207
best_error: 1.9719192535117394
best_error: 1.9719191209706812
best_error: 1.9719107635938449
best_error: 1.9719107468772472
best_error: 1.9719106143357092
best_error: 1.971906565603498
best_error: 1.9719065488867722
best_error: 1.9719064163450128
best_error: 1.9719020205557425
best_error: 1.9719020038389015
best_error: 1.9719018712968823
best_error: 1.9719003538525985
best_error: 1.9719003371357076
best_error: 1.9719002045936078
best_error: 1.9718993085315635
best_error: 1.971899291814644
best_error: 1.9718991592724813
best_error: 1.9718984768870587
best_error: 1.9718984601701184
best_error: 1.9718983276279123
best_error: 1.9718980293685013
best_error: 1.9718980126515575
best_error: 1.9718978801093123
best_error: 1.971897673107176
best_error: 1.9718976563902157
best_error: 1.9718975238479597
best_error: 1.9718974817519657
best_error: 1.9718974650350023
best_error: 1.971897332492733
best_error: 1.971897329256234
best_error: 1.9718973125392742
best_error: 1.971897179996989
best_error: 1.9718970983459971
best_error: 1.8528140146554195
best_error: 1.8528139731705662
best_error: 1.8115182515165864
best_error: 1.8115180115862324
best_error: 1.808344309432956
best_error: 1.808344069321112
best_error: 1.8079310145495124
best_error: 1.8079309724789625
best_error: 1.8077058054237694
best_error: 1.807705565275458
best_error: 1.8073697729119194
best_error: 1.8073697308248042
best_error: 1.8072533298081894
best_error: 1.807253088264459
best_error: 1.8061595493410794
best_error: 1.8061592922129
best_error: 1.7996913973940927
best_error: 1.7996911478441537
best_error: 1.7668640111940643
best_error: 1.7668639740990297
best_error: 1.7597152603477746
best_error: 1.7597152247415424
best_error: 1.7515819550353857
best_error: 1.7515819199191307
best_error: 1.750002722889072
best_error: 1.7500026897478103
best_error: 1.735095101967746
best_error: 1.7350948995481805
best_error: 1.7072508464730811
best_error: 1.7072506204450353
best_error: 1.705894545622939
best_error: 1.7058945287998912
best_error: 1.6092343722318252
best_error: 1.6092343361417598
best_error: 1.5646422740148846
best_error: 1.564642237543656
best_error: 1.5583851940102125
best_error: 1.5583851575794965
best_error: 1.5579216207180346
best_error: 1.5579216011575698
best_error: 1.5579213954385793
best_error: 1.4892422765142361
best_error: 1.489242029645712
best_error: 1.4892413674011342
best_error: 1.4892411204970903
best_error: 1.4892385753607134
best_error: 1.4892383283979713
best_error: 1.4892351248564948
best_error: 1.4892348770304924
best_error: 1.4892346922219017
best_error: 1.4892344444160162
best_error: 1.489234248232505
best_error: 1.489234130939387
best_error: 1.489234039195276
best_error: 1.4769956985769976
best_error: 1.4769956800773398
best_error: 1.4687821402055738
best_error: 1.4687818829058117
best_error: 1.4091486204024228
best_error: 1.4091486087665022
best_error: 1.4091485592588646
best_error: 1.4082157453331097
best_error: 1.4082154594030065
best_error: 1.4027880391258352
best_error: 1.4027877600826537
best_error: 1.4013486105012634
best_error: 1.4013483371574913
best_error: 1.400742546585172
best_error: 1.4007425290948383
best_error: 1.4007424864080842
best_error: 1.4006934589275173
best_error: 1.400693185210462
best_error: 1.4006513455260086
best_error: 1.4006510717942278
best_error: 1.4006427464951845
best_error: 1.4006427290613264
best_error: 1.400642686332151
best_error: 1.4006353977314236
best_error: 1.400635123994062
best_error: 1.400634496545373
best_error: 1.4006342228077222
best_error: 1.4006340293443817
best_error: 1.400634028897779
best_error: 1.4006340198826406
best_error: 1.40063401943604
best_error: 1.4006340191464786
best_error: 1.4006340176136107
best_error: 1.4006340171670009
best_error: 1.4006340168303935
best_error: 1.4006340163837874
best_error: 1.4006340163434006
best_error: 1.4006340158967996
best_error: 1.4006340156156765
