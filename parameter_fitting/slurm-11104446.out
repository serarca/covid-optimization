ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 66
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 104.16783065963672
best_error: 104.1678304772401
best_error: 104.16783045785068
best_error: 20.559692954143117
best_error: 20.55969295414227
best_error: 20.559692952636965
best_error: 20.55953043917874
best_error: 20.55953043766806
best_error: 20.558875462113434
best_error: 20.55887546058439
best_error: 20.55617409006906
best_error: 20.55617408846283
best_error: 20.543858568818568
best_error: 20.543858566830693
best_error: 20.442940961509727
best_error: 20.442940954843777
best_error: 20.44076432164996
best_error: 20.44076431485777
best_error: 20.04095903491671
best_error: 20.040958946541323
best_error: 18.475454510249072
best_error: 18.475454274562004
best_error: 14.00346481014423
best_error: 14.00346480145492
best_error: 13.995737378365252
best_error: 13.99573737303244
best_error: 13.995737368341139
best_error: 13.994766440714919
best_error: 13.994766436139885
best_error: 13.994766430159737
best_error: 13.990364218679044
best_error: 13.990364215365817
best_error: 13.99036419635066
best_error: 13.980710077996783
best_error: 13.98070972066511
best_error: 13.976934029395263
best_error: 13.976934028221626
best_error: 13.976933976143634
best_error: 13.974532942297127
best_error: 13.974532941528535
best_error: 13.974532880566573
best_error: 13.973989788200004
best_error: 13.973989787837255
best_error: 13.97398972062455
best_error: 13.973228176842998
best_error: 13.973227819374365
best_error: 13.931886771141155
best_error: 13.931886456422621
best_error: 13.929294097049457
best_error: 13.929294093887794
best_error: 13.929294076539557
best_error: 13.928764883602511
best_error: 13.928764880444685
best_error: 13.928764863031223
best_error: 13.92840657624033
best_error: 13.92840657308511
best_error: 13.928406555627486
best_error: 13.92824929681985
best_error: 13.92824929366577
best_error: 13.928249276188764
best_error: 13.92814128714826
best_error: 13.92814126257791
best_error: 13.928140322537347
best_error: 13.928140319384063
best_error: 13.928140301893627
best_error: 13.92807652100442
best_error: 13.928076517851663
best_error: 13.928076500353324
best_error: 13.927843600100934
best_error: 13.92784357553683
best_error: 13.92782785495573
best_error: 13.927827852188885
best_error: 13.927827833183892
best_error: 13.927434908698547
best_error: 13.927434905933666
best_error: 13.927434886887925
best_error: 13.927042039105938
best_error: 13.927042036343009
best_error: 13.927042017256536
best_error: 13.926938470676056
best_error: 13.926938446134358
best_error: 13.891707807906386
best_error: 13.891707782599529
best_error: 13.845102795153373
best_error: 13.845102787486024
best_error: 13.845102787154051
best_error: 13.842114759500793
best_error: 13.842114751832366
best_error: 13.842114751501615
best_error: 13.830163673843527
best_error: 13.830163666170801
best_error: 13.830163665844962
best_error: 13.782376236653002
best_error: 13.782376228963008
best_error: 13.782376228656895
best_error: 13.591500635216267
best_error: 13.591500627434751
best_error: 13.591500627229992
best_error: 12.83438832200474
best_error: 12.834388313599321
best_error: 12.763425306232214
best_error: 12.763425297793912
best_error: 12.763390118248465
best_error: 12.763390118248463
best_error: 12.763390109810338
best_error: 12.763249366774785
best_error: 12.763249358337344
best_error: 12.762686368261212
best_error: 12.762686359826539
best_error: 12.76043449229459
best_error: 12.76043448387097
best_error: 12.75142887711905
best_error: 12.75142886873965
best_error: 12.74105539831253
best_error: 12.74105531135467
best_error: 12.740954112995059
best_error: 12.7409540260263
best_error: 12.740579751678425
best_error: 12.7405797515961
best_error: 12.740579659640357
best_error: 12.740493139161885
best_error: 12.740493130852009
best_error: 12.740049781422629
best_error: 12.7400496994725
best_error: 12.732630226598847
best_error: 12.73263017162476
best_error: 12.72948841932936
best_error: 12.72948837376353
best_error: 12.72092736206881
best_error: 12.720927325186997
best_error: 12.720287219173752
best_error: 12.720287185046551
best_error: 12.719731337116421
best_error: 12.719731303287226
best_error: 12.718752049873041
best_error: 12.718752016003993
best_error: 12.718132140581062
best_error: 12.718132107272814
best_error: 12.717986998936487
best_error: 12.717986965622305
best_error: 12.717865791080705
best_error: 12.717865758311383
best_error: 12.717775540168974
best_error: 12.717775507395853
best_error: 12.717730961366016
best_error: 12.71773092859101
best_error: 12.717664503519845
best_error: 12.717664471018221
best_error: 12.717647835614294
best_error: 12.717647827448578
best_error: 12.717625838325894
best_error: 12.71762580582266
best_error: 12.717623188509862
best_error: 12.717623156006502
best_error: 12.717621705612702
best_error: 12.717621673109267
best_error: 12.717619055175597
best_error: 12.717619022672036
best_error: 12.717618073864209
best_error: 12.717618041360595
best_error: 12.717617840525644
best_error: 12.717617808022027
best_error: 12.717617582917399
best_error: 12.71761755041377
best_error: 12.717617513944395
best_error: 12.717617481440758
best_error: 12.717617225986803
best_error: 12.71761719348315
best_error: 12.71761718192163
best_error: 12.717617149417977
best_error: 12.717617138917415
