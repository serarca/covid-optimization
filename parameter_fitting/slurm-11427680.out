ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.947032248367254
best_error: 25.94703191262069
best_error: 5.076878777718593
best_error: 5.076878777572674
best_error: 5.076861321245214
best_error: 5.076861321217215
best_error: 5.076861321107731
best_error: 5.076791415793267
best_error: 5.076791415765154
best_error: 5.076791415655657
best_error: 5.076510514393297
best_error: 5.076510514364718
best_error: 5.076510514255171
best_error: 5.075365999032415
best_error: 5.075365999001928
best_error: 5.07536599889219
best_error: 5.070422563801937
best_error: 5.070422563762899
best_error: 5.0704225636525715
best_error: 5.041582518760557
best_error: 5.041582518653195
best_error: 5.041582518554736
best_error: 4.932397872349817
best_error: 4.932397866374346
best_error: 4.919640319762042
best_error: 4.91964031116693
best_error: 4.788416547206521
best_error: 4.788416505075968
best_error: 4.768526786997992
best_error: 4.768526739406007
best_error: 4.744642750772049
best_error: 4.744642696569444
best_error: 4.232461842304518
best_error: 4.232461642407263
best_error: 3.466498558217673
best_error: 3.4664985057850384
best_error: 3.4593660980427616
best_error: 3.4593660853305175
best_error: 3.4582705526367477
best_error: 3.458270552585114
best_error: 3.4582705523486963
best_error: 3.4582705513389214
best_error: 3.457884347003985
best_error: 3.4578843466020697
best_error: 3.4578843458781225
best_error: 3.4575181348774726
best_error: 3.4575181222632243
best_error: 3.456444683527839
best_error: 3.456444668143017
best_error: 3.4525386282504757
best_error: 3.4525385894383764
best_error: 3.423767107455017
best_error: 3.4237668923216074
best_error: 3.364405906925731
best_error: 3.3644054464663267
best_error: 3.2449574853778853
best_error: 3.2449573718055746
best_error: 2.965831264556915
best_error: 2.965831137025252
best_error: 2.759907067631265
best_error: 2.7599065982825386
best_error: 2.6453803468849046
best_error: 2.645380277853343
best_error: 2.6372186164268583
best_error: 2.637218577227908
best_error: 2.633614713543833
best_error: 2.633614676465221
best_error: 2.6320519983571855
best_error: 2.632051973250244
best_error: 2.631707013572692
best_error: 2.6317070055027
best_error: 2.631297590940163
best_error: 2.631297583832088
best_error: 2.6312975835764685
best_error: 2.6297368983364895
best_error: 2.6297368959526612
best_error: 2.6297368913313575
best_error: 2.6250850474690686
best_error: 2.6250850288107794
best_error: 2.6248914830454377
best_error: 2.624891467466116
best_error: 2.614530052092801
best_error: 2.6145299897445557
best_error: 2.5289828314157434
best_error: 2.5289827874181783
best_error: 2.523254279201086
best_error: 2.523254213656989
best_error: 2.4862889098769325
best_error: 2.4862888489257573
best_error: 2.427613682226906
best_error: 2.4276135905753184
best_error: 2.422989327446869
best_error: 2.4229891955143206
best_error: 2.421618317209248
best_error: 2.421618119406858
best_error: 2.347973978652625
best_error: 2.3479737990124563
best_error: 2.114113615511033
best_error: 2.114113596120971
best_error: 2.0943852819016655
best_error: 2.0943852426523186
best_error: 2.0878890589347447
best_error: 2.087889054911692
best_error: 2.0857387329476906
best_error: 2.0857387290149716
best_error: 2.080736309543171
best_error: 2.0807363061999884
best_error: 2.0807363057817976
best_error: 2.080041744279592
best_error: 2.0800417406989835
best_error: 2.0800417402692473
best_error: 2.0796414634786937
best_error: 2.0796414598365174
best_error: 2.0796414591323087
best_error: 2.079641181716373
best_error: 2.0796411780937736
best_error: 2.079641177176301
best_error: 2.0796151979877893
best_error: 2.0796151943853944
best_error: 2.0796151935021547
best_error: 2.079608410112693
best_error: 2.079608406505264
best_error: 2.079608405684733
best_error: 2.079605834550271
best_error: 2.079605830974875
best_error: 2.079605830115934
best_error: 2.0796048596711962
best_error: 2.0796048560987903
best_error: 2.0796048552227955
best_error: 2.079603081235418
best_error: 2.079603077670091
best_error: 2.079603076776755
best_error: 2.079597294828086
best_error: 2.0795972912778775
best_error: 2.0795972903341666
best_error: 2.0795867057748527
best_error: 2.0795867022218046
best_error: 2.0795867012567895
best_error: 2.0795226420810358
best_error: 2.0795226385025978
best_error: 2.0795226374708586
best_error: 2.079505996590227
best_error: 2.0795059930264794
best_error: 2.0795059918178342
best_error: 2.079456612108052
best_error: 2.0794566085417263
best_error: 2.079456607381642
best_error: 2.0790955023221858
best_error: 2.0790955013811434
best_error: 2.079095498882111
best_error: 2.0790954978063287
best_error: 2.078521476897899
best_error: 2.078521475199592
best_error: 2.0785214735299617
best_error: 2.0785214726770196
best_error: 2.077496438668095
best_error: 2.07749643513709
best_error: 2.0774964348514007
best_error: 2.0752528915419632
best_error: 2.0752528879486154
best_error: 2.0657959935941586
best_error: 2.0657959663937024
best_error: 2.0543003200892227
best_error: 2.0543003153480495
best_error: 2.0341536577100645
best_error: 2.034153114355051
best_error: 2.0341038201394706
best_error: 2.0340896088447256
best_error: 2.012735978157316
best_error: 2.012735866952531
best_error: 2.0127309924752153
best_error: 2.0126456447652545
best_error: 2.012645534009398
best_error: 2.0126407078487434
best_error: 1.9145455763367105
best_error: 1.9145454563794966
best_error: 1.861483099286068
best_error: 1.8614830402496392
best_error: 1.859884867263964
best_error: 1.8598848378986519
best_error: 1.8594111951728138
best_error: 1.8594111686918062
best_error: 1.8582608060940242
best_error: 1.858260799289463
best_error: 1.857394145348525
best_error: 1.8573941331424089
best_error: 1.8565537354208168
best_error: 1.8565537333655266
best_error: 1.8565537331177686
best_error: 1.8551861749835823
best_error: 1.8551861546570723
best_error: 1.8540765799117258
best_error: 1.854076575320852
best_error: 1.8539789997816798
best_error: 1.8539789986997042
best_error: 1.8539789986614212
best_error: 1.8539785861544495
best_error: 1.8539785849549182
best_error: 1.8539770691458406
best_error: 1.8539770679587366
best_error: 1.853976821788267
best_error: 1.8539768206101188
best_error: 1.8539767324491196
best_error: 1.8539767312757618
best_error: 1.8539767069143296
best_error: 1.8539767057317644
best_error: 1.853976648362166
best_error: 1.8539766471818553
best_error: 1.8539765848138574
best_error: 1.8539765836327065
best_error: 1.8539763593161738
best_error: 1.853976358135064
best_error: 1.853975700231814
best_error: 1.8539756990498373
best_error: 1.8539745805784584
best_error: 1.8539745793900946
best_error: 1.8539687905632238
best_error: 1.8539687904385296
best_error: 1.8539687893869334
best_error: 1.853967025194031
best_error: 1.8539670241898603
best_error: 1.853967024032883
best_error: 1.8539613998674431
best_error: 1.8539613986727201
best_error: 1.8539433816454123
best_error: 1.8539433805771037
best_error: 1.8539433805369985
best_error: 1.8538962489208273
best_error: 1.8538962456505788
best_error: 1.8538381135095683
best_error: 1.8538381084468378
best_error: 1.8537229725826294
best_error: 1.8537229652563532
best_error: 1.8535131297633531
best_error: 1.8535131204144317
best_error: 1.8533396725065083
best_error: 1.8533396633625592
best_error: 1.8528704981294803
best_error: 1.8528704915375909
best_error: 1.852780619039292
best_error: 1.852780611465889
best_error: 1.8522398031096372
best_error: 1.8522397766431846
best_error: 1.8520421688998452
best_error: 1.852042136381317
best_error: 1.8519022330342776
best_error: 1.8519021916886031
best_error: 1.8518525985750265
best_error: 1.8518525562420753
best_error: 1.851798170076603
best_error: 1.851798126747108
best_error: 1.851697899033316
best_error: 1.851697864732124
best_error: 1.851499344839978
best_error: 1.8514993070363852
best_error: 1.851466786134637
best_error: 1.851466738652905
best_error: 1.851380221973829
best_error: 1.8513801725182106
best_error: 1.8513280695283774
best_error: 1.8513280189154555
best_error: 1.8513214983675281
best_error: 1.851321448188173
best_error: 1.8513203961749065
best_error: 1.851320346561318
best_error: 1.8513189104580772
best_error: 1.8513188610422529
best_error: 1.8513171795359502
best_error: 1.8513171323986088
best_error: 1.8513145837749674
best_error: 1.8513145357866827
best_error: 1.8513119880306212
best_error: 1.8513119393780366
best_error: 1.8513053550797296
best_error: 1.851305305763023
best_error: 1.851285575941863
best_error: 1.8512855256668723
best_error: 1.8512446025426892
best_error: 1.85124455214051
best_error: 1.851177843787996
best_error: 1.8511777926528585
best_error: 1.8507523773974786
best_error: 1.8507523283849403
best_error: 1.8500708417599936
best_error: 1.8500707958904854
best_error: 1.8492600064856664
best_error: 1.849259993578388
best_error: 1.8487308388916697
best_error: 1.8487308037706638
