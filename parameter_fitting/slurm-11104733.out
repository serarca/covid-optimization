ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 90
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.57946198557389
best_error: 98.57946189003118
best_error: 98.57946184243994
best_error: 98.57946179739902
best_error: 17.284739562009086
best_error: 17.284739265887847
best_error: 17.28473720352062
best_error: 14.084924928830374
best_error: 14.084924928299614
best_error: 14.084924897509136
best_error: 14.01834544721997
best_error: 14.0183454466434
best_error: 14.018345412978618
best_error: 13.722414797124268
best_error: 13.72241479639959
best_error: 13.722414752076517
best_error: 10.352322709813604
best_error: 10.352322653743014
best_error: 10.342188719573727
best_error: 10.342188718862763
best_error: 10.342188521434377
best_error: 10.163195234509734
best_error: 10.163195012292293
best_error: 10.161799583256789
best_error: 10.161799360393353
best_error: 10.114929211471571
best_error: 10.11492886668699
best_error: 10.114910011274459
best_error: 10.114909666486774
best_error: 9.633837720976029
best_error: 9.633837621632168
best_error: 9.605620977016086
best_error: 9.605620969104988
best_error: 9.605620966634222
best_error: 9.600894173288369
best_error: 9.600894090241058
best_error: 9.581318687425467
best_error: 9.581318599105819
best_error: 9.562190025950036
best_error: 9.562189934420582
best_error: 9.552845540872555
best_error: 9.552845532099019
best_error: 9.552845510501239
best_error: 9.551531238082616
best_error: 9.55153114702547
best_error: 9.550686648388236
best_error: 9.550686634721782
best_error: 9.550391835911745
best_error: 9.550391818069128
best_error: 9.544342163697706
best_error: 9.544342150463207
best_error: 9.544342131708863
best_error: 9.523022629187457
best_error: 9.523022619968447
best_error: 9.523022618213364
best_error: 9.486886468916904
best_error: 9.48688646116806
best_error: 9.486886458840353
best_error: 9.366727085515313
best_error: 9.366727082578029
best_error: 9.366727030332523
best_error: 8.93122950962169
best_error: 8.931229318524975
best_error: 8.47499636880893
best_error: 8.474996260649734
best_error: 8.474996242330059
best_error: 8.02776083189947
best_error: 8.027760825694006
best_error: 8.027760822636695
best_error: 8.027760782201153
best_error: 7.912127480632538
best_error: 7.912127480630435
best_error: 7.912127426329412
best_error: 7.908363778284112
best_error: 7.908363778283154
best_error: 7.908363730749249
best_error: 7.89084416921914
best_error: 7.890844169218362
best_error: 7.890844122098223
best_error: 7.62881945480084
best_error: 7.628819443722869
best_error: 7.628819443056933
best_error: 7.628819435282275
best_error: 7.531088970125818
best_error: 7.531088963567869
best_error: 7.531088942703783
best_error: 7.531088848011549
best_error: 7.43423981361819
best_error: 7.434239808766797
best_error: 7.4342397515362375
best_error: 7.4301188995262635
best_error: 7.430118558642971
best_error: 7.424294954023201
best_error: 7.424294950344306
best_error: 7.424294880333952
best_error: 7.417860474037199
best_error: 7.417860471604059
best_error: 7.417860465277013
best_error: 7.417860387834285
best_error: 7.415779920434903
best_error: 7.4157795856168764
best_error: 7.3682385466643705
best_error: 7.36823853773933
best_error: 7.341284713968023
best_error: 7.341284702419397
best_error: 7.3266658455323395
best_error: 7.32666558785721
best_error: 7.24413827403383
best_error: 7.244137994683731
best_error: 7.063556140669636
best_error: 7.063555764941229
best_error: 6.967054359088582
best_error: 6.967053808451433
best_error: 6.924482832777827
best_error: 6.924482825049489
best_error: 6.908622269889043
best_error: 6.908622260522939
best_error: 6.890226929630089
best_error: 6.8902265128890425
best_error: 6.87450227968477
best_error: 6.87450226935091
best_error: 6.874173869900421
best_error: 6.87417371382934
best_error: 6.873621381993841
best_error: 6.873621233942107
best_error: 6.8670513701176255
best_error: 6.867051361264617
best_error: 6.8652214005662495
best_error: 6.865221390904262
best_error: 6.8651753329053085
best_error: 6.865175323419904
best_error: 6.862949010154359
best_error: 6.862949001549382
best_error: 6.8625748415663885
best_error: 6.862574832996733
best_error: 6.862398493399755
best_error: 6.8623984848051265
best_error: 6.862313838024729
best_error: 6.862313829433895
best_error: 6.8623073823669065
best_error: 6.8623073737763205
best_error: 6.862305070398472
best_error: 6.862305061807979
best_error: 6.862304080977555
best_error: 6.8623040723870945
best_error: 6.862303893742796
best_error: 6.862303875106764
best_error: 6.862303861664814
best_error: 6.862277803937089
best_error: 6.862277549151983
best_error: 6.862269848792498
best_error: 6.862269594008088
best_error: 6.862269105819919
best_error: 6.8622688510355525
best_error: 6.862191015631222
best_error: 6.862191008650606
best_error: 6.86219100083924
best_error: 6.862190996462583
best_error: 6.862178155316224
best_error: 6.862177817594249
best_error: 6.861285321498953
best_error: 6.861285311987871
best_error: 6.859388417411943
best_error: 6.859388408033296
best_error: 6.856842551549716
best_error: 6.856842543483439
best_error: 6.854525383248192
best_error: 6.8545253754371664
best_error: 6.849825200620739
best_error: 6.849825194383215
best_error: 6.8498251862415165
best_error: 6.832975757837665
best_error: 6.832975753878584
best_error: 6.832975743831278
