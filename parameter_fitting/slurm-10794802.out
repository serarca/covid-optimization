ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.343924130636468
best_error: 10.34392412691398
best_error: 3.2426962467140314
best_error: 3.242696199500476
best_error: 2.9789928315453102
best_error: 2.9789926561134767
best_error: 2.9359263734069505
best_error: 2.935926372975255
best_error: 2.93592636769584
best_error: 2.9329875371858862
best_error: 2.9329875367512033
best_error: 2.93298753147871
best_error: 2.921318903821162
best_error: 2.921318903375563
best_error: 2.921318898077895
best_error: 2.8883511033241307
best_error: 2.8883509703227106
best_error: 2.8642065028478596
best_error: 2.864206481848367
best_error: 2.856924176666312
best_error: 2.85692408738671
best_error: 2.8489993238228357
best_error: 2.848999320934426
best_error: 2.8489993132916798
best_error: 2.8453858334567235
best_error: 2.8453858276431943
best_error: 2.839985259710018
best_error: 2.839985258832759
best_error: 2.8399852492313054
best_error: 2.8207262304595533
best_error: 2.8207262207014496
best_error: 2.8207262201135785
best_error: 2.769895135527524
best_error: 2.769895125630997
best_error: 2.7698950714953936
best_error: 2.4456730214243034
best_error: 2.445672995041587
best_error: 2.445672909962997
best_error: 2.223569647866496
best_error: 2.223569646297801
best_error: 2.2235694768800474
best_error: 2.2141557450554776
best_error: 2.2141556404385163
best_error: 2.209119014522873
best_error: 2.2091188317627743
best_error: 2.20257911477316
best_error: 2.202578937193242
best_error: 2.189450334722869
best_error: 2.1894503339354454
best_error: 2.1889085179249324
best_error: 2.188908517122756
best_error: 2.1858222111198744
best_error: 2.1858222070053257
best_error: 2.1858221483637728
best_error: 2.1840991882127248
best_error: 2.184099187273204
best_error: 2.1782824455054928
best_error: 2.1782824423741465
best_error: 2.1598835033528996
best_error: 2.1598835006761283
best_error: 2.1548288257757866
best_error: 2.154828819965809
best_error: 2.1508064279144117
best_error: 2.1508064271477725
best_error: 2.1508064253467896
best_error: 2.1475586534092903
best_error: 2.1475586529215915
best_error: 2.1475218778316436
best_error: 2.147521877357195
best_error: 2.1473830014228783
best_error: 2.147383000957133
best_error: 2.1471868419119433
best_error: 2.147186841458295
best_error: 2.1468329182149164
best_error: 2.146832917814726
best_error: 2.146774566248616
best_error: 2.1467745658498267
best_error: 2.1466869992441913
best_error: 2.146686998857775
best_error: 2.146607107303338
best_error: 2.1466071069217736
best_error: 2.146546320425178
best_error: 2.146546316623564
best_error: 2.1465462402632207
best_error: 2.1465455918693586
best_error: 2.1465455914907543
best_error: 2.146539183188882
best_error: 2.1465391828189397
best_error: 2.146498405797544
best_error: 2.1464984054246217
best_error: 2.1464620535713035
best_error: 2.1464620509027723
best_error: 2.1464619714669055
best_error: 2.1463605709550464
best_error: 2.1463605680942757
best_error: 2.1463604891222903
best_error: 2.1460426565469506
best_error: 2.1460426528884944
best_error: 2.1460425755170225
best_error: 2.14567839797066
best_error: 2.1456783936143617
best_error: 2.145678317219729
best_error: 2.1452023605937467
best_error: 2.1452023601268833
best_error: 2.14513298990227
best_error: 2.1450367969179363
best_error: 2.145035199571119
best_error: 2.1450351992142007
best_error: 2.145016339682026
best_error: 2.144997622935038
best_error: 2.1449958014209534
best_error: 2.1449944792099798
best_error: 2.144993420302512
best_error: 2.1449923580001378
best_error: 2.144990621396916
best_error: 2.14498791361435
best_error: 2.1449871467983015
best_error: 2.144986099943049
best_error: 2.1449853741592717
best_error: 2.144985309457303
best_error: 2.1449852679454207
best_error: 2.1449852414347648
best_error: 2.14498524054632
best_error: 2.144985240280149
best_error: 2.1449852374489553
best_error: 2.1449852353999486
best_error: 2.1449852335456603
best_error: 2.1449852325454515
best_error: 2.144985231645971
best_error: 2.144985229955241
best_error: 2.144985228889794
best_error: 2.1449852288736215
