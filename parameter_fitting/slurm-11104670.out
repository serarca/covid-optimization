ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.90064729423624
best_error: 100.90064717932151
best_error: 100.90064714246716
best_error: 16.561543904696123
best_error: 16.5615439046874
best_error: 16.561543889376154
best_error: 16.53679732584738
best_error: 16.536797309879994
best_error: 16.426539716018148
best_error: 16.426539696987714
best_error: 15.668072111993576
best_error: 15.668072066865943
best_error: 15.49387265955356
best_error: 15.49387260784994
best_error: 15.293019963616786
best_error: 15.293019902939832
best_error: 13.580929452000738
best_error: 13.580929440377554
best_error: 12.520131278572986
best_error: 12.520131121571024
best_error: 11.82413832628132
best_error: 11.824138316513098
best_error: 11.824138310397121
best_error: 11.824138294711462
best_error: 11.794571060078674
best_error: 11.794571028226033
best_error: 11.493949131832359
best_error: 11.4939491101244
best_error: 11.26865673764892
best_error: 11.268656721583193
best_error: 11.010087456961033
best_error: 11.010087456961031
best_error: 11.010087455327614
best_error: 10.613216793979426
best_error: 10.613216762786442
best_error: 9.43800612074535
best_error: 9.438006047451905
best_error: 8.957938084814591
best_error: 8.957938075000312
best_error: 8.95793807442871
best_error: 8.957938073212098
best_error: 8.90773981076061
best_error: 8.90773980916543
best_error: 8.907739806857972
best_error: 8.907739800395628
best_error: 8.90773978923184
best_error: 8.824242019265661
best_error: 8.824242019252601
best_error: 8.824241992558303
best_error: 8.754790918480321
best_error: 8.754790901293703
best_error: 8.701197865314132
best_error: 8.701197765077465
best_error: 8.646431547042495
best_error: 8.646431450905876
best_error: 8.571288670480328
best_error: 8.571288548345155
best_error: 8.536067423878594
best_error: 8.536067343424538
best_error: 8.518947370057921
best_error: 8.51894728952422
best_error: 8.448542831331002
best_error: 8.44854281904474
best_error: 8.384258023668963
best_error: 8.384258013797982
best_error: 8.346776117764918
best_error: 8.346776065177236
best_error: 8.24811248881623
best_error: 8.24811244302093
best_error: 8.167702300339258
best_error: 8.167702236818906
best_error: 8.046993528597472
best_error: 8.046993523967124
best_error: 8.04699352361019
best_error: 8.046993523126902
best_error: 8.040115846852487
best_error: 8.040115827013205
best_error: 8.040115821611579
best_error: 8.038393230674055
best_error: 8.038393223540604
best_error: 8.0347943068844
best_error: 8.034794299647105
best_error: 8.034644152132737
best_error: 8.034644132171993
best_error: 8.03464412683838
best_error: 8.034194313034218
best_error: 8.03419430581044
best_error: 8.03388477135525
best_error: 8.03388475155893
best_error: 8.033884746348786
best_error: 8.025997422172168
best_error: 8.02599741834539
best_error: 8.025997417479463
best_error: 8.014711052936647
best_error: 8.01471098808716
best_error: 8.013211030930423
best_error: 8.013210940612579
best_error: 8.012685044615655
best_error: 8.012684954106389
best_error: 8.012614883817998
best_error: 8.012614793283419
best_error: 8.012587224348742
best_error: 8.012587219239617
best_error: 8.012581820286469
best_error: 8.01258172974153
best_error: 8.01248099257787
best_error: 8.012480915716102
best_error: 8.012396840842436
best_error: 8.012396834505726
best_error: 8.012008754063013
best_error: 8.012008747338655
best_error: 8.010868029273519
best_error: 8.010868023166413
best_error: 8.009087732329732
best_error: 8.009087725593288
best_error: 8.003679297666615
best_error: 8.003679289562708
best_error: 8.000836489351558
best_error: 8.000836472578609
best_error: 8.000836470076349
best_error: 7.995177851656394
best_error: 7.995177838416616
best_error: 7.995177837248143
best_error: 7.980914688865
best_error: 7.980914681410176
best_error: 7.965768072011438
best_error: 7.965768068180336
best_error: 7.9657680671600355
best_error: 7.930551408190778
best_error: 7.9305514016258
best_error: 7.910832865386194
best_error: 7.910832850387382
best_error: 7.9108328486591475
best_error: 7.898256479413716
best_error: 7.898256470535005
best_error: 7.893752891700874
best_error: 7.893752889814167
best_error: 7.893752886168627
best_error: 7.893527935612116
best_error: 7.89352793439958
best_error: 7.893527929647958
best_error: 7.8934310676417585
best_error: 7.893431062453207
best_error: 7.893431061257819
best_error: 7.893397678229993
best_error: 7.893397670193053
best_error: 7.893390117826563
best_error: 7.893390109321265
best_error: 7.89338967011706
best_error: 7.893389666808974
best_error: 7.8933896595301345
best_error: 7.893384065738942
best_error: 7.893384062235299
best_error: 7.893384055079206
best_error: 7.8933825815963345
best_error: 7.893382578094414
best_error: 7.893382570938337
best_error: 7.893382349342562
best_error: 7.8933823458409105
best_error: 7.8933823386848365
best_error: 7.893036579754184
best_error: 7.8930365680168215
best_error: 7.893036565852185
best_error: 7.882349449641609
best_error: 7.882349094366567
