ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.738518798111246
best_error: 11.738518796703222
best_error: 11.698766760842195
best_error: 11.69876675557179
best_error: 8.362229815808998
best_error: 8.362229815808995
best_error: 8.362229808529513
best_error: 8.362229794631352
best_error: 8.067482304577506
best_error: 8.067482304577501
best_error: 8.067482286738537
best_error: 8.0674822818732
best_error: 7.724076765966897
best_error: 7.724076765966896
best_error: 7.72407673741052
best_error: 7.710450627407231
best_error: 7.710450559043906
best_error: 7.704698607972739
best_error: 7.7046986079727375
best_error: 7.704698592640332
best_error: 7.703059215165287
best_error: 7.703059151145593
best_error: 7.702808154740596
best_error: 7.7028081163529265
best_error: 7.68413940563507
best_error: 7.669700413521864
best_error: 7.642962382634695
best_error: 7.642962382634694
best_error: 7.630913532528328
best_error: 6.82898214708118
best_error: 6.828981837224409
best_error: 6.600791804936984
best_error: 6.600791597161615
best_error: 6.547215673236811
best_error: 6.547215673236809
best_error: 6.547215569278386
best_error: 6.4977736628979015
best_error: 6.497773587135214
best_error: 6.476392919872005
best_error: 6.47639285536589
best_error: 6.467292719599331
best_error: 6.467292719599328
best_error: 6.467292719599323
best_error: 6.451375068247829
best_error: 6.451375068247822
best_error: 6.365164689354679
best_error: 6.3651646893546765
best_error: 6.344018838270575
best_error: 6.344018838270574
best_error: 6.320338846867055
best_error: 6.320338713601836
best_error: 6.265897972205542
best_error: 6.265897972205539
best_error: 6.263569581808076
best_error: 6.26356956872557
best_error: 6.255526109641314
best_error: 6.255526100673929
best_error: 6.249289534022593
best_error: 6.249289531953258
best_error: 6.247265584970141
best_error: 6.247265584970139
best_error: 6.247265584970113
best_error: 6.246739365645633
best_error: 6.246739365645631
best_error: 6.246739365645605
best_error: 6.246714689958251
best_error: 6.246714689958248
best_error: 6.246708313674377
best_error: 6.246708313674373
best_error: 6.2467083136743495
best_error: 6.2467072760123745
best_error: 6.246707276012373
best_error: 6.246691332766583
best_error: 6.246691332766582
best_error: 6.2431820329329675
best_error: 6.243182032932966
best_error: 6.243114343089426
best_error: 6.243114343089423
best_error: 6.2430280132555
best_error: 6.243028013255499
best_error: 6.242772509970511
best_error: 6.242772509970509
best_error: 6.242209294361364
best_error: 6.242209294361363
best_error: 6.240216291693216
best_error: 6.240216291693215
best_error: 6.236138981618604
best_error: 6.236138981618603
best_error: 6.231351097790345
best_error: 6.231351097790343
best_error: 6.231351097790324
best_error: 6.2302910673420975
best_error: 6.230291067342096
best_error: 6.230291067342077
best_error: 6.228607692961258
best_error: 6.2286076929612575
best_error: 6.228607692961245
best_error: 6.2270185907064945
best_error: 6.227018590706476
best_error: 6.226735445802399
best_error: 6.226735445802396
best_error: 6.226735445802379
best_error: 6.226636488097638
best_error: 6.226636488097636
best_error: 6.226636488097621
best_error: 6.22648337534192
best_error: 6.226483375341919
best_error: 6.226483375341898
best_error: 6.226439126788314
best_error: 6.22643912678831
best_error: 6.226439126788291
best_error: 6.226409997164226
best_error: 6.2264099971642235
best_error: 6.226409997164206
best_error: 6.226368284557897
best_error: 6.226368284557895
best_error: 6.226368284557875
best_error: 6.226279325182509
best_error: 6.226279325182507
best_error: 6.226279325182491
best_error: 6.226264664284325
best_error: 6.226264664284307
best_error: 6.226256190396523
best_error: 6.226256190396521
best_error: 6.226256190396503
best_error: 6.226249852723208
best_error: 6.226249852723205
best_error: 6.226249852723187
best_error: 6.226244444493483
best_error: 6.2262444444934815
best_error: 6.226244444493462
best_error: 6.226238043068922
best_error: 6.226238043068921
best_error: 6.226238043068899
best_error: 6.226225531369755
best_error: 6.226225531369754
best_error: 6.226225531369735
best_error: 6.226218416208413
best_error: 6.2262183271898905
best_error: 6.226210820393087
best_error: 6.226210820393084
best_error: 6.226210820393065
best_error: 6.22621022181545
best_error: 6.226210221815448
best_error: 6.226210221815428
best_error: 6.226209149685097
best_error: 6.226209149685076
best_error: 6.226207471115124
best_error: 6.2262074711151225
best_error: 6.226207471115105
best_error: 6.226206114065083
best_error: 6.22620611406508
best_error: 6.226206114065062
best_error: 6.226206088551481
best_error: 6.226206088551479
best_error: 6.22620608855146
best_error: 6.226206070224107
best_error: 6.226206070224104
best_error: 6.226206070224084
best_error: 6.2262060560875225
best_error: 6.226206056087522
best_error: 6.226206056087499
best_error: 6.2262060433593085
best_error: 6.226206043359307
best_error: 6.22620604335929
best_error: 6.226206031888376
best_error: 6.226206031888374
best_error: 6.2262060318883545
best_error: 6.2262059991739545
best_error: 6.226205999173952
best_error: 6.226205999173937
best_error: 6.22620593844847
best_error: 6.226205916674962
best_error: 6.22620591667496
best_error: 6.226205916674941
best_error: 6.226205915887596
best_error: 6.226205915887594
best_error: 6.226205915887574
best_error: 6.226205915179251
best_error: 6.226205915179247
best_error: 6.22620591517923
best_error: 6.226205909175212
best_error: 6.226205907656885
best_error: 6.2262059076568805
best_error: 6.2262059076568175
