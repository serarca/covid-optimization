ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.089084498539764
best_error: 10.089084403961317
best_error: 9.55567408593188
best_error: 9.55567397144077
best_error: 8.486254111428952
best_error: 8.486253940570974
best_error: 8.321865073317799
best_error: 8.321864951086182
best_error: 7.622230358058217
best_error: 7.622230261739514
best_error: 7.622230248044026
best_error: 7.26004259431116
best_error: 7.260042499938486
best_error: 7.260042476208286
best_error: 7.032058162041748
best_error: 7.032058078409243
best_error: 7.032058038319807
best_error: 6.850409930727278
best_error: 6.850409864002096
best_error: 6.850409803386376
best_error: 6.841874840416272
best_error: 6.841874710000646
best_error: 5.986250542400585
best_error: 5.986250422340582
best_error: 4.278637714073391
best_error: 4.278637280920464
best_error: 4.117691236971618
best_error: 4.117690868020665
best_error: 3.9567932693320578
best_error: 3.956792911496212
best_error: 3.8783607558965114
best_error: 3.878360407387081
best_error: 3.8388765531043667
best_error: 3.8388762046444826
best_error: 3.819717116920361
best_error: 3.8197167683214417
best_error: 3.808910059192015
best_error: 3.8089097116302937
best_error: 3.8028373877895314
best_error: 3.8028370411734405
best_error: 3.7991167152511593
best_error: 3.799116368160093
best_error: 3.7966550961708014
best_error: 3.796654748722828
best_error: 3.7955659524882863
best_error: 3.7955656049013715
best_error: 3.7948754688016955
best_error: 3.794875340584869
best_error: 3.7341862147593856
best_error: 3.734185843569469
best_error: 3.5946497852992767
best_error: 3.59464934433312
best_error: 3.585537025293677
best_error: 3.5855369541394895
best_error: 3.5444768605773977
best_error: 3.544476765627378
best_error: 3.534213746730395
best_error: 3.534213644182179
best_error: 3.493880850927888
best_error: 3.493880426425437
best_error: 3.4009068944703507
best_error: 3.4009064899595396
best_error: 3.3139663577439955
best_error: 3.313965986277447
best_error: 3.2483786680942064
best_error: 3.248378357636713
best_error: 2.8778259589901625
best_error: 2.877825592351961
best_error: 2.814870165948438
best_error: 2.814870165905014
best_error: 2.8148700459490894
best_error: 2.801898315428014
best_error: 2.8018979319929658
best_error: 2.6691891069285556
best_error: 2.669188715322427
best_error: 2.661376880695201
best_error: 2.661376880648724
best_error: 2.661376761009118
best_error: 2.6437673751915183
best_error: 2.6437673751446997
best_error: 2.6437672561986902
best_error: 2.618053657101263
best_error: 2.6180536570534114
best_error: 2.618053539381835
best_error: 2.6145189744846475
best_error: 2.6145186200004655
best_error: 2.612410315572649
best_error: 2.612410315523414
best_error: 2.612410197304444
best_error: 2.5996483606314467
best_error: 2.599648029865003
best_error: 2.599190597689394
best_error: 2.599190597637513
best_error: 2.5991904805839092
best_error: 2.5431905975993683
best_error: 2.543190597547946
best_error: 2.543190481577219
best_error: 2.542743217010176
best_error: 2.542742890730869
best_error: 2.5426797195910265
best_error: 2.54267939330928
best_error: 2.5426664415804847
best_error: 2.5426664415290947
best_error: 2.5426663255776916
best_error: 2.404056196485411
best_error: 2.4040558723345278
best_error: 2.384204210711711
best_error: 2.3842038866834305
best_error: 2.3830143066541045
best_error: 2.383014306602224
best_error: 2.380869533839133
best_error: 2.3808692104919174
best_error: 2.379726073228518
best_error: 2.3797260731768732
best_error: 2.336572179036267
best_error: 2.3365718168167238
best_error: 2.3204962892570586
best_error: 2.32049628920361
best_error: 2.3204961707230334
best_error: 2.3171099954734924
best_error: 2.317109632327062
best_error: 2.2981694682638745
best_error: 2.2981691058434386
best_error: 2.2962233546502984
best_error: 2.2962229920632966
best_error: 2.2953357667600045
best_error: 2.2953354052628105
best_error: 2.295054141975291
best_error: 2.2950537804503264
best_error: 2.2949890480512503
best_error: 2.294989047998021
best_error: 2.2949889300854824
best_error: 2.294903295029002
best_error: 2.2949029334891566
best_error: 2.2948864963479507
best_error: 2.294886496294708
best_error: 2.294886378383781
best_error: 2.2469578858718195
best_error: 2.246957514483033
best_error: 2.2469201462988324
best_error: 2.24691977490665
best_error: 2.246903815621634
best_error: 2.2469034442279843
best_error: 2.2468971591968545
best_error: 2.246897159144562
best_error: 2.246897040858189
best_error: 2.218157380318135
best_error: 2.218157380267032
best_error: 2.21815726168773
best_error: 2.216142766189752
best_error: 2.2161423900885824
best_error: 2.2158421238133776
best_error: 2.2158421237622266
best_error: 2.215842005225388
best_error: 2.215813155931077
best_error: 2.215812779801127
best_error: 2.21542117859858
best_error: 2.215420802434437
best_error: 2.2153843973136462
best_error: 2.2153840211462836
best_error: 2.2153670296562065
best_error: 2.2153666534873446
best_error: 2.2153612516294277
best_error: 2.215360875459976
best_error: 2.2153554429148423
best_error: 2.215355066744852
best_error: 2.215354318216755
best_error: 2.2153539420466455
best_error: 2.215353583565284
best_error: 2.215353207395105
best_error: 2.2153530916711235
best_error: 2.214324398605783
best_error: 2.214324398561251
best_error: 2.214324279438239
best_error: 2.212002829289946
best_error: 2.2120024508135403
best_error: 2.206566692036326
best_error: 2.206566312295349
best_error: 2.2035547682539462
best_error: 2.2035543888739078
best_error: 2.20230653513177
best_error: 2.202306154964456
best_error: 2.201755421275413
best_error: 2.2017550409553746
best_error: 2.2014986175701896
best_error: 2.201498237178991
best_error: 2.2014092199078767
best_error: 2.201408839493462
best_error: 2.201356347058017
best_error: 2.2013559666298903
best_error: 2.201325094030459
best_error: 2.2013247135942073
best_error: 2.2013066816494975
best_error: 2.2013063012084793
best_error: 2.201295836039967
best_error: 2.201295455596137
best_error: 2.2012894597133084
best_error: 2.2012890792678252
best_error: 2.2012857205140697
best_error: 2.201285340067614
best_error: 2.2012809394758994
best_error: 2.2012808969433766
best_error: 2.201280840126403
best_error: 2.201280806605859
best_error: 2.201280764073325
best_error: 2.2012807361779756
best_error: 2.201263746191856
best_error: 2.201263365710867
best_error: 2.2012484020665295
best_error: 2.201248021543572
best_error: 2.201206488621652
best_error: 2.201206107977464
