ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.082608660951959
best_error: 10.082608655765421
best_error: 4.696681916242931
best_error: 4.696681849118396
best_error: 4.174508408526961
best_error: 4.174507821719972
best_error: 3.868874905615179
best_error: 3.868874843611485
best_error: 3.565271316993635
best_error: 3.56527118475965
best_error: 3.5553806274419757
best_error: 3.555380627381749
best_error: 3.43281108785774
best_error: 3.4328110878496525
best_error: 3.4328110756261596
best_error: 3.4278978045753625
best_error: 3.427897804570608
best_error: 3.4278977924740497
best_error: 3.41560517174562
best_error: 3.4156051026472602
best_error: 3.387964037378196
best_error: 3.387964037374606
best_error: 3.378432116920903
best_error: 3.3784321041520093
best_error: 3.3784175539255314
best_error: 3.3784175403675127
best_error: 3.378416688385454
best_error: 3.378416674826636
best_error: 3.3784132254110815
best_error: 3.378413211849086
best_error: 3.3783993759189506
best_error: 3.3783993623174653
best_error: 3.3783469013341785
best_error: 3.378346887433375
best_error: 3.3781771215365524
best_error: 3.378177106648959
best_error: 3.377456594521658
best_error: 3.3774565792688365
best_error: 3.376569676744201
best_error: 3.3765696630381647
best_error: 3.3764435008504186
best_error: 3.3764434874552918
best_error: 3.3758053409179483
best_error: 3.375805331773333
best_error: 3.3757784006218174
best_error: 3.375778391848823
best_error: 3.3757757751627118
best_error: 3.3757757663884727
best_error: 3.3757734390296
best_error: 3.375773430254256
best_error: 3.37577136362263
best_error: 3.3757713549309174
best_error: 3.37576854733394
best_error: 3.375768538640881
best_error: 3.3757667917210634
best_error: 3.3757667830271663
best_error: 3.3757631068067786
best_error: 3.3757631067899703
best_error: 3.3757631058172577
best_error: 3.375761921188949
best_error: 3.37576191249273
best_error: 3.3757606656550676
best_error: 3.375760656958518
best_error: 3.3757602250941994
best_error: 3.3757602163975307
best_error: 3.3757600403148347
best_error: 3.3757600316181113
best_error: 3.3757599812901646
best_error: 3.375759972593432
best_error: 3.375759942114545
best_error: 3.375759933417803
best_error: 3.3757598993563804
best_error: 3.375759890659624
best_error: 3.375759860686812
best_error: 3.375759851990049
best_error: 3.3757598403296805
best_error: 3.375759831632911
best_error: 3.3757598265999915
best_error: 3.3757598179032184
best_error: 3.3757598143222602
best_error: 3.3757598056254805
best_error: 3.3757597985429086
best_error: 3.3757597932589847
best_error: 3.375759788753979
best_error: 3.375759784781569
best_error: 3.3757597818705434
best_error: 3.375759781700341
best_error: 3.3757497088136206
best_error: 3.375749708796345
best_error: 3.3757403844654874
best_error: 3.3757403844482297
best_error: 3.3757086407279013
best_error: 3.3757086407107835
best_error: 3.375698463115598
best_error: 3.3756984630986424
best_error: 3.375698462522184
best_error: 3.3756972809397525
best_error: 3.37569727274656
best_error: 3.3756659315204884
best_error: 3.37566592400539
best_error: 3.3756032116813754
best_error: 3.3756032116638623
best_error: 3.3755041634742247
best_error: 3.37550416345548
best_error: 3.3755010078623195
best_error: 3.3755010078441763
best_error: 3.3754935144381433
best_error: 3.3754935144196416
best_error: 3.375492993599927
best_error: 3.3754929889913483
best_error: 3.3754926162472336
best_error: 3.3754926116346313
best_error: 3.3754925013855264
best_error: 3.375492496540707
best_error: 3.3754872830158513
best_error: 3.3754872781700564
best_error: 3.375486582006458
best_error: 3.3754865819872713
best_error: 3.3754850429384753
best_error: 3.3754850392662776
best_error: 3.3754848071744425
best_error: 3.375484807153806
best_error: 3.375483416885794
best_error: 3.3754834168654284
best_error: 3.375482286160012
best_error: 3.375482286142764
best_error: 3.375481628728488
best_error: 3.3754816234987652
best_error: 3.3754813491884157
best_error: 3.3754813443746547
best_error: 3.3754812801627994
best_error: 3.3754812753491548
best_error: 3.375481206700177
best_error: 3.375481201886667
best_error: 3.3754811599171637
best_error: 3.37548115510373
best_error: 3.3754810606094408
best_error: 3.3754810557961834
best_error: 3.3754810183706274
best_error: 3.375481013557445
best_error: 3.3754809946131146
best_error: 3.3754809897999687
best_error: 3.3754809847211624
best_error: 3.375480979908039
best_error: 3.375480977209662
best_error: 3.3754809767118537
