ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.3011652602892
best_error: 98.30116517888811
best_error: 98.30116509704843
best_error: 18.292665301340822
best_error: 18.292665301336143
best_error: 18.292665292858267
best_error: 18.26739442358703
best_error: 18.267394414554545
best_error: 18.145300132794386
best_error: 18.145300119937055
best_error: 13.394129568957606
best_error: 13.394129402793867
best_error: 13.049614543247376
best_error: 13.0496145397958
best_error: 13.049614012962705
best_error: 12.949770278593173
best_error: 12.949770269256158
best_error: 12.949770268452058
best_error: 12.949770252491135
best_error: 12.609384681470232
best_error: 12.609384670682232
best_error: 12.609384654302106
best_error: 11.7196380153876
best_error: 11.719637989197269
best_error: 11.150311627938674
best_error: 11.150311510219957
best_error: 10.477992751847585
best_error: 10.477992717748004
best_error: 10.174319261239244
best_error: 10.174319258474984
best_error: 10.1743192555741
best_error: 10.174319252624727
best_error: 10.174319231573653
best_error: 9.971232947372995
best_error: 9.971232929512114
best_error: 9.819368322954121
best_error: 9.819368281479626
best_error: 9.653049259963751
best_error: 9.653049149184564
best_error: 9.586803249208563
best_error: 9.586803231392274
best_error: 9.586803221473813
best_error: 9.56184434231933
best_error: 9.561844326233214
best_error: 9.561844314915284
best_error: 9.519117526472966
best_error: 9.519117356815869
best_error: 9.3153121715135
best_error: 9.315312158268334
best_error: 9.315312146269845
best_error: 9.313146619309862
best_error: 9.313146595603751
best_error: 9.288738483318546
best_error: 9.28873845991993
best_error: 9.202234769380194
best_error: 9.202234750556507
best_error: 9.200757828028841
best_error: 9.20075767787832
best_error: 9.169315255503514
best_error: 9.169315116658714
best_error: 9.097521950955336
best_error: 9.09752193025696
best_error: 9.064252813828569
best_error: 9.064252794779742
best_error: 9.007599603806685
best_error: 9.007599563519735
best_error: 9.007410119057559
best_error: 9.007410078779477
best_error: 9.007357492786042
best_error: 9.007357452780614
best_error: 9.007319332465444
best_error: 9.00731929246184
best_error: 9.00730392998245
best_error: 9.007303889979585
best_error: 9.007294563028323
best_error: 9.007294523025902
best_error: 9.007285280801645
best_error: 9.007285241073104
best_error: 9.007279928499802
best_error: 9.00727988877129
best_error: 9.007275567931238
best_error: 9.007275528202749
best_error: 9.007273476614802
best_error: 9.007273436886324
best_error: 9.00727172965464
best_error: 9.00727168992617
best_error: 9.007271084535201
best_error: 9.007271062370759
best_error: 9.006639164098125
best_error: 9.006639120973595
best_error: 9.006356823510739
best_error: 9.006356801664555
best_error: 9.00609414991161
best_error: 9.006094128066112
best_error: 9.005198957749954
best_error: 9.005198911087204
best_error: 9.000723476645843
best_error: 9.000723419224824
best_error: 8.999717832278177
best_error: 8.999717810738975
best_error: 8.9905395768799
best_error: 8.990539555652376
best_error: 8.979962565926733
best_error: 8.97996247051169
best_error: 8.975854967144478
best_error: 8.97585494737445
best_error: 8.966507871111515
best_error: 8.9665077518093
best_error: 8.966157772901264
best_error: 8.966157755104557
best_error: 8.95944192420154
best_error: 8.959441908038666
best_error: 8.94858189555376
best_error: 8.948581879872155
best_error: 8.882867130143424
best_error: 8.88286711745774
best_error: 8.882867105177004
best_error: 8.795657591879422
best_error: 8.795657576183915
best_error: 8.795657566340067
best_error: 8.770606041470153
best_error: 8.770606023797797
best_error: 8.77060601757302
best_error: 8.765778521493699
best_error: 8.765778502550722
best_error: 8.765778498852496
best_error: 8.764847030026218
best_error: 8.764847008717231
best_error: 8.76422785709993
best_error: 8.764227834888421
best_error: 8.75068659003514
best_error: 8.750686564085063
best_error: 8.718749223045593
best_error: 8.718749199395818
best_error: 8.517957684894053
best_error: 8.51795726604662
best_error: 8.477893010540264
best_error: 8.477892996109103
best_error: 8.477892991478175
best_error: 8.412133986300496
best_error: 8.412133721739973
best_error: 8.356332607787497
best_error: 8.356332590452974
best_error: 8.350563467493426
best_error: 8.35056345063036
best_error: 8.342960303588267
best_error: 8.342959921042869
best_error: 8.339074725234191
best_error: 8.339074708043114
best_error: 8.331024535751949
best_error: 8.331024518888805
best_error: 8.324567544070822
best_error: 8.324567156467797
best_error: 8.322213442924737
best_error: 8.322213195993035
