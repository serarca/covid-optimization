ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.95999080380894
best_error: 96.9599907169117
best_error: 96.95999071355973
best_error: 96.95999068140287
best_error: 96.95999065575602
best_error: 96.95999061992813
best_error: 18.65791929076112
best_error: 18.657919094534655
best_error: 18.657917728140937
best_error: 16.78950313306766
best_error: 16.78950311812107
best_error: 16.765927652287456
best_error: 16.765927636745868
best_error: 16.66168358647981
best_error: 16.661683567814627
best_error: 15.94183451932944
best_error: 15.94183446495217
best_error: 15.89821764110111
best_error: 15.898217583610629
best_error: 15.85072304365384
best_error: 15.85072298256289
best_error: 15.3055754478401
best_error: 15.305575337272417
best_error: 14.519703332249172
best_error: 14.519703134313097
best_error: 11.02339263351945
best_error: 11.023392516651878
best_error: 9.789118326480256
best_error: 9.789118078741327
best_error: 9.761489167145529
best_error: 9.761489149970695
best_error: 9.754235052851982
best_error: 9.754234807513942
best_error: 9.746318888134965
best_error: 9.746318871122499
best_error: 9.72632616770879
best_error: 9.726326150940297
best_error: 9.508721039745469
best_error: 9.508721025032443
best_error: 9.495958467103316
best_error: 9.495958452084924
best_error: 9.484804406175398
best_error: 9.48480439064276
best_error: 9.47395274448406
best_error: 9.473952728731657
best_error: 9.47395272827058
best_error: 9.464135399251001
best_error: 9.464135383095977
best_error: 9.46413538260508
best_error: 9.455165861852475
best_error: 9.455165845514292
best_error: 9.455165844878449
best_error: 9.445002387610556
best_error: 9.445002370986376
best_error: 9.445002370274114
best_error: 9.436940694183463
best_error: 9.436940677283971
best_error: 9.436940676527016
best_error: 9.431356345191972
best_error: 9.431356326398184
best_error: 9.427988036007939
best_error: 9.427988015997748
best_error: 9.406566811877347
best_error: 9.406566778463093
best_error: 9.217874920059842
best_error: 9.217874834579376
best_error: 8.56040004861485
best_error: 8.560399962230681
best_error: 8.17562769330652
best_error: 8.175627409388335
best_error: 8.163110354410078
best_error: 8.163110324568958
best_error: 8.138429724798392
best_error: 8.138429709411191
best_error: 8.138429706215163
best_error: 8.11900891045973
best_error: 8.119008897289932
best_error: 8.119008891886793
best_error: 8.115204515039133
best_error: 8.115204105685708
best_error: 8.09040656632064
best_error: 8.090406560345802
best_error: 8.09040651291993
best_error: 8.086724098113308
best_error: 8.086723758040355
best_error: 8.085619118682875
best_error: 8.085619100421024
best_error: 8.081372438321072
best_error: 8.081372233612413
best_error: 8.08041013622048
best_error: 8.080410116803503
best_error: 8.077210294907259
best_error: 8.077210115632333
best_error: 8.0769540477674
best_error: 8.076954024930828
best_error: 8.07229753129511
best_error: 8.072297366793372
best_error: 8.072222312999449
best_error: 8.072222287595249
best_error: 8.062736771198358
best_error: 8.062736647543202
best_error: 8.05932950200396
best_error: 8.059329469240685
best_error: 8.040665390201887
best_error: 8.040665357234989
best_error: 8.01893018217206
best_error: 8.01893016129783
best_error: 8.013120437232743
best_error: 8.013120411216182
best_error: 8.010735286301612
best_error: 8.010735259822592
best_error: 8.008334526740512
best_error: 8.008334496830791
best_error: 8.002122879178122
best_error: 8.002122849781726
best_error: 8.000146933172562
best_error: 8.000146913048415
best_error: 7.984786898760522
best_error: 7.984786877630189
best_error: 7.957993980783659
best_error: 7.9579939483425735
best_error: 7.928362223845805
best_error: 7.928362195579913
best_error: 7.902945523622233
best_error: 7.902945419442316
best_error: 7.822625115334779
best_error: 7.822625097483879
best_error: 7.8042391326313165
best_error: 7.804239114520534
best_error: 7.7851174949099144
best_error: 7.7851173891127825
best_error: 7.772872494139892
best_error: 7.772872476285039
best_error: 7.754620468064299
best_error: 7.754620333439934
best_error: 7.748265954231485
best_error: 7.748265937911989
best_error: 7.745687360647852
best_error: 7.745687344849255
best_error: 7.7456665156824975
best_error: 7.745666381317907
best_error: 7.745551814131693
best_error: 7.745551798335535
best_error: 7.745518619672845
best_error: 7.745518485292246
best_error: 7.6927098000738345
best_error: 7.692709782085472
best_error: 7.662130014869707
best_error: 7.662129999851361
best_error: 7.645559399716207
best_error: 7.645559385505922
best_error: 7.635795627555964
best_error: 7.635795613800607
best_error: 7.613511204919668
best_error: 7.613511193297148
best_error: 7.585766604155158
best_error: 7.585766597785509
best_error: 7.585766564875251
best_error: 7.580087023420518
best_error: 7.580087016520591
best_error: 7.5800869912443805
best_error: 7.528599774501088
best_error: 7.528599760937029
best_error: 7.463627577309786
best_error: 7.463627561377743
