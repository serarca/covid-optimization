ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.48273190696437
best_error: 11.482731900810299
best_error: 11.467753592709784
best_error: 11.46775358527557
best_error: 8.769444450664876
best_error: 8.769444082141792
best_error: 7.981486838609976
best_error: 7.981486366578531
best_error: 6.956140820752717
best_error: 6.956140345431271
best_error: 6.10160519501442
best_error: 6.101604921020776
best_error: 6.101466349152695
best_error: 6.1014662935368325
best_error: 6.086250350431186
best_error: 6.086250081676757
best_error: 6.061529995466261
best_error: 6.061529980101136
best_error: 6.056453105230794
best_error: 6.056453093984755
best_error: 6.056453090682472
best_error: 6.055822434497458
best_error: 6.0558224255526385
best_error: 6.055822420212183
best_error: 6.0552403140596915
best_error: 6.055240308962307
best_error: 6.055240300258127
best_error: 6.054878272772037
best_error: 6.054878268267806
best_error: 6.054878259027454
best_error: 6.054862533658154
best_error: 6.054862519727901
best_error: 6.053263963506389
best_error: 6.053263958995931
best_error: 6.053263949722595
best_error: 6.0252511317810935
best_error: 6.0252511291164454
best_error: 6.0252511175561825
best_error: 5.905984869389863
best_error: 5.905984869346765
best_error: 5.905984853785635
best_error: 5.303132455878448
best_error: 5.30313239164898
best_error: 5.256704816052192
best_error: 5.256704750548057
best_error: 5.180985131759546
best_error: 5.180985102118157
best_error: 5.022090674446121
best_error: 5.022090302000736
best_error: 5.0182087464204255
best_error: 5.018208492204774
best_error: 4.989272493814367
best_error: 4.989272369495315
best_error: 4.889836508176592
best_error: 4.889836428274793
best_error: 4.858910349520271
best_error: 4.858910344119645
best_error: 4.858910243998814
best_error: 4.7648487812798015
best_error: 4.764848781146884
best_error: 4.764848776227263
best_error: 4.763647148925019
best_error: 4.763647102565438
best_error: 4.75220676607905
best_error: 4.752206759860986
best_error: 4.752206756193572
best_error: 4.749738293060839
best_error: 4.749738283350853
best_error: 4.739594256872401
best_error: 4.739594201081823
best_error: 4.722855165476207
best_error: 4.722855136792762
best_error: 4.6902701010708086
best_error: 4.690270059306172
best_error: 4.624200119388377
best_error: 4.624200079411295
best_error: 4.600328229789126
best_error: 4.600328079785349
best_error: 4.536485734252111
best_error: 4.536485723197111
best_error: 4.458532612813267
best_error: 4.458532612528307
best_error: 4.4585326050543275
best_error: 4.425470293360336
best_error: 4.425470185026564
best_error: 4.321497528502316
best_error: 4.3214974414546035
best_error: 4.2478387798039945
best_error: 4.2478385303684
best_error: 4.150482978883625
best_error: 4.150482971217213
best_error: 4.14640173063223
best_error: 4.14640171032351
best_error: 4.132490886087433
best_error: 4.132490864414626
best_error: 4.12290182045538
best_error: 4.122901814623495
best_error: 4.116224239487175
best_error: 4.1162242042026564
best_error: 4.1025796078725945
best_error: 4.10257957301557
best_error: 4.100320292216938
best_error: 4.100320270924589
best_error: 4.100110501529521
best_error: 4.100110484896637
best_error: 4.100006596057698
best_error: 4.10000658083132
best_error: 4.099702739487414
best_error: 4.099702727174316
best_error: 4.099647668953779
best_error: 4.099647657179378
best_error: 4.099581388065641
best_error: 4.099581376462843
best_error: 4.099535516111491
best_error: 4.099535504875904
best_error: 4.099482089068712
best_error: 4.099482078254947
best_error: 4.0994349061849125
best_error: 4.099434896053068
best_error: 4.099399716380579
best_error: 4.099399690924675
best_error: 4.099396686410271
best_error: 4.099396676391443
best_error: 4.099395614643558
best_error: 4.0993955891877905
best_error: 4.099394660418364
best_error: 4.099394650397876
best_error: 4.099394272823838
best_error: 4.099394262803033
best_error: 4.099394220550377
best_error: 4.099394210529532
best_error: 4.0993941868811765
best_error: 4.09939417686031
best_error: 4.0993940936165725
best_error: 4.099394083595622
best_error: 4.099394076263015
best_error: 4.099394068386359
best_error: 4.099394064374279
best_error: 4.099394057928298
