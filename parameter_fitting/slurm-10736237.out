ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.453771236484119
best_error: 10.453771230102461
best_error: 8.96029360284359
best_error: 8.960292580266588
best_error: 5.935354026331303
best_error: 5.93535365035591
best_error: 5.5386259349851406
best_error: 5.538625934985104
best_error: 5.538625931662677
best_error: 5.521552539091401
best_error: 5.521552539091358
best_error: 5.521552534995239
best_error: 5.512897983150005
best_error: 5.512897983149964
best_error: 5.512897978461008
best_error: 5.509718666766277
best_error: 5.509718666766233
best_error: 5.509718661885616
best_error: 5.508103147025015
best_error: 5.508103147024963
best_error: 5.508103142012917
best_error: 5.507478018815761
best_error: 5.507478018815716
best_error: 5.507478013756807
best_error: 5.507350635646661
best_error: 5.507350580020981
best_error: 5.507322192742661
best_error: 5.507322192742615
best_error: 5.50732218766514
best_error: 5.507321808964614
best_error: 5.507321753336749
best_error: 5.507321578773746
best_error: 5.507321578773704
best_error: 5.507321573696232
best_error: 5.507228459434704
best_error: 5.507228459434658
best_error: 5.507228454351323
best_error: 5.506855976392663
best_error: 5.5068559763926235
best_error: 5.506855971304343
best_error: 5.505364195329806
best_error: 5.505364195329761
best_error: 5.505364190189161
best_error: 5.499365940178231
best_error: 5.499365940178185
best_error: 5.499365934840265
best_error: 5.475133501602228
best_error: 5.475133501602187
best_error: 5.475133495541189
best_error: 5.4265975965658155
best_error: 5.426597596565777
best_error: 5.41926395953098
best_error: 5.419263959530931
best_error: 5.419263951949765
best_error: 5.410333368271819
best_error: 5.410333368271763
best_error: 5.365990341873234
best_error: 5.365990341873184
best_error: 5.365990331626568
best_error: 4.964879501999689
best_error: 4.964879501999624
best_error: 4.964879494626227
best_error: 4.885646350403468
best_error: 4.88564635040341
best_error: 4.858352517130016
best_error: 4.858352517129957
best_error: 4.720980945783564
best_error: 4.720980945783513
best_error: 4.68653015970585
best_error: 4.686529923269648
best_error: 4.517947468459402
best_error: 4.517947350400041
best_error: 4.387353432419312
best_error: 4.387353411110388
best_error: 4.355474814724529
best_error: 4.355474814724493
best_error: 4.352096015188166
best_error: 4.352095906293821
best_error: 4.343153833454596
best_error: 4.343153833454563
best_error: 4.343153825584764
best_error: 4.335668911591447
best_error: 4.335668911591425
best_error: 4.335668907869102
best_error: 4.331744860813832
best_error: 4.331744798533692
best_error: 4.313129675064756
best_error: 4.313129609271174
best_error: 4.291583231128856
best_error: 4.291583231128828
best_error: 4.291583213167043
best_error: 4.291002790302967
best_error: 4.291002790302917
best_error: 4.279975422621356
best_error: 4.27997542262131
best_error: 4.228359030223459
best_error: 4.228359030223418
best_error: 4.189809339603042
best_error: 4.189809339602997
best_error: 4.1195954786737
best_error: 4.1195953971532235
best_error: 4.10368188315642
best_error: 4.103681883156392
best_error: 4.103681853702357
best_error: 4.078199947717111
best_error: 4.078199947717091
best_error: 4.078199947365116
best_error: 4.077021496237424
best_error: 4.0770214962374
best_error: 4.077021495936159
best_error: 4.076292120088073
best_error: 4.076292120088058
best_error: 4.076292119950394
best_error: 4.076098940378186
best_error: 4.0760989403781664
best_error: 4.076098940268791
best_error: 4.076082488124243
best_error: 4.076082487389479
best_error: 4.049075943382822
best_error: 4.049075922506617
best_error: 4.034850733531701
best_error: 4.034850691728681
best_error: 4.0343310643259835
best_error: 4.034331012156811
best_error: 4.03413969031324
best_error: 4.034139641040912
best_error: 4.034114227780051
best_error: 4.034114179058837
best_error: 4.034045912307411
best_error: 4.034045865470093
best_error: 4.033806529130503
best_error: 4.03380648359362
best_error: 4.033301500980225
best_error: 4.033301457084792
best_error: 4.033010987168436
best_error: 4.033010944381795
best_error: 4.032970522743929
best_error: 4.032970480047495
best_error: 4.03295389221692
best_error: 4.03295384961478
best_error: 4.032950670018833
best_error: 4.032950627416147
best_error: 4.0329494307145435
best_error: 4.032949388111647
best_error: 4.0328646257918885
best_error: 4.032864582476197
best_error: 4.032732659763578
best_error: 4.032732612837167
best_error: 4.032732327201581
best_error: 4.032732280272812
best_error: 4.032732278280511
best_error: 4.03273222498901
best_error: 4.032732177822827
best_error: 4.032732137271195
best_error: 4.032732090104971
best_error: 4.032731789674086
best_error: 4.032731742461903
best_error: 4.032730401219418
best_error: 4.0327303540067
best_error: 4.032724848466511
best_error: 4.032724801251667
best_error: 4.032703179346504
best_error: 4.032703131875451
best_error: 4.032627688326804
best_error: 4.032627639902888
best_error: 4.032360424258625
best_error: 4.0323603736499685
best_error: 4.032352635374806
best_error: 4.032352635374771
best_error: 4.032337537162457
best_error: 4.032337486440395
best_error: 4.03233648165846
best_error: 4.032336481658441
best_error: 4.032332421784427
best_error: 4.032332370968954
best_error: 4.032331163400354
best_error: 4.032331163400327
best_error: 4.032330904570063
best_error: 4.032330904570029
best_error: 4.032328351923285
best_error: 4.0323283012616375
best_error: 4.032324660403223
best_error: 4.03232460989457
best_error: 4.032324108469603
best_error: 4.03232410846957
