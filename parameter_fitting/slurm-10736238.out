ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.520981717240506
best_error: 10.52098171187447
best_error: 7.002893956576182
best_error: 7.0028932748512815
best_error: 6.252915599441506
best_error: 6.252915247398439
best_error: 5.7180850128117955
best_error: 5.7180850128117795
best_error: 5.718085010149251
best_error: 5.704039576543336
best_error: 5.7040395765433205
best_error: 5.704039573491269
best_error: 5.69693545232907
best_error: 5.696935452329058
best_error: 5.696935449058845
best_error: 5.692786189491921
best_error: 5.692786189491908
best_error: 5.692786186062857
best_error: 5.6913698188318635
best_error: 5.691369818831852
best_error: 5.6913698153167065
best_error: 5.6907981820302345
best_error: 5.690798182030216
best_error: 5.690798178510691
best_error: 5.690754603290309
best_error: 5.690754550448329
best_error: 5.690711470991341
best_error: 5.690711470991325
best_error: 5.690711467466988
best_error: 5.690695417193888
best_error: 5.690695364347492
best_error: 5.6906806882143455
best_error: 5.69068068821433
best_error: 5.690680684689871
best_error: 5.6906272047733495
best_error: 5.690627151923414
best_error: 5.6899369943159215
best_error: 5.689936941521447
best_error: 5.687119929735948
best_error: 5.68711987725636
best_error: 5.675267630568844
best_error: 5.675267630568827
best_error: 5.675267626464323
best_error: 5.626940593348241
best_error: 5.626940593348226
best_error: 5.626940587226423
best_error: 5.578600233973352
best_error: 5.578600233973337
best_error: 5.578600227565366
best_error: 5.5781062027268
best_error: 5.578106202726782
best_error: 5.57317475967894
best_error: 5.573174759678923
best_error: 5.573143057741332
best_error: 5.573143057741313
best_error: 5.573132120625923
best_error: 5.573132120625905
best_error: 5.5731311256427
best_error: 5.573131125642687
best_error: 5.573131111294017
best_error: 5.573131111294001
best_error: 5.573131104783842
best_error: 5.5721070125897345
best_error: 5.5721070125897105
best_error: 5.568048474487702
best_error: 5.5680484744876875
best_error: 5.552483844521772
best_error: 5.552483844521753
best_error: 5.502796128711453
best_error: 5.502796128711431
best_error: 5.4824228360905085
best_error: 5.48242283609049
best_error: 5.479737079587199
best_error: 5.4797370795871805
best_error: 5.479408849950653
best_error: 5.479408849950633
best_error: 5.478173506870382
best_error: 5.478173506870361
best_error: 5.312369381414053
best_error: 5.312369381414031
best_error: 4.997134587607411
best_error: 4.997134587607385
best_error: 4.997134537402295
best_error: 4.989477099913919
best_error: 4.989477067853329
best_error: 4.989477022537402
best_error: 4.989458417739036
best_error: 4.989458385679947
best_error: 4.98945834035703
best_error: 4.989441247361167
best_error: 4.989441215091776
best_error: 4.989441169912176
best_error: 4.989426817581032
best_error: 4.989426785312885
best_error: 4.989426740127659
best_error: 4.989414344423807
best_error: 4.989414312055788
best_error: 4.989414266934136
best_error: 4.989373268465555
best_error: 4.989373235500276
best_error: 4.989373190760445
best_error: 4.917160412487132
best_error: 4.917160412487116
best_error: 4.917160154355005
best_error: 4.749617030686445
best_error: 4.749617030686422
best_error: 4.749616961940104
best_error: 4.457152404264166
best_error: 4.45715240426415
best_error: 4.295621895610515
best_error: 4.295621842249752
best_error: 4.295621823923481
best_error: 4.232291099629724
best_error: 4.232291089447412
best_error: 4.232291081562219
best_error: 4.207544890639246
best_error: 4.207544878506033
best_error: 4.207544869664554
best_error: 4.136761889037435
best_error: 4.13676188903742
best_error: 4.136761888035412
best_error: 4.130332218612282
best_error: 4.130332218612274
best_error: 4.130332218516148
best_error: 4.129586447271644
best_error: 4.129586335317481
best_error: 4.129356055637056
best_error: 4.129356055637044
best_error: 4.12912304298253
best_error: 4.129123021679698
best_error: 4.113594531305706
best_error: 4.113594531305694
best_error: 4.113594523321201
best_error: 4.111963640013151
best_error: 4.111963588159654
best_error: 4.111432518472831
best_error: 4.1114325184728155
best_error: 4.111427099727102
best_error: 4.111427049911541
best_error: 4.111414703814008
best_error: 4.111414703813993
best_error: 4.111412391373831
best_error: 4.111412391373811
best_error: 4.111412307145623
best_error: 4.111412257202948
best_error: 4.111412183240705
best_error: 4.111412183240686
best_error: 4.111412166038091
best_error: 4.111412116095383
