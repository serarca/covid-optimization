ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.8809582999897
best_error: 24.88095824206187
best_error: 24.880958232211228
best_error: 4.895408256311729
best_error: 4.895408255776036
best_error: 4.894523622164469
best_error: 4.894523622101127
best_error: 4.894523621747048
best_error: 4.890932554964553
best_error: 4.890932554897478
best_error: 4.890932554539364
best_error: 4.883642988510607
best_error: 4.8836429884354695
best_error: 4.883642988069455
best_error: 4.882974863155104
best_error: 4.882974863079054
best_error: 4.8829748627129455
best_error: 4.880258893746171
best_error: 4.880258893666383
best_error: 4.880258893299901
best_error: 4.8686333288696915
best_error: 4.868633328773024
best_error: 4.868633328405284
best_error: 4.803886841646897
best_error: 4.80388684141326
best_error: 4.803886841067564
best_error: 4.703677191781806
best_error: 4.703677190938293
best_error: 4.139678730421561
best_error: 4.139678674380256
best_error: 3.5485198915698266
best_error: 3.5485197196717353
best_error: 2.829028569420357
best_error: 2.829028309865305
best_error: 2.202735228664537
best_error: 2.202734898462677
best_error: 2.180533914760686
best_error: 2.180533895275336
best_error: 2.159423132884219
best_error: 2.159423126114919
best_error: 2.1490868608361935
best_error: 2.14908676713044
best_error: 2.137898932266971
best_error: 2.137898859324559
best_error: 2.0959424732501564
best_error: 2.0959424730243676
best_error: 2.095942467946513
best_error: 2.0410129760214146
best_error: 2.041012855378777
best_error: 2.000522697893155
best_error: 2.000522674556344
best_error: 1.997631082460778
best_error: 1.9976310785415106
best_error: 1.997631078398892
best_error: 1.997072750900235
best_error: 1.9970727469416454
best_error: 1.9970727468341634
best_error: 1.995191672006788
best_error: 1.9951916632057474
best_error: 1.9943970018802002
best_error: 1.9943969537203177
best_error: 1.9919892232093892
best_error: 1.991989179283174
best_error: 1.9607569052157732
best_error: 1.9607568696553932
best_error: 1.8581845261183638
best_error: 1.858184330382362
best_error: 1.8469109238833432
best_error: 1.846910724442368
best_error: 1.7575703369595599
best_error: 1.7575701506088401
best_error: 1.750605788713176
best_error: 1.7506056120309808
best_error: 1.6695155701480475
best_error: 1.6695155242510498
best_error: 1.6371179331935628
best_error: 1.6371178231722556
best_error: 1.6110029942220356
best_error: 1.6110029073442147
best_error: 1.5889869127026424
best_error: 1.5889868663240077
best_error: 1.583661881664619
best_error: 1.583661826500986
best_error: 1.576235059450284
best_error: 1.5762349425442006
best_error: 1.5634325709854073
best_error: 1.5634325247199692
best_error: 1.5584632836806191
best_error: 1.558463280131203
best_error: 1.55730403855555
best_error: 1.5573040326122374
best_error: 1.5545356014950256
best_error: 1.5545355914053751
best_error: 1.5413489341687738
best_error: 1.5413489311886406
best_error: 1.5074643672083354
best_error: 1.5074643606927973
best_error: 1.5074643552871358
best_error: 1.5003240544051224
best_error: 1.5003240045315942
best_error: 1.4995153095263427
best_error: 1.499515241944446
best_error: 1.4994935258310844
best_error: 1.499493455481681
best_error: 1.4853075304808814
best_error: 1.4853074905149484
best_error: 1.4622132242713806
best_error: 1.4622131656298953
best_error: 1.3807858722537656
best_error: 1.3807857798260046
best_error: 1.3462932597895045
best_error: 1.346293184797115
best_error: 1.3013813246326067
best_error: 1.301381242491006
best_error: 1.3013810585859011
best_error: 1.3013807313982653
best_error: 1.3013806492565962
best_error: 1.3013805497163853
best_error: 1.3009415473144477
best_error: 1.3009414953537322
best_error: 1.3009414752689776
best_error: 1.2999310738525838
best_error: 1.299931060380478
best_error: 1.2994399764750981
best_error: 1.2994399635780214
best_error: 1.2994397699187292
best_error: 1.2994397570076484
best_error: 1.2991838255829788
best_error: 1.2991837973440528
best_error: 1.2981612188160678
best_error: 1.29816102699756
best_error: 1.2948830517531684
best_error: 1.294882980612776
best_error: 1.2948829609860226
best_error: 1.2935992129554186
best_error: 1.2935990862300255
best_error: 1.284438278545361
best_error: 1.2844381455847498
best_error: 1.2672681063690978
best_error: 1.2672680883892353
best_error: 1.267268055866146
best_error: 1.267268040911768
best_error: 1.21357673141627
best_error: 1.2135766578061977
best_error: 1.2014658497693453
best_error: 1.2014656744033103
best_error: 1.1941429011570446
best_error: 1.1941428973587545
best_error: 1.1941428936023168
best_error: 1.1941428696351373
best_error: 1.1940646920213949
best_error: 1.1940645101737717
best_error: 1.190847647198856
best_error: 1.1908475422097093
best_error: 1.1891351915463217
best_error: 1.1891351371778227
best_error: 1.1853010111008502
best_error: 1.185300991060514
best_error: 1.1819442816383658
best_error: 1.1819442564692368
best_error: 1.1798931177000203
best_error: 1.179893117321507
best_error: 1.1798931135880844
best_error: 1.1792925928126883
best_error: 1.1792925868351496
best_error: 1.1790380896112016
best_error: 1.179038081140492
best_error: 1.1784590170187994
best_error: 1.1784590091145117
best_error: 1.1770979128729318
best_error: 1.177097897989758
best_error: 1.1732653601781697
best_error: 1.1732653420345596
best_error: 1.163160969833624
best_error: 1.1631609214080623
best_error: 1.1581508366617728
best_error: 1.1581507053256204
best_error: 1.1467175948334316
best_error: 1.1467174376516234
best_error: 1.1300530143440102
best_error: 1.1300528348101537
best_error: 1.1187895739244818
best_error: 1.11878935698319
best_error: 1.1065947946757413
best_error: 1.1065946218798355
best_error: 1.1018080022771495
best_error: 1.1018079699128895
best_error: 1.097687644808759
best_error: 1.0976875429828477
best_error: 1.0945886606708044
best_error: 1.094588643864577
best_error: 1.0942720346464347
best_error: 1.0942720346348844
best_error: 1.0942720339628613
best_error: 1.0942720333387665
best_error: 1.094158290347432
best_error: 1.0941582851040137
best_error: 1.0940416411719565
best_error: 1.0940416312033323
best_error: 1.0939464830935575
best_error: 1.0939464718191545
best_error: 1.0938844697290053
best_error: 1.0938844600568598
best_error: 1.0938627113434456
best_error: 1.093862703244875
best_error: 1.093837347562084
best_error: 1.0938373440203746
best_error: 1.0938204955952748
best_error: 1.0938204927444846
best_error: 1.09376980374914
best_error: 1.0937698034395191
best_error: 1.0937697986111095
best_error: 1.0937353658568605
best_error: 1.0937353600264745
best_error: 1.0937304777789931
best_error: 1.0937304777402468
best_error: 1.0937304766900078
best_error: 1.0937304764247826
best_error: 1.093729064742189
best_error: 1.0937290646304574
best_error: 1.0937290634207675
best_error: 1.0937290633734988
best_error: 1.0937270336501108
best_error: 1.0937270331517341
best_error: 1.0937270323106314
best_error: 1.0937252066042709
best_error: 1.0937252057158717
best_error: 1.0937252053231235
best_error: 1.0937240511894588
best_error: 1.0937240507028527
best_error: 1.09372404989299
best_error: 1.093723315541922
best_error: 1.0937233155123198
best_error: 1.0937233142287208
best_error: 1.0937232932484968
best_error: 1.0937232926019378
best_error: 1.0937232919154551
best_error: 1.0937232327844117
best_error: 1.093723232615022
best_error: 1.0937232314654641
best_error: 1.0937231731791355
best_error: 1.093723172975154
best_error: 1.0937231718596525
best_error: 1.0937229092976468
best_error: 1.0937229091792546
best_error: 1.093722908005443
best_error: 1.093722482172447
best_error: 1.0937224817439921
best_error: 1.093722480845966
best_error: 1.0937212725711742
best_error: 1.0937212722821494
best_error: 1.0937212712509057
best_error: 1.0937163667275227
best_error: 1.0937163666626626
best_error: 1.0937163654330406
best_error: 1.0937102603477358
best_error: 1.0937102599463426
best_error: 1.0937102590676744
best_error: 1.0936898533467176
best_error: 1.0936898522832816
best_error: 1.0936898520611387
best_error: 1.093595051656931
best_error: 1.0935950485121797
best_error: 1.0933927228490634
best_error: 1.093392715798948
best_error: 1.0930097717924074
best_error: 1.0930097584130565
best_error: 1.0921153050244339
best_error: 1.09211528331534
best_error: 1.0908560329599242
best_error: 1.0908560092665855
best_error: 1.0893855581803573
best_error: 1.0893855376135906
best_error: 1.0862491887505694
best_error: 1.0862491847401652
best_error: 1.086249134698883
best_error: 1.084612844820003
best_error: 1.0846127778952137
best_error: 1.0812205386336842
best_error: 1.0812205055802948
