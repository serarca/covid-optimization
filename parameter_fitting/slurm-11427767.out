ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.165407267460427
best_error: 25.165407005631053
best_error: 4.906063669385433
best_error: 4.906063668715473
best_error: 4.905882956581382
best_error: 4.905882956572436
best_error: 4.9058829565016495
best_error: 4.905156622241168
best_error: 4.9051566222320995
best_error: 4.9051566221611065
best_error: 4.9021955257101695
best_error: 4.902195525700586
best_error: 4.9021955256287555
best_error: 4.889385222265281
best_error: 4.88938522225309
best_error: 4.889385222177752
best_error: 4.808794862419269
best_error: 4.808794862357266
best_error: 4.808794862279944
best_error: 4.728204605748625
best_error: 4.7282046054500215
best_error: 4.436498908694464
best_error: 4.436498901185456
best_error: 4.342679032983515
best_error: 4.342679020449917
best_error: 4.227868265107366
best_error: 4.227868245041509
best_error: 4.003814262567271
best_error: 4.003814003783444
best_error: 4.003814002383087
best_error: 3.0902698170637684
best_error: 3.0902697435012407
best_error: 2.98387430983512
best_error: 2.9838742264797196
best_error: 2.9290841446413958
best_error: 2.9290840670951774
best_error: 2.7996315806646686
best_error: 2.799631471485877
best_error: 2.6193400417911503
best_error: 2.6193400084771
best_error: 2.619339937600654
best_error: 2.4104886381581263
best_error: 2.410488597164846
best_error: 2.4104885182119653
best_error: 2.3999636639202184
best_error: 2.399963561938672
best_error: 2.3869965953711545
best_error: 2.386996513341685
best_error: 2.352402782331257
best_error: 2.352402737705799
best_error: 2.3470095269465676
best_error: 2.3470095116611374
best_error: 2.3451336887016243
best_error: 2.3451336677793226
best_error: 2.3441467356848253
best_error: 2.34414673360627
best_error: 2.3441467259161217
best_error: 2.342133404635544
best_error: 2.342133404109229
best_error: 2.342133404030826
best_error: 2.3421333950956322
best_error: 2.310687978219547
best_error: 2.310687932370775
best_error: 2.1877575629842148
best_error: 2.1877574229322883
best_error: 2.148815425298634
best_error: 2.1488151288376636
best_error: 2.0705707286857358
best_error: 2.0705704228881934
best_error: 1.998292547774611
best_error: 1.9982924430007967
best_error: 1.9209832116637824
best_error: 1.92098320565322
best_error: 1.9209832052771634
best_error: 1.8297794941366334
best_error: 1.8297793294807334
best_error: 1.8213761792139165
best_error: 1.821376164278071
best_error: 1.8053888027517175
best_error: 1.8053887428417865
best_error: 1.7563280511383004
best_error: 1.7563278804542193
best_error: 1.679789715055858
best_error: 1.6797895333657942
best_error: 1.6746955773435581
best_error: 1.6746953402584341
best_error: 1.665501768860815
best_error: 1.6655017199982352
best_error: 1.6363645349878635
best_error: 1.6363644885004573
best_error: 1.617275192577234
best_error: 1.6172751882118315
best_error: 1.5954214878486044
best_error: 1.595421432367314
best_error: 1.5886143445747922
best_error: 1.5886143434388145
best_error: 1.582420202135007
best_error: 1.5824201668661897
best_error: 1.579202459643125
best_error: 1.5792024569412824
best_error: 1.5791625179008444
best_error: 1.579162517757859
best_error: 1.5791625170861001
best_error: 1.5789316264418922
best_error: 1.578931624467509
best_error: 1.5782350718850537
best_error: 1.578235064889516
best_error: 1.5773382176141972
best_error: 1.5773382074205813
best_error: 1.5747383412969098
best_error: 1.5747383314123717
best_error: 1.5701884019212786
best_error: 1.570188366399222
best_error: 1.560697290591703
best_error: 1.5606972893202538
best_error: 1.560697255931629
best_error: 1.5418728142642193
best_error: 1.5418727981747142
best_error: 1.5395123599246354
best_error: 1.5395123587176198
best_error: 1.539189620980429
best_error: 1.539189613853388
best_error: 1.5389209054547164
best_error: 1.5389208930762606
best_error: 1.5384052176216827
best_error: 1.5384052049444081
best_error: 1.5381853349296373
best_error: 1.5381853307577436
best_error: 1.5380424632809855
best_error: 1.5380424572091262
best_error: 1.5380378780236972
best_error: 1.5380378716043117
best_error: 1.5378133694566398
best_error: 1.5378133670804823
best_error: 1.5377308262798213
best_error: 1.5377308244875727
best_error: 1.5374575578743435
best_error: 1.5374575552257124
best_error: 1.5364808464842432
best_error: 1.536480845475112
best_error: 1.536480831145207
best_error: 1.5349523230912292
best_error: 1.5349523208775144
best_error: 1.5349523074970046
best_error: 1.5287855607222602
best_error: 1.528785541086936
best_error: 1.520195400652613
best_error: 1.5201953947262041
best_error: 1.5201629293889312
best_error: 1.5201629211654362
best_error: 1.5201626885277206
best_error: 1.5201626800474994
best_error: 1.5201626535679265
best_error: 1.5201626452415602
best_error: 1.5201621081707044
best_error: 1.5201620995379026
best_error: 1.518288313783575
best_error: 1.5182883126951234
best_error: 1.5159857698785018
best_error: 1.5159857328031987
best_error: 1.5154063974776084
best_error: 1.515406395345518
best_error: 1.515406350892797
best_error: 1.5127179154193977
best_error: 1.5127178953137663
best_error: 1.5115530019279888
best_error: 1.5115529973629631
best_error: 1.5114476222816513
best_error: 1.511447621495262
best_error: 1.5114312381493098
best_error: 1.5114312380747668
best_error: 1.5114312373411616
best_error: 1.5114238757392118
best_error: 1.5114238756154168
best_error: 1.5114238749310136
best_error: 1.5114078208655417
best_error: 1.5114078201993464
best_error: 1.5114078201566477
best_error: 1.5114078200403651
best_error: 1.511344775069523
best_error: 1.511344773292004
best_error: 1.5106027143089062
best_error: 1.5106027075699406
best_error: 1.5086527348257792
best_error: 1.5086527223359183
best_error: 1.502613659591201
best_error: 1.502613643577278
best_error: 1.494459991430425
best_error: 1.4944599618446
best_error: 1.4918421240746267
best_error: 1.4918420986258096
best_error: 1.4876793403290052
best_error: 1.4876793245039237
best_error: 1.4876793110922595
best_error: 1.4780601776285371
best_error: 1.478060105883526
best_error: 1.4758884194116866
best_error: 1.4758884065332019
best_error: 1.4732983972574296
best_error: 1.4732983770276005
best_error: 1.472757547377072
best_error: 1.4727575454587762
best_error: 1.472757544379403
best_error: 1.4717508328265685
best_error: 1.4717508323690973
best_error: 1.4707819663967765
best_error: 1.47078193157496
best_error: 1.4700031394561508
best_error: 1.4700031099980115
best_error: 1.4693065370383922
best_error: 1.4693065326458636
best_error: 1.4692784316063752
best_error: 1.4692784303271944
best_error: 1.469267480423938
best_error: 1.4692674784017081
best_error: 1.4692663307974394
best_error: 1.4692663301229145
best_error: 1.4692658518486983
best_error: 1.4692658516775168
best_error: 1.4692658516147077
best_error: 1.4692654074224472
best_error: 1.469265407288988
best_error: 1.469265407188387
best_error: 1.469259595767448
best_error: 1.4692595954877896
best_error: 1.4692301526882836
best_error: 1.4692301520390805
best_error: 1.468994771545413
best_error: 1.4689947603858187
best_error: 1.4686700084755333
best_error: 1.468669985667144
best_error: 1.4678207065076179
best_error: 1.467820677481426
best_error: 1.466677007979534
best_error: 1.4666769496544756
best_error: 1.4656072666170061
best_error: 1.4656072117461014
best_error: 1.4630353471281938
best_error: 1.463035328522949
best_error: 1.458662202212739
best_error: 1.4586621643640836
best_error: 1.4577433125651618
best_error: 1.4577432165859177
best_error: 1.4558730328611258
best_error: 1.4558730163211324
best_error: 1.4557408360729942
best_error: 1.4557408350532726
best_error: 1.4557110811391811
best_error: 1.4557110796612032
best_error: 1.455707954327914
best_error: 1.455707952204178
best_error: 1.455704653648675
best_error: 1.4557046536371103
best_error: 1.4557046535639473
best_error: 1.4556966521634052
best_error: 1.4556966517795207
best_error: 1.455685697242157
best_error: 1.4556856970415388
best_error: 1.4556665509992661
best_error: 1.4556665507662465
best_error: 1.4556157401683496
best_error: 1.4556157401639
best_error: 1.455615739871423
