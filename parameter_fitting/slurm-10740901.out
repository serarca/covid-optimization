ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.236304649737601
best_error: 10.23630464744749
best_error: 10.117294269299974
best_error: 10.117294258525554
best_error: 8.572540032317713
best_error: 8.572540032317711
best_error: 8.572540019060103
best_error: 3.8189873614874563
best_error: 3.818987077436641
best_error: 3.802521412865462
best_error: 3.8025212847082783
best_error: 3.7460494095429326
best_error: 3.7460494095429286
best_error: 3.7460492817051976
best_error: 3.6604537208634462
best_error: 3.660453635675954
best_error: 3.6604536075697744
best_error: 3.633992405967588
best_error: 3.633992401582825
best_error: 3.633932580415283
best_error: 3.6339325764230694
best_error: 3.633904975302353
best_error: 3.633904971516314
best_error: 3.6338840108860784
best_error: 3.633884007178334
best_error: 3.63387071183164
best_error: 3.633870708209057
best_error: 3.633869601398678
best_error: 3.6338695977755595
best_error: 3.633868857671301
best_error: 3.6338688540478183
best_error: 3.633867887659509
best_error: 3.6338678876595054
best_error: 3.6338677565832893
best_error: 3.633867752978487
best_error: 3.633867734332689
best_error: 3.63386773072788
best_error: 3.6338677289395167
best_error: 3.6338677253347025
best_error: 3.633867722284765
best_error: 3.6338676921664224
best_error: 3.633867688561686
best_error: 3.6338675651243424
best_error: 3.6338675615199243
best_error: 3.6338670565649926
best_error: 3.633867052961829
best_error: 3.6338650189225463
best_error: 3.63386501530521
best_error: 3.633857434345599
best_error: 3.633857430595219
best_error: 3.6338485098691944
best_error: 3.6338485059500623
best_error: 3.633847927477679
best_error: 3.633847923560807
best_error: 3.633847180827155
best_error: 3.6338471769131764
best_error: 3.633845432151842
best_error: 3.633845428109625
best_error: 3.633843788754046
best_error: 3.633843784616258
best_error: 3.6338434998286595
best_error: 3.633843495571648
best_error: 3.633843305490006
best_error: 3.633843301217177
best_error: 3.6338430693529684
best_error: 3.6338430650665283
best_error: 3.633842763596141
best_error: 3.633842759296834
best_error: 3.6338427550090358
best_error: 3.633842750742697
best_error: 3.6338427487772975
best_error: 3.6338427468190675
best_error: 3.6338427453912177
best_error: 3.633842743972407
best_error: 3.6338427434760625
best_error: 3.633842739177078
best_error: 3.633842737196507
best_error: 3.633842732878671
best_error: 3.6338425335772233
best_error: 3.633842529261468
best_error: 3.63384252750297
best_error: 3.633842525754004
best_error: 3.633842524678181
best_error: 3.6338425236100464
best_error: 3.6338425226272237
best_error: 3.633842521660106
best_error: 3.6338424997348127
best_error: 3.6338424954194033
best_error: 3.6338424705772376
best_error: 3.6338424662621254
best_error: 3.633842465166872
best_error: 3.6338424642601423
best_error: 3.6338424469933943
best_error: 3.6338424426785223
best_error: 3.6338424422964772
best_error: 3.6338424419161885
best_error: 3.633842441721683
best_error: 3.633842441528096
best_error: 3.6338424414267547
best_error: 3.6338424413565713
best_error: 3.63384244128676
best_error: 3.633842441245767
best_error: 3.633842441205033
best_error: 3.6338424411738868
best_error: 3.6338424411309926
best_error: 3.6338424401535714
best_error: 3.6337678488743093
best_error: 3.6337678451536277
best_error: 3.6336184109770033
best_error: 3.633618409077099
best_error: 3.63359618244308
best_error: 3.633596180980557
best_error: 3.6335845407986507
best_error: 3.63358453958403
best_error: 3.6335783298878006
best_error: 3.6335783290095467
best_error: 3.6335631622163165
best_error: 3.6335631621025253
best_error: 3.6335627325044646
best_error: 3.6335627323901605
best_error: 3.633562340652893
best_error: 3.633562340555681
best_error: 3.633562331437446
best_error: 3.6335623314374437
best_error: 3.6335623192224564
best_error: 3.633562319140191
best_error: 3.6335622203618305
best_error: 3.633562220279444
best_error: 3.6335621776419047
best_error: 3.633562177559489
best_error: 3.633562154448591
best_error: 3.6335621543748715
best_error: 3.633562143493579
best_error: 3.6335621434198537
best_error: 3.633562136197296
best_error: 3.6335621361235644
best_error: 3.633562133061031
best_error: 3.6335621330610284
best_error: 3.633562133061023
best_error: 3.6335554366894
best_error: 3.6335554366499023
best_error: 3.633530263154879
best_error: 3.633530263099075
best_error: 3.6334912280968434
best_error: 3.633491228096842
best_error: 3.633491228096835
best_error: 3.6334450636931965
best_error: 3.6334450636931943
best_error: 3.6334450636931916
best_error: 3.6334436099358607
best_error: 3.633443609935859
best_error: 3.6334436099358545
best_error: 3.633442492191423
best_error: 3.6334424921914206
best_error: 3.633442492191416
best_error: 3.6334418758403255
best_error: 3.633441875840324
best_error: 3.6334418758403184
best_error: 3.6334414704060487
best_error: 3.633441470406047
best_error: 3.6334414704060434
best_error: 3.63344120295956
best_error: 3.633441202959558
best_error: 3.6334412029595553
best_error: 3.633441025607994
best_error: 3.633441025607992
best_error: 3.633441025607989
best_error: 3.6334409073265186
best_error: 3.633440907326517
best_error: 3.6334409073265137
best_error: 3.6334408275353205
best_error: 3.6334408275353196
best_error: 3.6334408275353156
best_error: 3.6334408262053306
best_error: 3.633440826205328
best_error: 3.6334408262053235
best_error: 3.6334408245502967
best_error: 3.633440824550295
best_error: 3.63344082455029
best_error: 3.633440820915991
best_error: 3.633440820915989
best_error: 3.633440820915985
best_error: 3.633440818893224
best_error: 3.633440818893223
best_error: 3.6334408188932175
best_error: 3.633440814693654
