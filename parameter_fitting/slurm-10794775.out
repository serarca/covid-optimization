ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.293602205655514
best_error: 9.293602189146991
best_error: 8.58440357090382
best_error: 8.584403530020136
best_error: 6.007210830208656
best_error: 6.007210658301574
best_error: 5.806154235091209
best_error: 5.806154202235012
best_error: 5.806154057169069
best_error: 5.7995884776640665
best_error: 5.799588427458241
best_error: 5.799588304853659
best_error: 4.951091404936236
best_error: 4.9510913410441155
best_error: 4.951091204910661
best_error: 4.056428201309594
best_error: 4.056428112771857
best_error: 4.056428097817528
best_error: 3.756585249246144
best_error: 3.7565851655723703
best_error: 2.7664865587805902
best_error: 2.7664865339092
best_error: 2.7664864989310662
best_error: 2.641549754888999
best_error: 2.641549727557505
best_error: 2.5366264363326323
best_error: 2.5366264006107366
best_error: 2.527750853804342
best_error: 2.5277508524578467
best_error: 2.527750847042898
best_error: 2.519972360760746
best_error: 2.5199723495267485
best_error: 2.5199723479218608
best_error: 2.5013247241946504
best_error: 2.501324718926548
best_error: 2.501324711123055
best_error: 2.460068061138584
best_error: 2.4600680196131384
best_error: 2.4600679801570435
best_error: 2.4164770559602387
best_error: 2.416477041900589
best_error: 2.4164770410937075
best_error: 2.2728311707861915
best_error: 2.2728311271685246
best_error: 2.2704951581344313
best_error: 2.270495114840167
best_error: 2.2169005565891147
best_error: 2.2169005219287876
best_error: 2.2169004164978463
best_error: 2.039610371537278
best_error: 2.0396102801474725
best_error: 2.0284408481352303
best_error: 2.0284407681749737
best_error: 2.024928479080546
best_error: 2.024928402472945
best_error: 2.0240372675230014
best_error: 2.024037267392941
best_error: 2.0234795463251882
best_error: 2.0234794714296522
best_error: 2.0216550316306803
best_error: 2.021654958786252
best_error: 2.0216418288387357
best_error: 2.0216418164547916
best_error: 2.020693632603428
best_error: 2.0206936317161905
best_error: 2.0182020998036436
best_error: 2.018202097730024
best_error: 2.011112558587382
best_error: 2.0111125552517
best_error: 2.0106049233255443
best_error: 2.0106049215712694
best_error: 2.01056632262559
best_error: 2.010566320951017
best_error: 2.0105641758218358
best_error: 2.0105641741472664
best_error: 2.0105638901185197
best_error: 2.010563822028283
best_error: 2.010563487334139
best_error: 2.010563485659464
best_error: 2.0105600342875847
best_error: 2.010560032803075
best_error: 2.0105592563430545
best_error: 2.010559187870188
best_error: 2.0105565492812603
best_error: 2.010556481172702
best_error: 2.010551449488397
best_error: 2.0105513813271036
best_error: 2.0105317781008547
best_error: 2.0105317097128674
best_error: 2.010301586777381
best_error: 2.01030151686577
best_error: 2.010008595657209
best_error: 2.009784678052735
best_error: 2.0096287625134552
best_error: 2.009628692708758
best_error: 2.0095698674117908
best_error: 2.0095698666575172
best_error: 2.009510870992171
best_error: 2.009510801602206
best_error: 2.0095041972959513
best_error: 2.0095041960142908
best_error: 2.009496358257666
best_error: 2.0094962897887076
best_error: 2.0094961687330564
best_error: 2.0094961672856066
best_error: 2.0094936725949544
best_error: 2.009493641485297
best_error: 2.0094917845861735
best_error: 2.0094917830139676
best_error: 2.0094865360056557
best_error: 2.009486534559593
best_error: 2.009477199538698
best_error: 2.009477197954964
best_error: 2.0094753003862817
best_error: 2.0094752988938085
best_error: 2.009475187408831
best_error: 2.009475185916256
best_error: 2.0094730750931555
best_error: 2.00947307361588
best_error: 2.009466347591142
best_error: 2.009466346161763
best_error: 2.0094658545400024
best_error: 2.009465853110613
best_error: 2.009465610683614
best_error: 2.0094656092542182
best_error: 2.009465596689373
best_error: 2.009465595259965
best_error: 2.0094655940357087
best_error: 2.0094655926062983
