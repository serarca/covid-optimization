ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 78
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.11849228687507
best_error: 100.11849220808807
best_error: 100.11849211661229
best_error: 18.844621454479668
best_error: 18.844621454475885
best_error: 18.84462144676919
best_error: 18.82609800703851
best_error: 18.826097998732774
best_error: 18.734696648989814
best_error: 18.73469663717337
best_error: 15.886750651752656
best_error: 15.886750334135918
best_error: 13.93967731193338
best_error: 13.93967731104668
best_error: 13.939677307420384
best_error: 13.939676764707567
best_error: 13.837086559883883
best_error: 13.837086542641018
best_error: 13.837086540049881
best_error: 13.572418079013314
best_error: 13.572418073560911
best_error: 13.57241806768239
best_error: 13.572418058131081
best_error: 12.83315414780264
best_error: 12.833154135483163
best_error: 12.833154132098713
best_error: 12.833154120455381
best_error: 12.24497412199516
best_error: 12.244974109978834
best_error: 12.244974108002108
best_error: 12.244974095913628
best_error: 11.933372419941623
best_error: 11.933372157581864
best_error: 11.220736121917298
best_error: 11.220736031661772
best_error: 11.101221100866113
best_error: 11.101221096581366
best_error: 11.101221092388371
best_error: 11.101221078488512
best_error: 11.058343055102512
best_error: 11.058343049839316
best_error: 11.05834304671583
best_error: 11.05834303255685
best_error: 11.051621063299034
best_error: 11.05162103730231
best_error: 10.981307814434658
best_error: 10.981307784726132
best_error: 10.905731458601302
best_error: 10.905731441499473
best_error: 10.90573143809412
best_error: 10.8448844894234
best_error: 10.8448844763993
best_error: 10.844884470152888
best_error: 10.784869294347164
best_error: 10.784869284505014
best_error: 10.784869276477734
best_error: 10.746330421180026
best_error: 10.746330414672297
best_error: 10.746330409285223
best_error: 10.746330404297579
best_error: 10.709438423459128
best_error: 10.709438419987771
best_error: 10.70943836894076
best_error: 10.653707349661762
best_error: 10.653707347003513
best_error: 10.653707273471138
best_error: 10.628469761803398
best_error: 10.628469758251164
best_error: 10.628469692658465
best_error: 10.60099127735161
best_error: 10.600991269776133
best_error: 10.600991244729528
best_error: 10.595594999465467
best_error: 10.595594991652199
best_error: 10.595594968258037
best_error: 10.591144378989588
best_error: 10.591144369361059
best_error: 10.591144364268647
best_error: 10.591144363753942
best_error: 10.55992905659128
best_error: 10.559929023723258
best_error: 10.543967198988424
best_error: 10.543967185495546
best_error: 10.543967183841353
best_error: 10.491905768597283
best_error: 10.491905737392315
best_error: 10.243907581620142
best_error: 10.243907565293092
best_error: 9.996181097474294
best_error: 9.996181085138792
best_error: 9.996181080802884
best_error: 9.987516248383704
best_error: 9.987516233717745
best_error: 9.968185079957674
best_error: 9.968184913254813
best_error: 9.960817383268264
best_error: 9.960817366059079
best_error: 9.952502970754765
best_error: 9.952502952318842
best_error: 9.952331027849546
best_error: 9.952330930618146
best_error: 9.951710730667607
best_error: 9.951710633013484
best_error: 9.951186501920523
best_error: 9.951186484041262
best_error: 9.949535585139193
best_error: 9.949535567262126
best_error: 9.944984688720012
best_error: 9.944984669709715
best_error: 9.93819512345506
best_error: 9.938195103507443
best_error: 9.930144546015642
best_error: 9.93014452571335
best_error: 9.918067720466677
best_error: 9.918067700110605
best_error: 9.902108898662725
best_error: 9.902108878826475
best_error: 9.869091007587322
best_error: 9.869090989285525
best_error: 9.79011092344515
best_error: 9.79011090806228
best_error: 9.781409944521489
best_error: 9.781409930974093
best_error: 9.76848010245085
best_error: 9.768480088674421
best_error: 9.746157077557475
best_error: 9.746157069297153
best_error: 9.690827370799743
best_error: 9.690827363625756
best_error: 9.674637437699202
best_error: 9.6746374376992
best_error: 9.674637429559143
best_error: 9.674045868398403
best_error: 9.674045859513548
best_error: 9.674045728030299
best_error: 9.673578736228126
best_error: 9.673578728055308
best_error: 9.672943099188453
best_error: 9.67294309102358
best_error: 9.6728355281214
best_error: 9.672835519957875
best_error: 9.67280691507964
best_error: 9.672806906183627
best_error: 9.672806774598053
best_error: 9.672797146671897
best_error: 9.672797138508887
best_error: 9.665849556854926
best_error: 9.665849546678
best_error: 9.655161361719319
best_error: 9.655161361719317
best_error: 9.655161349088324
best_error: 9.638996963516497
best_error: 9.638996953486497
best_error: 9.638992683513006
best_error: 9.638992673483052
best_error: 9.638975563692293
best_error: 9.638975563692291
best_error: 9.638975553662528
best_error: 9.638907087501426
best_error: 9.638907077472407
best_error: 9.638633232211266
best_error: 9.638633222185241
best_error: 9.637541463943611
best_error: 9.63754146394361
best_error: 9.637541453885895
best_error: 9.6331968871484
best_error: 9.63319687705324
best_error: 9.618363400011944
best_error: 9.618363400011942
best_error: 9.618363386678183
best_error: 9.615962096269492
best_error: 9.615962086125307
best_error: 9.613670966814094
best_error: 9.613670966814093
best_error: 9.61367095813982
best_error: 9.60682362764839
best_error: 9.606823627648389
best_error: 9.606823620196337
