ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 7.799469546257668
best_error: 7.799469497438745
best_error: 7.618943443886395
best_error: 7.618943380663215
best_error: 4.356162675172272
best_error: 4.356162611773017
best_error: 4.299620196350004
best_error: 4.299620142640363
best_error: 4.279520174201367
best_error: 4.279520160710032
best_error: 4.279520156241756
best_error: 2.915191581618608
best_error: 2.915191581353655
best_error: 2.59779355576709
best_error: 2.597793358162572
best_error: 2.5384254273314655
best_error: 2.5384253925947715
best_error: 2.535411689552701
best_error: 2.535411689528345
best_error: 2.535411677216498
best_error: 2.533373861943831
best_error: 2.533373861919599
best_error: 2.533373849533324
best_error: 2.526650264098962
best_error: 2.5266502640677917
best_error: 2.5266502529425336
best_error: 2.491647318738877
best_error: 2.491647318711144
best_error: 2.4916473064494036
best_error: 2.489196308244813
best_error: 2.489196308217667
best_error: 2.4891962958718814
best_error: 2.4819279825945335
best_error: 2.481927955132367
best_error: 2.4756279989909857
best_error: 2.475627945091799
best_error: 2.442321418259723
best_error: 2.4423212534914014
best_error: 2.316375699420839
best_error: 2.316375517712729
best_error: 2.3012528529964875
best_error: 2.301252700612137
best_error: 2.2781764907189324
best_error: 2.2781764906452695
best_error: 2.278176487526986
best_error: 2.2711600434509265
best_error: 2.2711599760451047
best_error: 2.269455691205636
best_error: 2.2694556911767965
best_error: 2.269455342473501
best_error: 2.2694553424446466
best_error: 2.269454234663765
best_error: 2.2694542346349276
best_error: 2.2694538504684076
best_error: 2.269453850211986
best_error: 2.2694530845688288
best_error: 2.2694530843433616
best_error: 2.269452935147685
best_error: 2.2694529351188724
best_error: 2.2694528199566415
best_error: 2.2694528199061064
best_error: 2.26945279181854
best_error: 2.2694527917669873
best_error: 2.269452714913107
best_error: 2.2694527148842996
best_error: 2.2694525266113144
best_error: 2.269452526560004
best_error: 2.2694516294780516
best_error: 2.2694516293014675
best_error: 2.2694512568669745
best_error: 2.2694512566420157
best_error: 2.269450083396837
best_error: 2.2694500831782034
best_error: 2.2694491001520083
best_error: 2.2694490998924035
best_error: 2.2694487864146717
best_error: 2.269448786157064
best_error: 2.2694485320172735
best_error: 2.2694485317314483
best_error: 2.2694484964036383
best_error: 2.2694484961180303
best_error: 2.2694484734656886
best_error: 2.2694484731447546
best_error: 2.269448394957775
best_error: 2.2694483945391344
best_error: 2.2694483837011417
best_error: 2.269448383282522
best_error: 2.269448371468985
best_error: 2.269448371050387
best_error: 2.2694483640413394
best_error: 2.269448360989846
best_error: 2.2694483605712663
best_error: 2.269448357133253
best_error: 2.2694483567146837
best_error: 2.269448350539161
best_error: 2.26944596685515
best_error: 2.269445966596828
best_error: 2.269436500971768
best_error: 2.2694365007481276
best_error: 2.2694025129607467
best_error: 2.269402512919202
best_error: 2.2693776589969765
best_error: 2.269377658946292
best_error: 2.2693680479900946
best_error: 2.2693680479336122
best_error: 2.269354800992561
best_error: 2.2693548009239253
best_error: 2.2693539810596186
best_error: 2.269353980989989
best_error: 2.2693515848179566
best_error: 2.2693515847449657
best_error: 2.2693513314505918
best_error: 2.269351331377225
best_error: 2.2693510906068677
best_error: 2.2693510905331413
best_error: 2.2693501878637408
best_error: 2.2693501877885707
best_error: 2.269348588513255
best_error: 2.2693485884350313
best_error: 2.2693484308168106
best_error: 2.269348430738301
best_error: 2.2693482742147792
best_error: 2.269348274135975
best_error: 2.269348199231632
best_error: 2.2693481991526836
best_error: 2.269348150712972
best_error: 2.269348150633937
best_error: 2.269348147378448
best_error: 2.269348147299404
best_error: 2.2693481441262673
best_error: 2.2693481440472194
best_error: 2.269348142513981
best_error: 2.2693481424349304
best_error: 2.269348140941337
best_error: 2.2693481408622835
best_error: 2.2693475901138376
best_error: 2.269347590034657
best_error: 2.269343728841516
best_error: 2.269343728761346
best_error: 2.269328022783794
best_error: 2.2693280226996575
best_error: 2.269260535532461
best_error: 2.2692605354312896
best_error: 2.268923607445318
best_error: 2.2689236008516938
best_error: 2.2689235744770357
best_error: 2.268923468975826
best_error: 2.268923046929721
best_error: 2.2689213580849255
best_error: 2.2689149542975593
best_error: 2.268892788478872
best_error: 2.268870190721377
best_error: 2.2688701905921453
best_error: 2.26887003338862
best_error: 2.268870033265386
best_error: 2.2688699488134905
best_error: 2.2688699487369393
best_error: 2.268869936066827
best_error: 2.268869934780319
