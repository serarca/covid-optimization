ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 15.092098080439722
best_error: 15.09209807444142
best_error: 15.092098049856894
best_error: 9.841896146113548
best_error: 9.84189543289127
best_error: 8.644437325389289
best_error: 8.64443720992453
best_error: 8.595113712870983
best_error: 8.595113633184205
best_error: 6.660530412093529
best_error: 6.660530380367399
best_error: 6.554047969911167
best_error: 6.554047277824615
best_error: 6.544569447298141
best_error: 6.544569227717121
best_error: 6.467176219574373
best_error: 6.467175920930885
best_error: 6.418369161845959
best_error: 6.418368869133472
best_error: 6.397520692595695
best_error: 6.397520401927654
best_error: 6.388241194744625
best_error: 6.388240904974699
best_error: 6.383760865781339
best_error: 6.383760575822297
best_error: 6.380953267637906
best_error: 6.3809529777625436
best_error: 6.379964665344843
best_error: 6.37996462598163
best_error: 6.379896494957661
best_error: 6.379896205039945
best_error: 6.379315897027141
best_error: 6.3793156086685805
best_error: 6.3742038293006456
best_error: 6.374203550085901
best_error: 6.358213230086961
best_error: 6.358212959380335
best_error: 6.310186645096413
best_error: 6.310186603015799
best_error: 6.28270944905073
best_error: 6.282709407142357
best_error: 6.277478346355132
best_error: 6.277478073520573
best_error: 6.251226381445888
best_error: 6.251226100768718
best_error: 6.2478653277854885
best_error: 6.247865285955147
best_error: 6.246221505058534
best_error: 6.2462212206202175
best_error: 6.245986723150915
best_error: 6.245986681326963
best_error: 6.245984082975031
best_error: 6.245983798505064
best_error: 6.244797527385693
best_error: 6.244797241546536
best_error: 6.243453392851323
best_error: 6.243453095629036
best_error: 6.243404689441204
best_error: 6.243404393209037
best_error: 6.243403601413551
best_error: 6.243403308769349
best_error: 6.243398565737328
best_error: 6.24339827127028
best_error: 6.243388468697971
best_error: 6.243388172466009
best_error: 6.24306199517955
best_error: 6.243061698021963
best_error: 6.242183162191713
best_error: 6.242183120481137
best_error: 6.2421680592187005
best_error: 6.242168017510879
best_error: 6.241887225092985
best_error: 6.241886926936996
best_error: 6.2413425087578105
best_error: 6.241342467208396
best_error: 6.240952414077732
best_error: 6.240952372611788
best_error: 6.240752869178016
best_error: 6.240752827524707
best_error: 6.240741968522693
best_error: 6.240741670222576
best_error: 6.239964216775418
best_error: 6.239964175185568
best_error: 6.2397718834911
best_error: 6.23977188204201
best_error: 6.239771843548954
best_error: 6.239371125450608
best_error: 6.239370826916478
best_error: 6.238780541098385
best_error: 6.238780499664367
best_error: 6.2383620511744535
best_error: 6.238362049977313
best_error: 6.238362011239278
best_error: 6.238127922272403
best_error: 6.238127623645418
best_error: 6.23763313925103
best_error: 6.237633097723136
best_error: 6.237329791823861
best_error: 6.237329750233307
best_error: 6.237307286055565
best_error: 6.2373069872622064
best_error: 6.236656882778162
best_error: 6.236656841256799
best_error: 6.2364270729733295
best_error: 6.236427031388848
best_error: 6.23637551300058
best_error: 6.236375214007462
best_error: 6.236004444934721
best_error: 6.236004403548469
best_error: 6.235831925691991
best_error: 6.235831884179525
best_error: 6.235742714542915
best_error: 6.235742713931694
best_error: 6.235742674619404
best_error: 6.235558564498434
best_error: 6.235558564007312
best_error: 6.235558524571745
best_error: 6.235490175059058
best_error: 6.235490174568742
best_error: 6.2354901351309735
best_error: 6.235343019534493
best_error: 6.235342720109182
best_error: 6.23514106003744
best_error: 6.235141059665297
best_error: 6.235141020094416
best_error: 6.235029745426702
best_error: 6.235029745039251
best_error: 6.235029705484708
best_error: 6.235006409143157
best_error: 6.235006408752657
best_error: 6.2350063692013835
best_error: 6.235004431945889
best_error: 6.235004130423684
best_error: 6.234990387919497
best_error: 6.2349903875730295
best_error: 6.234990347975033
best_error: 6.234912641644961
best_error: 6.234912641333437
best_error: 6.234912601699
best_error: 6.234878957729545
best_error: 6.234878654212469
best_error: 6.234598594888475
best_error: 6.234598594641118
best_error: 6.234598554945361
