ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.51986349827475
best_error: 25.51986324715579
best_error: 4.968534204054521
best_error: 4.968534203563504
best_error: 4.968424162298316
best_error: 4.968424162287047
best_error: 4.968424162190465
best_error: 4.967982275209452
best_error: 4.967982275198071
best_error: 4.967982275101259
best_error: 4.966186675288141
best_error: 4.9661866752762975
best_error: 4.9661866751785535
best_error: 4.958520066204498
best_error: 4.95852006619053
best_error: 4.958520066088828
best_error: 4.91701746232779
best_error: 4.917017462294146
best_error: 4.9170174621734075
best_error: 4.851586023173085
best_error: 4.85158602302903
best_error: 4.851586022932648
best_error: 4.341770668260309
best_error: 4.341770643306483
best_error: 3.8398989432358275
best_error: 3.839898861647991
best_error: 3.3829145704214936
best_error: 3.382914472618399
best_error: 2.89736343237879
best_error: 2.897363267296098
best_error: 2.5356148398024017
best_error: 2.5356148060811465
best_error: 2.5356147212630358
best_error: 2.4798511942253767
best_error: 2.4798511422753187
best_error: 2.479851072745607
best_error: 2.44890639445181
best_error: 2.4489063059479785
best_error: 2.345637743734287
best_error: 2.3456376733552413
best_error: 2.3432649941021158
best_error: 2.3432649915147494
best_error: 2.3432649840739983
best_error: 2.3286577390997736
best_error: 2.3286577181743824
best_error: 2.325610278935162
best_error: 2.3256102538984336
best_error: 2.311093176040282
best_error: 2.311093076816618
best_error: 2.2749413271834484
best_error: 2.274941248012553
best_error: 2.097623641336002
best_error: 2.0976236372094004
best_error: 2.097623582812898
best_error: 1.997751472311397
best_error: 1.9977512982422942
best_error: 1.970520156102555
best_error: 1.9705201484092931
best_error: 1.9705201366757106
best_error: 1.9689179392044596
best_error: 1.9689179099948309
best_error: 1.7980651031471195
best_error: 1.7980650985309417
best_error: 1.7980650979718078
best_error: 1.7854599622960832
best_error: 1.7854599596740963
best_error: 1.7854599572789072
best_error: 1.7384920382965736
best_error: 1.7384920375740307
best_error: 1.73849203390997
best_error: 1.6513681674751686
best_error: 1.6513680915417894
best_error: 1.6209774757600681
best_error: 1.6209774716378538
best_error: 1.6198326482590983
best_error: 1.6198326435335901
best_error: 1.6195716277554717
best_error: 1.619571561811585
best_error: 1.6192358474889053
best_error: 1.6192358230099604
best_error: 1.6177324034470089
best_error: 1.617732360035844
best_error: 1.6134395483404165
best_error: 1.6134395124200305
best_error: 1.6128334701840603
best_error: 1.6128334665120443
best_error: 1.6125448958500235
best_error: 1.6125448874097301
best_error: 1.6115776562433226
best_error: 1.6115776392874706
best_error: 1.610823854426756
best_error: 1.610823838198649
best_error: 1.6092555111400388
best_error: 1.6092554900680256
best_error: 1.6091006415488098
best_error: 1.6091006208496648
best_error: 1.6087539305005476
best_error: 1.6087539139392308
best_error: 1.6079767043190287
best_error: 1.6079766904078137
best_error: 1.607886684679135
best_error: 1.6078866726661531
best_error: 1.6076457637324935
best_error: 1.60764576264712
best_error: 1.6076078830188396
best_error: 1.6076078824854991
best_error: 1.6076078822760707
best_error: 1.6075298976518144
best_error: 1.6075298971323153
best_error: 1.6075298969104412
best_error: 1.606957882211672
best_error: 1.6069578820279984
best_error: 1.6069578787616208
best_error: 1.6055513239977646
best_error: 1.6055513127572443
best_error: 1.6021666415574232
best_error: 1.6021666394273655
best_error: 1.6021666203710645
best_error: 1.597062212375965
best_error: 1.5970622030280957
best_error: 1.597062185476798
best_error: 1.5848334346805684
best_error: 1.584833414932709
best_error: 1.5688479338984826
best_error: 1.5688478694173242
best_error: 1.5418963787726474
best_error: 1.5418963643668135
best_error: 1.5380910569483688
best_error: 1.5380910566725858
best_error: 1.53809105638187
best_error: 1.5380910542122919
best_error: 1.534755062401267
best_error: 1.5347550153447016
best_error: 1.533569807109892
best_error: 1.5335697646760889
best_error: 1.5329157646441676
best_error: 1.532915748550611
best_error: 1.5325941959292593
best_error: 1.532594195890666
best_error: 1.5325941953648496
best_error: 1.5325941952029953
best_error: 1.5325941950615785
best_error: 1.5325698315008147
best_error: 1.5325698309240363
best_error: 1.5325698307694418
best_error: 1.532535088060811
best_error: 1.532535087376228
best_error: 1.532535087319518
best_error: 1.532075010810789
best_error: 1.5320750084209995
best_error: 1.5311561310017276
best_error: 1.5311561262801099
best_error: 1.5311561227442994
best_error: 1.529285352120882
best_error: 1.5292853444311834
best_error: 1.5292853392835468
best_error: 1.5236877359703065
best_error: 1.5236877191636398
best_error: 1.5236877161811555
best_error: 1.518207761890893
best_error: 1.5182077432151033
best_error: 1.518207740658969
best_error: 1.514560477461828
best_error: 1.5145604670180226
best_error: 1.5145604486393902
best_error: 1.5088705306249937
best_error: 1.5088704529473733
best_error: 1.5088703159244208
best_error: 1.507501782069984
best_error: 1.5075017434645472
best_error: 1.505150809674296
best_error: 1.5051507553989496
best_error: 1.5051506500203826
best_error: 1.5042993548531132
best_error: 1.5042993136388028
best_error: 1.502174087002522
best_error: 1.5021740605665588
best_error: 1.5016519667735515
best_error: 1.501651946649514
best_error: 1.5012033460740093
best_error: 1.5012033440196517
best_error: 1.497756743628696
best_error: 1.4977566817780328
best_error: 1.4947756559282308
best_error: 1.4947755857997393
best_error: 1.4850124225642707
best_error: 1.4850123629988783
best_error: 1.4848401937138254
best_error: 1.4848401547158696
best_error: 1.4843064121757863
best_error: 1.4843064115423013
best_error: 1.4843064094432494
best_error: 1.4730275090114944
best_error: 1.4730274912890695
best_error: 1.4672068706741046
best_error: 1.4672068686723285
best_error: 1.467206851785206
best_error: 1.4660911589383856
best_error: 1.466091135994672
best_error: 1.4656708358972592
best_error: 1.465670817452382
best_error: 1.4639208792313836
best_error: 1.463920848382029
best_error: 1.4632509156534261
best_error: 1.4632509068118846
best_error: 1.462928830037089
best_error: 1.4629288172562591
best_error: 1.4625439242484872
best_error: 1.4625439081084783
best_error: 1.4625130864850002
best_error: 1.462513073037486
best_error: 1.4620919643432202
best_error: 1.4620919529611822
best_error: 1.461564833669938
best_error: 1.4615648303423643
best_error: 1.461464174502459
best_error: 1.4614641740912189
best_error: 1.4614411447065487
best_error: 1.461441143215017
best_error: 1.4614353609405075
best_error: 1.4614353585724422
best_error: 1.461432608318338
best_error: 1.461432607225997
best_error: 1.461429700444253
best_error: 1.4614297002882486
best_error: 1.4614251027873675
best_error: 1.4614251025850833
best_error: 1.4614220152313337
best_error: 1.4614220148863288
best_error: 1.4614150429409347
best_error: 1.4614150426573798
best_error: 1.461394861348105
best_error: 1.4613948608130878
best_error: 1.4613272421969392
best_error: 1.4613272413101703
best_error: 1.461081398417363
best_error: 1.461081394870551
best_error: 1.4607327313704204
best_error: 1.4607327268765125
best_error: 1.4574188862609727
best_error: 1.4574188861478456
best_error: 1.4574188858683892
best_error: 1.4545767515679469
best_error: 1.4545767338291433
best_error: 1.4532148628297332
best_error: 1.453214845623709
best_error: 1.4510963740183254
best_error: 1.4510963582246186
best_error: 1.4452690488935696
best_error: 1.4452689585066514
best_error: 1.4425106168109587
best_error: 1.44251055427309
best_error: 1.4388591760829907
best_error: 1.4388591548485712
best_error: 1.4377886114436726
best_error: 1.4377885700699975
best_error: 1.4355321703631778
best_error: 1.4355321568615924
best_error: 1.4354754094432673
best_error: 1.4354753974788672
best_error: 1.4354393096289315
best_error: 1.435439299008344
best_error: 1.435296660523812
best_error: 1.4352966588705167
best_error: 1.435290030496288
best_error: 1.4352900300053735
best_error: 1.4352863601048946
best_error: 1.4352863594388752
