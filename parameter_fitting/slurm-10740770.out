ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.065863029456667
best_error: 11.065863024614455
best_error: 7.788474043767455
best_error: 6.896694859528854
best_error: 6.896694419635248
best_error: 6.08662211483686
best_error: 6.0866220415134045
best_error: 6.080403851792023
best_error: 6.08040382115571
best_error: 6.076300095812984
best_error: 6.076300090273724
best_error: 6.071342514899041
best_error: 6.071342514899028
best_error: 6.071342511528045
best_error: 6.068847997034056
best_error: 6.068847997034043
best_error: 6.0688479934740585
best_error: 6.06111678948621
best_error: 6.0611167894862
best_error: 6.060747799824843
best_error: 6.060747799824838
best_error: 6.0467989068036685
best_error: 6.046798906803662
best_error: 6.04051127967385
best_error: 6.040511279673844
best_error: 5.996738512543966
best_error: 5.99673851254396
best_error: 5.795715083000534
best_error: 5.795715083000524
best_error: 5.729469598306297
best_error: 5.729469326328766
best_error: 5.692224693405849
best_error: 5.692224269300989
best_error: 5.012853198418431
best_error: 5.012853120005956
best_error: 5.012853024562317
best_error: 4.804100377691022
best_error: 4.804100199785331
best_error: 4.803182186128286
best_error: 4.803181999831086
best_error: 4.731191526639753
best_error: 4.7311914570944085
best_error: 4.731191447939954
best_error: 4.707832356031511
best_error: 4.707832356031501
best_error: 4.707832341361804
best_error: 4.7001619310897755
best_error: 4.700161931089768
best_error: 4.700161924942733
best_error: 4.698557912561246
best_error: 4.698557912561241
best_error: 4.698557907682305
best_error: 4.697086285542321
best_error: 4.697086268853446
best_error: 4.697086265741964
best_error: 4.6944453023833885
best_error: 4.6944452863242425
best_error: 4.694445284037996
best_error: 4.683931313094601
best_error: 4.683931313094596
best_error: 4.683931304951603
best_error: 4.653188807098707
best_error: 4.6531888070987
best_error: 4.644412045978991
best_error: 4.644412045978981
best_error: 4.635542425392483
best_error: 4.635542425392475
best_error: 4.587058854694953
best_error: 4.587058854694941
best_error: 4.52415642141747
best_error: 4.524156421417461
best_error: 4.483764633398379
best_error: 4.483764605773723
best_error: 4.466571865815439
best_error: 4.46657186581543
best_error: 4.465558396779484
best_error: 4.465558396597455
best_error: 4.465543159966373
best_error: 4.465543157875756
best_error: 4.46553008748842
best_error: 4.465530086021011
best_error: 4.465525190949542
best_error: 4.465525189905758
best_error: 4.465518909762298
best_error: 4.465518909170743
best_error: 4.465518651924931
best_error: 4.465518651332307
best_error: 4.465518403059595
best_error: 4.4655184024659365
best_error: 4.465518276557458
best_error: 4.465518276007344
best_error: 4.465518086125216
best_error: 4.465518085574278
best_error: 4.465517951780251
best_error: 4.465517951228739
best_error: 4.4655179280190325
best_error: 4.465517927467416
best_error: 4.465517911612505
best_error: 4.465517911060817
best_error: 4.465517787585051
best_error: 4.465517787585042
best_error: 4.4655174455576425
best_error: 4.4655174447543615
best_error: 4.465517300567182
best_error: 4.465517299669864
best_error: 4.465517079337281
best_error: 4.465517078204346
best_error: 4.465516975491538
best_error: 4.465516974517507
best_error: 4.4655168748897065
best_error: 4.465516873915303
best_error: 4.465516327881868
best_error: 4.465516326940005
best_error: 4.465516296247006
best_error: 4.46551629530502
best_error: 4.465516265786807
best_error: 4.465516264844702
best_error: 4.465516250617635
best_error: 4.4655162497599425
best_error: 4.465516196658302
best_error: 4.465516195800376
best_error: 4.4655161885124555
best_error: 4.4655161876544955
best_error: 4.465516183160002
best_error: 4.465516182302019
best_error: 4.4655161637448035
best_error: 4.465516162886735
best_error: 4.465516162600583
best_error: 4.4655161623977815
best_error: 4.465516162203561
best_error: 4.465516161543663
best_error: 4.465516161482479
