ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 92
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.38056889561834
best_error: 99.38056874037767
best_error: 15.228797857239407
best_error: 15.22879784679354
best_error: 15.221733195582676
best_error: 15.221733192357135
best_error: 15.220451859656729
best_error: 15.22045185661456
best_error: 15.21588137835344
best_error: 15.215881376048758
best_error: 15.208687286707923
best_error: 15.208687283139389
best_error: 15.203833611777238
best_error: 15.203833611762851
best_error: 15.203833611761679
best_error: 15.201701429979341
best_error: 15.201701428832177
best_error: 15.195744169636779
best_error: 15.195744169250094
best_error: 15.169702752172393
best_error: 15.169702752152663
best_error: 14.934470814255414
best_error: 14.934470814251934
best_error: 14.934470814128225
best_error: 14.60098420544797
best_error: 14.600984205417632
best_error: 14.600984202030599
best_error: 14.591711951773984
best_error: 14.591711947468172
best_error: 14.558732038784544
best_error: 14.558732037853366
best_error: 14.553091719861392
best_error: 14.553091716810641
best_error: 14.551403025554144
best_error: 14.551403022625578
best_error: 14.551042748510898
best_error: 14.551042746370051
best_error: 14.55065391587449
best_error: 14.550653914986984
best_error: 14.55018224629176
best_error: 14.55018224360558
best_error: 14.55012747120416
best_error: 14.550127470316532
best_error: 14.550108424921861
best_error: 14.550108422195992
best_error: 14.549858906837624
best_error: 14.549858904081724
best_error: 14.548920397465029
best_error: 14.548920396512115
best_error: 14.54506619838468
best_error: 14.545066197201834
best_error: 14.521231198999772
best_error: 14.521231196240532
best_error: 14.139298365931221
best_error: 14.139298365908964
best_error: 14.139298364113014
best_error: 14.13829019634907
best_error: 14.13829019477975
best_error: 14.138130971822026
best_error: 14.138130970235233
best_error: 14.138108936935312
best_error: 14.138108935268335
best_error: 14.128219861167329
best_error: 14.12821985955906
best_error: 14.090690280607756
best_error: 14.09069027905792
best_error: 14.090690278195343
best_error: 13.986012444862082
best_error: 13.986012443882377
best_error: 13.986012426828548
best_error: 13.740092537582205
best_error: 13.740092500552624
best_error: 13.634465797103504
best_error: 13.634465796975402
best_error: 13.634465794325573
best_error: 13.570729346707543
best_error: 13.570729342115243
best_error: 13.556462546102807
best_error: 13.556462540913403
best_error: 13.55646248353909
best_error: 13.541618376611638
best_error: 13.541618375619361
best_error: 13.541618372212625
best_error: 13.537763420830558
best_error: 13.537763417741456
best_error: 13.537763393375158
best_error: 13.53477227649934
best_error: 13.534772274925633
best_error: 13.534772271990889
best_error: 13.530726647444542
best_error: 13.530726644279241
best_error: 13.530726633145106
best_error: 13.526811386007184
best_error: 13.526811383023807
best_error: 13.526811372441255
best_error: 13.499927627424539
best_error: 13.499927625549415
best_error: 13.494860919926612
best_error: 13.494860918337057
best_error: 13.492528965072301
best_error: 13.49252896487666
best_error: 13.492528964003604
best_error: 13.492528963837415
best_error: 13.490380406930369
best_error: 13.490380406103018
best_error: 13.488721532102833
best_error: 13.488721531434031
best_error: 13.487900035574906
best_error: 13.487900035044685
best_error: 13.487900025310207
best_error: 13.487514451922838
best_error: 13.487514449872018
best_error: 13.487132872798242
best_error: 13.487132870875717
best_error: 13.485970547590128
best_error: 13.485970547071886
best_error: 13.483809220262634
best_error: 13.483809219748409
best_error: 13.474789541512951
best_error: 13.474789540861734
best_error: 13.472050774489711
best_error: 13.472050773545071
best_error: 13.455858657595146
best_error: 13.455858657592698
best_error: 13.455858657428017
best_error: 13.448245418721982
best_error: 13.448245416733917
best_error: 13.448245410408608
best_error: 13.442192944388774
best_error: 13.442192942256728
best_error: 13.395740742306426
best_error: 13.395740742304856
best_error: 13.395740742074143
best_error: 13.385395184745503
best_error: 13.385395184744183
best_error: 13.385395184543967
best_error: 13.366203719997987
best_error: 13.36620371942709
best_error: 13.36620370725701
best_error: 13.36514911203187
best_error: 13.365149111511979
best_error: 13.365149100723313
best_error: 13.363691971973104
best_error: 13.363691971927636
best_error: 13.363691969614703
best_error: 13.363008969433007
best_error: 13.363008967969627
best_error: 13.36106565857538
best_error: 13.36106565850039
best_error: 13.361065658475631
best_error: 13.359301271691205
best_error: 13.359301266412603
best_error: 13.359285172682796
best_error: 13.359285172483595
best_error: 13.359059403785366
best_error: 13.359059403564933
best_error: 13.359016458738832
best_error: 13.359016458450238
best_error: 13.358672064730454
best_error: 13.358672064472525
best_error: 13.357659963439252
best_error: 13.357659963191411
best_error: 13.348966385313673
best_error: 13.34896637594258
best_error: 13.329620568087694
best_error: 13.32962056786105
best_error: 13.27934796397343
best_error: 13.279347963714466
best_error: 13.279347963635448
best_error: 13.279271647085762
best_error: 13.279271647085704
best_error: 13.279271647079376
best_error: 13.279271646748361
best_error: 13.27906276100124
best_error: 13.279062759027262
best_error: 13.279062758303308
best_error: 13.279024575717855
best_error: 13.279024575717798
best_error: 13.279024575711558
best_error: 13.279024575381992
