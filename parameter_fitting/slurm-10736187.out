ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.009245605950687
best_error: 11.009245599861497
best_error: 10.698439244908531
best_error: 10.698439205257674
best_error: 7.2395150477377515
best_error: 7.239514709194088
best_error: 6.308748376424397
best_error: 6.308748191849079
best_error: 6.252396008687998
best_error: 6.252396008687963
best_error: 6.252396005739391
best_error: 6.244845520914945
best_error: 6.2448455209149065
best_error: 6.24484551761705
best_error: 6.240545193894706
best_error: 6.240545193894669
best_error: 6.240545190385069
best_error: 6.238077273408355
best_error: 6.23807727340832
best_error: 6.238077269749776
best_error: 6.2374399275593575
best_error: 6.237439862769586
best_error: 6.237379180936305
best_error: 6.237379180936267
best_error: 6.23737917723656
best_error: 6.237345060327856
best_error: 6.2373450603278195
best_error: 6.2373450566280955
best_error: 6.237336789431501
best_error: 6.23733672473214
best_error: 6.23733341210877
best_error: 6.2373334121087325
best_error: 6.237333408409003
best_error: 6.237333175558013
best_error: 6.237333175557977
best_error: 6.237333171858255
best_error: 6.237333126135123
best_error: 6.237333126135083
best_error: 6.237333122435354
best_error: 6.237333121471552
best_error: 6.237333121471504
best_error: 6.2373331139090835
best_error: 6.237236794057127
best_error: 6.237236729353171
best_error: 6.236349800696237
best_error: 6.236349736029126
best_error: 6.232685260097734
best_error: 6.232685195705955
best_error: 6.2160259934210025
best_error: 6.216025931175642
best_error: 6.136204467316668
best_error: 6.136204467316631
best_error: 6.13620445970062
best_error: 6.116905997069425
best_error: 6.116905997069398
best_error: 6.116905989359677
best_error: 6.0821790162473
best_error: 6.082179016247278
best_error: 6.081758602148194
best_error: 6.0817586021481675
best_error: 6.078586837508455
best_error: 6.078586837508431
best_error: 6.070713497533039
best_error: 6.070713497532999
best_error: 6.070713490413203
best_error: 5.977797128279013
best_error: 5.977797128278988
best_error: 5.836513501847231
best_error: 5.8365135018471985
best_error: 5.812237522525062
best_error: 5.812237522525032
best_error: 5.717708662314742
best_error: 5.717708662314704
best_error: 5.127913255528901
best_error: 5.127913255528893
best_error: 5.049419447592241
best_error: 5.049419369454741
best_error: 5.049419336573269
best_error: 4.839338582550804
best_error: 4.839338582550779
best_error: 4.839338574367535
best_error: 4.835670481323092
best_error: 4.835670481323076
best_error: 4.835670472884426
best_error: 4.834921299007919
best_error: 4.8349212080110116
best_error: 4.823361519276884
best_error: 4.823361517541386
best_error: 4.82336150986595
best_error: 4.823351162072843
best_error: 4.823351067052998
best_error: 4.79480765145631
best_error: 4.794807651456253
best_error: 4.794807649756198
best_error: 4.7948075808933375
best_error: 4.718862761212187
best_error: 4.7188627121467075
best_error: 4.718862705514343
best_error: 4.711843867477725
best_error: 4.711843867477686
best_error: 4.711843826991999
best_error: 4.644115564734428
best_error: 4.644115564734381
best_error: 4.644115552749091
best_error: 4.644115534048632
best_error: 4.635418614122308
best_error: 4.635418511928249
best_error: 4.609007271464211
best_error: 4.609007271464169
best_error: 4.609007266803821
best_error: 4.604885133801913
best_error: 4.604885084487055
best_error: 4.604246192816456
best_error: 4.604246192816427
best_error: 4.604024836141195
best_error: 4.604024782404767
best_error: 4.60388388477528
best_error: 4.60388388477526
best_error: 4.60368327650696
best_error: 4.6036832765069295
best_error: 4.603676199054513
best_error: 4.60367614476715
best_error: 4.603675129242985
best_error: 4.603675129242957
best_error: 4.603668629740868
best_error: 4.603668629740837
best_error: 4.603667110792728
best_error: 4.603667056146739
best_error: 4.603664116169696
best_error: 4.603664061423521
best_error: 4.603662116727696
best_error: 4.603662061870074
best_error: 4.603661522962963
best_error: 4.603661522962926
best_error: 4.6036613585078525
best_error: 4.603661303649079
best_error: 4.603661121346959
best_error: 4.603661121346933
best_error: 4.60366111437938
best_error: 4.603661056521675
best_error: 4.603661056521643
best_error: 4.603661048287645
best_error: 4.603661043433223
best_error: 4.603661041928997
