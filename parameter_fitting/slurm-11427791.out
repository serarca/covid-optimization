ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.29880079063961
best_error: 24.298800389057195
best_error: 4.821436465642708
best_error: 4.821436464727665
best_error: 4.821221664110534
best_error: 4.821221664104063
best_error: 4.821221664079239
best_error: 4.820359015007478
best_error: 4.820359015000894
best_error: 4.820359014976045
best_error: 4.816848599522686
best_error: 4.816848599515624
best_error: 4.816848599490692
best_error: 4.801688044859012
best_error: 4.801688044849393
best_error: 4.80168804482444
best_error: 4.710750099443251
best_error: 4.710750099376371
best_error: 4.6382146330753855
best_error: 4.638214632802496
best_error: 4.5104779075435
best_error: 4.5104779059250575
best_error: 4.466413762218225
best_error: 4.466413759715042
best_error: 3.486341511502869
best_error: 3.486341362561551
best_error: 3.3179822517324657
best_error: 3.3179822089436226
best_error: 3.2067829148678815
best_error: 3.206782853145007
best_error: 2.99419403366083
best_error: 2.99419392719319
best_error: 2.9735718490683944
best_error: 2.9735716582840244
best_error: 2.9642783037023412
best_error: 2.9642781879231497
best_error: 2.910276210105749
best_error: 2.91027606513201
best_error: 2.9091594686904023
best_error: 2.90915931316667
best_error: 2.799316403889195
best_error: 2.7993162770112754
best_error: 2.608316022488786
best_error: 2.6083158347517847
best_error: 2.5532682266325186
best_error: 2.553268192571768
best_error: 2.5474000607890126
best_error: 2.5474000389988136
best_error: 2.543770986836014
best_error: 2.543770983550365
best_error: 2.5437709759631475
best_error: 2.5412854416103006
best_error: 2.541285439271135
best_error: 2.5412854307092534
best_error: 2.5380334689849064
best_error: 2.5380333909636454
best_error: 2.5340859372507776
best_error: 2.5340859267618487
best_error: 2.534085926331205
best_error: 2.529654522716535
best_error: 2.52965444250938
best_error: 2.3671010797584016
best_error: 2.3671010382588396
best_error: 1.8225879745589537
best_error: 1.8225877967669866
best_error: 1.7571059339242112
best_error: 1.757105931305058
best_error: 1.7571059053844837
best_error: 1.73231251655231
best_error: 1.7323124283576246
best_error: 1.6987174014941884
best_error: 1.6987172943615738
best_error: 1.6700635826376586
best_error: 1.6700634622541213
best_error: 1.6571419347145824
best_error: 1.6571418154902449
best_error: 1.654714496160993
best_error: 1.654714417210426
best_error: 1.6538881020269
best_error: 1.6538880885990728
best_error: 1.6538880838293366
best_error: 1.6464809806459852
best_error: 1.6464809770782847
best_error: 1.644635419425856
best_error: 1.644635405633781
best_error: 1.6432943337625412
best_error: 1.6432943213309563
best_error: 1.641487133321802
best_error: 1.6414871324547087
best_error: 1.6414871324106146
best_error: 1.6322178659338125
best_error: 1.6322178305509465
best_error: 1.6292548293519704
best_error: 1.6292548112005611
best_error: 1.6289230952650835
best_error: 1.6289230912188604
best_error: 1.6227375061518703
best_error: 1.6227374991113754
best_error: 1.6223694442273073
best_error: 1.6223694360205387
best_error: 1.6222172399678056
best_error: 1.6222172369266101
best_error: 1.6222012495084215
best_error: 1.6222012461702633
best_error: 1.6221658161348298
best_error: 1.622165811707367
best_error: 1.6221187960275238
best_error: 1.6221187878135666
best_error: 1.6220090617642586
best_error: 1.6220090511170153
best_error: 1.6212969665610715
best_error: 1.6212969509472723
best_error: 1.6197746803262008
best_error: 1.6197746411577256
best_error: 1.6177669302904198
best_error: 1.617766863691271
best_error: 1.6165998390409348
best_error: 1.6165997609174627
best_error: 1.6152046861686673
best_error: 1.6152046226627903
best_error: 1.613323844657832
best_error: 1.613323829095826
best_error: 1.6131513230080805
best_error: 1.6131513221143836
best_error: 1.6131083535041382
best_error: 1.6131083528240269
best_error: 1.613108352681872
best_error: 1.6130682764902722
best_error: 1.6130682758349806
best_error: 1.6130682756166814
best_error: 1.612917254833502
best_error: 1.61291725410369
best_error: 1.612917253920232
best_error: 1.6125778579154573
best_error: 1.612577857911252
best_error: 1.6125778572641893
best_error: 1.6125778568628988
best_error: 1.612177295395619
best_error: 1.6121772901061615
best_error: 1.6115406034084772
best_error: 1.6115405863285412
best_error: 1.609950996797484
best_error: 1.6099509646833554
best_error: 1.606022891627945
best_error: 1.606022838684689
best_error: 1.6035195881133897
best_error: 1.6035195635556319
best_error: 1.6028753006119631
best_error: 1.6028753005153638
best_error: 1.6028752998746756
best_error: 1.6028752994135738
best_error: 1.6027496260222693
best_error: 1.6027496260166874
best_error: 1.6027496259519234
best_error: 1.6027496251848625
best_error: 1.6027496250722442
best_error: 1.6027496248735367
best_error: 1.6016178927224547
best_error: 1.6016178919607345
best_error: 1.6016178917636446
best_error: 1.6016178916765782
best_error: 1.6013273067826281
best_error: 1.6013273067784763
best_error: 1.601327306718688
best_error: 1.6013273059571294
best_error: 1.6013273057291604
best_error: 1.5991204407155601
best_error: 1.5991204382453046
best_error: 1.5977978710776153
best_error: 1.5977978568852995
best_error: 1.5968215459233825
best_error: 1.5968215430149717
best_error: 1.5954091598717388
best_error: 1.5954091302136009
best_error: 1.594226511381935
best_error: 1.5942264745951584
best_error: 1.5939422990880165
best_error: 1.5939422985660336
best_error: 1.5939422844842555
best_error: 1.5939173621207623
best_error: 1.5939173429543436
best_error: 1.5939163294304666
best_error: 1.593916309397989
best_error: 1.593916227614622
best_error: 1.5939162074422466
best_error: 1.593913080911377
best_error: 1.5939130591858455
best_error: 1.593821898084974
best_error: 1.5938218968226905
best_error: 1.5938218876156838
best_error: 1.5928219533664292
best_error: 1.5928219498938885
best_error: 1.5926650368404733
best_error: 1.5926650348379991
best_error: 1.5926072316061368
best_error: 1.592607230871459
best_error: 1.5926072307906667
best_error: 1.5924677571438273
best_error: 1.5924677564751297
best_error: 1.5924677563778238
best_error: 1.5922578769644469
best_error: 1.592257876960624
best_error: 1.5922578769488078
best_error: 1.5922578762701856
best_error: 1.5917044867551726
best_error: 1.591704476286467
best_error: 1.5912506253884922
best_error: 1.5912506229982046
best_error: 1.5906955142601218
best_error: 1.590695513672024
best_error: 1.5906503836370762
best_error: 1.5906503836368395
best_error: 1.5906503836024941
best_error: 1.5901591398460864
best_error: 1.5901591187901802
best_error: 1.589802087368765
best_error: 1.589802084238135
best_error: 1.589490919995272
best_error: 1.589490914936711
best_error: 1.5892054857979272
best_error: 1.589205483740851
best_error: 1.5891761425483606
best_error: 1.5891761418881665
best_error: 1.5891733136400004
best_error: 1.5891733136156971
best_error: 1.589173313550714
best_error: 1.5891694837157442
best_error: 1.5891694811685424
best_error: 1.5891660495604032
best_error: 1.5891660465502462
best_error: 1.5891550034617754
best_error: 1.5891549973790529
best_error: 1.5890880406918577
best_error: 1.5890880273601113
best_error: 1.5889591160465597
best_error: 1.5889590968465255
best_error: 1.5885336565790922
best_error: 1.5885336185139292
best_error: 1.5879840122687678
best_error: 1.5879839778374727
best_error: 1.5874068921820188
best_error: 1.587406888491873
best_error: 1.5873001992337443
best_error: 1.5873001981579338
best_error: 1.5871533693537194
best_error: 1.5871533598020398
best_error: 1.5870983178476832
best_error: 1.5870983107405356
best_error: 1.5869245037084188
best_error: 1.5869245025719905
best_error: 1.5867217027316554
best_error: 1.5867216954485004
best_error: 1.5863522099674818
best_error: 1.5863522033911186
best_error: 1.5860652781446598
best_error: 1.5860652772431356
best_error: 1.5855134850124153
best_error: 1.5855134819149403
best_error: 1.584580879703251
best_error: 1.5845807770273483
best_error: 1.5818424462449945
best_error: 1.581842424176709
best_error: 1.5816051106671256
best_error: 1.5816050981936567
best_error: 1.5814221838044449
best_error: 1.5814221827763586
best_error: 1.5814154093245008
best_error: 1.5814154088558348
best_error: 1.5814133489901239
best_error: 1.5814133486258373
best_error: 1.5814132347495318
best_error: 1.581413234728572
best_error: 1.5814132346405887
