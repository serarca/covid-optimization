ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.08176050302369
best_error: 101.0817603692401
best_error: 101.08176034394991
best_error: 17.429069881807614
best_error: 17.429069881800885
best_error: 17.42906986982573
best_error: 17.416690375821705
best_error: 17.416690363505282
best_error: 17.36356195492105
best_error: 17.363561941129802
best_error: 17.06912645332778
best_error: 17.06912642970433
best_error: 12.274522732038609
best_error: 12.274522700531532
best_error: 12.274522698312941
best_error: 11.323352676069115
best_error: 11.323352653050012
best_error: 11.323352643731731
best_error: 11.319017878329003
best_error: 11.319017853298032
best_error: 11.319017850098207
best_error: 11.158284566342541
best_error: 11.15828454146654
best_error: 10.896796246800113
best_error: 10.8967962393037
best_error: 10.89679622211416
best_error: 10.830435561429772
best_error: 10.830435540650267
best_error: 10.830435536777395
best_error: 10.299601591982551
best_error: 10.299601574399851
best_error: 10.299601571733497
best_error: 9.54512134235801
best_error: 9.545121340304588
best_error: 9.545121339930468
best_error: 9.545121337918228
best_error: 9.545121337455964
best_error: 9.545121328568882
best_error: 9.427641265446926
best_error: 9.427641259848222
best_error: 9.427641251839322
best_error: 9.382632024122223
best_error: 9.382632016436059
best_error: 9.382632010464349
best_error: 9.321651349136037
best_error: 9.32165133257483
best_error: 9.217407131481389
best_error: 9.217407120524033
best_error: 9.217407118049179
best_error: 9.122305023861282
best_error: 9.122305008821439
best_error: 9.076955985632909
best_error: 9.076955981917585
best_error: 9.076955894773018
best_error: 9.065662699066927
best_error: 9.065662693166908
best_error: 9.065662668382178
best_error: 9.065623662465681
best_error: 9.065623655599593
best_error: 9.065623648905923
best_error: 9.063625516898538
best_error: 9.063625510336303
best_error: 9.0636255034743
best_error: 9.061086086131706
best_error: 9.061086079697388
best_error: 9.061086072737421
best_error: 9.041741131202393
best_error: 9.041741126838723
best_error: 9.041741064554078
best_error: 8.979877037072258
best_error: 8.979877033188279
best_error: 8.979876968511503
best_error: 8.919635537518637
best_error: 8.919635526797958
best_error: 8.919635525728873
best_error: 8.918281153880855
best_error: 8.91828096650929
best_error: 8.873793910631914
best_error: 8.873793516055217
best_error: 8.810453124759244
best_error: 8.81045292475559
best_error: 8.807756484687202
best_error: 8.80775628637646
best_error: 8.803460494345085
best_error: 8.803460293139745
best_error: 8.79721884161497
best_error: 8.797218645233976
best_error: 8.761602155502048
best_error: 8.761602144231121
best_error: 8.759752055484572
best_error: 8.759752044214398
best_error: 8.754837298134568
best_error: 8.754837286207438
best_error: 8.754137070293865
best_error: 8.754137058395461
best_error: 8.753675498370722
best_error: 8.753675486489882
best_error: 8.753380602773818
best_error: 8.753380590905255
best_error: 8.753172151245217
best_error: 8.753172139385342
best_error: 8.753020762474105
best_error: 8.75302075062054
best_error: 8.752912088195307
best_error: 8.752912076346277
best_error: 8.75284185436058
best_error: 8.752841842514474
best_error: 8.752807533295337
best_error: 8.752807521450382
best_error: 8.75278698563775
best_error: 8.752786973793484
best_error: 8.75277462931375
best_error: 8.752774617469889
best_error: 8.752767157556288
best_error: 8.75276714571268
best_error: 8.75276260877509
best_error: 8.752762596931642
best_error: 8.752759817717118
best_error: 8.752759805873762
best_error: 8.752758091496094
best_error: 8.752758079652795
best_error: 8.752756072754643
best_error: 8.752756060911407
best_error: 8.752756001866961
best_error: 8.752755508544137
best_error: 8.752755496700924
best_error: 8.75275548803598
best_error: 8.752755370250906
best_error: 8.75275535840768
best_error: 8.752755336549104
best_error: 8.752755307660983
best_error: 8.752755295817764
best_error: 8.752755293375813
best_error: 8.752755293375808
best_error: 8.752755293375667
best_error: 8.752755291158596
best_error: 8.752755289018399
best_error: 8.75275528738091
best_error: 8.752755284532661
best_error: 8.752755283550723
