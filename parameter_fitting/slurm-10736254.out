ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.376568331835514
best_error: 8.376568293337836
best_error: 8.239129545966676
best_error: 8.239129496851778
best_error: 3.733364014082175
best_error: 3.7333638464756285
best_error: 3.713907808408026
best_error: 3.713907757877409
best_error: 3.69373591041722
best_error: 3.693735870242744
best_error: 3.2974182583827685
best_error: 3.2974182583736615
best_error: 3.29741824671256
best_error: 2.997239990412588
best_error: 2.997239801610097
best_error: 2.9216582344817303
best_error: 2.921658234413529
best_error: 2.829697414073665
best_error: 2.8296972587054476
best_error: 2.7892829484743222
best_error: 2.789282908309081
best_error: 2.7864908437756726
best_error: 2.786490843728796
best_error: 2.7864908432670212
best_error: 2.7592000130883383
best_error: 2.759200013057447
best_error: 2.7592000052013126
best_error: 2.7434366455951658
best_error: 2.7434366455492656
best_error: 2.743436644822282
best_error: 2.7362350098973764
best_error: 2.736235009867235
best_error: 2.736235001292429
best_error: 2.7303966455845283
best_error: 2.7303966405694515
best_error: 2.730396636635505
best_error: 2.7186987612871434
best_error: 2.718698761244778
best_error: 2.7186987600001027
best_error: 2.709773900232747
best_error: 2.7097739001797607
best_error: 2.7031710636441426
best_error: 2.703171063591084
best_error: 2.689439998360629
best_error: 2.6894399983210038
best_error: 2.689439996518362
best_error: 2.667590616922999
best_error: 2.667590616885537
best_error: 2.6675906145192134
best_error: 2.6434924349633926
best_error: 2.6434924349205042
best_error: 2.643492423273031
best_error: 2.6267981378942094
best_error: 2.6267980139423077
best_error: 2.6235147709878226
best_error: 2.6235147517502826
best_error: 2.623331025233865
best_error: 2.6233310251907325
best_error: 2.6232852321648825
best_error: 2.623285084137025
best_error: 2.621827868225648
best_error: 2.621827837540299
best_error: 2.6217890752336337
best_error: 2.6217890430912028
best_error: 2.6215452878407026
best_error: 2.621545287799257
best_error: 2.621374034171162
best_error: 2.6213740009361493
best_error: 2.6211427968898624
best_error: 2.621142762927412
best_error: 2.6211370927999056
best_error: 2.6211370588366796
best_error: 2.6211345683357345
best_error: 2.6211345682942495
best_error: 2.6211339980586894
best_error: 2.6211339640950335
best_error: 2.6211337986786627
best_error: 2.6211337647149904
best_error: 2.6211337623961155
best_error: 2.6211337623546194
best_error: 2.621133758093139
best_error: 2.6211337542298065
best_error: 2.621133754200909
best_error: 2.620828270183272
best_error: 2.6208282699913505
best_error: 2.6204727156542353
best_error: 2.6204726820897286
best_error: 2.620472670428197
best_error: 2.620472657346572
best_error: 2.620472623782069
best_error: 2.620472470761995
best_error: 2.620472437197471
best_error: 2.6204717244225058
best_error: 2.6204716908579098
best_error: 2.6204687390458106
best_error: 2.6204687054809073
best_error: 2.6204682908739314
best_error: 2.620468257308988
best_error: 2.6204681867696507
best_error: 2.6204681532046936
best_error: 2.6204681215939543
best_error: 2.6204681215509757
best_error: 2.6204681160414993
best_error: 2.620468111504846
best_error: 2.6204681114618658
best_error: 2.6204681059523898
best_error: 2.6204681020589
best_error: 2.6204681020159213
best_error: 2.6204681012205304
best_error: 2.620468101118237
best_error: 2.6204681010752617
best_error: 2.6204680994200453
best_error: 2.62046809735558
best_error: 2.6204680973126067
best_error: 2.6204680922180943
best_error: 2.6204680823048148
best_error: 2.62046808226184
best_error: 2.620468076752347
best_error: 2.62046802209949
best_error: 2.620468009637472
best_error: 2.6204679589905426
best_error: 2.6204679510844215
best_error: 2.6204677065315396
best_error: 2.6204677064885655
best_error: 2.6204677009788933
best_error: 2.6204667091914255
best_error: 2.620466488968414
best_error: 2.6204664889252784
best_error: 2.620466483413402
best_error: 2.620465693550381
best_error: 2.6204656596053377
best_error: 2.6204626339528803
best_error: 2.6204626000048474
best_error: 2.620450316993415
best_error: 2.620450283033385
best_error: 2.620405439662968
best_error: 2.620405404663038
best_error: 2.620372061962617
best_error: 2.620372051869082
best_error: 2.6203588160471565
best_error: 2.6203587781217843
best_error: 2.6203582754277264
best_error: 2.620358237243761
best_error: 2.6203582229343687
best_error: 2.6203581847496493
best_error: 2.6203581797967503
best_error: 2.620358175542374
best_error: 2.620358175492267
best_error: 2.6203581754922665
