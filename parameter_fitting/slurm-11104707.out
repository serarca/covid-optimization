ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.73740202050163
best_error: 96.73740188187296
best_error: 96.73740179199218
best_error: 15.03720632265507
best_error: 15.037206322643925
best_error: 15.03720630269595
best_error: 14.997276818841604
best_error: 14.997276798194843
best_error: 14.824244833401327
best_error: 14.824244810864435
best_error: 14.007052175886313
best_error: 14.0070521439732
best_error: 13.908821525093028
best_error: 13.908821490293834
best_error: 13.651384694729723
best_error: 13.651384661904013
best_error: 12.980357053653732
best_error: 12.980357030661985
best_error: 12.980357030132863
best_error: 12.96917309882139
best_error: 12.969173071470449
best_error: 12.956870434371718
best_error: 12.956870403674579
best_error: 12.941390536061324
best_error: 12.941390501989476
best_error: 12.91881546377671
best_error: 12.918815434546282
best_error: 12.87347691422774
best_error: 12.873476882287479
best_error: 12.293823056924577
best_error: 12.293823053852464
best_error: 11.322534887756609
best_error: 11.32253486535428
best_error: 10.873097139599219
best_error: 10.873097105401179
best_error: 10.873097093749418
best_error: 10.459299915399983
best_error: 10.459299871436528
best_error: 8.832761701709401
best_error: 8.832761699597544
best_error: 8.832761699536618
best_error: 8.774798142419332
best_error: 8.774798106749273
best_error: 8.607437893077714
best_error: 8.60743752702713
best_error: 8.421806156212394
best_error: 8.421806060493063
best_error: 8.42142138761503
best_error: 8.421421299350637
best_error: 8.402058358801874
best_error: 8.402058328592572
best_error: 8.364156977071463
best_error: 8.364156876645199
best_error: 8.364056186267575
best_error: 8.36405616466399
best_error: 8.36326071356226
best_error: 8.363260611923115
best_error: 8.363244044034293
best_error: 8.363243942393233
best_error: 8.363242635839018
best_error: 8.36324261425988
best_error: 8.362805262513554
best_error: 8.362805161919328
best_error: 8.36144190210834
best_error: 8.361441879821964
best_error: 8.357123474382258
best_error: 8.357123450489711
best_error: 8.352490841043982
best_error: 8.352490816731176
best_error: 8.333071779373407
best_error: 8.333071755163973
best_error: 8.254506274400164
best_error: 8.25450623963814
best_error: 8.25450623169808
best_error: 8.169163562218229
best_error: 8.16916351646601
best_error: 8.169163490942543
best_error: 8.142089531392404
best_error: 8.142089496801614
best_error: 8.142089482246835
best_error: 8.07252435798195
best_error: 8.072524354763349
best_error: 8.07252435184867
best_error: 8.072524344751827
best_error: 8.072524324914491
best_error: 7.9976736861647915
best_error: 7.997673667735633
best_error: 7.9976736203944
best_error: 7.959902652999576
best_error: 7.959902649425129
best_error: 7.959902638851598
best_error: 7.959902620876468
best_error: 7.862236735940606
best_error: 7.862236717057309
best_error: 7.86223668495642
best_error: 7.750117302409903
best_error: 7.750117299120406
best_error: 7.750117297686024
best_error: 7.750117262321692
best_error: 7.7501172304078105
best_error: 7.579793784892956
best_error: 7.579793765801477
best_error: 7.579793715453645
best_error: 7.370028662129027
best_error: 7.3700286475504075
best_error: 7.370028596625186
best_error: 7.284592503283492
best_error: 7.284592352256788
best_error: 7.249745383810929
best_error: 7.249745381734563
best_error: 7.249745314318865
best_error: 7.242409783153934
best_error: 7.242409577503708
best_error: 7.146539762608827
best_error: 7.1465397484757105
best_error: 7.146539744332496
best_error: 7.146539741525183
best_error: 7.146539733944245
best_error: 7.120590925974333
best_error: 7.120590827208205
best_error: 7.0901531564786415
best_error: 7.090153074617788
best_error: 7.078374027702218
best_error: 7.078373933068832
best_error: 7.071383977451648
best_error: 7.071383880221064
best_error: 7.067563645092353
best_error: 7.067563543486809
best_error: 7.064576131730667
best_error: 7.064576030086805
best_error: 7.06423098328111
best_error: 7.0642309510967225
best_error: 7.064230951008956
best_error: 7.064230946541596
best_error: 7.064183694630392
best_error: 7.064183675279866
best_error: 7.06418361106095
best_error: 7.063085780433827
best_error: 7.063085748003614
best_error: 7.063085743575624
best_error: 7.061552591020787
best_error: 7.061552558231831
best_error: 7.061552553989294
best_error: 7.061328597324804
best_error: 7.061328564471035
best_error: 7.061328560261962
best_error: 7.061180821093495
best_error: 7.061180788196993
best_error: 7.061180784009993
best_error: 7.061111001913924
best_error: 7.0611109689972125
best_error: 7.061110964820637
best_error: 7.06106006857595
best_error: 7.061060035644522
best_error: 7.061060031475558
best_error: 7.061036963386991
best_error: 7.061036930448879
best_error: 7.06103692628337
best_error: 7.061035288122492
best_error: 7.061035255183882
best_error: 7.0610352510186205
best_error: 7.061035168386544
best_error: 7.06103514912326
best_error: 7.061035084877518
best_error: 7.058594962803599
best_error: 7.058594882390265
best_error: 7.056921745957003
best_error: 7.056921731666448
best_error: 7.056921722735255
best_error: 7.056921720691237
best_error: 7.052424356756517
best_error: 7.052424346220885
best_error: 7.05242434348396
best_error: 7.042787331823377
best_error: 7.042787320826055
best_error: 7.042787316661604
best_error: 7.030083493374272
best_error: 7.03008348441873
best_error: 7.030083477835284
best_error: 7.030083458412962
best_error: 7.029549000085508
best_error: 7.0295489881131505
best_error: 7.02954898566839
best_error: 7.029548983058966
best_error: 7.024690298928791
best_error: 7.024690150304691
best_error: 7.023058974251932
best_error: 7.023058821130385
best_error: 7.021469287459976
best_error: 7.021469131461951
best_error: 7.0199277646091325
best_error: 7.019927604481104
best_error: 7.019668155075754
best_error: 7.019667992477256
best_error: 7.0196386318335735
best_error: 7.019638381846205
best_error: 7.01023953843253
best_error: 7.010239488657959
