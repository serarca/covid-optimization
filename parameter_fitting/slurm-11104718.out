ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.45838290495064
best_error: 96.45838278743636
best_error: 96.45838277211001
best_error: 14.559597179912254
best_error: 14.559597179900985
best_error: 14.559597155808067
best_error: 14.494278374512309
best_error: 14.49427834836787
best_error: 14.16652469788084
best_error: 14.166524659813877
best_error: 11.472258204280418
best_error: 11.47225820028073
best_error: 11.472258198234886
best_error: 11.472258032095514
best_error: 11.371072134876208
best_error: 11.371072117171785
best_error: 11.358748488434605
best_error: 11.358748475661733
best_error: 11.23307190201061
best_error: 11.233071894233387
best_error: 11.233071798492318
best_error: 11.107703352973768
best_error: 11.107703347017504
best_error: 11.107703344306133
best_error: 10.973092439974927
best_error: 10.973092439974913
best_error: 10.973092439624175
best_error: 10.328870983456575
best_error: 10.328870636425567
best_error: 9.578576051729076
best_error: 9.57857605172882
best_error: 9.578576050685866
best_error: 9.332361506196905
best_error: 9.33236150619639
best_error: 9.332361504415651
best_error: 8.665310176917492
best_error: 8.665310176915048
best_error: 8.665310172943629
best_error: 8.341630957920085
best_error: 8.341630948568069
best_error: 7.7416072534326235
best_error: 7.741606937210597
best_error: 7.697793766172605
best_error: 7.697793082788511
best_error: 7.310954409903543
best_error: 7.3109537046238415
best_error: 7.102577342421925
best_error: 7.102577308580022
best_error: 7.102576773132377
best_error: 6.673307113078036
best_error: 6.673307087825777
best_error: 6.673307065996876
best_error: 6.6559250613150125
best_error: 6.655924712673461
best_error: 6.6168518232379
best_error: 6.61685180376636
best_error: 6.616851798052442
best_error: 6.61685179419604
best_error: 6.616814355893208
best_error: 6.6168140321730595
best_error: 6.550328157726125
best_error: 6.5503278711310795
best_error: 6.39478844268262
best_error: 6.39478842125213
best_error: 6.394788415810953
best_error: 6.394788353214391
best_error: 6.210651013197858
best_error: 6.210651003839445
best_error: 6.1911755831927335
best_error: 6.191175335386947
best_error: 6.17790210428908
best_error: 6.177901856221137
best_error: 6.176603438519383
best_error: 6.176603428132486
best_error: 6.156455447856207
best_error: 6.156455438897641
best_error: 6.135213492641173
best_error: 6.135213487245387
best_error: 6.135213482099802
best_error: 6.128929317001695
best_error: 6.12892930698476
best_error: 6.128929306191054
best_error: 6.1142364167043155
best_error: 6.114236410957123
best_error: 6.114236406492351
best_error: 6.08113781976917
best_error: 6.081137814236078
best_error: 6.081137814118786
best_error: 6.079333348608438
best_error: 6.079333059436639
best_error: 6.0672249924344825
best_error: 6.067224723298688
best_error: 6.05943545897502
best_error: 6.059435449057551
best_error: 6.050177056589469
best_error: 6.050177047177456
best_error: 6.0469410870785865
best_error: 6.046940861508901
best_error: 6.046363530155792
best_error: 6.0463635203001305
best_error: 6.046363477424689
best_error: 6.045193786670116
best_error: 6.04519356943101
best_error: 6.042621720936937
best_error: 6.042621711228872
best_error: 6.042621679072397
best_error: 6.04222458152618
best_error: 6.042224571988935
best_error: 6.042224541575142
best_error: 6.042203807431129
best_error: 6.042203546127722
best_error: 6.0421668911626405
best_error: 6.0421668816258896
best_error: 6.0421668512137465
best_error: 6.042157415591303
best_error: 6.042157154281423
best_error: 6.039244778317148
best_error: 6.039244768864492
best_error: 6.039244745849215
best_error: 6.038961719707159
best_error: 6.038961710257397
best_error: 6.038961687249258
best_error: 6.038914853998
best_error: 6.038914844548716
best_error: 6.0389148215417565
best_error: 6.0389066094532176
best_error: 6.03890660000402
best_error: 6.038906576997271
best_error: 6.038905581188674
best_error: 6.038905292993012
best_error: 6.038905267364905
best_error: 6.038905257915714
best_error: 6.038905234908997
best_error: 6.03890446411597
best_error: 6.038904454666799
best_error: 6.038904431660088
best_error: 6.038904341202988
best_error: 6.038904341046975
best_error: 6.0389043234574915
best_error: 6.03890432112323
