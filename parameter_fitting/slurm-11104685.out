ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.77463218521241
best_error: 96.77463210922126
best_error: 96.77463209141285
best_error: 96.7746320466486
best_error: 96.77463201117885
best_error: 18.19356398658068
best_error: 18.193563737028434
best_error: 18.193561996964032
best_error: 15.838065914788787
best_error: 15.838065914502206
best_error: 15.838065889494342
best_error: 15.790910881906463
best_error: 15.79091088159712
best_error: 15.790910854506135
best_error: 15.565091417068695
best_error: 15.5650914167015
best_error: 15.565091378140917
best_error: 12.01663961936655
best_error: 12.016639200077956
best_error: 9.802235006055051
best_error: 9.802234749333607
best_error: 9.5159256416366
best_error: 9.515925510497809
best_error: 9.439244888552043
best_error: 9.439244811003102
best_error: 9.418524360569196
best_error: 9.418524287910074
best_error: 9.408157407960598
best_error: 9.408157386279875
best_error: 9.408157379137768
best_error: 9.400947886181788
best_error: 9.400947814863471
best_error: 9.399401213523165
best_error: 9.399401142035419
best_error: 9.399006655813391
best_error: 9.399006584282512
best_error: 9.398906595729715
best_error: 9.398906574219328
best_error: 9.398906567046108
best_error: 9.365192683880364
best_error: 9.365192603872586
best_error: 9.256948105399559
best_error: 9.256948006967507
best_error: 9.0030700919895
best_error: 9.003070065453002
best_error: 9.003070063551377
best_error: 8.93265875648503
best_error: 8.932658733587541
best_error: 8.932658731650704
best_error: 8.7451629639185
best_error: 8.74516294617731
best_error: 8.745162942477124
best_error: 7.849639838309146
best_error: 7.849639505331931
best_error: 7.785014408907047
best_error: 7.785014183873451
best_error: 7.745526977015852
best_error: 7.74552695339824
best_error: 7.713636053385239
best_error: 7.713635960538122
best_error: 7.663332046659467
best_error: 7.663332008054509
best_error: 7.6577258733567515
best_error: 7.65772585200255
best_error: 7.602692355226185
best_error: 7.602692250878438
best_error: 7.581882654282448
best_error: 7.581882636318472
best_error: 7.573007692644799
best_error: 7.573007675500811
best_error: 7.545853988040541
best_error: 7.54585396887212
best_error: 7.531592815856745
best_error: 7.531592796689132
best_error: 7.489319394082509
best_error: 7.489319372494526
best_error: 7.488567764429256
best_error: 7.488567666151986
best_error: 7.476330716026136
best_error: 7.476330682802138
best_error: 7.471890797295503
best_error: 7.471890728880408
best_error: 7.461097123936663
best_error: 7.461097079114919
best_error: 7.460103702367958
best_error: 7.460103672997048
best_error: 7.443692702731523
best_error: 7.443692675577646
best_error: 7.4018587826192865
best_error: 7.401858608670865
best_error: 7.375237996250006
best_error: 7.375237980824231
best_error: 7.363074347709038
best_error: 7.363074330165961
best_error: 7.29346270960738
best_error: 7.29346268238839
best_error: 7.19479714127142
best_error: 7.194797121369474
best_error: 7.1697219106050305
best_error: 7.169721863970791
best_error: 7.1582152102564285
best_error: 7.158215192404596
best_error: 7.125465044704647
best_error: 7.125465038656456
best_error: 7.1122340510055775
best_error: 7.112234043900237
best_error: 7.106280654622859
best_error: 7.106280647527935
best_error: 7.105758026720183
best_error: 7.105758018390682
best_error: 7.083476540482997
best_error: 7.083476500918104
best_error: 7.0584617437340516
best_error: 7.058461704239121
best_error: 7.028002132915661
best_error: 7.028002094836733
best_error: 7.023176118874742
best_error: 7.023176108829044
best_error: 6.961054390541982
best_error: 6.961054329316087
best_error: 6.948723087263825
best_error: 6.948723057625997
best_error: 6.940545845998357
best_error: 6.94054584191584
best_error: 6.914735968794002
best_error: 6.914735967786548
best_error: 6.914735965427553
best_error: 6.891498810915899
best_error: 6.891498808028415
best_error: 6.89149880632986
best_error: 6.885418643968824
best_error: 6.885418614020406
best_error: 6.884904372158573
best_error: 6.884904369188097
best_error: 6.884904367556191
best_error: 6.879545272371177
best_error: 6.879545268992869
best_error: 6.879545267562893
best_error: 6.879070830491073
best_error: 6.879070827084399
best_error: 6.879070825682473
best_error: 6.87903522968363
best_error: 6.879035200592664
best_error: 6.879029755512449
best_error: 6.879029752082586
best_error: 6.879029750703855
best_error: 6.879029562810481
best_error: 6.879029533719525
best_error: 6.828794575114119
best_error: 6.8287945505563785
best_error: 6.7481239125032495
best_error: 6.748123878061751
best_error: 6.732922388327899
best_error: 6.732922355560096
best_error: 6.713188029959689
best_error: 6.7131879917227
