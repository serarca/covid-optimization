ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.690173851582601
best_error: 13.690173842911639
best_error: 13.690173838759996
best_error: 13.680860189584925
best_error: 13.68086018025582
best_error: 13.680860175998365
best_error: 13.255718956960516
best_error: 13.25571890811795
best_error: 13.255718904527585
best_error: 11.241048991428082
best_error: 11.241048704574082
best_error: 9.43962268084666
best_error: 9.439622180383434
best_error: 7.4188926281302745
best_error: 7.418891923467774
best_error: 5.8042629145808
best_error: 5.804262422129689
best_error: 5.495245506749189
best_error: 5.495245093831384
best_error: 5.425115457410845
best_error: 5.425115050807914
best_error: 5.403043180593306
best_error: 5.403042778163397
best_error: 5.390479692536371
best_error: 5.390479294447319
best_error: 5.378715690123656
best_error: 5.378715293484332
best_error: 5.372229955719465
best_error: 5.372229559590254
best_error: 5.368677388534721
best_error: 5.368676993749405
best_error: 5.367390464096138
best_error: 5.367390127735807
best_error: 5.3398566859275025
best_error: 5.339856267103126
best_error: 5.284031298889984
best_error: 5.284030861726377
best_error: 5.223733212094908
best_error: 5.223732737424021
best_error: 5.214998979256134
best_error: 5.214998500645296
best_error: 5.188740461393646
best_error: 5.1887399436726245
best_error: 5.1723184348532865
best_error: 5.17231791436881
best_error: 5.16633543049706
best_error: 5.166334908442691
best_error: 5.165295972038323
best_error: 5.165295449809804
best_error: 5.164878604075401
best_error: 5.164878081777003
best_error: 5.164796642564505
best_error: 5.164796365440122
best_error: 5.164796156202098
best_error: 5.162365347784375
best_error: 5.162364829770388
best_error: 5.160826478326868
best_error: 5.1608259738594455
best_error: 5.1604813365165185
best_error: 5.160480839477302
best_error: 5.158454524034044
best_error: 5.158454032811039
best_error: 5.152953129258513
best_error: 5.152952821801522
best_error: 5.149428978645195
best_error: 5.149428669720255
best_error: 5.146089432201558
best_error: 5.146089123068096
best_error: 5.144135880152708
best_error: 5.144135588205927
best_error: 5.143510906192992
best_error: 5.143510609867045
best_error: 5.1428032429481965
best_error: 5.142802948472364
best_error: 5.141011652826548
best_error: 5.141011343096329
best_error: 5.1222523968800555
best_error: 5.122251901302249
best_error: 5.1085184548402705
best_error: 5.108518144558081
best_error: 5.097915826513092
best_error: 5.097915516454076
best_error: 5.063487800512284
best_error: 5.063487255424819
best_error: 5.045138718675187
best_error: 5.04513842609666
best_error: 5.0387514033546
best_error: 5.038751090753207
best_error: 5.037206903106766
best_error: 5.037206604167657
best_error: 5.017033143623146
best_error: 5.017032845842947
best_error: 5.012294868586664
best_error: 5.01229430848199
best_error: 4.999296220349146
best_error: 4.999295918686821
best_error: 4.985472883604713
best_error: 4.985472582453291
best_error: 4.942161247355157
best_error: 4.942160937755379
best_error: 4.890274527917995
best_error: 4.890273956316364
best_error: 4.883118251216045
best_error: 4.883117922317186
best_error: 4.863069706616736
best_error: 4.863069385023941
best_error: 4.845308365467538
best_error: 4.845307747299741
best_error: 4.829634084276036
best_error: 4.829633797694127
best_error: 4.825128173946878
best_error: 4.825127916297497
best_error: 4.8139572892280835
best_error: 4.813956987614028
best_error: 4.808232801075782
best_error: 4.808232502104258
best_error: 4.795754350313699
best_error: 4.7957537014061575
best_error: 4.795204433885984
best_error: 4.795204140712521
best_error: 4.795095301084476
best_error: 4.79509465210476
best_error: 4.775145881881432
best_error: 4.7751455953548545
best_error: 4.761975732287935
best_error: 4.761975062874688
best_error: 4.758077557449163
best_error: 4.758077268685565
best_error: 4.756828693070652
best_error: 4.756828404319988
best_error: 4.756788205616552
best_error: 4.7567875408854565
best_error: 4.756736677524321
best_error: 4.756736012786173
best_error: 4.756727137101873
best_error: 4.756726848348144
best_error: 4.7567228700665884
best_error: 4.756722870066479
best_error: 4.756722870061722
best_error: 4.756722867435453
