ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.289546198298469
best_error: 10.289546154187578
best_error: 10.289546133393264
best_error: 9.652424415026704
best_error: 9.65242434847228
best_error: 8.968919379558622
best_error: 8.96891929380769
best_error: 8.620356556939738
best_error: 8.620356450413748
best_error: 8.259461209534589
best_error: 8.259461092311348
best_error: 8.072849002681123
best_error: 8.072848882361594
best_error: 7.92284705481869
best_error: 7.92284699107936
best_error: 7.922846987888038
best_error: 7.449326720416264
best_error: 7.4493266623286445
best_error: 7.449326648996077
best_error: 5.644650998116083
best_error: 5.644650970538647
best_error: 5.644650914041025
best_error: 5.578988162782885
best_error: 5.578987381354636
best_error: 4.1319860389396155
best_error: 4.1319860388499565
best_error: 3.21092906673814
best_error: 3.210929066629842
best_error: 2.900074934209425
best_error: 2.900074934098213
best_error: 2.8045518152755973
best_error: 2.8045518151648507
best_error: 2.7988143081072705
best_error: 2.7988140273551405
best_error: 2.7988139043636058
best_error: 2.795041946959197
best_error: 2.7950419468480563
best_error: 2.794874501072706
best_error: 2.794874220181425
best_error: 2.794874097525393
best_error: 2.6265878390313047
best_error: 2.626587549512669
best_error: 2.6265874747655573
best_error: 2.458505635675885
best_error: 2.4585053721061376
best_error: 2.4585053300676436
best_error: 2.366218468454048
best_error: 2.3662181712330055
best_error: 2.1505267941914483
best_error: 2.1505264421225156
best_error: 2.0758870076180878
best_error: 2.075886675560767
best_error: 2.0687236724809748
best_error: 2.068723340512541
best_error: 2.064790696932172
best_error: 2.0647903651935615
best_error: 2.0602114152074686
best_error: 2.0602110841440697
best_error: 2.0594602853725474
best_error: 2.0594599542363463
best_error: 2.0591235463809507
best_error: 2.0591232152121086
best_error: 2.058960234833669
best_error: 2.0589602347834672
best_error: 1.9028743697100068
best_error: 1.902874070629657
best_error: 1.8412842638346
best_error: 1.841283923782163
best_error: 1.8322385826470797
best_error: 1.8322381930164233
best_error: 1.828600539919438
best_error: 1.8286001500734015
best_error: 1.8144295341481114
best_error: 1.8144291484633688
best_error: 1.766187502729536
best_error: 1.7661871458945453
best_error: 1.6908307338883521
best_error: 1.6908307338439468
best_error: 1.6908306228182999
best_error: 1.6887780890262212
best_error: 1.6887777307119642
best_error: 1.6228186745230866
best_error: 1.6228183154166183
best_error: 1.6207395896320418
best_error: 1.6207392303080579
best_error: 1.6205071223036136
best_error: 1.6205071222576435
best_error: 1.6203155091122663
best_error: 1.6203151497439319
best_error: 1.6201437340495248
best_error: 1.6201437340034681
best_error: 1.6201108617092344
best_error: 1.6201105023470643
best_error: 1.5584847270697262
best_error: 1.5584843569720355
best_error: 1.515081351263
best_error: 1.5150809641075869
best_error: 1.4966739801017654
best_error: 1.4966735707865686
best_error: 1.4939261828491257
best_error: 1.4939257653790798
best_error: 1.486724139783144
best_error: 1.4867237297964373
best_error: 1.4808471641701941
best_error: 1.4808467742204758
best_error: 1.4751431688108838
best_error: 1.475142778457267
best_error: 1.4681177729272654
best_error: 1.4681173799549756
best_error: 1.466095783196864
best_error: 1.466095391096001
best_error: 1.4645322645756242
best_error: 1.4645318731819774
best_error: 1.462182688434782
best_error: 1.462182296786831
best_error: 1.461202786587954
best_error: 1.4612023948356385
best_error: 1.4611296728425591
best_error: 1.4611292810824972
best_error: 1.460998583463559
best_error: 1.4609981916906065
best_error: 1.4609869465086085
best_error: 1.4609865547345047
best_error: 1.460980342130117
best_error: 1.4609799503553518
best_error: 1.4609776318962773
best_error: 1.4609772401212724
best_error: 1.4609770342051123
best_error: 1.4609769882739383
best_error: 1.460976816352054
best_error: 1.4609767417448851
best_error: 1.4609766715157946
