ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.84394137105453
best_error: 99.84394127459592
best_error: 99.84394122848505
best_error: 15.554969862682938
best_error: 15.554969862673088
best_error: 15.55496984186064
best_error: 15.456240372840334
best_error: 15.456240372829598
best_error: 15.456240348561538
best_error: 14.783618756722461
best_error: 14.783618756655493
best_error: 14.783618694904987
best_error: 14.613458412745185
best_error: 14.613458412640858
best_error: 14.613458339186737
best_error: 14.40331218247278
best_error: 14.403312182304369
best_error: 14.403312095375671
best_error: 13.06066664271036
best_error: 13.06066664083012
best_error: 13.060666580582307
best_error: 12.999577669582028
best_error: 12.999577666420386
best_error: 12.999577665824738
best_error: 12.999577559568374
best_error: 12.965720342139614
best_error: 12.965720339541244
best_error: 12.965720338929481
best_error: 12.965720282772878
best_error: 12.657793463694665
best_error: 12.657793453308773
best_error: 12.61421629787998
best_error: 12.61421628643731
best_error: 12.568121119186742
best_error: 12.568121106948803
best_error: 12.337425062243693
best_error: 12.337425046023107
best_error: 12.268857554753037
best_error: 12.268857539543705
best_error: 12.264625843576953
best_error: 12.264625829407034
best_error: 12.001145012330015
best_error: 12.001145002016397
best_error: 11.24113831900845
best_error: 11.24113829181677
best_error: 11.137875098443402
best_error: 11.137875084433979
best_error: 10.579234822790225
best_error: 10.579234818599327
best_error: 10.489545823765676
best_error: 10.489545819383501
best_error: 10.248483848238712
best_error: 10.248483848238536
best_error: 10.248483844500889
best_error: 10.074491295728178
best_error: 10.074491295728023
best_error: 10.074491291611068
best_error: 9.815789764633891
best_error: 9.81578974986296
best_error: 9.447142162540192
best_error: 9.44714210748909
best_error: 8.724156812488507
best_error: 8.72415677742377
best_error: 8.392100318939049
best_error: 8.392100307016861
best_error: 8.392100306943005
best_error: 8.392100295329639
best_error: 8.317764454526387
best_error: 8.31776444992339
best_error: 8.31776442681495
best_error: 8.282200947198133
best_error: 8.282200944251706
best_error: 8.282200920188675
best_error: 8.195704173781932
best_error: 8.195704172333697
best_error: 8.19570414683307
best_error: 7.782038669543459
best_error: 7.782038639528173
best_error: 7.676697080404692
best_error: 7.676697026231303
best_error: 7.618824325477634
best_error: 7.618823781232109
best_error: 7.61872260007406
best_error: 7.618722047538069
best_error: 7.613849434548047
best_error: 7.613848863480766
best_error: 7.436166418268914
best_error: 7.4361660537719105
best_error: 7.246894485944663
best_error: 7.246894391685716
best_error: 7.19169552598018
best_error: 7.1916954914706
best_error: 7.19169549082511
best_error: 7.148305500714578
best_error: 7.148305273585323
best_error: 7.119705804066629
best_error: 7.119705534461607
best_error: 7.0968592244878055
best_error: 7.096859209051562
best_error: 7.096198537497525
best_error: 7.0961985227189945
best_error: 7.086251019567406
best_error: 7.0862507910048596
best_error: 7.019340791439479
best_error: 7.0193405865651926
best_error: 6.976109378402695
best_error: 6.976108696441601
best_error: 6.874329761092481
best_error: 6.874329224944973
best_error: 6.811367428333253
best_error: 6.811366967986026
best_error: 6.799498425290602
best_error: 6.799498398405957
best_error: 6.632087470226331
best_error: 6.632087426485308
best_error: 6.630589223204732
best_error: 6.630589172536298
best_error: 6.563558760741024
best_error: 6.563558542815815
best_error: 6.56183532676353
best_error: 6.561835281427407
best_error: 6.558422241059919
best_error: 6.558422191147994
best_error: 6.548965098150269
best_error: 6.548964940781067
best_error: 6.530021484951017
best_error: 6.530021424168025
best_error: 6.475202849657105
best_error: 6.475202790847412
best_error: 6.405294739695888
best_error: 6.405294712430398
best_error: 6.385566315439819
best_error: 6.385565965742273
best_error: 6.383207836798888
best_error: 6.3832078095177724
best_error: 6.375806572424384
best_error: 6.375806571677763
best_error: 6.375806566298186
best_error: 6.3758065650072595
best_error: 6.366720270450623
best_error: 6.366720237610284
best_error: 6.360220427327428
best_error: 6.360220391566441
best_error: 6.334583239571358
best_error: 6.334583196290741
best_error: 6.315878189964649
best_error: 6.315878135208341
