ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.982423734882207
best_error: 9.982423724596766
best_error: 9.673212497708684
best_error: 9.673212473563657
best_error: 3.607923659316387
best_error: 3.6079235472976707
best_error: 3.177770861794207
best_error: 3.177770849850176
best_error: 3.1777707068564167
best_error: 2.821753566298071
best_error: 2.8217533001898008
best_error: 2.7799933335786795
best_error: 2.779993221358846
best_error: 2.7731907168105754
best_error: 2.773190450757161
best_error: 2.6910714810379543
best_error: 2.6910712161971704
best_error: 2.6829937676230653
best_error: 2.682993502781823
best_error: 2.677772046932466
best_error: 2.6777717813934276
best_error: 2.675212176753101
best_error: 2.675211910872424
best_error: 2.6733900218838826
best_error: 2.673389755760202
best_error: 2.672356901686117
best_error: 2.6723566354241477
best_error: 2.672239590185151
best_error: 2.6722393239074886
best_error: 2.6721644886652034
best_error: 2.6721642223774835
best_error: 2.6721279037709516
best_error: 2.6721276374783347
best_error: 2.672101968075948
best_error: 2.672101701779854
best_error: 2.6720939200594147
best_error: 2.672093653762265
best_error: 2.6720884978756114
best_error: 2.67208823157772
best_error: 2.6720859747754635
best_error: 2.672085708477249
best_error: 2.672084102778581
best_error: 2.6720838364801134
best_error: 2.672083599463897
best_error: 2.6720834905292374
best_error: 2.6701319208036067
best_error: 2.670131662918316
best_error: 2.670125226620171
best_error: 2.6701249687935995
best_error: 2.67010044692533
best_error: 2.670100189334197
best_error: 2.6598072723726194
best_error: 2.6598070169331507
best_error: 2.622691803628183
best_error: 2.6226915543491662
best_error: 2.2514105363388364
best_error: 2.2514102846349795
best_error: 2.2356409899949785
best_error: 2.235640915061011
best_error: 2.2156112893355955
best_error: 2.2156110281056307
best_error: 2.2026401733559213
best_error: 2.2026399080351915
best_error: 2.2008248035044446
best_error: 2.200824537783509
best_error: 2.2005510504325168
best_error: 2.2005509775692076
best_error: 2.2004036845124677
best_error: 2.2004034186886847
best_error: 2.199098968285372
best_error: 2.199098701928161
best_error: 2.1949583003931368
best_error: 2.1949582279889714
best_error: 2.194462095545334
best_error: 2.1944618274932246
best_error: 2.1685691405831298
best_error: 2.168568866578254
best_error: 2.168307318034988
best_error: 2.1683072449421914
best_error: 2.168283177469541
best_error: 2.1682829039580174
best_error: 2.1094592430170054
best_error: 2.1094591766738997
best_error: 2.100819987839898
best_error: 2.1008196791868157
best_error: 2.0888510267728577
best_error: 2.088850962477294
best_error: 2.0779833189446815
best_error: 2.0779832562140013
best_error: 2.075606635022533
best_error: 2.075606323298136
best_error: 2.0629269392286416
best_error: 2.0629266391845555
best_error: 2.0626319882863706
best_error: 2.0626319243149545
best_error: 2.05973497677108
best_error: 2.0597346828105447
best_error: 2.056358199401831
best_error: 2.0563579194146047
best_error: 2.0563208118722556
best_error: 2.0563205318806297
best_error: 2.0561944676060606
best_error: 2.0561941844546325
best_error: 2.056139179014411
best_error: 2.056138896138155
best_error: 2.055949684747814
best_error: 2.055949402928972
best_error: 2.055572080544607
best_error: 2.055571802417691
best_error: 2.0548559769119583
best_error: 2.0548557009442896
best_error: 2.05289642307436
best_error: 2.052896148669797
best_error: 2.0522666259723352
best_error: 2.0522663520834112
best_error: 2.0519886719165825
best_error: 2.051988398084413
best_error: 2.0518547581341524
best_error: 2.051854484329554
best_error: 2.051788284785963
best_error: 2.051788010995099
best_error: 2.051759595302741
best_error: 2.0517593215134164
best_error: 2.0517442693519423
best_error: 2.0517439955634393
best_error: 2.0517361545709902
best_error: 2.051735880782935
best_error: 2.0517351412383134
best_error: 2.051734867450271
best_error: 2.0517347793945233
best_error: 2.051734505606477
