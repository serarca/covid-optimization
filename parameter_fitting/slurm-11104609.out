ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.7341853984132
best_error: 98.73418525071763
best_error: 98.73418523490645
best_error: 98.73418523176736
best_error: 18.26588356034648
best_error: 18.265883560341877
best_error: 18.265883551283427
best_error: 18.258812460485643
best_error: 18.2588124513246
best_error: 18.229339711254116
best_error: 18.229339701463815
best_error: 18.092150183908803
best_error: 18.09215017149272
best_error: 16.034168143517416
best_error: 16.0341679886138
best_error: 15.320768103101157
best_error: 15.320767876080719
best_error: 13.979778837815541
best_error: 13.9797784860344
best_error: 11.702716748247074
best_error: 11.702716241698194
best_error: 9.92553453378777
best_error: 9.925534300034533
best_error: 9.738588474459078
best_error: 9.738588366231559
best_error: 9.70333964755806
best_error: 9.703339630433945
best_error: 9.703339622203368
best_error: 9.694190506890017
best_error: 9.694190408420988
best_error: 9.674734254774856
best_error: 9.674734160188478
best_error: 9.668474479712792
best_error: 9.668474462584188
best_error: 9.668474453731735
best_error: 9.630367974225308
best_error: 9.63036795731857
best_error: 9.630367948053348
best_error: 9.586981300346265
best_error: 9.58698128402493
best_error: 9.586981273925788
best_error: 9.575931876146402
best_error: 9.575931859988172
best_error: 9.57593184985096
best_error: 9.53741500433334
best_error: 9.537414990504175
best_error: 9.537414978572237
best_error: 9.537367100943921
best_error: 9.537366973356452
best_error: 9.535812287026907
best_error: 9.535812159448835
best_error: 9.534258519167421
best_error: 9.534258505357386
best_error: 9.534258493412352
best_error: 9.52382546824192
best_error: 9.523825454459251
best_error: 9.52382544244094
best_error: 9.481810661928332
best_error: 9.481810648162845
best_error: 9.481810636009934
best_error: 9.312680977426556
best_error: 9.312680956118804
best_error: 9.312562311648676
best_error: 9.31256228928364
best_error: 9.306408013342443
best_error: 9.306407991744134
best_error: 9.291712572247812
best_error: 9.291712551758382
best_error: 9.291523296349634
best_error: 9.291523157519414
best_error: 9.201674869049207
best_error: 9.201674847227379
best_error: 9.162618066799455
best_error: 9.16261801196099
best_error: 9.126870100340383
best_error: 9.126870034370171
best_error: 9.110693836468789
best_error: 9.11069372332784
best_error: 9.101366411813562
best_error: 9.101366311819461
best_error: 9.032423701505259
best_error: 9.032423682613702
best_error: 9.017561538753657
best_error: 9.017561516208524
best_error: 9.010684956956068
best_error: 9.010684938687998
best_error: 9.00835153175116
best_error: 9.008351513173558
best_error: 9.00818938149318
best_error: 9.008189363384734
best_error: 9.008170136322894
best_error: 9.008170117739272
best_error: 9.00803842449126
best_error: 9.008038405903267
best_error: 9.008025610889163
best_error: 9.008025592782968
best_error: 8.99993580692132
best_error: 8.99993578882667
best_error: 8.991205612485269
best_error: 8.991205594499464
best_error: 8.833176947533556
best_error: 8.833176947533554
best_error: 8.833176943431123
best_error: 8.79395133094893
best_error: 8.79395132520752
best_error: 8.720951900448519
best_error: 8.720951900448517
best_error: 8.720951875021418
best_error: 8.626344542681272
best_error: 8.626344528153355
best_error: 8.582306799351434
best_error: 8.582306799351432
best_error: 8.582306787906507
best_error: 8.582306782355175
best_error: 8.557150114638759
best_error: 8.557150114638755
best_error: 8.557150109649083
best_error: 8.557150103307393
best_error: 8.528245221547522
best_error: 8.528245217009486
best_error: 8.528245209947947
best_error: 8.509134928854634
best_error: 8.509134925153523
best_error: 8.50913491469682
best_error: 8.497040010155718
best_error: 8.49704000906343
best_error: 8.497039993072228
best_error: 8.167208529243926
best_error: 8.16720852081773
best_error: 8.167208343516744
best_error: 8.00496431052504
best_error: 8.004964300796454
best_error: 8.004964288465068
best_error: 8.002468186261028
best_error: 8.002468183166476
best_error: 8.002468086040547
best_error: 7.945284520842971
best_error: 7.945284516357463
best_error: 7.945284436168068
best_error: 7.937147282696195
best_error: 7.937147277711322
best_error: 7.937147205076225
best_error: 7.921632153130257
best_error: 7.921632140059444
best_error: 7.896477586497211
best_error: 7.896477575601743
best_error: 7.892846751918736
best_error: 7.892846738569803
best_error: 7.841308769214052
best_error: 7.841308761186138
best_error: 7.825998038121214
best_error: 7.8259980310220865
best_error: 7.825957987716938
best_error: 7.825957980579496
best_error: 7.825930732821916
best_error: 7.82593072568398
best_error: 7.825906020399646
best_error: 7.8259060129316005
best_error: 7.825818414691306
best_error: 7.825818406897112
best_error: 7.82548311057708
best_error: 7.825483102776044
best_error: 7.82543950694814
best_error: 7.825439499146652
best_error: 7.821378541032093
best_error: 7.82137850613958
best_error: 7.819949286607271
best_error: 7.819949252027918
best_error: 7.811372709220164
best_error: 7.811372706510312
best_error: 7.803097456992447
best_error: 7.803097400860455
