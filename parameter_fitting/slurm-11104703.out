ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.3805890694309
best_error: 102.38058886903423
best_error: 15.519147749862439
best_error: 15.519147749851284
best_error: 15.519147730012765
best_error: 15.496842604164334
best_error: 15.496842583752525
best_error: 15.401197845143507
best_error: 15.401197822359723
best_error: 14.871387932878422
best_error: 14.871387893605085
best_error: 13.396812426261672
best_error: 13.3968123253724
best_error: 12.438257277461297
best_error: 12.438257270127083
best_error: 12.358211823023927
best_error: 12.35821181156808
best_error: 11.369369717300984
best_error: 11.369369717300662
best_error: 11.369369713177413
best_error: 11.369369701195687
best_error: 10.528694385038074
best_error: 10.52869438503739
best_error: 10.528694380468327
best_error: 10.528694370729266
best_error: 9.768899073020114
best_error: 9.76889901970861
best_error: 8.87705603962744
best_error: 8.877055636294441
best_error: 8.87705557809877
best_error: 8.685541086513332
best_error: 8.685541084777272
best_error: 8.685541029837593
best_error: 8.612780770715238
best_error: 8.612780547530585
best_error: 8.590386628645348
best_error: 8.590386469290964
best_error: 8.590385395008942
best_error: 8.590385235654434
best_error: 8.582489364803898
best_error: 8.582489206600039
best_error: 8.576228438448425
best_error: 8.576228331049329
best_error: 8.567161064024013
best_error: 8.567161047390286
best_error: 8.555940345402163
best_error: 8.555940344909892
best_error: 8.555940336009103
best_error: 8.555940331288248
best_error: 8.55520605351064
best_error: 8.55520605202905
best_error: 8.555206044006479
best_error: 8.555206039369722
best_error: 8.554246702299114
best_error: 8.554246698341503
best_error: 8.554246692668208
best_error: 8.554246688127376
best_error: 8.553118464019672
best_error: 8.553118463541498
best_error: 8.55311845446469
best_error: 8.55311844955918
best_error: 8.552211658744895
best_error: 8.552211658264303
best_error: 8.552211649075728
best_error: 8.552211644218254
best_error: 8.550871047388576
best_error: 8.550871045483124
best_error: 8.550871037547608
best_error: 8.550871032815888
best_error: 8.550828570156867
best_error: 8.550828568157307
best_error: 8.550828560310872
best_error: 8.550828555582843
best_error: 8.550792583760161
best_error: 8.550792581681215
best_error: 8.550792573909927
best_error: 8.550792569185013
best_error: 8.550756829021177
best_error: 8.55075682679755
best_error: 8.550756819162832
best_error: 8.550756814443684
best_error: 8.550731593281053
best_error: 8.550731590956513
best_error: 8.55073158341705
best_error: 8.550731578701921
best_error: 8.550632807596626
best_error: 8.550632804869036
best_error: 8.550632797710932
best_error: 8.550632793011218
best_error: 8.55063175000718
best_error: 8.550631747275503
best_error: 8.550631740121256
best_error: 8.550631735421701
best_error: 8.550630721395782
best_error: 8.550630718660141
best_error: 8.550630711509637
best_error: 8.550630706810242
best_error: 8.55062995785628
best_error: 8.550629955117698
best_error: 8.550629947969972
best_error: 8.550629943270696
best_error: 8.550629229026608
best_error: 8.550629226285212
best_error: 8.550629219140141
best_error: 8.550629214440978
best_error: 8.550627311729386
best_error: 8.550627308980596
best_error: 8.550627301842507
best_error: 8.550627297143633
best_error: 8.550625623183675
best_error: 8.550625620428386
best_error: 8.55062561329643
best_error: 8.550625608597818
best_error: 8.55061546599792
best_error: 8.550615463203588
best_error: 8.550615456108485
best_error: 8.550615451411428
best_error: 8.550614887238456
best_error: 8.550614884441794
best_error: 8.550614877348892
best_error: 8.550614872651925
best_error: 8.550614347717474
best_error: 8.550614344918637
best_error: 8.550614337827788
best_error: 8.55061433313091
best_error: 8.550614300472706
best_error: 8.550614297673675
best_error: 8.550614290583006
best_error: 8.550614285886136
best_error: 8.550614270710017
best_error: 8.550614267910866
best_error: 8.550614260820314
best_error: 8.550614256123449
best_error: 8.550614008034884
best_error: 8.550614005234678
best_error: 8.550613998145119
best_error: 8.550613993448298
best_error: 8.55061399115356
best_error: 8.550613988910719
best_error: 8.550613981054331
best_error: 8.55061397635751
