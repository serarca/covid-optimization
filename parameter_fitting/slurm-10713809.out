ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.379017754647558
best_error: 11.379017710121415
best_error: 11.37901768396357
best_error: 11.033085253300609
best_error: 11.03308519080561
best_error: 11.033085161387962
best_error: 9.9858894938774
best_error: 9.985889375471128
best_error: 9.985889374077786
best_error: 9.345217125582876
best_error: 9.345216983773348
best_error: 9.126727312744542
best_error: 9.126727167290918
best_error: 9.022970577097706
best_error: 9.022970434624582
best_error: 7.708859962374513
best_error: 7.70885990821614
best_error: 7.7088598197547435
best_error: 7.559157016530653
best_error: 7.559156979770961
best_error: 7.559156867821051
best_error: 7.471702841420319
best_error: 7.471702804798799
best_error: 7.47170268896689
best_error: 7.395873475590937
best_error: 7.395873443380488
best_error: 7.395873319713095
best_error: 7.3554677138599125
best_error: 7.3554676837198265
best_error: 7.355467556135393
best_error: 7.269059798644443
best_error: 7.269059765211297
best_error: 7.269059640438432
best_error: 7.215775099152159
best_error: 7.215775063861119
best_error: 7.2157749406238
best_error: 7.206427634775964
best_error: 7.206427598828036
best_error: 7.206427476202599
best_error: 7.204231770041632
best_error: 7.204231733940284
best_error: 7.204231611459754
best_error: 7.203735402848452
best_error: 7.203735366712429
best_error: 7.203735244264653
best_error: 7.2035142598196265
best_error: 7.203514099573603
best_error: 4.814094551134202
best_error: 4.814094220990985
best_error: 4.808807521885513
best_error: 4.808807224607582
best_error: 4.800188202142037
best_error: 4.800187894522474
best_error: 4.696651091733063
best_error: 4.696650735210017
best_error: 4.371352458687712
best_error: 4.371352063351031
best_error: 4.240338366762161
best_error: 4.24033797747281
best_error: 4.161882082259304
best_error: 4.161881667068825
best_error: 4.00632286919728
best_error: 4.0063224148661885
best_error: 3.764680946427175
best_error: 3.7646804587792095
best_error: 3.6260155483497227
best_error: 3.6260150472821637
best_error: 3.5092339766241367
best_error: 3.50923355377235
best_error: 3.501659374986004
best_error: 3.5016589808793266
best_error: 3.3057577754672316
best_error: 3.305757671100341
best_error: 3.305757617768122
best_error: 3.2747589500333456
best_error: 3.274758553735774
best_error: 3.27336052207058
best_error: 3.2733601256234524
best_error: 3.273212401789741
best_error: 3.2732120053267675
best_error: 3.2731889355461594
best_error: 3.273188539080685
best_error: 3.2731857761498278
best_error: 3.273185672160837
best_error: 3.2731856195881757
best_error: 3.273183708778814
best_error: 3.2731833123127654
best_error: 3.2731806687063014
best_error: 3.2731806686967375
best_error: 3.266464901670634
best_error: 3.2664645042945835
best_error: 3.2623770189339347
best_error: 3.2623766086588777
best_error: 3.249225730144639
best_error: 3.2492253421744035
best_error: 3.22325130399487
best_error: 3.22325093087121
best_error: 3.2184332981165555
best_error: 3.218432923869469
best_error: 3.2147423231763828
best_error: 3.2147419492809846
best_error: 3.211468416434119
best_error: 3.2114680423322497
best_error: 3.195064215997834
best_error: 3.1950638367792648
best_error: 3.1931164825343297
best_error: 3.1931163955510153
best_error: 3.1931163283449546
best_error: 3.19289694087942
best_error: 3.1928968529880697
best_error: 3.169898742684695
best_error: 3.1698983416123125
best_error: 3.089636823581266
best_error: 3.0896364388928994
best_error: 3.075337788703089
best_error: 3.0753377176312062
best_error: 3.0753376350562904
best_error: 3.074336964175096
best_error: 3.0743365779594676
best_error: 3.0741959532299266
best_error: 3.0741955670001873
best_error: 3.074143863590484
best_error: 3.074143792471449
best_error: 3.0741437099830664
best_error: 3.074128698702797
best_error: 3.0741283124663363
best_error: 3.0741268300810587
best_error: 3.0741264438444085
best_error: 3.074125901434825
best_error: 3.074125880528193
best_error: 3.0602771435080185
best_error: 3.0602767293732174
best_error: 3.047152673366546
best_error: 3.0471522740889485
best_error: 3.046536615392717
best_error: 3.0465362157352316
best_error: 3.0460630264764834
best_error: 3.046062627653714
best_error: 3.0456046613700045
best_error: 3.045604262254507
best_error: 3.0448713414127444
best_error: 3.0448709418205904
best_error: 3.043754985053378
best_error: 3.0437545853421004
best_error: 3.0434414292889294
best_error: 3.043441029267088
best_error: 3.0432441189294597
best_error: 3.043243718710306
best_error: 3.0431186987639967
best_error: 3.0431182984186433
best_error: 3.043038193848303
best_error: 3.0430377934215986
best_error: 3.0429863103931627
best_error: 3.0429859099139005
best_error: 3.042952734334203
best_error: 3.0429523338208666
best_error: 3.042930955723749
best_error: 3.0429305551882813
best_error: 3.042916806459691
best_error: 3.0429164059098244
best_error: 3.042907600405788
best_error: 3.042907199846561
best_error: 3.0429016028875076
best_error: 3.04290120232218
best_error: 3.0389809048932452
best_error: 3.038980503868258
best_error: 3.0376205372061813
best_error: 3.0376201359859962
best_error: 3.0374000821071836
best_error: 3.0373996808553763
best_error: 3.0373015073816267
best_error: 3.0373014381859065
best_error: 3.037301352779298
best_error: 3.0372980754574233
best_error: 3.037297674191092
best_error: 3.0372970479256898
best_error: 3.037297042803194
