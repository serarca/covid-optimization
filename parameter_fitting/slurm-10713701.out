ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.094774359130653
best_error: 13.094774310193142
best_error: 12.91501644393821
best_error: 12.915016376549215
best_error: 12.635196273411333
best_error: 12.63519617545087
best_error: 12.190972439575187
best_error: 12.190972290392134
best_error: 8.703084438099573
best_error: 8.70308409166745
best_error: 6.28445558429423
best_error: 6.2844551799981385
best_error: 6.134240139578722
best_error: 6.134239804426024
best_error: 6.043611443906681
best_error: 6.043611169589195
best_error: 6.035913899755407
best_error: 6.035913638370139
best_error: 5.957036661468815
best_error: 5.957036393745213
best_error: 5.93191295933031
best_error: 5.931912649215965
best_error: 5.912181340879997
best_error: 5.912181070891599
best_error: 5.907764747372255
best_error: 5.907764476816781
best_error: 5.907733069390243
best_error: 5.907732798830656
best_error: 5.907729797453345
best_error: 5.907729526893344
best_error: 5.9077276101613245
best_error: 5.9077273396010455
best_error: 5.907726682610041
best_error: 5.907726556423466
best_error: 5.758867292847015
best_error: 5.758866969580723
best_error: 5.736190215896087
best_error: 5.736189856903611
best_error: 5.704714720199927
best_error: 5.704714351647226
best_error: 5.592746046977038
best_error: 5.592745628596411
best_error: 5.161703443263027
best_error: 5.16170330412788
best_error: 4.974087721056748
best_error: 4.974086993399105
best_error: 4.9270274191015275
best_error: 4.9270266604010455
best_error: 4.9164392261635985
best_error: 4.9164390920672885
best_error: 4.913621835285749
best_error: 4.913621076842428
best_error: 4.86046694910449
best_error: 4.8604667562653585
best_error: 4.859357732343575
best_error: 4.859357057801075
best_error: 4.850496456221264
best_error: 4.850495814103546
best_error: 4.850248695051997
best_error: 4.850248499168927
best_error: 4.847446171146242
best_error: 4.847445972684934
best_error: 4.847377423923319
best_error: 4.847376792396034
best_error: 4.843625375227466
best_error: 4.843625181630344
best_error: 4.841964752138296
best_error: 4.841964550724079
best_error: 4.818157178673016
best_error: 4.818156965878993
best_error: 4.795805038257949
best_error: 4.795804813884953
best_error: 4.7956612743904765
best_error: 4.795661049634667
best_error: 4.790821566196972
best_error: 4.790821333331531
best_error: 4.786071982046131
best_error: 4.78607173958774
best_error: 4.782320495685912
best_error: 4.7823202452119515
best_error: 4.77777982024009
best_error: 4.777779568895388
best_error: 4.774244633615883
best_error: 4.7742440722373525
best_error: 4.699787532704514
best_error: 4.6997869042487626
best_error: 4.64357884585118
best_error: 4.643578620829354
best_error: 4.6379761940539606
best_error: 4.63797556009985
best_error: 4.5916743531365665
best_error: 4.591674128688895
best_error: 4.574414948381124
best_error: 4.574414315584077
best_error: 4.518834114786157
best_error: 4.5188338723239845
best_error: 4.480619812891117
best_error: 4.480619238637299
best_error: 4.421899296204108
best_error: 4.421899062186394
best_error: 4.4080288968486565
best_error: 4.408028383084689
best_error: 4.397918883871997
best_error: 4.397918390675211
best_error: 4.3797114807108315
best_error: 4.379711237366959
best_error: 4.355193532569956
best_error: 4.355193313920601
best_error: 4.326621463548168
best_error: 4.326620937100824
best_error: 4.258820478586827
best_error: 4.258819963383287
best_error: 4.2280023429387885
best_error: 4.22800214079016
best_error: 4.220123964614086
best_error: 4.220123425569879
best_error: 4.154781409050189
best_error: 4.154781226848542
best_error: 4.133682384037752
best_error: 4.133681875258626
best_error: 4.120328337796553
best_error: 4.120328164084868
best_error: 4.102537090438672
best_error: 4.102536591121151
best_error: 4.088601862525707
best_error: 4.088601687828717
best_error: 4.077046172576809
best_error: 4.077045993092982
best_error: 4.071418684287503
best_error: 4.071418218318052
best_error: 4.064924317820914
best_error: 4.0649238520943385
best_error: 4.063424723719644
best_error: 4.063424257726435
best_error: 4.062630197948577
best_error: 4.062629731814122
best_error: 4.062596598107072
best_error: 4.062596417827441
best_error: 4.062530043093691
best_error: 4.062529576921217
best_error: 4.062318977323483
best_error: 4.062318511123204
best_error: 4.062245329628912
best_error: 4.062244863418947
best_error: 4.062197547600665
best_error: 4.062197081384383
best_error: 4.062177691223099
best_error: 4.062177225004218
best_error: 4.062172416194166
best_error: 4.062171949974603
best_error: 4.062171948245432
best_error: 4.0621718761893275
