ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.058639836795203
best_error: 10.0586398337381
best_error: 9.684592305101047
best_error: 9.684592270423884
best_error: 3.684756188091368
best_error: 3.6847561880913267
best_error: 3.684756157077891
best_error: 3.677189566446484
best_error: 3.6771895487057145
best_error: 3.6771895472559066
best_error: 3.6692984518097624
best_error: 3.669298451809752
best_error: 3.669298451808909
best_error: 3.669298432598217
best_error: 3.6544832954882125
best_error: 3.6544832954881925
best_error: 3.6544832954875965
best_error: 3.654483275388955
best_error: 3.6326604155991546
best_error: 3.632660312722529
best_error: 3.618804294718416
best_error: 3.61880422238474
best_error: 3.582850458619349
best_error: 3.582850458619196
best_error: 3.5828504392954046
best_error: 3.582520540262329
best_error: 3.5825205402621885
best_error: 3.5825205216659635
best_error: 3.582334337045638
best_error: 3.5823343370454923
best_error: 3.582334319008163
best_error: 3.5821488767950855
best_error: 3.5821488767949363
best_error: 3.5821488590869235
best_error: 3.5820348190078874
best_error: 3.5820348190077325
best_error: 3.582034801824166
best_error: 3.5819912224627877
best_error: 3.581991222462643
best_error: 3.5819912055758536
best_error: 3.581887815888905
best_error: 3.5818878158887584
best_error: 3.581887799715097
best_error: 3.5818461191572304
best_error: 3.5818461191570776
best_error: 3.5818461031743873
best_error: 3.5818382668195645
best_error: 3.581838266819426
best_error: 3.5818382508780595
best_error: 3.5818359600187115
best_error: 3.581835960018563
best_error: 3.581835944078039
best_error: 3.581833820249743
best_error: 3.5818338202495994
best_error: 3.5818338043098477
best_error: 3.5818327875329863
best_error: 3.5818327875328366
best_error: 3.581832771593466
best_error: 3.581832546255079
best_error: 3.5818325462549354
best_error: 3.5818325303156477
best_error: 3.581832431390165
best_error: 3.58183243139002
best_error: 3.581832415450773
best_error: 3.5818323643396264
best_error: 3.581832364339482
best_error: 3.5818323484002557
best_error: 3.5818323029333023
best_error: 3.581832302933159
best_error: 3.581832286993953
best_error: 3.5818322694509575
best_error: 3.5818322694508153
best_error: 3.5818322535116254
best_error: 3.5818322390077135
best_error: 3.581832239007569
best_error: 3.5818322230683926
best_error: 3.581832221160974
best_error: 3.5818322211608282
best_error: 3.5818322052216542
best_error: 3.5818321915130737
best_error: 3.581832179640511
best_error: 3.581832167470874
best_error: 3.581832158856134
best_error: 3.5818321544648866
best_error: 3.581832154464744
best_error: 3.5818321385255993
best_error: 3.58183212894156
best_error: 3.581831354247344
best_error: 3.581831354247208
best_error: 3.5818313400469015
best_error: 3.5818311124974116
best_error: 3.581831040990072
best_error: 3.580390064429113
best_error: 3.580389980163402
best_error: 3.5790199105693787
best_error: 3.5790198085743183
best_error: 3.56169219298445
best_error: 3.5616921929842134
best_error: 3.5616921794644
best_error: 3.55674000782959
best_error: 3.5567400078293447
best_error: 3.556740007417761
best_error: 3.5434829705665942
best_error: 3.543482970566335
best_error: 3.5434829699857864
best_error: 3.491007464683803
best_error: 3.4910073204574976
best_error: 3.4693967352850508
best_error: 3.469396681396977
best_error: 3.4666327727171025
best_error: 3.46663272175831
best_error: 3.46661770967194
best_error: 3.4666177096717568
best_error: 3.466496394823055
best_error: 3.4664963948228738
best_error: 3.466443799057378
best_error: 3.4664437990571964
best_error: 3.4664332536241305
best_error: 3.4664332536239386
best_error: 3.4664319989868573
best_error: 3.466431948242866
best_error: 3.466431870389138
best_error: 3.466431870388951
best_error: 3.4664306459683467
best_error: 3.4664306459681575
best_error: 3.4664305304786445
best_error: 3.466430530478456
best_error: 3.466430479240988
best_error: 3.466430479240801
best_error: 3.466430479156775
best_error: 3.4664304774805488
best_error: 3.4664304774803605
best_error: 3.466430476588202
best_error: 3.466430476588017
best_error: 3.4664304764404648
best_error: 3.4664304764404177
best_error: 3.466430476439455
