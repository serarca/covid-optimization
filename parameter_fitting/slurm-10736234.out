ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.142918752148407
best_error: 10.14291874022912
best_error: 9.705678338232216
best_error: 9.705678282635049
best_error: 6.192716870407681
best_error: 6.192716416887452
best_error: 4.935188749273068
best_error: 4.935188465521018
best_error: 4.731332412965247
best_error: 4.731332412964569
best_error: 4.731332400723989
best_error: 4.716422076056902
best_error: 4.716422076056234
best_error: 4.716422063066458
best_error: 4.705462964353548
best_error: 4.705462964352868
best_error: 4.705462950612938
best_error: 4.705104899955674
best_error: 4.705104862485416
best_error: 4.702342959222065
best_error: 4.702342922130088
best_error: 4.694252432689975
best_error: 4.694252432689295
best_error: 4.694252418467012
best_error: 4.6485171460783805
best_error: 4.648517146077695
best_error: 4.648517129696428
best_error: 4.471533894680413
best_error: 4.471533894679609
best_error: 4.462781100793105
best_error: 4.462781100792298
best_error: 4.4273121647858344
best_error: 4.427312164785018
best_error: 4.312615657480404
best_error: 4.312615657479637
best_error: 4.2383664135487225
best_error: 4.238366404097551
best_error: 4.0822312622450605
best_error: 4.082231262244518
best_error: 4.030842013052114
best_error: 4.03084201305178
best_error: 4.030842008080439
best_error: 4.028770253340389
best_error: 4.02877016680454
best_error: 4.028486164518339
best_error: 4.028486164517959
best_error: 4.028486161057642
best_error: 4.028486159367765
best_error: 4.027742487347475
best_error: 4.027742487347114
best_error: 4.027742482284632
best_error: 4.027204544000983
best_error: 4.0272044650651235
best_error: 4.019930656494371
best_error: 4.0199305834396295
best_error: 4.0199302547568685
best_error: 4.019930181717792
best_error: 4.0199290692763245
best_error: 4.019928996166955
best_error: 4.0199268682294065
best_error: 4.019926795281959
best_error: 4.019926304359112
best_error: 4.019926231338886
best_error: 4.019926211142798
best_error: 4.019926138126097
best_error: 4.01992613146693
best_error: 3.977450565089464
best_error: 3.977450565089228
best_error: 3.977450555792431
best_error: 3.9762771161066204
best_error: 3.976277116106376
best_error: 3.9762771066419114
best_error: 3.975769854629738
best_error: 3.9757698546295055
best_error: 3.9757698451484003
best_error: 3.9756401939521013
best_error: 3.975640193951866
best_error: 3.9756401844104325
best_error: 3.975565318159864
best_error: 3.975565318159622
best_error: 3.975565308570301
best_error: 3.975518455972555
best_error: 3.9755184559723205
best_error: 3.975518446382013
best_error: 3.9754801923969048
best_error: 3.9754801923966587
best_error: 3.9754801828055664
best_error: 3.975459123514748
best_error: 3.975459123514515
best_error: 3.975459113922965
best_error: 3.956125187835491
best_error: 3.9561251878352683
best_error: 3.9561251766447803
best_error: 3.9449774191030635
best_error: 3.944977419102847
best_error: 3.9449774070498442
best_error: 3.9413872118861617
best_error: 3.9413872118858024
best_error: 3.9296205231203674
best_error: 3.9296205231201666
best_error: 3.929620510153184
best_error: 3.9278753539271904
best_error: 3.927875353926994
best_error: 3.9278753408948703
best_error: 3.9270371669611555
best_error: 3.927037166960951
best_error: 3.9270371539024906
best_error: 3.9269604129002573
best_error: 3.9269603552510604
best_error: 3.9269447583465835
best_error: 3.926944758346383
best_error: 3.926944745250392
best_error: 3.92681376226761
best_error: 3.9268137622674146
best_error: 3.926813749178153
best_error: 3.9267772762475253
best_error: 3.9267772762473188
best_error: 3.926777263159946
best_error: 3.92675731035471
best_error: 3.9267572526727563
best_error: 3.781020200514245
best_error: 3.7810202005137112
best_error: 3.7810201784062443
best_error: 3.766560137651094
best_error: 3.7665601376505107
best_error: 3.764710484368826
best_error: 3.764710484368237
best_error: 3.7576263389749265
best_error: 3.7576263389743203
best_error: 3.755730534938767
best_error: 3.7557305349381735
best_error: 3.755730513609626
best_error: 3.745316849758617
best_error: 3.7453167840001242
best_error: 3.74245395045824
best_error: 3.742453950457807
best_error: 3.742453949273218
best_error: 3.740203623924752
best_error: 3.74020362392434
best_error: 3.7398158983457215
best_error: 3.7398158983453045
best_error: 3.7397563256157405
best_error: 3.739756277340285
best_error: 3.7397523319816712
best_error: 3.73975233198126
best_error: 3.7396691603303154
best_error: 3.7396691099349844
best_error: 3.739663147433501
best_error: 3.7396630961800748
best_error: 3.7396613275469313
best_error: 3.7396612769119395
best_error: 3.7396589239813607
best_error: 3.739658873232579
best_error: 3.7396588007914446
best_error: 3.739658800791016
best_error: 3.7396587741190013
best_error: 3.739658757780893
best_error: 3.739658757780629
best_error: 3.7396587536233454
best_error: 3.739658752897715
best_error: 3.7396587528974505
best_error: 3.739658752896298
best_error: 3.73965875226044
best_error: 3.7396587522600226
best_error: 3.7396587519064908
best_error: 3.739658751906231
best_error: 3.739658751905074
