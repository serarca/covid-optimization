ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.628149316410845
best_error: 9.628149309592503
best_error: 7.7940742882120055
best_error: 7.794074204873954
best_error: 6.365511395328003
best_error: 6.365511363951223
best_error: 6.365511196106097
best_error: 6.224786295376458
best_error: 6.224786215537131
best_error: 6.224786079411775
best_error: 6.205235110993518
best_error: 6.2052350155919225
best_error: 6.20523489618302
best_error: 4.684685644858427
best_error: 4.684685526027674
best_error: 4.68468551785279
best_error: 3.9304368962750726
best_error: 3.9304367858905813
best_error: 3.370145462853806
best_error: 3.3701454432403892
best_error: 3.221432330549794
best_error: 3.2214323135166567
best_error: 3.2104277632971296
best_error: 3.2104276677443204
best_error: 3.210427663628335
best_error: 3.209724294199323
best_error: 3.2097242773547663
best_error: 2.4268215231126584
best_error: 2.4268214857010593
best_error: 2.4268213421854394
best_error: 2.3806526119818
best_error: 2.3806526050811554
best_error: 2.3806523850150603
best_error: 2.3586259279837387
best_error: 2.358625913094287
best_error: 2.358625714715979
best_error: 2.2715658058582084
best_error: 2.2715657765788544
best_error: 2.2715655978702562
best_error: 2.2061935159673665
best_error: 2.206193476903434
best_error: 2.206193308880483
best_error: 2.174545797522585
best_error: 2.1745457549186495
best_error: 2.174545589976937
best_error: 2.1679953912915293
best_error: 2.167995348249991
best_error: 2.167995183794844
best_error: 2.164119146988571
best_error: 2.1641191036881717
best_error: 2.164118938970505
best_error: 2.162252471479716
best_error: 2.162252428054443
best_error: 2.1622522632109007
best_error: 2.1609713181446146
best_error: 2.160971274635336
best_error: 2.1609711097038096
best_error: 2.1602416954884633
best_error: 2.1602416519335774
best_error: 2.160241486951641
best_error: 2.160186224200948
best_error: 2.160186180642598
best_error: 2.1601860156568278
best_error: 2.160176060723368
best_error: 2.160176017164388
best_error: 2.160175852177921
best_error: 2.16017097500368
best_error: 2.1601709314443824
best_error: 2.160170766457558
best_error: 2.1601685149824608
best_error: 2.1601684714230007
best_error: 2.16016830643602
best_error: 2.1601669330442768
best_error: 2.160166889484719
best_error: 2.1601667244976315
best_error: 2.160166250742015
best_error: 2.1601662071824292
best_error: 2.160166042195277
best_error: 2.148794340790961
best_error: 2.148794320909786
best_error: 2.1116185272318937
best_error: 2.1116185118179605
best_error: 2.1050611959016985
best_error: 2.1050611499565552
best_error: 2.1050609741244335
best_error: 2.092085966621206
best_error: 2.0920859208704057
best_error: 2.0920857420806573
best_error: 2.0545428622071302
best_error: 2.054542822677288
best_error: 2.054542630709725
best_error: 1.9836323546732015
best_error: 1.983632046468128
best_error: 1.9692670482649643
best_error: 1.9692670427361392
best_error: 1.969266754487296
best_error: 1.9665695748971874
best_error: 1.9665695674729688
best_error: 1.9665692867832898
best_error: 1.9663123801328877
best_error: 1.9663123757380458
best_error: 1.9663123247947887
best_error: 1.9652789513720603
best_error: 1.965278943382503
best_error: 1.9652786643447926
best_error: 1.9644038876023848
best_error: 1.96440387946204
best_error: 1.9644036005451933
best_error: 1.9641920777300432
best_error: 1.9641920695846906
best_error: 1.9641917906656152
best_error: 1.9641004767168055
best_error: 1.9641004685692849
best_error: 1.9641001896492383
best_error: 1.9640579878604196
best_error: 1.964057979711891
best_error: 1.9640577007913964
best_error: 1.9640356660881255
best_error: 1.96403565793943
best_error: 1.9640353790179912
best_error: 1.964031926522077
best_error: 1.9640319183733683
best_error: 1.9640316394517567
best_error: 1.9640302971631833
best_error: 1.9640302890144494
best_error: 1.9640300100927741
best_error: 1.9640298874580076
best_error: 1.964029879309269
best_error: 1.9640297788872
best_error: 1.9633466379611018
best_error: 1.9633466359089464
best_error: 1.9633465824782521
best_error: 1.9628616104316068
best_error: 1.962861605975235
best_error: 1.9628613170851137
best_error: 1.9624464444322762
best_error: 1.96244644216708
best_error: 1.962446148505503
best_error: 1.9611362084596045
best_error: 1.9611362060653317
best_error: 1.9566758392280796
best_error: 1.9566758362584085
best_error: 1.9563447765450288
best_error: 1.9563444688650096
best_error: 1.9537451670936548
best_error: 1.9537451635220355
best_error: 1.947691956776898
best_error: 1.9476916518282066
best_error: 1.9434648213851209
best_error: 1.9434645207200547
best_error: 1.938685919303147
best_error: 1.9386856408311632
best_error: 1.9377773980261832
best_error: 1.937777119424592
best_error: 1.9301189362481044
best_error: 1.930118925432125
best_error: 1.9301188775623976
best_error: 1.9300954735719154
best_error: 1.9300951928335393
best_error: 1.9295794146643317
best_error: 1.9295791444317474
best_error: 1.929091651084684
best_error: 1.9290913771187943
best_error: 1.9290170565386204
best_error: 1.9290167798454272
best_error: 1.9290029778415505
best_error: 1.9290027027489127
best_error: 1.928976268848002
best_error: 1.9289759937492974
best_error: 1.9288744625479488
best_error: 1.928874187425527
best_error: 1.92883638470293
best_error: 1.928836372784335
best_error: 1.928836325549451
best_error: 1.9288068056130339
best_error: 1.9288065289065197
best_error: 1.928803570188843
best_error: 1.9288032934810262
best_error: 1.928802821252905
best_error: 1.928802544544949
best_error: 1.9288024734371256
best_error: 1.9288024699626547
best_error: 1.9288024678784177
best_error: 1.9288024494606364
best_error: 1.9288024459861512
best_error: 1.9288024379321667
best_error: 1.9288024344576806
best_error: 1.9288024327106035
best_error: 1.9288024292361334
best_error: 1.9288024287628653
best_error: 1.928802428425037
