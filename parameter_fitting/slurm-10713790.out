ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.239205618393049
best_error: 12.23920557953139
best_error: 12.239205560557913
best_error: 12.037869401033578
best_error: 12.03786934990589
best_error: 12.037869329423996
best_error: 10.817724807100511
best_error: 10.817724669825449
best_error: 10.817724653063031
best_error: 9.38384802000239
best_error: 9.383847800854511
best_error: 8.823232885751688
best_error: 8.823232664701145
best_error: 8.804470493585875
best_error: 8.804470276835769
best_error: 7.565065018295002
best_error: 7.565064870355226
best_error: 7.0283950538896995
best_error: 7.028394905092448
best_error: 6.648140993929392
best_error: 6.648140857235896
best_error: 6.428319931084179
best_error: 6.428319793796444
best_error: 6.383813798714135
best_error: 6.3838135405738266
best_error: 5.891250911757703
best_error: 5.891250503588488
best_error: 5.5094253501651025
best_error: 5.509424975114354
best_error: 4.842603369680791
best_error: 4.84260304786343
best_error: 4.643195194181475
best_error: 4.6431948771032925
best_error: 4.5960992230601825
best_error: 4.596098902176065
best_error: 4.57445982206855
best_error: 4.574459499407412
best_error: 4.565568078374877
best_error: 4.565567754634786
best_error: 4.564014911614588
best_error: 4.564014663591276
best_error: 4.56072120427881
best_error: 4.560720861453532
best_error: 4.429138877694374
best_error: 4.429138478680325
best_error: 4.362257792744545
best_error: 4.36225733200117
best_error: 4.3600374116951865
best_error: 4.3600372162996734
best_error: 4.342988560889186
best_error: 4.342988100319769
best_error: 4.333867853573615
best_error: 4.333867659175643
best_error: 4.332819026585187
best_error: 4.332818566030024
best_error: 4.33255205440379
best_error: 4.332551860051468
best_error: 4.332540566112041
best_error: 4.332540105523049
best_error: 4.332315711113777
best_error: 4.332315250497487
best_error: 4.332295372322848
best_error: 4.3322951779815915
best_error: 4.330070539422092
best_error: 4.330070110675585
best_error: 4.32756044036136
best_error: 4.327560007824105
best_error: 4.326641821957284
best_error: 4.326641626546923
best_error: 4.319652946433951
best_error: 4.319652752042955
best_error: 4.312588779423828
best_error: 4.312588359742605
best_error: 4.292411559781258
best_error: 4.292411344499163
best_error: 4.244668202570188
best_error: 4.24466798315978
best_error: 4.184377754473093
best_error: 4.18437754317852
best_error: 4.087455385192346
best_error: 4.0874551873257525
best_error: 3.989873952793486
best_error: 3.9898736575327227
best_error: 3.985435862588249
best_error: 3.9854355647653152
best_error: 3.9843637319673997
best_error: 3.9843635479953687
best_error: 3.983455050163718
best_error: 3.983454751707388
best_error: 3.9833857458858484
best_error: 3.9833854465832053
best_error: 3.983334868887119
best_error: 3.983334684997989
best_error: 3.9460797823480633
best_error: 3.946079498231448
best_error: 3.9302108619013527
best_error: 3.930210583528173
best_error: 3.916627795814974
best_error: 3.916627515926281
best_error: 3.913980090589334
best_error: 3.913979810405675
best_error: 3.9124186030399475
best_error: 3.912418322682416
best_error: 3.9116853020616125
best_error: 3.9116850216224304
best_error: 3.9111775690290487
best_error: 3.9111772885333527
best_error: 3.910964293823451
best_error: 3.9109640133040164
best_error: 3.9109423224395408
best_error: 3.910942041917654
best_error: 3.910927818917149
best_error: 3.9109275383936657
best_error: 3.910921496047169
best_error: 3.910921215522964
best_error: 3.910919396745972
best_error: 3.9109192508312978
best_error: 3.86101301192961
best_error: 3.8610127444997775
best_error: 3.814519314273314
best_error: 3.814519048436558
best_error: 3.7285352089802277
best_error: 3.728534952997884
best_error: 3.6850075964320754
best_error: 3.6850073378349735
best_error: 3.657967591783044
best_error: 3.6579673313014247
best_error: 3.644793899085762
best_error: 3.644793637153314
best_error: 3.6355836878129684
best_error: 3.6355834248680967
best_error: 3.6315819084335095
best_error: 3.6315816450492995
best_error: 3.6298458158910423
best_error: 3.629845552315806
best_error: 3.6298249115470878
best_error: 3.6298246479695617
best_error: 3.629813455988134
best_error: 3.629813192409336
best_error: 3.6298076681855047
best_error: 3.62980740460607
best_error: 3.6298039152712196
best_error: 3.6298036516913634
best_error: 3.629802204303513
best_error: 3.6298019407234783
best_error: 3.6298009511143894
best_error: 3.6298007779399826
best_error: 3.629800768547023
best_error: 3.629800339568844
best_error: 3.629800339567608
best_error: 3.575463731295809
best_error: 3.575463449528976
best_error: 3.4207699718204228
best_error: 3.4207695391555806
best_error: 2.958022500889826
best_error: 2.958022005969945
best_error: 2.7772216979061186
best_error: 2.7772212485613044
best_error: 2.7145899199248977
best_error: 2.714589472794276
best_error: 2.710473236359449
best_error: 2.7104727884882216
best_error: 2.707278810337799
best_error: 2.707278366011872
best_error: 2.705897811654662
best_error: 2.705897372455728
best_error: 2.705668394561598
best_error: 2.7056679553184058
best_error: 2.7055742791577355
best_error: 2.7055738398963713
best_error: 2.7055127750687484
best_error: 2.705512335795511
best_error: 2.705477353263063
best_error: 2.7054769139829946
best_error: 2.705453798763023
best_error: 2.7054533594784163
best_error: 2.705440528566617
best_error: 2.7054400892794557
best_error: 2.705431502927172
best_error: 2.705431063638255
best_error: 2.705426169187537
best_error: 2.7054257298976148
best_error: 2.705422142351776
best_error: 2.7054217030610506
best_error: 2.7054202626216517
best_error: 2.70541982333058
best_error: 2.7054187676822377
best_error: 2.705418328390878
best_error: 2.7050979987009125
best_error: 2.7050975537847313
best_error: 2.704033144724259
best_error: 2.704032692837065
best_error: 2.7040212091402913
best_error: 2.7040207567681662
best_error: 2.7040205720631416
best_error: 2.7040201196650977
best_error: 2.7040200783011645
best_error: 2.7040200441323035
best_error: 2.7040200437455475
best_error: 2.704020043320746
best_error: 2.7040200429561425
best_error: 2.7040200427465804
best_error: 2.704020042594138
best_error: 2.7040200424706367
best_error: 2.7040200423716403
