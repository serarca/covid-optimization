ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.343159009556242
best_error: 19.34315886283607
best_error: 4.357119902907326
best_error: 4.357119901272771
best_error: 4.357119900832983
best_error: 4.350353989861076
best_error: 4.3503539896506025
best_error: 4.350353987773269
best_error: 4.3223267763172695
best_error: 4.322326776077049
best_error: 4.322326774173558
best_error: 4.191657155465855
best_error: 4.191657155075604
best_error: 4.191657153058428
best_error: 3.541425868871969
best_error: 3.541425842817818
best_error: 3.3497598062188705
best_error: 3.3497598030613975
best_error: 3.3497598022626294
best_error: 3.2822860353509147
best_error: 3.28228603181315
best_error: 3.266838231617064
best_error: 3.266838227953954
best_error: 3.265092613228274
best_error: 3.265092609389073
best_error: 2.915899179347569
best_error: 2.9158990098915507
best_error: 2.6723217290399988
best_error: 2.672321622592039
best_error: 1.8480233302083091
best_error: 1.8480232509751549
best_error: 1.844253765530581
best_error: 1.844253761750369
best_error: 1.844253756659032
best_error: 1.8341860384802993
best_error: 1.8341860321069898
best_error: 1.747792037493995
best_error: 1.7477920345065454
best_error: 1.7477920325898264
best_error: 1.735861770405522
best_error: 1.735861757757396
best_error: 1.7241879563711566
best_error: 1.724187902278685
best_error: 1.716653469983482
best_error: 1.716653457677138
best_error: 1.7134595541769744
best_error: 1.7134595384157914
best_error: 1.6819069169649523
best_error: 1.681906887365852
best_error: 1.6266955920803383
best_error: 1.626695559199379
best_error: 1.504733759731872
best_error: 1.5047337332903654
best_error: 1.3973160985129869
best_error: 1.3973160285671715
best_error: 1.3549518734842416
best_error: 1.3549518729265537
best_error: 1.3549518723533316
best_error: 1.3532466419053713
best_error: 1.3532466297146084
best_error: 1.3495352543761083
best_error: 1.3495352231649667
best_error: 1.3407456231902395
best_error: 1.3407455899744847
best_error: 1.2421947066810364
best_error: 1.2421946680077418
best_error: 1.1670574308816226
best_error: 1.167057266242321
best_error: 1.1231085442358817
best_error: 1.1231083199804868
best_error: 1.0985837746218656
best_error: 1.098583686278646
best_error: 1.0964107578776423
best_error: 1.0964107292508565
best_error: 1.092366790308366
best_error: 1.092366784205249
best_error: 1.0900693740272818
best_error: 1.0900693705511484
best_error: 1.0900146929762566
best_error: 1.0900146915532887
best_error: 1.089901269143047
best_error: 1.0899012687983758
best_error: 1.0899012686824876
best_error: 1.0898794916783363
best_error: 1.0898794912768197
best_error: 1.0898794912065781
best_error: 1.0898471652977009
best_error: 1.089847162114884
best_error: 1.0897929887918922
best_error: 1.0897929849980423
best_error: 1.0895233892499643
best_error: 1.0895233795365
best_error: 1.0893879444557744
best_error: 1.0893879385402419
best_error: 1.0892882292996646
best_error: 1.0892882281740932
best_error: 1.0892782532510525
best_error: 1.0892782518076816
best_error: 1.0892727282581902
best_error: 1.0892727272249674
best_error: 1.0892656392184867
best_error: 1.0892656383360149
best_error: 1.0892565320125602
best_error: 1.089256531194645
best_error: 1.0892297716699153
best_error: 1.0892297712158074
best_error: 1.0891938829094239
best_error: 1.089193881526716
best_error: 1.0891833063158272
best_error: 1.0891833060965497
best_error: 1.0891771413291083
best_error: 1.089177141078799
best_error: 1.0891617388782826
best_error: 1.0891617387106949
best_error: 1.089112745567148
best_error: 1.0891127409583377
best_error: 1.089029830058258
best_error: 1.089029825211539
best_error: 1.0887392470548753
best_error: 1.0887392408318954
best_error: 1.0885978441006177
best_error: 1.088597843699512
best_error: 1.0885719923021027
best_error: 1.088571989267387
best_error: 1.0875311288915703
best_error: 1.0875311286724958
best_error: 1.087531128464577
best_error: 1.0873370219619067
best_error: 1.0873370203192825
best_error: 1.0873122868436438
best_error: 1.0873122850339922
best_error: 1.0871967415815942
best_error: 1.0871967385783952
best_error: 1.0869215121969262
best_error: 1.0869215077279795
best_error: 1.086849343990487
best_error: 1.0868493409896096
best_error: 1.0868122125557151
best_error: 1.0868122125427369
best_error: 1.0868122124368327
best_error: 1.0867994265086218
best_error: 1.086799426477367
best_error: 1.0867889113202986
best_error: 1.086788911314569
best_error: 1.0867854744251135
best_error: 1.0867854742364367
best_error: 1.0867818219072296
best_error: 1.0867818214710194
best_error: 1.086777988446793
best_error: 1.086777986281447
best_error: 1.0867762937612744
best_error: 1.0867762933487142
best_error: 1.086774041544215
best_error: 1.0867740412598983
best_error: 1.0867725910615187
best_error: 1.0867725903774943
best_error: 1.0867720447668432
best_error: 1.0867720443518778
best_error: 1.0867718102983246
best_error: 1.0867718101050559
best_error: 1.0867714935966688
best_error: 1.0867714933801218
best_error: 1.0867707143719698
best_error: 1.0867707142446088
best_error: 1.0867704574698642
best_error: 1.0867704574573602
best_error: 1.0867704574153851
best_error: 1.086770368676372
best_error: 1.0867703686638033
best_error: 1.0867703686218833
best_error: 1.086770329358026
best_error: 1.0867703293454276
best_error: 1.0867703293035322
best_error: 1.0867703246403657
best_error: 1.0867703245756901
best_error: 1.0867701458916248
best_error: 1.086770145683401
best_error: 1.0867699310303187
best_error: 1.0867699308908205
best_error: 1.0867697767358735
best_error: 1.0867697764067406
best_error: 1.0867696181842732
best_error: 1.0867696181204
best_error: 1.0867692440317527
best_error: 1.0867692439417846
best_error: 1.0867675148023643
best_error: 1.0867675136067918
best_error: 1.0867655719646263
best_error: 1.0867655700545218
best_error: 1.08675733430725
best_error: 1.0867573303234648
best_error: 1.086745275855676
best_error: 1.086745268690755
best_error: 1.086719715822561
best_error: 1.0867197074958623
best_error: 1.086701593489091
best_error: 1.086701593105378
best_error: 1.0867015925554524
best_error: 1.0866580252954632
best_error: 1.0866580247554045
best_error: 1.086655559479351
best_error: 1.0866555593984604
best_error: 1.0866555587577855
best_error: 1.0866259691907174
best_error: 1.0866259681134898
best_error: 1.086569771087808
best_error: 1.0865697703212198
best_error: 1.086437734945161
best_error: 1.0864377317357885
best_error: 1.0863182951461952
best_error: 1.086318293065742
best_error: 1.0862774841389327
best_error: 1.0862774841347713
best_error: 1.086277484116571
best_error: 1.0862774840942337
best_error: 1.0862719593682977
best_error: 1.0862719586385001
best_error: 1.086265209709773
best_error: 1.0862652089536646
best_error: 1.086262113489648
best_error: 1.08626211203632
best_error: 1.086253918910733
best_error: 1.0862539188020583
best_error: 1.0862519714576238
best_error: 1.0862519702115014
best_error: 1.0862499852500795
best_error: 1.0862499851606513
best_error: 1.0862493286702122
best_error: 1.0862493286122692
best_error: 1.08624894016007
best_error: 1.0862489399637445
best_error: 1.0862486386798613
best_error: 1.0862486384832772
best_error: 1.086248636026813
best_error: 1.0862486358082295
best_error: 1.0862484637265835
best_error: 1.0862484635818062
best_error: 1.086248433990578
best_error: 1.0862484339872815
best_error: 1.0862484333305966
best_error: 1.0862484333279239
best_error: 1.0862484333251514
