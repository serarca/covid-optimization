ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.030842360886947
best_error: 13.030842265604694
best_error: 12.556980726707831
best_error: 12.556980563732782
best_error: 12.188386054612046
best_error: 12.188385837485544
best_error: 11.624203849836015
best_error: 11.624203549030838
best_error: 8.613305288072073
best_error: 8.613304552838038
best_error: 6.471715020951371
best_error: 6.471714185584814
best_error: 5.484531947114821
best_error: 5.48453130946038
best_error: 5.473050548963686
best_error: 5.473050328640635
best_error: 5.337760312235819
best_error: 5.33775969569618
best_error: 5.32862149979402
best_error: 5.328620882115377
best_error: 5.324435549945364
best_error: 5.324434931745509
best_error: 5.323924577844743
best_error: 5.323923959581293
best_error: 5.3237085122306
best_error: 5.323708306953909
best_error: 5.323696436677298
best_error: 5.323695818385503
best_error: 5.323661381601923
best_error: 5.323660763309805
best_error: 5.323656625708072
best_error: 5.323656420437654
best_error: 5.323642553754867
best_error: 5.3236419354666245
best_error: 5.323607207974547
best_error: 5.32360658969292
best_error: 5.323487170121901
best_error: 5.323486964896206
best_error: 5.322388025322812
best_error: 5.322387819983957
best_error: 5.318320490338202
best_error: 5.318320281635902
best_error: 5.30582028465515
best_error: 5.305819710301478
best_error: 5.305804248684851
best_error: 5.305803675050361
best_error: 5.305209908731942
best_error: 5.305209335246753
best_error: 5.303033839680095
best_error: 5.303033271515873
best_error: 5.297986857220679
best_error: 5.297986321913314
best_error: 5.2882580469601965
best_error: 5.288257506123855
best_error: 5.273770479271162
best_error: 5.273770245697159
best_error: 5.270895990961046
best_error: 5.27089575353248
best_error: 5.252107119189146
best_error: 5.252106900641461
best_error: 5.22993959168154
best_error: 5.229939386612495
best_error: 5.218440344680015
best_error: 5.2184397199190204
best_error: 5.173190459733421
best_error: 5.173190220727634
best_error: 5.140273442733829
best_error: 5.140273212464713
best_error: 5.11965698328498
best_error: 5.119656754796427
best_error: 5.117218094164916
best_error: 5.117217865709613
best_error: 5.117010760931013
best_error: 5.117010158754299
best_error: 5.116927350615247
best_error: 5.116927122163892
best_error: 5.116844585699772
best_error: 5.1168439834988
best_error: 5.090401294244076
best_error: 5.090401078828949
best_error: 5.0758972989577735
best_error: 5.075897091160748
best_error: 5.051008181691362
best_error: 5.0510075414496365
best_error: 5.045454699610655
best_error: 5.045454058520877
best_error: 5.038282724551433
best_error: 5.038282507347539
best_error: 5.037155768400365
best_error: 5.037155121158442
best_error: 5.032477397221697
best_error: 5.032477187149963
best_error: 5.0285111996726055
best_error: 5.028510534647518
best_error: 5.024603255592208
best_error: 5.024603045339209
best_error: 5.021035620840522
best_error: 5.021034952057295
best_error: 5.016962411735065
best_error: 5.016962199323617
best_error: 5.00978598544555
best_error: 5.0097853180086975
best_error: 5.006709741473095
best_error: 5.006709522271189
best_error: 5.002987169103531
best_error: 5.002986951590397
best_error: 4.999086268060166
best_error: 4.999086051123477
best_error: 4.994703589464052
best_error: 4.994703357304398
best_error: 4.993942426081833
best_error: 4.993941780322533
best_error: 4.989853067092739
best_error: 4.989852827274951
best_error: 4.988747698823598
best_error: 4.98874706430478
best_error: 4.988200737206718
best_error: 4.9882004999514695
best_error: 4.98179980994971
best_error: 4.981799133387971
best_error: 4.979265392150065
best_error: 4.979265186837129
best_error: 4.975934913543151
best_error: 4.975934243145783
best_error: 4.974090847540575
best_error: 4.974090610250733
best_error: 4.971781206108825
best_error: 4.971780974673997
best_error: 4.968916030392059
best_error: 4.968915365912761
best_error: 4.963136986093668
best_error: 4.963136762628935
best_error: 4.960791149148892
best_error: 4.960790915640818
best_error: 4.959401341962324
best_error: 4.959400693573162
best_error: 4.944287888128396
best_error: 4.944287657265061
best_error: 4.941943042512491
best_error: 4.941942376064783
