ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.464053148760758
best_error: 9.46405310744406
best_error: 9.402873613669708
best_error: 9.402873566758684
best_error: 4.233656650017106
best_error: 4.233656649999837
best_error: 3.893489622797965
best_error: 3.8934894952087404
best_error: 3.8346810821582906
best_error: 3.834681082152727
best_error: 3.834681075434908
best_error: 3.808012403074419
best_error: 3.808012403068419
best_error: 3.8080123961766423
best_error: 3.728988066459222
best_error: 3.7289879537315214
best_error: 3.7209997606762215
best_error: 3.7209997586705073
best_error: 3.720999752182755
best_error: 3.720563192616473
best_error: 3.720563189120761
best_error: 3.7205631840670024
best_error: 3.7204500951679833
best_error: 3.7204500915227157
best_error: 3.7204500866032113
best_error: 3.7203976669604315
best_error: 3.720397663285591
best_error: 3.720397658389463
best_error: 3.7203655771293063
best_error: 3.7203655731795187
best_error: 3.7203655685545365
best_error: 3.720359326965751
best_error: 3.72035932301241
best_error: 3.720359318390235
best_error: 3.720358612128981
best_error: 3.7203586081752476
best_error: 3.720358603553379
best_error: 3.7203581980447353
best_error: 3.7203581940907853
best_error: 3.720358189469084
best_error: 3.7203580179833438
best_error: 3.7203580140292885
best_error: 3.7203580094076707
best_error: 3.7203578901268544
best_error: 3.720357890115504
best_error: 3.7203578882831954
best_error: 3.7203578815511675
best_error: 3.7193673546753536
best_error: 3.7193673546607853
best_error: 3.719367354007539
best_error: 3.7187494601828055
best_error: 3.718749460167891
best_error: 3.7187494595047936
best_error: 3.7186873819583313
best_error: 3.7186873819433464
best_error: 3.7186873817149078
best_error: 3.7186873812697803
best_error: 3.718666687083619
best_error: 3.718666687068582
best_error: 3.71866668664986
best_error: 3.718666686379484
best_error: 3.7186423483583892
best_error: 3.718642348343299
best_error: 3.7186423478222665
best_error: 3.7186423476489976
best_error: 3.7186375435164685
best_error: 3.718637543501372
best_error: 3.7186375429686365
best_error: 3.7186375428064182
best_error: 3.7186364858942333
best_error: 3.7186364858791365
best_error: 3.71863648534652
best_error: 3.7186364851840343
best_error: 3.718635574540842
best_error: 3.7186355745257544
best_error: 3.718635573993238
best_error: 3.7186355738305172
best_error: 3.718634499970684
best_error: 3.7186344999555763
best_error: 3.718634499423204
best_error: 3.7186344992602094
best_error: 3.7186337606503175
best_error: 3.7186337606352105
best_error: 3.7186337601029322
best_error: 3.718633759939742
best_error: 3.718631895867072
best_error: 3.718631895851967
best_error: 3.7186318953199033
best_error: 3.718631895156238
best_error: 3.7186309838571043
best_error: 3.7186309838419973
best_error: 3.718630983310047
best_error: 3.718630983146143
best_error: 3.7186307697795264
best_error: 3.7186307697644345
best_error: 3.7186307692324916
best_error: 3.7186307690685387
best_error: 3.7186306570191547
best_error: 3.718630657004057
best_error: 3.7186306564721283
best_error: 3.7186306563081524
best_error: 3.7186304607498917
best_error: 3.718630460731654
best_error: 3.7186304014935354
best_error: 3.7186304014784293
best_error: 3.7186304009465294
best_error: 3.7186304007825006
best_error: 3.7186303416336437
best_error: 3.71863034161854
best_error: 3.7186303410866466
best_error: 3.7186303409226027
best_error: 3.7186303394968916
best_error: 3.718630339478666
best_error: 3.7186303388245845
best_error: 3.7186303388094784
best_error: 3.7186303382775834
best_error: 3.7186303381135444
best_error: 3.7186303229249758
best_error: 3.7186303229098927
best_error: 3.718630322377975
best_error: 3.7186303222139316
best_error: 3.7186303194934167
best_error: 3.718630319478315
best_error: 3.7186303189464147
best_error: 3.718630318782373
best_error: 3.718630318255694
best_error: 3.718630318091653
best_error: 3.718630317812031
best_error: 3.7186303176479827
best_error: 3.718630317395258
best_error: 3.718630317231214
best_error: 3.718630317133497
best_error: 3.7186303169694574
best_error: 3.7186303166844965
