ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.945205658142587
best_error: 11.94520560380894
best_error: 11.945205590253487
best_error: 11.591679791526376
best_error: 11.591679713566275
best_error: 11.591679701950904
best_error: 10.413804204976076
best_error: 10.413804042282354
best_error: 9.294649240828948
best_error: 9.294649019124213
best_error: 8.8290012659965
best_error: 8.829001046675693
best_error: 8.761040867202723
best_error: 8.761040648647286
best_error: 8.175824635313752
best_error: 8.175824532426425
best_error: 8.17582449909526
best_error: 7.670890873996413
best_error: 7.670890785612347
best_error: 7.67089072971162
best_error: 7.400762262585564
best_error: 7.400762179431528
best_error: 7.400762112932327
best_error: 7.258414688699669
best_error: 7.258414605359993
best_error: 7.25841453800707
best_error: 7.207621396766706
best_error: 7.207621313864729
best_error: 7.207621245064354
best_error: 7.176000560686297
best_error: 7.176000475839707
best_error: 7.176000408507184
best_error: 7.156402487155687
best_error: 7.156402401493286
best_error: 7.156402334613986
best_error: 7.1442195939659925
best_error: 7.144219508196079
best_error: 7.144219441159988
best_error: 7.0917688035267314
best_error: 7.091768566671842
best_error: 6.073226369167292
best_error: 6.073226208152062
best_error: 5.880740432753381
best_error: 5.880739573888182
best_error: 5.747033513492048
best_error: 5.747032690454571
best_error: 4.857166462479223
best_error: 4.857165820965848
best_error: 4.620357793797611
best_error: 4.620357304687433
best_error: 4.395361085411566
best_error: 4.395360460963378
best_error: 4.320699174278898
best_error: 4.320698558885154
best_error: 4.3146564676385815
best_error: 4.314656342620749
best_error: 4.2566013094901285
best_error: 4.256600843176563
best_error: 4.228613966221771
best_error: 4.228613462161237
best_error: 4.215415257999618
best_error: 4.215415113388258
best_error: 4.179596131478363
best_error: 4.179595972256114
best_error: 4.142382283075445
best_error: 4.142382095174403
best_error: 4.141288223804213
best_error: 4.141287782991247
best_error: 4.000729770956985
best_error: 4.000729321898513
best_error: 3.9065660476050192
best_error: 3.9065658974477295
best_error: 3.8676007492414533
best_error: 3.867600334094388
best_error: 3.8115500515215963
best_error: 3.8115496532544366
best_error: 3.807801501209883
best_error: 3.8078013741376555
best_error: 3.807801347853566
best_error: 3.7109361759296235
best_error: 3.710935741445075
best_error: 3.6541156366649603
best_error: 3.654115523194621
best_error: 3.654115485256127
best_error: 3.6511553118984543
best_error: 3.6511548351422927
best_error: 3.6103067105471776
best_error: 3.61030618792509
best_error: 3.571038468700135
best_error: 3.571038366582162
best_error: 3.571038315146625
best_error: 3.5520293543652066
best_error: 3.5520288240549625
best_error: 3.4838749553694948
best_error: 3.4838748654151805
best_error: 3.4838748029873154
best_error: 3.4791937730983102
best_error: 3.47919323675809
best_error: 3.31056985866749
best_error: 3.3105694163137906
best_error: 3.214797125260912
best_error: 3.214797084012826
best_error: 3.214796977967028
best_error: 3.1244460995957644
best_error: 3.124445699543351
best_error: 2.9252824206816412
best_error: 2.9252824206784873
best_error: 2.92528227326227
best_error: 2.902833095299144
best_error: 2.902833095296003
best_error: 2.9028329485761737
best_error: 2.8980351859914117
best_error: 2.8980348189403875
best_error: 2.861431144975711
best_error: 2.861431144972671
best_error: 2.8614309995898326
best_error: 2.8582547869712123
best_error: 2.8582544084817756
best_error: 2.8579404023891586
best_error: 2.857940023863187
best_error: 2.857784239444541
best_error: 2.8577841341535484
best_error: 2.857784095783307
best_error: 2.8421102923170896
best_error: 2.8421099021097525
best_error: 2.826972814199993
best_error: 2.826972406368734
best_error: 2.8210833004225653
best_error: 2.821082898785067
best_error: 2.8067970511634925
best_error: 2.806797051160353
best_error: 2.806796904448708
best_error: 2.795735479347476
best_error: 2.7957350473786424
best_error: 2.7893633612846966
best_error: 2.789362925414765
best_error: 2.7890637682793074
best_error: 2.7890633323746687
best_error: 2.7883663569659705
best_error: 2.7883663569624018
best_error: 2.788366209491363
best_error: 2.785656008490979
best_error: 2.7856560084869333
best_error: 2.785541174385186
best_error: 2.785540739329524
best_error: 2.7843805730863007
best_error: 2.784380136931734
best_error: 2.7843285508088926
best_error: 2.7843285508044744
best_error: 2.784324376960811
best_error: 2.784323940803265
