ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.745812538191924
best_error: 11.745812535588422
best_error: 10.802106540894005
best_error: 10.802106410228419
best_error: 9.579205219487438
best_error: 9.579204915755145
best_error: 9.089426215236733
best_error: 9.089425842737496
best_error: 8.39219891035645
best_error: 8.392198441043947
best_error: 7.22582311248384
best_error: 7.225822613419555
best_error: 6.478410161494333
best_error: 6.4784099784268765
best_error: 6.4506858906264934
best_error: 6.45068583497802
best_error: 6.44891345880013
best_error: 6.448913454324523
best_error: 6.448913452639616
best_error: 6.448434751570835
best_error: 6.448434697021985
best_error: 6.441284800394229
best_error: 6.441284745716412
best_error: 6.411946141252384
best_error: 6.411946086322644
best_error: 6.2817916522516075
best_error: 6.28179159880202
best_error: 5.57228466077355
best_error: 5.572284592904823
best_error: 4.961395610401586
best_error: 4.961395552277343
best_error: 4.7960674120948426
best_error: 4.796067386031378
best_error: 4.786382688077139
best_error: 4.7863826820529844
best_error: 4.7863826805059375
best_error: 4.781953010531278
best_error: 4.781953010341169
best_error: 4.781953003104297
best_error: 4.78085127059465
best_error: 4.780851270401112
best_error: 4.780851263173664
best_error: 4.780599474457103
best_error: 4.780599474262926
best_error: 4.780599467040872
best_error: 4.780571971838084
best_error: 4.780571854919545
best_error: 4.779487466311257
best_error: 4.779487462926997
best_error: 4.77948745893053
best_error: 4.775966006556142
best_error: 4.775965998210609
best_error: 4.744726911947741
best_error: 4.7447268345395965
best_error: 4.7378986801290734
best_error: 4.737898659991342
best_error: 4.724826198745367
best_error: 4.724826182154872
best_error: 4.7133482660888415
best_error: 4.713348214065698
best_error: 4.70634826922047
best_error: 4.706348186542277
best_error: 4.695606640812354
best_error: 4.695606625702571
best_error: 4.671784392399472
best_error: 4.671784327824179
best_error: 4.6420473641815905
best_error: 4.642047275149986
best_error: 4.624338175009373
best_error: 4.6243380742705895
best_error: 4.580331543575467
best_error: 4.580331535336826
best_error: 4.580331472015535
best_error: 4.552973326772885
best_error: 4.552973292355275
best_error: 4.523099959028134
best_error: 4.523099896963187
best_error: 4.496221796162198
best_error: 4.496221766029585
best_error: 4.490229637343476
best_error: 4.490229585779907
best_error: 4.489867659254136
best_error: 4.489867558991959
best_error: 4.485374087214312
best_error: 4.485373959839889
best_error: 4.440680067186857
best_error: 4.4406799889271555
best_error: 4.421659259914916
best_error: 4.421659256587841
best_error: 4.421659159370936
best_error: 4.392127930271981
best_error: 4.392127894179028
best_error: 4.373082240929955
best_error: 4.373082204221729
best_error: 4.371443159149569
best_error: 4.3714431397372095
best_error: 4.371371956628417
best_error: 4.371371937024047
best_error: 4.371145049353328
best_error: 4.371145028480419
best_error: 4.371109824093503
best_error: 4.371109803170915
best_error: 4.371078418791173
best_error: 4.371078398660086
best_error: 4.371064273110247
best_error: 4.371064252958294
best_error: 4.371051324649036
best_error: 4.371051304478033
best_error: 4.371048860361548
best_error: 4.3710488401872425
best_error: 4.371046616554871
best_error: 4.371046596377562
best_error: 4.371046498405166
best_error: 4.371046478227703
best_error: 4.371046419942165
best_error: 4.3710463997645945
best_error: 4.3710463316540356
best_error: 4.371046311476344
best_error: 4.371046252482026
best_error: 4.3710462323042325
best_error: 4.371046211974187
best_error: 4.371046191796336
best_error: 4.3710461756197425
best_error: 4.371046155441843
best_error: 4.371046136946539
best_error: 4.371046120322557
best_error: 4.371046111953261
best_error: 4.3710461119154935
best_error: 4.371046111415114
best_error: 4.371046111291216
best_error: 4.37104611079083
best_error: 4.371046109906181
best_error: 4.371046109629764
best_error: 4.371046108913714
best_error: 4.371046108413323
