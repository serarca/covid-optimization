ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 17.98402120394689
best_error: 17.984021133339006
best_error: 10.41243856721477
best_error: 10.412438560521474
best_error: 10.37477640502864
best_error: 10.374776398173674
best_error: 10.272397093472431
best_error: 10.272397083029915
best_error: 10.272397081538866
best_error: 10.269628794119875
best_error: 10.269628783699524
best_error: 10.269628780331495
best_error: 7.320328882040586
best_error: 7.320328874553903
best_error: 7.320328775789799
best_error: 7.309196578433748
best_error: 7.309196471775618
best_error: 6.317703819421759
best_error: 6.3177038019189355
best_error: 6.230138959687313
best_error: 6.230138887237098
best_error: 6.208102801707604
best_error: 6.208102727646156
best_error: 6.123202956078874
best_error: 6.123202882718379
best_error: 6.095651890570187
best_error: 6.09565181378713
best_error: 5.804454570510337
best_error: 5.804454483053323
best_error: 5.801552141984247
best_error: 5.801552054188686
best_error: 5.800173436105776
best_error: 5.800173348149561
best_error: 5.799085851621983
best_error: 5.7990857635390975
best_error: 5.798606940976698
best_error: 5.798606852838056
best_error: 5.798223822795409
best_error: 5.798223734612158
best_error: 5.798060823513583
best_error: 5.798060735311367
best_error: 5.797960893704939
best_error: 5.797960805491093
best_error: 5.797893781132746
best_error: 5.797893692911076
best_error: 5.79785431946817
best_error: 5.7978542312419155
best_error: 5.797827842685274
best_error: 5.797827754455939
best_error: 5.797812258115844
best_error: 5.797812169884687
best_error: 5.797801814289132
best_error: 5.797801726056759
best_error: 5.797795657092824
best_error: 5.797795568859739
best_error: 5.797791537786551
best_error: 5.797791449552977
best_error: 5.797788043657103
best_error: 5.797787955423136
best_error: 5.797785214817438
best_error: 5.797785126583145
best_error: 5.797785074974591
best_error: 5.797785046862838
best_error: 5.797784818149884
best_error: 5.797784818149838
best_error: 5.797784792118773
best_error: 5.797784764007012
best_error: 5.797784615312414
best_error: 5.797784613971173
best_error: 5.797784591825691
best_error: 5.797784591825658
best_error: 5.797713285875258
best_error: 5.797713197629285
best_error: 5.797637306589163
best_error: 5.797637218334129
best_error: 5.797337216623962
best_error: 5.797337128333002
best_error: 5.7963273184175215
best_error: 5.796327230004359
best_error: 5.786162030589834
best_error: 5.7861620305898
best_error: 5.783695400633226
best_error: 5.783695400633189
best_error: 5.78353049973236
best_error: 5.783530499732326
best_error: 5.783526469130974
best_error: 5.783526469130948
best_error: 5.783525883616296
best_error: 5.78352588361626
best_error: 5.783521547698978
best_error: 5.783521547698951
best_error: 5.783495865509513
best_error: 5.783495865509488
best_error: 5.777268590396318
best_error: 5.777268499721659
best_error: 5.763664258871714
best_error: 5.763664166646569
best_error: 5.712924504428234
best_error: 5.712924504428198
best_error: 5.6499529116548715
best_error: 5.64995280316674
best_error: 5.649248089465082
best_error: 5.649247980889527
best_error: 5.646449628024124
best_error: 5.646449520251002
best_error: 5.645989031078573
best_error: 5.645988923248709
best_error: 5.645580517116911
best_error: 5.645580409236784
best_error: 5.645174072990879
best_error: 5.645173966182033
best_error: 5.643897693772164
best_error: 5.64389769377213
best_error: 5.643897652801111
best_error: 5.643671429436294
best_error: 5.643671322442675
best_error: 5.643440394922159
best_error: 5.6434402879002
best_error: 5.643223517404533
best_error: 5.643223410355985
best_error: 5.643184806126715
best_error: 5.643184699073416
best_error: 5.643164544434245
best_error: 5.643164437378468
best_error: 5.643158794702408
best_error: 5.643158687645942
best_error: 5.643153442254736
best_error: 5.6431533351976055
best_error: 5.643150654947658
best_error: 5.643150547890178
best_error: 5.6431480655410216
best_error: 5.643147958483229
best_error: 5.643146685056449
best_error: 5.6431465779985
best_error: 5.643145408045517
best_error: 5.643145300987408
best_error: 5.643144692399852
best_error: 5.643144585341663
best_error: 5.643144036752162
best_error: 5.643143929693873
best_error: 5.64314362347866
best_error: 5.6431435164203325
best_error: 5.643143254677966
best_error: 5.643143147619594
best_error: 5.643142921256262
best_error: 5.643142814197845
best_error: 5.643142657872855
best_error: 5.643142550814407
best_error: 5.643141799231035
best_error: 5.64314169217248
best_error: 5.643141284631136
best_error: 5.643141284631103
best_error: 5.643141243663368
best_error: 5.643141158280585
best_error: 5.6431411306592025
best_error: 5.643141130659201
best_error: 5.643141117183629
