ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.472419052776168
best_error: 24.472418411401296
best_error: 5.082684424001104
best_error: 5.082684423868057
best_error: 5.082680759553332
best_error: 5.082680759548284
best_error: 5.082680759514081
best_error: 5.082666095133099
best_error: 5.082666095128045
best_error: 5.082666095093833
best_error: 5.0826073311534605
best_error: 5.082607331148383
best_error: 5.0826073311141355
best_error: 5.0823705594356605
best_error: 5.082370559430494
best_error: 5.082370559396102
best_error: 5.081395018039731
best_error: 5.081395018034183
best_error: 5.0813950179992
best_error: 5.076960943849428
best_error: 5.076960943841902
best_error: 5.076960943804296
best_error: 5.034940719849562
best_error: 5.034940719727234
best_error: 4.985010361198623
best_error: 4.985010359876588
best_error: 3.6503789340702553
best_error: 3.650378707617162
best_error: 3.650377586399998
best_error: 2.7798541091924793
best_error: 2.7798540583596543
best_error: 2.7798539428219002
best_error: 2.772148374582564
best_error: 2.7721483519172954
best_error: 2.7721479914394256
best_error: 2.7714785801347945
best_error: 2.771478576144545
best_error: 2.771478530150441
best_error: 2.7714744698902805
best_error: 2.771474465900586
best_error: 2.7714744227223638
best_error: 2.7714617082690167
best_error: 2.7714617055616078
best_error: 2.771461667475063
best_error: 2.771441980708715
best_error: 2.7714419786426054
best_error: 2.771441947478956
best_error: 2.771363640146228
best_error: 2.7713636370395074
best_error: 2.771363618647084
best_error: 2.7712241550044747
best_error: 2.7712241523629593
best_error: 2.7712241400476456
best_error: 2.770866096514705
best_error: 2.7708660916271803
best_error: 2.7708660871740123
best_error: 2.7708660860531262
best_error: 2.770018790628987
best_error: 2.7700187842545647
best_error: 2.7700187800501244
best_error: 2.767027604366122
best_error: 2.7670276000753624
best_error: 2.7670275943122267
best_error: 2.7587968666559406
best_error: 2.758796863464396
best_error: 2.758796857112206
best_error: 2.733007933213135
best_error: 2.7330078551325947
best_error: 2.7330075099789854
best_error: 2.7330066067794467
best_error: 2.656384799709357
best_error: 2.6563847313441324
best_error: 2.656384457238596
best_error: 2.6563835909464086
best_error: 2.642104887221397
best_error: 2.6421048860309524
best_error: 2.6421048746936644
best_error: 2.6420486173455555
best_error: 2.642048615036539
best_error: 2.6420486046985885
best_error: 2.6419982480672513
best_error: 2.641998244053966
best_error: 2.6419982352110223
best_error: 2.641993956100823
best_error: 2.6419939510972643
best_error: 2.6419939431394015
best_error: 2.6419909525198637
best_error: 2.6419909476856804
best_error: 2.6419909395761723
best_error: 2.641965565569497
best_error: 2.6419655615550215
best_error: 2.6419655527154946
best_error: 2.6419068777353965
best_error: 2.6419068741466605
best_error: 2.6419068649619226
best_error: 2.6418436308504996
best_error: 2.6418436293771923
best_error: 2.6418436182901406
best_error: 2.6417313970899023
best_error: 2.641731384661284
best_error: 2.640653060706079
best_error: 2.640653049047787
best_error: 2.6370680643659568
best_error: 2.6370680643177304
best_error: 2.6370680535294446
best_error: 2.616914023338111
best_error: 2.616913955748014
best_error: 2.6169136517793863
best_error: 2.6169127809151065
best_error: 2.522664350250496
best_error: 2.522664350073322
best_error: 2.52266434021345
best_error: 2.274789636057842
best_error: 2.274789514932771
best_error: 2.152961565718457
best_error: 2.1529614315023045
best_error: 2.1529491448412212
best_error: 2.084006860729305
best_error: 2.0840068431013576
best_error: 2.084006690756055
best_error: 2.084006269535356
best_error: 2.083107584126343
best_error: 2.08310758304871
best_error: 2.0831073965275393
best_error: 2.0819566490416825
best_error: 2.0819566387661297
best_error: 2.081956484020352
best_error: 2.077990938528523
best_error: 2.077990740094102
best_error: 2.0016384322632725
best_error: 2.001638223644342
best_error: 1.9564446258507189
best_error: 1.9564446014434764
best_error: 1.9564445712609726
best_error: 1.9473400428728616
best_error: 1.9473400273054298
best_error: 1.9170767825887678
best_error: 1.9170766964585844
best_error: 1.9010058184705694
best_error: 1.9010057610088578
best_error: 1.8979203219028409
best_error: 1.8979203137275473
best_error: 1.8974725076250627
best_error: 1.8974724722502634
best_error: 1.8972075665633488
best_error: 1.8972075649455171
best_error: 1.8972075639208414
best_error: 1.8971517508649627
best_error: 1.8971517500803734
best_error: 1.8971517466094132
best_error: 1.8970171004187801
best_error: 1.8970170996614057
best_error: 1.8970170964396977
best_error: 1.8957797449365128
best_error: 1.8957796894175347
best_error: 1.8952366548598096
best_error: 1.8952366448902265
best_error: 1.8950628044715958
best_error: 1.8950628012650108
best_error: 1.8950315418765291
best_error: 1.895031537629195
best_error: 1.89501879127159
best_error: 1.8950187828810607
best_error: 1.8949994926277534
best_error: 1.8949994872134959
best_error: 1.8949329866708349
best_error: 1.8949329847004477
best_error: 1.8949329845920462
best_error: 1.8947898526968583
best_error: 1.8947898512032895
best_error: 1.8944101042167538
best_error: 1.894410094831681
best_error: 1.8939226621743794
best_error: 1.8939226262529134
best_error: 1.8935751018758493
best_error: 1.8935750753921738
best_error: 1.8930465279101392
best_error: 1.893046500137728
best_error: 1.8925574364615416
best_error: 1.8925574333267
best_error: 1.892186512868691
best_error: 1.8921864795567986
best_error: 1.8916989497867376
best_error: 1.8916989190682434
best_error: 1.89043156385044
best_error: 1.8904315377344727
best_error: 1.88894488488691
best_error: 1.8889448184312627
best_error: 1.887868496149022
best_error: 1.887868472178336
best_error: 1.8859939425993528
best_error: 1.88599391645804
best_error: 1.885973525911461
best_error: 1.8859734930458476
best_error: 1.8859465363703698
best_error: 1.88594649391176
best_error: 1.885945184115933
best_error: 1.8859451405196221
best_error: 1.8859396771334727
best_error: 1.8859396297893378
best_error: 1.8817452829890602
best_error: 1.8817452413519962
best_error: 1.8809974082862657
best_error: 1.8809974034047787
best_error: 1.8808957797671224
best_error: 1.880895778977408
best_error: 1.8807909975027968
best_error: 1.8807909908516138
best_error: 1.880688048276255
best_error: 1.8806880405573778
best_error: 1.8803575825901668
best_error: 1.8803575662105112
best_error: 1.8798241661820305
best_error: 1.8798241476489568
best_error: 1.8789539295549391
best_error: 1.8789539272135312
best_error: 1.8789539161995723
best_error: 1.8786369787018722
best_error: 1.8786369761409767
best_error: 1.8786369656406756
best_error: 1.8784912923242063
best_error: 1.8784912875624462
best_error: 1.8784912848905524
best_error: 1.878420589429674
best_error: 1.8784205711881916
best_error: 1.8781830217468083
best_error: 1.8781830131850996
best_error: 1.8781266645585795
best_error: 1.8781266529449376
best_error: 1.878066996101775
best_error: 1.8780669843342708
best_error: 1.8776799706728549
best_error: 1.8776799566284144
best_error: 1.8773416266565275
best_error: 1.8773416113842156
best_error: 1.8765660350143991
best_error: 1.8765660134070732
best_error: 1.8731494446090244
best_error: 1.8731494217993498
best_error: 1.872915233204113
best_error: 1.872915196828386
best_error: 1.8585089697710007
best_error: 1.858508957723843
best_error: 1.85703768593038
best_error: 1.8570376807343039
best_error: 1.8562733957225097
best_error: 1.8562733891993617
best_error: 1.8562107569312543
best_error: 1.8562107537147086
best_error: 1.8561680269584804
best_error: 1.85616802637526
best_error: 1.8561680262264273
best_error: 1.8561560784072313
best_error: 1.8561560777965727
best_error: 1.856154046483746
best_error: 1.856154045875849
best_error: 1.8561537457883859
best_error: 1.8561537451734322
best_error: 1.8561537340071328
best_error: 1.8561537333911116
best_error: 1.8561537247501783
best_error: 1.8561537241349382
best_error: 1.856153710798184
best_error: 1.8561537101830283
best_error: 1.8561536983736107
best_error: 1.8561536977585305
best_error: 1.8561536926843205
best_error: 1.8561536920692745
best_error: 1.856153688781459
best_error: 1.8561536881664369
best_error: 1.8561536858857175
best_error: 1.856153685270713
best_error: 1.8561536844751645
best_error: 1.856153683861848
