ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.426890097170318
best_error: 12.426890091097283
best_error: 12.42689007551482
best_error: 12.344001330201255
best_error: 12.344001322546454
best_error: 12.344001303943124
best_error: 10.36686422677035
best_error: 10.36686418228432
best_error: 10.366864175665485
best_error: 9.623680241311597
best_error: 9.623680153977238
best_error: 9.603888781747202
best_error: 9.60388869360274
best_error: 9.59488920116978
best_error: 9.594889113580564
best_error: 8.743679855789683
best_error: 8.743679729011719
best_error: 7.596282340159004
best_error: 7.596281613804635
best_error: 7.120647827460695
best_error: 7.120647767631904
best_error: 7.120647733120173
best_error: 5.229791264433461
best_error: 5.229791059038784
best_error: 4.101607489727115
best_error: 4.101607374289756
best_error: 3.863208291147001
best_error: 3.863207568623614
best_error: 3.7044553242703953
best_error: 3.7044550309162663
best_error: 3.702420427080541
best_error: 3.7024201390143374
best_error: 3.595896752616576
best_error: 3.595896437203057
best_error: 3.5478124836774088
best_error: 3.5478121787314407
best_error: 3.5081591471859834
best_error: 3.508158829778653
best_error: 3.501955231424347
best_error: 3.501954915153465
best_error: 3.4987141044152206
best_error: 3.498713787777481
best_error: 3.496987102759337
best_error: 3.4969867859260964
best_error: 3.496624920395223
best_error: 3.496624603766827
best_error: 3.496572015231421
best_error: 3.4965716985974256
best_error: 3.4965526522961037
best_error: 3.4965523356600525
best_error: 3.4965436086790493
best_error: 3.496543292042026
best_error: 3.496538577309173
best_error: 3.496538260671567
best_error: 3.4965362543306124
best_error: 3.49653593769275
best_error: 3.4965353007048208
best_error: 3.496534984066872
best_error: 3.4877327959468714
best_error: 3.4877327959455586
best_error: 3.486044260565839
best_error: 3.4860442605644932
best_error: 3.4820973112769438
best_error: 3.4820972733321067
best_error: 3.482097207324341
best_error: 3.480122069928324
best_error: 3.4801217658367145
best_error: 3.48011948544692
best_error: 3.480119485445586
best_error: 3.4773655211720857
best_error: 3.4773652199064475
best_error: 3.411067079588702
best_error: 3.4110670795872844
best_error: 3.4083874334854727
best_error: 3.4083871369782415
best_error: 3.3137264171950505
best_error: 3.3137264171936582
best_error: 3.313726272435987
best_error: 3.309030939227875
best_error: 3.3090306238673897
best_error: 3.2831226544801515
best_error: 3.2831226544787455
best_error: 3.2588414388518787
best_error: 3.2588410886776096
best_error: 3.24757405266752
best_error: 3.2475736982354064
best_error: 3.2371955102291152
best_error: 3.2371951566457344
best_error: 3.2354880221690294
best_error: 3.2354876684355647
best_error: 3.235086788775897
best_error: 3.23508643500715
best_error: 3.2350863739250935
best_error: 3.2350581962976124
best_error: 3.23505784252618
best_error: 3.2350529999011446
best_error: 3.2350526461292177
best_error: 3.235051791963168
best_error: 3.235051791958596
best_error: 3.201171987911613
best_error: 3.2011716016493184
best_error: 3.1992812835565374
best_error: 3.199280906258326
best_error: 3.1975957543635136
best_error: 3.1975953779178328
best_error: 3.197203935506219
best_error: 3.197203559068441
best_error: 3.1971355349587305
best_error: 3.19713553495739
best_error: 3.1971353909861597
best_error: 3.1971185810746583
best_error: 3.1971182046354407
best_error: 3.1967619387379234
best_error: 3.196761567986591
best_error: 3.1966911566484164
best_error: 3.1966907816669368
best_error: 3.1946040491194134
best_error: 3.194603672197669
best_error: 3.1921395129871275
best_error: 3.192139133365494
best_error: 3.1920290082980785
best_error: 3.192028628815005
best_error: 3.192021106342623
best_error: 3.1920207268752385
best_error: 3.1916450328873287
best_error: 3.1916446477767666
best_error: 3.1916142556824303
best_error: 3.1916138706581205
best_error: 3.191598628060582
best_error: 3.1915982457206873
best_error: 3.1915352858159185
best_error: 3.191534903489743
best_error: 3.191157471893896
best_error: 3.1911570869390533
best_error: 3.190167613644628
best_error: 3.190167228599454
best_error: 3.1900653504563774
best_error: 3.190064965401879
best_error: 3.1900443578713267
best_error: 3.1900439728148955
best_error: 3.1900355282684463
best_error: 3.190035143211217
best_error: 3.1900344565630245
best_error: 3.1900340715056914
best_error: 3.1900339692239266
best_error: 3.190033744842699
best_error: 3.190033560919755
best_error: 3.1866126442978127
best_error: 3.18661226349749
best_error: 3.186508148808576
best_error: 3.1865077607146812
best_error: 3.1864511331653387
best_error: 3.1864507452985658
best_error: 3.186430835070595
best_error: 3.186430449056582
best_error: 3.1864221753216477
best_error: 3.1864217892919515
best_error: 3.1863955818857477
best_error: 3.1863951940760007
best_error: 3.186318299196152
best_error: 3.186317913278925
best_error: 3.1860489535362975
best_error: 3.186048572989454
best_error: 3.185853119461667
best_error: 3.185852739079648
best_error: 3.1856142644755283
best_error: 3.185613884273655
best_error: 3.185369202500397
best_error: 3.1853688225734595
best_error: 3.18517426303075
best_error: 3.1851738838779102
best_error: 3.1850454768885417
best_error: 3.185045099039369
best_error: 3.1849079010936014
best_error: 3.184907523344858
best_error: 3.184866803077533
best_error: 3.184866425428885
