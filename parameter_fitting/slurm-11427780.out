ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.799180624274914
best_error: 23.79918062118674
best_error: 23.79918060437516
best_error: 23.79918056210166
best_error: 3.4041316589662567
best_error: 3.404131425560912
best_error: 3.1087461609649387
best_error: 3.108745989697728
best_error: 1.8544847516939813
best_error: 1.8544847217792373
best_error: 1.825543483113011
best_error: 1.8255434462608164
best_error: 1.7984130861087708
best_error: 1.7984130449886226
best_error: 1.7870717780578231
best_error: 1.7870717705072963
best_error: 1.7870717603683426
best_error: 1.7547690156960036
best_error: 1.7547690091885741
best_error: 1.7547689987062747
best_error: 1.7497398143890992
best_error: 1.7497396484725138
best_error: 1.7157071637237946
best_error: 1.7157071365922356
best_error: 1.6858202016433201
best_error: 1.6858201845015797
best_error: 1.6366816766927663
best_error: 1.6366815714440575
best_error: 1.4892333643608517
best_error: 1.4892333574060945
best_error: 1.4865480047546336
best_error: 1.4865480001478755
best_error: 1.4725927280481357
best_error: 1.4725926670379688
best_error: 1.4642722343059895
best_error: 1.4642721967153447
best_error: 1.4255462685160594
best_error: 1.4255462626030784
best_error: 1.3696675961046876
best_error: 1.3696675618470733
best_error: 1.365523692497354
best_error: 1.3655236346756232
best_error: 1.3654931267340742
best_error: 1.3654930598563686
best_error: 1.363623823393867
best_error: 1.3636236919494578
best_error: 1.3500865280153331
best_error: 1.3500862500899435
best_error: 1.3485331312330169
best_error: 1.3485328578917035
best_error: 1.3348181993033252
best_error: 1.3348180608446345
best_error: 1.286976662598682
best_error: 1.2869765789152445
best_error: 1.2316341668749002
best_error: 1.2316341382131488
best_error: 1.22942861366673
best_error: 1.2294285850781
best_error: 1.1825933936824804
best_error: 1.182593302151034
best_error: 1.1825838175302328
best_error: 1.182583726192888
best_error: 1.161875067728956
best_error: 1.1618750641231153
best_error: 1.1618750574311307
best_error: 1.1615708507632736
best_error: 1.1615708488558019
best_error: 1.1615708345745608
best_error: 1.1615014224858056
best_error: 1.1615014215833066
best_error: 1.1615014030650086
best_error: 1.1614806334192067
best_error: 1.1614806329417333
best_error: 1.161480612670817
best_error: 1.1614743152110747
best_error: 1.1614743151797005
best_error: 1.1614742931520656
best_error: 1.161472608673115
best_error: 1.1614725851795442
best_error: 1.1614724004802384
best_error: 1.1614723769865294
best_error: 1.1614722763049938
best_error: 1.1614722526173624
best_error: 1.160585439893942
best_error: 1.1605854353734975
best_error: 1.1605854294625244
best_error: 1.1527372897220591
best_error: 1.1527372067609714
best_error: 1.1345749726266152
best_error: 1.1345747966563757
best_error: 1.1345741341959026
best_error: 1.1176924639619568
best_error: 1.1176924231521754
best_error: 1.11393842337061
best_error: 1.1139384220468762
best_error: 1.1139384190831416
best_error: 1.1139247890939297
best_error: 1.113924788356733
best_error: 1.1139247882654297
best_error: 1.1139247848111562
best_error: 1.1138432076984521
best_error: 1.1138432062884855
best_error: 1.1138432034045693
best_error: 1.1137818599550275
best_error: 1.1137818583693107
best_error: 1.113781855644551
best_error: 1.1135506280856011
best_error: 1.1135506273562328
best_error: 1.1135506237222896
best_error: 1.1132304261132493
best_error: 1.1132304240592585
best_error: 1.1132304217601727
best_error: 1.1128594198039914
best_error: 1.1128594191309022
best_error: 1.11285941905767
best_error: 1.1128594154668905
best_error: 1.1122395364982878
best_error: 1.1122395357776036
best_error: 1.112239533437591
best_error: 1.11223953249824
best_error: 1.112092681713534
best_error: 1.1120926815795604
best_error: 1.1120926794297195
best_error: 1.1120926776667144
best_error: 1.1115911048447322
best_error: 1.1115911010295376
best_error: 1.111591100762896
best_error: 1.1111810503695703
best_error: 1.1111810434633524
best_error: 1.1105030014896542
best_error: 1.1105029947716316
best_error: 1.110218712501495
best_error: 1.1102187102161927
best_error: 1.1102187084930897
best_error: 1.1099035559294117
best_error: 1.1099035558595043
best_error: 1.1099035553249914
best_error: 1.109903551801903
best_error: 1.1095342383979245
best_error: 1.1095342295892656
best_error: 1.1093728639273082
best_error: 1.1093728633567135
best_error: 1.1093728595756391
best_error: 1.10924716936531
best_error: 1.1092471649772735
best_error: 1.1092471649583047
best_error: 1.1091279218885632
best_error: 1.109127919138494
best_error: 1.1091279174567608
best_error: 1.1086993409121901
best_error: 1.108699339888743
best_error: 1.1086993364529254
best_error: 1.1084542287523111
best_error: 1.108454222830573
best_error: 1.1081880170916374
best_error: 1.1081880075278874
best_error: 1.1078733088124708
best_error: 1.1078733000395244
best_error: 1.107210006327221
best_error: 1.1072100042722468
best_error: 1.1072100016424375
best_error: 1.107010092813909
best_error: 1.107010092400255
best_error: 1.107010088316032
best_error: 1.1065376076148972
best_error: 1.1065376063067611
best_error: 1.1065376025487186
best_error: 1.1062231689865067
best_error: 1.1062231660490165
best_error: 1.1062231640487896
best_error: 1.1057884630202117
best_error: 1.1057884580637656
best_error: 1.1047154311147016
best_error: 1.1047154211167716
best_error: 1.1024248722226613
best_error: 1.1024248720107628
best_error: 1.1024248669157501
best_error: 1.0978506423621175
best_error: 1.097850638098041
best_error: 1.0804365145543886
best_error: 1.0804365024609743
best_error: 1.015783052756179
best_error: 1.015782989642843
best_error: 1.0157829500346296
best_error: 0.9971406968389117
best_error: 0.9971406874140473
best_error: 0.9935581857388578
best_error: 0.9935581766458899
best_error: 0.9330948283917722
best_error: 0.9330947766842881
best_error: 0.9330203170411862
best_error: 0.9330202654236603
best_error: 0.930029796256163
best_error: 0.9300297477077908
best_error: 0.9300067638656278
best_error: 0.9300067155590308
best_error: 0.9290284297975115
best_error: 0.929028387615778
best_error: 0.9214849734369521
best_error: 0.9214849406611809
best_error: 0.9144390802174667
best_error: 0.9144390532538309
best_error: 0.9083970745237383
best_error: 0.9083970607135697
best_error: 0.9061430279649295
best_error: 0.906143006960678
best_error: 0.9049339831546035
best_error: 0.9049339336975752
best_error: 0.9037838391895088
best_error: 0.9037837752625932
best_error: 0.9009022704933558
best_error: 0.9009022166162584
best_error: 0.9002905762944131
best_error: 0.9002905723563102
best_error: 0.9002905718243125
best_error: 0.8997779069564644
best_error: 0.8997778921955008
best_error: 0.8995155987549347
best_error: 0.8995155956573706
best_error: 0.8995155945298151
best_error: 0.8994486587468556
best_error: 0.8994486541283188
best_error: 0.8989570217178641
best_error: 0.8989570152223091
best_error: 0.8986954102835089
best_error: 0.8986954056895976
best_error: 0.8985644564268044
best_error: 0.8985644506217922
best_error: 0.8984159170223469
best_error: 0.8984159139075534
best_error: 0.8982574743676469
best_error: 0.8982574704764896
best_error: 0.8981964317210783
best_error: 0.8981964311829361
best_error: 0.8981964300244926
best_error: 0.8981964291521305
best_error: 0.8981700066412295
best_error: 0.8981700059372276
best_error: 0.8981700051994204
best_error: 0.8981700043550336
best_error: 0.8981640762757658
best_error: 0.8981640758518482
best_error: 0.898164075698931
best_error: 0.8981640748356609
best_error: 0.8981640741275426
best_error: 0.8981629734035521
best_error: 0.898162972892507
best_error: 0.8981629728345216
best_error: 0.8981629719804037
best_error: 0.8981629712891455
best_error: 0.8981625567726529
best_error: 0.8981625567151933
best_error: 0.8981625559095007
best_error: 0.8981625553074868
best_error: 0.8981625546714007
best_error: 0.8981625202481677
best_error: 0.8981625200330479
best_error: 0.8981625198227714
best_error: 0.8981625196476004
best_error: 0.8981625187492276
best_error: 0.8981625181464662
best_error: 0.8981624545327176
best_error: 0.8981624542765316
best_error: 0.8981624539443357
best_error: 0.8981624530501696
best_error: 0.8981624524304906
best_error: 0.8981624139965909
best_error: 0.898162413749043
best_error: 0.8981624134080626
best_error: 0.8981624125138938
best_error: 0.8981624118937432
best_error: 0.8981623329272367
best_error: 0.8981623319925878
best_error: 0.8981623314684049
best_error: 0.898162330806262
best_error: 0.8981622342623613
best_error: 0.8981622340754027
best_error: 0.8981622337909207
best_error: 0.8981622336624582
best_error: 0.8981622327707142
best_error: 0.898162232161412
best_error: 0.8981620141805771
best_error: 0.8981620140060186
best_error: 0.8981620136887368
best_error: 0.8981620135808787
best_error: 0.8981620126912016
best_error: 0.8981620120796617
best_error: 0.8981611575643162
best_error: 0.898161157479747
best_error: 0.8981611569439438
best_error: 0.8981611560916452
best_error: 0.8981611554628515
best_error: 0.8981583274667456
best_error: 0.8981583252319096
best_error: 0.8981463710511097
best_error: 0.8981463663270131
best_error: 0.8981280626137462
best_error: 0.8981280517370986
best_error: 0.8981125761239792
best_error: 0.8981125629963579
best_error: 0.8980752271129459
best_error: 0.8980752170820441
best_error: 0.8980377268520325
best_error: 0.8980377261645174
best_error: 0.8980377169563358
best_error: 0.8977678573251268
best_error: 0.8977678513065693
best_error: 0.8974425598841513
best_error: 0.8974425510884154
best_error: 0.8967037122923969
best_error: 0.8967036961026024
best_error: 0.8963594366196951
best_error: 0.8963594154335354
