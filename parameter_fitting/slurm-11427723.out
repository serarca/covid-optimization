ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.766147465091198
best_error: 25.76614721113222
best_error: 5.0165838942327765
best_error: 5.016583893894955
best_error: 5.016522038207027
best_error: 5.016522038191503
best_error: 5.0165220380735756
best_error: 5.016273924303733
best_error: 5.01627392428809
best_error: 5.01627392416998
best_error: 5.015270282034576
best_error: 5.015270282018442
best_error: 5.015270281899598
best_error: 5.011066504298649
best_error: 5.011066504280398
best_error: 5.011066504158483
best_error: 4.990348936573758
best_error: 4.990348936542951
best_error: 4.9903489364063285
best_error: 3.6093757279047485
best_error: 3.6093754163000336
best_error: 3.609346665420649
best_error: 2.5082639962318547
best_error: 2.508263975374023
best_error: 2.508263868716981
best_error: 2.5082634937648915
best_error: 2.50826027470429
best_error: 2.5032460915398764
best_error: 2.503246086697204
best_error: 2.503245957428732
best_error: 2.5032459251365804
best_error: 2.5029789960884754
best_error: 2.5029788583154815
best_error: 2.5029788326798372
best_error: 2.2804481058992097
best_error: 2.280448079328889
best_error: 2.2804480314425293
best_error: 2.25977901242887
best_error: 2.259778939640444
best_error: 2.2571180399738626
best_error: 2.257117945352092
best_error: 2.1887927500512454
best_error: 2.188792675108814
best_error: 2.100756531121564
best_error: 2.1007564198647914
best_error: 1.794633366444438
best_error: 1.7946331791746346
best_error: 1.7620928490547856
best_error: 1.762092785405835
best_error: 1.7617556125535205
best_error: 1.7617555456537894
best_error: 1.7571205203930027
best_error: 1.7571204572534163
best_error: 1.7487692942793456
best_error: 1.7487692614633483
best_error: 1.7487692212739
best_error: 1.7472877633977957
best_error: 1.7472877244869238
best_error: 1.7472877092189356
best_error: 1.7455814689477978
best_error: 1.745581422830742
best_error: 1.7443946388455436
best_error: 1.744394586000557
best_error: 1.7437108747423649
best_error: 1.7437108188255654
best_error: 1.7433469796660848
best_error: 1.7433469224712295
best_error: 1.741893334894632
best_error: 1.7418932563520457
best_error: 1.727000047115083
best_error: 1.727000019763464
best_error: 1.726999993126136
best_error: 1.679572644618054
best_error: 1.679572644091387
best_error: 1.6795726066952892
best_error: 1.6708780735282658
best_error: 1.670878029802915
best_error: 1.6685177386331729
best_error: 1.668517717494341
best_error: 1.667598855363986
best_error: 1.6675988455157236
best_error: 1.6674482394370558
best_error: 1.6674482338758991
best_error: 1.6672411610442015
best_error: 1.6672411544068273
best_error: 1.6663609861441924
best_error: 1.666360974040839
best_error: 1.6662446878608046
best_error: 1.6662446770173682
best_error: 1.6660845153248254
best_error: 1.6660845033193399
best_error: 1.6656641597337316
best_error: 1.6656641576053763
best_error: 1.665664156336141
best_error: 1.6643541124453436
best_error: 1.6643540976007087
best_error: 1.6572465929782552
best_error: 1.657246553721987
best_error: 1.6469814794903892
best_error: 1.6469814192603616
best_error: 1.6461469488068474
best_error: 1.6461467891410317
best_error: 1.6461462718871616
best_error: 1.6447555523198754
best_error: 1.644755454571694
best_error: 1.6396494974144766
best_error: 1.6396494253643779
best_error: 1.626747878137186
best_error: 1.6267478340729307
best_error: 1.605938516468153
best_error: 1.6059384623818895
best_error: 1.6059384546926592
best_error: 1.5838635880457639
best_error: 1.5838635841227038
best_error: 1.5838635567678103
best_error: 1.5836091031351323
best_error: 1.5836090890083767
best_error: 1.5836062650292526
best_error: 1.5836062497803796
best_error: 1.5831014901447287
best_error: 1.5831014589678452
best_error: 1.5757195739175058
best_error: 1.5757195524141294
best_error: 1.545672919970424
best_error: 1.545672745513551
best_error: 1.545671049236152
best_error: 1.5446011091736997
best_error: 1.5446009402546375
best_error: 1.5445992593963964
best_error: 1.5369388886669022
best_error: 1.5369388441178646
best_error: 1.5331395740465341
best_error: 1.5331394677263055
best_error: 1.5331380651304007
best_error: 1.531316538673825
best_error: 1.5313164939184125
best_error: 1.5313163469826712
best_error: 1.5292800597689384
best_error: 1.5292800373285933
best_error: 1.5292799581411824
best_error: 1.5274724253345724
best_error: 1.5274724252206098
best_error: 1.5274723721240324
best_error: 1.5270132451847553
best_error: 1.5270132378987225
best_error: 1.5270131956958497
best_error: 1.5222001544723571
best_error: 1.5222001516199173
best_error: 1.5184073524920239
best_error: 1.5184073174860482
best_error: 1.5067967498559087
best_error: 1.506796731534167
best_error: 1.4764987843767992
best_error: 1.4764987789286164
best_error: 1.4764103079486555
best_error: 1.4764103077672182
best_error: 1.4764103071695123
best_error: 1.4764103070772723
best_error: 1.4764103066909748
best_error: 1.476410306571044
best_error: 1.4763477415413389
best_error: 1.4763477409887267
best_error: 1.4763477406822283
best_error: 1.4763477404833887
best_error: 1.4763477401021428
best_error: 1.476243052345528
best_error: 1.4762430520188479
best_error: 1.4762430515285407
best_error: 1.4762430511899518
best_error: 1.4762430510709341
best_error: 1.476202039393432
best_error: 1.4762020388623542
best_error: 1.4762020385335963
best_error: 1.4762020383411432
best_error: 1.4762020380708836
best_error: 1.47584265318588
best_error: 1.4758426525861388
best_error: 1.4758426522917376
best_error: 1.4758426522397077
best_error: 1.475842652199774
best_error: 1.4758241421805929
best_error: 1.475824131754236
best_error: 1.475823876569129
best_error: 1.4758238700224595
best_error: 1.4758213843013959
best_error: 1.475821376353153
best_error: 1.47580058769086
best_error: 1.4758005870185757
best_error: 1.475800586783875
best_error: 1.4758005867514097
best_error: 1.4758005867179673
best_error: 1.4757445229798278
best_error: 1.475744519121985
best_error: 1.4757346292035478
best_error: 1.4757346282965147
best_error: 1.475734628270412
best_error: 1.4754843115399063
best_error: 1.475484308885816
best_error: 1.4748683448589555
best_error: 1.4748683426723965
best_error: 1.4748683420317545
best_error: 1.4748678968866067
best_error: 1.4748678947907807
best_error: 1.4748678937354165
best_error: 1.4748671802452924
best_error: 1.474867177953172
best_error: 1.4748671772894755
best_error: 1.4748669119653772
best_error: 1.4748669096838278
best_error: 1.4748669087923816
best_error: 1.4748664867878898
best_error: 1.4748664843722201
best_error: 1.4748664837582348
best_error: 1.4748664618969354
best_error: 1.4748664594535197
best_error: 1.4748664588989757
best_error: 1.4742188074198141
best_error: 1.474218802832482
best_error: 1.4741816982193694
best_error: 1.4741816939653563
best_error: 1.474144308232223
best_error: 1.4741443067341293
best_error: 1.4741443025689756
best_error: 1.4739963545554615
best_error: 1.473996341401392
best_error: 1.4738807613649327
best_error: 1.4738807286633877
best_error: 1.473747217460978
best_error: 1.4737471937500428
best_error: 1.4735405085319837
best_error: 1.4735405001021078
best_error: 1.473525732618306
best_error: 1.4735257229984464
best_error: 1.47341066919672
best_error: 1.4734106539527776
best_error: 1.4731513981852484
best_error: 1.4731513768833295
best_error: 1.4722969193370046
best_error: 1.472296890122558
best_error: 1.4685428198671135
best_error: 1.4685428049548124
best_error: 1.4672550717920902
best_error: 1.4672550407291365
best_error: 1.466490016079626
best_error: 1.4664899741672162
best_error: 1.46552544921943
best_error: 1.4655254037022756
best_error: 1.4636962352646636
best_error: 1.4636962115047212
best_error: 1.462842630248815
best_error: 1.4628426140670885
best_error: 1.4623626870080586
best_error: 1.4623626349772387
best_error: 1.462009248856183
best_error: 1.4620092406224108
best_error: 1.4619645700148909
best_error: 1.4619645613636876
best_error: 1.4618942610913543
best_error: 1.4618942549495506
best_error: 1.4618867286603472
best_error: 1.4618867272728937
best_error: 1.4618859506457949
best_error: 1.4618859498340908
best_error: 1.4618859497222019
best_error: 1.46188547315439
best_error: 1.4618854725497905
best_error: 1.4618854722286263
best_error: 1.461884137585084
best_error: 1.4618841354018577
best_error: 1.4618813048485444
best_error: 1.461881301993082
best_error: 1.4618712325034977
best_error: 1.4618712265993699
best_error: 1.4617593969158458
best_error: 1.4617593840293839
best_error: 1.461698927422614
best_error: 1.4616989027109109
best_error: 1.4616254798503483
best_error: 1.4616254482014068
best_error: 1.4614933624394084
best_error: 1.461493334485305
best_error: 1.461013861497864
best_error: 1.4610138446100442
best_error: 1.4584644729057445
best_error: 1.458464467101508
best_error: 1.4577823422411043
best_error: 1.4577820525806866
best_error: 1.4573254176338168
best_error: 1.457325402983366
