ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.865046852525818
best_error: 10.865046843665496
best_error: 10.860256513169784
best_error: 10.86025650400828
best_error: 6.11240263393289
best_error: 6.112402077126298
best_error: 4.745142769961509
best_error: 4.7451424687888855
best_error: 4.686991423399933
best_error: 4.686991368086246
best_error: 4.628236205845039
best_error: 4.628236205760004
best_error: 4.6282361898712026
best_error: 4.620542986516706
best_error: 4.6205429864303245
best_error: 4.620542970252471
best_error: 4.599087196392285
best_error: 4.599087037191563
best_error: 4.417278183111516
best_error: 4.417278037266452
best_error: 4.205130463580539
best_error: 4.205130314332995
best_error: 4.093463400074015
best_error: 4.0934631186619646
best_error: 4.055523242924934
best_error: 4.055523021587087
best_error: 4.031328306467392
best_error: 4.0313280873846145
best_error: 4.004237216674943
best_error: 4.00423721655868
best_error: 4.004237208629408
best_error: 3.991314774205933
best_error: 3.9913147624701346
best_error: 3.985517822707962
best_error: 3.9855178101231474
best_error: 3.972955048390493
best_error: 3.9729549857019464
best_error: 3.947595273089675
best_error: 3.947595204345311
best_error: 3.8668794668142867
best_error: 3.8668794666846447
best_error: 3.866879457120168
best_error: 3.642614084246457
best_error: 3.642614075626784
best_error: 3.642613902233946
best_error: 3.59015003897712
best_error: 3.5901499723479704
best_error: 3.5860574346225307
best_error: 3.5860572115999263
best_error: 3.50997850047487
best_error: 3.5099783697622016
best_error: 3.490743675749337
best_error: 3.4907436757451045
best_error: 3.490743672588345
best_error: 3.4824195835591354
best_error: 3.482419580817227
best_error: 3.465666413868226
best_error: 3.46566638293627
best_error: 3.4564436407846832
best_error: 3.456443626814204
best_error: 3.451129070131919
best_error: 3.451129061372884
best_error: 3.4464949837827064
best_error: 3.446494982878631
best_error: 3.446445378902163
best_error: 3.4464453768847805
best_error: 3.446434932433971
best_error: 3.4464349312068547
best_error: 3.446427433140829
best_error: 3.4464274319036563
best_error: 3.446398826428868
best_error: 3.446398825565512
best_error: 3.4463453672966735
best_error: 3.4463453663348402
best_error: 3.446310782674132
best_error: 3.4463107818855043
best_error: 3.4462998178142357
best_error: 3.44629981702579
best_error: 3.446289992056465
best_error: 3.4462899914354055
best_error: 3.4462616386047196
best_error: 3.4462616378387985
best_error: 3.44622155321827
best_error: 3.4462215527396816
best_error: 3.446156863915447
best_error: 3.446156863572481
best_error: 3.446094041346445
best_error: 3.4460940409497574
best_error: 3.446020885594715
best_error: 3.4460208851756824
best_error: 3.4460107751776503
best_error: 3.4460107538487286
best_error: 3.446009951118801
best_error: 3.446009950700467
best_error: 3.4459606980070108
best_error: 3.4459606976985446
best_error: 3.4459606976676547
best_error: 3.4459587467329933
best_error: 3.4459587464246164
best_error: 3.4459587463934716
best_error: 3.4459563799862343
best_error: 3.445956379809426
best_error: 3.445956379644058
best_error: 3.44595256145261
best_error: 3.4459525612759974
best_error: 3.445952561110091
best_error: 3.4459481680643194
best_error: 3.445948146763496
best_error: 3.4443918166323946
best_error: 3.444391796721374
best_error: 3.444086428913547
best_error: 3.444086408088591
best_error: 3.4439503342086377
best_error: 3.4439503333385786
best_error: 3.443926250113898
best_error: 3.4439262492913385
best_error: 3.443844764095952
best_error: 3.443844763343466
best_error: 3.4438405252300397
best_error: 3.443840503526876
best_error: 3.443834062416586
best_error: 3.4438340616641114
best_error: 3.4438329646780126
best_error: 3.44383296392555
best_error: 3.4438327759993
best_error: 3.4438327752468267
best_error: 3.443832691416106
best_error: 3.44383269066362
best_error: 3.443832645552554
best_error: 3.4438326448000653
best_error: 3.443832630821936
best_error: 3.443832627279131
best_error: 3.443832622428399
best_error: 3.443832619273858
best_error: 3.4437595954684044
best_error: 3.44375946943912
best_error: 3.4437590945725693
best_error: 3.4437583833976015
best_error: 3.4437554900082668
best_error: 3.443743987447707
best_error: 3.443727168613898
best_error: 3.443727166964637
best_error: 3.4437142788483506
best_error: 3.4437142774410945
best_error: 3.443709156617681
best_error: 3.443709156357013
best_error: 3.4436936216747243
best_error: 3.4436936215703584
best_error: 3.4436930616827057
best_error: 3.4436930616105834
best_error: 3.4436929622737047
best_error: 3.44369296220905
best_error: 3.4436926619462818
best_error: 3.4436926619274444
best_error: 3.443692661825959
best_error: 3.4436912364763033
best_error: 3.4436912363951158
best_error: 3.443665445745811
best_error: 3.443616391622791
best_error: 3.4435931007477967
best_error: 3.443593100049167
best_error: 3.443581611272093
best_error: 3.4435816105361576
best_error: 3.4435629790221975
best_error: 3.443562978700369
