ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.683773913553804
best_error: 12.683773856023835
best_error: 12.40516217017907
best_error: 12.405162087546943
best_error: 10.582400137569936
best_error: 10.582399869816976
best_error: 7.97462090921879
best_error: 7.974620487640066
best_error: 7.32298320349705
best_error: 7.322982934976501
best_error: 7.291619016437343
best_error: 7.291618784763015
best_error: 6.585071316506999
best_error: 6.58507110316522
best_error: 6.312521728511203
best_error: 6.312521517322633
best_error: 6.161900835295455
best_error: 6.1619006182958245
best_error: 6.122514347721099
best_error: 6.122514061871847
best_error: 6.11193841194589
best_error: 6.111938191482925
best_error: 6.108089347866818
best_error: 6.108089126958871
best_error: 6.1080232025484165
best_error: 6.108022981632827
best_error: 6.10798059760933
best_error: 6.107980376688824
best_error: 6.1079790748220795
best_error: 6.107978801688205
best_error: 5.182434257013259
best_error: 5.182433813856944
best_error: 5.17293961587256
best_error: 5.1729391795663116
best_error: 5.130688154553004
best_error: 5.130687774589889
best_error: 5.0418379280940275
best_error: 5.041837511299864
best_error: 4.776696360650767
best_error: 4.776696137156062
best_error: 4.698278684464873
best_error: 4.698278124893783
best_error: 4.693658550892957
best_error: 4.693657949162182
best_error: 4.680478630326411
best_error: 4.680478451280095
best_error: 4.679925787506708
best_error: 4.679925183646376
best_error: 4.677818187994438
best_error: 4.677818012062895
best_error: 4.671373675704517
best_error: 4.671373527822303
best_error: 4.6470027273304915
best_error: 4.647002548974184
best_error: 4.6425630195413445
best_error: 4.642562832324991
best_error: 4.635769694630935
best_error: 4.635769500244531
best_error: 4.625982552384828
best_error: 4.625982351175011
best_error: 4.62144686620489
best_error: 4.62144665662818
best_error: 4.620760923840386
best_error: 4.620760714723101
best_error: 4.618883897621537
best_error: 4.618883685249342
best_error: 4.615787777950433
best_error: 4.615787569919692
best_error: 4.5881435025204045
best_error: 4.5881429398544595
best_error: 4.5678640481118125
best_error: 4.5678638406028504
best_error: 4.564088239071272
best_error: 4.564087672639084
best_error: 4.523409384752342
best_error: 4.523409180079563
best_error: 4.508558927543596
best_error: 4.508558340769406
best_error: 4.480958127371089
best_error: 4.480957931410314
best_error: 4.474157027857364
best_error: 4.474156421812254
best_error: 4.424047821964113
best_error: 4.424047623627725
best_error: 4.4164574519816036
best_error: 4.416456856439273
best_error: 4.359450672644131
best_error: 4.35945046423793
best_error: 4.344062975306535
best_error: 4.344062444047299
best_error: 4.339349190922592
best_error: 4.3393487321118265
best_error: 4.330324742946676
best_error: 4.3303242442262055
best_error: 4.295281915463374
best_error: 4.29528170298851
best_error: 4.255213602337948
best_error: 4.255213399993712
best_error: 4.157644072027136
best_error: 4.157643645522464
best_error: 4.144229979169273
best_error: 4.14422935221252
best_error: 3.8748804660496603
best_error: 3.8748803399736103
best_error: 3.874880332286687
best_error: 3.840216331176027
best_error: 3.8402158451026427
best_error: 3.798719332188417
best_error: 3.7987191999947107
best_error: 3.7905833349145848
best_error: 3.7905828988796086
best_error: 3.7805713190163246
best_error: 3.7805711923590333
best_error: 3.7805711871582117
best_error: 3.748862978890648
best_error: 3.748862864457965
best_error: 3.7488628466444145
best_error: 3.744638424928512
best_error: 3.7446379650362536
best_error: 3.7096748355048748
best_error: 3.7096743841243227
best_error: 3.693506383737676
best_error: 3.693505936709289
best_error: 3.6915338917999843
best_error: 3.691533444524952
best_error: 3.691306374425987
best_error: 3.6913059271225284
best_error: 3.691163750106282
best_error: 3.6911633027849717
best_error: 3.6911025068043064
best_error: 3.6911020594753516
best_error: 3.691086913135395
best_error: 3.691086806863783
best_error: 3.6910867811681705
best_error: 3.687592769323771
best_error: 3.687592295643297
best_error: 3.6854407433046137
best_error: 3.6854402707377067
best_error: 3.685043039517926
best_error: 3.6850429520308223
best_error: 3.6850429068950037
best_error: 3.684650926573783
best_error: 3.6846504539205025
