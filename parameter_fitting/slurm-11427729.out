ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.661270176774465
best_error: 24.661269627966462
best_error: 5.0062740330687765
best_error: 5.00627403269104
best_error: 5.006246408303655
best_error: 5.006246408299671
best_error: 5.006246408281897
best_error: 5.006135751835441
best_error: 5.00613575183144
best_error: 5.006135751813656
best_error: 5.005690589688325
best_error: 5.005690589684256
best_error: 5.005690589666432
best_error: 5.003868186157335
best_error: 5.003868186152964
best_error: 5.003868186134984
best_error: 4.995823858725367
best_error: 4.995823858719331
best_error: 4.9958238587008825
best_error: 4.9391176892818045
best_error: 4.939117689211242
best_error: 4.894452487387725
best_error: 4.894452487022619
best_error: 4.768789344556154
best_error: 4.768789340069809
best_error: 4.727992000797386
best_error: 4.727991993834471
best_error: 3.4281454793766737
best_error: 3.4281453260110886
best_error: 3.397370064884679
best_error: 3.397369949803418
best_error: 3.1111747668332477
best_error: 3.1111745799366535
best_error: 2.9478809695285975
best_error: 2.9478809588369432
best_error: 2.947431253930456
best_error: 2.9474312215148375
best_error: 2.9447104062442975
best_error: 2.9447103931524454
best_error: 2.936590118381012
best_error: 2.9365901113788335
best_error: 2.9365901074011047
best_error: 2.925262916468145
best_error: 2.925262908987085
best_error: 2.9252629044068383
best_error: 2.9179558087164037
best_error: 2.9179558036795186
best_error: 2.9179557963647285
best_error: 2.913954406603251
best_error: 2.9139544031915614
best_error: 2.9139543941607102
best_error: 2.907839663994768
best_error: 2.907839663234715
best_error: 2.9078396615917916
best_error: 2.9078396514928744
best_error: 2.905568495234588
best_error: 2.9055684938624218
best_error: 2.9055684828026513
best_error: 2.9044387611147506
best_error: 2.9044387606207835
best_error: 2.904438748700189
best_error: 2.9034266742677
best_error: 2.9034266677689895
best_error: 2.903426661826745
best_error: 2.9030980568226727
best_error: 2.9030980479563313
best_error: 2.9030980443783307
best_error: 2.9014420873149827
best_error: 2.901441990803235
best_error: 2.8985922663025714
best_error: 2.898592211417714
best_error: 2.165088007243059
best_error: 2.1650877828384094
best_error: 2.0143196492038284
best_error: 2.0143196127959566
best_error: 2.007003015838524
best_error: 2.007003011098232
best_error: 2.0070029498933852
best_error: 2.001529512568664
best_error: 2.0015294387595857
best_error: 1.9960419763776034
best_error: 1.9960419729979861
best_error: 1.9960419594121002
best_error: 1.995198723734669
best_error: 1.9951987211958018
best_error: 1.9951987191802787
best_error: 1.994936668036436
best_error: 1.9949366679391476
best_error: 1.9949366677031606
best_error: 1.9949366671082327
best_error: 1.9949366634495669
best_error: 1.9940041899519514
best_error: 1.9940041888315718
best_error: 1.9940041854268447
best_error: 1.9895682442786218
best_error: 1.9895682408190496
best_error: 1.9895682400489114
best_error: 1.9895682399926022
best_error: 1.9769762273773848
best_error: 1.9769762266515085
best_error: 1.9769762246141978
best_error: 1.9769762236866848
best_error: 1.976976223065136
best_error: 1.976976222906449
best_error: 1.9463054642704998
best_error: 1.9463054571324574
best_error: 1.9340928409128455
best_error: 1.9340928321205277
best_error: 1.9131736864383897
best_error: 1.9131736770690637
best_error: 1.8931215173443496
best_error: 1.8931214688257527
best_error: 1.8877840234182262
best_error: 1.8877840177903502
best_error: 1.8875869630998396
best_error: 1.8875869110610444
best_error: 1.8866973574197134
best_error: 1.886697339252196
best_error: 1.886116811551679
best_error: 1.8861168115304587
best_error: 1.8861168109829318
best_error: 1.8861168109490258
best_error: 1.885835713333784
best_error: 1.8858357069884975
best_error: 1.885766016292611
best_error: 1.8857660157220986
best_error: 1.8857660156999574
best_error: 1.8857612619752513
best_error: 1.885761261895105
best_error: 1.8857612613840768
best_error: 1.885744717803249
best_error: 1.885744716599292
best_error: 1.8856917052917597
best_error: 1.8856917029666067
best_error: 1.885455067853232
best_error: 1.8854550591068875
best_error: 1.8849700251221333
best_error: 1.8849700102649936
best_error: 1.883583789253869
best_error: 1.8835837663003434
best_error: 1.8821155783768884
best_error: 1.8821155629100812
best_error: 1.8809809971700095
best_error: 1.8809809745957335
best_error: 1.8762212824142954
best_error: 1.8762212342840767
best_error: 1.8719426144824647
best_error: 1.8719425606066347
best_error: 1.8582771662882507
best_error: 1.8582771195928234
best_error: 1.8561330822468607
best_error: 1.8561330440773849
best_error: 1.851587974238896
best_error: 1.8515879104835655
best_error: 1.8513557943535164
best_error: 1.851355730225135
best_error: 1.8498750986806975
best_error: 1.8498750456205235
best_error: 1.8434955341377008
best_error: 1.8434954871896778
best_error: 1.8374360860040313
best_error: 1.837436063764202
best_error: 1.8317401799317876
best_error: 1.8317401306280783
best_error: 1.830480905078091
best_error: 1.8304808652310738
best_error: 1.8298015705083985
best_error: 1.8298015557907752
best_error: 1.8293540829544954
best_error: 1.8293540733564253
best_error: 1.8278327381039983
best_error: 1.8278327329286879
best_error: 1.8255226949140544
best_error: 1.8255226697141047
best_error: 1.8254682262757305
best_error: 1.825468199115018
best_error: 1.8254649941738024
best_error: 1.8254649666940643
best_error: 1.8254622118965398
best_error: 1.8254621835420701
best_error: 1.825461910620277
best_error: 1.8254618821456428
best_error: 1.8254618755671022
best_error: 1.825030095078021
best_error: 1.8250300866410296
best_error: 1.824326691810283
best_error: 1.824326691337501
best_error: 1.8243266911258027
best_error: 1.824223227240351
best_error: 1.8242232246599122
best_error: 1.8238818245892074
best_error: 1.8238818213201253
best_error: 1.8237386130729487
best_error: 1.82373861257192
best_error: 1.823738612375103
best_error: 1.8237326675606156
best_error: 1.8237326662913875
best_error: 1.8237278808302153
best_error: 1.8237278807618702
best_error: 1.823727880752183
best_error: 1.823727880724243
best_error: 1.8237199147936076
best_error: 1.8237199147368455
best_error: 1.8237199146804444
best_error: 1.8237085390383945
best_error: 1.8237085380226614
best_error: 1.8237040670380593
best_error: 1.8237040569128018
best_error: 1.8236860764858076
best_error: 1.8236860688343768
best_error: 1.8236696666728824
best_error: 1.8236696640180405
best_error: 1.8236458739276573
best_error: 1.8236458736464118
best_error: 1.8236458735850447
best_error: 1.82364329707346
best_error: 1.8236432970237058
best_error: 1.8236432965746854
best_error: 1.8236328606239751
best_error: 1.8236328601349734
best_error: 1.8236001283735186
best_error: 1.8236001266447364
best_error: 1.8235499875391588
best_error: 1.8235499850767323
best_error: 1.8233513054153565
best_error: 1.8233513014460072
best_error: 1.8231905813090763
best_error: 1.8231905694855899
best_error: 1.8229933316540996
best_error: 1.822993306579756
best_error: 1.8228145583262148
best_error: 1.822814541292657
best_error: 1.8224278116358625
best_error: 1.8224278046723799
best_error: 1.8212291217101673
best_error: 1.8212291078673644
best_error: 1.8203906909097518
best_error: 1.820390686336361
best_error: 1.8203844888824556
best_error: 1.8203844577500055
best_error: 1.8199340044088104
best_error: 1.8199339952321705
best_error: 1.8194837367227163
best_error: 1.8194837351206323
best_error: 1.8193839196581212
best_error: 1.8193839142432067
best_error: 1.8193438075941157
best_error: 1.8193438032237967
best_error: 1.81932465426189
best_error: 1.819324649113825
best_error: 1.8193242396580087
best_error: 1.8193242341505274
best_error: 1.819324214789547
best_error: 1.8193242092799762
best_error: 1.819324195571573
best_error: 1.8193241900603514
best_error: 1.8193241856161253
best_error: 1.8193241800433446
best_error: 1.819311212235439
best_error: 1.8193112100376865
best_error: 1.8192924793194052
best_error: 1.8192924775884762
best_error: 1.8192831760538646
best_error: 1.819283175081839
best_error: 1.8192821481189188
best_error: 1.8192821476966932
best_error: 1.8192817929096123
best_error: 1.8192817928247262
best_error: 1.8192817645200612
best_error: 1.8192817643727792
best_error: 1.8192817530895717
best_error: 1.8192817529507053
best_error: 1.8192817511468855
best_error: 1.819281751074696
best_error: 1.8192817510320232
best_error: 1.8192817502399916
