ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.711986697415039
best_error: 11.711986693491733
best_error: 11.494341593753045
best_error: 11.494341562893467
best_error: 8.451758833745675
best_error: 8.451758378330476
best_error: 6.824873408926479
best_error: 6.8248730082720925
best_error: 6.689844404613451
best_error: 6.689844349114968
best_error: 6.639285640864825
best_error: 6.639285629667941
best_error: 6.63671939145633
best_error: 6.636719348513675
best_error: 6.631995236120082
best_error: 6.631995197042433
best_error: 6.627751297328291
best_error: 6.627751287265291
best_error: 6.619470585785419
best_error: 6.6194704229312675
best_error: 6.595719744127663
best_error: 6.59571970224615
best_error: 6.502750598888812
best_error: 6.502750589700051
best_error: 6.452472603056487
best_error: 6.452472593126922
best_error: 5.865252117736317
best_error: 5.865251982573325
best_error: 5.408865300066272
best_error: 5.408865026760786
best_error: 5.391480634467096
best_error: 5.391480354011295
best_error: 4.9219370542895176
best_error: 4.921936947619693
best_error: 4.809967528906403
best_error: 4.809967287565843
best_error: 4.6828263437295155
best_error: 4.682826339735948
best_error: 4.682826336679154
best_error: 4.67670049099304
best_error: 4.676700481827156
best_error: 4.671006280599712
best_error: 4.671006180085379
best_error: 4.669436307258773
best_error: 4.669436300670911
best_error: 4.669436300183695
best_error: 4.666015247535816
best_error: 4.666015133688086
best_error: 4.660072548696629
best_error: 4.66007254834006
best_error: 4.660072541487755
best_error: 4.6176189160008425
best_error: 4.617618901468147
best_error: 4.585262635018239
best_error: 4.585262617628168
best_error: 4.578677426561912
best_error: 4.578677401089128
best_error: 4.576813496409665
best_error: 4.576813426916329
best_error: 4.567718849955359
best_error: 4.567718810225605
best_error: 4.558909689401173
best_error: 4.558909631033682
best_error: 4.54326275670441
best_error: 4.543262695377319
best_error: 4.519520886125781
best_error: 4.5195206926174665
best_error: 4.470349463304839
best_error: 4.470349372655307
best_error: 4.436722531429652
best_error: 4.436722528257755
best_error: 4.436722522784712
best_error: 4.403785630161895
best_error: 4.403785584225199
best_error: 4.4036227203346545
best_error: 4.403622673881567
best_error: 4.403619952476333
best_error: 4.40361990602652
best_error: 4.403617348156825
best_error: 4.403617301710094
best_error: 4.403615996287259
best_error: 4.403615949842132
best_error: 4.403614726955329
best_error: 4.403614680511695
best_error: 4.403614052997628
best_error: 4.4036140065547915
best_error: 4.403613422567132
best_error: 4.403613376125043
best_error: 4.399222362550364
best_error: 4.399222329470614
best_error: 4.398048591782524
best_error: 4.398048580864289
best_error: 4.391073163636068
best_error: 4.391073024115077
best_error: 4.3455612969164035
best_error: 4.345561290299905
best_error: 4.34460137150266
best_error: 4.344601339596913
best_error: 4.343395679754275
best_error: 4.3433956626446815
best_error: 4.343317943207926
best_error: 4.3433179153062085
best_error: 4.343250251058981
best_error: 4.343250234086401
best_error: 4.3432292138944675
best_error: 4.343229196663038
best_error: 4.343222039307846
best_error: 4.343222022064933
best_error: 4.343219182155897
best_error: 4.3432191649093514
best_error: 4.343216627981252
best_error: 4.343216610731467
best_error: 4.343215414379297
best_error: 4.343215397127969
best_error: 4.3432149480696465
best_error: 4.343214930817728
best_error: 4.343214837465712
best_error: 4.34321482021365
best_error: 4.343214740016925
best_error: 4.343214722764742
best_error: 4.34321468947479
best_error: 4.343214672222542
best_error: 4.343214644954401
best_error: 4.343214627702095
best_error: 4.343214621833992
best_error: 4.343214604581663
best_error: 4.34321460147678
best_error: 4.343214584224418
best_error: 4.343214573626833
best_error: 4.343214569946667
best_error: 4.343214567561536
best_error: 4.343214567248699
best_error: 4.343214567163022
best_error: 4.343214566850177
best_error: 4.343214566339232
best_error: 4.343214566026394
best_error: 4.343214565876064
best_error: 4.343214565818516
best_error: 4.343214565812118
best_error: 4.343214565796522
best_error: 4.34321456576157
