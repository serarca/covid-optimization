ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.52664487455209
best_error: 100.52664468519555
best_error: 100.52664467071497
best_error: 20.674681383040138
best_error: 20.674681383039555
best_error: 20.67468138192285
best_error: 20.674588394576
best_error: 20.674588393456013
best_error: 20.674214194776848
best_error: 20.674214193645987
best_error: 20.67268055533741
best_error: 20.672680554161474
best_error: 20.66589310755679
best_error: 20.665893106172273
best_error: 20.62209465054919
best_error: 20.622094647525945
best_error: 20.58394610768649
best_error: 20.583946102842198
best_error: 20.544820425735487
best_error: 20.54482041858217
best_error: 18.007265052497743
best_error: 18.007264706131487
best_error: 16.959764581440147
best_error: 16.95976409437844
best_error: 15.4192472316758
best_error: 15.419246562987427
best_error: 15.146993613422563
best_error: 15.14699357636773
best_error: 14.858525702245787
best_error: 14.858525672928593
best_error: 14.773067848733135
best_error: 14.773067823779341
best_error: 14.765630529343234
best_error: 14.765630424996685
best_error: 14.761735413404669
best_error: 14.761735413354362
best_error: 14.761735332042477
best_error: 14.76041749412839
best_error: 14.760417492887717
best_error: 14.760417430348742
best_error: 14.75984535676011
best_error: 14.759845355518214
best_error: 14.759845292938884
best_error: 14.759447947403853
best_error: 14.759447946134724
best_error: 14.759447883905697
best_error: 14.759248771938173
best_error: 14.759248770668602
best_error: 14.759248708425574
best_error: 14.759102101420973
best_error: 14.759102100137255
best_error: 14.759102038186809
best_error: 14.759033620714996
best_error: 14.759033619431126
best_error: 14.759033557475876
best_error: 14.758979901645684
best_error: 14.758979900361691
best_error: 14.758979838402674
best_error: 14.758977585127788
best_error: 14.758977561386484
best_error: 14.758973196964986
best_error: 14.758973195680982
best_error: 14.758973133721476
best_error: 14.75893900475979
best_error: 14.758939003475863
best_error: 14.758938941513179
best_error: 14.758833627498179
best_error: 14.75883360375982
best_error: 14.758458098407743
best_error: 14.75845807463997
best_error: 14.756959986932106
best_error: 14.75695996319645
best_error: 14.751024693108441
best_error: 14.75102466940563
best_error: 14.742330070625151
best_error: 14.742330046256885
best_error: 14.74022850002111
best_error: 14.740228475694696
best_error: 14.731923522812039
best_error: 14.731923499058226
best_error: 14.72520589826796
best_error: 14.72520587442947
best_error: 14.69409343164825
best_error: 14.694093410007564
best_error: 14.693802505221148
best_error: 14.693802481299809
best_error: 14.693294481693432
best_error: 14.693294458637187
best_error: 14.657751671528157
best_error: 14.657751671003403
best_error: 14.657751587217351
best_error: 14.650086469173207
best_error: 14.650086462890137
best_error: 14.650086460865646
best_error: 14.637921761731203
best_error: 14.637921708955684
best_error: 14.625580569579117
best_error: 14.625580563611683
best_error: 14.62558056136228
best_error: 14.623392489919281
best_error: 14.62339248991928
best_error: 14.623392483957048
best_error: 14.62339248171487
best_error: 14.616074430673216
best_error: 14.616074369334662
best_error: 14.598355429156186
best_error: 14.598355409765519
best_error: 14.598355068578709
best_error: 14.585150172460096
best_error: 14.585150101212047
best_error: 14.584222017722208
best_error: 14.584221945984938
best_error: 14.583913310816689
best_error: 14.583913239015164
best_error: 14.58379255794652
best_error: 14.583792486119862
best_error: 14.583739037263665
best_error: 14.583738965425866
best_error: 14.583717176365155
best_error: 14.583717156959626
best_error: 14.583716815518553
best_error: 14.580714691663113
best_error: 14.580714620796078
best_error: 14.577850490264403
best_error: 14.577850488691624
best_error: 14.577850485037368
best_error: 14.577850482108342
best_error: 14.56470255513953
best_error: 14.564702493571673
best_error: 14.274516651589408
best_error: 14.274516645658137
best_error: 14.274516645530237
best_error: 14.267155159096768
best_error: 14.26715514874078
best_error: 14.25282982420473
best_error: 14.252829815791753
best_error: 14.232546672237156
best_error: 14.232546664579825
best_error: 14.168718583773018
best_error: 14.16871857927338
best_error: 14.168718577440782
best_error: 14.084286234210756
best_error: 14.08428620535502
best_error: 14.084285688951354
best_error: 13.854578604165122
best_error: 13.854578073266946
best_error: 13.728459783797502
best_error: 13.728459274587552
best_error: 13.474393873640034
best_error: 13.474393867453932
best_error: 13.428934564091048
best_error: 13.428934558474818
best_error: 13.425814267145253
best_error: 13.425814151943662
best_error: 13.424313851466518
best_error: 13.424313736165114
best_error: 13.424090703745115
best_error: 13.424090588428875
best_error: 13.424059341536136
best_error: 13.424059226217818
best_error: 13.424052595190071
best_error: 13.42405259519007
best_error: 13.424052589671962
best_error: 13.424050381682527
best_error: 13.424050266363649
best_error: 13.424048239334176
best_error: 13.424048233816094
best_error: 13.424048216770867
best_error: 13.42404816198528
best_error: 13.424048158462242
best_error: 13.424048157396623
