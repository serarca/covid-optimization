ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 17.580980670039413
best_error: 17.580980553122032
best_error: 11.249162743187139
best_error: 11.249162736036068
best_error: 11.24916270995766
best_error: 10.879627784611897
best_error: 10.879627776559026
best_error: 10.87202340588302
best_error: 10.872023401223478
best_error: 10.872023361468784
best_error: 10.63413539991546
best_error: 10.634135390996907
best_error: 10.560522256654492
best_error: 10.56052224685647
best_error: 10.560522236454663
best_error: 10.481074471348718
best_error: 10.481074459193302
best_error: 10.481074459124413
best_error: 7.746666368319467
best_error: 7.7466663161729015
best_error: 6.228767827767848
best_error: 6.228767563578903
best_error: 5.420679372940888
best_error: 5.420679185966085
best_error: 5.218570402028197
best_error: 5.218570232878646
best_error: 5.12936817242789
best_error: 5.129368006657684
best_error: 5.125406547667212
best_error: 5.125406382582446
best_error: 5.1223819678734515
best_error: 5.122381803563895
best_error: 5.116273972566324
best_error: 5.116273807443348
best_error: 5.113666914431484
best_error: 5.11366674896295
best_error: 5.112768090804044
best_error: 5.112767925216607
best_error: 5.112523966493547
best_error: 5.112523800873824
best_error: 5.1123636833799395
best_error: 5.11236351773904
best_error: 5.112127004365776
best_error: 5.112126838693599
best_error: 5.111915471559939
best_error: 5.1119153058597995
best_error: 5.111816970047341
best_error: 5.111816804334196
best_error: 5.111813538344313
best_error: 5.111813372630723
best_error: 5.111813318798362
best_error: 4.687468455630992
best_error: 4.6874682381039605
best_error: 4.661818095528925
best_error: 4.661817876984967
best_error: 4.611079747731999
best_error: 4.611079523579171
best_error: 4.604366477487204
best_error: 4.603497382380766
best_error: 4.603497157202164
best_error: 4.603444497931098
best_error: 4.603444272745347
best_error: 4.603439388521856
best_error: 4.6034393879828475
best_error: 4.603439359645546
best_error: 4.603439355152829
best_error: 4.603439355152828
best_error: 4.6034393550810115
best_error: 4.603439354541997
best_error: 4.603439334976935
best_error: 4.6034391931177865
best_error: 4.603439192578774
best_error: 4.60343916424147
best_error: 4.6034379510609895
best_error: 4.603437950521931
best_error: 4.603437922184627
best_error: 4.60343488010048
best_error: 4.60343487956132
best_error: 4.603434851224012
best_error: 4.603422594855537
best_error: 4.603422594315985
best_error: 4.60342256597864
best_error: 4.6033743663719005
best_error: 4.6033561695454335
best_error: 4.603355944348506
best_error: 4.603292528254778
best_error: 4.603292303049837
best_error: 4.603037426512674
best_error: 4.603037201275566
best_error: 4.602008416996494
best_error: 4.602008191629809
best_error: 4.598875063591228
best_error: 4.59850043315406
best_error: 4.592517838941681
best_error: 4.592517612364712
best_error: 4.583623364758941
best_error: 4.583623137074396
best_error: 4.567348170793634
best_error: 4.56734794111268
best_error: 4.565240391063921
best_error: 4.5650379172866415
best_error: 4.565037687324589
best_error: 4.546699562333355
best_error: 4.546699328866859
best_error: 4.546689433469782
best_error: 4.546689200001888
best_error: 4.546648914594137
best_error: 4.546648681120653
best_error: 4.546486784351033
best_error: 4.546486550855205
best_error: 4.545837387604192
best_error: 4.5458371540188836
best_error: 4.5432453217885165
best_error: 4.543245085370719
best_error: 4.532946406417244
best_error: 4.532946163557278
best_error: 4.489585782384719
best_error: 4.489585529737471
best_error: 4.408511310805212
best_error: 4.408511005964694
best_error: 4.408510776808738
best_error: 4.40851047196815
best_error: 4.408508640821492
best_error: 4.4085083359805814
best_error: 4.408500096850941
best_error: 4.408499792008801
best_error: 4.408465920623816
best_error: 4.408465615776755
best_error: 4.408329210196705
best_error: 4.408328905329966
best_error: 4.4077822801891
best_error: 4.4077819752435925
best_error: 4.405603525158621
best_error: 4.405603222524798
best_error: 4.396899888762778
best_error: 4.396899584876455
best_error: 4.362367100587226
best_error: 4.362366805717684
best_error: 4.228158867629256
best_error: 4.228158576538612
best_error: 4.219326604546046
best_error: 4.219326312246215
best_error: 4.213482396114512
best_error: 4.213482373546591
best_error: 4.213482344294516
best_error: 4.212128867337306
best_error: 4.212128575025147
best_error: 4.21112786880093
best_error: 4.211127576352391
best_error: 4.210971756558566
best_error: 4.210971464088765
best_error: 4.21086963506407
best_error: 4.210869342580345
best_error: 4.210795437979374
best_error: 4.2107951454855534
best_error: 4.210751686948601
best_error: 4.210751394448816
best_error: 4.21071425211627
best_error: 4.2107139596113905
best_error: 4.210696673881757
best_error: 4.210696381374497
best_error: 4.210680001671976
best_error: 4.2106797091624415
best_error: 4.210673446488757
best_error: 4.2106731539783295
best_error: 4.210669374863485
best_error: 4.210669082352509
best_error: 4.210666636077309
best_error: 4.210666343565945
best_error: 4.21066467549038
best_error: 4.210664382978747
best_error: 4.210663457772959
best_error: 4.21066316526116
best_error: 4.210662619995642
best_error: 4.210662327483737
best_error: 4.210662056173183
best_error: 4.210661763661205
best_error: 4.210661696758227
best_error: 4.210661404246199
best_error: 4.210661127408646
best_error: 4.210660976436025
