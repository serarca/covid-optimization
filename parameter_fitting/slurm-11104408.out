ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.48992514172676
best_error: 100.48992495276117
best_error: 100.48992493796175
best_error: 20.680980528251062
best_error: 20.680980528250508
best_error: 20.680980527083285
best_error: 20.680870882234114
best_error: 20.68087088106368
best_error: 20.680429817592394
best_error: 20.68042981641125
best_error: 20.678625015467972
best_error: 20.67862501424267
best_error: 20.67069731811379
best_error: 20.670697316688102
best_error: 20.621597795555218
best_error: 20.621597792600195
best_error: 20.621270759440975
best_error: 20.621270756473624
best_error: 20.62094187156886
best_error: 20.620941868589078
best_error: 18.77770306119608
best_error: 18.777702809535363
best_error: 18.293884694327694
best_error: 18.29388437277828
best_error: 17.575517936841194
best_error: 17.57551751387481
best_error: 15.770339473207269
best_error: 15.77033881847419
best_error: 15.25148669173858
best_error: 15.251486654925186
best_error: 15.06745150822449
best_error: 15.067451507132919
best_error: 15.067451461805595
best_error: 15.062601119113564
best_error: 15.062601117503334
best_error: 15.062601079230753
best_error: 15.061858045982403
best_error: 15.061858044373988
best_error: 15.061858006029727
best_error: 15.06174573270593
best_error: 15.06174573109779
best_error: 15.061745692742686
best_error: 15.06163328558649
best_error: 15.061633283951057
best_error: 15.061633245968796
best_error: 15.06157996321004
best_error: 15.061579961574854
best_error: 15.061579923586573
best_error: 15.061570954856375
best_error: 15.061570953221235
best_error: 15.061570915231936
best_error: 15.06156695839809
best_error: 15.061566956762968
best_error: 15.061566918773213
best_error: 15.061565509648396
best_error: 15.061565482538438
best_error: 15.051543894496788
best_error: 15.051543893006563
best_error: 15.051543852979503
best_error: 15.012136541668292
best_error: 15.01213654128582
best_error: 15.012136482267138
best_error: 14.866188910642773
best_error: 14.866188811628266
best_error: 14.857252572122476
best_error: 14.85725257016713
best_error: 14.857252449417025
best_error: 14.825340649773132
best_error: 14.825340614878066
best_error: 14.805704476693084
best_error: 14.805704470929609
best_error: 14.805704457607685
best_error: 14.780603430659557
best_error: 14.780603401514295
best_error: 14.77974053947136
best_error: 14.779740512075087
best_error: 14.760643090060832
best_error: 14.76064308859645
best_error: 14.760642998625638
best_error: 14.736837812599223
best_error: 14.73683778831306
best_error: 14.707252788941972
best_error: 14.70725271929322
best_error: 14.704062745103213
best_error: 14.704062725220453
best_error: 14.704062383550514
best_error: 14.692007133954865
best_error: 14.692007074416537
best_error: 14.691852134344597
best_error: 14.691852074791495
best_error: 14.691728935864749
best_error: 14.691728876299901
best_error: 14.691655055631694
best_error: 14.691654996059802
best_error: 14.691598193086643
best_error: 14.69159813350933
best_error: 14.691560115866883
best_error: 14.69156005628594
best_error: 14.691532925121791
best_error: 14.69153286553826
best_error: 14.691509712475469
best_error: 14.69150965288972
best_error: 14.691496440428335
best_error: 14.691496380841325
best_error: 14.691486982293346
best_error: 14.691486922705433
best_error: 14.69148013503088
best_error: 14.691480075442321
best_error: 14.691474531615956
best_error: 14.691474472026854
best_error: 14.691471179477233
best_error: 14.691471119887815
best_error: 14.69146748490541
best_error: 14.69146742531564
best_error: 14.69146593191977
best_error: 14.691465872329854
best_error: 14.691464984838342
best_error: 14.691464925248333
best_error: 14.691463958657959
best_error: 14.691463899067852
best_error: 14.691463564426332
best_error: 14.691463504836186
best_error: 14.691463269192644
best_error: 14.691463209602471
best_error: 14.691463052550437
best_error: 14.691462992960242
best_error: 14.691462908829422
best_error: 14.691462849239219
best_error: 14.691462767363943
best_error: 14.691462707773722
best_error: 14.691462698089401
best_error: 14.691462638499171
best_error: 14.691462611235073
best_error: 14.69146255164484
best_error: 14.691462528834897
best_error: 14.691462528257787
best_error: 14.69146252539208
