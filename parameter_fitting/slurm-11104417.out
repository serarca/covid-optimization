ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.79915176174862
best_error: 100.79915156915305
best_error: 100.79915155778158
best_error: 20.669811249704686
best_error: 20.66981124970407
best_error: 20.669811248585376
best_error: 20.66972266453151
best_error: 20.66972266340967
best_error: 20.66936631738217
best_error: 20.669366316250127
best_error: 20.667907997064617
best_error: 20.667907995890246
best_error: 20.661489265056645
best_error: 20.661489263685397
best_error: 20.620554862997377
best_error: 20.620554860029294
best_error: 20.52458719767443
best_error: 20.524587189157096
best_error: 19.975683306183395
best_error: 19.975683237942086
best_error: 19.68302797590684
best_error: 19.683027870143082
best_error: 19.28002241118075
best_error: 19.280022250497286
best_error: 17.495388462132823
best_error: 17.49538839328914
best_error: 14.775743290693153
best_error: 14.775743257217687
best_error: 14.610099520223361
best_error: 14.610099492799499
best_error: 14.607791447539416
best_error: 14.607791444856147
best_error: 14.607791391975294
best_error: 14.605873208563183
best_error: 14.605873205799627
best_error: 14.605873153909416
best_error: 14.601682557515373
best_error: 14.601682552364977
best_error: 14.601682538769179
best_error: 14.601579011443672
best_error: 14.60157900629154
best_error: 14.601578992696371
best_error: 14.601573290053487
best_error: 14.60157328490126
best_error: 14.60157327130613
best_error: 14.601568526406616
best_error: 14.601568521254304
best_error: 14.601568507659206
best_error: 14.601563229360462
best_error: 14.601563224208064
best_error: 14.601563210612987
best_error: 14.601559805343307
best_error: 14.601559800190852
best_error: 14.601559786595796
best_error: 14.601552531716843
best_error: 14.601552526564266
best_error: 14.60155251296926
best_error: 14.601549413044633
best_error: 14.601549407892007
best_error: 14.601549394297018
best_error: 14.601546545190006
best_error: 14.601546540037326
best_error: 14.601546526442355
best_error: 14.601546469563354
best_error: 14.601546464410678
best_error: 14.601546450815711
best_error: 14.601546401294392
best_error: 14.60154639614171
best_error: 14.60154638254674
best_error: 14.601546349617166
best_error: 14.601546344464488
best_error: 14.601546330869517
best_error: 14.601546257018136
best_error: 14.601546251865457
best_error: 14.601546238270483
best_error: 14.601546172112023
best_error: 14.601546166959338
best_error: 14.601546153364371
best_error: 14.6015461314594
best_error: 14.601546126306719
best_error: 14.60154611919894
best_error: 14.60154605526592
best_error: 14.601546028394608
best_error: 14.60147124377298
best_error: 14.601471238621095
best_error: 14.601471225015679
best_error: 14.601173565942085
best_error: 14.601173560793367
best_error: 14.601173547146413
best_error: 14.599983646647871
best_error: 14.599983641511821
best_error: 14.59998362769881
best_error: 14.595239363514281
best_error: 14.595239358452336
best_error: 14.595239343608732
best_error: 14.592384088662076
best_error: 14.59238408365389
best_error: 14.592384068043941
best_error: 14.592376721205799
best_error: 14.592376716197691
best_error: 14.592376700586728
best_error: 14.59234725191304
best_error: 14.592347246905241
best_error: 14.592347231290208
best_error: 14.592229383259028
best_error: 14.592229378252469
best_error: 14.592229362621142
best_error: 14.591758044885973
best_error: 14.591758039884361
best_error: 14.5917580241879
best_error: 14.589874869402475
best_error: 14.589874864420633
best_error: 14.589874848463868
best_error: 14.58242724815754
best_error: 14.582427243445135
best_error: 14.582427223469722
best_error: 14.554729024269186
best_error: 14.55472902045625
best_error: 14.554728988299477
best_error: 14.523480789850177
best_error: 14.523480789779578
best_error: 14.523480700451254
best_error: 14.52037185634504
best_error: 14.520371470865207
best_error: 14.519319130423042
best_error: 14.519319039474958
best_error: 14.519300049047583
best_error: 14.519299663431859
best_error: 14.51914380291398
best_error: 14.519143711944508
best_error: 14.519056719074836
best_error: 14.519056628094942
best_error: 14.519053141951208
best_error: 14.519052756046992
best_error: 14.519049254345415
best_error: 14.51904916336504
best_error: 14.51896362488502
best_error: 14.518963534156466
best_error: 14.518621276314956
best_error: 14.518621185553751
best_error: 14.517272299700725
best_error: 14.517271914208749
best_error: 14.511902972956952
best_error: 14.511902587154145
best_error: 14.490268641493492
best_error: 14.4902685529572
best_error: 14.430856391262422
best_error: 14.430856370408932
best_error: 14.430856370268053
best_error: 14.411099949028856
best_error: 14.411099927003626
best_error: 14.408278787492947
best_error: 14.408278707639733
best_error: 14.405180032240876
best_error: 14.405179962677199
best_error: 14.404655042017673
best_error: 14.404655019426267
best_error: 14.39721625974029
best_error: 14.397216237295332
best_error: 14.394574148635655
best_error: 14.394574093531434
best_error: 14.39116071519581
best_error: 14.391160692840128
best_error: 14.389420801511799
best_error: 14.389420780242805
best_error: 14.389264910056529
best_error: 14.389264890860172
best_error: 14.389264542353727
best_error: 14.387980145415657
best_error: 14.387980124129808
best_error: 14.37714640631075
best_error: 14.377146332943184
best_error: 14.306125517484332
best_error: 14.306125437734
best_error: 14.304873748829172
best_error: 14.30487372162196
best_error: 14.213896381355696
best_error: 14.213896372903328
best_error: 14.213896372273865
best_error: 14.181199993010434
best_error: 14.181199965370599
best_error: 14.16763624517801
best_error: 14.167636191621744
best_error: 14.134984429151128
best_error: 14.134984393228494
best_error: 14.122432448736703
best_error: 14.122432421271208
best_error: 14.00685608638791
best_error: 14.006856056102812
best_error: 13.864981708639082
best_error: 13.864981677324508
best_error: 13.768700354656008
best_error: 13.768700280630927
best_error: 13.596525476125104
best_error: 13.59652542980582
best_error: 13.584238404040544
best_error: 13.584238370779824
best_error: 13.583872147949961
best_error: 13.583872115013406
best_error: 13.583621955228796
best_error: 13.583621922289275
best_error: 13.583414178813436
best_error: 13.583414145871423
best_error: 13.5832808607237
best_error: 13.583280828102724
best_error: 13.583168262304026
best_error: 13.58316823002227
best_error: 13.583059053167952
best_error: 13.583059020885042
best_error: 13.583002248040863
best_error: 13.583002215757345
best_error: 13.58291312902622
best_error: 13.582913096741752
best_error: 13.582899908762348
best_error: 13.582899876477995
best_error: 13.582888837275961
best_error: 13.582888804991702
best_error: 13.582880808006989
best_error: 13.5828807757228
best_error: 13.582874648768993
best_error: 13.582874616484856
best_error: 13.582867492074234
best_error: 13.582867459790158
best_error: 13.582863510947684
best_error: 13.582863478663636
best_error: 13.582856598709341
best_error: 13.58285656642536
best_error: 13.58285410160351
best_error: 13.582854069319549
best_error: 13.582853530628142
best_error: 13.582853498344182
best_error: 13.582853079088128
best_error: 13.582853046804178
best_error: 13.582852611185041
best_error: 13.58285257890109
best_error: 13.582852330976708
best_error: 13.582852298692758
best_error: 13.582851846424823
best_error: 13.58285181414088
best_error: 13.582851670535817
best_error: 13.58285163825187
best_error: 13.58285160137451
best_error: 13.582851569090572
best_error: 13.582851481633478
best_error: 13.582851449349533
best_error: 13.582851438282422
best_error: 13.582851405998483
best_error: 13.582851403640497
best_error: 13.582851396885014
best_error: 13.57135327789598
best_error: 13.57135320618443
best_error: 13.566390064970761
best_error: 13.56639003669288
best_error: 13.331766358678271
best_error: 13.331766337902
best_error: 13.312248308238992
best_error: 13.312248307602697
best_error: 13.312248169906605
best_error: 13.312165069167417
best_error: 13.31216505026557
best_error: 13.312165048798468
best_error: 13.312061225919091
best_error: 13.312061087573344
best_error: 13.312055684208486
best_error: 13.312055665308295
best_error: 13.312055663841262
best_error: 13.312014461836297
best_error: 13.312014323487197
best_error: 13.312010703036451
best_error: 13.312010684136954
best_error: 13.312010682669941
best_error: 13.312008771583017
