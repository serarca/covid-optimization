ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.380955553462368
best_error: 10.380955545997232
best_error: 9.867083771153512
best_error: 9.867083710706758
best_error: 5.932209237170582
best_error: 5.932208765235086
best_error: 5.059681638762016
best_error: 5.059681524093832
best_error: 5.02952210462359
best_error: 5.029522024644836
best_error: 5.019205672598286
best_error: 5.019205672598181
best_error: 5.019205663413367
best_error: 5.017235510317352
best_error: 5.017235510317248
best_error: 5.017235501028721
best_error: 5.009580646966794
best_error: 5.00958064696669
best_error: 5.009580637474644
best_error: 5.006913001444023
best_error: 5.006913001443922
best_error: 5.006912994089202
best_error: 5.001396744659523
best_error: 5.00139674465942
best_error: 5.001396741149671
best_error: 4.970927934261623
best_error: 4.970927934261514
best_error: 4.970927933283098
best_error: 4.931650507924227
best_error: 4.9316505079240995
best_error: 4.90375099316076
best_error: 4.903750993160624
best_error: 4.695922427341798
best_error: 4.695922427341632
best_error: 3.9723383000309975
best_error: 3.972338104522069
best_error: 3.893261723516835
best_error: 3.89326164523968
best_error: 3.88579989204375
best_error: 3.8857998898986676
best_error: 3.8857998833697143
best_error: 3.8857998823548376
best_error: 3.881503001521086
best_error: 3.8815030015210334
best_error: 3.8815029917011725
best_error: 3.877636084620398
best_error: 3.8776360580655416
best_error: 3.8598291411135417
best_error: 3.8598291411135057
best_error: 3.8598291257314994
best_error: 3.854838216081576
best_error: 3.8548381764339457
best_error: 3.808426858262597
best_error: 3.808426858262564
best_error: 3.783297186918834
best_error: 3.783297186918759
best_error: 3.7832971701759397
best_error: 3.7655569774092608
best_error: 3.7655569393405064
best_error: 3.7634989823784433
best_error: 3.7634989823783798
best_error: 3.7633389459100344
best_error: 3.7633389299442968
best_error: 3.7633333388647072
best_error: 3.7633333388646504
best_error: 3.7633253315887645
best_error: 3.7633253315887076
best_error: 3.76331877700962
best_error: 3.763318777009561
best_error: 3.763318777000074
best_error: 3.7633183198446862
best_error: 3.7633183198446316
best_error: 3.763318319835017
best_error: 3.763317991338411
best_error: 3.7633179913383525
best_error: 3.7633179912648065
best_error: 3.763317567065364
best_error: 3.7633175670653025
best_error: 3.763317566933337
best_error: 3.7633170110016243
best_error: 3.763317011001567
best_error: 3.763317010885368
best_error: 3.763316682360779
best_error: 3.763316682360726
best_error: 3.763316682244427
best_error: 3.7633165872578798
best_error: 3.763316587257823
best_error: 3.7633165871414977
best_error: 3.7633165563530557
best_error: 3.763316556353002
best_error: 3.7633165562366644
best_error: 3.7633165360638094
best_error: 3.763316536063751
best_error: 3.763316535947412
best_error: 3.7633165210756045
best_error: 3.7633165210755477
best_error: 3.7633165209592034
best_error: 3.763316508598513
best_error: 3.76331650859846
best_error: 3.7633165084821094
best_error: 3.763316501192072
best_error: 3.763316501192019
best_error: 3.7633165010756646
best_error: 3.763316495197856
best_error: 3.7633164951977984
best_error: 3.7633164950814466
best_error: 3.763316491133637
best_error: 3.76331649113358
best_error: 3.763316491017227
best_error: 3.7633164880762022
best_error: 3.7633164880761485
best_error: 3.763316487959793
best_error: 3.7633164851679317
best_error: 3.7633164851678753
best_error: 3.763316485051525
best_error: 3.7633164839265487
best_error: 3.7633164825010943
best_error: 3.7633164825010357
best_error: 3.763316482384685
best_error: 3.7633164813509112
best_error: 3.7633164813508593
best_error: 3.7633164812345
best_error: 3.763316480669419
best_error: 3.7633164806693618
best_error: 3.7633164805530037
best_error: 3.7633164801090606
best_error: 3.763316480109002
best_error: 3.7633164799926466
best_error: 3.7633164797312793
best_error: 3.7633164797312206
best_error: 3.7633164796148675
best_error: 3.763316478641316
best_error: 3.7633164781587114
