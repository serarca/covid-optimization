ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 92
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.47494210221822
best_error: 98.4749419549918
best_error: 15.1201080126522
best_error: 15.120107999734369
best_error: 15.107866809631453
best_error: 15.107866804353506
best_error: 15.10269354420064
best_error: 15.102693538946427
best_error: 15.085304245811196
best_error: 15.085304242096559
best_error: 15.02753281019114
best_error: 15.027532810176393
best_error: 15.027532806483594
best_error: 15.026165822374296
best_error: 15.026165822356889
best_error: 15.02616581968583
best_error: 14.994124824137575
best_error: 14.994124812686689
best_error: 14.922485118892082
best_error: 14.92248510246858
best_error: 14.905947832443568
best_error: 14.905947826176693
best_error: 14.902936946344855
best_error: 14.902936938777042
best_error: 14.899440530237673
best_error: 14.899440522978503
best_error: 14.896646585150558
best_error: 14.89664658120602
best_error: 14.896313844658744
best_error: 14.896313843778007
best_error: 14.896164553415748
best_error: 14.896164552509589
best_error: 14.895620784453417
best_error: 14.895620782830747
best_error: 14.875370184605561
best_error: 14.875370179221177
best_error: 14.776549746076363
best_error: 14.776549726317993
best_error: 14.395985241386144
best_error: 14.395985219432909
best_error: 14.250754234669651
best_error: 14.250754233122404
best_error: 14.250754226885995
best_error: 14.25075421758435
best_error: 14.08677188321954
best_error: 14.086771880547484
best_error: 14.086771870377618
best_error: 14.08117301723734
best_error: 14.081173014198049
best_error: 14.081173003411491
best_error: 13.99094174646314
best_error: 13.990941739462682
best_error: 13.990941726467533
best_error: 13.971044064421216
best_error: 13.971044057860619
best_error: 13.971044037303592
best_error: 13.936631356454388
best_error: 13.936631350381514
best_error: 13.93663134151759
best_error: 13.878076885402804
best_error: 13.878076880106134
best_error: 13.878076873748002
best_error: 13.77075038610424
best_error: 13.770750385943272
best_error: 13.770750382227568
best_error: 13.770750370281085
best_error: 13.673239604814992
best_error: 13.673239596205457
best_error: 13.673239468261364
best_error: 13.587012134366237
best_error: 13.587012132766628
best_error: 13.587012117049401
best_error: 13.574888435526436
best_error: 13.57488843442225
best_error: 13.574888421333227
best_error: 13.566091468907215
best_error: 13.566091468233196
best_error: 13.56609145648544
best_error: 13.565513800344608
best_error: 13.565513799582895
best_error: 13.565513775470954
best_error: 13.560844017460735
best_error: 13.560844016952558
best_error: 13.56084399330827
best_error: 13.552638027269474
best_error: 13.55263802704308
best_error: 13.55263802513679
best_error: 13.544025469301417
best_error: 13.544025469165177
best_error: 13.544025467625952
best_error: 13.531978387492217
best_error: 13.531978366709978
best_error: 13.47748151405359
best_error: 13.47748151384876
best_error: 13.47748150696933
best_error: 13.474389361233508
best_error: 13.474389360981363
best_error: 13.474389354570748
best_error: 13.46847037606976
best_error: 13.468470375542708
best_error: 13.468470366477646
best_error: 13.458013968683712
best_error: 13.45801396632103
best_error: 13.45801394036932
best_error: 13.443592219661056
best_error: 13.443592218177901
best_error: 13.43590524151415
best_error: 13.43590524061761
best_error: 13.435905240615215
best_error: 13.433732085116278
best_error: 13.43373208462654
best_error: 13.433732066226344
best_error: 13.432239961678736
best_error: 13.432239961204484
best_error: 13.432239942782394
best_error: 13.42896051405799
best_error: 13.428960513686775
best_error: 13.428960513204391
best_error: 13.425685859101332
best_error: 13.425685859031372
best_error: 13.425685852859722
best_error: 13.424080911681873
best_error: 13.424080907603896
best_error: 13.42395315820899
best_error: 13.423953158206642
best_error: 13.42395315808986
best_error: 13.423603732152502
best_error: 13.423603732058009
best_error: 13.423603731778442
best_error: 13.423372673251256
best_error: 13.42337267311322
best_error: 13.423372672791107
best_error: 13.423282801088154
best_error: 13.423282794196721
best_error: 13.42327951455537
best_error: 13.42327951440068
best_error: 13.423279514077246
best_error: 13.423279268788221
best_error: 13.423279268633495
best_error: 13.423279268310155
best_error: 13.423279212579198
best_error: 13.42327921242446
best_error: 13.423279212101143
best_error: 13.423279191226285
best_error: 13.423279191071556
best_error: 13.42327919074824
best_error: 13.423279185468996
best_error: 13.423279185314248
best_error: 13.423279184990953
best_error: 13.42327918200698
best_error: 13.423279181852248
best_error: 13.423279181528935
