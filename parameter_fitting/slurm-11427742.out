ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.429111302276166
best_error: 25.429111184501007
best_error: 4.978563118981221
best_error: 4.978563118530291
best_error: 4.978317365342413
best_error: 4.978317365310195
best_error: 4.978317365101805
best_error: 4.977326957617694
best_error: 4.977326957584739
best_error: 4.977326957375588
best_error: 4.9732428635648525
best_error: 4.973242863528797
best_error: 4.9732428633165275
best_error: 4.954678305589603
best_error: 4.9546783055377475
best_error: 4.9546783053119166
best_error: 4.775978470330081
best_error: 4.775978469310235
best_error: 4.593811857371849
best_error: 4.593811848095456
best_error: 2.738704029486403
best_error: 2.7387037721805414
best_error: 2.2685065316228448
best_error: 2.268506384846931
best_error: 2.229862956076499
best_error: 2.2298627301873055
best_error: 2.2298624147198898
best_error: 2.185458621733757
best_error: 2.185458584061239
best_error: 2.183490019461502
best_error: 2.183489996398629
best_error: 2.1833268555861145
best_error: 2.183326852573756
best_error: 2.1833268481794055
best_error: 2.181489642136123
best_error: 2.1814896368082426
best_error: 2.1814896352393247
best_error: 2.179286748911027
best_error: 2.1792867235934237
best_error: 2.174670809416651
best_error: 2.174670776090162
best_error: 2.157763153490368
best_error: 2.157763077984681
best_error: 1.9738028661768314
best_error: 1.9738026891545277
best_error: 1.8001858831581152
best_error: 1.8001858348488695
best_error: 1.7114756675538958
best_error: 1.7114754873031206
best_error: 1.7043896533365561
best_error: 1.7043896510057568
best_error: 1.7043896500800826
best_error: 1.6943898617518567
best_error: 1.6943897740104703
best_error: 1.6936158182103747
best_error: 1.693615776024721
best_error: 1.6869455181349438
best_error: 1.6869454667085817
best_error: 1.6749006254376286
best_error: 1.6749004343941005
best_error: 1.6543867013564126
best_error: 1.6543866686743285
best_error: 1.6489885079945685
best_error: 1.6489884889771724
best_error: 1.6476710953508558
best_error: 1.647671070437328
best_error: 1.6467774117870644
best_error: 1.6467774081990154
best_error: 1.6428691144108334
best_error: 1.6428690936027157
best_error: 1.6317566736704843
best_error: 1.6317566337794347
best_error: 1.5844158106670205
best_error: 1.5844157708186506
best_error: 1.5597594149419884
best_error: 1.5597593242378291
best_error: 1.5512867613242745
best_error: 1.5512867202843108
best_error: 1.5440055181947034
best_error: 1.544005464165045
best_error: 1.536831418601683
best_error: 1.5368313276637529
best_error: 1.5323171819437482
best_error: 1.5323170932861638
best_error: 1.5258754975976858
best_error: 1.525875441246608
best_error: 1.522653496520424
best_error: 1.5226534529001092
best_error: 1.504210248040095
best_error: 1.5042101615516241
best_error: 1.4883942274332096
best_error: 1.4883940467393766
best_error: 1.4562349668924022
best_error: 1.4562347456173292
best_error: 1.4389773828471846
best_error: 1.4389772302171988
best_error: 1.4348652415962866
best_error: 1.4348650643749885
best_error: 1.4247165046389627
best_error: 1.4247163998877697
best_error: 1.4149281900834256
best_error: 1.4149281829228473
best_error: 1.4125228496369808
best_error: 1.4125228474574982
best_error: 1.4125228367079528
best_error: 1.4121695282919366
best_error: 1.4121695052837524
best_error: 1.4113296289784183
best_error: 1.4113296192589768
best_error: 1.4107502353560222
best_error: 1.4107502172501203
best_error: 1.4105985421580527
best_error: 1.4105985096903253
best_error: 1.4105186940509893
best_error: 1.4105186746411096
best_error: 1.4104853460047093
best_error: 1.4104853350164055
best_error: 1.4104221083745707
best_error: 1.4104221001674935
best_error: 1.410243590677128
best_error: 1.410243587416816
best_error: 1.4097237945026007
best_error: 1.4097237875169941
best_error: 1.4077007990465404
best_error: 1.4077007908491288
best_error: 1.4076875201628811
best_error: 1.4076875139182579
best_error: 1.4076864293503464
best_error: 1.407686424242777
best_error: 1.4076864004068235
best_error: 1.407686395300515
best_error: 1.4076863748704154
best_error: 1.4076863697743829
best_error: 1.4076863287023522
best_error: 1.407686323608396
best_error: 1.407686320566435
best_error: 1.407093264542974
best_error: 1.4070932642021488
best_error: 1.4070932638241749
best_error: 1.4070932637452682
best_error: 1.4070932629579724
best_error: 1.4067072507157343
best_error: 1.4067072449072395
best_error: 1.404279641247955
best_error: 1.4042796239146293
best_error: 1.4004983210743196
best_error: 1.400498303021472
best_error: 1.3992996800340614
best_error: 1.3992996609320623
best_error: 1.3985317179046692
best_error: 1.3985316960106196
best_error: 1.3959530461671097
best_error: 1.3959530177567185
best_error: 1.3871254847045735
best_error: 1.3871254705825706
best_error: 1.3815309203696347
best_error: 1.3815309136270064
best_error: 1.3810998759105204
best_error: 1.3810998653599287
best_error: 1.380653804197114
best_error: 1.380653802003669
best_error: 1.3806538019632884
best_error: 1.3806538015252041
best_error: 1.380596076973378
best_error: 1.38059607446496
best_error: 1.3805960744533536
best_error: 1.3805609060352817
best_error: 1.3805609032313637
best_error: 1.3803983011907872
best_error: 1.3803982982806855
best_error: 1.3798469418863704
best_error: 1.3798469107806333
best_error: 1.3795656792553084
best_error: 1.379565667851176
best_error: 1.379316473016562
best_error: 1.379316467368308
best_error: 1.3789051161389412
best_error: 1.37890510479632
best_error: 1.3788377688886808
best_error: 1.3788377655586614
best_error: 1.378799818537795
best_error: 1.378799818273582
best_error: 1.3787998166064892
best_error: 1.3787998163848372
best_error: 1.378777162791681
best_error: 1.3787771608316546
best_error: 1.3787579206120404
best_error: 1.3787579186183263
best_error: 1.3787192402407111
best_error: 1.3787192381311937
best_error: 1.3786544822313525
best_error: 1.3786544806305077
best_error: 1.3786544801472878
best_error: 1.3785289292697018
best_error: 1.378528925545184
best_error: 1.3783676697651652
best_error: 1.3783676642563945
best_error: 1.3782739085813516
best_error: 1.3782739020327437
best_error: 1.3781902066473333
best_error: 1.3781902038012706
best_error: 1.3781847110610201
best_error: 1.3781847092131256
best_error: 1.378184223332333
best_error: 1.3781842215321276
best_error: 1.3781840706503699
best_error: 1.378184068813929
best_error: 1.378183982761255
best_error: 1.3781839809073597
best_error: 1.378183951778318
best_error: 1.3781839497030501
best_error: 1.3781837605839744
best_error: 1.3781837585955727
best_error: 1.3781835255225843
best_error: 1.3781835234991733
best_error: 1.378182848498036
best_error: 1.3781828464704
best_error: 1.3781802139107862
best_error: 1.3781802119790507
best_error: 1.37817833270857
best_error: 1.3781783311453841
best_error: 1.3781783311096105
best_error: 1.3781783309738573
best_error: 1.3781772462769646
best_error: 1.3781772449168193
best_error: 1.3781772446786773
best_error: 1.3781772445296685
best_error: 1.3781761586295733
best_error: 1.3781761580296195
best_error: 1.3781761570358473
best_error: 1.3781761568271174
best_error: 1.3781758132578892
best_error: 1.3781758128324133
best_error: 1.3781758116621798
best_error: 1.3781758114328357
best_error: 1.3781757296295205
best_error: 1.3781757293119024
best_error: 1.3781757279707096
best_error: 1.3781757278125264
best_error: 1.3781753204191753
best_error: 1.378175320087956
best_error: 1.3781753187653183
best_error: 1.3781753186141659
best_error: 1.3781751124598915
best_error: 1.3781751120437948
best_error: 1.378175110821598
best_error: 1.3781751106621425
best_error: 1.3781741951010102
best_error: 1.378174194514181
best_error: 1.3781741934617466
best_error: 1.3781741933213212
best_error: 1.3781649339763036
best_error: 1.3781649332025854
best_error: 1.3781649323204308
best_error: 1.3781649322436766
best_error: 1.378148013753664
best_error: 1.3781480126274444
best_error: 1.3781480120464267
best_error: 1.3781258676519266
best_error: 1.3781258665802623
best_error: 1.3781258658885196
best_error: 1.3780630183337548
best_error: 1.3780630171207862
best_error: 1.3780630168164658
best_error: 1.3780630163448067
best_error: 1.377962585860718
best_error: 1.3779625819385593
best_error: 1.377790491531305
best_error: 1.3777904820767137
best_error: 1.3776990893977736
best_error: 1.377699079583271
best_error: 1.3776031911768256
best_error: 1.3776031800891237
best_error: 1.3775067070256346
best_error: 1.3775066980009774
best_error: 1.3773356845390574
best_error: 1.3773356832751267
best_error: 1.3773356818731748
