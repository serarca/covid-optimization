ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.048018928162795
best_error: 8.048018772685698
best_error: 7.676122291379367
best_error: 7.676122106318765
best_error: 7.315807167458743
best_error: 7.31580697826883
best_error: 7.0324453864026655
best_error: 7.032445234180062
best_error: 6.745721952908047
best_error: 6.745721840953765
best_error: 6.561676547015312
best_error: 6.5616764539975465
best_error: 6.489212665653826
best_error: 6.489212583850415
best_error: 6.417634237670692
best_error: 6.417634166681287
best_error: 6.380956502965808
best_error: 6.38095648829926
best_error: 6.303807568217644
best_error: 6.303807552974008
best_error: 6.034964426899151
best_error: 6.0349644095224
best_error: 5.931739807513897
best_error: 5.473627463795252
best_error: 5.4736274555101145
best_error: 5.473627440695557
best_error: 5.368122663119577
best_error: 5.368122626887038
best_error: 5.365780244140499
best_error: 5.36578021082459
best_error: 5.362491987485031
best_error: 5.362491960856767
best_error: 5.361678809256404
best_error: 5.361678783344878
best_error: 5.361311157424467
best_error: 5.361311132241872
best_error: 5.361097117007882
best_error: 5.361097092243552
best_error: 5.360969115735059
best_error: 5.360969091017978
best_error: 5.36089086897078
best_error: 5.360890844206319
best_error: 5.360828369126371
best_error: 5.360828344419541
best_error: 5.360798783206024
best_error: 5.360798758481272
best_error: 5.360774392569015
best_error: 5.3607743678295
best_error: 5.360771281837392
best_error: 5.360771257096
best_error: 5.360769166764747
best_error: 5.360769142022077
best_error: 5.36076775459569
best_error: 5.360767729852165
best_error: 5.360766859770196
best_error: 5.360766835026129
best_error: 5.360766189748022
best_error: 5.360766165003552
best_error: 5.360765818603616
best_error: 5.360765793858919
best_error: 5.36076549838755
best_error: 5.36076547364266
best_error: 5.360765354030241
best_error: 5.360765329285263
best_error: 5.360765244801753
best_error: 5.3607652200567095
best_error: 5.3607651576699205
best_error: 5.360765132924822
best_error: 5.360765116281957
best_error: 5.360765091536833
best_error: 5.360765082191949
best_error: 5.360765078075302
best_error: 5.360764976068306
best_error: 5.360764951323249
best_error: 5.360764619493853
best_error: 5.360764594748796
best_error: 5.3607631936263775
best_error: 5.360763168881322
best_error: 5.360757497040234
best_error: 5.360757472295186
best_error: 5.360734820728512
best_error: 5.360734795983494
best_error: 5.360645869126068
best_error: 5.360645844381302
best_error: 5.36031832967943
best_error: 5.360318304842129
best_error: 5.359138902878508
best_error: 5.359138876370313
best_error: 5.359091638479835
best_error: 5.35909161199913
best_error: 5.35903278948947
best_error: 5.35903276299029
best_error: 5.358454398676128
best_error: 5.358454372943554
best_error: 5.358311534902837
best_error: 5.35831150963279
best_error: 5.358215565135199
best_error: 5.358215539807793
best_error: 5.358154746060937
best_error: 5.358154720697255
best_error: 5.358110478754453
best_error: 5.3581104534892114
best_error: 5.358079018430336
best_error: 5.3580789931462975
best_error: 5.35806465860947
best_error: 5.358064633316852
best_error: 5.3580516669114155
best_error: 5.358051641611043
best_error: 5.358044889474444
best_error: 5.358044864170026
best_error: 5.358042100495017
best_error: 5.358042075188932
best_error: 5.358040320825415
best_error: 5.3580402955182675
best_error: 5.358039049310163
best_error: 5.358039024002258
best_error: 5.358038317344553
best_error: 5.358038292036211
best_error: 5.358037721061389
best_error: 5.358037695752691
best_error: 5.358037435528538
best_error: 5.358037410219671
best_error: 5.358037245224572
best_error: 5.358037219915588
best_error: 5.358037119489056
best_error: 5.35803709418
best_error: 5.358037034409185
best_error: 5.358037009100076
best_error: 5.3580369822067055
best_error: 5.358036956897564
best_error: 5.358036942818728
best_error: 5.3580369175095655
best_error: 5.358036896393961
best_error: 5.358036887415923
