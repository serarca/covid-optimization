ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.630215300409219
best_error: 9.630215267868065
best_error: 9.372003582051354
best_error: 9.372003524168736
best_error: 4.587447935345664
best_error: 4.587447935345653
best_error: 4.587447930122879
best_error: 4.586725375193704
best_error: 4.586725333618894
best_error: 4.584634964983867
best_error: 4.584634927319387
best_error: 4.583882852815045
best_error: 4.583882815551749
best_error: 4.5837650422255365
best_error: 4.5837650052038414
best_error: 4.583727072666359
best_error: 4.5837270356400435
best_error: 4.58371260633416
best_error: 4.583712606334147
best_error: 4.583712600904404
best_error: 4.583710242686689
best_error: 4.58371020565833
best_error: 4.583709718789077
best_error: 4.583709681760652
best_error: 4.583709477938454
best_error: 4.583709477938444
best_error: 4.583709470819735
best_error: 4.583664908054179
best_error: 4.583664908054168
best_error: 4.583664902619842
best_error: 4.583503624016558
best_error: 4.583503624016545
best_error: 4.583503618566494
best_error: 4.582855634387802
best_error: 4.582855634387792
best_error: 4.5828556289178435
best_error: 4.580247693595444
best_error: 4.580247693595433
best_error: 4.580247688097982
best_error: 4.569836312927566
best_error: 4.5698363129275545
best_error: 4.5698363074851445
best_error: 4.536017146249007
best_error: 4.536017146248996
best_error: 4.536017145841448
best_error: 4.535624324704084
best_error: 4.535624324704075
best_error: 4.535315587301616
best_error: 4.535315587301603
best_error: 4.534122986563199
best_error: 4.53412298656319
best_error: 4.5283510073681175
best_error: 4.5283510073681095
best_error: 4.518474539633592
best_error: 4.5184745396335835
best_error: 4.518198948693138
best_error: 4.518198948693128
best_error: 4.517966489109229
best_error: 4.51796648910922
best_error: 4.51745314537038
best_error: 4.517453145370372
best_error: 4.517313408126264
best_error: 4.51731340812626
best_error: 4.500660636471462
best_error: 4.500660636471457
best_error: 4.500660631028056
best_error: 4.4410790566333995
best_error: 4.441079056633395
best_error: 4.441079051850712
best_error: 4.436791039458539
best_error: 4.436791039458535
best_error: 4.4367910343361165
best_error: 4.436714492000915
best_error: 4.436714492000908
best_error: 4.43300679550966
best_error: 4.433006795509651
best_error: 4.410937635917507
best_error: 4.410937635917501
best_error: 4.41093762889786
best_error: 4.403950548026085
best_error: 4.4039505480260805
best_error: 4.403950539692593
best_error: 4.402325609677601
best_error: 4.402325609677598
best_error: 4.402325601001463
best_error: 4.350702832735484
best_error: 4.350702832735481
best_error: 4.326684660034435
best_error: 4.32668464659001
best_error: 4.326684641974703
best_error: 4.30933308120036
best_error: 4.309333081200356
best_error: 4.309333073070074
best_error: 4.308253911191374
best_error: 4.308253873269809
best_error: 4.293251249892731
best_error: 4.29325119171979
best_error: 4.292437695643139
best_error: 4.292437695643135
best_error: 4.292437692567036
best_error: 4.292437688241803
best_error: 4.29238548030988
best_error: 4.292385422553899
best_error: 4.29206324915484
best_error: 4.292063249154837
best_error: 4.292063246040308
best_error: 4.292063241761903
best_error: 4.29202090919465
best_error: 4.292020909194644
best_error: 4.292020906080405
best_error: 4.292020901802053
best_error: 4.292017819738843
best_error: 4.292017761968791
best_error: 4.292016360326462
best_error: 4.292016305932647
best_error: 4.2904912805304125
best_error: 4.290491228329679
best_error: 4.290435666688367
best_error: 4.290435616512161
best_error: 4.29042094889653
best_error: 4.290420898580264
best_error: 4.290415016975525
best_error: 4.290414966393836
best_error: 4.290411394470142
best_error: 4.290411343682427
best_error: 4.2904045393465085
best_error: 4.290404488553942
best_error: 4.290381545914219
best_error: 4.290381494796721
best_error: 4.2903753461780685
best_error: 4.2903752950589915
best_error: 4.290372851877263
best_error: 4.290372800738521
best_error: 4.2903722064948555
best_error: 4.290372206494853
best_error: 4.29037219911247
best_error: 4.290370296490944
best_error: 4.290370245691748
best_error: 4.290363591618444
best_error: 4.290363540871196
best_error: 4.2903585034769405
best_error: 4.290358503476935
best_error: 4.2903584960886
best_error: 4.290358144494933
best_error: 4.290358093842807
best_error: 4.290357436887703
best_error: 4.290357436887696
best_error: 4.290357429500632
best_error: 4.2903571286754465
best_error: 4.290357078244002
best_error: 4.290357032706143
best_error: 4.290356982274823
best_error: 4.290356956529353
best_error: 4.290356956529348
best_error: 4.290356955602874
best_error: 4.2903569511660145
best_error: 4.290356951166014
best_error: 4.29035694966651
