ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.24828635145472
best_error: 19.248286220156853
best_error: 4.42011683680718
best_error: 4.42011683539464
best_error: 4.420116834125215
best_error: 4.4104406214260266
best_error: 4.410440621076249
best_error: 4.41044061872388
best_error: 4.370168389379062
best_error: 4.370168388968715
best_error: 4.370168386592914
best_error: 4.178776522649075
best_error: 4.178776521922424
best_error: 4.178776519463053
best_error: 3.333785021521927
best_error: 3.333785011936916
best_error: 3.3097518232185554
best_error: 3.309751822380849
best_error: 3.309751820872362
best_error: 3.3084446122032483
best_error: 3.3084446107770082
best_error: 3.3084446099123848
best_error: 3.3080306806361763
best_error: 3.308030679195105
best_error: 3.3080306783261553
best_error: 2.0716345322418785
best_error: 2.0716343788194957
best_error: 2.053083861673086
best_error: 2.053083658405207
best_error: 2.019490824219947
best_error: 2.0194906155455423
best_error: 1.967961410848183
best_error: 1.9679612844822436
best_error: 1.9341856326567768
best_error: 1.9341855063279314
best_error: 1.7735431407764866
best_error: 1.7735430880992176
best_error: 1.7608140152407137
best_error: 1.7608139976248212
best_error: 1.7243113556605143
best_error: 1.7243113084079675
best_error: 1.7152520666996036
best_error: 1.7152520603488586
best_error: 1.7127786421322233
best_error: 1.7127786409457648
best_error: 1.7127786405668846
best_error: 1.7115049260675264
best_error: 1.7115049229965973
best_error: 1.70316018227816
best_error: 1.7031601819958582
best_error: 1.7031601812839057
best_error: 1.6905102268942287
best_error: 1.6905102245199646
best_error: 1.6807949298933744
best_error: 1.6807949273983942
best_error: 1.6457685684268628
best_error: 1.6457685681766494
best_error: 1.6457685664651347
best_error: 1.6320366257868437
best_error: 1.63203662522088
best_error: 1.6320366239195996
best_error: 1.57636318745119
best_error: 1.5763631827481186
best_error: 1.5443071457825028
best_error: 1.5443071344522317
best_error: 1.5052285868849156
best_error: 1.505228583491713
best_error: 1.5043391250355378
best_error: 1.5043391214125859
best_error: 1.4935088417649844
best_error: 1.4935088287274008
best_error: 1.4048532609566309
best_error: 1.4048529659694635
best_error: 1.3883534604889263
best_error: 1.3883531596380059
best_error: 1.272173776779192
best_error: 1.2721737278025587
best_error: 1.2717112374543185
best_error: 1.271711205120062
best_error: 1.2716420013454164
best_error: 1.2716419754726145
best_error: 1.2716329782949953
best_error: 1.2716329527999843
best_error: 1.271631264446094
best_error: 1.2716312402344092
best_error: 1.2716311636461268
best_error: 1.2716311394408881
best_error: 1.271631091935494
best_error: 1.2716310677279072
best_error: 1.2699122796374258
best_error: 1.269912278344334
best_error: 1.269912270492086
best_error: 1.2296068331407528
best_error: 1.2296067036088951
best_error: 1.1752252408605006
best_error: 1.1752250671001896
best_error: 1.1353303631318927
best_error: 1.1353303464621367
best_error: 1.1209803754094843
best_error: 1.1209803711035473
best_error: 1.1209803645684602
best_error: 1.107320801411244
best_error: 1.1073207593065602
best_error: 1.1012529220070144
best_error: 1.1012528808530018
best_error: 1.1011822094857293
best_error: 1.101182160064886
best_error: 1.0988598454719496
best_error: 1.0988598020685993
best_error: 1.0976299780184349
best_error: 1.0976299565692853
best_error: 1.0972120820422113
best_error: 1.0972120806206174
best_error: 1.0971819134830998
best_error: 1.0971819131966907
best_error: 1.0971671640984737
best_error: 1.0971671637677713
best_error: 1.0968957773800811
best_error: 1.096895776505395
best_error: 1.0958563150438199
best_error: 1.0958563143219435
best_error: 1.0958563139385529
best_error: 1.0956694706706476
best_error: 1.0956694605997865
best_error: 1.0947441786903358
best_error: 1.0947441706014376
best_error: 1.0940584501268424
best_error: 1.094058448052649
best_error: 1.0928656720804133
best_error: 1.092865662707216
best_error: 1.0927430186929097
best_error: 1.0927430127408577
best_error: 1.0926426539593843
best_error: 1.092642648676699
best_error: 1.092512144216691
best_error: 1.0925121417721562
best_error: 1.0924072419248125
best_error: 1.0924072376053509
best_error: 1.0919945471036234
best_error: 1.0919945415688552
best_error: 1.0916403402559172
best_error: 1.0916403314958807
best_error: 1.0914198199135248
best_error: 1.0914198160995154
best_error: 1.0912986104569748
best_error: 1.0912986047297883
best_error: 1.0912760800155579
best_error: 1.0912760746413979
best_error: 1.0912749074370613
best_error: 1.0912749058457232
best_error: 1.0912315858645631
best_error: 1.0912315858618076
best_error: 1.0912315856424173
best_error: 1.091147851755858
best_error: 1.0911478515535264
best_error: 1.0911478515061257
best_error: 1.0910708275719154
best_error: 1.0910708262992
best_error: 1.0910565100895335
best_error: 1.0910565096363776
best_error: 1.091045958025891
best_error: 1.0910459568093234
best_error: 1.0910217933102972
best_error: 1.091021788829237
best_error: 1.0910072494191076
best_error: 1.0910072416117713
best_error: 1.0909349849243815
best_error: 1.0909349771666554
best_error: 1.0909159593413704
best_error: 1.0909159551246044
best_error: 1.0906204395988432
best_error: 1.0906204320122816
best_error: 1.0904952057260693
best_error: 1.0904951987424503
best_error: 1.0897815692391715
best_error: 1.0897815664779134
best_error: 1.0884003759457979
best_error: 1.0884003754592058
best_error: 1.088400374644189
best_error: 1.0883735124954697
best_error: 1.0883735041265117
best_error: 1.088373432208889
best_error: 1.0883734238221592
best_error: 1.0867737910706339
best_error: 1.0867737895373042
best_error: 1.0867330038868572
best_error: 1.0867329978359443
best_error: 1.0864289179839457
best_error: 1.0864289139715302
best_error: 1.0863414263388735
best_error: 1.0863414260001019
best_error: 1.0862822275920758
best_error: 1.0862822268996224
best_error: 1.086194725608046
best_error: 1.0861947251145967
best_error: 1.0859272147668941
best_error: 1.0859272138134926
best_error: 1.0856026966867505
best_error: 1.085602694996736
best_error: 1.0853904936959062
best_error: 1.0853904900131688
best_error: 1.0853298848360784
best_error: 1.0853298823580493
best_error: 1.0853007782688089
best_error: 1.0853007765681275
best_error: 1.085260623567696
best_error: 1.0852606220166578
best_error: 1.0852581362426104
best_error: 1.0852581360054827
best_error: 1.0852522498971064
best_error: 1.0852522483819522
best_error: 1.0852475857296862
best_error: 1.0852475845675094
best_error: 1.0852451807570807
best_error: 1.0852451805511973
best_error: 1.0852429388933629
best_error: 1.0852429382680933
best_error: 1.085242042183199
best_error: 1.0852420420390978
best_error: 1.0852415179871833
best_error: 1.0852415177706325
best_error: 1.085241313737034
best_error: 1.0852413135174832
best_error: 1.0852412027957934
best_error: 1.0852412020606814
best_error: 1.0852410742304113
best_error: 1.085241072929083
best_error: 1.0852410539021624
best_error: 1.0852410536666965
best_error: 1.0852400222505156
best_error: 1.085240022249311
best_error: 1.0852400222020042
best_error: 1.0852397375405034
best_error: 1.0852397373253324
best_error: 1.0852389901025954
best_error: 1.0852389899662191
best_error: 1.0852369953371173
best_error: 1.0852369953357857
best_error: 1.0852369953331016
best_error: 1.0852313116101433
best_error: 1.0852313109830471
best_error: 1.0852227126016631
best_error: 1.08522271213012
best_error: 1.0852105482440557
best_error: 1.085210547113917
best_error: 1.08518209352013
best_error: 1.085182093515328
best_error: 1.0851820931166438
best_error: 1.0851749335137924
best_error: 1.085174930089921
best_error: 1.0851450729772951
best_error: 1.0851450715275062
best_error: 1.0851289247809952
best_error: 1.0851289234138
