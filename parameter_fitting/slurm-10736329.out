ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.019614652066656
best_error: 9.019614641886205
best_error: 7.500070293750925
best_error: 7.500069423924725
best_error: 3.0295200453715028
best_error: 3.0295198916225456
best_error: 2.8974040148851787
best_error: 2.8974039244555634
best_error: 2.8953354867077454
best_error: 2.895335486683275
best_error: 2.895335476628835
best_error: 2.8751297792079415
best_error: 2.8751297008517804
best_error: 2.794068219164169
best_error: 2.7940682058874406
best_error: 2.7272056600776993
best_error: 2.727205607106361
best_error: 2.723058480504212
best_error: 2.723058480480783
best_error: 2.7230584745832815
best_error: 2.721327163148122
best_error: 2.72132716312665
best_error: 2.721327162652303
best_error: 2.7213271571033912
best_error: 2.7188849650417417
best_error: 2.718884965022909
best_error: 2.7188849611526487
best_error: 2.7188849588228527
best_error: 2.7170565072122095
best_error: 2.7170564332065057
best_error: 2.7118073491152552
best_error: 2.711807349097378
best_error: 2.7118073447208157
best_error: 2.7118073426272082
best_error: 2.623289128353989
best_error: 2.623289128335911
best_error: 2.6232891189072234
best_error: 2.6088426275254224
best_error: 2.6088426274193544
best_error: 2.6088425994748876
best_error: 2.587252744940332
best_error: 2.5872527448651477
best_error: 2.5849461242862546
best_error: 2.584946124183554
best_error: 2.5834725623488097
best_error: 2.5834725622730175
best_error: 2.549504505266649
best_error: 2.5495045051664165
best_error: 2.549504478220544
best_error: 2.4845491190665543
best_error: 2.4845490881355774
best_error: 2.4824813500816263
best_error: 2.4824813288191536
best_error: 2.4807801913063514
best_error: 2.480780178531842
best_error: 2.4806179446710876
best_error: 2.4806179320051127
best_error: 2.4804470292207426
best_error: 2.480447018237172
best_error: 2.480188379128747
best_error: 2.480188368851564
best_error: 2.4799673272197813
best_error: 2.4799673175059476
best_error: 2.4798570747833018
best_error: 2.4798570655365877
best_error: 2.4798560011117696
best_error: 2.4798559918645635
best_error: 2.4798554091893914
best_error: 2.4798553999419135
best_error: 2.4798547771259765
best_error: 2.479854767878206
best_error: 2.47985452309107
best_error: 2.479854513843193
best_error: 2.479854368866772
best_error: 2.479854359618822
best_error: 2.479854215108736
best_error: 2.4798542058607125
best_error: 2.479854146065317
best_error: 2.479854136817259
best_error: 2.4798540914607177
best_error: 2.4798540822126336
best_error: 2.4798540626968846
best_error: 2.4798540534487863
best_error: 2.4798540312930615
best_error: 2.4798540220449485
best_error: 2.4798540109782663
best_error: 2.479854001730151
best_error: 2.4797099700979714
best_error: 2.4797099587022378
best_error: 2.479675564330632
best_error: 2.4796755499739667
best_error: 2.479675399248519
best_error: 2.47967538504484
best_error: 2.479675267930323
best_error: 2.479675253646888
best_error: 2.479675104521954
best_error: 2.479675090167027
best_error: 2.4796731979058686
best_error: 2.4796731835486896
best_error: 2.479665641913324
best_error: 2.479665627478584
best_error: 2.479637133161023
best_error: 2.4796371188124686
best_error: 2.479627849261727
best_error: 2.4796278349005183
best_error: 2.4796198424003877
best_error: 2.4796198279732122
best_error: 2.4796161283135776
best_error: 2.4796161138812733
best_error: 2.479614381267191
best_error: 2.4796143668324806
best_error: 2.4796141013295103
best_error: 2.479614086824145
best_error: 2.4796138577079647
best_error: 2.4796138432022654
best_error: 2.4796137436323256
best_error: 2.4796137291264713
best_error: 2.479613589148884
best_error: 2.479613574642812
best_error: 2.4796135430098514
best_error: 2.4796135285037098
best_error: 2.4796135092651896
best_error: 2.479613494759005
best_error: 2.4796134811085153
best_error: 2.479613472470239
best_error: 2.479613472115182
best_error: 2.479613470122957
best_error: 2.4796134701131436
best_error: 2.4796134697031755
best_error: 2.479613468794869
best_error: 2.4796134687850477
best_error: 2.479613468375078
best_error: 2.4796134678307293
best_error: 2.479613467820921
best_error: 2.4796134674109447
best_error: 2.4796134673426127
best_error: 2.4796134673328085
best_error: 2.479613466922832
best_error: 2.4796134665577574
