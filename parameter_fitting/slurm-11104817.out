ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 96
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 90.89474839817149
best_error: 90.89474798909822
best_error: 27.396029148270234
best_error: 27.396029148239645
best_error: 27.396029147984134
best_error: 27.396029146215042
best_error: 27.395849166232043
best_error: 27.395849166201437
best_error: 27.395127582311545
best_error: 27.39512758228088
best_error: 27.39221448647868
best_error: 27.392214486447767
best_error: 27.380116091168393
best_error: 27.38011609116839
best_error: 27.380116091136472
best_error: 27.323524639985504
best_error: 27.323524639949373
best_error: 26.74872194536978
best_error: 26.748721945369777
best_error: 26.74872194528569
best_error: 25.941597300221176
best_error: 25.941597300072708
best_error: 25.941590022296644
best_error: 25.94159002214817
best_error: 25.941560900674205
best_error: 25.941560900525733
best_error: 25.941444255068525
best_error: 25.941444254920057
best_error: 25.940975105661533
best_error: 25.94097510551308
best_error: 25.939056034408456
best_error: 25.93905603440845
best_error: 25.939056034260066
best_error: 25.93059564283985
best_error: 25.93059564269174
best_error: 25.86880876780362
best_error: 25.868808767657946
best_error: 25.793567142935647
best_error: 25.793567142793325
best_error: 25.79356632932842
best_error: 25.793566329186095
best_error: 25.793563074899495
best_error: 25.793563074757174
best_error: 25.7935500571838
best_error: 25.793550057041475
best_error: 25.79349798632102
best_error: 25.793497986178707
best_error: 25.793289702869863
best_error: 25.79328970272754
best_error: 25.792456569064296
best_error: 25.79245656906429
best_error: 25.792456568921974
best_error: 25.789124033826955
best_error: 25.789124033826905
best_error: 25.78912403368463
best_error: 25.781989038248675
best_error: 25.781989038246408
best_error: 25.78198903811272
best_error: 25.78198903811046
best_error: 25.781989037568902
best_error: 25.781989037566674
best_error: 25.781989035393156
best_error: 25.781989035390914
best_error: 25.78198902668131
best_error: 25.781989026679074
best_error: 25.781988991692366
best_error: 25.781988991690106
best_error: 25.781988849464394
best_error: 25.781988849462078
best_error: 25.781988243785996
best_error: 25.781988243783424
best_error: 25.78198520570062
best_error: 25.781985205697048
best_error: 25.781961277115187
best_error: 25.78196127710639
best_error: 25.781484355811646
best_error: 25.781484355748685
best_error: 25.28904065156324
best_error: 25.289040651479844
best_error: 25.289040644441446
best_error: 25.288790877562178
best_error: 25.2887908774791
best_error: 25.288790870812175
best_error: 25.288357452703195
best_error: 25.28835745261992
best_error: 25.288357446833707
best_error: 25.282591477520917
best_error: 25.28259147742647
best_error: 25.282591462130256
best_error: 25.254391602347702
best_error: 25.25439157018149
best_error: 25.25279173716931
best_error: 25.25279170462594
best_error: 25.246204293540092
best_error: 25.246204292471063
best_error: 25.246204259501834
best_error: 25.216719957734085
best_error: 25.21671995153615
best_error: 25.216719917652235
best_error: 25.02453630122515
best_error: 25.0245362610276
best_error: 25.024536221525302
best_error: 25.021332715311647
best_error: 25.021332674258225
best_error: 25.021332634622134
best_error: 25.01130337212497
best_error: 25.011303329944123
best_error: 25.011303289833773
best_error: 24.971566237610705
best_error: 24.9715662038182
best_error: 24.97156616255209
best_error: 24.875303977419634
best_error: 24.87530397198964
best_error: 24.87530397150814
best_error: 24.864160284803567
best_error: 24.864160279556856
best_error: 24.864160278935813
best_error: 24.85861959262154
best_error: 24.858619586455127
best_error: 24.850665613630216
best_error: 24.850665613171326
best_error: 24.850665606315836
best_error: 24.83974969520639
best_error: 24.839749692671806
best_error: 24.839749684672014
best_error: 24.836117305613254
best_error: 24.836117295341854
best_error: 24.836117289132
best_error: 24.83075751341361
best_error: 24.830757506861218
best_error: 24.83075749756445
best_error: 24.819484016429243
best_error: 24.819484007417685
best_error: 24.81948400057058
best_error: 24.770043923909395
best_error: 24.770043923908727
best_error: 24.770043913723416
best_error: 24.727312091903016
best_error: 24.72731209190231
best_error: 24.72731208496689
best_error: 24.703629764304964
best_error: 24.703629760550164
best_error: 24.70362975972336
best_error: 24.703629726154748
best_error: 24.70075538131457
best_error: 24.70075537774447
best_error: 24.7000881024171
best_error: 24.70008810032941
best_error: 24.699741660985012
best_error: 24.69974165970184
best_error: 24.69945860840038
best_error: 24.699458608399663
best_error: 24.699210617887854
best_error: 24.699210617887154
best_error: 24.699210617504356
best_error: 24.699138367087034
best_error: 24.699138365558934
best_error: 24.6990622418256
best_error: 24.699062240215785
best_error: 24.699012787720413
best_error: 24.69901278771971
best_error: 24.69901278735862
best_error: 24.698826826023886
best_error: 24.698826826023176
best_error: 24.698826825628483
best_error: 24.698280800039893
best_error: 24.698280798287406
best_error: 24.696078536983627
best_error: 24.69607853698283
best_error: 24.695089055225854
best_error: 24.695089054679574
best_error: 24.695089045644547
best_error: 24.690770704942945
best_error: 24.690770698651686
best_error: 24.69077068061069
best_error: 24.689489837383878
best_error: 24.689489834330427
best_error: 24.689489808039777
best_error: 24.683527831146883
best_error: 24.68352783110987
best_error: 24.68322840533904
best_error: 24.683228402875077
best_error: 24.68322838218584
best_error: 24.681375983486873
best_error: 24.681375983334824
best_error: 24.67948033835966
best_error: 24.679480338237486
best_error: 24.6782356437893
best_error: 24.67823564378246
best_error: 24.67823563602113
best_error: 24.678062367711604
best_error: 24.67806236771026
best_error: 24.67806236741499
best_error: 24.678059850743814
best_error: 24.67805985074247
best_error: 24.678059850445827
best_error: 24.67805962185475
best_error: 24.6780596213274
best_error: 24.67805951950072
best_error: 24.678059519499378
best_error: 24.67805951920264
best_error: 24.678059319332622
best_error: 24.678059318804536
best_error: 24.678056575820175
best_error: 24.678056575284437
best_error: 24.67805592707768
best_error: 24.678055926540438
best_error: 24.67805528353301
best_error: 24.678055282994347
best_error: 24.678047831469318
best_error: 24.67804782984469
best_error: 24.67804769851006
best_error: 24.678047697958114
best_error: 24.678047640676255
best_error: 24.678047640124277
best_error: 24.678047408874818
best_error: 24.678047408322644
best_error: 24.67804735840459
best_error: 24.678047358403248
best_error: 24.67804735815802
best_error: 24.67804723871566
best_error: 24.678047238714324
best_error: 24.67804723846962
best_error: 24.67804723187849
best_error: 24.67804723187715
best_error: 24.67804723163248
best_error: 24.678047225287166
best_error: 24.678047225285823
best_error: 24.678047225041176
best_error: 24.678047221606587
best_error: 24.678047221605244
best_error: 24.678047221360618
best_error: 24.678047218075537
best_error: 24.678047218074198
best_error: 24.678047217829587
best_error: 24.67804721581984
best_error: 24.678047215818502
best_error: 24.6780472155739
best_error: 24.678047213687464
best_error: 24.67804721368612
best_error: 24.678047213441523
best_error: 24.678047211486152
best_error: 24.678047211484813
best_error: 24.67804721124023
best_error: 24.678047209583088
best_error: 24.67804720958175
best_error: 24.678047209337176
best_error: 24.678047200401068
best_error: 24.678047200399728
best_error: 24.67804720015519
best_error: 24.67804719867875
best_error: 24.67804719867741
best_error: 24.678047198432886
best_error: 24.678047197489825
best_error: 24.678047197488482
best_error: 24.67804719724396
best_error: 24.67804719679971
best_error: 24.678047196798367
best_error: 24.678047196553848
best_error: 24.678047196150022
best_error: 24.678047196148682
best_error: 24.678047195904163
best_error: 24.678047195363767
best_error: 24.67804719536243
best_error: 24.67804719511792
best_error: 24.67804719300737
best_error: 24.67804719300603
best_error: 24.678047192761525
best_error: 24.678047191544543
best_error: 24.678047191543204
best_error: 24.67804719129871
best_error: 24.678047191063094
best_error: 24.67804719106175
best_error: 24.678047190817257
best_error: 24.678047188290137
best_error: 24.678047188288797
best_error: 24.678047188044317
best_error: 24.67804718800698
best_error: 24.678047187981907
best_error: 24.67804718795771
