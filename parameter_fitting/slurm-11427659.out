ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.827329888015004
best_error: 25.827329478909824
best_error: 5.0928898490050845
best_error: 5.092889848908962
best_error: 5.092889848885486
best_error: 5.092881122638578
best_error: 5.092881122606649
best_error: 5.092881122518962
best_error: 5.09284619271107
best_error: 5.092846192679056
best_error: 5.092846192591387
best_error: 5.092706080410757
best_error: 5.092706080378395
best_error: 5.0927060802908
best_error: 5.092139271474544
best_error: 5.092139271440775
best_error: 5.092139271353483
best_error: 5.0897649792545865
best_error: 5.089764979214786
best_error: 5.089764979128892
best_error: 5.07811919340606
best_error: 5.078119193332629
best_error: 5.078119193257407
best_error: 5.016696855748909
best_error: 5.01669685393303
best_error: 5.015842507219418
best_error: 5.015842505274533
best_error: 5.011910030447777
best_error: 5.011910027857686
best_error: 4.979628170103978
best_error: 4.979628160586394
best_error: 4.928335421301452
best_error: 4.928335398958124
best_error: 4.836085166393298
best_error: 4.836085119756538
best_error: 3.6566202052247854
best_error: 3.656620160551566
best_error: 3.6482423265992794
best_error: 3.648242295617489
best_error: 3.647527213519725
best_error: 3.6475272038841964
best_error: 3.6468928906385183
best_error: 3.646892889369834
best_error: 3.6467226051399257
best_error: 3.6467226051342845
best_error: 3.6467226051329766
best_error: 3.6467226041105727
best_error: 3.646564067588135
best_error: 3.6465640651086604
best_error: 3.644965782476209
best_error: 3.644965764180118
best_error: 3.6411027558180695
best_error: 3.6411026924561822
best_error: 3.6325435119691813
best_error: 3.6325434189122787
best_error: 3.460050970096645
best_error: 3.460050524793772
best_error: 3.010214823860119
best_error: 3.0102142303647406
best_error: 2.8780719669055386
best_error: 2.878071391279797
best_error: 2.6372541224020387
best_error: 2.637253845109197
best_error: 2.5184260716475886
best_error: 2.5184259098751425
best_error: 2.5141665225739507
best_error: 2.5141665168118363
best_error: 2.5140116398560353
best_error: 2.5140116339838423
best_error: 2.513560711006047
best_error: 2.5135607037194543
best_error: 2.513161200185768
best_error: 2.513161191663326
best_error: 2.5114149782653548
best_error: 2.511414941707992
best_error: 2.506802287409622
best_error: 2.5068022818768143
best_error: 2.478049204900294
best_error: 2.4780492046571654
best_error: 2.4780492002041132
best_error: 2.4776571134302507
best_error: 2.4776567861333394
best_error: 2.4776143301726625
best_error: 2.4675581834369043
best_error: 2.4675581226176275
best_error: 2.467549971320799
best_error: 2.467549910500154
best_error: 2.4648967641994606
best_error: 2.4648967595669955
best_error: 2.4648951330284445
best_error: 2.4648951283959684
best_error: 2.4646064655615323
best_error: 2.4646064167351005
best_error: 2.460086777653732
best_error: 2.4600866389567084
best_error: 2.460073254583161
best_error: 2.459719936826435
best_error: 2.4597199177652396
best_error: 2.459716554369744
best_error: 2.459716535308205
best_error: 2.4592038186303435
best_error: 2.4592038138325654
best_error: 2.457110007903527
best_error: 2.457109952472101
best_error: 2.455674675229628
best_error: 2.4556746652094343
best_error: 2.455177367633855
best_error: 2.4551773572318463
best_error: 2.4544957704378936
best_error: 2.4544957613647944
best_error: 2.4542868573959633
best_error: 2.454286845509495
best_error: 2.4510445022116683
best_error: 2.4510444587022646
best_error: 2.437723222694666
best_error: 2.437723218481153
best_error: 2.4355098468097354
best_error: 2.4355097853765897
best_error: 2.380672969629899
best_error: 2.3806728117565936
best_error: 2.3806528723840374
best_error: 2.3806417464208396
best_error: 2.3806415895063955
best_error: 2.3806218937966634
best_error: 2.3671322079519204
best_error: 2.3671322043817984
best_error: 2.364912806743225
best_error: 2.3649127904148246
best_error: 2.361012961012772
best_error: 2.361012905612367
best_error: 2.3491961547930145
best_error: 2.3491960853673386
best_error: 2.3491668049618073
best_error: 2.349166735541162
best_error: 2.3458610184008792
best_error: 2.345860904824728
best_error: 2.3421562280013886
best_error: 2.342156130551739
best_error: 2.342051245558007
best_error: 2.3420511211883595
best_error: 2.339069939856399
best_error: 2.3390698784904846
best_error: 2.334428953586535
best_error: 2.334428752547901
best_error: 2.334392247573426
best_error: 2.333096893940162
best_error: 2.33309689384108
best_error: 2.333096891596279
best_error: 2.333096888367111
best_error: 2.3289801256800704
best_error: 2.328980121672153
best_error: 2.3289801210761523
best_error: 2.3289751748417453
best_error: 2.327811127931982
best_error: 2.327811106529307
best_error: 2.3278104720307846
best_error: 2.327810450209325
best_error: 2.3265409992981496
best_error: 2.326540954499751
best_error: 2.3265298424216754
best_error: 2.326057858835629
best_error: 2.3260578552856632
best_error: 2.325738675174207
best_error: 2.325738672091493
best_error: 2.3246503250855413
best_error: 2.3246503218407546
best_error: 2.3243594066887456
best_error: 2.324359403403412
best_error: 2.324291899286071
best_error: 2.3242918961483356
best_error: 2.324208492859954
best_error: 2.324208491074123
best_error: 2.324208490413719
best_error: 2.324208489587862
best_error: 2.3242052015295025
best_error: 2.3242051989653842
best_error: 2.324205198335758
best_error: 2.3242044402475006
best_error: 2.324204437697947
best_error: 2.3242044370539223
best_error: 2.3241903726364357
best_error: 2.3241903701081883
best_error: 2.324190369459007
best_error: 2.324173799052761
best_error: 2.3241737963314506
best_error: 2.324121909218075
best_error: 2.3241219072302535
best_error: 2.324121906762759
best_error: 2.324121906152643
best_error: 2.3240607862714238
best_error: 2.324060781790794
best_error: 2.3236647519621383
best_error: 2.3236647200443823
best_error: 2.323357905794646
best_error: 2.3233578710817566
best_error: 2.322212823590039
best_error: 2.3222127784169477
best_error: 2.306234079146358
best_error: 2.306233977539391
best_error: 2.2399528692724946
best_error: 2.239952719735235
best_error: 2.2382043900388275
best_error: 2.238204183612258
best_error: 2.204432844737584
best_error: 2.2044326740486726
best_error: 2.174793373774059
best_error: 2.1747933648687914
best_error: 2.1715571869132306
best_error: 2.1715571551165582
best_error: 2.169006680541697
best_error: 2.1690066271643227
best_error: 2.1675135312479643
best_error: 2.167513472854109
best_error: 2.160176620951586
best_error: 2.1601765532579322
best_error: 2.153545813308703
best_error: 2.1535457463271017
best_error: 2.1504455697935523
best_error: 2.150445513678656
best_error: 2.1385207151834447
best_error: 2.138520692096668
best_error: 2.1305694950630176
best_error: 2.1305694687438184
best_error: 2.129988165264393
best_error: 2.1299881614876806
best_error: 2.1294283112759818
best_error: 2.1294283088444548
best_error: 2.125184480718717
best_error: 2.125184478557289
best_error: 2.1241164084696025
best_error: 2.1241162935089535
best_error: 2.1240728745144657
best_error: 2.1240680085273103
best_error: 2.1237778002002763
best_error: 2.1237777983935393
best_error: 2.123777797698299
best_error: 2.1237777966237457
best_error: 2.121257068551229
best_error: 2.1212570390977166
best_error: 2.121247824100552
best_error: 2.12009427007129
best_error: 2.1200942672778753
best_error: 2.1196746649001312
best_error: 2.1196746620655347
best_error: 2.1192095463946754
best_error: 2.119209543263483
best_error: 2.1192095428499895
best_error: 2.118850579188608
best_error: 2.118850544498366
best_error: 2.1188408300965746
best_error: 2.1178135500962973
best_error: 2.117813540418082
best_error: 2.1178130612970674
best_error: 2.1174518827051956
best_error: 2.1174518760487224
best_error: 2.116269787820472
best_error: 2.116269781354061
best_error: 2.1116555448842043
best_error: 2.111655506306739
best_error: 2.1116504474352533
best_error: 2.1108525458954293
best_error: 2.1108525079602667
best_error: 2.110053253099902
best_error: 2.1100532529240428
best_error: 2.110053252187794
best_error: 2.110053251971559
best_error: 2.108355694924517
best_error: 2.1083556886749633
best_error: 2.1081305275269195
best_error: 2.1081305274114834
best_error: 2.108130526834255
best_error: 2.108115731611369
best_error: 2.108115731211992
best_error: 2.108115730996602
best_error: 2.1081153467264833
best_error: 2.1081153466196394
best_error: 2.108115346114848
best_error: 2.1081153281375538
best_error: 2.1081153281018037
best_error: 2.1081153280318587
best_error: 2.108115327525926
best_error: 2.108115326074164
best_error: 2.1081153260385395
best_error: 2.108115325968471
best_error: 2.1081153254625353
best_error: 2.1081153229196206
best_error: 2.10811532289227
best_error: 2.1081153228138962
best_error: 2.1081153223079916
best_error: 2.1081153222264355
best_error: 2.1081153221991396
best_error: 2.1081153221207116
best_error: 2.1081153216148065
best_error: 2.1081153211983064
best_error: 2.1081153208273395
best_error: 2.108115320631715
best_error: 2.108115320457963
best_error: 2.108115320364269
best_error: 2.1081153202816556
best_error: 2.108115320235026
best_error: 2.108115320194475
best_error: 2.108115320169171
best_error: 2.1081153201485643
best_error: 2.1081153201324936
