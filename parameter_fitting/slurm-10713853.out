ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.90211572204537
best_error: 11.90211571303109
best_error: 11.902115690948722
best_error: 11.82510491434919
best_error: 11.82510490362656
best_error: 11.825104878352166
best_error: 9.920279469198887
best_error: 9.920279395320255
best_error: 9.920279322805849
best_error: 9.300813557554509
best_error: 9.300813473809747
best_error: 9.284022766600346
best_error: 9.28402268081615
best_error: 8.497567488477227
best_error: 8.497567377074738
best_error: 8.381363615772557
best_error: 8.38136356872108
best_error: 8.381363543846817
best_error: 7.35670262476257
best_error: 7.356702557672724
best_error: 7.356702548986413
best_error: 7.056825742458797
best_error: 7.056825742458191
best_error: 5.858983983987955
best_error: 5.8589838957370635
best_error: 5.009323948500086
best_error: 5.009323863193403
best_error: 3.2777703863536347
best_error: 3.2777701596726834
best_error: 3.2520073748016753
best_error: 3.252007374801223
best_error: 3.224413534832493
best_error: 3.224413309115143
best_error: 3.1732575076589793
best_error: 3.173257278295039
best_error: 3.1649420660602363
best_error: 3.1649418360082966
best_error: 3.1594321895418673
best_error: 3.1594319590345363
best_error: 3.1593108593031776
best_error: 3.159310628785825
best_error: 3.1593095498354713
best_error: 3.159309319317998
best_error: 3.1593086944073265
best_error: 3.1593086944063598
best_error: 3.159308665531375
best_error: 2.9312828072855925
best_error: 2.931282564746986
best_error: 2.8352904005039052
best_error: 2.8352900978373223
best_error: 2.8102844234202733
best_error: 2.8102841102594738
best_error: 2.7336620897079262
best_error: 2.733661775336091
best_error: 2.6371772285409785
best_error: 2.6371769171958066
best_error: 2.596012667845822
best_error: 2.59601235347159
best_error: 2.5822376695456035
best_error: 2.5822376695451434
best_error: 2.54887336746188
best_error: 2.5488730536269664
best_error: 2.420337545512222
best_error: 2.4203371514842127
best_error: 2.3553765652370826
best_error: 2.35537619409437
best_error: 2.208108563998809
best_error: 2.208108181322699
best_error: 2.202250914345228
best_error: 2.2022509143448046
best_error: 2.193521712386183
best_error: 2.1935213293376137
best_error: 2.1928635264944814
best_error: 2.192863526494072
best_error: 2.1692460072066932
best_error: 2.169245584182903
best_error: 2.1660717478604843
best_error: 2.1660713416659103
best_error: 2.1557431731592973
best_error: 2.1557431731589203
best_error: 2.1480602215231164
best_error: 2.148060221522724
best_error: 2.1479535045181466
best_error: 2.1479531003954064
best_error: 2.1462568094225483
best_error: 2.146256409024673
best_error: 2.1443114771037566
best_error: 2.1443114771033525
best_error: 2.144311315814752
best_error: 2.1412466598568476
best_error: 2.1412466598564315
best_error: 2.1400630231493665
best_error: 2.140063023148989
best_error: 2.139747560229787
best_error: 2.139747156490448
best_error: 2.1372970925431316
best_error: 2.1372970925427324
best_error: 2.1372660613844987
best_error: 2.1372656574358926
best_error: 2.1280306386534065
best_error: 2.1280306386529904
best_error: 2.128030477140493
best_error: 2.1234244696673894
best_error: 2.1234240693967044
best_error: 2.1181473483665805
best_error: 2.1181469473290155
best_error: 2.107900330840312
best_error: 2.10789991405353
best_error: 2.1014601159691684
best_error: 2.1014601159687443
best_error: 2.101459952883217
best_error: 2.1009059482541166
best_error: 2.100905529924125
best_error: 2.099382313017726
best_error: 2.0993818940790847
best_error: 2.098497543813884
best_error: 2.098497125728723
best_error: 2.0981854987929545
best_error: 2.098185080669837
best_error: 2.0981395559898273
best_error: 2.0981395559894063
best_error: 2.09813939244341
best_error: 2.0980935721879064
best_error: 2.098093154052439
best_error: 2.0980613686333047
best_error: 2.0980609496781186
best_error: 2.0980268595526232
best_error: 2.0980264412184706
best_error: 2.097997151951483
best_error: 2.097996732902818
best_error: 2.0979367783362655
best_error: 2.0979367783358382
best_error: 2.0979366145407825
best_error: 2.097815310423564
best_error: 2.0978148945650874
best_error: 2.097810017909171
best_error: 2.0978100179087598
best_error: 2.0978098542382124
best_error: 2.0977608988546907
best_error: 2.097760480049568
best_error: 2.0977512906815567
best_error: 2.0977508700910397
best_error: 2.0977484478085
best_error: 2.097748027217378
best_error: 2.0977480009245397
best_error: 2.097747965788863
best_error: 2.0977478940170773
