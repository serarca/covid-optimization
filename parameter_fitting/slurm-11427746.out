ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.459522956455174
best_error: 25.459522657703214
best_error: 4.966110839001109
best_error: 4.9661108385008
best_error: 4.966018182149606
best_error: 4.96601818214093
best_error: 4.966018182069311
best_error: 4.9656463091055505
best_error: 4.965646309096801
best_error: 4.965646309025037
best_error: 4.9641385559511395
best_error: 4.964138555942083
best_error: 4.964138555869732
best_error: 4.9577614266145655
best_error: 4.9577614266040975
best_error: 4.957761426529301
best_error: 4.925027294871233
best_error: 4.9250272948488805
best_error: 4.92502729476316
best_error: 4.865656732248762
best_error: 4.865656732150402
best_error: 4.865656732081742
best_error: 4.438226902146813
best_error: 4.438226884608671
best_error: 4.057142665906792
best_error: 4.057142609321317
best_error: 3.626469266501804
best_error: 3.6264691824170434
best_error: 3.0872910608252857
best_error: 3.087290945765621
best_error: 3.08729090765347
best_error: 3.0872909063766234
best_error: 2.981525868017952
best_error: 2.9815256947741835
best_error: 2.922874968402595
best_error: 2.922874815291244
best_error: 2.529592024942065
best_error: 2.5295919119248533
best_error: 2.4944402962775927
best_error: 2.494440254603972
best_error: 2.4944401655098667
best_error: 2.473770400153536
best_error: 2.473770266961752
best_error: 2.439605395733294
best_error: 2.439605351693587
best_error: 2.4219548705772413
best_error: 2.421954861975541
best_error: 2.421954860583856
best_error: 2.417024347172873
best_error: 2.4170243464784265
best_error: 2.4170243367838458
best_error: 2.416359879627669
best_error: 2.416359862252169
best_error: 2.4149315740621007
best_error: 2.4149315616084905
best_error: 2.4108187192223083
best_error: 2.4108187152729474
best_error: 2.410818711905414
best_error: 2.410818710463728
best_error: 2.402653076754063
best_error: 2.402653074649672
best_error: 2.4026530675829276
best_error: 2.39550169400257
best_error: 2.3955016477548945
best_error: 2.392739062539802
best_error: 2.3927389531597663
best_error: 2.3800194703174866
best_error: 2.3800193544376564
best_error: 2.358476085269398
best_error: 2.358475944477868
best_error: 2.350648963569832
best_error: 2.3506489018902825
best_error: 2.3430611444218723
best_error: 2.343061127385783
best_error: 2.330192369346214
best_error: 2.330192350106177
best_error: 2.318992020674471
best_error: 2.3189919931609815
best_error: 2.3142195796112883
best_error: 2.314219545137782
best_error: 2.313064430838679
best_error: 2.313064420720281
best_error: 2.3119226596926605
best_error: 2.311922656653439
best_error: 2.31192264700827
best_error: 2.3106132895859464
best_error: 2.310613264037896
best_error: 2.296822887994833
best_error: 2.2968228421232117
best_error: 2.2968228211163595
best_error: 2.1593298229269826
best_error: 2.1593296294303403
best_error: 2.0675457432921873
best_error: 2.0675456701053596
best_error: 1.892657808963514
best_error: 1.8926577441468906
best_error: 1.7901468895152919
best_error: 1.7901466735790397
best_error: 1.746837625665339
best_error: 1.7468375819301771
best_error: 1.7095996771687214
best_error: 1.7095996179296633
best_error: 1.6845551055007426
best_error: 1.684555074254617
best_error: 1.6430624415346657
best_error: 1.6430624251350698
best_error: 1.630555139063428
best_error: 1.6305551385148747
best_error: 1.6305551384602088
best_error: 1.6300017038717636
best_error: 1.6300016417192995
best_error: 1.6287711835602434
best_error: 1.6287711824604032
best_error: 1.6287711813471049
best_error: 1.6287099364081608
best_error: 1.628709934477946
best_error: 1.6286108943859225
best_error: 1.6286108943144522
best_error: 1.6286108937415593
best_error: 1.6286108936609796
best_error: 1.628303834005842
best_error: 1.6283038296889272
best_error: 1.6268086978498875
best_error: 1.6268086750800028
best_error: 1.626106753538655
best_error: 1.6261067363294095
best_error: 1.621358277642549
best_error: 1.6213582697518913
best_error: 1.6181463689290536
best_error: 1.6181463523863355
best_error: 1.6114592717653522
best_error: 1.6114592520601514
best_error: 1.604638994576687
best_error: 1.60463896556696
best_error: 1.5963672010884782
best_error: 1.5963671882561135
best_error: 1.5955894510229256
best_error: 1.5955894001934985
best_error: 1.5942057730166288
best_error: 1.5942057691569513
best_error: 1.592866941626494
best_error: 1.592866931081694
best_error: 1.5923407117209585
best_error: 1.5923407064795168
best_error: 1.592277466454056
best_error: 1.592277459511141
best_error: 1.592264495330319
best_error: 1.592264494954584
best_error: 1.5922644946344462
best_error: 1.5922644945803544
best_error: 1.5922508807335183
best_error: 1.5922508785765745
best_error: 1.5922491917113932
best_error: 1.592249190200363
best_error: 1.592244184453024
best_error: 1.5922441833690757
best_error: 1.592222276769653
best_error: 1.5922222763529321
best_error: 1.5922222760600866
best_error: 1.5922222760122464
best_error: 1.5921806934335843
best_error: 1.592180693035297
best_error: 1.5921806927310047
best_error: 1.5921806926597402
best_error: 1.5918514856506527
best_error: 1.5918514853517847
best_error: 1.5918514849987409
best_error: 1.5918514846805614
best_error: 1.5914731234793917
best_error: 1.5914731232392472
best_error: 1.5914731228546735
best_error: 1.591473122418645
best_error: 1.5874953180285543
best_error: 1.5874953053569811
best_error: 1.5782277488676488
best_error: 1.578227697642568
best_error: 1.573068358296045
best_error: 1.5730683025724943
best_error: 1.5685868743862668
best_error: 1.5685868389495852
best_error: 1.5599556098516387
best_error: 1.5599555449701337
best_error: 1.5458837427519279
best_error: 1.5458836826779774
best_error: 1.5438736838254028
best_error: 1.5438736470634462
best_error: 1.5429158643296825
best_error: 1.5429158595374795
best_error: 1.5429158352558807
best_error: 1.5425089463060566
best_error: 1.5425089293621355
best_error: 1.5416922263252584
best_error: 1.5416922155370474
best_error: 1.5416922135934659
best_error: 1.5394596366094444
best_error: 1.5394596339134963
best_error: 1.5394596130435654
best_error: 1.5368153040065955
best_error: 1.5368152654478064
best_error: 1.5360139576895717
best_error: 1.5360139471151988
best_error: 1.5340588226268905
best_error: 1.5340588128296417
best_error: 1.5300600545181475
best_error: 1.530060036779681
best_error: 1.5298922717238164
best_error: 1.529892248028833
best_error: 1.5298597731085386
best_error: 1.5298597487737677
best_error: 1.527736053921074
best_error: 1.527736032818373
best_error: 1.521661154578726
best_error: 1.5216611481711035
best_error: 1.5196650204065394
best_error: 1.519664960253889
best_error: 1.5193752581548687
best_error: 1.5193751769895492
best_error: 1.5165822429241542
best_error: 1.5165822326092426
best_error: 1.5165635560249566
best_error: 1.516563540567553
best_error: 1.5163013917537251
best_error: 1.5163013880822909
best_error: 1.516284221554433
best_error: 1.5162842204564322
best_error: 1.5162831444587264
best_error: 1.516283144415301
best_error: 1.5162831441694324
best_error: 1.5162830314247597
best_error: 1.5162830312883704
best_error: 1.5162830311389757
best_error: 1.5162820891828304
best_error: 1.5162820890919133
best_error: 1.5162820888935837
best_error: 1.5162784607434379
best_error: 1.5162784602425439
best_error: 1.5162665917445053
best_error: 1.516266590118038
best_error: 1.5161836797363455
best_error: 1.5161836785774825
best_error: 1.516082298948206
best_error: 1.5160822960280023
best_error: 1.5158841366272382
best_error: 1.5158841321884322
best_error: 1.5143381615755698
best_error: 1.5143381569897603
best_error: 1.5143381454380158
best_error: 1.5131099215168555
best_error: 1.5131099177625043
best_error: 1.5131099140558835
best_error: 1.5116385169914452
best_error: 1.5116384780224814
best_error: 1.5114217193777868
best_error: 1.5114216973692636
best_error: 1.5109853339506158
best_error: 1.5109853336816876
best_error: 1.5109853325197826
best_error: 1.5109707093764095
best_error: 1.5109707081336916
best_error: 1.5109553757873322
best_error: 1.5109553733190402
best_error: 1.5109504407701129
best_error: 1.5109504406775482
best_error: 1.5109441446988057
best_error: 1.510944144606833
best_error: 1.51090555216969
best_error: 1.510905550584651
best_error: 1.5108754166048095
best_error: 1.5108754149970942
best_error: 1.5108111712548151
best_error: 1.5108111675882951
best_error: 1.5106213726444349
best_error: 1.5106213726335675
