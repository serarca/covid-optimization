ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 20.47821909126148
best_error: 20.478218227736285
best_error: 5.079125909857773
best_error: 5.079125909710266
best_error: 5.079123541633272
best_error: 5.079123541631695
best_error: 5.079123541628589
best_error: 5.079114065672673
best_error: 5.079114065671095
best_error: 5.07911406566799
best_error: 5.079076112750009
best_error: 5.079076112748422
best_error: 5.079076112745317
best_error: 5.07892351069536
best_error: 5.078923510693745
best_error: 5.078923510690647
best_error: 5.078300121221925
best_error: 5.078300121220183
best_error: 5.078300121217115
best_error: 5.075574342124728
best_error: 5.075574342122286
best_error: 5.07557434211947
best_error: 5.057663625986817
best_error: 5.057663625961247
best_error: 5.05436467080396
best_error: 5.05436467076569
best_error: 5.052056642771111
best_error: 5.052056642721
best_error: 4.802840234698539
best_error: 4.802840212854345
best_error: 4.750074113922904
best_error: 4.750074085141141
best_error: 4.672177388506236
best_error: 4.672177348962518
best_error: 4.179363602523032
best_error: 4.179363504644534
best_error: 3.978282495190401
best_error: 3.9782823501371194
best_error: 3.7703895750185414
best_error: 3.7703893883089274
best_error: 3.723707176915171
best_error: 3.7237071364474663
best_error: 3.7167261077542997
best_error: 3.7167260715098003
best_error: 3.7064266240074955
best_error: 3.706426481366397
best_error: 3.6007686230050875
best_error: 3.600768401717717
best_error: 3.550764329816267
best_error: 3.550764307378421
best_error: 3.5412509351539607
best_error: 3.541250852384585
best_error: 3.534658293045252
best_error: 3.5346582634735775
best_error: 3.5315809959699562
best_error: 3.5315809616984244
best_error: 3.5312075877258975
best_error: 3.5312075820828936
best_error: 3.531133551368676
best_error: 3.5311335503441823
best_error: 3.5311335491071985
best_error: 3.5310885507164436
best_error: 3.5310885478520824
best_error: 3.5309908059410744
best_error: 3.530990801875531
best_error: 3.5306276332672497
best_error: 3.5306276237417125
best_error: 3.5298599622839766
best_error: 3.5298599501883223
best_error: 3.527602845070503
best_error: 3.5276028268568047
best_error: 3.524920332163903
best_error: 3.5249202990068977
best_error: 3.508963347718817
best_error: 3.5089632633547585
best_error: 3.477711770892985
best_error: 3.4777116495469373
best_error: 3.2495669826664733
best_error: 3.2495668761843746
best_error: 3.1738100511164946
best_error: 3.1738098733926
best_error: 3.165748448721838
best_error: 3.1657482380463193
best_error: 2.8219340943099747
best_error: 2.8219339138691835
best_error: 2.685577301379055
best_error: 2.6855772704797203
best_error: 2.6546743050813673
best_error: 2.654674304815847
best_error: 2.654674303319302
best_error: 2.6546742980358173
best_error: 2.6546742947988826
best_error: 2.640594390394792
best_error: 2.6405943897073696
best_error: 2.640594383888173
best_error: 2.6405943784766093
best_error: 2.6330674789212365
best_error: 2.6330674773379075
best_error: 2.633067473214557
best_error: 2.63306746710546
best_error: 2.553890900674789
best_error: 2.5538908761775905
best_error: 2.542303346650909
best_error: 2.5423032736561693
best_error: 2.5410220104932417
best_error: 2.541021960950367
best_error: 2.46803268675895
best_error: 2.4680326514772846
best_error: 2.410344381956999
best_error: 2.410344340257424
best_error: 2.3927511097591183
best_error: 2.392750919319886
best_error: 2.360233891758391
best_error: 2.3602338906039737
best_error: 2.3602338897581667
best_error: 2.3602338889396117
best_error: 2.3602338879388216
best_error: 2.348923268025347
best_error: 2.3489232653890557
best_error: 2.3489232639778965
best_error: 2.3205530221100386
best_error: 2.32055293217255
best_error: 2.2890518447889265
best_error: 2.289051770296295
best_error: 2.2819225552631663
best_error: 2.2819225426610052
best_error: 2.2819225273190606
best_error: 2.2350793821335118
best_error: 2.2350793518457457
best_error: 2.19448272175862
best_error: 2.1944826650065066
best_error: 2.1769069506302565
best_error: 2.176906946806514
best_error: 2.175184121705023
best_error: 2.1751840961667397
best_error: 2.174975235766698
best_error: 2.1749752257826445
best_error: 2.174791640752112
best_error: 2.1747916389434754
best_error: 2.1747813834527485
best_error: 2.17478138321073
best_error: 2.1747745837038597
best_error: 2.1747745836890964
best_error: 2.174774583654832
best_error: 2.174708320010848
best_error: 2.174708318400499
best_error: 2.1740110171652316
best_error: 2.174011015416246
best_error: 2.1731043901373055
best_error: 2.1731043709438964
best_error: 2.171309692222634
best_error: 2.171309673258401
best_error: 2.1668689963909853
best_error: 2.166868984750767
best_error: 2.163999085411607
best_error: 2.16399907743157
best_error: 2.1619602498496233
best_error: 2.1619602445980357
best_error: 2.1617273276609987
best_error: 2.1617272954793436
best_error: 2.161369143706802
best_error: 2.16136914085853
best_error: 2.161291998037444
best_error: 2.1612919950629093
best_error: 2.161131395532745
best_error: 2.16113139499292
best_error: 2.1608699922869823
best_error: 2.1608699912833216
best_error: 2.1602234064885186
best_error: 2.160223406028272
best_error: 2.160223405565177
best_error: 2.1588837370078693
best_error: 2.158883735895396
best_error: 2.158883735735113
best_error: 2.151947839813275
best_error: 2.1519478160011176
best_error: 2.1407449606610016
best_error: 2.1407449555594
best_error: 2.140498951922768
best_error: 2.1404989472069413
best_error: 2.136431529805251
best_error: 2.1364315203867883
best_error: 2.122984323451193
best_error: 2.122984321978753
best_error: 2.122152102709636
best_error: 2.1221521026924886
best_error: 2.1221521022061594
best_error: 2.1221521019714107
best_error: 2.121535642532142
best_error: 2.121535630383933
best_error: 2.1214669096336674
best_error: 2.1214669000542403
best_error: 2.121408871235145
best_error: 2.12140887031483
best_error: 2.1214072143497984
best_error: 2.121407213688777
best_error: 2.1214068290895174
best_error: 2.1214068289310317
best_error: 2.1214067134549737
best_error: 2.121406713281784
best_error: 2.121406640052518
best_error: 2.12140663989566
best_error: 2.1214065690522226
best_error: 2.1214065689541686
best_error: 2.1214063078760903
best_error: 2.121406307784976
best_error: 2.121405561444121
best_error: 2.1214055609149933
best_error: 2.1214045941633786
best_error: 2.121404594095301
best_error: 2.1214019504083006
best_error: 2.121401950098282
best_error: 2.1213936654377332
best_error: 2.1213936653896783
best_error: 2.1213788341197337
best_error: 2.12137883276675
best_error: 2.121353912947444
best_error: 2.121353911658758
best_error: 2.1212629654895334
best_error: 2.121262962280543
best_error: 2.120787130472784
best_error: 2.1207871100147737
best_error: 2.1203865740958516
best_error: 2.1202102698919116
best_error: 2.1202102662533213
best_error: 2.120183377336665
best_error: 2.1201833755265747
best_error: 2.120181753267303
best_error: 2.1201817525951987
best_error: 2.120181614225098
best_error: 2.1201816133511113
best_error: 2.1201814619717774
best_error: 2.1201814618073334
best_error: 2.120181454743099
best_error: 2.120181454583152
best_error: 2.120181451358997
best_error: 2.1201814513033646
best_error: 2.120181450445823
best_error: 2.1201814503902607
best_error: 2.1201814503767142
best_error: 2.1201814503347736
