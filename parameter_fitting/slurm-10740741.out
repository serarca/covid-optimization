ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.041566405315734
best_error: 11.041566394567562
best_error: 10.688714951708112
best_error: 10.688714900603456
best_error: 6.74625516815651
best_error: 6.74625465386295
best_error: 5.7442636014124675
best_error: 5.744263437543685
best_error: 5.707017929379225
best_error: 5.70701789850822
best_error: 5.704613182295812
best_error: 5.704613182176803
best_error: 5.70461317113928
best_error: 5.704278333499844
best_error: 5.704278333499353
best_error: 5.704278324099861
best_error: 5.692522832269012
best_error: 5.692522726888528
best_error: 5.527715602704797
best_error: 5.52771558974654
best_error: 5.527715578511639
best_error: 5.404506750562836
best_error: 5.404506750562714
best_error: 5.387919804766275
best_error: 5.387919804765846
best_error: 5.387919794002817
best_error: 5.332454877442172
best_error: 5.33245487744191
best_error: 5.171657007317424
best_error: 5.171657007317207
best_error: 4.929700542430082
best_error: 4.929700493519413
best_error: 4.929700477083116
best_error: 4.928392522750681
best_error: 4.928392449224941
best_error: 4.737461838420564
best_error: 4.737461838420197
best_error: 4.737461812905719
best_error: 4.717833588523622
best_error: 4.717833588523377
best_error: 4.717833587073277
best_error: 4.717833586649522
best_error: 4.716264835838703
best_error: 4.716264818270778
best_error: 4.714805915079657
best_error: 4.714805898067334
best_error: 4.710257343486265
best_error: 4.710257343486057
best_error: 4.71025734126724
best_error: 4.690530064893567
best_error: 4.690530064893381
best_error: 4.684046713934709
best_error: 4.684046713934515
best_error: 4.671287158495745
best_error: 4.671287158495557
best_error: 4.444365696162859
best_error: 4.444365653314352
best_error: 4.430676850932007
best_error: 4.430676850931711
best_error: 4.430676837732143
best_error: 4.426477384699711
best_error: 4.426477384699477
best_error: 4.426298796166467
best_error: 4.426298796166243
best_error: 4.4262987953337625
best_error: 4.426287390618226
best_error: 4.426287390618006
best_error: 4.426286046266596
best_error: 4.426286046266372
best_error: 4.426282024235155
best_error: 4.426282024234936
best_error: 4.426281630986133
best_error: 4.426281630985915
best_error: 4.426280228360248
best_error: 4.426280228360025
best_error: 4.426280091265228
best_error: 4.42628009126501
best_error: 4.426279148617322
best_error: 4.426279148617102
best_error: 4.426279087159009
best_error: 4.426279087158788
best_error: 4.426278801524214
best_error: 4.4262788015239956
best_error: 4.4262787450998555
best_error: 4.4262787450996335
best_error: 4.426278690714924
best_error: 4.426278690714708
best_error: 4.4262786907104115
best_error: 4.4262786612414695
best_error: 4.42627866124125
best_error: 4.4262785193750185
best_error: 4.426278519374798
best_error: 4.42627850434539
best_error: 4.426278504345174
best_error: 4.426278489771256
best_error: 4.426278489771035
best_error: 4.426278478345576
best_error: 4.4262784783453535
best_error: 4.426278467531842
best_error: 4.426278467531623
best_error: 4.4262784226242955
best_error: 4.426278422624073
best_error: 4.426278391706838
best_error: 4.426278391706619
best_error: 4.426278274087323
best_error: 4.426278274087101
best_error: 4.426278272800696
best_error: 4.426278272800477
best_error: 4.4262782715514115
best_error: 4.426278271551195
best_error: 4.426278270160117
best_error: 4.426278270159899
best_error: 4.426278268804351
best_error: 4.426278268804133
best_error: 4.426278267974246
best_error: 4.426278267974023
best_error: 4.4262782671711856
best_error: 4.426278267170962
best_error: 4.426278266465972
best_error: 4.426278266465754
best_error: 4.426278265807648
best_error: 4.426278265807425
best_error: 4.426278261653298
best_error: 4.426278261653076
best_error: 4.426278258438604
best_error: 4.426278258438382
best_error: 4.426278257863709
best_error: 4.426278257863488
best_error: 4.42627825371071
best_error: 4.426278253710487
best_error: 4.426278253670096
best_error: 4.426278253669876
best_error: 4.4262782536407
best_error: 4.426278253640483
best_error: 4.42627825361216
best_error: 4.426278253611942
