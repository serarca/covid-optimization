ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.09097866095819
best_error: 101.0909784658733
best_error: 101.09097845688942
best_error: 20.668470389037175
best_error: 20.668470389036546
best_error: 20.668470387910624
best_error: 20.66838328495715
best_error: 20.668383283828135
best_error: 20.66803295746642
best_error: 20.668032956327462
best_error: 20.666600294443516
best_error: 20.66660029326333
best_error: 20.660313237494847
best_error: 20.660313236123358
best_error: 20.62073398026324
best_error: 20.620733977348653
best_error: 20.49364615190699
best_error: 20.49364614110414
best_error: 18.518816606493942
best_error: 18.51881634323659
best_error: 16.796948680094413
best_error: 16.796948188842006
best_error: 14.754971015976713
best_error: 14.754970362114399
best_error: 14.56266336719693
best_error: 14.562663338116483
best_error: 14.537181468663311
best_error: 14.537181466728933
best_error: 14.537181396821298
best_error: 14.533462109013605
best_error: 14.533462105907613
best_error: 14.533462054708675
best_error: 14.530111662533837
best_error: 14.530111657588256
best_error: 14.530111636071418
best_error: 14.528431147751693
best_error: 14.528431142635426
best_error: 14.528431123786543
best_error: 14.527551536414478
best_error: 14.52755150919468
best_error: 14.527456789639288
best_error: 14.52745678413924
best_error: 14.52745677135458
best_error: 14.527408369643066
best_error: 14.52740836414244
best_error: 14.527408351356915
best_error: 14.527330324803923
best_error: 14.527330319302365
best_error: 14.527330306515445
best_error: 14.527304104071547
best_error: 14.52730409856967
best_error: 14.527304085782276
best_error: 14.527297324575025
best_error: 14.527297319073071
best_error: 14.527297306285558
best_error: 14.527292877732206
best_error: 14.527292872230198
best_error: 14.527292859442603
best_error: 14.527291199822372
best_error: 14.527291172606098
best_error: 14.527290428956295
best_error: 14.52729042345426
best_error: 14.527290410666623
best_error: 14.527281060235218
best_error: 14.527281054733074
best_error: 14.527281041945265
best_error: 14.527279702168025
best_error: 14.527279696665856
best_error: 14.527279683878028
best_error: 14.527279218835192
best_error: 14.527279213333019
best_error: 14.527279200545182
best_error: 14.527278424973147
best_error: 14.527278419470967
best_error: 14.527278406683113
best_error: 14.527277904195596
best_error: 14.52727787697947
best_error: 14.527277842463317
best_error: 14.52727783696113
best_error: 14.527277830434208
best_error: 14.526807431380558
best_error: 14.52680740417214
best_error: 14.519196030051642
best_error: 14.519196003319465
best_error: 14.485098601091272
best_error: 14.485098575561118
best_error: 14.457984431382876
best_error: 14.457984409723288
best_error: 14.453226589330411
best_error: 14.453226567735237
best_error: 14.450894061786073
best_error: 14.450894040283202
best_error: 14.450797907670587
best_error: 14.450797907663624
best_error: 14.450797818488116
best_error: 14.450783675000455
best_error: 14.450783653499737
best_error: 14.450531597546231
best_error: 14.450531576048533
best_error: 14.449572728210885
best_error: 14.449572638871384
best_error: 14.445739524871724
best_error: 14.445739435043617
best_error: 14.432599251581394
best_error: 14.432598866674383
best_error: 14.427500900485082
best_error: 14.4275005149746
best_error: 14.405982750429574
best_error: 14.405982361724721
best_error: 14.36001196733423
best_error: 14.360011966338103
best_error: 14.360011849928508
best_error: 14.347933238654537
best_error: 14.34793322119291
best_error: 14.346157160131568
best_error: 14.3461571433863
best_error: 14.34133429143657
best_error: 14.341334284346742
best_error: 14.34133428365482
best_error: 14.340410407835636
best_error: 14.340410379261677
best_error: 14.31139654077009
best_error: 14.311396540770087
best_error: 14.31139653763601
best_error: 14.311396535923372
best_error: 14.311396533509608
best_error: 14.30128120181465
best_error: 14.30128116747285
best_error: 14.295602396522824
best_error: 14.295602375809253
best_error: 14.283034727476956
best_error: 14.283034719612656
best_error: 14.280008327692109
best_error: 14.280008319867147
best_error: 14.268763669883704
best_error: 14.26876366451409
best_error: 14.268763662822824
best_error: 14.22348441626934
best_error: 14.223484411953802
best_error: 14.223484411392707
best_error: 14.223484409346995
best_error: 14.08521316220784
best_error: 14.08521313812804
best_error: 14.085212678741797
best_error: 13.919605567753345
best_error: 13.919605547340293
best_error: 13.919605140123993
best_error: 13.909375877496569
best_error: 13.90937578662524
best_error: 13.90067031818921
best_error: 13.900670298001453
best_error: 13.900669892808466
best_error: 13.876370838738804
best_error: 13.8763708387388
best_error: 13.876370832497285
best_error: 13.837668170738239
best_error: 13.83766816473166
best_error: 13.69816150060181
best_error: 13.698161500162115
best_error: 13.698161374308661
best_error: 13.263609886090203
best_error: 13.26360977030663
best_error: 13.24500382224247
best_error: 13.245003728345152
best_error: 13.239617038898505
best_error: 13.239617034124395
best_error: 13.23946824044514
best_error: 13.239468152031293
best_error: 13.238859025588862
best_error: 13.238858937448317
best_error: 13.23879090645676
best_error: 13.23879081831073
best_error: 13.238748907322492
best_error: 13.238748819173084
best_error: 13.238730430912899
best_error: 13.238730342761999
best_error: 13.238717036216908
best_error: 13.238716948064935
best_error: 13.23871674934249
best_error: 13.23871666119049
best_error: 13.238716565200136
best_error: 13.238716560430444
best_error: 13.238716551816179
