ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.662599545420917
best_error: 11.6625995444137
best_error: 11.542500883335293
best_error: 11.542500880307154
best_error: 9.05081743463015
best_error: 9.050817231387773
best_error: 9.04984476663117
best_error: 9.049844563311726
best_error: 7.511227315841328
best_error: 7.5112273146487265
best_error: 7.5112270063738205
best_error: 6.300638353234163
best_error: 6.300638168626799
best_error: 4.817617329226256
best_error: 4.817617276255797
best_error: 4.60924680374382
best_error: 4.609246781118173
best_error: 4.458610789056065
best_error: 4.458610784047883
best_error: 4.458610764542506
best_error: 4.435484499026503
best_error: 4.435484493970662
best_error: 4.43548447366957
best_error: 4.431406834646502
best_error: 4.4314068295821425
best_error: 4.431406809136844
best_error: 4.430568115228864
best_error: 4.430568110162742
best_error: 4.43056808968765
best_error: 4.430158192658201
best_error: 4.430158187590862
best_error: 4.430158167104084
best_error: 4.429922139137347
best_error: 4.429922134069297
best_error: 4.429922113575806
best_error: 4.429900953487751
best_error: 4.429900948419647
best_error: 4.429900927925539
best_error: 4.429890642738513
best_error: 4.429890637670382
best_error: 4.429890617175978
best_error: 4.429888748143272
best_error: 4.4298887430751215
best_error: 4.429888722580678
best_error: 4.429888033299153
best_error: 4.429887894518883
best_error: 4.429887868333446
best_error: 4.429887863265298
best_error: 4.429887842770824
best_error: 4.409107907045598
best_error: 4.409107903637009
best_error: 4.4091079017163075
best_error: 4.409107881979493
best_error: 4.40644231609887
best_error: 4.406442302682215
best_error: 4.4064422914992125
best_error: 4.405796072584355
best_error: 4.405796062951451
best_error: 4.405796047815247
best_error: 4.405786243893873
best_error: 4.40578623414676
best_error: 4.405786219134549
best_error: 4.405730777560346
best_error: 4.405730767600618
best_error: 4.405730752826091
best_error: 4.405688068650537
best_error: 4.405688058740676
best_error: 4.405688043927556
best_error: 4.4056754537522
best_error: 4.405675443916178
best_error: 4.405675429033831
best_error: 4.405636381371835
best_error: 4.4056363718288925
best_error: 4.405636356672078
best_error: 4.405191705641247
best_error: 4.405191696677992
best_error: 4.405191681145128
best_error: 4.404177241478012
best_error: 4.404177233616639
best_error: 4.404177216997057
best_error: 4.403594636231638
best_error: 4.4035946287820185
best_error: 4.403594611760079
best_error: 4.403212049201876
best_error: 4.403212040792264
best_error: 4.403212024792991
best_error: 4.403098816326649
best_error: 4.403098806347396
best_error: 4.403098792008718
best_error: 4.4030849084959724
best_error: 4.403084898759479
best_error: 4.40308488415984
best_error: 4.399078174239165
best_error: 4.399078164467495
best_error: 4.39907814980711
best_error: 4.39792729683486
best_error: 4.397926816660979
best_error: 4.397506024667824
best_error: 4.397506014998737
best_error: 4.397506000198118
best_error: 4.397496358318854
best_error: 4.3974958781869935
best_error: 4.397493015654586
best_error: 4.397493005985382
best_error: 4.397492991184567
best_error: 4.397485493955369
best_error: 4.39748548428607
best_error: 4.397485469485171
best_error: 4.397484300068311
best_error: 4.397484286929519
best_error: 4.3876614955146485
best_error: 4.387661472796724
best_error: 4.387661471151873
best_error: 4.380149309770136
best_error: 4.380149287822634
best_error: 4.380149284998373
best_error: 4.374738970636429
best_error: 4.374738949999848
best_error: 4.374738945598377
best_error: 4.373649316772075
best_error: 4.373648841148039
best_error: 4.37305732868003
best_error: 4.373057308072543
best_error: 4.373057303566812
best_error: 4.3721899645050115
best_error: 4.372189486451946
best_error: 4.370585909378645
best_error: 4.370585882004043
best_error: 4.370585610822374
best_error: 4.343314898057489
best_error: 4.343314855830539
best_error: 4.3433145978120145
best_error: 4.340066956112716
best_error: 4.340066914409097
best_error: 4.340066654835679
best_error: 4.338664095131902
best_error: 4.3386640535864665
best_error: 4.338663793676604
best_error: 4.338632316394151
best_error: 4.3386323163941505
best_error: 4.338632315144563
best_error: 4.33863228260637
best_error: 4.338426567119397
best_error: 4.338426525600805
best_error: 4.338426265633899
best_error: 4.338310910576384
best_error: 4.338310869068831
best_error: 4.3383106090771735
best_error: 4.338260247063332
best_error: 4.338260205560658
best_error: 4.338259945558109
best_error: 4.338249152745605
best_error: 4.338249111243977
best_error: 4.3382488512390625
best_error: 4.338247344102298
best_error: 4.338247302600861
best_error: 4.338247042595551
best_error: 4.338246861635811
best_error: 4.338246820134424
best_error: 4.338246560128989
