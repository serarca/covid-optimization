ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.91962634454788
best_error: 25.919626167858272
best_error: 5.064137870687705
best_error: 5.064137870506145
best_error: 5.064137870459607
best_error: 5.064063504069492
best_error: 5.064063504010603
best_error: 5.064063503841249
best_error: 5.063765079044844
best_error: 5.063765078985238
best_error: 5.063765078816006
best_error: 5.062555819306786
best_error: 5.062555819244253
best_error: 5.062555819075539
best_error: 5.057454597823284
best_error: 5.057454597748079
best_error: 5.057454597581849
best_error: 5.031510925425142
best_error: 5.031510925274658
best_error: 5.031510925130991
best_error: 4.888793705375348
best_error: 4.88879369817994
best_error: 4.85562024780848
best_error: 4.855620233423881
best_error: 3.6985157112564413
best_error: 3.698515386025698
best_error: 3.4793970928210824
best_error: 3.4793970321992203
best_error: 3.466185963746499
best_error: 3.466185944884816
best_error: 3.4640240522505445
best_error: 3.4640240518718795
best_error: 3.464024051307446
best_error: 3.4639050119541372
best_error: 3.463905011356441
best_error: 3.4639050111423604
best_error: 3.463420042827694
best_error: 3.4634200385843172
best_error: 3.4619541255759008
best_error: 3.46195409787093
best_error: 3.4590722069211095
best_error: 3.4590721537551317
best_error: 3.442534719656024
best_error: 3.4425345816478456
best_error: 3.3682799853144263
best_error: 3.3682795736705766
best_error: 3.267354314213079
best_error: 3.2673542215642777
best_error: 2.6627990872512712
best_error: 2.6627986132914985
best_error: 2.6575593364026906
best_error: 2.6575592242195465
best_error: 2.6117365513077573
best_error: 2.6117364550203
best_error: 2.57994673108652
best_error: 2.5799466393509953
best_error: 2.5417742718827308
best_error: 2.5417742132866796
best_error: 2.536989288537732
best_error: 2.536989251542116
best_error: 2.5353291984878172
best_error: 2.535329167496375
best_error: 2.533832864158885
best_error: 2.5338328372988883
best_error: 2.5335975234093344
best_error: 2.5335975049932697
best_error: 2.5332948867579073
best_error: 2.533294873273483
best_error: 2.529901642928614
best_error: 2.5299016357283395
best_error: 2.520074682297331
best_error: 2.52007462100636
best_error: 2.5200733562682314
best_error: 2.5055325811134046
best_error: 2.5055325043293712
best_error: 2.2868437802997588
best_error: 2.286843750906657
best_error: 2.0815147553342586
best_error: 2.081514680926862
best_error: 2.080020779148164
best_error: 2.0800207732237808
best_error: 2.076632990269869
best_error: 2.0766329826372703
best_error: 2.0704469489678896
best_error: 2.0704468977410353
best_error: 2.066276502271667
best_error: 2.0662764753962044
best_error: 2.0596288251556696
best_error: 2.0596286993928157
best_error: 2.023201760706268
best_error: 2.0232015746352885
best_error: 2.0231921447475467
best_error: 1.9265742427654728
best_error: 1.9265740326922005
best_error: 1.9265541929300765
best_error: 1.908385524723345
best_error: 1.9083854003852279
best_error: 1.8699881115525097
best_error: 1.8699881114963448
best_error: 1.8699881029501642
best_error: 1.8645481775763242
best_error: 1.864548152414755
best_error: 1.8639462994412597
best_error: 1.8639462971367242
best_error: 1.8626065416749469
best_error: 1.8626065395570441
best_error: 1.8615515688007713
best_error: 1.8615515680319294
best_error: 1.861551567733729
best_error: 1.8615280435771677
best_error: 1.8615280406613812
best_error: 1.861497455193536
best_error: 1.861497452287188
best_error: 1.8613189583458265
best_error: 1.8613189576880518
best_error: 1.861318956927222
best_error: 1.8610550983682816
best_error: 1.8610550941587567
best_error: 1.8610062332356714
best_error: 1.8610062326166221
best_error: 1.8610054355012486
best_error: 1.8610054348962672
best_error: 1.8610052610114638
best_error: 1.8610052604330065
best_error: 1.8610050612208895
best_error: 1.8610050606553568
best_error: 1.860998487147025
best_error: 1.8609984867100593
best_error: 1.860751837151682
best_error: 1.8607518367668894
best_error: 1.8605258347392024
best_error: 1.860525834636437
best_error: 1.8604823232584193
best_error: 1.8604823228723817
best_error: 1.8604814060312276
best_error: 1.860481405407318
best_error: 1.8604810553328732
best_error: 1.860481055006116
best_error: 1.8604809364271788
best_error: 1.8604809358870105
best_error: 1.8604808594983313
best_error: 1.8604808592423507
best_error: 1.8604804723480886
best_error: 1.860480472320152
best_error: 1.8604804722354609
best_error: 1.8604751807476583
best_error: 1.8604751804972088
best_error: 1.8604612268511473
best_error: 1.8604612268468472
best_error: 1.8604612261155404
best_error: 1.8604502763142166
best_error: 1.8604502763087303
best_error: 1.8604502755220396
best_error: 1.8604124098715134
best_error: 1.8604124098687467
best_error: 1.860412408956285
best_error: 1.8603085992618702
best_error: 1.860308598203053
best_error: 1.8602891716963055
best_error: 1.8602891716306145
best_error: 1.8602891710830445
best_error: 1.8602856557450742
best_error: 1.8602856526737503
best_error: 1.8602854614707913
best_error: 1.8602854584015374
best_error: 1.8602853443868381
best_error: 1.8602853411296645
best_error: 1.860285333124592
best_error: 1.8602853301011266
best_error: 1.8602853111905666
best_error: 1.860285308050173
best_error: 1.8602852700472048
best_error: 1.8602852671921122
best_error: 1.86028522185193
best_error: 1.8602852189015857
best_error: 1.8602850317800277
best_error: 1.8602850287341675
best_error: 1.8602847408352203
best_error: 1.86028473731775
best_error: 1.8602841746797196
best_error: 1.8602841711625957
best_error: 1.860281935973137
best_error: 1.8602819321730126
best_error: 1.86027342515876
best_error: 1.8602734214066354
best_error: 1.8600621592930042
best_error: 1.8600621522393497
best_error: 1.8599596018331637
best_error: 1.859959580786454
best_error: 1.8595436096402602
best_error: 1.859543586815092
best_error: 1.8592381461471037
best_error: 1.8592381388161994
best_error: 1.8591804709974329
best_error: 1.85918045319534
best_error: 1.8589839887748716
best_error: 1.8589839884613764
best_error: 1.8589839883367971
best_error: 1.858873838124459
best_error: 1.858873834030553
best_error: 1.8588216186243292
best_error: 1.8588216165215619
best_error: 1.8587997545143766
best_error: 1.858799752823664
best_error: 1.8587858102700547
best_error: 1.858785810116302
best_error: 1.858785809871039
best_error: 1.8587770035420887
best_error: 1.8587770034370021
best_error: 1.8587770030426432
best_error: 1.858771290176799
best_error: 1.858771290047241
best_error: 1.8587712896773108
best_error: 1.8586853172528448
best_error: 1.8586853170430067
best_error: 1.8584612980005082
best_error: 1.8584612976800203
best_error: 1.8584612975276096
best_error: 1.8581487276611803
best_error: 1.858148727190745
best_error: 1.8581487270761132
best_error: 1.8571259009959824
best_error: 1.8571258956889676
best_error: 1.8559639691333143
best_error: 1.8559639603600646
best_error: 1.8511029542844801
best_error: 1.8511029463665247
best_error: 1.8479515672820002
best_error: 1.84795155964965
best_error: 1.8479513627013293
best_error: 1.8479513550689668
best_error: 1.8478016744366914
best_error: 1.8478016681707101
best_error: 1.8478016291158812
best_error: 1.8478016228498972
best_error: 1.8477462531447382
best_error: 1.8477462477336795
best_error: 1.8477462476566873
best_error: 1.8477460842461142
best_error: 1.847746078863986
best_error: 1.8447134648614258
best_error: 1.844713457403207
best_error: 1.843350225959179
best_error: 1.843350152645716
best_error: 1.8433419960709323
best_error: 1.8430026833547453
best_error: 1.8430026424331905
best_error: 1.8430007066589256
best_error: 1.8429993915796405
best_error: 1.8429993506583102
best_error: 1.8429974293662172
best_error: 1.8412841408055334
best_error: 1.8412841329926422
best_error: 1.8412841267954574
best_error: 1.841283341666661
best_error: 1.8412833340247245
best_error: 1.8388917700232619
best_error: 1.8388917607568853
best_error: 1.838041570311323
best_error: 1.838041519541357
best_error: 1.8380366437232771
best_error: 1.8355230846368804
best_error: 1.8355230267306184
best_error: 1.8269840066440484
best_error: 1.8269840052168613
best_error: 1.826983997905672
best_error: 1.8222867042800122
best_error: 1.8222866925595693
best_error: 1.8095561989326852
best_error: 1.8095561497894415
best_error: 1.8088165435309478
best_error: 1.8088165238849996
best_error: 1.8076461130210617
best_error: 1.8076460984390694
best_error: 1.80751924151703
best_error: 1.807519240432983
best_error: 1.8075192386556356
best_error: 1.8075096104985204
best_error: 1.8075096092072611
best_error: 1.807509607665591
best_error: 1.8074720352361615
best_error: 1.807472033891568
best_error: 1.8074720325011382
best_error: 1.8073351268748559
best_error: 1.8073351260084507
best_error: 1.8073351243176816
best_error: 1.8061234375172588
best_error: 1.8061234369999177
best_error: 1.8061234366160976
