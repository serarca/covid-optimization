ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.116590675995827
best_error: 21.11658983531895
best_error: 5.0614440827530105
best_error: 5.061444082548465
best_error: 5.061439405658658
best_error: 5.061439405656753
best_error: 5.0614394056537915
best_error: 5.061420688610256
best_error: 5.061420688608347
best_error: 5.061420688605388
best_error: 5.061345681359386
best_error: 5.061345681357463
best_error: 5.061345681354509
best_error: 5.061043406639434
best_error: 5.061043406637454
best_error: 5.06104340663452
best_error: 5.059796982946019
best_error: 5.0597969829437845
best_error: 5.05979698294095
best_error: 5.054105176898136
best_error: 5.05410517689419
best_error: 5.054105176892267
best_error: 4.986477490427878
best_error: 4.986477489670511
best_error: 4.984922163646953
best_error: 4.984922162839071
best_error: 4.983289267405407
best_error: 4.983289266542527
best_error: 4.076658875802064
best_error: 4.076658760711686
best_error: 4.063349230084248
best_error: 4.063349110252843
best_error: 4.049261465515554
best_error: 4.049261342732281
best_error: 4.0491967638218975
best_error: 4.04919664086823
best_error: 4.049094457512745
best_error: 4.049094457473578
best_error: 4.049094334030838
best_error: 4.048262270517039
best_error: 4.048262268327356
best_error: 4.048262146116253
best_error: 3.9926839933355076
best_error: 3.9926839134870464
best_error: 3.890812616316512
best_error: 3.8908125393659425
best_error: 3.889268412072582
best_error: 3.889268262340347
best_error: 3.8070452532632113
best_error: 3.8070450289654594
best_error: 3.6165318618419486
best_error: 3.6165318372056117
best_error: 3.610538961635434
best_error: 3.610538936625968
best_error: 3.5365762980862794
best_error: 3.53657613289801
best_error: 3.3530511262217124
best_error: 3.3530510903758204
best_error: 3.347342403079237
best_error: 3.347342163657479
best_error: 3.3200332635020504
best_error: 3.320033149096096
best_error: 3.295165665342576
best_error: 3.295165495463987
best_error: 3.2487632892483225
best_error: 3.2487632737417607
best_error: 3.0139773521831965
best_error: 3.0139772870339057
best_error: 2.9448866034841465
best_error: 2.944886576461473
best_error: 2.9448865532893707
best_error: 2.944830788891486
best_error: 2.944830756156751
best_error: 2.9448307449914437
best_error: 2.825610569489874
best_error: 2.8256105647508423
best_error: 2.825610479795585
best_error: 2.6314909666912696
best_error: 2.631490773756927
best_error: 2.575475648927999
best_error: 2.5754755448147217
best_error: 2.4972517395338234
best_error: 2.4972517068225777
best_error: 2.4738039751500613
best_error: 2.4738039305080175
best_error: 2.469523292649025
best_error: 2.469523285306172
best_error: 2.4659820084577
best_error: 2.4659819282477353
best_error: 2.4163903918075005
best_error: 2.4163903085368523
best_error: 2.399994348412725
best_error: 2.3999942727523544
best_error: 2.3880177692357663
best_error: 2.3880176989915594
best_error: 2.3847041443601786
best_error: 2.384704048544664
best_error: 2.3287651511082474
best_error: 2.3287651334740294
best_error: 2.3070678562953715
best_error: 2.30706773604527
best_error: 2.301933531846869
best_error: 2.301933447255167
best_error: 2.2839363381105127
best_error: 2.283936333119311
best_error: 2.283936251672315
best_error: 2.2570588766944466
best_error: 2.2570588653018264
best_error: 2.25604239562558
best_error: 2.256042374394684
best_error: 2.2550118625017994
best_error: 2.255011831295729
best_error: 2.2415686365150314
best_error: 2.2415686257310377
best_error: 2.237591013238644
best_error: 2.2375910084769157
best_error: 2.2375910074967753
best_error: 2.236714607362158
best_error: 2.2367145547195144
best_error: 2.2358762217201336
best_error: 2.235876218301994
best_error: 2.235876216001812
best_error: 2.235027461173188
best_error: 2.2350274591836214
best_error: 2.235027455435833
best_error: 2.2237516968049844
best_error: 2.2237516348544255
best_error: 2.208999332973038
best_error: 2.2089993209136214
best_error: 2.207286764754109
best_error: 2.2072867069955096
best_error: 2.204388273842698
best_error: 2.2043882683148515
best_error: 2.2011288613558766
best_error: 2.2011288596349767
best_error: 2.2011288574198846
best_error: 2.201128857044432
best_error: 2.200307306164091
best_error: 2.2003073008700214
best_error: 2.19922824356749
best_error: 2.1992282371420506
best_error: 2.1975748573799923
best_error: 2.1975748526120373
best_error: 2.1906565196971646
best_error: 2.1906565121348063
best_error: 2.160092788311052
best_error: 2.160092753651108
best_error: 2.136510467617104
best_error: 2.1365104519094427
best_error: 2.1327539506762623
best_error: 2.1327539321026983
best_error: 2.1288040063587323
best_error: 2.128803985855919
best_error: 2.12650392435422
best_error: 2.1265039104812784
best_error: 2.126347249160438
best_error: 2.1263472482438477
best_error: 2.1263472463002255
best_error: 2.126157608471715
best_error: 2.1261576032565173
best_error: 2.1258865140520027
best_error: 2.125886507083564
best_error: 2.125403374499835
best_error: 2.1254033548754268
best_error: 2.1252845027654406
best_error: 2.1252845010718153
best_error: 2.1252812235000933
best_error: 2.1252812233905756
best_error: 2.12528122294381
best_error: 2.125280226596491
best_error: 2.1252802264574915
best_error: 2.125280226034514
best_error: 2.125276136229555
best_error: 2.12527613575716
best_error: 2.125276135668539
best_error: 2.125266941434228
best_error: 2.1252669410264646
best_error: 2.125266940867847
best_error: 2.12521295832672
best_error: 2.125212955582855
best_error: 2.125121705529839
best_error: 2.1251217047793194
best_error: 2.1251217016505692
best_error: 2.124521460098842
best_error: 2.1245214391448317
best_error: 2.1240447322902805
best_error: 2.124044712994836
best_error: 2.12360968630057
best_error: 2.1236096842484304
best_error: 2.122942806568931
best_error: 2.1229428056994033
best_error: 2.122202051686728
best_error: 2.1222020294316186
best_error: 2.121594504439009
best_error: 2.1215944820002726
best_error: 2.1215198602606553
best_error: 2.1215198506618465
best_error: 2.1214423197313015
best_error: 2.121442299870435
best_error: 2.1211294737416226
best_error: 2.121129462921383
best_error: 2.120894411482483
best_error: 2.1208944043145017
best_error: 2.1206919805581164
best_error: 2.1206919698318196
best_error: 2.119827795512116
best_error: 2.119827793330363
best_error: 2.1195801142194304
best_error: 2.1195801105051917
best_error: 2.119029139557975
best_error: 2.119029127203462
best_error: 2.118377281904879
best_error: 2.1183772593621195
best_error: 2.118134458941671
best_error: 2.11813442435382
best_error: 2.117857392682837
best_error: 2.1178573820166635
best_error: 2.117830473072003
best_error: 2.1178304666731917
best_error: 2.1177925702872527
best_error: 2.117792566219373
best_error: 2.1177824410477952
best_error: 2.1177824407409327
best_error: 2.117781970915829
best_error: 2.117781970758044
best_error: 2.117781587373784
best_error: 2.1177815872501444
best_error: 2.117781369127174
best_error: 2.117781369041596
best_error: 2.1177813690333194
best_error: 2.1177809716960105
best_error: 2.1177809715683003
best_error: 2.117780176358098
best_error: 2.11778017535634
best_error: 2.1177792196385625
best_error: 2.117779219580149
best_error: 2.117779219532978
best_error: 2.117778416133501
best_error: 2.1177784158051005
best_error: 2.117778027513873
best_error: 2.117778027073034
best_error: 2.1177766985199487
best_error: 2.1177766983493034
best_error: 2.1177754730160774
best_error: 2.1177754728425984
best_error: 2.1177656346878404
best_error: 2.117765633505723
best_error: 2.1177593711721654
best_error: 2.117759369460045
best_error: 2.1176989099133965
best_error: 2.117698909336159
best_error: 2.1176787610205805
best_error: 2.1176787591369983
best_error: 2.1175231079072274
best_error: 2.117523107628247
best_error: 2.117523107568126
best_error: 2.1175231073753404
best_error: 2.117024911807679
best_error: 2.1170249114649997
best_error: 2.117024910969999
best_error: 2.1168547573850316
best_error: 2.1168547465522796
best_error: 2.1159900236523375
best_error: 2.115990022301112
best_error: 2.115394232420542
best_error: 2.115394229914812
best_error: 2.1150171869775805
best_error: 2.115017182061639
best_error: 2.1149932313910353
best_error: 2.114993217958009
best_error: 2.1145362953779228
best_error: 2.114536286998777
