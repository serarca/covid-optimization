ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.947375643504387
best_error: 25.947375421407763
best_error: 5.0586575686596404
best_error: 5.0586575684587585
best_error: 5.058603114719717
best_error: 5.058603114681703
best_error: 5.058603114529865
best_error: 5.058384727318948
best_error: 5.058384727280576
best_error: 5.058384727128691
best_error: 5.057501920280308
best_error: 5.057501920240483
best_error: 5.057501920088406
best_error: 5.053815053364504
best_error: 5.053815053318482
best_error: 5.053815053165704
best_error: 5.035962663923609
best_error: 5.035962663843846
best_error: 5.035962663690596
best_error: 4.767889676702751
best_error: 4.767889647739292
best_error: 3.4652128577354397
best_error: 3.4652124665896924
best_error: 3.3807309340850122
best_error: 3.380730846445841
best_error: 3.347388446798281
best_error: 3.347388419199252
best_error: 3.346274829243998
best_error: 3.34627478233062
best_error: 3.3446747385374835
best_error: 3.3446747377226886
best_error: 3.344674737432481
best_error: 3.3444780463309933
best_error: 3.3444780454576772
best_error: 3.344478045277739
best_error: 3.3437074698308806
best_error: 3.3437074254343258
best_error: 3.342237182925894
best_error: 3.3422371629336083
best_error: 3.3362552279548243
best_error: 3.3362552270277708
best_error: 3.336255226907712
best_error: 3.3073935896050752
best_error: 3.3073935198781164
best_error: 3.2768961425793206
best_error: 3.276896019668418
best_error: 3.1607654920342396
best_error: 3.160765333668701
best_error: 3.0775266408108655
best_error: 3.0775264865315637
best_error: 2.549568602872856
best_error: 2.549568558457644
best_error: 2.547187038057845
best_error: 2.5471870121523366
best_error: 2.545117530788595
best_error: 2.545117529549303
best_error: 2.545117522602061
best_error: 2.5449118980350476
best_error: 2.5449118968387654
best_error: 2.5449118897821355
best_error: 2.5441361014354325
best_error: 2.544136100479977
best_error: 2.544136092815697
best_error: 2.513730751287269
best_error: 2.5137307320212603
best_error: 2.5093936501372824
best_error: 2.5093936354324
best_error: 2.508843117569319
best_error: 2.508843103720042
best_error: 2.5067539984486062
best_error: 2.5067539915595503
best_error: 2.5067539891500674
best_error: 2.501063804180478
best_error: 2.501063652612525
best_error: 2.5010603078144937
best_error: 2.500909483125148
best_error: 2.50090933153022
best_error: 2.500908331004123
best_error: 2.494854770085275
best_error: 2.4948547681138837
best_error: 2.494854762578775
best_error: 2.3952642503576786
best_error: 2.395264242721207
best_error: 2.3536619879743554
best_error: 2.353661984541435
best_error: 2.353661978670072
best_error: 2.30704137375277
best_error: 2.3070413723037886
best_error: 2.307041363552464
best_error: 2.2794880036810565
best_error: 2.279487993602569
best_error: 2.162940899374978
best_error: 2.162940889830925
best_error: 1.7895857877187047
best_error: 1.7895856790412221
best_error: 1.7705173950244413
best_error: 1.7705173438155963
best_error: 1.7630667445334274
best_error: 1.7630666836453097
best_error: 1.7630662565728028
best_error: 1.762070111182913
best_error: 1.762070066316812
best_error: 1.7607950227933458
best_error: 1.7607950010020885
best_error: 1.7607948318521889
best_error: 1.759902888846822
best_error: 1.759902887950523
best_error: 1.7599028879016405
best_error: 1.759731706860341
best_error: 1.7597317065182907
best_error: 1.7597317064780262
best_error: 1.7594858308820616
best_error: 1.7594858283144736
best_error: 1.7594683129481257
best_error: 1.7594683125828132
best_error: 1.759468312560301
best_error: 1.759397250116524
best_error: 1.7593972498793007
best_error: 1.7593972497850665
best_error: 1.7593434986505614
best_error: 1.759343494847474
best_error: 1.759162338665594
best_error: 1.759162334670146
best_error: 1.7590275823518988
best_error: 1.7590275773822268
best_error: 1.7585311058136248
best_error: 1.7585310965107892
best_error: 1.7558991882168131
best_error: 1.7558991723678559
best_error: 1.7551775661233262
best_error: 1.7551775518278
best_error: 1.7543788117554897
best_error: 1.7543788106738822
best_error: 1.7543578128086645
best_error: 1.7543578084486215
best_error: 1.75426875501791
best_error: 1.754268753198196
best_error: 1.7542650594525293
best_error: 1.754265058516787
best_error: 1.754261968977125
best_error: 1.7542619680388825
best_error: 1.7542597558925737
best_error: 1.7542597549612944
best_error: 1.754259280248296
best_error: 1.754259279321853
best_error: 1.7542584687895657
best_error: 1.7542584685379126
best_error: 1.7542584679266744
best_error: 1.7542547789313512
best_error: 1.754254778062248
best_error: 1.754243104487606
best_error: 1.7542431036217159
best_error: 1.754162192880281
best_error: 1.7541621919622967
best_error: 1.753673104281148
best_error: 1.7536731033448933
best_error: 1.7536731031608774
best_error: 1.7528768363352294
best_error: 1.7528768211033543
best_error: 1.752875890798529
best_error: 1.7507014595768169
best_error: 1.7507014592579844
best_error: 1.7507014580894225
best_error: 1.7486293988794457
best_error: 1.7486293772098864
best_error: 1.7482832713648082
best_error: 1.7482832509245727
best_error: 1.7481671506028562
best_error: 1.7481671398953498
best_error: 1.7480938669062118
best_error: 1.7480938620198936
best_error: 1.747847843150343
best_error: 1.747847843129805
best_error: 1.7478478426106863
best_error: 1.7473153607999916
best_error: 1.747315360600931
best_error: 1.7473153591413149
best_error: 1.7466443789098944
best_error: 1.7466443786971715
best_error: 1.746644377027055
best_error: 1.7442611569783697
best_error: 1.7442611249583695
best_error: 1.744260619813691
best_error: 1.7346097908867697
best_error: 1.7346097133106617
best_error: 1.7346053472798864
best_error: 1.7346030763002969
best_error: 1.7314583190509376
best_error: 1.7314582890923567
best_error: 1.7230944009791325
best_error: 1.7230943929622162
best_error: 1.7191100648660844
best_error: 1.7191099691359966
best_error: 1.7191033809983023
best_error: 1.719049915403055
best_error: 1.7190499144082552
best_error: 1.7190499138232136
best_error: 1.719049653003925
best_error: 1.7190496520091216
best_error: 1.719049651424073
best_error: 1.718988776156193
best_error: 1.7189887751284911
best_error: 1.7189887741401666
best_error: 1.7189887733576008
best_error: 1.718988686458219
best_error: 1.718988685426485
best_error: 1.7189886844282154
best_error: 1.7154294410296114
best_error: 1.715429440217289
best_error: 1.7154294392514584
best_error: 1.712910236151173
best_error: 1.712910161540217
best_error: 1.712905632268014
best_error: 1.7118481573683042
best_error: 1.711848156737195
best_error: 1.7118481564485335
best_error: 1.7011656077248183
best_error: 1.70116552049063
best_error: 1.7011591367943304
best_error: 1.7011563204998412
best_error: 1.701029145324511
best_error: 1.701029142386321
best_error: 1.7010158158324642
best_error: 1.701015813326088
best_error: 1.7007368094912259
best_error: 1.700736809484879
best_error: 1.700736809222943
best_error: 1.7007368085547412
best_error: 1.7007355063861085
best_error: 1.700735506381927
best_error: 1.7007355061182405
best_error: 1.7007355054189506
best_error: 1.7007345549096957
best_error: 1.7007345549066668
best_error: 1.7007345546422625
best_error: 1.7007345539272347
best_error: 1.7007340495056453
best_error: 1.70073404923812
best_error: 1.7007340484775406
best_error: 1.700733677985848
best_error: 1.7007336777043838
best_error: 1.7007336769576398
best_error: 1.7007328039296992
best_error: 1.7007328036480178
best_error: 1.700732802809044
best_error: 1.7007327983806038
best_error: 1.7007327980994122
best_error: 1.7007327972600275
best_error: 1.7007327871252627
best_error: 1.7007327868440378
best_error: 1.7007327859895145
best_error: 1.6988713051748838
best_error: 1.6988712815898501
best_error: 1.6988702250735477
best_error: 1.6974998620047999
best_error: 1.697499861997984
best_error: 1.6974998618411081
best_error: 1.6974998609782634
best_error: 1.6968199739398822
best_error: 1.6968199695400734
best_error: 1.694826629504144
best_error: 1.6948266255086193
best_error: 1.6928804138314488
best_error: 1.692880413728911
best_error: 1.6928804117894634
best_error: 1.6913281644163172
best_error: 1.6913281629273076
best_error: 1.6913281619500764
best_error: 1.691246431874809
best_error: 1.6912464301539167
best_error: 1.6912464292253486
best_error: 1.6912353880291813
best_error: 1.6912353871185803
best_error: 1.6912353852696083
best_error: 1.6912168537429704
best_error: 1.6912168535460572
best_error: 1.691216850729107
best_error: 1.6912102943968415
best_error: 1.6912102941884988
best_error: 1.6912102912761433
best_error: 1.6912000399320442
best_error: 1.6912000397110256
best_error: 1.6912000366542896
best_error: 1.691183088317498
best_error: 1.6911830880879748
best_error: 1.6911830849009988
best_error: 1.6911130351852801
best_error: 1.6911130349433998
best_error: 1.6911130316098946
best_error: 1.6909971047928642
best_error: 1.690997104790423
best_error: 1.6909954594860528
best_error: 1.6907337525083952
best_error: 1.6907331405595434
best_error: 1.6895371542269446
best_error: 1.689537133239956
best_error: 1.6895369801789264
best_error: 1.689241038813425
best_error: 1.6892410065053844
best_error: 1.6880979967034535
best_error: 1.6880979964188405
best_error: 1.688097995570062
best_error: 1.687086321840222
best_error: 1.6870863190557386
best_error: 1.6870862844229553
best_error: 1.6869792749554329
best_error: 1.6869792746655414
best_error: 1.686979274622733
best_error: 1.6869144551083428
best_error: 1.6869144547628625
best_error: 1.6869144547144115
best_error: 1.6869023360316464
best_error: 1.686902335706485
best_error: 1.6869023356744264
best_error: 1.6869020576672844
best_error: 1.6869020573420588
best_error: 1.686902057312797
best_error: 1.6869019217671026
best_error: 1.686901921439264
best_error: 1.686901921413431
best_error: 1.6869019067868676
best_error: 1.6869019064567292
best_error: 1.686901866132878
best_error: 1.6869018658040125
best_error: 1.6869018657911425
best_error: 1.6869018648060714
best_error: 1.6869018644788547
best_error: 1.6869018644635272
