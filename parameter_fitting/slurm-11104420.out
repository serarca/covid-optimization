ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.70328402231685
best_error: 101.70328369169901
best_error: 20.66728414333044
best_error: 20.667284143329805
best_error: 20.667284142195143
best_error: 20.667241567324133
best_error: 20.66724156618764
best_error: 20.667070814778633
best_error: 20.667070813637338
best_error: 20.666380541012362
best_error: 20.666380539851534
best_error: 20.66349736491391
best_error: 20.66349736366924
best_error: 20.649549417140964
best_error: 20.649549415440905
best_error: 20.454725908963862
best_error: 20.45472589474817
best_error: 20.448377286172764
best_error: 20.448377271395863
best_error: 20.44158153251698
best_error: 20.44158151713083
best_error: 20.047924237397172
best_error: 20.047924177487666
best_error: 17.795064529803703
best_error: 17.79506416234727
best_error: 16.162117483797047
best_error: 16.162116899557567
best_error: 14.53911921718201
best_error: 14.539119194108457
best_error: 14.535715941352969
best_error: 14.535715785699637
best_error: 14.528701676093531
best_error: 14.528701654502166
best_error: 14.528562280809883
best_error: 14.52856225922092
best_error: 14.528560343955423
best_error: 14.528560211703606
best_error: 14.52855652777868
best_error: 14.528556506189824
best_error: 14.528555549484308
best_error: 14.528555417232074
best_error: 14.528552983046257
best_error: 14.528552966068826
best_error: 14.528552966058843
best_error: 14.52853270349653
best_error: 14.528532571243314
best_error: 14.528340313189496
best_error: 14.528340180927842
best_error: 14.527570253158245
best_error: 14.52757012086282
best_error: 14.524502408827718
best_error: 14.52450227080708
best_error: 14.51233925161102
best_error: 14.512339103354778
best_error: 14.468414311571339
best_error: 14.468414201356081
best_error: 14.455106971962714
best_error: 14.455106965981534
best_error: 14.455106954629098
best_error: 14.454953554095983
best_error: 14.454953548106813
best_error: 14.454953536797017
best_error: 14.454773743883743
best_error: 14.454773737867534
best_error: 14.454773726938368
best_error: 14.454719486500405
best_error: 14.454719458320323
best_error: 14.454629609609153
best_error: 14.454629603521168
best_error: 14.454629593689177
best_error: 14.454603055010235
best_error: 14.454603048920767
best_error: 14.454603039096803
best_error: 14.45460243125085
best_error: 14.454602425161266
best_error: 14.454602415337973
best_error: 14.454602017502246
best_error: 14.454602011412593
best_error: 14.45460200158974
best_error: 14.454601738109329
best_error: 14.454601732019619
best_error: 14.454601722197076
best_error: 14.454601546679546
best_error: 14.454601540589803
best_error: 14.454601530767464
best_error: 14.454601411833252
best_error: 14.454601405743482
best_error: 14.454601395921289
best_error: 14.454601312241504
best_error: 14.45460130615172
best_error: 14.454601296329631
best_error: 14.454601231558895
best_error: 14.454601225469094
best_error: 14.454601215647097
best_error: 14.45460114962793
best_error: 14.454601143538113
best_error: 14.4546011337162
best_error: 14.45460097289422
best_error: 14.454600966804374
best_error: 14.45460095698265
best_error: 14.454591414062918
best_error: 14.454591407973322
best_error: 14.45459139814914
best_error: 14.45458743246054
best_error: 14.454587426370894
best_error: 14.454587416546639
best_error: 14.45458584014913
best_error: 14.454585834059465
best_error: 14.454585824235185
best_error: 14.454583264723723
best_error: 14.454583258634027
best_error: 14.4545832488097
best_error: 14.454582391880436
best_error: 14.45458238579073
best_error: 14.454582375966389
best_error: 14.454582082622967
best_error: 14.454582076533255
best_error: 14.454582066708912
best_error: 14.454581540230876
best_error: 14.454581534141163
best_error: 14.4545815243168
best_error: 14.454581362842404
best_error: 14.454581356752682
best_error: 14.454581346928318
best_error: 14.454581318226321
best_error: 14.454581312136597
best_error: 14.454581302312237
best_error: 14.454581288978158
best_error: 14.454581282888437
best_error: 14.454581273064075
best_error: 14.4545812462627
best_error: 14.454581240172976
best_error: 14.454581230348609
best_error: 14.45458122926018
best_error: 14.454581223170461
best_error: 14.454581217491327
best_error: 14.45458121020668
best_error: 14.454581180107068
best_error: 14.454581174017346
best_error: 14.454581168338215
