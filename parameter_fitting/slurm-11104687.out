ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.60911920146043
best_error: 96.60911906068495
best_error: 96.60911897499474
best_error: 15.792297774777316
best_error: 15.79229777476762
best_error: 15.792297757256282
best_error: 15.77170179972903
best_error: 15.771701781770796
best_error: 15.684109759187567
best_error: 15.68410973933927
best_error: 15.213525412764396
best_error: 15.21352538033772
best_error: 14.119711299957029
best_error: 14.119711251084938
best_error: 11.191644402011292
best_error: 11.191644131098407
best_error: 10.05410143207706
best_error: 10.054101173424714
best_error: 9.890794454025393
best_error: 9.890794417885658
best_error: 9.87164887660793
best_error: 9.871648856191054
best_error: 9.87164884944011
best_error: 9.86492351610046
best_error: 9.864923496465586
best_error: 9.864923488711973
best_error: 9.839842975489844
best_error: 9.839842962676833
best_error: 9.839842947747863
best_error: 9.829104395626532
best_error: 9.829104383769948
best_error: 9.82910436753077
best_error: 9.826234010500317
best_error: 9.82623400580878
best_error: 9.826233982933918
best_error: 9.823597398919103
best_error: 9.823597371437021
best_error: 9.766470915850185
best_error: 9.766470888042138
best_error: 9.5281720640781
best_error: 9.52817203280567
best_error: 9.379975408614339
best_error: 9.379975363680757
best_error: 9.276841297357239
best_error: 9.276841265062496
best_error: 8.94909731624661
best_error: 8.949097314231102
best_error: 8.949097290929927
best_error: 8.921309073004393
best_error: 8.921309072049134
best_error: 8.921309071065727
best_error: 8.92130904725315
best_error: 8.85910658108235
best_error: 8.85910654987051
best_error: 8.692511648953316
best_error: 8.692511648658868
best_error: 8.6925116471213
best_error: 8.683615300788343
best_error: 8.683615300664005
best_error: 8.683615298967142
best_error: 8.651997710765771
best_error: 8.651997708930573
best_error: 8.602174527133954
best_error: 8.602174504406088
best_error: 8.576959939365455
best_error: 8.576959926871156
best_error: 8.527289462768797
best_error: 8.52728946103676
best_error: 8.527289460883873
best_error: 8.488876460995963
best_error: 8.48887645911115
best_error: 8.46899421325922
best_error: 8.468994211307331
best_error: 8.466206126584593
best_error: 8.466206124620554
best_error: 8.465588984807445
best_error: 8.46558898284075
best_error: 8.46532226530432
best_error: 8.465322243416006
best_error: 8.204042251673602
best_error: 8.204042247394064
best_error: 7.962053315610752
best_error: 7.962053094837885
best_error: 7.874897114899246
best_error: 7.874896871398279
best_error: 7.724734253485199
best_error: 7.724734040051147
best_error: 7.583021319862943
best_error: 7.58302130465954
best_error: 7.5670803554942125
best_error: 7.567080340946323
best_error: 7.52172339167382
best_error: 7.521723377480766
best_error: 7.464738226081565
best_error: 7.464738216667749
best_error: 7.464667475464611
best_error: 7.464667232864213
best_error: 7.425570027921109
best_error: 7.425570016329219
best_error: 7.420820840062618
best_error: 7.420820828404075
best_error: 7.417774456555527
best_error: 7.417774237947864
best_error: 7.416797874988718
best_error: 7.416797862318022
best_error: 7.412710923188875
best_error: 7.4127109102045425
best_error: 7.412574329187542
best_error: 7.412574126937703
best_error: 7.4123684367650196
best_error: 7.412368234997903
best_error: 7.412231130429133
best_error: 7.412230928885776
best_error: 7.412126785728519
best_error: 7.412126583924131
best_error: 7.412067048588884
best_error: 7.412066846718579
best_error: 7.412015020558801
best_error: 7.412014818631498
best_error: 7.411991363960874
best_error: 7.4119911623655375
best_error: 7.411969644593015
best_error: 7.411969442973964
best_error: 7.411963863166757
best_error: 7.411963661539853
best_error: 7.411959150447215
best_error: 7.41195894881392
best_error: 7.4119565341023215
best_error: 7.411956332465485
best_error: 7.4119544239188855
best_error: 7.411954222279191
best_error: 7.411953205909924
best_error: 7.411953004268577
best_error: 7.411952243948053
best_error: 7.411952042305398
best_error: 7.411951646600092
best_error: 7.411951444956633
best_error: 7.4119511952973
best_error: 7.411950993653228
best_error: 7.411950868376014
best_error: 7.411950666731496
best_error: 7.411950647861725
best_error: 7.411950446216909
best_error: 7.411950431100639
best_error: 7.411950229455522
best_error: 7.411950045416777
best_error: 7.411949957479907
best_error: 7.411949881489636
best_error: 7.411949847498523
best_error: 7.411680888744967
best_error: 7.411680875405193
best_error: 7.411623925950856
best_error: 7.411623730029148
best_error: 7.411582815170469
best_error: 7.411582801832218
best_error: 7.411580395330486
best_error: 7.411580381992277
best_error: 7.411579703107479
best_error: 7.411579689769276
best_error: 7.411579465265102
best_error: 7.411579451926902
best_error: 7.411579401987413
best_error: 7.411579401987404
best_error: 7.4115794019870025
best_error: 7.411579393916219
best_error: 7.411579378046499
