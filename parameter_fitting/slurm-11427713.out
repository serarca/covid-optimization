ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.610498761687225
best_error: 21.610497950439512
best_error: 5.036990996674486
best_error: 5.036990996391054
best_error: 5.036981688335049
best_error: 5.036981688332701
best_error: 5.036981688329984
best_error: 5.0369444300370985
best_error: 5.036944430034743
best_error: 5.03694443003203
best_error: 5.03679499645775
best_error: 5.0367949964553675
best_error: 5.036794996452666
best_error: 5.036190768482996
best_error: 5.0361907684805
best_error: 5.036190768477852
best_error: 5.033663970519008
best_error: 5.0336639705159785
best_error: 5.033663970513606
best_error: 5.021275426815753
best_error: 5.021275426807665
best_error: 4.99476394778443
best_error: 4.994763947723317
best_error: 4.723876898887621
best_error: 4.7238768836951355
best_error: 4.238356531870481
best_error: 4.238356466647068
best_error: 4.207328881584115
best_error: 4.207328843939476
best_error: 4.207328792508242
best_error: 4.168609799484532
best_error: 4.168609709516816
best_error: 4.007615559094823
best_error: 4.007615438585527
best_error: 3.932954428778318
best_error: 3.932954388246662
best_error: 3.932954384488486
best_error: 3.8997174874147458
best_error: 3.8997173948169133
best_error: 3.6583937541705813
best_error: 3.658393654366589
best_error: 3.5660802483181038
best_error: 3.5660800530608987
best_error: 3.510699508759156
best_error: 3.510699348727932
best_error: 3.455634456144814
best_error: 3.4556344180192506
best_error: 3.455421929436128
best_error: 3.455421904687844
best_error: 3.454681598959659
best_error: 3.4546815959610337
best_error: 3.4545788051807342
best_error: 3.454578802084654
best_error: 3.4545291064793715
best_error: 3.454529105696287
best_error: 3.4545291043893576
best_error: 3.4543254377976194
best_error: 3.454325423046311
best_error: 3.454108531121986
best_error: 3.454108516807303
best_error: 3.453423372801451
best_error: 3.453423361177465
best_error: 3.4498994449556277
best_error: 3.4498994364551474
best_error: 3.4312720901252702
best_error: 3.431272087284788
best_error: 3.3882993783836564
best_error: 3.388299363925219
best_error: 3.1817442931430513
best_error: 3.181744100208062
best_error: 3.1710247542921577
best_error: 3.171024583446191
best_error: 3.0519313524379434
best_error: 3.051931222592966
best_error: 2.6122887019349674
best_error: 2.6122884465997127
best_error: 2.494503185736174
best_error: 2.494503181554388
best_error: 2.4940192185757395
best_error: 2.4940191980930884
best_error: 2.494008783429659
best_error: 2.494008761018665
best_error: 2.4940085572395794
best_error: 2.4940085348210363
best_error: 2.4940085303868154
best_error: 2.4940085076028797
best_error: 2.466367175229189
best_error: 2.466367121741694
best_error: 2.4263859875243363
best_error: 2.4263859528486185
best_error: 2.412115826112535
best_error: 2.4121158000791674
best_error: 2.4067009949650817
best_error: 2.4067009864779525
best_error: 2.4044180706170195
best_error: 2.4044180260401036
best_error: 2.4039205191994144
best_error: 2.4039205125783134
best_error: 2.403708812471547
best_error: 2.4037088109710143
best_error: 2.4037088084569467
best_error: 2.403609176955606
best_error: 2.4036091716020347
best_error: 2.403167455595002
best_error: 2.4031674516621293
best_error: 2.4031674513885917
best_error: 2.401436899162428
best_error: 2.401436897101236
best_error: 2.4014368949354825
best_error: 2.3951319579798063
best_error: 2.39513194611942
best_error: 2.323150576789926
best_error: 2.3231505110691897
best_error: 2.3035498865948885
best_error: 2.303549722893874
best_error: 2.262037468865019
best_error: 2.26203727317075
best_error: 2.1974682788299327
best_error: 2.197468194146767
best_error: 2.156154886396874
best_error: 2.156154701179109
best_error: 2.138327878374349
best_error: 2.138327865619714
best_error: 2.1343649458968965
best_error: 2.134364943616561
best_error: 2.1339089244534732
best_error: 2.133908923119883
best_error: 2.133900584882928
best_error: 2.1339005839760845
best_error: 2.1338696159406636
best_error: 2.1338696146409672
best_error: 2.1338111552914394
best_error: 2.133811152392828
best_error: 2.133626442434426
best_error: 2.1336264326693914
best_error: 2.133344399767845
best_error: 2.13334438570171
best_error: 2.131075967180959
best_error: 2.1310759417621887
best_error: 2.127666971609442
best_error: 2.1276669531132573
best_error: 2.125418286768156
best_error: 2.12541828255974
best_error: 2.1240335606196235
best_error: 2.1240335220623003
best_error: 2.1225594148663647
best_error: 2.12255936795905
best_error: 2.1169106893384497
best_error: 2.1169106667925752
best_error: 2.1033547950049947
best_error: 2.1033547941158557
best_error: 2.1033547934510155
best_error: 2.1016486894369697
best_error: 2.1016486690362233
best_error: 2.101644283957087
best_error: 2.1016442621170968
best_error: 2.1013542313066567
best_error: 2.1013542139220016
best_error: 2.0989177698233252
best_error: 2.098917760342846
best_error: 2.0981233261990817
best_error: 2.098123292620905
best_error: 2.0972823375422194
best_error: 2.0972823327340446
best_error: 2.096788649503347
best_error: 2.0967886324969895
best_error: 2.0963228062664494
best_error: 2.0963228022098175
best_error: 2.096177432458178
best_error: 2.0961774323384414
best_error: 2.096177428911901
best_error: 2.0960718401252474
best_error: 2.096071836016547
best_error: 2.095784455700668
best_error: 2.0957844552441416
best_error: 2.0957804639706334
best_error: 2.095780463719054
best_error: 2.095780463679118
best_error: 2.0957804634922734
best_error: 2.095743112217962
best_error: 2.0957431119704224
best_error: 2.095743111901633
best_error: 2.095633534774963
best_error: 2.095633533815358
best_error: 2.095554972516688
best_error: 2.0955549704478393
best_error: 2.095547913352863
best_error: 2.0955479116638553
best_error: 2.095545343430585
best_error: 2.095545339066804
best_error: 2.095539130081799
best_error: 2.0955391273436748
best_error: 2.095525087685291
best_error: 2.0955250873557745
best_error: 2.095481455313588
best_error: 2.095481455196129
best_error: 2.0953835457422136
best_error: 2.095383541554631
best_error: 2.095304775573738
best_error: 2.0953047726548975
best_error: 2.0951861858428047
best_error: 2.095186185273665
best_error: 2.0951734747018578
best_error: 2.095173474201219
best_error: 2.09515469792408
best_error: 2.0951546954431475
best_error: 2.0951327682512484
best_error: 2.095132766741876
best_error: 2.0950249456859056
best_error: 2.095024943796097
best_error: 2.094796168614385
best_error: 2.0947961569828935
best_error: 2.0944311088516505
best_error: 2.09443110153401
best_error: 2.094113014540415
best_error: 2.0941130139848125
best_error: 2.0938967440552094
best_error: 2.0938967438146383
best_error: 2.0938967435828513
best_error: 2.093692850852894
best_error: 2.093692850672011
best_error: 2.093692850584871
best_error: 2.0936928505478702
best_error: 2.0935366302007177
best_error: 2.0935366298366365
best_error: 2.0935038074276062
best_error: 2.0935038064772837
best_error: 2.093500789780609
best_error: 2.0935007896319506
best_error: 2.0935006286730022
best_error: 2.093500628446421
best_error: 2.0935003694924728
best_error: 2.0935003690863763
best_error: 2.0935002124794035
best_error: 2.0935002122666733
best_error: 2.0934999962350935
best_error: 2.0934999960243315
best_error: 2.093499756105418
best_error: 2.0934997560749133
best_error: 2.0934997560043165
best_error: 2.0934991219136605
best_error: 2.093499121266665
best_error: 2.0934966726481194
best_error: 2.0934966719566095
best_error: 2.093494122431015
best_error: 2.0934941198274126
best_error: 2.093487551599907
best_error: 2.0934875488665927
best_error: 2.093467686797617
best_error: 2.093467678668345
best_error: 2.093440557059879
best_error: 2.0934405513914527
best_error: 2.093227540985706
best_error: 2.0932275405060126
best_error: 2.0932275387213495
best_error: 2.0928435653938497
best_error: 2.092843564911905
