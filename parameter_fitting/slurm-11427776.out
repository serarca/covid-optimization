ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.656273949756674
best_error: 22.65627392759046
best_error: 22.656273894292852
best_error: 18.033744076725345
best_error: 18.03374387266013
best_error: 12.915321708579915
best_error: 12.915321450724207
best_error: 10.586728105754933
best_error: 10.58672810183941
best_error: 10.501725787713173
best_error: 10.501725776665516
best_error: 10.374338381714136
best_error: 10.374338364255077
best_error: 9.730929373290808
best_error: 9.730929345470562
best_error: 9.666108707638045
best_error: 9.666108679780415
best_error: 8.320941498570889
best_error: 8.32094149774677
best_error: 8.29524070294343
best_error: 8.295240696606331
best_error: 8.169055773613445
best_error: 8.169055763141372
best_error: 7.682857903739648
best_error: 7.682857836663204
best_error: 2.534627240884133
best_error: 2.5346271742919964
best_error: 2.390694544153121
best_error: 2.3906945079629676
best_error: 2.3728033108057778
best_error: 2.3728033103535155
best_error: 2.3728033037261635
best_error: 2.3728032953715625
best_error: 2.372546244421589
best_error: 2.372546243963794
best_error: 2.372546237437879
best_error: 2.372546228914934
best_error: 2.3720010454608267
best_error: 2.372001045132086
best_error: 2.372001038872766
best_error: 2.372001029817487
best_error: 2.3719783590431045
best_error: 2.3719783585931635
best_error: 2.371978351934206
best_error: 2.3719783436288218
best_error: 2.371326278747968
best_error: 2.371326278291781
best_error: 2.371326271686223
best_error: 2.3713262633012766
best_error: 2.3686986733693978
best_error: 2.368698672935086
best_error: 2.3686986665102556
best_error: 2.3686986577925153
best_error: 2.3607637190506017
best_error: 2.360763718403298
best_error: 2.360763713188041
best_error: 2.3607637029483755
best_error: 2.3550030641099253
best_error: 2.355003006274165
best_error: 2.3140673726000403
best_error: 2.3140673227808084
best_error: 2.228792816518384
best_error: 2.228792812082815
best_error: 2.2287928092042146
best_error: 2.228792801170687
best_error: 2.0908198450250475
best_error: 2.090819785064403
best_error: 2.0376105202118127
best_error: 2.037610503310268
best_error: 2.006385595909692
best_error: 2.0063855856554333
best_error: 2.0033308387079445
best_error: 2.0033307334917665
best_error: 2.0032208116210346
best_error: 1.9819089276114934
best_error: 1.9819089221103883
best_error: 1.9819089134386485
best_error: 1.9817245410099011
best_error: 1.9817245370573409
best_error: 1.9817245268537542
best_error: 1.9811247929166385
best_error: 1.9811247924444473
best_error: 1.9811247787880233
best_error: 1.9810107122265215
best_error: 1.9810107117494566
best_error: 1.9810106981061952
best_error: 1.98057450330349
best_error: 1.9805745028146984
best_error: 1.9805744892170514
best_error: 1.979542748253876
best_error: 1.9795427475375407
best_error: 1.9795427343243719
best_error: 1.9748133832627905
best_error: 1.9748133827226655
best_error: 1.974813369616403
best_error: 1.9746043488837755
best_error: 1.9746043483506202
best_error: 1.9746043352385234
best_error: 1.9740017120521673
best_error: 1.9740017099334402
best_error: 1.9740016983780515
best_error: 1.9739743905426983
best_error: 1.9739743901556834
best_error: 1.9739743768736844
best_error: 1.9739741414245655
best_error: 1.9739741413896261
best_error: 1.973974127753205
best_error: 1.973973627077525
best_error: 1.9739736269683268
best_error: 1.9739736134072376
best_error: 1.9739735798114222
best_error: 1.9739735796225302
best_error: 1.9739735661408258
best_error: 1.9739734886824525
best_error: 1.973973488358044
best_error: 1.9739734750102824
best_error: 1.9739728435705224
best_error: 1.9739728431718695
best_error: 1.973972829899533
best_error: 1.973970696458891
best_error: 1.9739706957306493
best_error: 1.9739706827888832
best_error: 1.9739649910743537
best_error: 1.9739649897009108
best_error: 1.973964977402806
best_error: 1.9739546326458182
best_error: 1.9739546305368985
best_error: 1.973954618973719
best_error: 1.9739282635783564
best_error: 1.9739282609761384
best_error: 1.9739282499081472
best_error: 1.9737792467128294
best_error: 1.9737792428394227
best_error: 1.973779233063583
best_error: 1.9736629555041458
best_error: 1.9736629480461867
best_error: 1.9736629420929575
best_error: 1.9735758744895253
best_error: 1.9735758675998423
best_error: 1.9735758610700251
best_error: 1.9732550072051902
best_error: 1.9732550050302566
best_error: 1.9732549937047819
best_error: 1.9730502971602168
best_error: 1.9730502950301168
best_error: 1.9730502838155493
best_error: 1.9729346325557555
best_error: 1.9729346289612832
best_error: 1.9729346193353152
best_error: 1.972680405676579
best_error: 1.9726804006874272
best_error: 1.9726803924585432
best_error: 1.9719586934868698
best_error: 1.9719586837790604
best_error: 1.971958680528991
best_error: 1.960969167697223
best_error: 1.9609691487321934
best_error: 1.9471188799337076
best_error: 1.9471187529290108
best_error: 1.946937529674908
best_error: 1.9467818506083614
best_error: 1.944191225079825
best_error: 1.944191224066217
best_error: 1.944191213810826
best_error: 1.9420518915899276
best_error: 1.942051891431564
best_error: 1.942051880456181
best_error: 1.9404521301489337
best_error: 1.94045210388399
best_error: 1.9403267607030066
best_error: 1.9403267350699045
best_error: 1.9373321088270612
best_error: 1.9373320867955401
best_error: 1.9346268304817937
best_error: 1.9346268184248558
best_error: 1.9345765792569045
best_error: 1.9344576444003838
best_error: 1.9344576362648513
best_error: 1.9344576340557262
best_error: 1.934411274326682
best_error: 1.934411254171847
best_error: 1.9344110894532358
best_error: 1.9341706507809027
best_error: 1.934170637441907
best_error: 1.9341705298543292
best_error: 1.9341603858974457
best_error: 1.9341603794215831
best_error: 1.9341603760521462
best_error: 1.9340945282895428
best_error: 1.934094523067043
best_error: 1.9340944759396754
best_error: 1.9340672869290827
best_error: 1.9340672861675912
best_error: 1.9340672840965192
best_error: 1.9340672505905372
best_error: 1.9340612820793437
best_error: 1.9340612776528128
best_error: 1.9340612310867653
best_error: 1.934061020239009
best_error: 1.9340610199634198
best_error: 1.9340610163214753
best_error: 1.934060972600076
best_error: 1.9340607952461004
best_error: 1.9340607949304778
best_error: 1.934060791408764
best_error: 1.9340607483272212
best_error: 1.9340594010383614
best_error: 1.9340594003406766
best_error: 1.9340593979319436
best_error: 1.9340593616669528
best_error: 1.9340569400354581
best_error: 1.9340569392163118
best_error: 1.934056937190187
best_error: 1.9340569039797555
best_error: 1.93404990324821
best_error: 1.9340499024091684
best_error: 1.934049900636636
best_error: 1.9340498731753715
best_error: 1.9340388188585305
best_error: 1.9340388181018568
best_error: 1.9340388162202717
best_error: 1.9340387920444368
best_error: 1.9339456862670434
best_error: 1.9339456856202397
best_error: 1.933945683750211
best_error: 1.9339456721358566
best_error: 1.9336979868345086
best_error: 1.9336979793787117
best_error: 1.9336979719393796
best_error: 1.9334225548306012
best_error: 1.9334225456006033
best_error: 1.9334225447898103
best_error: 1.9330799590476255
best_error: 1.9330799537053915
best_error: 1.9330799489105346
best_error: 1.9322949542908257
best_error: 1.9322949542273178
best_error: 1.9322949439800023
best_error: 1.932285566752603
best_error: 1.9322855667055914
best_error: 1.9322855564386487
best_error: 1.9322688763484146
best_error: 1.9322688752593562
best_error: 1.932268866019855
best_error: 1.9322499604755057
best_error: 1.9322499581963561
best_error: 1.9322499501405084
best_error: 1.9321750693199784
best_error: 1.9321750628962115
best_error: 1.932175058989583
best_error: 1.9320715473924504
best_error: 1.9320715405014461
best_error: 1.9320715372512638
best_error: 1.9320652637631435
best_error: 1.9320652593335337
best_error: 1.932065253803954
best_error: 1.9320589649111468
best_error: 1.932058958591549
best_error: 1.9320589548574614
best_error: 1.9320570300941546
best_error: 1.9320570249301239
best_error: 1.9320570201008287
best_error: 1.9319888615946366
best_error: 1.9319888576471715
best_error: 1.9319888515313142
best_error: 1.9319009585270521
best_error: 1.931900955919413
best_error: 1.9319009484918144
best_error: 1.9318810117087615
best_error: 1.931881008310429
best_error: 1.9318810017061532
best_error: 1.9318598782901908
best_error: 1.9318598745978883
best_error: 1.9318598683197847
best_error: 1.9318571195485033
best_error: 1.9318571166587148
best_error: 1.9318571095751733
best_error: 1.9318543433183542
best_error: 1.9318543432874804
best_error: 1.9318543425211347
best_error: 1.9318543333221887
best_error: 1.9318505089969642
best_error: 1.9318505085917643
best_error: 1.931850508297451
best_error: 1.9318504990071497
best_error: 1.9318160325949443
best_error: 1.9318160307950287
best_error: 1.9318160225966168
best_error: 1.9317057143340812
best_error: 1.931705707701983
best_error: 1.9317057043888972
best_error: 1.9316600541006324
best_error: 1.9316200020416372
best_error: 1.9316199952097994
best_error: 1.9316199921839605
best_error: 1.9315795254465535
best_error: 1.9315795200702999
best_error: 1.9315795111476706
best_error: 1.93126404936044
best_error: 1.9312640294064645
best_error: 1.9308265351269192
best_error: 1.9308265206629616
best_error: 1.9300095219466136
best_error: 1.9300095183650223
best_error: 1.929992753606961
best_error: 1.9298076867249208
best_error: 1.929807677185056
best_error: 1.9298073775085864
best_error: 1.9291529605243045
best_error: 1.9291529365361704
best_error: 1.9268953265258923
best_error: 1.9268953170869807
best_error: 1.9268953157901145
best_error: 1.9238979748460279
best_error: 1.9238979723604475
best_error: 1.9238979641514666
best_error: 1.917101407380716
best_error: 1.9171013786040572
best_error: 1.9019344193769918
best_error: 1.9019343901199657
best_error: 1.8976074138304264
best_error: 1.8976073835734926
best_error: 1.897074247355348
best_error: 1.8970742310060773
best_error: 1.8921716231022365
best_error: 1.89217162174933
best_error: 1.8921716158426267
best_error: 1.8889891129487861
best_error: 1.888989111539698
best_error: 1.8889891066039053
best_error: 1.864220088486802
best_error: 1.8642200547090007
best_error: 1.84855505811515
best_error: 1.8485550315703714
best_error: 1.840144790275385
best_error: 1.8401447664054598
best_error: 1.8312074367208524
best_error: 1.831207428004121
best_error: 1.8306177418984881
best_error: 1.8306177384196756
best_error: 1.8305710985676737
best_error: 1.8305710981530947
best_error: 1.830571097936993
best_error: 1.8305710976306075
best_error: 1.8305593953876087
best_error: 1.830559394656224
best_error: 1.8305593944524796
best_error: 1.8305589286818766
best_error: 1.8305589280375736
best_error: 1.83055892774998
best_error: 1.8305587902096707
best_error: 1.830558789686213
best_error: 1.8305587896335864
best_error: 1.8305587892781299
best_error: 1.8305586590247171
best_error: 1.8305586585901918
best_error: 1.8305586584509823
best_error: 1.8305586580927986
