ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.098436630088354
best_error: 24.098436103592864
best_error: 4.898243190835457
best_error: 4.898243190132446
best_error: 4.898145565985263
best_error: 4.898145565980331
best_error: 4.898145565968012
best_error: 4.897753987448757
best_error: 4.897753987443769
best_error: 4.897753987431458
best_error: 4.896171309851863
best_error: 4.896171309846649
best_error: 4.8961713098343695
best_error: 4.889558266816578
best_error: 4.889558266810282
best_error: 4.889558266798235
best_error: 4.857337064650857
best_error: 4.857337064634377
best_error: 4.8573370646273215
best_error: 4.792899045020246
best_error: 4.792899044913368
best_error: 4.414674339120728
best_error: 4.414674327884488
best_error: 4.096606340546136
best_error: 4.096606312503027
best_error: 3.9395816879264087
best_error: 3.9395816560638095
best_error: 3.42367103094237
best_error: 3.423670935887888
best_error: 3.268016154673587
best_error: 3.268016039560484
best_error: 3.1275353228130176
best_error: 3.1275351957623267
best_error: 3.043758634452401
best_error: 3.043758526603292
best_error: 3.000571226753789
best_error: 3.000571070364478
best_error: 2.9122354201211005
best_error: 2.9122353575178153
best_error: 2.8972051231032596
best_error: 2.8972051124622307
best_error: 2.8972051121482805
best_error: 2.890142379502326
best_error: 2.890142364883744
best_error: 2.8464239054465055
best_error: 2.846423871278568
best_error: 2.7841429608805703
best_error: 2.784142928803794
best_error: 2.7758026963242846
best_error: 2.775802640044993
best_error: 2.766464983443062
best_error: 2.766464919522345
best_error: 2.7190832800449116
best_error: 2.719083257263638
best_error: 2.715584513907981
best_error: 2.715584503189009
best_error: 2.706847302457896
best_error: 2.7068472646610435
best_error: 2.6650107073296154
best_error: 2.665010561302584
best_error: 2.583067467467141
best_error: 2.5830673294509534
best_error: 2.5013645563648765
best_error: 2.5013644567829516
best_error: 2.442890600372728
best_error: 2.4428903927492063
best_error: 2.407595117713627
best_error: 2.4075949765361258
best_error: 2.161622866527961
best_error: 2.1616228636775157
best_error: 2.1616228627398386
best_error: 2.1574774130277588
best_error: 2.1574773101311893
best_error: 2.0814202435986604
best_error: 2.081420118221864
best_error: 2.0182700627622405
best_error: 2.018269863961824
best_error: 2.0033618681509795
best_error: 2.003361857146714
best_error: 2.003361732423569
best_error: 1.892942207928477
best_error: 1.892942132768637
best_error: 1.8516972590947316
best_error: 1.8516971150846198
best_error: 1.8457925728877067
best_error: 1.8457925261717472
best_error: 1.8455573683505964
best_error: 1.8455573228077187
best_error: 1.8428858600055802
best_error: 1.8428858539915765
best_error: 1.8415089807685712
best_error: 1.8415089693039834
best_error: 1.840738984527239
best_error: 1.8407389813143658
best_error: 1.8401876241484745
best_error: 1.840187619495494
best_error: 1.8376161826241968
best_error: 1.8376161254479575
best_error: 1.8327216889649287
best_error: 1.8327216062584364
best_error: 1.8274722453657923
best_error: 1.8274722221227149
best_error: 1.815036820081935
best_error: 1.8150368053703727
best_error: 1.8104388243469753
best_error: 1.810438818228194
best_error: 1.8100582613277307
best_error: 1.8100582547238142
best_error: 1.809761605063536
best_error: 1.8097615983809385
best_error: 1.8094738750294959
best_error: 1.8094738631326264
best_error: 1.8085682652514055
best_error: 1.8085682444538913
best_error: 1.807104103554722
best_error: 1.8071040755900112
best_error: 1.8057294643387416
best_error: 1.8057294417897591
best_error: 1.8044652677817448
best_error: 1.804465254994042
best_error: 1.8043337899065142
best_error: 1.8043337593583217
best_error: 1.803933818599383
best_error: 1.8039338159495133
best_error: 1.8038742201427191
best_error: 1.8038742166724346
best_error: 1.803867258366715
best_error: 1.8038672572380705
best_error: 1.8038643174600693
best_error: 1.8038643173532674
best_error: 1.803864316916696
best_error: 1.8038588606887496
best_error: 1.8038588595192386
best_error: 1.8038516769491906
best_error: 1.8038516744774997
best_error: 1.8038379661466926
best_error: 1.8038379627609205
best_error: 1.8037868408773905
best_error: 1.8037868343258636
best_error: 1.8036747602571446
best_error: 1.803674750803876
best_error: 1.8033590646713678
best_error: 1.803359048225733
best_error: 1.802613735806233
best_error: 1.8026137120245722
best_error: 1.802017308451109
best_error: 1.8020172700886692
best_error: 1.8011166368668685
best_error: 1.8011166061906814
best_error: 1.7992037877692217
best_error: 1.799203768182729
best_error: 1.7980809331528764
best_error: 1.7980809303007206
best_error: 1.7970062710650143
best_error: 1.7970062475349773
best_error: 1.7966498148317052
best_error: 1.796649777563589
best_error: 1.7965334009439582
best_error: 1.7965333711599718
best_error: 1.7954321362202816
best_error: 1.7954321012992565
best_error: 1.7931417288522455
best_error: 1.7931416979730037
best_error: 1.7903664015463772
best_error: 1.7903663831532697
best_error: 1.7896643453061216
best_error: 1.7896643253199929
best_error: 1.7894839605057535
best_error: 1.7894839589265268
best_error: 1.789483958110865
best_error: 1.7887285620823732
best_error: 1.7887285612045885
best_error: 1.7887285604613246
best_error: 1.7881131583933174
best_error: 1.7881131577318867
best_error: 1.7881131494979396
best_error: 1.787944576368106
best_error: 1.7879445441784623
best_error: 1.7874645467768362
best_error: 1.7874645312975388
best_error: 1.7870378514351737
best_error: 1.787037850563909
best_error: 1.7867867811836602
best_error: 1.7867867798154413
best_error: 1.7866233671113512
best_error: 1.7866233664434645
best_error: 1.7865855347527413
best_error: 1.7865855347503885
best_error: 1.7865855341357837
best_error: 1.7864706130932846
best_error: 1.7864706130453138
best_error: 1.7864706124701868
best_error: 1.7860415633982536
best_error: 1.7860415600255488
best_error: 1.7845404887602132
best_error: 1.7845404719125058
best_error: 1.7839351065899267
best_error: 1.7839350854582654
best_error: 1.783434665590626
best_error: 1.7834346465772664
best_error: 1.78207994315329
best_error: 1.7820799233192213
best_error: 1.7795021090890717
best_error: 1.7795021078439668
best_error: 1.778696704446629
best_error: 1.7786967039928223
best_error: 1.7786967037343897
best_error: 1.7776143508405182
best_error: 1.777614338235316
best_error: 1.776830483196421
best_error: 1.776830458525704
best_error: 1.7689301663680115
best_error: 1.7689301583003612
best_error: 1.7686814276920757
best_error: 1.7686814029365903
best_error: 1.7657864545045812
best_error: 1.765786445287573
best_error: 1.7649320325563622
best_error: 1.764932030729028
best_error: 1.7644651423401265
best_error: 1.7644651422683173
best_error: 1.7638825873344934
best_error: 1.7638825670395357
best_error: 1.763696164491087
best_error: 1.7636961593090315
best_error: 1.7636692987246838
best_error: 1.7636692969013676
best_error: 1.7636620682424407
best_error: 1.7636620681721815
best_error: 1.7636620680545654
best_error: 1.7636596157937552
best_error: 1.7636596155923723
best_error: 1.763647154412102
best_error: 1.7636471527926891
best_error: 1.7636219221701932
best_error: 1.7636219198197285
best_error: 1.7635862334518533
best_error: 1.7635862310819732
best_error: 1.763581336567444
best_error: 1.7635813347246005
best_error: 1.7635704363273947
best_error: 1.7635704358049793
best_error: 1.7635654755692054
best_error: 1.7635654753246979
best_error: 1.7635652064765668
best_error: 1.763565205996767
best_error: 1.7635643378970687
best_error: 1.763564337850267
best_error: 1.763564337827531
best_error: 1.7635639099183311
best_error: 1.7635639091867206
best_error: 1.763563427573292
best_error: 1.7635634267599287
best_error: 1.763562034952901
best_error: 1.7635620348502044
best_error: 1.7635609193549373
best_error: 1.7635609186793832
