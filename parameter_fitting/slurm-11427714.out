ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 20.843781475619508
best_error: 20.843780641479583
best_error: 5.036669386456529
best_error: 5.036669386171276
best_error: 5.036660215290983
best_error: 5.036660215288687
best_error: 5.036660215287128
best_error: 5.036623506341475
best_error: 5.036623506339172
best_error: 5.036623506337616
best_error: 5.036476280642421
best_error: 5.036476280640091
best_error: 5.036476280638551
best_error: 5.0358810546131885
best_error: 5.0358810546107415
best_error: 5.03588105460927
best_error: 5.03339317151387
best_error: 5.033393171510868
best_error: 5.03339317150974
best_error: 5.021222069499827
best_error: 5.021222069491475
best_error: 4.995028797438155
best_error: 4.99502879737187
best_error: 4.713806206318284
best_error: 4.713806190934742
best_error: 4.288408608361819
best_error: 4.2884085455110155
best_error: 4.194018342444084
best_error: 4.1940181157378404
best_error: 3.8456819011122882
best_error: 3.8456818869654565
best_error: 3.8456818444254246
best_error: 3.842677672416796
best_error: 3.8426776125642554
best_error: 3.794670939104933
best_error: 3.7946708883563014
best_error: 3.7107316411278917
best_error: 3.710731469059651
best_error: 3.611540703748405
best_error: 3.6115405170581147
best_error: 3.57498710222147
best_error: 3.5749870667733865
best_error: 3.5362726347745395
best_error: 3.5362725488360227
best_error: 3.502273532224211
best_error: 3.5022734513832416
best_error: 3.490037454642118
best_error: 3.4900373957885695
best_error: 3.4870151701491405
best_error: 3.4870151505778124
best_error: 3.486365539435715
best_error: 3.48636553908517
best_error: 3.4863655374280262
best_error: 3.4863263508169755
best_error: 3.4863263483685283
best_error: 3.485976425688636
best_error: 3.485976412317913
best_error: 3.485448786507744
best_error: 3.48544875913373
best_error: 3.4840006200751787
best_error: 3.4840005736175836
best_error: 3.479945577458155
best_error: 3.479945506694683
best_error: 3.4688075521931165
best_error: 3.468807446921464
best_error: 3.3743113649148353
best_error: 3.3743112207249455
best_error: 2.6912347344919287
best_error: 2.691234534317546
best_error: 2.6909195472835012
best_error: 2.690919501424322
best_error: 2.6145743237928962
best_error: 2.6145743185847192
best_error: 2.614574314069419
best_error: 2.6145743117502334
best_error: 2.6145630442494188
best_error: 2.614563039036412
best_error: 2.61456303452622
best_error: 2.6145630322066573
best_error: 2.605353268400043
best_error: 2.605353216391198
best_error: 2.6053531957389002
best_error: 2.6053481491383548
best_error: 2.6053480946751817
best_error: 2.457598508691955
best_error: 2.4575984900436687
best_error: 2.4313634281219696
best_error: 2.4313633869645113
best_error: 2.4237730244269837
best_error: 2.423772960301023
best_error: 2.41832448230369
best_error: 2.4183244104157784
best_error: 2.416287843471353
best_error: 2.416287784474899
best_error: 2.4152615079415174
best_error: 2.4152614432499058
best_error: 2.412421967842772
best_error: 2.4124219427545666
best_error: 2.4109571195272643
best_error: 2.410957098526296
best_error: 2.407100638483938
best_error: 2.4071006241490727
best_error: 2.4007385395796903
best_error: 2.40073846615435
best_error: 2.3529568500625957
best_error: 2.3529567097731876
best_error: 2.3347944250354224
best_error: 2.334794273919603
best_error: 2.282008817981525
best_error: 2.2820087316081104
best_error: 2.230869725020375
best_error: 2.230869603838711
best_error: 2.1905277844841775
best_error: 2.190527708089822
best_error: 2.1805905515358983
best_error: 2.1805904812611807
best_error: 2.1723679477036355
best_error: 2.172367889753408
best_error: 2.1555113996165955
best_error: 2.155511386335886
best_error: 2.1508091312716675
best_error: 2.150809114339959
best_error: 2.14968192864195
best_error: 2.149681925667322
best_error: 2.149578560559586
best_error: 2.149578559500789
best_error: 2.1495520852205
best_error: 2.1495520851776377
best_error: 2.1495520851221106
best_error: 2.1495520847958143
best_error: 2.149537209111981
best_error: 2.1495372086372777
best_error: 2.149519946204762
best_error: 2.1495199456260146
best_error: 2.1494538310804177
best_error: 2.1494538288399867
best_error: 2.1486649823333006
best_error: 2.1486649713075567
best_error: 2.146776702823662
best_error: 2.1467766754890927
best_error: 2.144882813303362
best_error: 2.144882780484358
best_error: 2.143622800683475
best_error: 2.143622759004112
best_error: 2.139237910178372
best_error: 2.1392378949798823
best_error: 2.135819846218747
best_error: 2.1358198025920125
best_error: 2.1351141636129123
best_error: 2.1351141627713397
best_error: 2.1348215351680566
best_error: 2.1348215330699096
best_error: 2.1347665724748794
best_error: 2.134766570900896
best_error: 2.1347418326145786
best_error: 2.134741831539301
best_error: 2.134734058956599
best_error: 2.13473405894639
best_error: 2.1347340588564303
best_error: 2.134730497310972
best_error: 2.1347304969589693
best_error: 2.134728328236983
best_error: 2.1347283275668265
best_error: 2.134727576799987
best_error: 2.134727576271526
best_error: 2.1347263416780855
best_error: 2.1347263414170974
best_error: 2.134723793168536
best_error: 2.1347237926943303
best_error: 2.134721016505585
best_error: 2.134721015452821
best_error: 2.1347178652876706
best_error: 2.134717864530119
best_error: 2.1347099463450294
best_error: 2.1347099452706355
best_error: 2.1347007340052415
best_error: 2.1347007320247537
best_error: 2.13462999874764
best_error: 2.1346299944342673
best_error: 2.134525452700595
best_error: 2.1345254490356753
best_error: 2.134122929154277
best_error: 2.13412292310655
best_error: 2.1339749569595843
best_error: 2.133974956575693
best_error: 2.133672308381028
best_error: 2.133672308199428
best_error: 2.133264310210694
best_error: 2.133264310166088
best_error: 2.1332643099682107
best_error: 2.1332500087187056
best_error: 2.1332500086788877
best_error: 2.1332461244124055
best_error: 2.1332461237962668
best_error: 2.133244113358408
best_error: 2.1332441133221485
best_error: 2.1332441133099462
best_error: 2.13324297694374
best_error: 2.133242976102375
best_error: 2.133241292608613
best_error: 2.133241291853217
best_error: 2.1332379611772847
best_error: 2.1332379603544767
best_error: 2.1332369580386707
best_error: 2.133236957065255
best_error: 2.133235724071807
best_error: 2.1332357218470333
best_error: 2.133232221385941
best_error: 2.133232220151502
best_error: 2.133230830288151
best_error: 2.1332308296505995
best_error: 2.133230605952922
best_error: 2.1332306058454567
best_error: 2.1332305611432556
best_error: 2.1332305611283484
best_error: 2.1332305499785265
best_error: 2.133230549848162
best_error: 2.133230542104024
best_error: 2.13323054198144
best_error: 2.1332305395179842
best_error: 2.1332305394225455
best_error: 2.1332305281049018
best_error: 2.1332305280224046
best_error: 2.1332305265123135
best_error: 2.1332305264298554
best_error: 2.133230526407198
