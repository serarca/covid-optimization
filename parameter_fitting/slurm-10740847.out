ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.226581489777947
best_error: 10.226581484172932
best_error: 5.908926061773326
best_error: 5.908925463364589
best_error: 5.825305173949174
best_error: 5.825304727123283
best_error: 4.957835126877596
best_error: 4.957835126877552
best_error: 4.957835120129615
best_error: 4.9578221225387535
best_error: 4.957822109535279
best_error: 4.8669018553858825
best_error: 4.8669018553858345
best_error: 4.866901847492453
best_error: 4.849158685342463
best_error: 4.849158685342406
best_error: 4.836466091528364
best_error: 4.836466091528316
best_error: 4.83646608462319
best_error: 4.785065510154514
best_error: 4.785065510154459
best_error: 4.529104190341348
best_error: 4.529104190341288
best_error: 4.441814231924073
best_error: 4.441814231923994
best_error: 4.162000817432157
best_error: 4.1620005757439325
best_error: 3.940956173749845
best_error: 3.9409560417999354
best_error: 3.9092406293951187
best_error: 3.9092406188220665
best_error: 3.9092406046667163
best_error: 3.906546665520754
best_error: 3.9065466655207293
best_error: 3.9065466645143023
best_error: 3.901117586802548
best_error: 3.901117586802523
best_error: 3.9011175857369373
best_error: 3.9007975641841734
best_error: 3.900797564184146
best_error: 3.9007975631137994
best_error: 3.9007773106436368
best_error: 3.9007773002247883
best_error: 3.9007636285511422
best_error: 3.9007636285511142
best_error: 3.9007636274799404
best_error: 3.900756431920398
best_error: 3.900756421636939
best_error: 3.90075521936019
best_error: 3.9007552193601622
best_error: 3.9007552182891003
best_error: 3.9007513711813817
best_error: 3.900751360894383
best_error: 3.9007513245266794
best_error: 3.9007513245266536
best_error: 3.900751323455564
best_error: 3.9007273616755884
best_error: 3.900727361675564
best_error: 3.900727360603384
best_error: 3.9005796546090568
best_error: 3.900579645673753
best_error: 3.8997574640329473
best_error: 3.8997574588341957
best_error: 3.8983174569565158
best_error: 3.898317456956489
best_error: 3.898317455531877
best_error: 3.8909589006923473
best_error: 3.890958900692325
best_error: 3.8909588979571113
best_error: 3.8819935479487073
best_error: 3.881993547948679
best_error: 3.8819935464569686
best_error: 3.875318583798456
best_error: 3.8753185837984314
best_error: 3.875318580376023
best_error: 3.848965681690105
best_error: 3.848965681690065
best_error: 3.8484683271550613
best_error: 3.8484683271550226
best_error: 3.847749452714428
best_error: 3.847749452714388
best_error: 3.847745462284483
best_error: 3.8477454622844447
best_error: 3.8477433226641566
best_error: 3.8477433226641176
best_error: 3.8477431182495776
best_error: 3.847743118249538
best_error: 3.8048156502440627
best_error: 3.804815650244021
best_error: 3.743310224436793
best_error: 3.7433102244367586
best_error: 3.7433102192743313
best_error: 3.740947142236397
best_error: 3.740947117361979
best_error: 3.7246222565508362
best_error: 3.724622256550785
best_error: 3.7246222154016793
best_error: 3.7020219978280915
best_error: 3.7020219978280657
best_error: 3.7020219874791125
best_error: 3.7016123579698346
best_error: 3.701612355854079
best_error: 3.7016123444068594
best_error: 3.7015853890052
best_error: 3.7015853860741186
best_error: 3.7015853753760393
best_error: 3.701581068040403
best_error: 3.7015810646025056
best_error: 3.7015810543675713
best_error: 3.7015765892330403
best_error: 3.701576585511994
best_error: 3.7015765755452246
best_error: 3.6343510478937535
best_error: 3.6343510478937042
best_error: 3.634351009496933
best_error: 3.6242692241344883
best_error: 3.6242692241344425
best_error: 3.6135475186787125
best_error: 3.613547511273648
best_error: 3.613547501394196
best_error: 3.5920189333489803
best_error: 3.5920189333489456
best_error: 3.591110996725841
best_error: 3.5911109967258112
best_error: 3.590983948716747
best_error: 3.5909839487167186
best_error: 3.590972132699251
best_error: 3.5909721326992234
best_error: 3.5909665651356812
best_error: 3.5909665651356533
best_error: 3.5909636159122584
best_error: 3.5909636159122287
best_error: 3.5909616496213284
best_error: 3.5909616496213
best_error: 3.590960264214803
best_error: 3.590960264214773
best_error: 3.5909591880351326
best_error: 3.590959188035104
best_error: 3.5909583345474454
best_error: 3.5909583345474205
best_error: 3.590957944444297
best_error: 3.5909579444442685
best_error: 3.5909578627433034
best_error: 3.5909578627432754
best_error: 3.5909578393747936
best_error: 3.5909578393747683
best_error: 3.5909578338658497
best_error: 3.590957833865824
best_error: 3.5909578304265044
best_error: 3.5909578304264795
best_error: 3.590957829056092
best_error: 3.590957829056064
best_error: 3.5909578290279187
best_error: 3.5909578290278903
best_error: 3.590957829011454
best_error: 3.590957829011428
best_error: 3.5909578290094752
best_error: 3.59095782900945
best_error: 3.5909578290082056
best_error: 3.590957829008182
best_error: 3.59095782900817
