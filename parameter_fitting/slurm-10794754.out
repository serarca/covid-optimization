ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.072001989334774
best_error: 10.072001970137375
best_error: 9.757066053172762
best_error: 9.757066017033718
best_error: 5.940058340717753
best_error: 5.940058003993362
best_error: 4.5739873711906
best_error: 4.573987114024854
best_error: 4.439828737721369
best_error: 4.439828707904242
best_error: 4.4398285502220745
best_error: 4.426733392308163
best_error: 4.426733347928183
best_error: 4.426733230166402
best_error: 4.413724234346924
best_error: 4.413724177098551
best_error: 4.413724095139623
best_error: 4.012719022099529
best_error: 4.012718961975113
best_error: 3.588384532516085
best_error: 3.5883844556860134
best_error: 3.422682579095001
best_error: 3.4226825726012047
best_error: 3.422682571968881
best_error: 3.4223411061226963
best_error: 3.4223410519136386
best_error: 3.4203127646655296
best_error: 3.4203127594568543
best_error: 3.4203127574665055
best_error: 3.4202891680353966
best_error: 3.4202891175643066
best_error: 3.4199740127649796
best_error: 3.419973963393594
best_error: 3.4193599183369203
best_error: 3.419359911163491
best_error: 3.4182537367555894
best_error: 3.4182537288002406
best_error: 3.399201359196438
best_error: 3.3992013454091703
best_error: 3.3465126974282007
best_error: 3.34651266751008
best_error: 3.285290552542528
best_error: 3.285290508004472
best_error: 3.191872869446269
best_error: 3.1918728312423346
best_error: 3.191872750932048
best_error: 3.021066388731907
best_error: 3.021066353884968
best_error: 2.9521707969762097
best_error: 2.9521706949630024
best_error: 2.9491696497187063
best_error: 2.949169649626354
best_error: 2.948945853395588
best_error: 2.9489458533030746
best_error: 2.9489326242756793
best_error: 2.9489325210684685
best_error: 2.948909459406399
best_error: 2.9489094593138745
best_error: 2.948903655101887
best_error: 2.9489035518861444
best_error: 2.948897652935778
best_error: 2.948897652843302
best_error: 2.9487821552908793
best_error: 2.948782155198691
best_error: 2.9394712854942
best_error: 2.9394712853983633
best_error: 2.925377918908084
best_error: 2.9253779101799395
best_error: 2.922337270838384
best_error: 2.922337268171245
best_error: 2.9222882317875434
best_error: 2.9222882299384905
best_error: 2.922286358149216
best_error: 2.9222863564814934
best_error: 2.922277245030088
best_error: 2.9222772434092295
best_error: 2.9222419308333842
best_error: 2.922241929279484
best_error: 2.922132408032527
best_error: 2.922132407111767
best_error: 2.9220260687251947
best_error: 2.922026068624376
best_error: 2.922026068604171
best_error: 2.9220068247004085
best_error: 2.9220068246018283
best_error: 2.9220068245784923
best_error: 2.92199060805653
best_error: 2.9219906079819538
best_error: 2.921990607933922
best_error: 2.921978268021097
best_error: 2.921978267947972
best_error: 2.921978267897925
best_error: 2.9219688007016544
best_error: 2.9219688006296334
best_error: 2.9219688005780347
best_error: 2.9219557695474023
best_error: 2.9219557694985334
best_error: 2.921955769423243
best_error: 2.9219424904393025
best_error: 2.9219424903145588
best_error: 2.921935493975845
best_error: 2.9219353942754487
best_error: 2.9219329920488573
best_error: 2.921932991923662
best_error: 2.9219312108623967
best_error: 2.921931210737122
best_error: 2.9219305700686764
best_error: 2.9219305699433806
best_error: 2.9219303654515576
best_error: 2.921930365326241
best_error: 2.9219302304688606
best_error: 2.9219302303435333
best_error: 2.9219300134775166
best_error: 2.9219300133521973
best_error: 2.921930007422605
best_error: 2.921929858733242
best_error: 2.9219298586079168
best_error: 2.9219298451265203
best_error: 2.9219297984795967
best_error: 2.921929798354263
best_error: 2.9219297768077324
best_error: 2.921929776682398
best_error: 2.921929770003289
best_error: 2.921929769877951
best_error: 2.9219297655173304
best_error: 2.9219297653919982
best_error: 2.9219297530480235
best_error: 2.9219297518484355
best_error: 2.9219297517231007
best_error: 2.9219297502971275
best_error: 2.9219297501717874
