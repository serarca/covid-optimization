ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.5821315003221
best_error: 98.58213140864852
best_error: 98.58213137832921
best_error: 98.58213132769019
best_error: 19.47441991468834
best_error: 19.47441959769602
best_error: 19.474417386890206
best_error: 15.604236177902763
best_error: 15.604236176953373
best_error: 15.604236143635891
best_error: 15.497451678377695
best_error: 15.497451677322974
best_error: 15.497451639711034
best_error: 15.070916094714653
best_error: 15.070916093297654
best_error: 15.070916041189522
best_error: 13.992103863715736
best_error: 13.992103685800156
best_error: 11.453220780801976
best_error: 11.453220768110405
best_error: 11.45009035866206
best_error: 11.450090347440478
best_error: 11.08559614154765
best_error: 11.085596141546649
best_error: 11.085596135245268
best_error: 11.085596128392282
best_error: 9.43349926764635
best_error: 9.433499267646189
best_error: 9.43349925666211
best_error: 9.433499251563155
best_error: 9.2960840920148
best_error: 9.296084086011046
best_error: 9.296084082932559
best_error: 9.296084076497703
best_error: 9.146409668623138
best_error: 9.146409583168772
best_error: 8.685878113125627
best_error: 8.685878099506912
best_error: 8.630676485228104
best_error: 8.630676473344854
best_error: 8.599577445062287
best_error: 8.599577435732304
best_error: 8.599577434778391
best_error: 8.5964079355649
best_error: 8.596407926468022
best_error: 8.596407925343202
best_error: 8.596374133126702
best_error: 8.596373903055028
best_error: 8.595888490476645
best_error: 8.59588848139139
best_error: 8.595888480260921
best_error: 8.595743644540086
best_error: 8.5957434144203
best_error: 8.520830669615837
best_error: 8.520830657112182
best_error: 8.508229442519252
best_error: 8.508229412867802
best_error: 8.489515367468373
best_error: 8.489515350645378
best_error: 8.461554282949647
best_error: 8.461554262090496
best_error: 8.41299645648708
best_error: 8.412996435583645
best_error: 8.410664343494709
best_error: 8.41066432319545
best_error: 8.40953878194759
best_error: 8.409538761658311
best_error: 8.409068698016604
best_error: 8.409068638934915
best_error: 8.342650218859134
best_error: 8.342650163018938
best_error: 8.191081984283018
best_error: 8.191081928828932
best_error: 7.663434127593469
best_error: 7.663434033191685
best_error: 7.663434029060486
best_error: 7.643793037269683
best_error: 7.643793012013463
best_error: 7.341491959913137
best_error: 7.3414919231972515
best_error: 7.320029657298473
best_error: 7.320029577791216
best_error: 7.301869997849144
best_error: 7.301869918608105
best_error: 7.228832011882492
best_error: 7.228831932264796
best_error: 7.2125506493505505
best_error: 7.212550588437314
best_error: 6.834809306251797
best_error: 6.8348092769400575
best_error: 6.775443863415887
best_error: 6.775443809559969
best_error: 6.753919997387612
best_error: 6.7539199945575366
best_error: 6.753919994498347
best_error: 6.7539199898405835
best_error: 6.7305395246646995
best_error: 6.730539515365638
best_error: 6.726633257594424
best_error: 6.726633246089941
best_error: 6.726633245811444
best_error: 6.704827181225785
best_error: 6.704827145045689
best_error: 6.704827144779631
best_error: 6.704546595528004
best_error: 6.704546588442025
best_error: 6.704546588314656
best_error: 6.699181140503697
best_error: 6.699181132265817
best_error: 6.6991811315519945
best_error: 6.695967631427926
best_error: 6.695967594753665
best_error: 6.682777668516682
best_error: 6.682777635734785
best_error: 6.682777634703248
best_error: 6.674399012037004
best_error: 6.674399010093422
best_error: 6.6743990095197425
best_error: 6.6720138121586645
best_error: 6.672013781930828
best_error: 6.672013780543158
best_error: 6.671530297437881
best_error: 6.671530296351652
best_error: 6.6715302878568234
best_error: 6.670695904850094
best_error: 6.670695903850479
best_error: 6.670695903240606
best_error: 6.670695902526369
best_error: 6.670695902472906
best_error: 6.666855529898118
best_error: 6.666855528939802
best_error: 6.666855528328481
best_error: 6.666855527525547
best_error: 6.666855527376021
best_error: 6.663320014290891
best_error: 6.6633199852930565
best_error: 6.663319983828106
best_error: 6.661016589889581
best_error: 6.661016560983691
best_error: 6.661016559601519
best_error: 6.660371001317497
best_error: 6.660371000489885
best_error: 6.660370999979091
best_error: 6.660370997144275
best_error: 6.658509096937128
best_error: 6.658509068742239
best_error: 6.65850906736104
best_error: 6.6575634153742485
best_error: 6.657563387166626
best_error: 6.657563385807702
best_error: 6.656104368372581
best_error: 6.656104368028455
best_error: 6.656104365487861
best_error: 6.656104361404085
best_error: 6.65350908881482
best_error: 6.6535090614700625
best_error: 6.653509059848655
best_error: 6.650498869558945
best_error: 6.650498842207126
best_error: 6.650498840660633
best_error: 6.650146342271259
best_error: 6.650146314792782
best_error: 6.650146313510858
best_error: 6.6492465908807095
best_error: 6.649246562928864
best_error: 6.64924656179557
best_error: 6.644910853730989
best_error: 6.6449108534223935
best_error: 6.644910853176821
best_error: 6.644910852883495
best_error: 6.644910847260776
best_error: 6.644387635734757
best_error: 6.644387608161843
best_error: 6.64438760690523
best_error: 6.642659978960577
best_error: 6.642659951641261
best_error: 6.64265995047235
best_error: 6.641984382063896
best_error: 6.641984355030575
best_error: 6.641984353599886
