ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.62222805921793
best_error: 22.62222763183388
best_error: 4.612899084093154
best_error: 4.6128990827478535
best_error: 4.612458939009672
best_error: 4.612458939001004
best_error: 4.612458938977279
best_error: 4.610687201225772
best_error: 4.610687201216859
best_error: 4.610687201193164
best_error: 4.603418640115167
best_error: 4.603418640105164
best_error: 4.603418640081658
best_error: 4.5710591977065915
best_error: 4.571059197689711
best_error: 4.571059197668555
best_error: 4.2776881716911275
best_error: 4.27768817086961
best_error: 4.216549733504624
best_error: 4.216549732122932
best_error: 4.126626013591275
best_error: 4.126626011015139
best_error: 3.4412117760353715
best_error: 3.441211759118322
best_error: 3.179124824775922
best_error: 3.1791248042527873
best_error: 3.1237124793423523
best_error: 3.123712458357592
best_error: 3.113153233348129
best_error: 3.1131532175221137
best_error: 3.108500662522275
best_error: 3.108500605457548
best_error: 3.0509309720124973
best_error: 3.0509309248075933
best_error: 3.0025618052396577
best_error: 3.0025617622136975
best_error: 2.743521474602943
best_error: 2.7435214192711714
best_error: 2.7435214103146888
best_error: 2.636598392815332
best_error: 2.636598337273801
best_error: 2.636598312666347
best_error: 2.5154779089557424
best_error: 2.5154778525339214
best_error: 2.515477813226827
best_error: 2.438931099108524
best_error: 2.4389310002349105
best_error: 2.3448255147733126
best_error: 2.34482542947808
best_error: 2.3234401155816577
best_error: 2.3234399872533635
best_error: 2.13182348017937
best_error: 2.1318234791479758
best_error: 2.1318234723459764
best_error: 2.127945034375793
best_error: 2.1279450038687164
best_error: 2.1187211840751794
best_error: 2.1187211513848836
best_error: 2.084366537057793
best_error: 2.084366484984102
best_error: 1.9870715951051463
best_error: 1.987071333305111
best_error: 1.7761647544638937
best_error: 1.7761647522935555
best_error: 1.7761647519568897
best_error: 1.733667815645781
best_error: 1.733667810602232
best_error: 1.7336678088866557
best_error: 1.620470151216612
best_error: 1.6204699922111967
best_error: 1.5166143815221125
best_error: 1.5166142704123338
best_error: 1.4859152576714196
best_error: 1.4859152323459888
best_error: 1.4742856674040292
best_error: 1.4742856674008689
best_error: 1.4742856673746316
best_error: 1.4742856672802054
best_error: 1.4742856662273545
best_error: 1.4742856658931118
best_error: 1.4707446744633919
best_error: 1.470744665075146
best_error: 1.4699203796785327
best_error: 1.4699203780051977
best_error: 1.4698966485730072
best_error: 1.4698966439615502
best_error: 1.4698868969547534
best_error: 1.4698868954824373
best_error: 1.4698822276824517
best_error: 1.469882227502062
best_error: 1.4698822272808627
best_error: 1.469882227233497
best_error: 1.4698822271488488
best_error: 1.46986541913347
best_error: 1.4698654187326508
best_error: 1.4698654186664593
best_error: 1.4698654186000497
best_error: 1.4697525407775234
best_error: 1.4697525375256284
best_error: 1.469530765213055
best_error: 1.4695307578854169
best_error: 1.4692085724814836
best_error: 1.4692085615127408
best_error: 1.4688772731706188
best_error: 1.4688772591272947
best_error: 1.467399326425213
best_error: 1.4673993086101966
best_error: 1.465463161559573
best_error: 1.465463118469175
best_error: 1.4630452652671706
best_error: 1.4630452355351964
best_error: 1.4605356525650603
best_error: 1.460535652564102
best_error: 1.4605356523792485
best_error: 1.4605356503298699
best_error: 1.4582570661132122
best_error: 1.4582570649895406
best_error: 1.4582570644912354
best_error: 1.4582570644094757
best_error: 1.4525527165305048
best_error: 1.4525527161645515
best_error: 1.4525527155961644
best_error: 1.4525527151348114
best_error: 1.4513502800121207
best_error: 1.4513502660191397
best_error: 1.4508100808466315
best_error: 1.4508100675257063
best_error: 1.4505076793212224
best_error: 1.4505076773534258
best_error: 1.450433899589602
best_error: 1.4504338994485386
best_error: 1.4504338992662715
best_error: 1.45043389894522
best_error: 1.4504338988863188
best_error: 1.4504338984021938
best_error: 1.4500872489346242
best_error: 1.4500872398544202
best_error: 1.4489486227779482
best_error: 1.448948601190931
best_error: 1.4477682497339786
best_error: 1.4477682207011835
best_error: 1.4470272766934449
best_error: 1.4470272649578675
best_error: 1.4468141624520738
best_error: 1.4468141610101148
best_error: 1.446792070275726
best_error: 1.4467920677091186
best_error: 1.4467423262447674
best_error: 1.4467423216994657
best_error: 1.4466358049192873
best_error: 1.4466357974997603
best_error: 1.4463794861227484
best_error: 1.446379474978818
best_error: 1.4455686121330444
best_error: 1.4455685933584583
best_error: 1.4440148573355116
best_error: 1.4440148294932156
best_error: 1.4398383078790238
best_error: 1.439838269797921
best_error: 1.4319637553248237
best_error: 1.4319637508872898
best_error: 1.4319637182967477
best_error: 1.427078215830676
best_error: 1.4270781943191653
best_error: 1.424658347262983
best_error: 1.4246583217553754
best_error: 1.4212290248481347
best_error: 1.4212290123829476
best_error: 1.4205568140944171
best_error: 1.4205568050826693
best_error: 1.4200908359529594
best_error: 1.4200908328271615
best_error: 1.420076628608471
best_error: 1.4200766283778747
best_error: 1.4200766274128396
best_error: 1.4200354070811985
best_error: 1.4200354070347116
best_error: 1.4200354063286447
best_error: 1.4198967375046945
best_error: 1.419896736575937
best_error: 1.4190603216992235
best_error: 1.4190603159326647
best_error: 1.4167662083907178
best_error: 1.4167661852640416
best_error: 1.4162955580696943
best_error: 1.4162955459636746
best_error: 1.415726006182723
best_error: 1.415726006175383
best_error: 1.4157260057234147
best_error: 1.415726004443162
best_error: 1.4149686744594931
best_error: 1.4149686744572554
best_error: 1.4149686740722722
best_error: 1.414968673684924
best_error: 1.4146148600138035
best_error: 1.4146148600064368
best_error: 1.4146148596228048
best_error: 1.4146148595932015
best_error: 1.4143622181515427
best_error: 1.4143622163480172
best_error: 1.4143504579039117
best_error: 1.4143504565266334
best_error: 1.41434863872855
best_error: 1.4143486382989485
best_error: 1.414347398026586
best_error: 1.4143473979175731
best_error: 1.414347284332756
best_error: 1.414347284187184
best_error: 1.4143472674377444
best_error: 1.414347267366123
best_error: 1.4143472673549369
best_error: 1.4143471627195903
best_error: 1.4143471625441018
best_error: 1.4143469206562904
best_error: 1.4143469198712169
best_error: 1.414346555961626
best_error: 1.4143465556405566
best_error: 1.4143437301191049
best_error: 1.4143437296207853
best_error: 1.4143254705833619
best_error: 1.4143254702689132
best_error: 1.4143170786056374
best_error: 1.414317077702072
best_error: 1.4142837996301965
best_error: 1.4142837978334555
best_error: 1.4142607271726562
best_error: 1.414260725011964
best_error: 1.4142194336479355
best_error: 1.4142194312716152
best_error: 1.4141117611416487
best_error: 1.414111758720066
best_error: 1.4140001916605482
best_error: 1.4140001893035656
best_error: 1.413983516371229
best_error: 1.4139835156746212
best_error: 1.4139835118840074
best_error: 1.4137807381972467
best_error: 1.413780733920084
best_error: 1.4137433102533883
best_error: 1.4137433038354956
best_error: 1.4136733225826492
best_error: 1.4136733204644905
best_error: 1.4136294652187977
best_error: 1.4136294644270464
best_error: 1.4135754521823933
best_error: 1.413575448451822
best_error: 1.4135273373526878
best_error: 1.413527332326339
best_error: 1.4134633766274922
best_error: 1.4134633756936512
best_error: 1.4134501173917853
best_error: 1.4134501171820737
best_error: 1.4134440031582027
best_error: 1.4134440019034826
best_error: 1.413439772307072
best_error: 1.413439771691558
best_error: 1.4134387215329727
best_error: 1.4134387215124193
best_error: 1.4134387214587314
best_error: 1.413438485199061
best_error: 1.4134384851035044
best_error: 1.4134384215880862
best_error: 1.41343842147098
best_error: 1.4134383622787587
best_error: 1.4134383622036
best_error: 1.4134382779665855
best_error: 1.4134382779542258
best_error: 1.4134382778895498
best_error: 1.4134381581650421
best_error: 1.413438158088061
best_error: 1.413434975978033
best_error: 1.4134349758550464
best_error: 1.4134077555338374
best_error: 1.4134077528207993
