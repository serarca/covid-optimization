ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.2004276467359
best_error: 11.200427594826841
best_error: 11.200427570995725
best_error: 10.75389589866748
best_error: 10.75389582259161
best_error: 10.753895797114719
best_error: 9.742149666949452
best_error: 9.742149546540695
best_error: 9.299501760109173
best_error: 9.299501617185198
best_error: 9.14309159798528
best_error: 9.143091451361881
best_error: 8.129672114255069
best_error: 8.129671974787385
best_error: 7.994613941048733
best_error: 7.99461383411923
best_error: 6.343411352884779
best_error: 6.34341127391934
best_error: 6.343411233089007
best_error: 6.33348608563066
best_error: 6.333485903784277
best_error: 5.456546136214491
best_error: 5.456545969512781
best_error: 4.633824514875928
best_error: 4.633823893096661
best_error: 4.260646970219117
best_error: 4.260646848778416
best_error: 4.1877692714650925
best_error: 4.187768688105772
best_error: 3.9554772031255347
best_error: 3.9554767326596436
best_error: 3.791641262898273
best_error: 3.7916411095497526
best_error: 3.788322057997606
best_error: 3.7883216945713505
best_error: 3.7787116925802904
best_error: 3.7787115372790643
best_error: 3.7664238492753994
best_error: 3.7664236962080633
best_error: 3.660117338474273
best_error: 3.660117207785783
best_error: 3.332627066733836
best_error: 3.3326268263753267
best_error: 3.1456511470312094
best_error: 3.145650892999145
best_error: 3.0993298838410324
best_error: 3.099329628183183
best_error: 2.8381291713179264
best_error: 2.8381288760951415
best_error: 1.9771960766505932
best_error: 1.9771956687078704
best_error: 1.8701244445307226
best_error: 1.870124033714617
best_error: 1.8569133240481484
best_error: 1.8569133240437394
best_error: 1.856913178272475
best_error: 1.8563399854112526
best_error: 1.8563395768076751
best_error: 1.8562940429742985
best_error: 1.8562936343656413
best_error: 1.8562935162486323
best_error: 1.8562935162441914
best_error: 1.8562933704915454
best_error: 1.8562929600754898
best_error: 1.8562925514667152
best_error: 1.847423903067996
best_error: 1.8474239030635378
best_error: 1.8474237571862868
best_error: 1.8470579128372193
best_error: 1.8470574951782917
best_error: 1.8469489625857087
best_error: 1.8469489625813218
best_error: 1.8469488167152899
best_error: 1.8469420739303453
best_error: 1.846941656260784
best_error: 1.8469414531350277
best_error: 1.8469414531306054
best_error: 1.8469413072647847
best_error: 1.846941246676901
best_error: 1.8469411766818262
best_error: 1.84694114647177
best_error: 1.8449808561053087
best_error: 1.8449804363766789
best_error: 1.8440879360482088
best_error: 1.8440875032101756
best_error: 1.841161481798985
best_error: 1.8411610592393326
best_error: 1.8410655024119844
best_error: 1.841065078922624
best_error: 1.8410242756543655
best_error: 1.841023852081447
best_error: 1.8409066221996193
best_error: 1.8409061947418826
best_error: 1.83986911625498
best_error: 1.8398686871965444
best_error: 1.8380514528030263
best_error: 1.8380510228679694
best_error: 1.8357841306638698
best_error: 1.835783701965077
best_error: 1.835429055494092
best_error: 1.8354286280028551
best_error: 1.8342418724799108
best_error: 1.8342414448526405
best_error: 1.8339156318284058
best_error: 1.8339152041637599
best_error: 1.8337219095053374
best_error: 1.833721909500645
best_error: 1.8337217631989664
best_error: 1.8337173314199824
best_error: 1.833716903730596
best_error: 1.8334024330233247
best_error: 1.83340243301849
best_error: 1.833402286674388
best_error: 1.8333340504411506
best_error: 1.8333336211282796
best_error: 1.8332896479338072
best_error: 1.8332896479289231
best_error: 1.8332895015506625
best_error: 1.8332785406351588
best_error: 1.833278540630222
best_error: 1.8332783943806668
best_error: 1.833277920076112
best_error: 1.8332774907913794
best_error: 1.8332564610811357
best_error: 1.8332560329116023
best_error: 1.833160467648682
best_error: 1.8331604676437132
best_error: 1.8331603212661753
best_error: 1.8328486075360684
best_error: 1.832848607531016
best_error: 1.8328484611471945
best_error: 1.8325579731177062
best_error: 1.8325579731125732
best_error: 1.8325578267227607
best_error: 1.8324853283158355
best_error: 1.8324849002034265
best_error: 1.8314376811742359
best_error: 1.831437681168965
best_error: 1.8314375347565046
