ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.725813671436782
best_error: 24.7258132534211
best_error: 4.900597381167857
best_error: 4.900597380475549
best_error: 4.900478272692519
best_error: 4.900478272686845
best_error: 4.900478272662004
best_error: 4.900000263768766
best_error: 4.900000263763028
best_error: 4.900000263738159
best_error: 4.898063959147408
best_error: 4.898063959141397
best_error: 4.898063959116419
best_error: 4.88989894770006
best_error: 4.8898989476927275
best_error: 4.889898947667399
best_error: 4.847780078871827
best_error: 4.847780078849923
best_error: 4.847780078828339
best_error: 4.788608789762997
best_error: 4.788608789661548
best_error: 4.617126623576177
best_error: 4.617126621461936
best_error: 4.580990966484586
best_error: 4.580990963364994
best_error: 4.5410687037826785
best_error: 4.541068699292527
best_error: 3.599971693730102
best_error: 3.5999715111236577
best_error: 3.5458443273215163
best_error: 3.545844273632145
best_error: 3.279389921071855
best_error: 3.279389835504434
best_error: 3.1399652633433863
best_error: 3.139965165437947
best_error: 3.138513617517045
best_error: 3.1385135153799966
best_error: 3.115040652908478
best_error: 3.1150406057359405
best_error: 3.1150405932656566
best_error: 2.909528851728285
best_error: 2.9095287053881247
best_error: 2.8195765047378787
best_error: 2.8195763570806553
best_error: 2.670305179847408
best_error: 2.670305152529599
best_error: 2.6671174324901945
best_error: 2.667117432293994
best_error: 2.667117431892019
best_error: 2.667117422559607
best_error: 2.6640533398728565
best_error: 2.664053338346134
best_error: 2.6640533288241954
best_error: 2.658965887844425
best_error: 2.6589658839576034
best_error: 2.658965875971843
best_error: 2.656689043638554
best_error: 2.6566890394161624
best_error: 2.6566890315001577
best_error: 2.6554788291769453
best_error: 2.655478824974434
best_error: 2.6554788169180923
best_error: 2.653745114294006
best_error: 2.6537451092353113
best_error: 2.6537451018903306
best_error: 2.653190194597536
best_error: 2.6531901783804326
best_error: 2.6526859913485237
best_error: 2.6526859632773663
best_error: 2.6334080046288038
best_error: 2.633407976779418
best_error: 2.593261718478153
best_error: 2.5932616914805453
best_error: 2.5765903373114454
best_error: 2.576590324025775
best_error: 2.5765902116211272
best_error: 2.5395679904051662
best_error: 2.539567827955361
best_error: 2.407267017127501
best_error: 2.407266803139793
best_error: 2.269177541446591
best_error: 2.2691775383564052
best_error: 2.2691775303748414
best_error: 1.9084653202288768
best_error: 1.9084653168144163
best_error: 1.9084653130345526
best_error: 1.9084123872734753
best_error: 1.9084123838157765
best_error: 1.9084123798929182
best_error: 1.90295368699735
best_error: 1.9029536834871377
best_error: 1.902953679549315
best_error: 1.8808189165495346
best_error: 1.8808189128801232
best_error: 1.8808189088407665
best_error: 1.87496918117727
best_error: 1.874969094732079
best_error: 1.792907296117236
best_error: 1.7929071672431771
best_error: 1.7630777887287439
best_error: 1.7630777005027096
best_error: 1.7257853306957822
best_error: 1.7257853195035258
best_error: 1.7257853144552513
best_error: 1.7177297388964912
best_error: 1.7177297132028744
best_error: 1.7128084287102658
best_error: 1.712808421490199
best_error: 1.7121173962328962
best_error: 1.7121173954509994
best_error: 1.7120576235946259
best_error: 1.7120576186682923
best_error: 1.7120484241000071
best_error: 1.7120484232625344
best_error: 1.7120360555360954
best_error: 1.7120360550669693
best_error: 1.7120360549596787
best_error: 1.7118544356830054
best_error: 1.711854434959535
best_error: 1.7111326068412707
best_error: 1.7111326055732312
best_error: 1.7083231270071098
best_error: 1.7083231245953496
best_error: 1.708288201800856
best_error: 1.7082881993775527
best_error: 1.7081241862026966
best_error: 1.7081241854978346
best_error: 1.7067125202389135
best_error: 1.7067124870146981
best_error: 1.7047996504486234
best_error: 1.7047995926025181
best_error: 1.7041833150386898
best_error: 1.7041832908671162
best_error: 1.704055683664621
best_error: 1.7040556690052377
best_error: 1.7039288086389517
best_error: 1.7039288085764124
best_error: 1.703928808049835
best_error: 1.7039288071565244
best_error: 1.703835772461149
best_error: 1.7038357719190986
best_error: 1.703835770930239
best_error: 1.699884942974826
best_error: 1.6998849429561207
best_error: 1.6998849424463864
best_error: 1.6998849422863822
best_error: 1.6990579126684724
best_error: 1.699057908698033
best_error: 1.6982877676506845
best_error: 1.698287766119986
best_error: 1.697794636000558
best_error: 1.6977946354475466
best_error: 1.6977946351419373
best_error: 1.6963793904059759
best_error: 1.6963793631254833
best_error: 1.6936480866594639
best_error: 1.6936480477615476
best_error: 1.6880545048842235
best_error: 1.688054459063714
best_error: 1.686160146761403
best_error: 1.686160146675169
best_error: 1.6861601463742988
best_error: 1.6852391061126153
best_error: 1.6852390726760667
best_error: 1.6847567965561405
best_error: 1.6847567961989665
best_error: 1.6847567958217617
best_error: 1.6844722709301374
best_error: 1.6844722545144903
best_error: 1.684440123547687
best_error: 1.684440099572811
best_error: 1.6844381448565537
best_error: 1.6844381192942737
best_error: 1.6844298545680325
best_error: 1.6844298221618692
best_error: 1.6814392669906357
best_error: 1.6814392426612208
best_error: 1.6807025762793768
best_error: 1.6807025681370853
best_error: 1.67998499156068
best_error: 1.6799849911393088
best_error: 1.6799849906612991
best_error: 1.6794489393784984
best_error: 1.6794489391210994
best_error: 1.6794489388432001
best_error: 1.678915699449316
best_error: 1.6789156977431652
best_error: 1.6785924727975807
best_error: 1.6785924711967026
best_error: 1.6781694886258736
best_error: 1.6781694886207874
best_error: 1.6781694846581405
best_error: 1.6773817088202878
best_error: 1.6773817042881884
best_error: 1.6767044236590543
best_error: 1.6767044176841193
best_error: 1.6756363275736441
best_error: 1.675636306961386
best_error: 1.6750275249324063
best_error: 1.6750275145711675
best_error: 1.674630007293734
best_error: 1.6746300053066039
best_error: 1.67448515088297
best_error: 1.6744851475162799
best_error: 1.6744726542542157
best_error: 1.674472646530178
best_error: 1.6743556963045227
best_error: 1.6743556961933819
best_error: 1.674355695568052
best_error: 1.6741806858089803
best_error: 1.6741806852302332
best_error: 1.6741806848902265
best_error: 1.6739062505522968
best_error: 1.673906242842702
best_error: 1.673490653439526
best_error: 1.673490626202994
best_error: 1.6723857300671514
best_error: 1.6723857096091534
best_error: 1.6716945741462539
best_error: 1.6716945637925806
best_error: 1.6714556146516595
best_error: 1.6714556103832963
best_error: 1.6713984433490525
best_error: 1.6713984227281116
best_error: 1.6713294454208554
best_error: 1.6713294396500495
best_error: 1.671287352317098
best_error: 1.6712873452791712
best_error: 1.6712653368919081
best_error: 1.6712653345553536
best_error: 1.6712536364122956
best_error: 1.6712536361662509
best_error: 1.6712432649169204
best_error: 1.6712432631302725
best_error: 1.6712185414369873
best_error: 1.6712185395852162
best_error: 1.6711699213092785
best_error: 1.6711699189664209
best_error: 1.6711345919945952
best_error: 1.671134590253317
best_error: 1.671034297262221
best_error: 1.671034294840046
best_error: 1.6710141714835123
best_error: 1.6710141659520334
best_error: 1.6709960918788025
best_error: 1.6709960900352447
best_error: 1.6709827580102226
best_error: 1.6709827576736105
best_error: 1.6709754066563867
best_error: 1.6709754056994166
best_error: 1.6709628867869553
best_error: 1.6709628815516087
best_error: 1.6709510699672014
best_error: 1.6709510657649
best_error: 1.670863313328405
best_error: 1.670863313284289
best_error: 1.6708633082306914
best_error: 1.6707155197033845
best_error: 1.6707155105430085
best_error: 1.670387624553442
best_error: 1.6703876159912645
best_error: 1.6695537297038388
best_error: 1.6695537053390856
best_error: 1.66928743799396
best_error: 1.6692874328592204
best_error: 1.6667009090981226
best_error: 1.666700897520856
best_error: 1.666446428092503
best_error: 1.6664464165061326
best_error: 1.6661280371509133
best_error: 1.6661280292773848
best_error: 1.6649843539636562
best_error: 1.6649843462228153
best_error: 1.664908596236128
best_error: 1.6649085961924663
best_error: 1.6649085929599279
best_error: 1.6636609561814932
best_error: 1.6636609535487992
best_error: 1.6621907521424149
best_error: 1.6621907258575463
best_error: 1.6614039354111076
best_error: 1.6614039352398067
best_error: 1.6614039351966678
best_error: 1.6614039348445238
best_error: 1.6614039347361846
best_error: 1.6613799824301143
best_error: 1.6613799822598938
best_error: 1.6613799822058986
best_error: 1.661379981915449
best_error: 1.6613799817435757
best_error: 1.6613225989127258
best_error: 1.661322592728462
best_error: 1.66107545533157
best_error: 1.66107544831658
best_error: 1.6605699525194453
best_error: 1.660569949804835
best_error: 1.660262798328945
best_error: 1.6602627945338666
