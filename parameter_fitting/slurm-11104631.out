ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.06433566239699
best_error: 97.06433557933127
best_error: 97.06433550658507
best_error: 17.617245702448002
best_error: 17.61724570244204
best_error: 17.617245691766623
best_error: 17.576454004195618
best_error: 17.57645399261068
best_error: 17.36982276990519
best_error: 17.36982275152145
best_error: 16.977512443223354
best_error: 16.977512420153296
best_error: 16.977512418954312
best_error: 16.9775107488488
best_error: 12.977533285039861
best_error: 12.977533067789938
best_error: 12.195261507274893
best_error: 12.195261392369584
best_error: 12.096684827596192
best_error: 12.096684823244138
best_error: 12.096684819726189
best_error: 12.096684585515808
best_error: 11.806319836835977
best_error: 11.8063198283801
best_error: 11.806319826369878
best_error: 11.806319806946252
best_error: 11.687344673879133
best_error: 11.68734464490161
best_error: 11.365177598451735
best_error: 11.36517759734229
best_error: 11.365177594916972
best_error: 11.365177585194001
best_error: 11.36517756646714
best_error: 11.212693218457257
best_error: 11.212693205185976
best_error: 11.212693203837159
best_error: 10.544423869266373
best_error: 10.544423851796985
best_error: 9.69945858397758
best_error: 9.699458569840905
best_error: 9.214181067211879
best_error: 9.21418105836089
best_error: 9.069872519580445
best_error: 9.069872505620605
best_error: 8.886140769401628
best_error: 8.886140751677102
best_error: 8.643607985054398
best_error: 8.643607979081883
best_error: 8.628279340713856
best_error: 8.62827930798336
best_error: 8.56981146610194
best_error: 8.569811458466368
best_error: 8.562455561365168
best_error: 8.562455530338152
best_error: 8.334691261976502
best_error: 8.334691242575026
best_error: 8.322843097275193
best_error: 8.322842954633284
best_error: 8.276936745750925
best_error: 8.276936730612695
best_error: 8.26766725311198
best_error: 8.267667239203568
best_error: 8.267667238965515
best_error: 8.244128858251589
best_error: 8.244128844303535
best_error: 8.24412884292393
best_error: 8.180450623044706
best_error: 8.180450602306633
best_error: 8.124175519655692
best_error: 8.124175498828661
best_error: 8.001850101158066
best_error: 8.001850081044022
best_error: 7.596864305963268
best_error: 7.596864278491648
best_error: 7.596864267716526
best_error: 7.567030406559843
best_error: 7.567030381859391
best_error: 7.130254039291605
best_error: 7.130254037310261
best_error: 7.130253913034334
best_error: 6.9819328429037935
best_error: 6.981932841299318
best_error: 6.9819327167353675
best_error: 6.6841814238467885
best_error: 6.684181420956759
best_error: 6.684181370123146
best_error: 6.619274055072241
best_error: 6.619274052945103
best_error: 6.619273997574936
best_error: 6.591426158690558
best_error: 6.591426155810768
best_error: 6.5914261122439335
best_error: 6.57627413831242
best_error: 6.576274134650316
best_error: 6.576274106730556
best_error: 6.569759733194276
best_error: 6.569759730953611
best_error: 6.569759679923156
best_error: 6.565732090033645
best_error: 6.565732087324072
best_error: 6.565732044752618
best_error: 6.564813795520962
best_error: 6.564813792382681
best_error: 6.5648137557568536
best_error: 6.563583600360205
best_error: 6.5635835726579685
best_error: 6.539919767844531
best_error: 6.539919765221949
best_error: 6.539919763531632
best_error: 6.53991975587897
best_error: 6.533456126015558
best_error: 6.533456123447412
best_error: 6.53345611113572
best_error: 6.529892140498256
best_error: 6.529892137735378
best_error: 6.529892134997236
best_error: 6.521489387173391
best_error: 6.5214893591130085
best_error: 6.512544600034701
best_error: 6.51254459466873
best_error: 6.512544588134323
best_error: 6.484983582913516
best_error: 6.4849835532771465
best_error: 6.458869129663867
best_error: 6.45886910192638
best_error: 6.452959141009998
best_error: 6.452959113720153
best_error: 6.438028200057072
best_error: 6.438028173532941
best_error: 6.437500856904564
best_error: 6.437500830512144
best_error: 6.397165251178915
best_error: 6.397165248792378
best_error: 6.3971652420801455
best_error: 6.379902267683422
best_error: 6.379902265766313
best_error: 6.379902180031321
best_error: 6.372764351177643
best_error: 6.372764350178473
best_error: 6.372764285199264
best_error: 6.367380529277055
best_error: 6.367380489685953
best_error: 6.3646172869237745
best_error: 6.364617250393641
best_error: 6.362550501584273
best_error: 6.362550480315194
best_error: 6.360538254296674
best_error: 6.3605382349650395
best_error: 6.3595605925963365
best_error: 6.359560567985063
best_error: 6.359191492987495
best_error: 6.359191468303106
best_error: 6.359091677828582
best_error: 6.359091653124429
best_error: 6.359000227046783
best_error: 6.359000205241314
best_error: 6.358977856422121
best_error: 6.358977830094583
best_error: 6.358964412382217
best_error: 6.35896438605201
best_error: 6.358952896144862
best_error: 6.358952869812365
best_error: 6.358947602128233
best_error: 6.358947575794683
best_error: 6.358947355747816
best_error: 6.358947329414223
best_error: 6.358947173391126
best_error: 6.358947147057503
best_error: 6.358946995648294
best_error: 6.35894696931464
best_error: 6.358946897194632
best_error: 6.35894687086096
best_error: 6.358946757899005
best_error: 6.358946731565311
best_error: 6.358946710049554
best_error: 6.35894668371585
best_error: 6.3589466594202175
best_error: 6.358946656251863
best_error: 6.358946639828976
