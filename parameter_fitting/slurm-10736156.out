ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.546178432248935
best_error: 10.54617840281895
best_error: 10.526700763123682
best_error: 10.526700731720323
best_error: 4.834185212851883
best_error: 4.834185212845922
best_error: 4.716943056977293
best_error: 4.716943056970054
best_error: 4.71694303396405
best_error: 4.715955637885472
best_error: 4.715955637878722
best_error: 4.715955626735908
best_error: 4.715152721112521
best_error: 4.7151527211053965
best_error: 4.715152699152375
best_error: 4.6250882543561485
best_error: 4.625088076213145
best_error: 4.61459546094346
best_error: 4.614595298512748
best_error: 4.582986889296895
best_error: 4.582986732570231
best_error: 4.553129394839882
best_error: 4.5531293948373674
best_error: 4.553129387993801
best_error: 4.548965712840425
best_error: 4.54896571166598
best_error: 4.548965710800749
best_error: 4.5489657057440835
best_error: 4.547788492544658
best_error: 4.547788492541127
best_error: 4.547788491467502
best_error: 4.547788485426109
best_error: 4.5433834404028035
best_error: 4.543383440399475
best_error: 4.543383433084598
best_error: 4.541564910708297
best_error: 4.5415648078314685
best_error: 4.5299412664795025
best_error: 4.529941266477081
best_error: 4.529941258347952
best_error: 4.476516760672515
best_error: 4.476516760672394
best_error: 4.4765167483073895
best_error: 4.473358134856378
best_error: 4.473358134856105
best_error: 4.4733581222569025
best_error: 4.472827135392765
best_error: 4.4728271353924525
best_error: 4.472827122795984
best_error: 4.472504643382497
best_error: 4.472504643382166
best_error: 4.472504630724204
best_error: 4.472066110530114
best_error: 4.472066110529743
best_error: 4.472066097826638
best_error: 4.4718826746975875
best_error: 4.471882674697206
best_error: 4.471882661997944
best_error: 4.471803596858271
best_error: 4.4718035968578915
best_error: 4.471803584165373
best_error: 4.471785279877583
best_error: 4.471785279877207
best_error: 4.471785267176204
best_error: 4.471774681241999
best_error: 4.471774681241618
best_error: 4.471774668541533
best_error: 4.471770104344141
best_error: 4.471770104343759
best_error: 4.47177009164403
best_error: 4.4717666160006795
best_error: 4.471766616000297
best_error: 4.471766603300843
best_error: 4.471764798636341
best_error: 4.471764798635965
best_error: 4.471764785936646
best_error: 4.4717633891455115
best_error: 4.471763389145132
best_error: 4.471763376445926
best_error: 4.471762682802398
best_error: 4.471762682802018
best_error: 4.471762670102867
best_error: 4.471762121090299
best_error: 4.4717621210899186
best_error: 4.471762108390811
best_error: 4.47176185530809
best_error: 4.471761855307712
best_error: 4.471761842608626
best_error: 4.471761636701978
best_error: 4.471761636701596
best_error: 4.4717616240025295
best_error: 4.471761608268386
best_error: 4.471761600322516
best_error: 4.471761599041808
best_error: 4.471761599041419
best_error: 4.47176158634236
best_error: 4.471761575096218
best_error: 4.47176156954398
best_error: 4.444056137739339
best_error: 4.444056137737059
best_error: 4.444056137650819
best_error: 4.433666286916802
best_error: 4.433666275952041
best_error: 4.433666273702054
best_error: 4.43143400789784
best_error: 4.431433988587237
best_error: 4.427624143022852
best_error: 4.427624121225273
best_error: 4.425475924572352
best_error: 4.425475924567987
best_error: 4.425475924098622
best_error: 4.414616200913057
best_error: 4.414616200908819
best_error: 4.414616200223998
best_error: 4.403102227903994
best_error: 4.403102206316235
best_error: 4.364340659095585
best_error: 4.3643406182755875
best_error: 4.302465756270662
best_error: 4.302465756266714
best_error: 4.301759983353172
best_error: 4.301759921139853
best_error: 4.3017471727957055
best_error: 4.301747172791766
best_error: 4.301546646105802
best_error: 4.301546646102049
best_error: 4.301539716145204
best_error: 4.301539716141439
best_error: 4.301539597777968
best_error: 4.3015395977742035
best_error: 4.301539590295639
