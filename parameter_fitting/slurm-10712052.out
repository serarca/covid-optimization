ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.852454129331878
best_error: 13.852453968563816
best_error: 12.568256902415534
best_error: 12.568256899388722
best_error: 12.568256887995252
best_error: 12.48911191142767
best_error: 12.489111907894003
best_error: 12.489111903524583
best_error: 12.010091579275983
best_error: 12.010091572269204
best_error: 12.010091565955843
best_error: 10.960124475980015
best_error: 10.960124461067428
best_error: 10.779760620010036
best_error: 10.779760605310713
best_error: 10.764274682803832
best_error: 10.764274669469815
best_error: 7.2438417357071865
best_error: 7.243841616991038
best_error: 7.161102089934806
best_error: 7.161101993689651
best_error: 7.161101975671476
best_error: 7.044820259579087
best_error: 7.044820203000077
best_error: 7.0448201306292955
best_error: 7.037526045607557
best_error: 7.037525995515244
best_error: 7.037525915454042
best_error: 7.037522422563964
best_error: 7.037522372432021
best_error: 7.037522292357807
best_error: 7.0375209734876325
best_error: 7.0375209233399865
best_error: 7.0375208432605465
best_error: 7.037519512318519
best_error: 7.037519462155129
best_error: 7.037519382070446
best_error: 7.037518639395239
best_error: 7.037518589222476
best_error: 7.037518509134641
best_error: 7.037517762314746
best_error: 7.037517712132599
best_error: 7.037517632041642
best_error: 7.037517243551097
best_error: 7.037517193363405
best_error: 7.037517113270587
best_error: 7.037516723443737
best_error: 7.037516673250515
best_error: 7.037516593155802
best_error: 7.0375164069229905
best_error: 7.037516356726391
best_error: 7.0375162766305515
best_error: 7.037516089985128
best_error: 7.037516039785169
best_error: 7.037515959688209
best_error: 7.037515851818641
best_error: 7.037515801616148
best_error: 7.037515721518323
best_error: 7.0375156135331025
best_error: 7.037515563328081
best_error: 7.0375154832293925
best_error: 7.037514527163564
best_error: 7.037514476947047
best_error: 7.037514396844471
best_error: 7.0375129694833465
best_error: 7.037512920374175
best_error: 7.037512839149175
best_error: 6.793104537809267
best_error: 6.793104470855535
best_error: 6.793104410670278
best_error: 5.245868356931556
best_error: 5.2458680981968
best_error: 5.105987149728255
best_error: 5.1059869290388225
best_error: 4.802695209955612
best_error: 4.802695133367178
best_error: 4.414617062714881
best_error: 4.414616683249446
best_error: 4.3176710150355335
best_error: 4.31767066334271
best_error: 4.248619502075794
best_error: 4.2486191757317755
best_error: 4.20595553056645
best_error: 4.20595544184291
best_error: 4.197815636946473
best_error: 4.197815308857983
best_error: 4.193648206190666
best_error: 4.193647878425732
best_error: 4.192456344467713
best_error: 4.192456016539635
best_error: 4.1916854174806275
best_error: 4.191685089447066
best_error: 4.19128348626292
best_error: 4.191283158174276
best_error: 4.19122499796953
best_error: 4.191224909292988
best_error: 4.191197772169584
best_error: 4.191197444069193
best_error: 4.191075913989881
best_error: 4.191075585872797
best_error: 4.191062677896397
best_error: 4.191062349777505
best_error: 4.191053906539244
best_error: 4.19105357841916
best_error: 4.191050827256772
best_error: 4.191050499136237
best_error: 4.191048774826103
best_error: 4.191048446705308
best_error: 4.191047872141125
best_error: 4.191047544020195
best_error: 4.191047423806076
best_error: 4.191047335129286
best_error: 4.07332550778583
best_error: 4.07332512644668
best_error: 4.068948011206638
best_error: 4.068947630075867
best_error: 4.068448962392653
best_error: 4.0684485811959785
best_error: 4.068141377705215
best_error: 4.068140996467921
best_error: 4.068103455348617
best_error: 4.068103074106302
best_error: 4.068099065331489
best_error: 4.0680986840886
best_error: 4.068096393187634
best_error: 4.0680961400819005
best_error: 4.068096132288348
best_error: 4.068096098508706
best_error: 4.068096094264208
best_error: 4.06809608349226
best_error: 4.068096049712621
best_error: 4.068096023426598
best_error: 4.068095950678877
best_error: 3.948342115737125
best_error: 3.9483415751937194
best_error: 3.9330476293356877
best_error: 3.933047140506531
best_error: 3.927312323105661
best_error: 3.9273118282954496
best_error: 3.907700457255407
best_error: 3.9076999327605675
best_error: 3.9076998782024033
best_error: 3.90769965996976
best_error: 3.90769931153372
best_error: 3.9076987870386297
best_error: 3.907695819801136
best_error: 3.9076952953053103
best_error: 3.907681852730607
best_error: 3.9076813282318072
best_error: 3.9076259822048023
best_error: 3.9076254576941993
best_error: 3.9074024642062244
best_error: 3.907401939648362
best_error: 3.9065078180303927
best_error: 3.906507293283356
best_error: 3.9029201928411896
best_error: 3.9029196686772964
best_error: 3.896635576023511
best_error: 3.896635049109798
best_error: 3.895652572583936
best_error: 3.895652045461367
best_error: 3.8953676285127328
best_error: 3.895367556954071
best_error: 3.894762785141368
best_error: 3.8947622497511833
best_error: 3.893900871484865
best_error: 3.8939003359324666
best_error: 3.893048243055296
best_error: 3.893047707342476
best_error: 3.892677846937738
best_error: 3.8926773111552277
best_error: 3.8925902333819575
best_error: 3.8925896975829746
best_error: 3.8925700851282126
best_error: 3.8925695493254064
best_error: 3.8925602207055685
best_error: 3.8925596849009096
best_error: 3.8925589048794587
best_error: 3.892558369074564
best_error: 3.8925579729327255
best_error: 3.8925579028810846
best_error: 3.8925579024993144
