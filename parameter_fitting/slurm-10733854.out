ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.36361127286376
best_error: 8.363611256930259
best_error: 7.606871840297844
best_error: 7.606871757202745
best_error: 3.7069362089963116
best_error: 3.7069359121676526
best_error: 3.417429483070478
best_error: 3.417429428487631
best_error: 3.396867354956332
best_error: 3.3968673190003544
best_error: 3.3903345075263203
best_error: 3.3903344796685198
best_error: 3.388834831256878
best_error: 3.388834804172614
best_error: 3.3883855595947656
best_error: 3.388385532614381
best_error: 3.3881984579122557
best_error: 3.3881984312213502
best_error: 3.3881937695459143
best_error: 3.3881937428545257
best_error: 3.3881931410054436
best_error: 3.3881931384378787
best_error: 3.3877612525936938
best_error: 3.3877612258813463
best_error: 3.385958526869058
best_error: 3.385958524083673
best_error: 3.3778522464690397
best_error: 3.377852246469039
best_error: 3.377852242856185
best_error: 3.3283030071020434
best_error: 3.3283030071020425
best_error: 3.328303000190192
best_error: 3.294801496085378
best_error: 3.2948014960853778
best_error: 3.2935729634553867
best_error: 3.2935729622260532
best_error: 3.2935342122182596
best_error: 3.2935342122182583
best_error: 3.2934818379810435
best_error: 3.293481837981043
best_error: 3.2934818368918655
best_error: 3.293018068844762
best_error: 3.2930180688447606
best_error: 3.292465812524668
best_error: 3.2923541752951566
best_error: 3.2922082126831667
best_error: 3.291722495867372
best_error: 3.2910462515841084
best_error: 3.291046251584107
best_error: 3.2910462507229794
best_error: 3.290611465201112
best_error: 3.290611465201111
best_error: 3.290611464639696
best_error: 3.2901355384820015
best_error: 3.2901355384820006
best_error: 3.276690538375918
best_error: 3.2766905222924185
best_error: 3.260359781777266
best_error: 3.2603597781723836
best_error: 3.2459814765018455
best_error: 3.245981476501845
best_error: 3.2459814727352443
best_error: 3.245964188210729
best_error: 3.2459641882107286
best_error: 3.2459641843752998
best_error: 3.232707860864559
best_error: 3.232707855341098
best_error: 3.2289911572980117
best_error: 3.228991151239444
best_error: 3.2288842854126165
best_error: 3.228884285412616
best_error: 3.2288842793357246
best_error: 3.2288721795546564
best_error: 3.228872179554655
best_error: 3.2288721734756853
best_error: 3.2288697775480544
best_error: 3.204505280321269
best_error: 3.2043073616379325
best_error: 3.2043073616379316
best_error: 3.2029199947799443
best_error: 3.2029199947799434
best_error: 3.2024089725452156
best_error: 3.2021230853708667
best_error: 3.2021230853182763
best_error: 3.201080114816622
best_error: 3.2010801148166217
best_error: 3.2010801137058005
best_error: 3.1936550179690233
best_error: 3.1936550139609206
best_error: 3.1925940496026453
best_error: 3.192594049602645
best_error: 3.1925940452781787
best_error: 3.1924643233837924
best_error: 3.192464323383791
best_error: 3.19246431905206
best_error: 3.1924479254082
best_error: 3.1924479254081986
best_error: 3.192447921077137
best_error: 3.192445673463223
best_error: 3.1924456734632223
best_error: 3.19244566913226
best_error: 3.1924454094887316
best_error: 3.1924453734224394
best_error: 3.1867962897246858
best_error: 3.1867962837505144
best_error: 3.184295931801234
best_error: 3.184295931801233
best_error: 3.184295927914957
best_error: 3.182932068239008
best_error: 3.1829320662663427
best_error: 3.1811863458919882
best_error: 3.1810639278190957
best_error: 3.1810217387477135
best_error: 3.1810217387477118
best_error: 3.181005233758943
best_error: 3.181005233758942
best_error: 3.1809978741844818
best_error: 3.1809151358902863
best_error: 3.18058631620785
best_error: 3.1805863162078487
best_error: 3.178220660801558
best_error: 3.178220614821071
best_error: 3.1780839291051874
best_error: 3.178083929105187
best_error: 3.1780789236762574
best_error: 3.178078923676257
best_error: 3.1780789236762557
best_error: 3.1780779802469388
best_error: 3.1780776697040323
best_error: 3.1780776375071538
best_error: 3.17806478224437
best_error: 3.178064735438683
best_error: 3.17805888298498
best_error: 3.1780588362198765
best_error: 3.178036558259104
best_error: 3.17803651152117
best_error: 3.1779506971348326
best_error: 3.1779506503983854
best_error: 3.1772208174371857
best_error: 3.1772207683937532
best_error: 3.1759884659496818
best_error: 3.1759884133489598
best_error: 3.175910253163717
best_error: 3.1759102531637153
best_error: 3.1753209771022504
best_error: 3.1753209227886727
best_error: 3.1750623730370346
best_error: 3.175062373037034
best_error: 3.175062373037031
best_error: 3.175024850335152
best_error: 3.1750248503351495
best_error: 3.17490736813791
best_error: 3.174907311242632
best_error: 3.174886106773931
best_error: 3.1748861067739305
best_error: 3.1748861067739247
best_error: 3.1748587474002394
best_error: 3.174858747400239
best_error: 3.1748587474002377
best_error: 3.174843700143628
best_error: 3.1748436999294505
best_error: 3.174839150836001
best_error: 3.1748391508360005
best_error: 3.174839150634718
best_error: 3.1748375974911993
best_error: 3.1748375376657916
