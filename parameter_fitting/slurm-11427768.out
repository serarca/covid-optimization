ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.081463561986244
best_error: 25.081463249262434
best_error: 4.9038772347662505
best_error: 4.903877234087622
best_error: 4.9037234908189165
best_error: 4.903723490811538
best_error: 4.903723490762075
best_error: 4.903105942300782
best_error: 4.903105942293311
best_error: 4.903105942243735
best_error: 4.900595282316898
best_error: 4.9005952823090375
best_error: 4.900595282259
best_error: 4.889853273177905
best_error: 4.8898532731681055
best_error: 4.8898532731162225
best_error: 4.828302669829062
best_error: 4.828302669790848
best_error: 4.828302669739314
best_error: 4.755857120109971
best_error: 4.755857119923619
best_error: 4.4886671159714675
best_error: 4.4886671102186
best_error: 4.409659764124073
best_error: 4.40965975458515
best_error: 4.313718186518212
best_error: 4.313718171287074
best_error: 3.9518608320128283
best_error: 3.95186058025038
best_error: 3.213894041935491
best_error: 3.2138939710365797
best_error: 3.0522455216294366
best_error: 3.052245438638943
best_error: 2.993702824102142
best_error: 2.993702725425178
best_error: 2.865164951589751
best_error: 2.865164934259543
best_error: 2.8651648681011426
best_error: 2.7075966295785103
best_error: 2.7075966274850805
best_error: 2.7075965093760375
best_error: 2.4760514971864733
best_error: 2.47605145835401
best_error: 2.476051406552708
best_error: 2.458199769045605
best_error: 2.4581996952220404
best_error: 2.4453856752173255
best_error: 2.445385669303128
best_error: 2.445385664995867
best_error: 2.4449787816089117
best_error: 2.444978770102074
best_error: 2.4441431119325774
best_error: 2.444143103906538
best_error: 2.444143102344377
best_error: 2.441798315235865
best_error: 2.44179831402813
best_error: 2.441798304597346
best_error: 2.433608650742331
best_error: 2.433608648306852
best_error: 2.4336086393543708
best_error: 2.3340495056425157
best_error: 2.3340494186778344
best_error: 2.2764620926289583
best_error: 2.276462007869246
best_error: 2.054874553137466
best_error: 2.054874492330079
best_error: 1.7703515830152412
best_error: 1.770351551934888
best_error: 1.6338724105383964
best_error: 1.633872378435226
best_error: 1.6275330782354132
best_error: 1.627532904806638
best_error: 1.6175719183005643
best_error: 1.6175718336563691
best_error: 1.6112895901029543
best_error: 1.6112895783234675
best_error: 1.6103451615565245
best_error: 1.6103451364093804
best_error: 1.6093985258012669
best_error: 1.609398511541987
best_error: 1.609005715813324
best_error: 1.609005706872195
best_error: 1.6079407250777304
best_error: 1.6079407074785022
best_error: 1.6073378183423346
best_error: 1.6073377966737667
best_error: 1.6070946306066245
best_error: 1.6070946301319484
best_error: 1.6070946299856603
best_error: 1.6070910809620487
best_error: 1.6070910808589276
best_error: 1.6070910808329821
best_error: 1.6070910803529805
best_error: 1.6070851961775663
best_error: 1.607085195915443
best_error: 1.607085195580056
best_error: 1.6070367780428256
best_error: 1.6070367761647912
best_error: 1.6069178678329292
best_error: 1.60691786385433
best_error: 1.6066482363286634
best_error: 1.606648230582744
best_error: 1.6057837802702766
best_error: 1.6057837699849955
best_error: 1.603590889384719
best_error: 1.6035908735249782
best_error: 1.5973268767953055
best_error: 1.5973268485950576
best_error: 1.5946470882339308
best_error: 1.594647054160566
best_error: 1.5942725029653197
best_error: 1.5942724798399388
best_error: 1.5898935412809772
best_error: 1.5898935248706945
best_error: 1.5857625415766865
best_error: 1.5857625400906847
best_error: 1.5856926922439265
best_error: 1.5856926910213267
best_error: 1.585664999554343
best_error: 1.5856649972444712
best_error: 1.585451137801626
best_error: 1.585451134022629
best_error: 1.5852331874166683
best_error: 1.585233184299843
best_error: 1.5850246043783307
best_error: 1.5850246005743094
best_error: 1.5845614488041564
best_error: 1.5845614484402015
best_error: 1.5845614480987968
best_error: 1.5845614472154734
best_error: 1.5837570394160105
best_error: 1.5837570379474508
best_error: 1.5837570374096819
best_error: 1.5817157084017868
best_error: 1.5817156879507899
best_error: 1.5785130979207904
best_error: 1.5785130652860841
best_error: 1.575687428136297
best_error: 1.5756874208171059
best_error: 1.570825661825286
best_error: 1.5708256537578484
best_error: 1.5701045122969453
best_error: 1.5701045025349336
best_error: 1.5638738916560868
best_error: 1.5638738649534778
best_error: 1.5571437976717066
best_error: 1.5571436836030557
best_error: 1.5538686594282836
best_error: 1.553868630323395
best_error: 1.5461937360583584
best_error: 1.546193684177638
best_error: 1.542024024457441
best_error: 1.542024017731664
best_error: 1.5417070844349887
best_error: 1.5417070824178902
best_error: 1.5416678896829539
best_error: 1.5416678891462758
best_error: 1.5416624872621822
best_error: 1.541662478065926
best_error: 1.541640845554456
best_error: 1.5416408408914541
best_error: 1.5416230688378898
best_error: 1.5416230678038503
best_error: 1.5416127230979817
best_error: 1.5416127215161195
best_error: 1.541606071948338
best_error: 1.5416060708099724
best_error: 1.541601626725087
best_error: 1.5416016266786636
best_error: 1.541601625398032
best_error: 1.54159768867625
best_error: 1.5415976863303404
best_error: 1.541590490513487
best_error: 1.5415904876306223
best_error: 1.5415623429353158
best_error: 1.541562339108741
best_error: 1.541550958129484
best_error: 1.5415509558959564
best_error: 1.5415299538563565
best_error: 1.5415299536159965
best_error: 1.5415128630311863
best_error: 1.5415128624891674
best_error: 1.541486529173514
best_error: 1.5414865251398924
best_error: 1.5414647291060117
best_error: 1.5414647252562081
best_error: 1.5413957660237336
best_error: 1.5413957625732018
best_error: 1.5412552180839572
best_error: 1.5412552165846611
best_error: 1.5412552124749168
best_error: 1.5410613176980668
best_error: 1.5410613034148815
best_error: 1.5403497634410501
best_error: 1.540349736091123
best_error: 1.539340683342405
best_error: 1.5393406395391724
best_error: 1.5380712213066823
best_error: 1.538071183270958
best_error: 1.538045631595874
best_error: 1.5380455850000545
best_error: 1.5350760193733597
best_error: 1.5350759769353832
best_error: 1.5342091223390357
best_error: 1.5342091127989141
best_error: 1.5308077470595083
best_error: 1.530807705290297
best_error: 1.5296831970368827
best_error: 1.5296831947862375
best_error: 1.5296132894222874
best_error: 1.5296132889604397
best_error: 1.529613288510979
best_error: 1.5292874512405579
best_error: 1.5292874491191193
best_error: 1.528911273858716
best_error: 1.5289112673872511
best_error: 1.5283928771599442
best_error: 1.528392875155438
best_error: 1.5283070092904512
best_error: 1.528307009055622
best_error: 1.5282866033942437
best_error: 1.5282866021825976
best_error: 1.5282628017038424
best_error: 1.5282627967332585
best_error: 1.5281794132501758
best_error: 1.5281794023307642
best_error: 1.5279938092333165
best_error: 1.5279937886769557
best_error: 1.5277567547093291
best_error: 1.5277567308158564
best_error: 1.52732545989367
best_error: 1.527325433941944
best_error: 1.527160868544626
best_error: 1.52716086821008
best_error: 1.5270188641740066
best_error: 1.5270188641344447
best_error: 1.527018864058516
best_error: 1.527015348682387
best_error: 1.527015348664989
best_error: 1.5270153485656326
best_error: 1.5269902023638084
best_error: 1.5269902020278334
best_error: 1.5269755218335155
best_error: 1.5269755214638934
best_error: 1.5269753740183791
best_error: 1.5269753739965604
best_error: 1.5269747804351759
best_error: 1.5269747802389244
best_error: 1.5269746761681149
best_error: 1.5269746760546743
best_error: 1.526974662210301
best_error: 1.526974662158693
best_error: 1.5269746535307696
best_error: 1.526974653524105
best_error: 1.5269746535000157
best_error: 1.5269746534803739
