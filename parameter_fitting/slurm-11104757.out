ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 92
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.75363400061454
best_error: 99.75363388736518
best_error: 99.75363383151894
best_error: 15.800941201590174
best_error: 15.800941196608791
best_error: 15.794971473864022
best_error: 15.794971473862068
best_error: 15.794971473677307
best_error: 15.794971472106756
best_error: 15.791295740959294
best_error: 15.791295740957072
best_error: 15.791295740767318
best_error: 15.7912957391928
best_error: 15.77622491434168
best_error: 15.77622491433839
best_error: 15.776224914128058
best_error: 15.776224912709674
best_error: 15.725121119068662
best_error: 15.72512111905863
best_error: 15.725121118785538
best_error: 15.725121118453862
best_error: 15.604662103420576
best_error: 15.60466210341697
best_error: 15.604662103351272
best_error: 15.604662102772153
best_error: 15.525343772834104
best_error: 15.52534377282297
best_error: 15.525343772808508
best_error: 15.525343772635184
best_error: 15.525343771805034
best_error: 15.486771375481602
best_error: 15.486771375444066
best_error: 15.48677137542818
best_error: 15.486771375142006
best_error: 15.486771374294936
best_error: 15.48561448535032
best_error: 15.485614485047936
best_error: 15.485614484294985
best_error: 15.037663567185675
best_error: 15.037663567162376
best_error: 15.037663564044543
best_error: 15.037663529749672
best_error: 14.926735370277738
best_error: 14.926735370271057
best_error: 14.926735370253423
best_error: 14.926735370155551
best_error: 14.926735353727473
best_error: 14.79184860306073
best_error: 14.791848603059243
best_error: 14.791848602947892
best_error: 14.129360159108574
best_error: 14.129360159093935
best_error: 14.122870196353784
best_error: 14.122870196337669
best_error: 14.122870193945207
best_error: 14.122637325397621
best_error: 14.12263732538197
best_error: 14.12219063136815
best_error: 14.122190631352508
best_error: 14.121042378133424
best_error: 14.121042378131737
best_error: 14.09289618102554
best_error: 14.092896180992406
best_error: 14.092896174325261
best_error: 14.090848436417758
best_error: 14.090848436390605
best_error: 14.090848429876687
best_error: 14.084022007540947
best_error: 14.084022007540408
best_error: 14.084022003785215
best_error: 14.081802226052455
best_error: 14.081802226047087
best_error: 14.080930446724022
best_error: 14.080930446718526
best_error: 14.078190721353364
best_error: 14.078190721347523
best_error: 14.078190721194975
best_error: 14.076101822534318
best_error: 14.076101822532005
best_error: 14.076101817419854
best_error: 14.074311422248398
best_error: 14.074311422246385
best_error: 14.07431141707954
best_error: 14.07277444367867
best_error: 14.072774443672113
best_error: 14.072774443177092
best_error: 14.069568697973226
best_error: 14.069568697967735
best_error: 14.069568697466439
best_error: 14.056300216108609
best_error: 14.05630021610504
best_error: 14.056300213608917
best_error: 13.967577523391087
best_error: 13.967577523386288
best_error: 13.967577515412131
best_error: 13.817575638661612
best_error: 13.817575638651611
best_error: 13.817575629159526
best_error: 13.79586114419727
best_error: 13.795861144188107
best_error: 13.795861136268153
best_error: 13.79016967327653
best_error: 13.790169673267137
best_error: 13.790169666675006
best_error: 13.790009592828168
best_error: 13.790009592813435
best_error: 13.78835951728838
best_error: 13.788359517277623
best_error: 13.788359513545656
best_error: 13.788151070102902
best_error: 13.788151070091
best_error: 13.788151068903591
best_error: 13.788075015765266
best_error: 13.78807501575267
best_error: 13.787882297061586
best_error: 13.787882297049046
best_error: 13.787835938577919
best_error: 13.787835938565356
best_error: 13.787822210142282
best_error: 13.787822210129779
best_error: 13.787818667879165
best_error: 13.787818667867297
best_error: 13.787818666653614
best_error: 13.787818627181775
best_error: 13.78781862716983
best_error: 13.787818625953019
best_error: 13.787818596228032
best_error: 13.787818596215416
best_error: 13.787818395297812
best_error: 13.787818395285205
best_error: 13.787817723855387
best_error: 13.787817723843428
best_error: 13.78781772262591
best_error: 13.787817720717479
best_error: 13.787817720704904
best_error: 13.787817719173146
best_error: 13.787817719160575
best_error: 13.787817717416194
best_error: 13.78781771740362
best_error: 13.787817715843268
best_error: 13.78781771583069
best_error: 13.787817715055581
best_error: 13.787817715042998
best_error: 13.78781771434778
best_error: 13.787817714335196
best_error: 13.787817714001884
best_error: 13.787817713989309
best_error: 13.787817713785602
best_error: 13.787817713773023
best_error: 13.787817713589657
best_error: 13.78781771357708
