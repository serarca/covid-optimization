ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.63931306404948
best_error: 11.639313060057969
best_error: 11.400646989052637
best_error: 11.400646956578315
best_error: 8.263327995360372
best_error: 8.263327536254053
best_error: 6.637892623074618
best_error: 6.637892106305792
best_error: 6.5262735367908675
best_error: 6.52627348364788
best_error: 6.4842498505664565
best_error: 6.484249687953346
best_error: 6.468817082934524
best_error: 6.468817072418934
best_error: 6.463900144887026
best_error: 6.463900106544524
best_error: 6.463801840201351
best_error: 6.463801801852652
best_error: 6.463795834387104
best_error: 6.463795796038025
best_error: 6.4637952047990295
best_error: 6.463795166449913
best_error: 6.463795106772468
best_error: 6.463795106743154
best_error: 6.463795091363929
best_error: 6.463795088300206
best_error: 6.463795068814899
best_error: 6.463795059541466
best_error: 6.463793712340004
best_error: 6.463793703066637
best_error: 6.463789585737638
best_error: 6.463789547388051
best_error: 6.463780517290407
best_error: 6.463780478940061
best_error: 6.46374424208768
best_error: 6.463744203734294
best_error: 6.4635991186504835
best_error: 6.463599080284892
best_error: 6.463018262522654
best_error: 6.4630182241082395
best_error: 6.460689017028086
best_error: 6.4606889784180295
best_error: 6.451285230521549
best_error: 6.451285191444941
best_error: 6.414589556035766
best_error: 6.414589398294534
best_error: 5.908661881037018
best_error: 5.908661778171551
best_error: 5.908477343411812
best_error: 5.9084772405337675
best_error: 5.907738881298291
best_error: 5.907738778586461
best_error: 5.904777878449072
best_error: 5.9047777756575135
best_error: 5.892853924673721
best_error: 5.892853823319142
best_error: 5.8438479293497565
best_error: 5.843847836569695
best_error: 5.671857287366516
best_error: 5.671857252245806
best_error: 5.6667022761683805
best_error: 5.666702223454606
best_error: 5.424394230932975
best_error: 5.424394130187054
best_error: 5.071542884331287
best_error: 5.071542738467927
best_error: 4.958606967454751
best_error: 4.958606896568975
best_error: 4.938475041326208
best_error: 4.938475041133915
best_error: 4.938475041095642
best_error: 4.938475037903816
best_error: 4.748647856403662
best_error: 4.748647637066272
best_error: 4.515100258916242
best_error: 4.5151002229789725
best_error: 4.506120466014716
best_error: 4.506120438902892
best_error: 4.486305259847175
best_error: 4.48630522717161
best_error: 4.485556426298134
best_error: 4.485556324229331
best_error: 4.470282382395804
best_error: 4.470282335291291
best_error: 4.449647866813079
best_error: 4.4496478141139
best_error: 4.4026178332244195
best_error: 4.40261781214894
best_error: 4.354057306740955
best_error: 4.354057255002131
best_error: 4.31860603859738
best_error: 4.318605976979635
best_error: 4.2989952430320795
best_error: 4.298995224649348
best_error: 4.293662225536381
best_error: 4.293662144803876
best_error: 4.2725916186128154
best_error: 4.272591578113643
best_error: 4.267439482668249
best_error: 4.267439474460428
best_error: 4.259513319773124
best_error: 4.259513315018166
best_error: 4.259513310810837
best_error: 4.253805327705537
best_error: 4.253805303042175
best_error: 4.253311290778358
best_error: 4.253311270557587
best_error: 4.253208104611778
best_error: 4.2532080851783505
best_error: 4.2531268730274
best_error: 4.25312685400244
best_error: 4.253055902872765
best_error: 4.253055885306347
best_error: 4.2529781877259785
best_error: 4.252978170510113
best_error: 4.252956614425919
best_error: 4.252956597308882
best_error: 4.252943235858275
best_error: 4.252943218733136
best_error: 4.252931335882691
best_error: 4.252931319038903
best_error: 4.252927268972778
best_error: 4.252927252125975
best_error: 4.252927101771685
best_error: 4.2529270849247585
best_error: 4.252926953892812
best_error: 4.252926937045776
best_error: 4.252926878407033
best_error: 4.252926861559935
best_error: 4.252926811514358
best_error: 4.2529267946672125
best_error: 4.252926777766618
best_error: 4.252926760919452
best_error: 4.252926758872574
best_error: 4.25292674202539
best_error: 4.252926730649888
best_error: 4.25292672812064
best_error: 4.252926711273434
best_error: 4.252926710175582
best_error: 4.252926709023598
best_error: 4.252926708683162
best_error: 4.252926708655669
best_error: 4.252926708357815
