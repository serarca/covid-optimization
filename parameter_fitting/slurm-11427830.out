ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.25086870358358
best_error: 23.25086842157075
best_error: 4.621163466743196
best_error: 4.621163465434081
best_error: 4.620542303293212
best_error: 4.620542303282539
best_error: 4.620542303216497
best_error: 4.618035665746642
best_error: 4.618035665735622
best_error: 4.61803566566931
best_error: 4.60765307183718
best_error: 4.607653071824592
best_error: 4.607653071757236
best_error: 4.558768825714781
best_error: 4.558768825690854
best_error: 4.558768825621038
best_error: 3.274576471802242
best_error: 3.2745764484431987
best_error: 3.1762873329654138
best_error: 3.1762873103995757
best_error: 3.065280078731833
best_error: 3.0652800540610503
best_error: 2.9710480056710185
best_error: 2.971047980954779
best_error: 2.9419756647498785
best_error: 2.94197561014242
best_error: 2.9287850597442597
best_error: 2.928785041029883
best_error: 2.9150733919349
best_error: 2.9150733640731046
best_error: 2.893530504833352
best_error: 2.8935304789787586
best_error: 2.747628407246039
best_error: 2.7476283673516924
best_error: 2.6207761345712752
best_error: 2.6207760993243348
best_error: 2.6207760756718637
best_error: 2.450911273915334
best_error: 2.450911243602207
best_error: 2.4509111847479756
best_error: 2.2241826377130245
best_error: 2.2241826112560665
best_error: 2.22418251573483
best_error: 2.1541788378502096
best_error: 2.1541787624256923
best_error: 2.1495161007996275
best_error: 2.149516016882192
best_error: 1.9944224081058808
best_error: 1.9944223440071716
best_error: 1.9828437842988649
best_error: 1.9828437673202595
best_error: 1.9812417866142105
best_error: 1.9812417724013662
best_error: 1.9776760854338418
best_error: 1.9776760618798546
best_error: 1.9637910653440833
best_error: 1.963791027026866
best_error: 1.9193138600838777
best_error: 1.9193138218467294
best_error: 1.8479534924080854
best_error: 1.847953456341097
best_error: 1.6943679557543367
best_error: 1.6943679240468748
best_error: 1.4073879133870266
best_error: 1.407387858891914
best_error: 1.3899861462299932
best_error: 1.389986081054096
best_error: 1.3828601848589017
best_error: 1.3828601340938933
best_error: 1.3677638591520016
best_error: 1.3677638193420714
best_error: 1.3628884266952566
best_error: 1.362888393036149
best_error: 1.36074761986631
best_error: 1.3607476000653274
best_error: 1.35857491700663
best_error: 1.3585749049330482
best_error: 1.3498254648748018
best_error: 1.3498254092129727
best_error: 1.348285226737413
best_error: 1.3482852060570352
best_error: 1.3477848406084008
best_error: 1.3477848398758991
best_error: 1.3477452090863826
best_error: 1.3477452086682404
best_error: 1.3477452085189858
best_error: 1.347745208467986
best_error: 1.3474976121062996
best_error: 1.3474976086706283
best_error: 1.3468630092646472
best_error: 1.3468630036178866
best_error: 1.3427003609550432
best_error: 1.3427003274834828
best_error: 1.3302152499934092
best_error: 1.3302151774702424
best_error: 1.3204379408400486
best_error: 1.3204378291974908
best_error: 1.3157898764774387
best_error: 1.3157898753272803
best_error: 1.3157898433157833
best_error: 1.312743520885006
best_error: 1.3127435147172417
best_error: 1.312395853598401
best_error: 1.3123958534964115
best_error: 1.3123958529594473
best_error: 1.31239585262865
best_error: 1.3122730619757323
best_error: 1.3122730619147007
best_error: 1.3122730618435856
best_error: 1.312273061292795
best_error: 1.3122730612175115
best_error: 1.3121935400277034
best_error: 1.3121935243958438
best_error: 1.312014355252097
best_error: 1.3120143442921925
best_error: 1.3106847334055123
best_error: 1.3106847284902343
best_error: 1.307481957747482
best_error: 1.3074819428828517
best_error: 1.3072652789434773
best_error: 1.307265258448058
best_error: 1.3032588015038393
best_error: 1.3032587819073063
best_error: 1.3019362901826474
best_error: 1.3019362773197767
best_error: 1.3006540573912226
best_error: 1.3006540203684358
best_error: 1.3002401157290557
best_error: 1.3002401143801092
best_error: 1.3002401104555839
best_error: 1.3001083468516628
best_error: 1.3001083416729011
best_error: 1.3000389057482844
best_error: 1.3000389024691585
best_error: 1.2998488630088554
best_error: 1.299848859650504
best_error: 1.299496831150837
best_error: 1.2994968311471131
best_error: 1.299496831114912
best_error: 1.2994968305617436
best_error: 1.2994968301365726
best_error: 1.2980789783449265
best_error: 1.2980789782977435
best_error: 1.2980789778744661
best_error: 1.298078976395074
best_error: 1.2976413578249641
best_error: 1.2976413060458845
best_error: 1.2966296211774553
best_error: 1.2966296152433698
best_error: 1.294845582306532
best_error: 1.294845563966673
best_error: 1.2918775891815175
best_error: 1.2918775492536105
best_error: 1.2884326056186755
best_error: 1.288432596288506
best_error: 1.287754909554581
best_error: 1.2877549035700266
best_error: 1.287682403110737
best_error: 1.287682401363042
best_error: 1.2876823912774142
best_error: 1.2873512435325676
best_error: 1.2873512432482566
best_error: 1.2873512298245953
best_error: 1.286194337941818
best_error: 1.286194335817494
best_error: 1.2861943305424088
best_error: 1.285255243553231
best_error: 1.2852552238508475
best_error: 1.284983482257843
best_error: 1.284983477879595
best_error: 1.2846203719482585
best_error: 1.2846203615986895
best_error: 1.2836937781608093
best_error: 1.2836937721068806
best_error: 1.283454063765984
best_error: 1.2834540603067328
best_error: 1.2833946368021139
best_error: 1.2833946357121075
best_error: 1.2833471129824188
best_error: 1.2833471106044
best_error: 1.283180549358296
best_error: 1.2831805433970818
best_error: 1.2824700686941046
best_error: 1.282470050016748
best_error: 1.2820156591016874
best_error: 1.2820156368582045
best_error: 1.2813936574723133
best_error: 1.2813936414788176
best_error: 1.2806522613660072
best_error: 1.2806522612849651
best_error: 1.2806522612697209
best_error: 1.2806522605858297
best_error: 1.28059541529798
best_error: 1.2805954151602148
best_error: 1.280595414604767
best_error: 1.280567323358224
best_error: 1.2805673227947807
best_error: 1.2805673226754088
best_error: 1.2805339089691445
best_error: 1.2805339039455492
best_error: 1.280449026148901
best_error: 1.2804490253726197
best_error: 1.280324563411295
best_error: 1.2803245621828185
best_error: 1.2801209215697649
best_error: 1.2801209190124407
best_error: 1.2799655239195753
best_error: 1.2799655171075337
best_error: 1.2790983062926815
best_error: 1.2790982972443974
best_error: 1.2767932247295635
best_error: 1.2767932114057439
best_error: 1.2739425558451776
best_error: 1.273942531466096
best_error: 1.2738098826095516
best_error: 1.2738098645712794
best_error: 1.2738021978563505
best_error: 1.2738021814622555
best_error: 1.2689542593860446
best_error: 1.268954241643277
best_error: 1.265641473396301
best_error: 1.2656414571797117
best_error: 1.2601366055391905
best_error: 1.2601365923909518
best_error: 1.2583932054033005
best_error: 1.258393154867534
best_error: 1.2578192287622418
best_error: 1.2578192130101846
best_error: 1.257121289356425
best_error: 1.2571212847964979
best_error: 1.2570351575031302
best_error: 1.257035152696319
best_error: 1.2568581924224045
best_error: 1.2568581900017237
best_error: 1.2566221986227308
best_error: 1.2566221957281298
best_error: 1.2565990385152241
best_error: 1.2565990366884954
best_error: 1.2565860105069058
best_error: 1.256586009806691
best_error: 1.2565783285962173
best_error: 1.256578328388666
best_error: 1.2565562725512491
best_error: 1.2565562721728119
best_error: 1.2565184368486648
best_error: 1.256518436683007
best_error: 1.256518436666486
best_error: 1.2563932601184056
best_error: 1.2563932600098282
best_error: 1.2563932599602579
best_error: 1.256393259750142
best_error: 1.2561431268785768
best_error: 1.2561431068175477
best_error: 1.2556098363390407
best_error: 1.2556098150183888
best_error: 1.255267584659732
best_error: 1.2552675540879226
best_error: 1.2536112781021216
best_error: 1.253611260224428
best_error: 1.2529674411535254
best_error: 1.252967440400631
best_error: 1.2528931368459701
best_error: 1.2528931304082622
best_error: 1.2528065150134837
best_error: 1.252806507710653
best_error: 1.2527087024301122
best_error: 1.2527087022780221
best_error: 1.2527087022129193
best_error: 1.2527087018228134
best_error: 1.2525864593689429
best_error: 1.252586456406502
best_error: 1.252559050939901
best_error: 1.252559049111012
best_error: 1.2525515880214206
best_error: 1.2525515877456015
