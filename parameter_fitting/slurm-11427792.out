ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.02379954581904
best_error: 24.02379909033758
best_error: 4.819958241780069
best_error: 4.81995824085822
best_error: 4.81976534240281
best_error: 4.8197653423966935
best_error: 4.81976534237928
best_error: 4.818990944826422
best_error: 4.818990944820203
best_error: 4.818990944802794
best_error: 4.815845142592033
best_error: 4.815845142585377
best_error: 4.815845142568004
best_error: 4.802372976766461
best_error: 4.802372976757516
best_error: 4.80237297674061
best_error: 4.725767485607847
best_error: 4.725767485557058
best_error: 4.654866790760519
best_error: 4.654866790536659
best_error: 4.518577901223669
best_error: 4.5185778995760595
best_error: 4.474611478033372
best_error: 4.474611475475346
best_error: 3.795164163052058
best_error: 3.7951639561579302
best_error: 3.625286188943516
best_error: 3.6252861561161325
best_error: 3.312135053973679
best_error: 3.312134929639364
best_error: 3.2114052413520167
best_error: 3.2114051755184274
best_error: 3.1960509475656402
best_error: 3.196050867284521
best_error: 3.048463903242164
best_error: 3.0484638180246493
best_error: 2.7926960145892825
best_error: 2.7926959244728806
best_error: 2.783483606502403
best_error: 2.783483458295844
best_error: 2.772119767772488
best_error: 2.7721196440710334
best_error: 2.700338195954168
best_error: 2.7003380915318087
best_error: 2.6255986407432426
best_error: 2.6255986059758203
best_error: 2.5992071182229264
best_error: 2.599207095140083
best_error: 2.589018156494148
best_error: 2.589018133760435
best_error: 2.555872272975675
best_error: 2.5558722306844546
best_error: 2.5180977029319074
best_error: 2.518097573356434
best_error: 2.492863902301947
best_error: 2.4928638756329975
best_error: 2.4721578475127277
best_error: 2.4721578425747683
best_error: 2.4721578415870504
best_error: 2.467243806857506
best_error: 2.467243756858788
best_error: 2.458571852969881
best_error: 2.4585718321725176
best_error: 2.454205724798712
best_error: 2.454205626108238
best_error: 2.443014493573144
best_error: 2.443014492962721
best_error: 2.443014488553015
best_error: 2.436472741376962
best_error: 2.4364727348352644
best_error: 2.3981790117140047
best_error: 2.3981790023143867
best_error: 2.395678960669264
best_error: 2.3956789310280224
best_error: 2.3773214816737385
best_error: 2.3773214380065193
best_error: 2.3030028426476985
best_error: 2.303002768241881
best_error: 2.0451629768626582
best_error: 2.045162764301797
best_error: 2.0064789504018763
best_error: 2.0064788331781727
best_error: 1.9959968516132678
best_error: 1.995996728227428
best_error: 1.813549108768761
best_error: 1.8135489844241255
best_error: 1.7762577842207494
best_error: 1.7762577486562208
best_error: 1.7666563196641496
best_error: 1.766656290498368
best_error: 1.7651316090045694
best_error: 1.7651316078154806
best_error: 1.765131605684362
best_error: 1.764978953241062
best_error: 1.7649789508828386
best_error: 1.7649789500020407
best_error: 1.7643577505576333
best_error: 1.764357725448139
best_error: 1.7631358396495913
best_error: 1.7631358123145173
best_error: 1.7578964537987494
best_error: 1.7578963918654813
best_error: 1.7493539107719311
best_error: 1.749353869972033
best_error: 1.7404351267546263
best_error: 1.7404350869850935
best_error: 1.724396636379817
best_error: 1.7243966069370844
best_error: 1.7222826613741242
best_error: 1.722282661288459
best_error: 1.722282659426404
best_error: 1.7222826593814704
best_error: 1.7222826575168286
best_error: 1.7158679424530086
best_error: 1.7158679261130079
best_error: 1.7128994805702284
best_error: 1.7128994787578677
best_error: 1.712899473981097
best_error: 1.7120945575118338
best_error: 1.7120945573073638
best_error: 1.712094557033741
best_error: 1.7120945569366868
best_error: 1.7120945562321943
best_error: 1.7120945560928746
best_error: 1.7104536203137564
best_error: 1.7104536050569956
best_error: 1.6977171042310257
best_error: 1.6977170475887307
best_error: 1.6931271486260682
best_error: 1.6931271346241912
best_error: 1.6923780480398178
best_error: 1.6923780397988242
best_error: 1.691408222972816
best_error: 1.6914082104614139
best_error: 1.6902680513539912
best_error: 1.6902680346850352
best_error: 1.689630040763599
best_error: 1.689630032040223
best_error: 1.6877504641114505
best_error: 1.6877504537267796
best_error: 1.6877392317187145
best_error: 1.687739219133649
best_error: 1.6870542349434698
best_error: 1.6870542291946442
best_error: 1.6862239129164316
best_error: 1.6862239129094476
best_error: 1.6862239126521172
best_error: 1.686223911811424
best_error: 1.6853063576405842
best_error: 1.6853063480051913
best_error: 1.6842952661327968
best_error: 1.6842952559001114
best_error: 1.6793214885066363
best_error: 1.6793214285402427
best_error: 1.6760800502297257
best_error: 1.6760800498064143
best_error: 1.6760800486480767
best_error: 1.674106343530535
best_error: 1.6741063431913978
best_error: 1.67410634276829
best_error: 1.6741063420766715
best_error: 1.6709731350186603
best_error: 1.670973128702837
best_error: 1.670466580704221
best_error: 1.6704665774670016
best_error: 1.6699476670319584
best_error: 1.669947663650824
best_error: 1.6693598580581908
best_error: 1.6693598479822855
best_error: 1.6686345763970487
best_error: 1.6686345747208426
best_error: 1.6686345726898275
best_error: 1.667825607978569
best_error: 1.6678255760850047
best_error: 1.6674952300361376
best_error: 1.667495201722493
best_error: 1.6673199979068918
best_error: 1.6673199739050764
best_error: 1.666685568988078
best_error: 1.666685549284542
best_error: 1.6661875283725434
best_error: 1.6661874745978622
best_error: 1.6650659364387774
best_error: 1.6650659362832818
best_error: 1.6650659358172297
best_error: 1.6648605844010798
best_error: 1.664860583794827
best_error: 1.664860154426442
best_error: 1.6648601538197543
best_error: 1.664681112043002
best_error: 1.6646811106675208
best_error: 1.664389403250621
best_error: 1.6643894026080337
best_error: 1.6642181928723787
best_error: 1.6642181873864188
best_error: 1.6641101691204758
best_error: 1.6641101657055677
best_error: 1.6635370980842357
best_error: 1.6635370918345336
best_error: 1.663323265967431
best_error: 1.6633232598340553
best_error: 1.6624824915562464
best_error: 1.6624824855119167
best_error: 1.659753563851097
best_error: 1.6597535410463566
best_error: 1.6591926395044636
best_error: 1.6591926264899997
best_error: 1.6577788150271988
best_error: 1.6577788145428622
best_error: 1.6577788120969013
best_error: 1.6560352735401127
best_error: 1.6560352684042963
best_error: 1.6557287283825715
best_error: 1.6557287245183447
best_error: 1.6556197977412617
best_error: 1.655619794385347
best_error: 1.6554905305035161
best_error: 1.6554905304415453
best_error: 1.6554905298321747
best_error: 1.6549580225491365
best_error: 1.6549580195429627
best_error: 1.6542787447153153
best_error: 1.6542787434026927
best_error: 1.65297472407324
best_error: 1.6529746957654958
best_error: 1.6502624210692074
best_error: 1.6502623883275243
best_error: 1.647389007081816
best_error: 1.6473889977186542
best_error: 1.647312217739619
best_error: 1.6473122156097062
best_error: 1.6424177375309466
best_error: 1.6424177092281733
best_error: 1.641932615802084
best_error: 1.6419326056370076
best_error: 1.6419043030133837
best_error: 1.6419042863859477
best_error: 1.6418889258290812
best_error: 1.641888905319348
best_error: 1.6418871868273408
best_error: 1.6418871643341333
best_error: 1.6418859493665885
best_error: 1.6418859259796759
best_error: 1.6418625211635296
best_error: 1.641862493119631
best_error: 1.6414278975572385
best_error: 1.6414278847517596
best_error: 1.6400400407222973
best_error: 1.6400400403385205
best_error: 1.6400400355954576
best_error: 1.640027367474486
best_error: 1.6400273654433297
best_error: 1.6400159629977475
best_error: 1.6400159605316174
best_error: 1.6399954461506399
best_error: 1.6399954451645165
best_error: 1.6399954434343282
best_error: 1.6399849545238194
best_error: 1.6399849518728393
best_error: 1.6399738490204756
best_error: 1.6399738488341395
best_error: 1.6399738456549044
best_error: 1.639964797288556
best_error: 1.6399647948696858
best_error: 1.6399574854818793
best_error: 1.6399574850522844
best_error: 1.639957482805674
best_error: 1.639950844616225
best_error: 1.639950842704189
