ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.753579650919974
best_error: 10.753579609970414
best_error: 10.753579582502628
best_error: 10.294112321534339
best_error: 10.294112261486928
best_error: 10.294112233727697
best_error: 9.331464246366785
best_error: 9.33146415238001
best_error: 9.0373068671718
best_error: 9.03730676084607
best_error: 8.872374446004862
best_error: 8.872374333274056
best_error: 8.426210840496962
best_error: 8.42621070041196
best_error: 8.216439884915953
best_error: 8.2164397408196
best_error: 8.061084654175584
best_error: 8.061084602989627
best_error: 8.061084554275842
best_error: 7.2573588795572
best_error: 7.257358844716135
best_error: 7.257358761852778
best_error: 7.241360048863077
best_error: 7.241360032982664
best_error: 7.152413638250211
best_error: 7.152413613052681
best_error: 7.152413518361882
best_error: 6.872100039397726
best_error: 6.872100030293115
best_error: 6.872099911736157
best_error: 6.419926955476084
best_error: 6.419926926354574
best_error: 4.6430540678567604
best_error: 4.643053844398815
best_error: 3.1990972463293224
best_error: 3.199096942971239
best_error: 3.1957552034894756
best_error: 3.195755155071919
best_error: 3.1408052731179126
best_error: 3.1408049740816235
best_error: 3.06358958936156
best_error: 3.063589287610645
best_error: 3.0524211499299065
best_error: 3.052420846670043
best_error: 3.045010076842397
best_error: 3.045009772584284
best_error: 3.0414732076720212
best_error: 3.0414729029383496
best_error: 3.0389015478538353
best_error: 3.0389012427221664
best_error: 3.0384529818299963
best_error: 3.038452937811913
best_error: 3.0383243190610996
best_error: 3.03832401378706
best_error: 3.0375731819479275
best_error: 3.0375728763580154
best_error: 3.0374914166115987
best_error: 3.0374911110013585
best_error: 3.0374518052159654
best_error: 3.037451499595897
best_error: 3.0374319898156363
best_error: 3.0374316841906386
best_error: 3.037421594396623
best_error: 3.037421288769049
best_error: 3.0374161293558695
best_error: 3.037415823726936
best_error: 3.0374132593929204
best_error: 3.0374129537632726
best_error: 3.0374117592318393
best_error: 3.0374114536018224
best_error: 3.0353149030478117
best_error: 3.0353145813592963
best_error: 2.964617050575426
best_error: 2.9646167392673783
best_error: 2.7292743890655804
best_error: 2.7292741203675837
best_error: 2.634287936658328
best_error: 2.634287669415957
best_error: 2.5567148577195837
best_error: 2.5567145836304928
best_error: 2.477848400299539
best_error: 2.477848123793705
best_error: 2.154816622843358
best_error: 2.1548162996334534
best_error: 1.8523926370966775
best_error: 1.852392340780236
best_error: 1.7758317505248367
best_error: 1.7758314556129302
best_error: 1.7489686905836404
best_error: 1.7489683944319263
best_error: 1.7314501541611156
best_error: 1.7314498571869779
best_error: 1.7240625854305853
best_error: 1.724062288178467
best_error: 1.72204574023702
best_error: 1.7220454437839263
best_error: 1.7217288575252387
best_error: 1.7217285610397628
best_error: 1.7216262493326897
best_error: 1.7216259528367228
best_error: 1.7215601190967882
best_error: 1.7215598225940438
best_error: 1.7215397379961135
best_error: 1.7215394414914387
best_error: 1.721529269318571
best_error: 1.7215289728128975
best_error: 1.7215249197199727
best_error: 1.721524623213871
best_error: 1.7215236250475778
best_error: 1.7215236250322397
best_error: 1.6753618285507796
best_error: 1.6753618285354337
best_error: 1.6040558567007732
best_error: 1.6040558566842766
best_error: 1.5961669357628823
best_error: 1.5961669357463706
best_error: 1.5919831082509308
best_error: 1.591983108234351
best_error: 1.5893037879547158
best_error: 1.589303787938141
best_error: 1.5880175230280051
best_error: 1.5880175230114129
best_error: 1.5874310274623302
best_error: 1.587431027445737
best_error: 1.5870172260621942
best_error: 1.587017226045576
best_error: 1.586978730792333
best_error: 1.5869787307757184
best_error: 1.586961765160105
best_error: 1.5869614519602178
best_error: 1.58695664011183
best_error: 1.5869566400951967
best_error: 1.5869550873922935
best_error: 1.5869548815577879
best_error: 1.5869546674181088
best_error: 1.5869546674015347
best_error: 1.5869544793881407
best_error: 1.586954479371566
best_error: 1.586954428806191
best_error: 1.586954428789603
best_error: 1.5869544230907253
best_error: 1.5869544230741326
best_error: 1.5869544193075642
best_error: 1.5869544192909177
best_error: 1.5869544174135595
best_error: 1.5869544173969596
best_error: 1.5869544160438127
best_error: 1.586954416027253
best_error: 1.586954402515858
