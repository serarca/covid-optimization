ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.156748112103937
best_error: 22.156748018767203
best_error: 4.479779817230667
best_error: 4.4797798157347275
best_error: 4.476500804234522
best_error: 4.476500804166992
best_error: 4.4765008036412945
best_error: 4.463010436808911
best_error: 4.463010436734724
best_error: 4.463010436198256
best_error: 4.402581032742229
best_error: 4.402581032630787
best_error: 4.402581032048874
best_error: 4.292695634321058
best_error: 4.292695634099449
best_error: 4.2926956334600215
best_error: 4.285561443998771
best_error: 4.28556144376645
best_error: 4.285561443126934
best_error: 4.254381507090314
best_error: 4.2543815068060065
best_error: 4.254381506170189
best_error: 4.0608514910288305
best_error: 4.06085149014552
best_error: 4.060851489770292
best_error: 3.90512789207406
best_error: 3.90512789017148
best_error: 3.7107683756664347
best_error: 3.7107683715407886
best_error: 3.664295713108554
best_error: 3.664295548177722
best_error: 3.619066595941045
best_error: 3.6190665903515695
best_error: 2.823837677952069
best_error: 2.8238376540641905
best_error: 2.799733367833419
best_error: 2.799733342314977
best_error: 2.7705111356641687
best_error: 2.7705111272197045
best_error: 2.770511111917273
best_error: 2.510069061983203
best_error: 2.510068992432777
best_error: 2.4605991191600283
best_error: 2.4605990420117045
best_error: 2.4021778542756294
best_error: 2.402177767040028
best_error: 2.02109212027147
best_error: 2.021091986631619
best_error: 1.7592767125614532
best_error: 1.75927653442221
best_error: 1.749374544983037
best_error: 1.7493744489619063
best_error: 1.7081217897481142
best_error: 1.7081217823191124
best_error: 1.708121764403461
best_error: 1.6925573174109814
best_error: 1.6925572969622675
best_error: 1.6724904131900886
best_error: 1.6724904095037898
best_error: 1.6724904091887338
best_error: 1.6695768180076103
best_error: 1.6695767942401907
best_error: 1.6672190619723504
best_error: 1.6672190610275484
best_error: 1.6672190578283672
best_error: 1.6635670553897168
best_error: 1.6635670485098197
best_error: 1.6509581732860987
best_error: 1.6509581455837579
best_error: 1.578490790361475
best_error: 1.5784907251010463
best_error: 1.4327701040182637
best_error: 1.4327699414238249
best_error: 1.3815636254387536
best_error: 1.3815635295626658
best_error: 1.374694855702919
best_error: 1.3746947360471629
best_error: 1.3359579607359477
best_error: 1.3359578518538826
best_error: 1.2950824765913884
best_error: 1.2950823072007336
best_error: 1.2591169700787506
best_error: 1.259116841630365
best_error: 1.2173526137288309
best_error: 1.2173525438422004
best_error: 1.2125452463534367
best_error: 1.212545240303421
best_error: 1.2101199283893935
best_error: 1.2101199209743683
best_error: 1.2088665732466675
best_error: 1.2088665546454032
best_error: 1.208373124822386
best_error: 1.2083731231736323
best_error: 1.2074896727210587
best_error: 1.2074896680466884
best_error: 1.2067535296483702
best_error: 1.2067535205411084
best_error: 1.2055892456638255
best_error: 1.2055892324261968
best_error: 1.2014251174575523
best_error: 1.2014250987610444
best_error: 1.1944895976077416
best_error: 1.1944895680237801
best_error: 1.1850269970879888
best_error: 1.185026943293403
best_error: 1.1691885207282202
best_error: 1.1691884552218832
best_error: 1.1482421310012954
best_error: 1.1482420113872647
best_error: 1.1292138399827605
best_error: 1.1292138232628184
best_error: 1.119590958178672
best_error: 1.1195909343982953
best_error: 1.0472113870797408
best_error: 1.047211118567691
best_error: 1.014407645424194
best_error: 1.014407485014772
best_error: 1.01181981130803
best_error: 1.011819624412042
best_error: 1.007309097246158
best_error: 1.007309080463717
best_error: 0.9987896706751337
best_error: 0.9987896387427265
best_error: 0.997728625912858
best_error: 0.9977285343427323
best_error: 0.9874212129504145
best_error: 0.9874211753164528
best_error: 0.9857031721688895
best_error: 0.9857031620531896
best_error: 0.9844946772408053
best_error: 0.9844946759513915
best_error: 0.9844946754687811
best_error: 0.9827032410380805
best_error: 0.9827032409098452
best_error: 0.9827032404599294
best_error: 0.9827032390490928
best_error: 0.9791479241298391
best_error: 0.9791479239508836
best_error: 0.9791479233161017
best_error: 0.979147922239115
best_error: 0.978702568799094
best_error: 0.9787025684955506
best_error: 0.9787025676513165
best_error: 0.9787025671435725
best_error: 0.9781648105410977
best_error: 0.9781648099380931
best_error: 0.9781648094764445
best_error: 0.9781648088193287
best_error: 0.9780181738861828
best_error: 0.9780181725773344
best_error: 0.9780181721494511
best_error: 0.9772505611901043
best_error: 0.977250558344036
best_error: 0.9767673896903303
best_error: 0.9767673762193523
best_error: 0.976400511979745
best_error: 0.9764005009294964
best_error: 0.9755448475033117
best_error: 0.9755448419855823
best_error: 0.9744688587673772
best_error: 0.974468847230022
best_error: 0.9706696312080716
best_error: 0.9706696211797123
best_error: 0.9615986737227417
best_error: 0.961598631923182
best_error: 0.9529375154000158
best_error: 0.9529374982172611
best_error: 0.9372645072891591
best_error: 0.9372644881503602
best_error: 0.930363245941033
best_error: 0.9303631862540098
best_error: 0.9302492498161409
best_error: 0.9302491853620919
best_error: 0.9302399928803436
best_error: 0.9302399262408708
best_error: 0.9181213635238293
best_error: 0.9181213096275194
best_error: 0.9177242496678456
best_error: 0.9177241866389442
best_error: 0.9001652348104726
best_error: 0.9001652089520027
best_error: 0.8992671720463139
best_error: 0.8992671395659859
best_error: 0.8989177428108188
best_error: 0.8989177076329681
best_error: 0.8974504530874046
best_error: 0.8974504445728527
best_error: 0.8963631782742645
best_error: 0.8963631733117816
best_error: 0.896363169163202
best_error: 0.8950028825069971
best_error: 0.8950028795401369
best_error: 0.8950028699710796
best_error: 0.891513141430182
best_error: 0.8915131128785516
best_error: 0.8905007488946662
best_error: 0.8905007393150458
best_error: 0.8903627988921637
best_error: 0.890362798843597
best_error: 0.8903627986922448
best_error: 0.8903474890684453
best_error: 0.8903474883082285
best_error: 0.8902935619814493
best_error: 0.890293560596744
best_error: 0.8901373431520363
best_error: 0.890137340310995
best_error: 0.8897326330059999
best_error: 0.8897326266942852
best_error: 0.8876468242840996
best_error: 0.8876468075639445
best_error: 0.8834024889641854
best_error: 0.883402467283203
best_error: 0.8833097057530952
best_error: 0.8833096476910031
best_error: 0.8825247909149668
best_error: 0.8825247511170273
best_error: 0.8664920568699013
best_error: 0.8664920192585884
best_error: 0.8658584643086564
best_error: 0.8658584266130823
best_error: 0.8605273727550413
best_error: 0.8605273452952592
best_error: 0.8574949352413508
best_error: 0.8574949123077715
best_error: 0.8516953947143605
best_error: 0.8516952849805154
best_error: 0.8474166691859364
best_error: 0.8474166596235893
best_error: 0.8442050328315385
best_error: 0.8442050015643356
best_error: 0.843094405401144
best_error: 0.8430943374115624
best_error: 0.8413583091377858
best_error: 0.8413582911707209
best_error: 0.8409189840909802
best_error: 0.8409189779044781
best_error: 0.840844390597207
best_error: 0.8408443864233972
best_error: 0.8404523957638819
best_error: 0.8404523946764025
best_error: 0.840431394262175
best_error: 0.8404313881820858
best_error: 0.8404290612101087
best_error: 0.8404290517495658
best_error: 0.8397964739774375
best_error: 0.8397964712187275
best_error: 0.8396960383443153
best_error: 0.8396960370683167
best_error: 0.839662666241834
best_error: 0.839662665179769
best_error: 0.839651025226384
best_error: 0.8396510243814691
best_error: 0.8396476372603163
best_error: 0.8396476363141022
best_error: 0.8396464203201094
best_error: 0.8396464187278438
best_error: 0.8396458208058607
best_error: 0.8396458198168163
best_error: 0.8396447466628425
best_error: 0.8396447463808385
best_error: 0.8396443304152861
best_error: 0.8396443303463726
best_error: 0.8396435153136765
best_error: 0.8396435151327796
best_error: 0.8396411756847467
best_error: 0.8396411749644273
best_error: 0.8396317782084057
best_error: 0.8396317777713657
best_error: 0.83960377912248
best_error: 0.8396037770623067
