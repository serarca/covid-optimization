ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 76
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 106.51352366346211
best_error: 106.51352361652016
best_error: 106.51352360628937
best_error: 106.5135234848639
best_error: 21.17675533987809
best_error: 21.17675513984798
best_error: 21.176753771241113
best_error: 19.227568212532095
best_error: 19.227568212109016
best_error: 19.22756819681985
best_error: 19.215444128336458
best_error: 19.21544412788299
best_error: 19.215444111523478
best_error: 19.1586320725317
best_error: 19.15863207194594
best_error: 19.158632050295566
best_error: 18.633977028136783
best_error: 18.633977027369443
best_error: 18.633976942285393
best_error: 18.593459812044888
best_error: 18.593459811340352
best_error: 18.593459720568042
best_error: 18.54806938223839
best_error: 18.548069381615896
best_error: 18.54806928437205
best_error: 17.521768691437757
best_error: 17.52176843892242
best_error: 14.603797714002727
best_error: 14.603797308477333
best_error: 14.011293159611784
best_error: 14.011292824875321
best_error: 13.694352838506678
best_error: 13.69435271948203
best_error: 13.644149443634639
best_error: 13.644149326297764
best_error: 13.641490570832643
best_error: 13.641490452986114
best_error: 13.6410628278597
best_error: 13.64106270993128
best_error: 13.640969028737484
best_error: 13.640969016407347
best_error: 13.640969016398568
best_error: 13.64096900440007
best_error: 13.55809855033537
best_error: 13.558098415619469
best_error: 13.390456807053258
best_error: 13.390456785076523
best_error: 13.3093843170771
best_error: 13.30938429923166
best_error: 13.309384298136626
best_error: 12.970604211668574
best_error: 12.970604199550491
best_error: 12.970604193117591
best_error: 12.284075246738809
best_error: 12.284075240471573
best_error: 12.284075237426386
best_error: 12.184322945706818
best_error: 12.184322938616068
best_error: 12.184322935139612
best_error: 12.162405172354791
best_error: 12.162405158412128
best_error: 12.154461442276592
best_error: 12.154461426294054
best_error: 12.148957451472922
best_error: 12.148957437779107
best_error: 12.137827425020028
best_error: 12.137827414417986
best_error: 12.071842717360177
best_error: 12.071842234390028
best_error: 11.984893738370463
best_error: 11.984893534652265
best_error: 11.717908024033795
best_error: 11.717907940314944
best_error: 11.609669188313413
best_error: 11.609669155798443
best_error: 11.512827612349852
best_error: 11.51282760653374
best_error: 11.5128276027549
best_error: 11.50131160599273
best_error: 11.501311560171505
best_error: 11.474420756716583
best_error: 11.474420743416339
best_error: 11.423565291199475
best_error: 11.423565123603746
best_error: 11.409967213880506
best_error: 11.40996719945299
best_error: 11.409341146778237
best_error: 11.409341132264576
best_error: 11.358063059197384
best_error: 11.358063045537405
best_error: 11.185378499282114
best_error: 11.185378497843336
best_error: 11.185378488338745
best_error: 11.172864571314488
best_error: 11.172864553902436
best_error: 11.159098335885403
best_error: 11.159098319215186
best_error: 11.093587492197125
best_error: 11.093587481163224
best_error: 11.092389823191175
best_error: 11.092389695089292
best_error: 11.080424574653305
best_error: 11.080424564199257
best_error: 11.072744453264306
best_error: 11.072744441832869
best_error: 11.051063817695338
best_error: 11.051063806626303
best_error: 11.041571902059959
best_error: 11.041571884342515
best_error: 11.014856602640506
best_error: 11.014856586833597
best_error: 11.013353370909687
best_error: 11.013353310994155
best_error: 11.013146988809277
best_error: 11.01314671179638
best_error: 10.999100803076788
best_error: 10.999100755711238
best_error: 10.992786683940446
best_error: 10.992786669850819
best_error: 10.990803921880964
best_error: 10.990803907326228
best_error: 10.99060033398805
best_error: 10.99060031915104
best_error: 10.990567561280944
best_error: 10.990567546443833
best_error: 10.990563264294991
best_error: 10.990563249457866
best_error: 10.990562549607956
best_error: 10.990562549566263
best_error: 10.990562549507551
best_error: 10.990562548940353
best_error: 10.990562548646913
best_error: 10.990562545283138
best_error: 10.990562539730366
best_error: 10.990562534516322
