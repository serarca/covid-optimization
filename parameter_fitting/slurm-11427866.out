ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 80
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 20.986111685769973
best_error: 20.986111547130417
best_error: 4.389378087057136
best_error: 4.389378085310293
best_error: 4.386136047819692
best_error: 4.386136047761682
best_error: 4.386136047110969
best_error: 4.372781875108137
best_error: 4.372781875044929
best_error: 4.372781874383523
best_error: 4.312262918052161
best_error: 4.312262917961747
best_error: 4.312262917253184
best_error: 3.7717319433462375
best_error: 3.771731942115782
best_error: 3.771731941690893
best_error: 3.555601350352372
best_error: 3.5556013475991635
best_error: 3.327334067699031
best_error: 3.327334061815259
best_error: 3.042254652806179
best_error: 3.0422546401281148
best_error: 2.993488657004422
best_error: 2.9934886405841525
best_error: 2.9919848577670787
best_error: 2.9919848459862317
best_error: 2.9590232896443927
best_error: 2.9590232732975106
best_error: 2.904079377021697
best_error: 2.904079371829157
best_error: 2.904079353488886
best_error: 2.317145636556452
best_error: 2.317145635672859
best_error: 2.3171455110122867
best_error: 2.0531769046875636
best_error: 2.053176772298025
best_error: 2.05157777167746
best_error: 2.051577612478297
best_error: 1.7928613141644787
best_error: 1.792861180698944
best_error: 1.6481871553752543
best_error: 1.648187136396706
best_error: 1.6329479689303528
best_error: 1.6329479301742342
best_error: 1.6288593281605117
best_error: 1.6288593112408067
best_error: 1.6276821628048006
best_error: 1.6276821563608397
best_error: 1.6256445692214974
best_error: 1.6256445542415836
best_error: 1.617034272831393
best_error: 1.6170342328627607
best_error: 1.5920210204822844
best_error: 1.5920209560633092
best_error: 1.5117295148112393
best_error: 1.5117294463474584
best_error: 1.4645487271777582
best_error: 1.4645486490128474
best_error: 1.4614599636243484
best_error: 1.4614598530339402
best_error: 1.454127939344341
best_error: 1.4541278534890616
best_error: 1.384542024852775
best_error: 1.3845419534016585
best_error: 1.3814784931442423
best_error: 1.3814782513248247
best_error: 1.2995772353176727
best_error: 1.2995771367179119
best_error: 1.2949699679492566
best_error: 1.294969938608015
best_error: 1.2925804149560995
best_error: 1.292580400530347
best_error: 1.285436520548928
best_error: 1.2854365203923694
best_error: 1.285436520029361
best_error: 1.2850828874765663
best_error: 1.2850828793002882
best_error: 1.2848203029847627
best_error: 1.284820298565797
best_error: 1.28423991460558
best_error: 1.2842399114770493
best_error: 1.2827920809069508
best_error: 1.2827920693696901
best_error: 1.278309353339679
best_error: 1.2783093334737
best_error: 1.263968094652075
best_error: 1.2639680648635103
best_error: 1.2390102734407331
best_error: 1.2390102650939356
best_error: 1.239010215244742
best_error: 1.2112781450767467
best_error: 1.2112780881000507
best_error: 1.1392671072436824
best_error: 1.1392670789460762
best_error: 1.1229481690864314
best_error: 1.1229481224605018
best_error: 1.1196740829358456
best_error: 1.1196740802198986
best_error: 1.1196740782713759
best_error: 1.1123069407410795
best_error: 1.112306936445647
best_error: 1.1123069358743012
best_error: 1.1033460093723295
best_error: 1.1033459739046036
best_error: 1.0959153909373498
best_error: 1.0959153662147147
best_error: 1.0884779326163259
best_error: 1.0884779276414305
best_error: 1.0874268814761041
best_error: 1.0874268695268157
best_error: 1.0866148995036533
best_error: 1.0866148991110427
best_error: 1.086614898041813
best_error: 1.0857377582590064
best_error: 1.0857377582058003
best_error: 1.0857377578708458
best_error: 1.0857377569118116
best_error: 1.0784981587460185
best_error: 1.078498120613427
best_error: 1.0744324461754626
best_error: 1.0744323627370767
best_error: 1.06764980614006
best_error: 1.067649721083867
best_error: 1.060622959750197
best_error: 1.060622918583306
best_error: 1.0559722604422481
best_error: 1.0559721922395329
best_error: 1.0465255586616609
best_error: 1.0465255410451522
best_error: 1.0465255244896978
best_error: 1.0349760878705765
best_error: 1.0349760252792815
best_error: 1.0348856124667658
best_error: 1.034885542456196
best_error: 1.0330563798023267
best_error: 1.0330563786246645
best_error: 1.033056347320761
best_error: 1.031615444813234
best_error: 1.0316153899523095
best_error: 1.0222885137327409
best_error: 1.0222884179051035
best_error: 1.020887025954601
best_error: 1.0208869835438414
best_error: 1.0172400622938342
best_error: 1.0172400459237674
best_error: 1.0157399497672097
best_error: 1.0157399487113026
best_error: 1.015739948116478
best_error: 1.0148819477559679
best_error: 1.0148819471460058
best_error: 1.0148819460015401
best_error: 1.0114302611300032
best_error: 1.01143023121577
best_error: 1.0105371789414859
best_error: 1.0105371755352257
best_error: 1.0101422275995648
best_error: 1.0101422273602638
best_error: 1.0101422260640618
best_error: 1.0098727292406278
best_error: 1.0098727266509142
best_error: 1.0090260364415702
best_error: 1.009026026799102
best_error: 1.0043634414769251
best_error: 1.0043634248235733
best_error: 0.98196476468469
best_error: 0.9819647513385332
best_error: 0.9664250011246476
best_error: 0.9664249607096776
best_error: 0.9614963191707677
best_error: 0.9614962767544785
best_error: 0.9507460148907729
best_error: 0.950745968267735
best_error: 0.9437140775380428
best_error: 0.9437139495917194
best_error: 0.9362210776777639
best_error: 0.936221060572558
best_error: 0.9322364911699966
best_error: 0.9322364812731717
best_error: 0.9244808255852675
best_error: 0.9244808248413385
best_error: 0.9244807932136939
best_error: 0.9229043796843005
best_error: 0.9229043088059176
best_error: 0.9227191665403707
best_error: 0.9227191177602581
best_error: 0.919747885904656
best_error: 0.9197478752813083
best_error: 0.9197478425701656
best_error: 0.912504120970666
best_error: 0.9125040986268224
best_error: 0.9098742199134509
best_error: 0.9098742133972891
best_error: 0.9098656997400829
best_error: 0.9098656971811759
best_error: 0.9086441155856694
best_error: 0.9086441123164094
best_error: 0.904678744783237
best_error: 0.9046787133734148
best_error: 0.9039377813226427
best_error: 0.9039377794804512
best_error: 0.9039377790981667
best_error: 0.9036285139761676
best_error: 0.9036285036274313
best_error: 0.9033197137320034
best_error: 0.9033197075504309
best_error: 0.9029206160096108
best_error: 0.902920598399337
best_error: 0.9029202066372108
best_error: 0.9029201888489529
best_error: 0.9022356143834626
best_error: 0.9022355865532974
best_error: 0.8900438278634926
best_error: 0.890043823233437
best_error: 0.8877664743846865
best_error: 0.8877664627182064
best_error: 0.8868421726754879
best_error: 0.8868421693317369
best_error: 0.886842163945279
best_error: 0.886347438577161
best_error: 0.886347434686196
best_error: 0.886347431696096
best_error: 0.8844720661002792
best_error: 0.8844720563030737
best_error: 0.8843040990565884
best_error: 0.8843040937362239
best_error: 0.8842516879904251
best_error: 0.8842516865512127
best_error: 0.8842262206278115
best_error: 0.8842262205974688
best_error: 0.884226220517416
best_error: 0.8842262203278811
best_error: 0.884153195996035
best_error: 0.8841531959378033
best_error: 0.8841531957455641
best_error: 0.8840383593648794
best_error: 0.8840383581506153
best_error: 0.8840179984513092
best_error: 0.8840179983301667
best_error: 0.884014390486157
best_error: 0.8840143902372882
best_error: 0.8840123452556251
best_error: 0.8840123452360504
best_error: 0.884012345118654
best_error: 0.88401199486186
best_error: 0.8840119948504968
best_error: 0.8840119947252522
best_error: 0.8840119501751731
best_error: 0.8840119500338187
best_error: 0.8840119397848685
best_error: 0.8840119397585595
best_error: 0.8840119395232041
best_error: 0.8840116891205347
best_error: 0.8840116882336032
best_error: 0.8840094024014111
best_error: 0.8840094023842413
best_error: 0.8840094023024031
best_error: 0.8840094022551399
best_error: 0.8840022644732974
best_error: 0.8840022638877248
best_error: 0.8839794457506348
best_error: 0.883979445043305
best_error: 0.8839622545637168
best_error: 0.8839622543926032
best_error: 0.8839010493884675
best_error: 0.88390104903241
best_error: 0.8838168438031516
best_error: 0.8838168159246175
best_error: 0.8837088667586421
best_error: 0.8837088437634267
best_error: 0.8834666520760347
best_error: 0.8834666484085106
best_error: 0.8834617922820042
best_error: 0.8834617922788968
best_error: 0.8834617922696479
best_error: 0.8834613867853818
best_error: 0.8834613867692974
