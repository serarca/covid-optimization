ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 25.26144403836249
best_error: 25.261443869829154
best_error: 11.996300817101066
best_error: 11.996300807482998
best_error: 11.996300791021206
best_error: 11.821791349182405
best_error: 11.821791339233291
best_error: 11.770576115315487
best_error: 11.770576109483496
best_error: 11.770576093640157
best_error: 11.66889454973871
best_error: 11.668894538820139
best_error: 11.61292380352161
best_error: 11.612923790862338
best_error: 11.54833778166181
best_error: 11.548337766077701
best_error: 10.954281400131421
best_error: 10.954281334092641
best_error: 9.248186159324202
best_error: 9.248185924686025
best_error: 7.8728115052224075
best_error: 7.872811359938523
best_error: 7.6854861459909305
best_error: 7.685486039705157
best_error: 7.68548602808012
best_error: 7.581303432469172
best_error: 7.581303333954242
best_error: 7.58130331316132
best_error: 7.506117859310184
best_error: 7.506117764960122
best_error: 7.506117738128346
best_error: 7.443291920946376
best_error: 7.443291830019009
best_error: 7.443291798615301
best_error: 7.391914619151017
best_error: 7.391914533356096
best_error: 7.391914495487829
best_error: 7.35210318233522
best_error: 7.352103092812482
best_error: 7.352103057803285
best_error: 7.339023935090114
best_error: 7.3390238465180015
best_error: 7.339023810189985
best_error: 7.328664956224855
best_error: 7.328664866362651
best_error: 7.328664832169284
best_error: 7.325927529710944
best_error: 7.325927439489467
best_error: 7.325927405551742
best_error: 7.323644016990703
best_error: 7.323643927779143
best_error: 7.323643892759011
best_error: 7.3221687890135625
best_error: 7.322168699608968
best_error: 7.322168664725786
best_error: 7.321003410208119
best_error: 7.321003320651247
best_error: 7.321003285876046
best_error: 7.319984358019887
best_error: 7.319984268330014
best_error: 7.319984233649087
best_error: 7.31932412008833
best_error: 7.319324030312342
best_error: 7.319323995692438
best_error: 7.31838459235864
best_error: 7.31838450246023
best_error: 7.318384467927063
best_error: 7.3180112118619505
best_error: 7.3180111219149255
best_error: 7.318011087416168
best_error: 7.317806030520134
best_error: 7.317805940546394
best_error: 7.317805906066585
best_error: 7.317659339941628
best_error: 7.317659249948777
best_error: 7.317659215482456
best_error: 7.317549349750211
best_error: 7.317549259743039
best_error: 7.317549225286852
best_error: 7.317432534307128
best_error: 7.317432444284751
best_error: 7.317432409839304
best_error: 7.317368053126389
best_error: 7.317367963095608
best_error: 7.317367928656106
best_error: 7.317266349528447
best_error: 7.317266259484429
best_error: 7.317266225054286
best_error: 7.317232271764379
best_error: 7.317232181715925
best_error: 7.317232147288917
best_error: 7.317218590208558
best_error: 7.317218500158313
best_error: 7.317218465732588
best_error: 7.317202799128008
best_error: 7.317202709075712
best_error: 7.3172026746514245
best_error: 7.3171959258077
best_error: 7.3171958357545055
best_error: 7.317195801330867
best_error: 7.317191921149713
best_error: 7.317191831096002
best_error: 7.317191796672725
best_error: 7.317185805017214
best_error: 7.317185714962708
best_error: 7.317185680540007
best_error: 7.317183626380627
best_error: 7.317183536325832
best_error: 7.317183501903296
best_error: 7.31718256011192
best_error: 7.317182470056993
best_error: 7.317182435634599
best_error: 7.317180882569134
best_error: 7.317180792513982
best_error: 7.317180758091707
best_error: 7.3171802736926015
best_error: 7.317180183637371
best_error: 7.317180149215176
best_error: 7.317180012476573
best_error: 7.317179922421312
best_error: 7.317179887999128
best_error: 7.317179861587416
best_error: 7.317179771532139
best_error: 7.317179737109965
best_error: 7.317179630438915
best_error: 7.317179540383601
best_error: 7.317179505961451
best_error: 7.317179424039669
best_error: 6.776664957459831
best_error: 6.776664819070978
best_error: 6.75153828309538
best_error: 6.751538141059177
best_error: 6.728637074050402
best_error: 6.728636928693501
best_error: 6.726735006454076
best_error: 6.723611490812845
best_error: 6.7236113447277015
best_error: 6.722394324383073
best_error: 6.721859480693176
best_error: 6.7218593343541935
best_error: 6.721664055857415
best_error: 6.72164047875672
best_error: 6.7216403323860066
best_error: 6.721520251089215
best_error: 6.721520104701095
best_error: 6.72150916882426
best_error: 6.721509146587489
best_error: 6.721501798798229
best_error: 6.721471071083876
best_error: 6.721470924688838
best_error: 6.721407404906087
best_error: 6.721407258502194
best_error: 6.721152732630635
best_error: 6.721152586191313
best_error: 6.720133922802313
best_error: 6.72013377622121
best_error: 6.716056777478574
best_error: 6.716056630330323
best_error: 6.699722991902635
best_error: 6.699722842486726
best_error: 6.697694845141851
best_error: 6.69769469544529
