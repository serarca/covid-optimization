ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.196369606188984
best_error: 9.19636959826732
best_error: 8.334766827452537
best_error: 8.334766790638621
best_error: 8.119939686021226
best_error: 8.119939582607163
best_error: 8.119939540646422
best_error: 7.885173039891247
best_error: 7.8851730359415155
best_error: 7.885172964365533
best_error: 7.623676529093257
best_error: 7.623676485095774
best_error: 7.623676400750147
best_error: 7.512356052682416
best_error: 7.512355981663172
best_error: 7.512355897314729
best_error: 7.4967412719865845
best_error: 7.496741191547079
best_error: 7.496741109236039
best_error: 7.121279259721187
best_error: 7.121279129965944
best_error: 7.121279083869093
best_error: 6.704751953474746
best_error: 6.70475183826851
best_error: 6.193229487959261
best_error: 6.193228916774278
best_error: 3.4540632045742057
best_error: 3.454063132145394
best_error: 3.4540631193172224
best_error: 3.3021531018757964
best_error: 3.302153046191202
best_error: 3.302152872320786
best_error: 3.2001393716973063
best_error: 3.2001393243025786
best_error: 3.2001392274564493
best_error: 2.9120116782980836
best_error: 2.9120116723018583
best_error: 2.912011452599695
best_error: 2.6647330246333336
best_error: 2.664733023265195
best_error: 2.664732831774532
best_error: 2.5790312958895596
best_error: 2.5790312925243435
best_error: 2.579031290203456
best_error: 2.579031289394087
best_error: 2.576905203141383
best_error: 2.5769052017846326
best_error: 2.5769051930649503
best_error: 2.5723391596400873
best_error: 2.5723391465902727
best_error: 2.5652589988096235
best_error: 2.565258986626823
best_error: 2.562183124092241
best_error: 2.5621831238053856
best_error: 2.562183120573961
best_error: 2.5387497916735424
best_error: 2.538749791612264
best_error: 2.538749787597756
best_error: 2.4689062445787835
best_error: 2.468906242315279
best_error: 2.4689062403299635
best_error: 2.4050973970300826
best_error: 2.405097396332354
best_error: 2.4050973514795366
best_error: 2.3782844208024723
best_error: 2.378284417399599
best_error: 2.378284378070929
best_error: 2.3747058951292894
best_error: 2.37470589160688
best_error: 2.3747058561206185
best_error: 2.3661568183309982
best_error: 2.3661568135603184
best_error: 2.3649857484972685
best_error: 2.3649857448705696
best_error: 2.36498571524822
best_error: 2.3590433457081113
best_error: 2.359043342084221
best_error: 2.3590433164532376
best_error: 2.344367996996952
best_error: 2.3443679918329154
best_error: 2.32733093563129
best_error: 2.327330928895028
best_error: 2.3202713714101866
best_error: 2.320271369319257
best_error: 2.320271363966838
best_error: 2.3197593259776244
best_error: 2.3197593254948075
best_error: 2.319759313474151
best_error: 2.3194418521980107
best_error: 2.3194418521089117
best_error: 2.3194418399459122
best_error: 2.3189681189247606
best_error: 2.3189681180996797
best_error: 2.3187855101380395
best_error: 2.3187854983506995
best_error: 2.318745759186048
best_error: 2.3187457475589413
best_error: 2.318724479532224
best_error: 2.3187244678669137
best_error: 2.3186810944463145
best_error: 2.3186810828099214
best_error: 2.3186439166409025
best_error: 2.3186439050534178
best_error: 2.3186242498058185
best_error: 2.3186242381330384
best_error: 2.318622649541492
best_error: 2.318622637867924
best_error: 2.318622075196306
best_error: 2.31862206352246
best_error: 2.318621833596042
best_error: 2.318621821922075
best_error: 2.3186217602263426
best_error: 2.318621748552334
best_error: 2.318621711614186
best_error: 2.318621699940156
best_error: 2.318621656996023
best_error: 2.318621645321967
best_error: 2.3186216075484745
best_error: 2.318621595874396
best_error: 2.3186215818149627
best_error: 2.3186215701408712
best_error: 2.3186215585574423
best_error: 2.3186215468833327
best_error: 2.318621546288705
best_error: 2.3186215346145924
best_error: 2.3186215235638405
best_error: 2.3186215175741864
best_error: 2.318621513410524
best_error: 2.318621509737804
best_error: 2.3186215073708167
best_error: 2.318621489689405
best_error: 2.318621488905866
best_error: 2.318621487127632
best_error: 2.3186214863440946
best_error: 2.3186214861509504
best_error: 2.318621485838648
best_error: 2.318621485096449
