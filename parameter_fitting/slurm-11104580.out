ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 78
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.59083343162854
best_error: 99.5908333539056
best_error: 99.59083326167821
best_error: 18.86996168240825
best_error: 18.869961682404558
best_error: 18.869961675107245
best_error: 18.851907606242168
best_error: 18.851907598630913
best_error: 18.766832898242626
best_error: 18.766832888049233
best_error: 15.723421236762864
best_error: 15.723420892333321
best_error: 14.265782175448631
best_error: 14.265782173429715
best_error: 14.265781378864247
best_error: 13.97192341035576
best_error: 13.97192328401059
best_error: 13.821274268137557
best_error: 13.821274245136992
best_error: 13.821274070410865
best_error: 13.54347079107297
best_error: 13.543470780713957
best_error: 13.543470780197897
best_error: 13.54347076684239
best_error: 13.279105127112334
best_error: 13.279105119235528
best_error: 13.279105115083938
best_error: 13.279105101019386
best_error: 12.943008106054089
best_error: 12.943008099182158
best_error: 12.943008092340945
best_error: 12.943008077554722
best_error: 12.572266074992838
best_error: 12.572266054758437
best_error: 12.572266043203445
best_error: 12.121007264352569
best_error: 12.121007244096404
best_error: 12.121007233887212
best_error: 11.655943038794469
best_error: 11.655942715972909
best_error: 10.87092925676016
best_error: 10.870929227478882
best_error: 10.787201891086475
best_error: 10.787201741593208
best_error: 10.600760597989526
best_error: 10.600760576947811
best_error: 10.600760572446351
best_error: 10.512285573744382
best_error: 10.512285557934472
best_error: 10.512285548650318
best_error: 10.302658359701034
best_error: 10.302658345388085
best_error: 10.3026583349161
best_error: 10.194750259175809
best_error: 10.194750232138539
best_error: 10.039231060583933
best_error: 10.039231038250923
best_error: 9.90712733797381
best_error: 9.907127184292023
best_error: 9.790088559916617
best_error: 9.790088513469003
best_error: 9.780304533360319
best_error: 9.780304507016073
best_error: 9.777216709899257
best_error: 9.777216709791919
best_error: 9.777216687245776
best_error: 9.77530067147642
best_error: 9.77530067100409
best_error: 9.775300653772488
best_error: 9.77487849299104
best_error: 9.774878492503486
best_error: 9.774878475583677
best_error: 9.774655059552625
best_error: 9.77465505906331
best_error: 9.77465504217567
best_error: 9.774629599475107
best_error: 9.774629598985616
best_error: 9.774629582101111
best_error: 9.77461742291943
best_error: 9.774617403454872
best_error: 9.770558437938744
best_error: 9.770558418659215
best_error: 9.74217684856033
best_error: 9.742176829561096
best_error: 9.575054112099494
best_error: 9.575054108510978
best_error: 9.477555603025708
best_error: 9.477555594474987
best_error: 9.466111315787309
best_error: 9.466111307138595
best_error: 9.423445384224117
best_error: 9.423445384224115
best_error: 9.423445375264464
best_error: 9.201301515081678
best_error: 9.201301507375323
best_error: 9.201301505839819
best_error: 9.201301502907373
best_error: 9.201301498928121
best_error: 9.099430436561063
best_error: 9.099430309341308
best_error: 9.065513576049868
best_error: 9.065513574337336
best_error: 9.065513559888334
best_error: 9.05817696372527
best_error: 9.058176952151804
best_error: 9.058176665735493
best_error: 9.050710887258981
best_error: 9.050710875933389
best_error: 9.050710595938577
best_error: 9.046903800782985
best_error: 9.04690379985081
best_error: 9.046903792580586
best_error: 9.046903783918689
best_error: 8.977777920860486
best_error: 8.977777889427262
best_error: 8.97633583157847
best_error: 8.97633565603291
best_error: 8.976156255176457
best_error: 8.976156219320131
best_error: 8.975347819704936
best_error: 8.975347644596445
best_error: 8.90451957782401
best_error: 8.904519441942227
best_error: 8.871987740108679
best_error: 8.871987596206704
best_error: 8.815073648472996
best_error: 8.815073636940141
best_error: 8.781481849906294
best_error: 8.781481845840938
best_error: 8.7767201020514
best_error: 8.776720102051398
best_error: 8.776720098952525
best_error: 8.776720097665542
best_error: 8.766071322142519
best_error: 8.766071312788378
best_error: 8.76607111358808
best_error: 8.765519310668774
best_error: 8.765519310668772
best_error: 8.765519308746137
best_error: 8.76551930845104
best_error: 8.765082731767274
best_error: 8.76508272243838
best_error: 8.765082525935615
best_error: 8.765003603831314
best_error: 8.765003601972591
best_error: 8.76500360161278
best_error: 8.764896716337525
best_error: 8.764896714507172
best_error: 8.764896714118846
best_error: 8.764867272204373
best_error: 8.764867270374484
best_error: 8.764867269985658
best_error: 8.764866413048335
best_error: 8.764866411218451
best_error: 8.764866410829612
best_error: 8.76486558068522
best_error: 8.764865580685218
best_error: 8.764865578855348
best_error: 8.764865578466496
best_error: 8.764865413630051
best_error: 8.764865199030108
best_error: 8.76486519720024
best_error: 8.764865196811384
best_error: 8.7648651246517
best_error: 8.764865115321921
best_error: 8.764865061488202
best_error: 8.76486504703634
best_error: 8.764865045206475
best_error: 8.764865044817617
best_error: 8.764865020593716
best_error: 8.764865018763858
best_error: 8.764865018374998
best_error: 8.764865017320654
best_error: 8.76486501693179
best_error: 8.764865015833436
best_error: 8.764864974914255
