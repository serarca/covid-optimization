ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.725472720654857
best_error: 11.725472673875007
best_error: 11.725472652284145
best_error: 11.407344222651531
best_error: 11.407344157390849
best_error: 11.407344134212575
best_error: 10.330962749711398
best_error: 10.330962616985955
best_error: 10.330962610473858
best_error: 9.413439431595334
best_error: 9.413439255949505
best_error: 9.055481739029732
best_error: 9.055481566879493
best_error: 8.977901574767166
best_error: 8.977901398443414
best_error: 8.324478115441067
best_error: 8.324478032607422
best_error: 8.324477982425892
best_error: 7.695647826517707
best_error: 7.695647758536739
best_error: 7.6956476816681985
best_error: 7.405716128321344
best_error: 7.405716066617296
best_error: 7.405715976396062
best_error: 7.275608344865779
best_error: 7.275608286398354
best_error: 7.27560818988024
best_error: 7.220627600374895
best_error: 7.220627541020172
best_error: 7.220627445439453
best_error: 7.111196754655513
best_error: 7.111196543658623
best_error: 5.066904385352199
best_error: 5.066904122020067
best_error: 4.22875373622287
best_error: 4.2287534342007405
best_error: 3.7697286554023846
best_error: 3.769728524565476
best_error: 3.5518654853673493
best_error: 3.5518654803023475
best_error: 3.413621605585478
best_error: 3.4136209881406523
best_error: 3.2757256876809944
best_error: 3.275725253375287
best_error: 3.2672920265063166
best_error: 3.267291952866187
best_error: 3.132548538505807
best_error: 3.1325485070220447
best_error: 3.0837935206018874
best_error: 3.083793507176583
best_error: 3.033316767925826
best_error: 3.033316377434425
best_error: 2.9796666602718043
best_error: 2.9796662716376936
best_error: 2.975966608469456
best_error: 2.9759666041779003
best_error: 2.975966454437744
best_error: 2.9750524615176266
best_error: 2.9750520725120224
best_error: 2.9582923299510204
best_error: 2.958292329948738
best_error: 2.9582921760141527
best_error: 2.9580145339552386
best_error: 2.9580141473155317
best_error: 2.9328148185461695
best_error: 2.9328148185437803
best_error: 2.932814664331128
best_error: 2.9238862417407185
best_error: 2.923885866655681
best_error: 2.904639983172981
best_error: 2.9046399831705516
best_error: 2.9046398288797626
best_error: 2.9034094323614132
best_error: 2.9034090564120367
best_error: 2.897803853619827
best_error: 2.897803853617339
best_error: 2.8978036987133775
best_error: 2.8859507792295744
best_error: 2.8859504031935823
best_error: 2.883039049515132
best_error: 2.883039049512672
best_error: 2.8830388949954218
best_error: 2.8599364180107747
best_error: 2.8599364180082656
best_error: 2.8447047089252626
best_error: 2.844704708922582
best_error: 2.740026781794387
best_error: 2.7400264402962087
best_error: 2.618191422468948
best_error: 2.6181914224662295
best_error: 2.54828213970689
best_error: 2.548281774350448
best_error: 2.5142178709277365
best_error: 2.514217870925068
best_error: 2.511675648829441
best_error: 2.511675289092747
best_error: 2.510416260045293
best_error: 2.510415900169988
best_error: 2.5100153930300255
best_error: 2.51001503311059
best_error: 2.509934483091418
best_error: 2.5099341231630796
best_error: 2.509919903301486
best_error: 2.5099199032987993
best_error: 2.5099167430445455
best_error: 2.5099163831142595
best_error: 2.5099027031186414
best_error: 2.509902343186804
best_error: 2.5099007106394575
best_error: 2.5099005934344354
best_error: 2.5099005882587533
best_error: 2.509900563849774
best_error: 2.5099004466447585
best_error: 2.4491832844564296
best_error: 2.4491829095749855
best_error: 2.360131894076048
best_error: 2.360131484172845
best_error: 2.329851767552305
best_error: 2.3298513424472227
best_error: 2.31368716432372
best_error: 2.3136867197291306
best_error: 2.3105157567085595
best_error: 2.3105153105500458
best_error: 2.3052817505173833
best_error: 2.3052812961052087
best_error: 2.304011337881395
best_error: 2.304010881590983
best_error: 2.3025535293009054
best_error: 2.3025530727964583
best_error: 2.2808534380086805
best_error: 2.2808529827512496
best_error: 2.2728885607455727
best_error: 2.272888105848333
best_error: 2.2694101448581483
best_error: 2.2694096934785115
best_error: 2.267811437531875
best_error: 2.2678109859853857
best_error: 2.267541347648498
best_error: 2.2675408960684367
best_error: 2.2673625240360806
best_error: 2.267362072433793
best_error: 2.2673576927923307
best_error: 2.267357692789722
best_error: 2.2673575378964785
best_error: 2.258139751084127
best_error: 2.258139304300444
best_error: 2.253032716150601
best_error: 2.253032278548737
best_error: 2.247443224431355
best_error: 2.2474427855724866
best_error: 2.243016597854243
best_error: 2.243016158757487
best_error: 2.2423673156251036
best_error: 2.242366876469014
best_error: 2.242191408780004
best_error: 2.2421909696078353
best_error: 2.2421525916246825
best_error: 2.2421521524489556
best_error: 2.242143481350949
best_error: 2.2421434813484433
best_error: 2.24214332729606
best_error: 2.2407881433569647
best_error: 2.240787703830996
best_error: 2.2402481018658094
best_error: 2.240248101863288
