ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.507676620822068
best_error: 22.507675833945008
best_error: 5.062160634971254
best_error: 5.062160634770097
best_error: 5.062155774876438
best_error: 5.0621557748742765
best_error: 5.062155774867877
best_error: 5.062136325178871
best_error: 5.062136325176706
best_error: 5.062136325170305
best_error: 5.062058376942576
best_error: 5.062058376940397
best_error: 5.0620583769339955
best_error: 5.061744170003307
best_error: 5.061744170001072
best_error: 5.0617441699946655
best_error: 5.060447186042053
best_error: 5.060447186039568
best_error: 5.060447186033156
best_error: 5.054496574560534
best_error: 5.054496574556409
best_error: 5.054496574550355
best_error: 4.980704656025673
best_error: 4.9807046552003165
best_error: 4.978579206171414
best_error: 4.978579205272838
best_error: 4.975829957115365
best_error: 4.975829956116658
best_error: 3.9512052876072152
best_error: 3.951205160858486
best_error: 3.896839261796617
best_error: 3.8968391222428336
best_error: 3.818187111901123
best_error: 3.818187074851683
best_error: 3.8181870694591407
best_error: 3.811059366854033
best_error: 3.811059236212706
best_error: 3.760303719185899
best_error: 3.7603037104679617
best_error: 3.7603036386121387
best_error: 3.680399260085658
best_error: 3.680399069177206
best_error: 3.5810505052958126
best_error: 3.5810504268599903
best_error: 3.525340369371284
best_error: 3.525340308249803
best_error: 3.5029447180345294
best_error: 3.5029444803931553
best_error: 3.4532726724571354
best_error: 3.453272666256729
best_error: 3.447510715490128
best_error: 3.447510694846352
best_error: 3.447307557634929
best_error: 3.4473075225730145
best_error: 3.447014104446693
best_error: 3.447014097771466
best_error: 3.4469215630777628
best_error: 3.4469215605177466
best_error: 3.4463810819710052
best_error: 3.446381066872504
best_error: 3.4459916814514195
best_error: 3.44599166967195
best_error: 3.444495573911642
best_error: 3.4444955716072148
best_error: 3.4444955714322134
best_error: 3.439698243105706
best_error: 3.4396981907898043
best_error: 3.419816182796363
best_error: 3.419816005393401
best_error: 3.334872767158231
best_error: 3.334872497932192
best_error: 2.630638046516166
best_error: 2.6306378770712633
best_error: 2.5803938299668516
best_error: 2.58039365940794
best_error: 2.551981314398517
best_error: 2.5519811769946084
best_error: 2.536047305580048
best_error: 2.5360471849405752
best_error: 2.5229611922446105
best_error: 2.522961173640446
best_error: 2.4888009805770794
best_error: 2.488800969958275
best_error: 2.488800962806941
best_error: 2.4605725262438742
best_error: 2.4605725226152377
best_error: 2.460572519719624
best_error: 2.4605725091564
best_error: 2.4315461806228185
best_error: 2.4315461803470395
best_error: 2.431546179649882
best_error: 2.431546174035986
best_error: 2.4315461641432705
best_error: 2.4177430314463706
best_error: 2.4177430305656675
best_error: 2.4177430304751266
best_error: 2.4177430251376997
best_error: 2.417743015175375
best_error: 2.414166895824275
best_error: 2.4141668314097626
best_error: 2.3630766227135878
best_error: 2.363076610367653
best_error: 2.363076609538925
best_error: 2.3198675542494582
best_error: 2.319867448344551
best_error: 2.277120204407376
best_error: 2.277120121070951
best_error: 2.2470829677128066
best_error: 2.2470829220099513
best_error: 2.2189602878247414
best_error: 2.218960213942188
best_error: 2.2078448848025034
best_error: 2.207844875652161
best_error: 2.2078448462033196
best_error: 2.193299646377023
best_error: 2.1932996231836395
best_error: 2.1704051411256047
best_error: 2.170405137986354
best_error: 2.1704051371061444
best_error: 2.1704051363467762
best_error: 2.14716644037667
best_error: 2.1471663341315503
best_error: 2.1368992683650525
best_error: 2.136899252438136
best_error: 2.1368992493703236
best_error: 2.133951149463246
best_error: 2.1339511434275864
best_error: 2.1326021376567827
best_error: 2.13260213346876
best_error: 2.132602128743078
best_error: 2.1316741296794515
best_error: 2.131674128704415
best_error: 2.131674116429751
best_error: 2.12881719485897
best_error: 2.1288171809932446
best_error: 2.1287363906952312
best_error: 2.128736385886011
best_error: 2.1287363856987707
best_error: 2.126616175533127
best_error: 2.126616173289298
best_error: 2.1266161722787142
best_error: 2.123008927461642
best_error: 2.1230089051653884
best_error: 2.12236990861693
best_error: 2.122369904863301
best_error: 2.1217246665622014
best_error: 2.1217246579408586
best_error: 2.121361441401139
best_error: 2.121361441014133
best_error: 2.1213614407753076
best_error: 2.1213614392934614
best_error: 2.1213614384337807
best_error: 2.1210517304649947
best_error: 2.1210517278855794
best_error: 2.121051727496449
best_error: 2.119234759951347
best_error: 2.119234751288391
best_error: 2.116939837703617
best_error: 2.116939826825094
best_error: 2.115722627467923
best_error: 2.11572261510605
best_error: 2.113772163900599
best_error: 2.1137720702702576
best_error: 2.0961606256059304
best_error: 2.0961606238365196
best_error: 2.0961606235266657
best_error: 2.090676426597405
best_error: 2.0906764126640205
best_error: 2.0851276274428443
best_error: 2.085127573408866
best_error: 2.0814103355133526
best_error: 2.0814102784734048
best_error: 2.0795648406608787
best_error: 2.0795648147279495
best_error: 2.0743225508544056
best_error: 2.074322504676075
best_error: 2.0643383872891015
best_error: 2.0643383218759763
best_error: 2.0608931308989527
best_error: 2.06089305227421
best_error: 2.0585826388140807
best_error: 2.0585825833430573
best_error: 2.0583068292618694
best_error: 2.0583068079798417
best_error: 2.0570500850641276
best_error: 2.0570500837582197
best_error: 2.0569016664061888
best_error: 2.0569016544337595
best_error: 2.056843378615865
best_error: 2.056843373128647
best_error: 2.056804619713232
best_error: 2.0568046149182755
best_error: 2.0567735414860526
best_error: 2.0567735377561815
best_error: 2.056754677713183
best_error: 2.056754677134357
best_error: 2.056754677064821
best_error: 2.056754677039775
best_error: 2.0567222577133624
best_error: 2.056722257173461
best_error: 2.056722257066666
best_error: 2.0567222570333885
best_error: 2.056601789682604
best_error: 2.0566017871134035
best_error: 2.0550900470276874
best_error: 2.055090020276666
best_error: 2.0528340043412276
best_error: 2.0528339342355033
best_error: 2.051136970423548
best_error: 2.0511369303771314
best_error: 2.0486724370943503
best_error: 2.04867243503345
best_error: 2.0482479592031275
best_error: 2.048247959014111
best_error: 2.0482479585430524
best_error: 2.048247958277324
best_error: 2.046923411546415
best_error: 2.0469233656639605
best_error: 2.044036220344291
best_error: 2.0440362054234895
best_error: 2.03289843433503
best_error: 2.0328984199111617
best_error: 2.0328918741463617
best_error: 2.032891857305036
best_error: 2.0316046875130733
best_error: 2.031604677208877
best_error: 2.0291060380424577
best_error: 2.0291059984596003
best_error: 2.0283479678607446
best_error: 2.0283479652010286
best_error: 2.028120012636523
best_error: 2.02812001074946
best_error: 2.0279166202716667
best_error: 2.027916615242879
best_error: 2.027794635213637
best_error: 2.027794634076262
best_error: 2.0277946330458136
best_error: 2.0277301362014892
best_error: 2.027730131611475
best_error: 2.0274673263378284
best_error: 2.0274673114720883
best_error: 2.026964587016471
best_error: 2.0269645733204187
best_error: 2.026838006294327
best_error: 2.02683800608646
best_error: 2.026838005690432
best_error: 2.0263917236043896
best_error: 2.0263917233608493
best_error: 2.0261469168895574
best_error: 2.02614691668654
best_error: 2.0259145219597676
best_error: 2.0259145209670906
best_error: 2.025822330799855
best_error: 2.025822330590651
best_error: 2.025615516192714
best_error: 2.0256155149764226
best_error: 2.0255358061687216
best_error: 2.025535805405217
best_error: 2.025477905941713
best_error: 2.025417492955218
best_error: 2.0254149434037516
best_error: 2.0254149433936037
best_error: 2.0254149433921143
best_error: 2.025414214383011
best_error: 2.0254142141892104
best_error: 2.0254141542894013
best_error: 2.0254141538549173
best_error: 2.025414023985222
best_error: 2.0254140239145038
best_error: 2.0254140216527508
best_error: 2.025414021546084
