ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.43723371417126
best_error: 98.43723356997103
best_error: 98.43723355682003
best_error: 98.43723354455922
best_error: 17.48624127188743
best_error: 17.48624127188106
best_error: 17.486241259935312
best_error: 17.47457417365145
best_error: 17.47457416137751
best_error: 17.4246514006349
best_error: 17.424651386963063
best_error: 17.16444291726965
best_error: 17.164442896869375
best_error: 10.385792543146106
best_error: 10.38579246328538
best_error: 10.33675375014777
best_error: 10.33675374235751
best_error: 10.336753730768693
best_error: 10.336753725773848
best_error: 10.336753725381323
best_error: 10.329860283420405
best_error: 10.329860276250745
best_error: 10.329860259397256
best_error: 10.32986025929614
best_error: 10.090940894745632
best_error: 10.09094087363544
best_error: 10.090940872509236
best_error: 10.090940870982948
best_error: 9.494691820492099
best_error: 9.494691798627288
best_error: 9.415843521627167
best_error: 9.41584343339372
best_error: 9.38233346730394
best_error: 9.382333456495608
best_error: 9.38233344596303
best_error: 9.318785235687603
best_error: 9.318785225729805
best_error: 9.318785215250797
best_error: 9.210989969428923
best_error: 9.210989964972168
best_error: 9.210989951233156
best_error: 9.183116041328947
best_error: 9.183116039460476
best_error: 9.18311599828688
best_error: 9.164819979468483
best_error: 9.164819890045278
best_error: 9.114524349853403
best_error: 9.114524349374738
best_error: 9.114524272129296
best_error: 9.106338816695178
best_error: 9.106338801484803
best_error: 9.094221894460379
best_error: 9.094221893709745
best_error: 9.094221822090011
best_error: 9.06609450756739
best_error: 9.066094495682634
best_error: 9.066094494876252
best_error: 9.039093813369165
best_error: 9.039093799918009
best_error: 9.013241778248133
best_error: 9.013241764518616
best_error: 8.999605552052133
best_error: 8.999605446256805
best_error: 8.998351727808608
best_error: 8.998351714211406
best_error: 8.998112163516193
best_error: 8.998112057327678
best_error: 8.976724233734124
best_error: 8.976724223220295
best_error: 8.93303348501885
best_error: 8.93303347258495
best_error: 8.925539743415346
best_error: 8.925539719545192
best_error: 8.91660496878237
best_error: 8.916604951747182
best_error: 8.915677944421551
best_error: 8.915677925134332
best_error: 8.914738305844445
best_error: 8.914738288251383
best_error: 8.913759988783129
best_error: 8.913759970889625
best_error: 8.908784307852583
best_error: 8.908784291233365
best_error: 8.90227809448656
best_error: 8.902278080121816
best_error: 8.896237506200347
best_error: 8.89623749196998
best_error: 8.875694081445566
best_error: 8.875694067729356
best_error: 8.874556299502489
best_error: 8.874556138782344
best_error: 8.841464167635042
best_error: 8.841464147051447
best_error: 8.827330794585999
best_error: 8.82733077721988
best_error: 8.810003844236238
best_error: 8.810003711332627
best_error: 8.748238447258172
best_error: 8.748238432042058
best_error: 8.744572876410572
best_error: 8.744572862294707
best_error: 8.743551105718662
best_error: 8.743551091128815
best_error: 8.741491603240231
best_error: 8.741491588311487
best_error: 8.739230636897046
best_error: 8.739230620766016
best_error: 8.737024375357786
best_error: 8.73702435981324
best_error: 8.679799865740854
best_error: 8.679799851278931
best_error: 8.630221226771377
best_error: 8.630221205800616
best_error: 8.586853102843
best_error: 8.586853074775314
best_error: 8.572694387267298
best_error: 8.572694059528411
best_error: 8.521812673685641
best_error: 8.52181254752257
best_error: 8.46348759330686
best_error: 8.463487579717782
best_error: 8.452828513160163
best_error: 8.452828501356517
best_error: 8.435227824218781
best_error: 8.435227818087945
best_error: 8.43087190429404
best_error: 8.430871894274551
best_error: 8.39146098821196
best_error: 8.391460979071145
best_error: 8.388702962787587
best_error: 8.388702951182168
best_error: 8.387795408225308
best_error: 8.38779539603851
best_error: 8.387059914381709
best_error: 8.387059901016235
best_error: 8.386229321819137
best_error: 8.38622930778434
