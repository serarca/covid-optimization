ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 24.64399246984304
best_error: 24.643992269783148
best_error: 12.3975565052882
best_error: 12.39755649626993
best_error: 12.39755647191315
best_error: 12.098826169929968
best_error: 12.098826159606912
best_error: 11.831413463496474
best_error: 11.831413453131105
best_error: 11.772735909455655
best_error: 11.772735899673982
best_error: 11.64413134296321
best_error: 11.644131327776165
best_error: 11.644131310932952
best_error: 11.43888528961379
best_error: 11.438885261662795
best_error: 10.811103084357466
best_error: 10.811102981660706
best_error: 10.52353722682351
best_error: 10.523537097087027
best_error: 10.28500212469596
best_error: 10.285001965803527
best_error: 10.057233876655603
best_error: 10.057233701052827
best_error: 9.588065912649542
best_error: 9.588065725260538
best_error: 9.580572450729083
best_error: 9.58057229703914
best_error: 9.180170446416541
best_error: 9.180170318632253
best_error: 8.660042018760667
best_error: 8.660041906497323
best_error: 8.66004188578253
best_error: 8.372938427642543
best_error: 8.372938322590125
best_error: 8.372938289060391
best_error: 8.058134116021986
best_error: 8.058134034036868
best_error: 8.05813397131304
best_error: 7.881363869027213
best_error: 7.881363801709631
best_error: 7.881363720508455
best_error: 7.751575114865863
best_error: 7.751575011111715
best_error: 7.737594445162475
best_error: 7.737594376423113
best_error: 7.737594294003985
best_error: 7.733550757083784
best_error: 7.733550687876049
best_error: 7.733550605818594
best_error: 7.732669149070132
best_error: 7.732669079760414
best_error: 7.732668997781681
best_error: 7.732298158907664
best_error: 7.732298089555044
best_error: 7.732298007609449
best_error: 7.731923991899956
best_error: 7.73192392250408
best_error: 7.731923840591907
best_error: 7.731786589241057
best_error: 7.731786519829296
best_error: 7.731786437929355
best_error: 7.731703983818001
best_error: 7.731703914396688
best_error: 7.731703832504108
best_error: 7.731641198101391
best_error: 7.731641128672809
best_error: 7.731641046785839
best_error: 7.731604731242824
best_error: 7.731604661810032
best_error: 7.731604579926314
best_error: 7.731571907279231
best_error: 7.731571837842642
best_error: 7.731571755961843
best_error: 7.731556950378552
best_error: 7.731556880940239
best_error: 7.7315567990607885
best_error: 7.7315416438529105
best_error: 7.731541574412819
best_error: 7.731541492534718
best_error: 7.731536225102641
best_error: 7.731536155661929
best_error: 7.731536073784336
best_error: 7.731533011321824
best_error: 7.731532941880735
best_error: 7.7315328600034094
best_error: 7.731530814962694
best_error: 7.731530745521358
best_error: 7.7315306636442465
best_error: 7.73152923997779
best_error: 7.731529170536263
best_error: 7.731529088659247
best_error: 7.731528219807873
best_error: 7.731528150366236
best_error: 7.731528068489348
best_error: 7.731527530790213
best_error: 7.731527461348495
best_error: 7.731527379471655
best_error: 7.731527024160733
best_error: 7.731526954718952
best_error: 7.73152687284216
best_error: 7.7315267231220535
best_error: 7.731526653680239
best_error: 7.731526571803478
best_error: 7.731526456278443
best_error: 7.731526386836602
best_error: 7.731526304959845
best_error: 7.731526180696422
best_error: 6.127276633486226
best_error: 6.127276509632059
best_error: 5.815947927900554
best_error: 5.805916633791186
best_error: 5.805916360272972
best_error: 5.793892061572642
best_error: 5.793462241424267
best_error: 5.793461965922882
best_error: 5.793453768334702
best_error: 5.793399396349807
best_error: 5.793399120838515
best_error: 5.793196151779778
best_error: 5.793195876236626
best_error: 5.792382866364542
best_error: 5.792382590693901
best_error: 5.789124807847226
best_error: 5.789124531665691
best_error: 5.776019246186508
best_error: 5.776018967743063
best_error: 5.722328533418695
best_error: 5.722328246502175
best_error: 5.588412177267113
best_error: 5.588412138365282
best_error: 5.585547921915514
best_error: 5.585547610037271
best_error: 5.582625532754395
best_error: 5.582625220396242
best_error: 5.576868409615647
best_error: 5.57686809631426
best_error: 5.575497783781955
best_error: 5.575497470256444
best_error: 5.574924673445543
best_error: 5.574924359826373
best_error: 5.574302839212455
best_error: 5.574302525491687
best_error: 5.574085065309888
best_error: 5.574084751553559
best_error: 5.573897270013148
best_error: 5.573896956226151
best_error: 5.573739370483526
best_error: 5.573739056670728
best_error: 5.573668808765877
best_error: 5.573668769933947
best_error: 5.573668752329514
best_error: 5.573668752329417
best_error: 5.573668748279118
