ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.053720774252913
best_error: 10.053720733569396
best_error: 10.05372072177493
best_error: 9.351037555802808
best_error: 9.351037495356799
best_error: 9.002047652519748
best_error: 9.002047582394225
best_error: 7.975850501921153
best_error: 7.975850402128907
best_error: 7.841543230196291
best_error: 7.841543188274459
best_error: 7.8415431504318605
best_error: 5.0581925471595
best_error: 5.058192546749353
best_error: 5.03013235242997
best_error: 5.030132290728453
best_error: 5.030132276813651
best_error: 5.022760085693626
best_error: 5.022760085287832
best_error: 4.714400928311604
best_error: 4.714400707479276
best_error: 4.685596653059998
best_error: 4.68559639429602
best_error: 3.829744208976726
best_error: 3.82974417780045
best_error: 3.6065947185663867
best_error: 3.6065944779978505
best_error: 3.5075164722075627
best_error: 3.5075164718964347
best_error: 3.3780969611081453
best_error: 3.3780967196885463
best_error: 3.3544540994441947
best_error: 3.3544538568652644
best_error: 3.3488861306701865
best_error: 3.3488858874091454
best_error: 3.3484594011935402
best_error: 3.3484594008888933
best_error: 3.348451936316646
best_error: 3.348451693002289
best_error: 3.347744857990075
best_error: 3.3477446145888967
best_error: 3.3476781175762165
best_error: 3.3476778741668602
best_error: 3.347635084645715
best_error: 3.3476348412310806
best_error: 3.347614627147485
best_error: 3.34761438373032
best_error: 3.347599924619235
best_error: 3.3475996812002835
best_error: 3.3475921143004492
best_error: 3.3475921139958658
best_error: 3.347591889742369
best_error: 3.347591884934419
best_error: 3.3475918477721116
best_error: 3.347591585347666
best_error: 3.3475915805397287
best_error: 3.3475915433773924
best_error: 3.32804138227036
best_error: 3.32804136102135
best_error: 3.304202627413642
best_error: 3.304202599827548
best_error: 3.277016002448674
best_error: 3.2770159705933155
best_error: 3.2760130889542123
best_error: 3.2760127267752193
best_error: 3.266188016861672
best_error: 3.266187662547358
best_error: 3.2656450422022423
best_error: 3.265645009538394
best_error: 3.265467777174644
best_error: 3.265467423006167
best_error: 3.2652055482624105
best_error: 3.2652052023841867
best_error: 3.2640023339074578
best_error: 3.264001986767984
best_error: 3.2610493499731144
best_error: 3.261049317889364
best_error: 3.2539122900719653
best_error: 3.2539122599829806
best_error: 3.2160975874012863
best_error: 3.2160972769057605
best_error: 3.206556078183203
best_error: 3.2065557833999314
best_error: 3.198744631698493
best_error: 3.1987443309178163
best_error: 3.196185051544078
best_error: 3.1961847495761457
best_error: 3.19508289633249
best_error: 3.1950825932695848
best_error: 3.1945887253513137
best_error: 3.194588421753831
best_error: 3.194455655247774
best_error: 3.1944553516127456
best_error: 3.194444567177568
best_error: 3.1944445441673146
best_error: 3.194444521630782
best_error: 3.194444517198363
best_error: 3.1944445170649267
best_error: 3.194444471651563
best_error: 3.194444457333427
best_error: 3.194444453046856
best_error: 3.194430739867859
best_error: 3.1944307355871207
best_error: 3.194378741322056
best_error: 3.194378737064336
best_error: 3.1943777182983055
best_error: 3.1943776952941563
best_error: 3.194377672753377
best_error: 3.193978518863559
best_error: 3.1939785147675277
best_error: 3.193681052099798
best_error: 3.193681047854556
best_error: 3.193635157765507
best_error: 3.1936348580530947
best_error: 3.193083214153175
best_error: 3.1930829167007526
best_error: 3.1913016933573597
best_error: 3.191301402017783
best_error: 3.190121170738886
best_error: 3.190120881988652
best_error: 3.185019590432943
best_error: 3.1850193100604702
best_error: 3.1701939312604233
best_error: 3.170193655637961
best_error: 2.9740142988344216
best_error: 2.974014022755475
best_error: 2.9616418430937066
best_error: 2.961641549356046
best_error: 2.6616621924097923
best_error: 2.661661851508485
best_error: 2.37569609688121
best_error: 2.375695692718856
best_error: 2.3735088128572333
best_error: 2.3735087217368376
best_error: 2.3724592781763754
best_error: 2.3724588737959893
best_error: 2.372318903473344
best_error: 2.3723184990834447
best_error: 2.372288133195683
best_error: 2.372287728803686
best_error: 2.372272936561494
best_error: 2.3722725321684845
best_error: 2.3722670988808767
best_error: 2.3722666944874593
best_error: 2.372266638491654
best_error: 2.372266342922087
best_error: 2.372266191406033
best_error: 2.3722661849574407
