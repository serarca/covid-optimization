ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.859755411687065
best_error: 11.859755397816993
best_error: 11.859755382651517
best_error: 11.531056158256767
best_error: 11.531056135473197
best_error: 11.531056116049626
best_error: 10.762496614957264
best_error: 10.762496585737612
best_error: 10.762496545656298
best_error: 9.399690001252985
best_error: 9.399689907945996
best_error: 9.249528421448431
best_error: 9.249528329270886
best_error: 7.94593149684359
best_error: 7.945931448707071
best_error: 7.945931418647726
best_error: 5.803635745629105
best_error: 5.803635535899501
best_error: 5.768906781538581
best_error: 5.768905932138782
best_error: 4.285239526773592
best_error: 4.285239241660238
best_error: 4.281927995910774
best_error: 4.281927715827303
best_error: 3.758846131300766
best_error: 3.7588458783888266
best_error: 3.6194145881745006
best_error: 3.6194143355452875
best_error: 3.5666975341318503
best_error: 3.566697279757248
best_error: 3.554259562688298
best_error: 3.5542595626113176
best_error: 3.5529113173537983
best_error: 3.5529110615584356
best_error: 3.551914550846818
best_error: 3.551914294624613
best_error: 3.551659971392022
best_error: 3.5516597151436082
best_error: 3.551526790353073
best_error: 3.551526534090933
best_error: 3.5514712887589495
best_error: 3.551471032491106
best_error: 3.551454416046293
best_error: 3.5514544159693093
best_error: 3.4806952023989
best_error: 3.4806949107865877
best_error: 3.4661103823582984
best_error: 3.4661100628732693
best_error: 3.4575163734072945
best_error: 3.4575163733341117
best_error: 3.448642112207712
best_error: 3.448642112131
best_error: 3.436247529509523
best_error: 3.4362472460347178
best_error: 3.365352049058651
best_error: 3.365351745907337
best_error: 3.3079292500595563
best_error: 3.3079292499907718
best_error: 3.3079292435574073
best_error: 3.3079291485793973
best_error: 3.29541401733149
best_error: 3.295413625621839
best_error: 3.2604842909792002
best_error: 3.260484290903847
best_error: 3.2604841904071997
best_error: 3.2587474354558497
best_error: 3.2587470965190564
best_error: 3.257825296576992
best_error: 3.257825296501797
best_error: 3.257825195992817
best_error: 3.2573293251565496
best_error: 3.2573289859549153
best_error: 3.252433384859871
best_error: 3.252433041871429
best_error: 3.243726120642556
best_error: 3.243725767055154
best_error: 3.242245179427339
best_error: 3.242244834674814
best_error: 3.2379346340534267
best_error: 3.2379342825339332
best_error: 3.232978572350669
best_error: 3.2329782056222616
best_error: 3.2303539310075555
best_error: 3.2303539309365616
best_error: 3.2303538291267513
best_error: 3.2297397995832355
best_error: 3.2297394329296862
best_error: 3.229660235250332
best_error: 3.229659868233329
best_error: 3.2296581093844656
best_error: 3.2296581093134353
best_error: 3.229658007524298
best_error: 3.224829639611359
best_error: 3.2248296395392497
best_error: 3.224829537591258
best_error: 3.2245661818976212
best_error: 3.2245658271440325
best_error: 3.2221514945841534
best_error: 3.2221514945125818
best_error: 3.2221513924114715
best_error: 3.2211637387876015
best_error: 3.221163382650567
best_error: 3.2199078474901803
best_error: 3.2199074868554414
best_error: 3.219806283986521
best_error: 3.2198059232970406
best_error: 3.218988305773441
best_error: 3.2189883057035074
best_error: 3.218988203209797
best_error: 3.217503372966185
best_error: 3.2175033728955826
best_error: 3.217503270354161
best_error: 3.216697277555527
best_error: 3.216696914759785
best_error: 3.2153979314641177
best_error: 3.2153979313938845
best_error: 3.215397828683369
best_error: 3.2146355364217607
best_error: 3.2146355363518166
best_error: 3.2146354333713045
best_error: 3.2143318428061427
best_error: 3.2143314771560343
best_error: 3.214026323433462
best_error: 3.2140259474411623
best_error: 3.21402225406712
best_error: 3.2140218745187528
best_error: 3.2140055895523982
best_error: 3.2140052100002485
best_error: 3.2140020638945974
best_error: 3.2140020638261237
best_error: 3.214001960840343
best_error: 3.214001730865707
best_error: 3.214001351312683
best_error: 3.2139982513638587
best_error: 3.2139978718100566
best_error: 3.2139978440610104
best_error: 3.2139978093315977
best_error: 3.2139977899082925
best_error: 3.2139977724226387
best_error: 3.21399776976853
