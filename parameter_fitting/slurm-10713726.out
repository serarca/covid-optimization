ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.141880413260731
best_error: 13.14188038772438
best_error: 13.141880379739813
best_error: 13.070696506893587
best_error: 13.070696476150747
best_error: 13.07069646814103
best_error: 11.08972957469533
best_error: 11.089729354702055
best_error: 7.164963291264685
best_error: 7.164962971879774
best_error: 7.105998803839187
best_error: 7.105998537236659
best_error: 7.102942106551582
best_error: 7.102941851053899
best_error: 7.0998573906958224
best_error: 7.099857038068851
best_error: 6.720446951681366
best_error: 6.72044671135252
best_error: 6.236579945812641
best_error: 6.236579728117446
best_error: 6.108626446339844
best_error: 6.108626224616748
best_error: 6.068333970751449
best_error: 6.0683337453559325
best_error: 6.05042356046933
best_error: 6.050423335432716
best_error: 6.042426737787445
best_error: 6.042426511834833
best_error: 6.0371909343605425
best_error: 6.037190707808602
best_error: 6.035994828685404
best_error: 6.035994601996343
best_error: 6.035760632664518
best_error: 6.035760405948615
best_error: 6.035617075611327
best_error: 6.035616848878961
best_error: 6.035558308918129
best_error: 6.03555808217903
best_error: 6.035545850675391
best_error: 6.035545524386649
best_error: 6.035542446997535
best_error: 6.035542220256617
best_error: 6.035541252596366
best_error: 6.035541152535746
best_error: 5.682580197687102
best_error: 5.682579888004068
best_error: 5.6556801220938135
best_error: 5.655679778595427
best_error: 5.629313132595004
best_error: 5.629312778132424
best_error: 5.5340146381530975
best_error: 5.534014249959915
best_error: 5.372465942465199
best_error: 5.372465543509168
best_error: 5.089198960350709
best_error: 5.089198548734643
best_error: 4.965527285947149
best_error: 4.965526880040724
best_error: 4.908693090241684
best_error: 4.908692776953054
best_error: 4.903542034576287
best_error: 4.903541631491882
best_error: 4.818209291846135
best_error: 4.818208860967007
best_error: 4.759546829121836
best_error: 4.7595465275713895
best_error: 4.7184848444178655
best_error: 4.718484387421772
best_error: 4.704987267703769
best_error: 4.704986807177537
best_error: 4.643652523990021
best_error: 4.643652233816285
best_error: 4.61404384066736
best_error: 4.614043635423187
best_error: 4.593871344020746
best_error: 4.593871067823857
best_error: 4.573812673060074
best_error: 4.5738123992481
best_error: 4.57163326956999
best_error: 4.571632745741633
best_error: 4.547707907147537
best_error: 4.547707646936095
best_error: 4.5172195410239
best_error: 4.51721931134662
best_error: 4.511673918523934
best_error: 4.511673315188443
best_error: 4.406090992644421
best_error: 4.406090757805348
best_error: 4.342758621970348
best_error: 4.342758388049646
best_error: 4.276655140701629
best_error: 4.276654560558653
best_error: 4.17913377222149
best_error: 4.179133206822077
best_error: 4.175396983384225
best_error: 4.1753967709162625
best_error: 4.165900753819208
best_error: 4.165900191846282
best_error: 4.085558410999285
best_error: 4.085557896609572
best_error: 4.029445436973596
best_error: 4.029445214214702
best_error: 4.028574789232877
best_error: 4.028574337994058
best_error: 4.0149628192304245
best_error: 4.01496233780631
best_error: 3.9242598758267935
best_error: 3.924259688562436
best_error: 3.9198986875667323
best_error: 3.9198982123071815
best_error: 3.77193048940535
best_error: 3.771930350197336
best_error: 3.7719303300507896
best_error: 3.725962128121283
best_error: 3.725961662704278
best_error: 3.6403042345416026
best_error: 3.6403041153213183
best_error: 3.6403040781131875
best_error: 3.5924443761820326
best_error: 3.5924439508441655
best_error: 3.5475923241601315
best_error: 3.5475917824182788
best_error: 3.530844194209404
best_error: 3.5308436532726355
best_error: 3.5293869609191733
best_error: 3.529386419834574
best_error: 3.5286461648259375
best_error: 3.528646100306619
best_error: 3.528646002821664
best_error: 3.5048917520007614
best_error: 3.5048912316275507
best_error: 3.501531286734358
best_error: 3.50153123446779
best_error: 3.5009740410468475
best_error: 3.5009735216096614
best_error: 3.4975101083352955
best_error: 3.497509588553561
best_error: 3.4970742880618397
best_error: 3.4970737682367705
best_error: 3.4969781830742894
best_error: 3.4969776632376406
best_error: 3.496975236777245
best_error: 3.4969747169402385
best_error: 3.4969744918891035
best_error: 3.4969742351859017
best_error: 3.4969741404863655
best_error: 3.49697413986131
best_error: 3.4969741385621926
best_error: 3.496974132258074
best_error: 3.4969741322574155
best_error: 3.496031487542335
best_error: 3.4960314433057635
best_error: 3.4958824007676665
best_error: 3.495882356572237
best_error: 3.4938743972634883
best_error: 3.4938743527470213
best_error: 3.491472895515262
best_error: 3.4914728464283495
