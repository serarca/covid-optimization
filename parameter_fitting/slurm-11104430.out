ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 66
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.56999538066687
best_error: 101.56999521270882
best_error: 101.56999518036851
best_error: 20.55372194893087
best_error: 20.55372194893001
best_error: 20.553721947428272
best_error: 20.55343863058526
best_error: 20.553438629078386
best_error: 20.552297934187344
best_error: 20.552297932663155
best_error: 20.54761248610823
best_error: 20.547612484511276
best_error: 20.52661575497669
best_error: 20.52661575301842
best_error: 20.352300767496473
best_error: 20.352300758315693
best_error: 20.34931513944839
best_error: 20.349315130053274
best_error: 20.159521083239184
best_error: 20.15952105531609
best_error: 19.576823544147636
best_error: 19.576823437454134
best_error: 19.162470864962664
best_error: 19.162470697580247
best_error: 18.750362651221902
best_error: 18.750362541741612
best_error: 18.719912796714226
best_error: 18.719912563605174
best_error: 15.132691269121914
best_error: 15.132691265890477
best_error: 15.132691245834714
best_error: 15.018243517613007
best_error: 15.018243475884432
best_error: 15.014847263048448
best_error: 15.014847259593484
best_error: 15.014847244467152
best_error: 14.959667434256549
best_error: 14.959667397712648
best_error: 14.779228409869873
best_error: 14.77922832898707
best_error: 14.471363693334352
best_error: 14.471363356901687
best_error: 14.21331376822947
best_error: 14.213313765306854
best_error: 14.213313721900091
best_error: 14.19504561026269
best_error: 14.195045584237217
best_error: 14.191052985050113
best_error: 14.191052981436073
best_error: 14.191052949046089
best_error: 14.189224674505102
best_error: 14.189224670879444
best_error: 14.189224638653409
best_error: 14.189108494253688
best_error: 14.18910849062862
best_error: 14.189108458390779
best_error: 14.189086108560272
best_error: 14.189086082619795
best_error: 14.188015633854071
best_error: 14.18801563078624
best_error: 14.188015590005895
best_error: 14.18450209373433
best_error: 14.184502091147966
best_error: 14.184502043257218
best_error: 14.18086230205537
best_error: 14.18086230039874
best_error: 14.180862238681517
best_error: 14.176665626552623
best_error: 14.176665625762777
best_error: 14.176665550755711
best_error: 14.173116713612202
best_error: 14.173116690759738
best_error: 14.172543494382879
best_error: 14.172543471546096
best_error: 14.172284054467653
best_error: 14.17228403163795
best_error: 14.172268670134315
best_error: 14.172268647305042
best_error: 14.172265534617903
best_error: 14.172265534356214
best_error: 14.17226545628624
best_error: 14.170638111881658
best_error: 14.170638089083305
best_error: 14.165335845457117
best_error: 14.165335822678516
best_error: 14.161957741897915
best_error: 14.161957741131992
best_error: 14.161957665241834
best_error: 14.1558440632449
best_error: 14.155844040646047
best_error: 14.070878284207716
best_error: 14.070878258722658
best_error: 14.063333090228841
best_error: 14.063333085876714
best_error: 14.063333083816648
best_error: 14.063333079524755
best_error: 14.058728094764037
best_error: 14.058728094764035
best_error: 14.05872809041397
best_error: 14.058728088355881
best_error: 14.05872808406175
best_error: 14.040330287949077
best_error: 14.040330283627366
best_error: 14.040330281557118
best_error: 14.040330277254082
best_error: 13.969447427954483
best_error: 13.969447410225303
best_error: 13.81790244181942
best_error: 13.81790242386866
best_error: 13.817902088538697
best_error: 13.796983667423897
best_error: 13.796983661004244
best_error: 13.796983656522269
best_error: 13.740945163667629
best_error: 13.740945141402818
best_error: 13.56671259893206
best_error: 13.566712549172667
best_error: 13.100838087444508
best_error: 13.1008380866285
best_error: 13.10083794875128
best_error: 13.075467479325514
best_error: 13.075467379635933
best_error: 13.073706047506313
best_error: 13.073706035208984
best_error: 13.073306514571023
best_error: 13.073306414713532
best_error: 13.071545655789325
best_error: 13.07154555605879
best_error: 13.071348828368624
best_error: 13.07134872862276
best_error: 13.071298202599566
best_error: 13.071298190317673
best_error: 13.071261141222095
best_error: 13.071261041469358
best_error: 13.071187537837684
best_error: 13.071187525555818
best_error: 13.070540099644123
best_error: 13.07054008736014
best_error: 13.07009805205124
best_error: 13.070098039765783
best_error: 13.048920599185102
best_error: 13.048920520388966
best_error: 13.046706430038409
best_error: 13.046706356287023
best_error: 13.046583029418557
best_error: 13.046582955968283
best_error: 13.046493977020761
best_error: 13.046493903562176
best_error: 13.04642597170795
best_error: 13.046425898243026
best_error: 13.046380025510878
best_error: 13.046379952041665
best_error: 13.046351585107166
best_error: 13.046351511635303
best_error: 13.046340440543174
best_error: 13.046340367070274
best_error: 13.046333789493415
best_error: 13.046333716019902
best_error: 13.046329856208871
best_error: 13.04632978273499
best_error: 13.04632755840008
best_error: 13.04632748492598
best_error: 13.046327101960728
best_error: 13.046327028486589
best_error: 13.046326831118188
best_error: 13.046326757644028
best_error: 13.04632667184622
best_error: 13.046326598372048
best_error: 13.046326539382058
best_error: 13.046326536042942
best_error: 13.046326533495117
