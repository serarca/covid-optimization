ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.43688856094472
best_error: 96.43688842238134
best_error: 96.43688842041897
best_error: 96.43688834587803
best_error: 15.751051500378665
best_error: 15.751051500368666
best_error: 15.751051482276782
best_error: 15.72838846789011
best_error: 15.728388449326362
best_error: 15.631733134051785
best_error: 15.63173311345579
best_error: 15.10098739269801
best_error: 15.10098735743954
best_error: 14.196153007177099
best_error: 14.196152963604327
best_error: 13.058092056568736
best_error: 13.058091941826659
best_error: 12.310647049574866
best_error: 12.310646871520982
best_error: 11.439782677503683
best_error: 11.439782433650924
best_error: 10.345237068751493
best_error: 10.345236823423624
best_error: 10.160629287296205
best_error: 10.160629260480205
best_error: 10.14649145466478
best_error: 10.146491427691846
best_error: 9.973763766264216
best_error: 9.973763738693734
best_error: 9.84710547121428
best_error: 9.847105441917604
best_error: 9.722245187943223
best_error: 9.722245158914196
best_error: 9.612568134685755
best_error: 9.612568109301126
best_error: 9.477807677379122
best_error: 9.477807664460785
best_error: 9.47780765176186
best_error: 9.33128665399798
best_error: 9.331286615906741
best_error: 9.249772361678883
best_error: 9.249772360692045
best_error: 9.249772359628825
best_error: 9.249772335758358
best_error: 9.122824064256804
best_error: 9.122824014985481
best_error: 8.934400005349634
best_error: 8.934399974346139
best_error: 8.07741332022279
best_error: 8.077413315889578
best_error: 8.077413288946733
best_error: 8.011379215995545
best_error: 8.011379196475902
best_error: 7.947673313959751
best_error: 7.947673306449884
best_error: 7.947673294949125
best_error: 7.911881073707436
best_error: 7.911881065076112
best_error: 7.911881054482317
best_error: 7.890022469083055
best_error: 7.890022452026743
best_error: 7.8900224484227595
best_error: 7.857761924679611
best_error: 7.857761914122911
best_error: 7.857761905005655
best_error: 7.829047811786047
best_error: 7.829047798783289
best_error: 7.8290477917694465
best_error: 7.755280775884566
best_error: 7.7552806691513325
best_error: 7.724520524159884
best_error: 7.724520524159858
best_error: 7.724520522726473
best_error: 7.724520520134515
best_error: 7.721387395991435
best_error: 7.72138738289829
best_error: 7.721387376185465
best_error: 7.666736211903842
best_error: 7.666736200705069
best_error: 7.666736192541803
best_error: 7.6633861043849
best_error: 7.663385931944071
best_error: 7.642243061327387
best_error: 7.642242900742021
best_error: 7.604006777426815
best_error: 7.604006749506949
best_error: 7.600951867676609
best_error: 7.6009518507661165
best_error: 7.565289319029756
best_error: 7.565289303338238
best_error: 7.556015780480341
best_error: 7.556015557511609
best_error: 7.539213608830417
best_error: 7.539213368897938
best_error: 7.522790659444198
best_error: 7.522790645332978
best_error: 7.518129646726652
best_error: 7.518129632764126
best_error: 7.5150077945347356
best_error: 7.515007780694507
best_error: 7.513115723768232
best_error: 7.513115575789064
best_error: 7.512120023446316
best_error: 7.512120009593531
best_error: 7.511213175345511
best_error: 7.511213161538284
best_error: 7.5090386810241725
best_error: 7.509038534277163
best_error: 7.508238157841711
best_error: 7.508238011179564
best_error: 7.506530822126836
best_error: 7.506530807274242
best_error: 7.505588350477659
best_error: 7.505588222139197
best_error: 7.505361862099212
best_error: 7.5053618467322885
best_error: 7.505231904762096
best_error: 7.505231776810753
best_error: 7.504950274599273
best_error: 7.5049501471350855
best_error: 7.5048672924938105
best_error: 7.504867276841794
best_error: 7.50485489661878
best_error: 7.50485488076364
best_error: 7.503580288800157
best_error: 7.503580273082778
best_error: 7.49991164422573
best_error: 7.499911527727735
best_error: 7.496587731714879
best_error: 7.496587618994049
best_error: 7.481090269836272
best_error: 7.481090254812727
best_error: 7.451763774730925
best_error: 7.451763690005239
best_error: 7.448666719174758
best_error: 7.448666706381782
best_error: 7.4228530523566825
best_error: 7.422853038307976
best_error: 7.396789667419922
best_error: 7.396789654238622
best_error: 7.384042801320468
best_error: 7.384042650060268
best_error: 7.304934564445242
best_error: 7.304934554043877
best_error: 7.304934553777036
best_error: 7.26593714227334
best_error: 7.265937130771167
best_error: 7.265937130536902
best_error: 7.22995629046169
best_error: 7.229956279234445
best_error: 7.229956278926034
best_error: 7.220007994534661
best_error: 7.220007985933391
best_error: 7.22000798533684
best_error: 7.200296149984329
best_error: 7.200296140416635
best_error: 7.200296139782766
best_error: 7.1770268347300386
best_error: 7.1770268231250505
best_error: 7.177026822677507
