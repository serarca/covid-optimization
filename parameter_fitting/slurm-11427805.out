ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.926362445995174
best_error: 23.926362365707288
best_error: 4.707987502144482
best_error: 4.707987501132188
best_error: 4.706411359435429
best_error: 4.706411359390975
best_error: 4.706411359105182
best_error: 4.699984962497064
best_error: 4.699984962449417
best_error: 4.699984962159274
best_error: 4.67210781431301
best_error: 4.672107814248913
best_error: 4.672107813940951
best_error: 4.616154175452718
best_error: 4.6161541753383055
best_error: 4.616154175003848
best_error: 4.613831412668632
best_error: 4.613831412551151
best_error: 4.61383141221668
best_error: 4.604108489134282
best_error: 4.604108489003162
best_error: 4.604108488669215
best_error: 4.556255430242683
best_error: 4.556255430021758
best_error: 4.556255429708455
best_error: 3.0815139284995237
best_error: 3.081513854720983
best_error: 2.8630837698887577
best_error: 2.8630837087520207
best_error: 2.6592025101425882
best_error: 2.65920247841805
best_error: 2.65303961057949
best_error: 2.6530396083325143
best_error: 2.6530395830149165
best_error: 2.6301547631124875
best_error: 2.6301547617082512
best_error: 2.6301547300014563
best_error: 2.502777948169704
best_error: 2.5027779312009106
best_error: 2.50277790092993
best_error: 2.266271946091385
best_error: 2.266271937245126
best_error: 2.2662718486504736
best_error: 2.066784039814542
best_error: 2.0667840332632026
best_error: 2.066783912577306
best_error: 2.032308800962965
best_error: 2.0323087178736152
best_error: 2.02079020877381
best_error: 2.0207901482837007
best_error: 1.9834409929880354
best_error: 1.9834409437813423
best_error: 1.9410345358823822
best_error: 1.9410345353638707
best_error: 1.9410344631757244
best_error: 1.918816601221029
best_error: 1.9188165249736548
best_error: 1.909739753886847
best_error: 1.90973970096998
best_error: 1.9038186094823204
best_error: 1.9038185918164081
best_error: 1.9007157203854215
best_error: 1.900715699024844
best_error: 1.8947197333424912
best_error: 1.8947197324596803
best_error: 1.89471972536606
best_error: 1.8785464578404867
best_error: 1.8785464560165364
best_error: 1.8785464497203495
best_error: 1.7385266971105668
best_error: 1.7385266947114442
best_error: 1.7385266935450177
best_error: 1.7385266924019078
best_error: 1.7385266919768336
best_error: 1.6453076700426004
best_error: 1.6453074298471109
best_error: 1.634144268485275
best_error: 1.6341441691161258
best_error: 1.6195222034572871
best_error: 1.6195222002085157
best_error: 1.6195221986171904
best_error: 1.6008087825230441
best_error: 1.600808654639622
best_error: 1.5648641291552956
best_error: 1.564863864282479
best_error: 1.5150436357491335
best_error: 1.515043398752404
best_error: 1.4903430715663257
best_error: 1.4903429310255738
best_error: 1.4793407230937012
best_error: 1.479340558747944
best_error: 1.4651722361846244
best_error: 1.4651720797358712
best_error: 1.4599035990213594
best_error: 1.459903552162134
best_error: 1.4389520495215782
best_error: 1.4389520229117487
best_error: 1.4286493268537714
best_error: 1.4286492639219526
best_error: 1.4259984461033464
best_error: 1.4259984393039593
best_error: 1.4251299355927105
best_error: 1.4251299271554398
best_error: 1.411903630984859
best_error: 1.411903621461982
best_error: 1.4119028827668232
best_error: 1.411902873243928
best_error: 1.4078477406211034
best_error: 1.4078477118653652
best_error: 1.4078476929136325
best_error: 1.4078476641579052
best_error: 1.4074752332890186
best_error: 1.407475195961326
best_error: 1.403982160616243
best_error: 1.4039821385585975
best_error: 1.4039821385274716
best_error: 1.4039821189822481
best_error: 1.4039820967496452
best_error: 1.4038560004535108
best_error: 1.4038559784953373
best_error: 1.3953890006281815
best_error: 1.395388915882437
best_error: 1.3926360774144717
best_error: 1.392635959273595
best_error: 1.327029596889665
best_error: 1.3270295630188085
best_error: 1.3060233139280604
best_error: 1.3060232825928297
best_error: 1.2693441011520898
best_error: 1.269344057643005
best_error: 1.2599134646023071
best_error: 1.2599134341407525
best_error: 1.2560873142776958
best_error: 1.256087213351762
best_error: 1.247298434622983
best_error: 1.2472983363147998
best_error: 1.2373125730665548
best_error: 1.2373124914107816
best_error: 1.2327779443100135
best_error: 1.2327778780284424
best_error: 1.2307362805036677
best_error: 1.2307362767668106
best_error: 1.2307362640504107
best_error: 1.2294040012353913
best_error: 1.2294039938665082
best_error: 1.2288005908808655
best_error: 1.228800590350581
best_error: 1.2288005900628165
best_error: 1.2288005895578025
best_error: 1.228800589491148
best_error: 1.2283217773611181
best_error: 1.2283217681111487
best_error: 1.2279488244679733
best_error: 1.227948815509098
best_error: 1.2265819857654705
best_error: 1.2265819800472115
best_error: 1.216385338660636
best_error: 1.2163853311277055
best_error: 1.1968942250541281
best_error: 1.1968942056245873
best_error: 1.1966962282569504
best_error: 1.1966962073048772
best_error: 1.1965887870623444
best_error: 1.196588764267235
best_error: 1.1963422761628673
best_error: 1.1963422516378266
best_error: 1.1962589925609155
best_error: 1.196258967157649
best_error: 1.1958824571731543
best_error: 1.1958824246858137
best_error: 1.1902065794892451
best_error: 1.1902065578033458
best_error: 1.1900694804457328
best_error: 1.1900694575995057
best_error: 1.1894963124246503
best_error: 1.1894962807204215
best_error: 1.1688769690700749
best_error: 1.1688769375058303
best_error: 1.133869313228674
best_error: 1.133869301980013
best_error: 1.1333360017583671
best_error: 1.1333359783283286
best_error: 1.1318349390346147
best_error: 1.1318349282208944
best_error: 1.1310923137966693
best_error: 1.1310923093285183
best_error: 1.130658922856013
best_error: 1.1306589222557923
best_error: 1.1306589202961899
best_error: 1.128991151895076
best_error: 1.1289911424125303
best_error: 1.127256856459494
best_error: 1.12725683441494
best_error: 1.1262268716246695
best_error: 1.1262268402932627
best_error: 1.1249526371997691
best_error: 1.124952609375019
best_error: 1.1217909359645173
best_error: 1.1217909163895066
best_error: 1.1203560516692945
best_error: 1.1203560345389016
best_error: 1.1178242137065049
best_error: 1.1178241786470868
best_error: 1.1109684506676722
best_error: 1.1109684476304134
best_error: 1.1109683969474058
best_error: 1.1066368392654418
best_error: 1.1066367785378624
best_error: 1.103421551617678
best_error: 1.103421505969457
best_error: 1.102335216853882
best_error: 1.102335216641117
best_error: 1.1023352161231461
best_error: 1.1023352153347288
best_error: 1.1012677416368128
best_error: 1.101267741427062
best_error: 1.1012677408773373
best_error: 1.1012677397517738
best_error: 1.1001468878836824
best_error: 1.1001468874019176
best_error: 1.1001468870298938
best_error: 1.1001468861084247
best_error: 1.0942855856589762
best_error: 1.094285550637853
best_error: 1.0850385077881153
best_error: 1.0850384489224607
best_error: 1.0811137155510044
best_error: 1.0811137035086587
best_error: 1.0811137026098618
best_error: 1.07832373276614
best_error: 1.0783237262531438
best_error: 1.078323721685749
best_error: 1.07757104125574
best_error: 1.0775710409248203
best_error: 1.0775710405536152
best_error: 1.0775710388525526
best_error: 1.0773470130991385
best_error: 1.0773470092538642
best_error: 1.0769595144489867
best_error: 1.076959510953762
best_error: 1.075479198570068
best_error: 1.0754791917010795
best_error: 1.0726921452422133
best_error: 1.072692122038369
best_error: 1.0630059590086647
best_error: 1.0630059227906887
best_error: 1.062317486693606
best_error: 1.062317450304699
best_error: 1.0593589695893046
best_error: 1.0593589494682112
best_error: 1.0585719419990296
best_error: 1.0585719314728539
best_error: 1.0576177288095758
best_error: 1.0576177227230763
best_error: 1.0556303082445568
best_error: 1.0556302828716857
best_error: 1.0547781947339139
best_error: 1.0547781923184731
best_error: 1.0547781753080816
best_error: 1.0521310341052763
best_error: 1.0521309986284135
best_error: 1.050893025045841
best_error: 1.0508929961232785
best_error: 1.0461351525494436
best_error: 1.0461350860273813
best_error: 1.0447976407485802
best_error: 1.0447976134323427
best_error: 1.0436600786702466
best_error: 1.0436600761593238
best_error: 1.0435371637982342
best_error: 1.043537156746254
best_error: 1.0432160568725775
best_error: 1.0432160250817375
best_error: 1.041448559176352
best_error: 1.0414485535760454
