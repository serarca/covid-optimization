ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.923477021434717
best_error: 8.923477005935997
best_error: 4.47241361016806
best_error: 4.472413088166565
best_error: 4.13989850496711
best_error: 4.139898342946053
best_error: 3.870537144073917
best_error: 3.87053714009554
best_error: 3.8705371347271154
best_error: 3.8557537545125555
best_error: 3.8557537446440158
best_error: 3.844862363615347
best_error: 3.844862353254803
best_error: 3.844726543530065
best_error: 3.84472654352984
best_error: 3.844726539070289
best_error: 3.835203698288074
best_error: 3.835203681078083
best_error: 3.630487196331278
best_error: 3.6304871963272
best_error: 3.6304871714781877
best_error: 3.5874109969298926
best_error: 3.5874109969260184
best_error: 3.5665403587682896
best_error: 3.5665402236727877
best_error: 3.497633170982
best_error: 3.4976330627401255
best_error: 3.4815379014152112
best_error: 3.4815378892726714
best_error: 3.4811686806652085
best_error: 3.48116866969355
best_error: 3.481003732971446
best_error: 3.481003722529926
best_error: 3.480877217290781
best_error: 3.4808772069747524
best_error: 3.4806654344124475
best_error: 3.4806654249471807
best_error: 3.480605238806568
best_error: 3.4806052298606724
best_error: 3.480569060908652
best_error: 3.4805690526017385
best_error: 3.4805415252891505
best_error: 3.4805415169669685
best_error: 3.4805176780859894
best_error: 3.480517669840251
best_error: 3.4804903792053494
best_error: 3.48049037121216
best_error: 3.480447420989747
best_error: 3.480447413553243
best_error: 3.48041113099242
best_error: 3.480411123828604
best_error: 3.480404166473756
best_error: 3.4804041593055457
best_error: 3.480397602563589
best_error: 3.480397595391223
best_error: 3.4803943095143053
best_error: 3.4803943023398602
best_error: 3.4803912105243753
best_error: 3.4803912033873465
best_error: 3.4803897030001893
best_error: 3.480389695862205
best_error: 3.480388278433511
best_error: 3.480388271294627
best_error: 3.4803881298543873
best_error: 3.480388122715408
best_error: 3.4803880544455255
best_error: 3.48038804730649
best_error: 3.4803880284439233
best_error: 3.4803880213048766
best_error: 3.480387968505127
best_error: 3.4803879656305887
best_error: 3.4803879446110377
best_error: 3.480387937471941
best_error: 3.4803879336041943
best_error: 3.4803879264650845
best_error: 3.480387923235108
best_error: 3.4803879160959967
best_error: 3.480387915112998
best_error: 3.4803866644971277
best_error: 3.480386657357999
best_error: 3.4803816544800172
best_error: 3.4803816473407982
best_error: 3.4803616899996426
best_error: 3.480361682860116
best_error: 3.480283054861706
best_error: 3.480283047681567
best_error: 3.4795423808781143
best_error: 3.479542373635477
best_error: 3.4782669975929634
best_error: 3.478266989758964
best_error: 3.478001618576009
best_error: 3.4780016106402116
best_error: 3.477889069400009
best_error: 3.4778890612555236
best_error: 3.4778531488331126
best_error: 3.4778531406008746
best_error: 3.477840574613919
best_error: 3.4778405662903595
best_error: 3.4778355267891454
best_error: 3.4778355184667182
best_error: 3.4777671360842377
best_error: 3.477767128308453
best_error: 3.4777587687238167
best_error: 3.4777587610068545
best_error: 3.477739882890618
best_error: 3.4777398752644246
best_error: 3.4777390235144368
best_error: 3.477739015887792
best_error: 3.477738426908759
best_error: 3.4777384192817946
best_error: 3.477736972801746
best_error: 3.477736965174011
best_error: 3.4777361314101967
best_error: 3.477736123835176
best_error: 3.477735607617272
best_error: 3.4777356000419752
best_error: 3.477735591788755
best_error: 3.477735584213446
best_error: 3.4777355807159425
best_error: 3.477735573140625
best_error: 3.4777355706759026
best_error: 3.4777355631005866
best_error: 3.477735556348871
best_error: 3.477735549504851
best_error: 3.4777355444346925
best_error: 3.4777355398858214
best_error: 3.477735532310483
best_error: 3.477735530320758
best_error: 3.477735529103178
best_error: 3.4777355280133784
best_error: 3.4777337300457574
best_error: 3.4777337271708872
best_error: 3.4777307465682257
best_error: 3.477730738940558
best_error: 3.4777307295134343
best_error: 3.4777306592836554
best_error: 3.4777306516559725
best_error: 3.4777300815350722
best_error: 3.477730073907034
best_error: 3.4777298902608287
best_error: 3.4777298826326666
best_error: 3.4777295443616145
best_error: 3.4777295367864065
best_error: 3.477729158297735
best_error: 3.47772915072228
best_error: 3.477728972003873
best_error: 3.477728964428296
best_error: 3.477728955840032
best_error: 3.4777289482644465
best_error: 3.4777289424361277
best_error: 3.4777289369799247
best_error: 3.4777289340151305
best_error: 3.477728931250211
best_error: 3.477728929623383
best_error: 3.4777289283596424
best_error: 3.477728927227127
best_error: 3.477728925962887
best_error: 3.4777288876666845
best_error: 3.477728880091095
best_error: 3.4777285335933557
best_error: 3.4777285260178084
best_error: 3.477728168619296
best_error: 3.477728161043789
best_error: 3.4777278102174236
best_error: 3.4777278026419394
best_error: 3.477727693615072
best_error: 3.4777276860395716
best_error: 3.4777276099246137
best_error: 3.477727602349087
best_error: 3.477727493336669
best_error: 3.477727485761082
best_error: 3.4777274504658466
best_error: 3.4777274428902407
best_error: 3.477727350508941
best_error: 3.4777273429332793
best_error: 3.477727303825957
best_error: 3.47772729625027
best_error: 3.477727284952047
best_error: 3.4777272773763483
best_error: 3.477727275013554
best_error: 3.4777272721386843
best_error: 3.4777272695037738
best_error: 3.477727227522845
best_error: 3.4777272199471105
best_error: 3.477727209843633
best_error: 3.4777272093212956
