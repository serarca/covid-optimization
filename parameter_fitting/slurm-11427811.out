ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.855396165187734
best_error: 23.85539581179142
best_error: 4.72560137492606
best_error: 4.725601373828249
best_error: 4.725250874952195
best_error: 4.725250874944273
best_error: 4.725250874909667
best_error: 4.723840377506308
best_error: 4.723840377498197
best_error: 4.7238403774635325
best_error: 4.718064714887253
best_error: 4.718064714878318
best_error: 4.718064714843445
best_error: 4.692411525742176
best_error: 4.692411525728317
best_error: 4.692411525693374
best_error: 4.485362962281971
best_error: 4.485362961888287
best_error: 4.4257916408996225
best_error: 4.425791640098342
best_error: 4.353086942102836
best_error: 4.3530869404739345
best_error: 3.253044014145707
best_error: 3.2530439152539463
best_error: 3.1404816442729153
best_error: 3.1404816133797286
best_error: 3.0849754517247505
best_error: 3.0849754234028754
best_error: 2.9538399310104753
best_error: 2.953839742574311
best_error: 2.8802282129964247
best_error: 2.8802281361686313
best_error: 2.7800194522993418
best_error: 2.7800193707909626
best_error: 2.676435820806594
best_error: 2.6764357338636033
best_error: 2.6041972564205844
best_error: 2.604197154877905
best_error: 2.5981976754280645
best_error: 2.598197560793198
best_error: 2.5488602956095376
best_error: 2.548860180779155
best_error: 2.351232117757488
best_error: 2.351231926953157
best_error: 2.2526305722271855
best_error: 2.2526305684822225
best_error: 2.2526305617515536
best_error: 2.2489229896127867
best_error: 2.248922962357119
best_error: 2.2460000267331055
best_error: 2.2460000153129283
best_error: 2.2336431106888224
best_error: 2.2336431078894474
best_error: 2.2336431009143074
best_error: 2.2097724781881594
best_error: 2.2097724616110197
best_error: 2.1760584546034556
best_error: 2.176058448454941
best_error: 2.176058446713009
best_error: 2.159884401143805
best_error: 2.159884373816095
best_error: 2.15466318676396
best_error: 2.154663105846097
best_error: 2.131481721701788
best_error: 2.1314816469364066
best_error: 2.0308487229040124
best_error: 2.030848722898973
best_error: 2.0308487227791607
best_error: 2.030848718827724
best_error: 1.981468672840422
best_error: 1.9814686512883164
best_error: 1.9531640605159208
best_error: 1.9531640154632073
best_error: 1.827614189977777
best_error: 1.8276141622432995
best_error: 1.7912229697950068
best_error: 1.7912229684468801
best_error: 1.7912229613483657
best_error: 1.7595770252637228
best_error: 1.7595770250245244
best_error: 1.7595770166852245
best_error: 1.722127260455911
best_error: 1.7221272601109194
best_error: 1.7221272520267417
best_error: 1.7148450049539266
best_error: 1.7148449631157323
best_error: 1.5624183629686725
best_error: 1.5624182700491465
best_error: 1.5528006868287068
best_error: 1.552800589455818
best_error: 1.519202813043714
best_error: 1.5192027952020133
best_error: 1.5134325492105878
best_error: 1.5134325182983548
best_error: 1.5123192127889105
best_error: 1.5123192074091307
best_error: 1.5120756044676673
best_error: 1.512075603688751
best_error: 1.5119729805923965
best_error: 1.5119729777317588
best_error: 1.5119160788536004
best_error: 1.5119160779290863
best_error: 1.51176587477525
best_error: 1.511765874297012
best_error: 1.5117658740953592
best_error: 1.511298493226509
best_error: 1.5112984932184
best_error: 1.5112984928882642
best_error: 1.5112984928872857
best_error: 1.511298492468713
best_error: 1.5107360198844437
best_error: 1.5107360193517
best_error: 1.510736018863768
best_error: 1.5103554099095573
best_error: 1.5103554077777703
best_error: 1.509988257446497
best_error: 1.5099882574219448
best_error: 1.509988256904453
best_error: 1.5099882568947338
best_error: 1.5099882567941096
best_error: 1.5099648582836513
best_error: 1.5099648569808095
best_error: 1.5098737380986242
best_error: 1.5098737328277532
best_error: 1.5096527660795176
best_error: 1.5096527613192896
best_error: 1.5090483582378997
best_error: 1.5090483469301272
best_error: 1.5073972675569607
best_error: 1.5073972571114607
best_error: 1.4975847159453315
best_error: 1.4975846776286372
best_error: 1.4880505460952218
best_error: 1.4880505242339215
best_error: 1.487886388860935
best_error: 1.4878863599096541
best_error: 1.4832187888851953
best_error: 1.4832187679442572
best_error: 1.4800002112670703
best_error: 1.4800001540203047
best_error: 1.4784497494510802
best_error: 1.4784497490802184
best_error: 1.4784497489638297
best_error: 1.477905954515898
best_error: 1.4779059537511312
best_error: 1.4748651560166675
best_error: 1.4748651534957375
best_error: 1.4692764831157568
best_error: 1.4692764811837113
best_error: 1.4676490756293115
best_error: 1.4676490611424782
best_error: 1.461917552974782
best_error: 1.4619175400934246
best_error: 1.459956901158765
best_error: 1.4599568619406833
best_error: 1.459358450445886
best_error: 1.4593584435125522
best_error: 1.4588553902996295
best_error: 1.4588553884868636
best_error: 1.4580611716911027
best_error: 1.4580611638004382
best_error: 1.4566319828802958
best_error: 1.4566319697261536
best_error: 1.4550131622878857
best_error: 1.4550131557253527
best_error: 1.4547179806527704
best_error: 1.4547179800918115
best_error: 1.4546921093340561
best_error: 1.4546921077678612
best_error: 1.4546858869165298
best_error: 1.4546858867630492
best_error: 1.4546858867509105
best_error: 1.4546699442000754
best_error: 1.4546699432727652
best_error: 1.454634189383249
best_error: 1.4546341864481926
best_error: 1.4545919712390916
best_error: 1.4545919673085936
best_error: 1.4542156076858845
best_error: 1.4542156029635114
best_error: 1.454162560092338
best_error: 1.454162550454565
best_error: 1.453783890827177
best_error: 1.4537838809555383
best_error: 1.4533326810410625
best_error: 1.4533326806409588
best_error: 1.453332680553132
best_error: 1.4525958141943243
best_error: 1.4525957943075036
best_error: 1.452119336653651
best_error: 1.4521193040215297
best_error: 1.4517106268673452
best_error: 1.45171060435115
best_error: 1.4515225399621374
best_error: 1.4515225359209254
best_error: 1.4515154289987964
best_error: 1.4515154270258868
best_error: 1.4514769756342871
best_error: 1.4514769727611099
best_error: 1.451434031521638
best_error: 1.451434029081621
best_error: 1.4513978998470285
best_error: 1.451397898316935
best_error: 1.4512996644658116
best_error: 1.4512996634444784
best_error: 1.4511437187508833
best_error: 1.4511437180378448
best_error: 1.4511437175636699
best_error: 1.4510547031049692
best_error: 1.451054703104824
best_error: 1.4510547030565748
best_error: 1.4510547024181073
best_error: 1.4510547020928055
best_error: 1.450933077858907
best_error: 1.450933077742379
best_error: 1.450933077392398
best_error: 1.4509330772287328
best_error: 1.4507090383374024
best_error: 1.4507090324076648
best_error: 1.450452781412146
best_error: 1.4504527773698128
best_error: 1.4503605992099262
best_error: 1.450360597354788
best_error: 1.4503445608142769
best_error: 1.4503445572214289
best_error: 1.4503387162831476
best_error: 1.4503387157654162
best_error: 1.4503334875934641
best_error: 1.4503334872198956
best_error: 1.4503326698084797
best_error: 1.4503326692130967
best_error: 1.4503323247343414
best_error: 1.45033232449973
best_error: 1.4503320687498518
best_error: 1.4503320686650982
best_error: 1.4503320686019958
best_error: 1.4503316621810824
best_error: 1.4503316618825146
best_error: 1.450330882954606
best_error: 1.4503308826645653
best_error: 1.4503284689781768
best_error: 1.4503284685789697
best_error: 1.4503162731431158
best_error: 1.4503162726454988
best_error: 1.4502758873869763
best_error: 1.4502758865606022
best_error: 1.4501740651972546
best_error: 1.4501740600996826
best_error: 1.4498981956954697
best_error: 1.4498981882808755
best_error: 1.449589305809478
best_error: 1.449589305648178
best_error: 1.4494762687331468
best_error: 1.449476266936018
best_error: 1.449269027697018
best_error: 1.4492690271761262
best_error: 1.4487896241106646
best_error: 1.4487896096829147
best_error: 1.4486912803466843
best_error: 1.4486912616135093
best_error: 1.448615291223545
best_error: 1.448615286532722
best_error: 1.4485621714199923
best_error: 1.4485621673484548
best_error: 1.448506513518029
best_error: 1.4485065095582053
best_error: 1.4484923660159499
best_error: 1.4484923638950677
best_error: 1.4484789639960582
best_error: 1.4484789635737443
best_error: 1.4484775773455032
best_error: 1.4484775767498288
