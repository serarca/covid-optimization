ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.109844178622094
best_error: 23.10984384844353
best_error: 4.617938116237436
best_error: 4.617938114914856
best_error: 4.61739347749146
best_error: 4.617393477481842
best_error: 4.617393477434025
best_error: 4.615198008917299
best_error: 4.615198008907385
best_error: 4.615198008859442
best_error: 4.6061402691876445
best_error: 4.6061402691764055
best_error: 4.606140269128012
best_error: 4.564535400528143
best_error: 4.564535400507862
best_error: 4.564535400459358
best_error: 3.9388412775330806
best_error: 3.938841272053673
best_error: 3.8381221495594695
best_error: 3.838122141580221
best_error: 3.7043884365339186
best_error: 3.704388424629799
best_error: 3.249998959442776
best_error: 3.249998938177314
best_error: 3.0529165031709713
best_error: 3.0529164792511403
best_error: 2.976066647528944
best_error: 2.976066631146284
best_error: 2.9716453947352135
best_error: 2.9716453470167226
best_error: 2.96795959028406
best_error: 2.9679595765811735
best_error: 2.940192606656351
best_error: 2.9401925630706116
best_error: 2.8873073730255987
best_error: 2.88730731693485
best_error: 2.7310121164474825
best_error: 2.7310120626164682
best_error: 2.544775324322192
best_error: 2.544775272641072
best_error: 2.5447752421640364
best_error: 2.3681200461011396
best_error: 2.3681199939129693
best_error: 2.3681199404646955
best_error: 2.3032117318833496
best_error: 2.303211640243147
best_error: 2.176765993732685
best_error: 2.1767658927438487
best_error: 2.0889304419876136
best_error: 2.0889302378802457
best_error: 2.0149022022641727
best_error: 2.01490220224411
best_error: 2.014902202039246
best_error: 2.0149021935472065
best_error: 2.0090728223217504
best_error: 2.0090728188375278
best_error: 2.009072814418672
best_error: 2.007159775654223
best_error: 2.0071597718334857
best_error: 2.0071597680210083
best_error: 1.9992857870908265
best_error: 1.999285773372589
best_error: 1.9724352427010112
best_error: 1.9724351862199476
best_error: 1.835089407408878
best_error: 1.8350891813700911
best_error: 1.5817067850285178
best_error: 1.5817065475624548
best_error: 1.4054281263055766
best_error: 1.4054281170996257
best_error: 1.404851122980844
best_error: 1.404851075416567
best_error: 1.4000201783983337
best_error: 1.4000201466790383
best_error: 1.3996284608590444
best_error: 1.3996283861150267
best_error: 1.3921972818535642
best_error: 1.3921972563897835
best_error: 1.389073071383043
best_error: 1.3890730594923073
best_error: 1.3870167531093593
best_error: 1.3870167374908915
best_error: 1.386830417568567
best_error: 1.3868304120280988
best_error: 1.3867815251330446
best_error: 1.3867815250465483
best_error: 1.3867815247168942
best_error: 1.3867815245999253
best_error: 1.386781524558639
best_error: 1.3867563836690742
best_error: 1.3867563832367695
best_error: 1.3867563830527094
best_error: 1.3867408589826067
best_error: 1.386740858936291
best_error: 1.3867408585559653
best_error: 1.3867408584238199
best_error: 1.386740858419814
best_error: 1.3867279828784487
best_error: 1.3867279827825454
best_error: 1.386727982447218
best_error: 1.3867279822010259
best_error: 1.3865252794911296
best_error: 1.3865252763950562
best_error: 1.3858943503930485
best_error: 1.3858943488395479
best_error: 1.3858943481856938
best_error: 1.3837522597201974
best_error: 1.3837522394959014
best_error: 1.3810850029440223
best_error: 1.3810849962713474
best_error: 1.3810849865785715
best_error: 1.376628184873215
best_error: 1.376628167904785
best_error: 1.3744445917902164
best_error: 1.3744445917600214
best_error: 1.374444591516827
best_error: 1.3744445909581784
best_error: 1.3744445908018745
best_error: 1.374444589562151
best_error: 1.3736047262470057
best_error: 1.3736047109438099
best_error: 1.3724171755217016
best_error: 1.372417164085477
best_error: 1.372009925335498
best_error: 1.3720099230640148
best_error: 1.3719016714811472
best_error: 1.3719016693105666
best_error: 1.3718072429737165
best_error: 1.37180723857893
best_error: 1.371591182588023
best_error: 1.3715911814813182
best_error: 1.3715188994737424
best_error: 1.3715188988897804
best_error: 1.371518898879262
best_error: 1.3715188985403186
best_error: 1.3712724685227087
best_error: 1.3712724675479913
best_error: 1.371272463459638
best_error: 1.3708262785787888
best_error: 1.3708262657440147
best_error: 1.369176108787402
best_error: 1.3691760808780211
best_error: 1.3647597938639768
best_error: 1.3647597381073646
best_error: 1.356911128582884
best_error: 1.3569110939368476
best_error: 1.3493727265072095
best_error: 1.3493727019267203
best_error: 1.3461633466375913
best_error: 1.3461633216463795
best_error: 1.344929705497496
best_error: 1.344929688144846
best_error: 1.3444618081497592
best_error: 1.3444618015505483
best_error: 1.3443421652524876
best_error: 1.3443421615111333
best_error: 1.3441103548908793
best_error: 1.3441103543533621
best_error: 1.3436473755888008
best_error: 1.343647374083513
best_error: 1.3427394140890752
best_error: 1.3427393981085824
best_error: 1.3415073405977314
best_error: 1.341507320299789
best_error: 1.3399300767158246
best_error: 1.3399300658511617
best_error: 1.3391095085098492
best_error: 1.339109504562864
best_error: 1.3389265499467586
best_error: 1.3389265473401588
best_error: 1.3386381148038948
best_error: 1.3386381093692714
best_error: 1.3386381008917956
best_error: 1.3375687072416775
best_error: 1.3375686977843413
best_error: 1.3334903794470347
best_error: 1.3334903643761775
best_error: 1.3324985931084354
best_error: 1.332498593094975
best_error: 1.3324985928807518
best_error: 1.3324985919838332
best_error: 1.3324985908971427
best_error: 1.3315811522824357
best_error: 1.3315811522706278
best_error: 1.3315811519530052
best_error: 1.3315811512390576
best_error: 1.3315811499466974
best_error: 1.329063578297962
best_error: 1.3290635561788844
best_error: 1.3278028664359443
best_error: 1.327802864081589
best_error: 1.3255569704928478
best_error: 1.325556963256424
best_error: 1.3249515687295819
best_error: 1.3249515686546927
best_error: 1.3249515681806912
best_error: 1.323269272181347
best_error: 1.323269272174175
best_error: 1.323269272021846
best_error: 1.3232692716774814
best_error: 1.3232692714418404
best_error: 1.322142778290803
best_error: 1.3221427755728719
best_error: 1.3215376848467257
best_error: 1.3215376626851603
best_error: 1.320029685442542
best_error: 1.320029683103901
best_error: 1.3194657204203415
best_error: 1.3194657150995803
best_error: 1.319262585594288
best_error: 1.3192625789865482
best_error: 1.3192271262805735
best_error: 1.319227125045195
best_error: 1.3188601741343828
best_error: 1.318860171423628
best_error: 1.3186693716146272
best_error: 1.3186693701385586
best_error: 1.3184323903728012
best_error: 1.3184323824891409
best_error: 1.3180751080201238
best_error: 1.3180750905012386
best_error: 1.3178286565746264
best_error: 1.3178286302333455
best_error: 1.3175699652171866
best_error: 1.3175699452392176
best_error: 1.3171828252199733
best_error: 1.3171828186949819
best_error: 1.3168789114593336
best_error: 1.3168789058846548
best_error: 1.3166100408737405
best_error: 1.3166100281195503
best_error: 1.3153209026805457
best_error: 1.3153208928524398
best_error: 1.314911285296555
best_error: 1.3149112751538499
best_error: 1.3140590412783124
best_error: 1.314059036406704
best_error: 1.3138654682243438
best_error: 1.3138654672797998
best_error: 1.3138654589874597
best_error: 1.3135940791296599
best_error: 1.3135940618312674
best_error: 1.3133654523153533
best_error: 1.3133654423779018
best_error: 1.3132055887817753
best_error: 1.313205581019112
best_error: 1.3128082662120861
best_error: 1.3128082588771273
best_error: 1.3127331749392113
best_error: 1.3127331731246406
best_error: 1.3125009431227022
best_error: 1.312500943070196
best_error: 1.3125009430031935
best_error: 1.312500942844839
best_error: 1.312424120287677
best_error: 1.3124241173099478
best_error: 1.31221014201482
best_error: 1.3122101360885317
best_error: 1.3121654701935221
best_error: 1.3121654689207747
best_error: 1.312123411003943
best_error: 1.3121234082781683
best_error: 1.3121090338400025
best_error: 1.3121090337888146
best_error: 1.312109033766731
best_error: 1.3121007030104386
best_error: 1.3121007023474218
best_error: 1.3120989074316622
best_error: 1.312098907388135
best_error: 1.312098907363241
best_error: 1.3120984964718116
best_error: 1.312098495808989
best_error: 1.3120977079934568
best_error: 1.3120977077172389
best_error: 1.3120965321039852
best_error: 1.3120965319858064
best_error: 1.3120958452397469
best_error: 1.3120958446437485
best_error: 1.3120946455448297
best_error: 1.3120946447773398
best_error: 1.3120905997730545
best_error: 1.3120905996640198
