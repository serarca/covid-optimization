ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 103.3812675037482
best_error: 103.38126733353802
best_error: 16.51164991004579
best_error: 16.511649910036923
best_error: 16.511649894230274
best_error: 16.49573831064913
best_error: 16.495738294423585
best_error: 16.42780209080926
best_error: 16.427802072779205
best_error: 16.059940461765102
best_error: 16.059940432051263
best_error: 14.752207543947325
best_error: 14.752207533215167
best_error: 14.75220751045542
best_error: 13.19679149308619
best_error: 13.196791447783246
best_error: 12.648259403865188
best_error: 12.648259381124051
best_error: 12.642585274023679
best_error: 12.642585251459458
best_error: 12.508763977135962
best_error: 12.508763952258525
best_error: 12.012462080730874
best_error: 12.01246206986111
best_error: 12.012462050575326
best_error: 11.602078682785539
best_error: 11.602078671550466
best_error: 11.602078650774379
best_error: 11.33841589075767
best_error: 11.338415864887686
best_error: 11.24325058615593
best_error: 11.243250575633095
best_error: 11.243250564664823
best_error: 10.685128532016748
best_error: 10.685128405821091
best_error: 10.289532651490802
best_error: 10.289532495310361
best_error: 10.032672900705109
best_error: 10.032672848283575
best_error: 9.93338675965229
best_error: 9.933386759651995
best_error: 9.933386755576059
best_error: 9.933386744429008
best_error: 9.832072231806269
best_error: 9.832072162065328
best_error: 9.568538171004413
best_error: 9.568538041705798
best_error: 9.552171853993233
best_error: 9.552171776020781
best_error: 9.531538682616928
best_error: 9.531538678445571
best_error: 9.531538676352659
best_error: 9.531538669734614
best_error: 9.527302879316093
best_error: 9.527302851532031
best_error: 9.50355475920212
best_error: 9.503554751620108
best_error: 9.503554746448117
best_error: 9.310654767129863
best_error: 9.310654560893918
best_error: 9.152489147094188
best_error: 9.152489147092723
best_error: 9.152489138397312
best_error: 9.123753089267716
best_error: 9.123753027216697
best_error: 9.118539793522235
best_error: 9.118539692029298
best_error: 9.11054807099872
best_error: 9.11054794678919
best_error: 9.07270528732107
best_error: 9.072705158840662
best_error: 8.88817993847802
best_error: 8.888179863010688
best_error: 8.157915823891226
best_error: 8.157915804014365
best_error: 8.119895990197055
best_error: 8.119895990088647
best_error: 8.119895980258121
best_error: 8.10639290666871
best_error: 8.106392901964494
best_error: 8.106392894005454
best_error: 8.089012215924631
best_error: 8.089012081373006
best_error: 8.069597924762501
best_error: 8.069597803059445
best_error: 8.000534196183096
best_error: 8.000534123125338
best_error: 7.91228106253736
best_error: 7.912281054298038
best_error: 7.9122810479038845
best_error: 7.866489221772432
best_error: 7.866489210256518
best_error: 7.836718364431444
best_error: 7.8367183452797775
best_error: 7.8162685667528
best_error: 7.816268511979683
best_error: 7.38979067676553
best_error: 7.38979066789668
best_error: 7.294515294066614
best_error: 7.294515236398908
best_error: 7.22816755982029
best_error: 7.228167015680098
best_error: 7.199364207592053
best_error: 7.199364191210393
best_error: 7.1780152417262855
best_error: 7.178015241657811
best_error: 7.178015239966589
best_error: 7.178015237331686
best_error: 7.175569884960516
best_error: 7.175569884660058
best_error: 7.175569883233417
best_error: 7.175569880582069
best_error: 7.174178139943807
best_error: 7.174178139429304
best_error: 7.174178139321062
best_error: 7.174178138226319
best_error: 7.174178135574978
best_error: 7.173483603711077
best_error: 7.1734836030876625
best_error: 7.173483602826545
best_error: 7.17348360229137
best_error: 7.173483599348408
best_error: 7.173318272172748
best_error: 7.173318271545099
best_error: 7.173318271288203
best_error: 7.173318270754309
best_error: 7.1733182678115215
best_error: 7.173226493241012
best_error: 7.173226492613386
best_error: 7.173226492356507
best_error: 7.173226491823273
best_error: 7.173226488880589
best_error: 7.173199005491055
best_error: 7.173199005491054
best_error: 7.173199004863434
best_error: 7.173199004606563
best_error: 7.173199004073525
best_error: 7.173199001130872
best_error: 7.173183607202095
best_error: 7.173183606574481
best_error: 7.17318360631761
best_error: 7.1731836057846845
best_error: 7.173183602842047
best_error: 7.173169856871812
best_error: 7.173169856244202
best_error: 7.173169855987332
best_error: 7.173169855454509
best_error: 7.173169852511885
best_error: 7.173163712135691
best_error: 7.173163711508082
best_error: 7.173163711251215
best_error: 7.173163710718432
best_error: 7.173163707775817
best_error: 7.173163295396782
best_error: 7.173163295396781
best_error: 7.1731632947691715
best_error: 7.173163294512303
best_error: 7.173163293979528
best_error: 7.1731632910369125
best_error: 7.17316063412943
best_error: 7.173160633501823
best_error: 7.173160633244938
best_error: 7.173160632712198
best_error: 7.17316062976959
best_error: 7.173158454041751
best_error: 7.173158453414143
best_error: 7.173158453157246
best_error: 7.173158452624536
best_error: 7.173158449681933
best_error: 7.1731571851833005
best_error: 7.173157184555693
best_error: 7.173157184298789
best_error: 7.173157183766096
best_error: 7.173157180823497
best_error: 7.173156169551207
best_error: 7.1731561695512065
best_error: 7.173156168923603
best_error: 7.173156168666691
best_error: 7.173156168134014
best_error: 7.173156165191415
best_error: 7.173155520375121
best_error: 7.17315552037512
best_error: 7.1731555197475165
best_error: 7.173155519490601
best_error: 7.173155518957934
best_error: 7.173155516015335
best_error: 7.173155027862291
best_error: 7.173155027234685
best_error: 7.173155026977768
best_error: 7.173155026445105
best_error: 7.1731550235025106
best_error: 7.173154638273461
best_error: 7.173154638273459
best_error: 7.173154637645856
best_error: 7.1731546373889365
best_error: 7.17315463685628
best_error: 7.173154633913685
best_error: 7.173154385999258
best_error: 7.173154385371651
best_error: 7.1731543851147315
best_error: 7.173154384582078
best_error: 7.173154381639484
best_error: 7.173154100457697
best_error: 7.173154099830091
best_error: 7.173154099573171
best_error: 7.173154099040521
best_error: 7.1731540960979245
best_error: 7.173153683700547
best_error: 7.173153683072942
best_error: 7.173153682816017
best_error: 7.173153682283374
best_error: 7.17315367934078
best_error: 7.173153601328584
