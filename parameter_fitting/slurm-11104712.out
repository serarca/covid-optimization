ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 95.54412847568976
best_error: 95.54412834401217
best_error: 95.54412826280384
best_error: 14.7921709603258
best_error: 14.79217096031399
best_error: 14.792170939195703
best_error: 14.748989005915114
best_error: 14.748988983832758
best_error: 14.55528048858592
best_error: 14.555280462004713
best_error: 13.53705369551416
best_error: 13.537053662506235
best_error: 13.437277920384757
best_error: 13.437277887283006
best_error: 12.781949603226115
best_error: 12.781949539239195
best_error: 11.72998467853529
best_error: 11.729984540490387
best_error: 11.288787444411366
best_error: 11.288787318396135
best_error: 11.278682964924704
best_error: 11.278682944444936
best_error: 11.172231520044644
best_error: 11.172231392475268
best_error: 10.687195845464576
best_error: 10.687195691519745
best_error: 9.776297877326297
best_error: 9.776297851283982
best_error: 9.715115877834279
best_error: 9.715115852059434
best_error: 9.602463562849753
best_error: 9.602463552280398
best_error: 9.602463532763071
best_error: 9.528995659535976
best_error: 9.528995621708871
best_error: 9.52899561222543
best_error: 9.52794680815569
best_error: 9.527946808155502
best_error: 9.527946802751325
best_error: 9.52794677607745
best_error: 9.133054883563334
best_error: 9.133054882783178
best_error: 9.133054878020141
best_error: 9.133054849601763
best_error: 9.020924440011356
best_error: 9.020924429627224
best_error: 9.020924406213533
best_error: 8.174359584702865
best_error: 8.17435955022691
best_error: 7.79248238372847
best_error: 7.792482383728429
best_error: 7.79248237950819
best_error: 7.770107296556773
best_error: 7.770107296556736
best_error: 7.770107292251687
best_error: 7.684818972971391
best_error: 7.684818972971367
best_error: 7.6848189683996
best_error: 7.607783076111335
best_error: 7.607783054401544
best_error: 7.534725867751915
best_error: 7.534725856996525
best_error: 7.534725827601249
best_error: 7.406756164395693
best_error: 7.406756115192299
best_error: 7.406756113353189
best_error: 7.328369781306707
best_error: 7.328369767540535
best_error: 7.287280505956577
best_error: 7.28728049977626
best_error: 7.287280487241793
best_error: 7.263927160844163
best_error: 7.263926955015856
best_error: 7.251087438076274
best_error: 7.251087425355351
best_error: 7.227992554736724
best_error: 7.227992547862492
best_error: 7.227992536366649
best_error: 7.127663332513449
best_error: 7.127663269763538
best_error: 7.068735408822681
best_error: 7.068735287570949
best_error: 7.008978180285375
best_error: 7.008978026473486
best_error: 6.922775826257351
best_error: 6.922775544492272
best_error: 6.890728969504215
best_error: 6.8907289656638735
best_error: 6.890728965522469
best_error: 6.890728956258647
best_error: 6.886439572542623
best_error: 6.8864391256221955
best_error: 6.867198743155071
best_error: 6.867198742041121
best_error: 6.86719871101378
best_error: 6.862102818885868
best_error: 6.862102433640048
best_error: 6.829349094309973
best_error: 6.82934885499523
best_error: 6.821240018487107
best_error: 6.821240005024982
best_error: 6.820738295699037
best_error: 6.82073806847481
best_error: 6.82063078398838
best_error: 6.820630770540709
best_error: 6.816782040575415
best_error: 6.816781779781012
best_error: 6.8140521889139265
best_error: 6.814051927499071
best_error: 6.810050311095236
best_error: 6.810050289093137
best_error: 6.797679143174137
best_error: 6.7976789349785225
best_error: 6.751015905401944
best_error: 6.751015640061008
best_error: 6.722723136614384
best_error: 6.722722479964944
best_error: 6.703401095132953
best_error: 6.703400890553333
best_error: 6.695394747307692
best_error: 6.695394549570816
best_error: 6.691310754219723
best_error: 6.691310556525185
best_error: 6.688803094330556
best_error: 6.688802895957518
best_error: 6.687582013109128
best_error: 6.687581814407459
best_error: 6.686730577110363
best_error: 6.686730378180212
best_error: 6.686361446108
best_error: 6.68636124707897
best_error: 6.686010993329273
best_error: 6.686010962985311
best_error: 6.685982478402097
best_error: 6.68598227960778
best_error: 6.677551058213464
best_error: 6.677550863010563
best_error: 6.673115168574725
best_error: 6.673114974420569
best_error: 6.649936116241593
best_error: 6.649935930021464
best_error: 6.4969579568651
best_error: 6.496957715559642
best_error: 6.49336045799828
best_error: 6.493360340608671
best_error: 6.403151085816984
best_error: 6.403151053466864
best_error: 6.238623692985179
best_error: 6.238623648569152
best_error: 6.200381481423126
best_error: 6.200381450983679
best_error: 6.13371515492353
best_error: 6.133715046401015
best_error: 6.113283093443904
best_error: 6.113282983280535
best_error: 6.059978480708841
best_error: 6.059978436879697
best_error: 6.033472795082603
best_error: 6.033472771075131
best_error: 6.024646619189187
best_error: 6.0246465216597604
best_error: 6.022092961343628
best_error: 6.022092954074679
best_error: 6.0190112076164315
best_error: 6.019011182516855
best_error: 6.019011163754077
best_error: 6.01204907530224
best_error: 6.012049050777753
best_error: 6.012049032119059
best_error: 6.011782453727068
best_error: 6.011782014416339
best_error: 5.970910145519096
best_error: 5.970909995221588
best_error: 5.92149770082499
best_error: 5.921497595801682
best_error: 5.886196359849379
best_error: 5.886196002704088
