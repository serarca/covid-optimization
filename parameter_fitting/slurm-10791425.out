ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.274296895938685
best_error: 10.274296891079482
best_error: 9.94710998277603
best_error: 9.947109960206406
best_error: 6.44653022994671
best_error: 6.446529855800856
best_error: 4.911282861338504
best_error: 4.911282357801815
best_error: 3.7263552841407312
best_error: 3.726354946966591
best_error: 3.5984506353089385
best_error: 3.598450593217481
best_error: 3.5692977919390265
best_error: 3.5692977910172297
best_error: 3.5692977722442465
best_error: 3.566120171210877
best_error: 3.5661201710724852
best_error: 3.5661201522632773
best_error: 3.565336068005491
best_error: 3.5653360677959127
best_error: 3.5653360565903625
best_error: 3.560098047416639
best_error: 3.560098047205409
best_error: 3.5600980360628043
best_error: 3.539099681663795
best_error: 3.539099681445971
best_error: 3.5390996705522646
best_error: 3.4654166836305635
best_error: 3.465416617775985
best_error: 3.2533174335318455
best_error: 3.2533173270601075
best_error: 3.1510900590978057
best_error: 3.1510900588687196
best_error: 3.1510900522643364
best_error: 3.1356179128992108
best_error: 3.1356177567670667
best_error: 3.104506591028332
best_error: 3.1045064423451
best_error: 2.999140653475837
best_error: 2.9991405264825626
best_error: 2.8016899554980457
best_error: 2.8016899483323696
best_error: 2.8016898605151974
best_error: 2.6586338175528375
best_error: 2.6586337819533794
best_error: 2.658633728647212
best_error: 2.396238574928843
best_error: 2.3962385337602354
best_error: 2.396238478425949
best_error: 2.2831134373453374
best_error: 2.283113412911614
best_error: 2.255124886763986
best_error: 2.2551248599210063
best_error: 2.239482251860628
best_error: 2.2394822237093583
best_error: 2.2119118101818542
best_error: 2.2119117902260426
best_error: 2.1931727414710274
best_error: 2.1931727412293553
best_error: 2.193172703391745
best_error: 2.192235429978269
best_error: 2.19223542976587
best_error: 2.1922353917258484
best_error: 2.191679153073765
best_error: 2.1916791529759463
best_error: 2.1916791152241557
best_error: 2.1916736909932943
best_error: 2.1916736886195656
best_error: 2.1916592795081513
best_error: 2.1916592794525185
best_error: 2.191659241645433
best_error: 2.191615886302909
best_error: 2.191615884859903
best_error: 2.1916158847624208
best_error: 2.1916153901419846
best_error: 2.1916153507091503
best_error: 2.191614599151281
best_error: 2.191614559854975
best_error: 2.1916045859942086
best_error: 2.191604584454325
best_error: 2.191604584447474
best_error: 2.1915294356881363
best_error: 2.1915294339975437
best_error: 2.191243923149487
best_error: 2.1912439207834797
best_error: 2.190405877468731
best_error: 2.1904058748688344
best_error: 2.1904058417424466
best_error: 2.187605218919561
best_error: 2.1876052136647646
best_error: 2.1876051869116604
best_error: 2.186991556951228
best_error: 2.1869915520959777
best_error: 2.186991524243942
best_error: 2.1852519766564287
best_error: 2.1852519751624238
best_error: 2.1852519395867125
best_error: 2.184742633424366
best_error: 2.1847425932398665
best_error: 2.18470621126159
best_error: 2.184706171534487
best_error: 2.1845639452842125
best_error: 2.184563906625269
best_error: 2.184295962352604
best_error: 2.1842959620465026
best_error: 2.184295924015127
best_error: 2.184010117445804
best_error: 2.18401011691952
best_error: 2.1840100793710997
best_error: 2.1839884914060557
best_error: 2.1839884908780265
best_error: 2.183988453333437
best_error: 2.18398278291242
best_error: 2.183982780643069
best_error: 2.183982063040328
best_error: 2.18398206251178
best_error: 2.183982024968322
best_error: 2.183981950637076
best_error: 2.183981950108515
best_error: 2.183981912565083
best_error: 2.1838156734607446
best_error: 2.1838156730067837
best_error: 2.18381563523761
best_error: 2.1837570527239487
best_error: 2.1837570525279566
best_error: 2.183757014118535
best_error: 2.1837547897610436
best_error: 2.1837547896049725
best_error: 2.183754751026302
best_error: 2.183753809118131
best_error: 2.1837537702783587
best_error: 2.1837523454298493
best_error: 2.18375234531863
best_error: 2.183752306671294
best_error: 2.18375223959414
best_error: 2.18375220081749
best_error: 2.183752049756167
best_error: 2.1837520109786968
best_error: 2.1837493038456604
best_error: 2.1837492650050914
best_error: 2.183731091445021
best_error: 2.1837310524324502
best_error: 2.183712586950069
best_error: 2.183712547099078
best_error: 2.183457981790597
best_error: 2.183457941869961
best_error: 2.1834290477886293
best_error: 2.183429007935275
best_error: 2.1834212107883397
best_error: 2.1834212102369195
best_error: 2.183418979916616
best_error: 2.1834189400628543
best_error: 2.1834028609819303
best_error: 2.1834028215635946
best_error: 2.1834026412610656
best_error: 2.1834026401668796
best_error: 2.1834023449194473
best_error: 2.1834023055084515
best_error: 2.183402213796515
best_error: 2.1834022127003134
best_error: 2.183402210595156
best_error: 2.183402210376666
best_error: 2.1834022095201986
