ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.585333308771874
best_error: 12.585333273325233
best_error: 12.585333258727598
best_error: 12.433965445227415
best_error: 12.433965399833056
best_error: 12.433965384546767
best_error: 10.915464243672574
best_error: 10.915464077894121
best_error: 10.915464074686534
best_error: 8.946586441738468
best_error: 8.946586155786896
best_error: 8.33299512448142
best_error: 8.332994873998542
best_error: 8.31530959480267
best_error: 8.315309374589951
best_error: 7.673009844382797
best_error: 7.673009636611407
best_error: 7.090733275266595
best_error: 7.090732961070702
best_error: 6.919739705188324
best_error: 6.919739484984351
best_error: 5.9153791534320925
best_error: 5.915378944364944
best_error: 5.815572259337783
best_error: 5.815572048612475
best_error: 5.762033377859016
best_error: 5.76203316592723
best_error: 5.730829193522745
best_error: 5.730828978148805
best_error: 5.726121070754527
best_error: 5.726120854879785
best_error: 5.724124601258762
best_error: 5.724124318396834
best_error: 4.7494086703047245
best_error: 4.749408111856336
best_error: 4.663251373593836
best_error: 4.663250949469015
best_error: 4.543965687845796
best_error: 4.543965456126616
best_error: 4.502454294781067
best_error: 4.50245406359823
best_error: 4.50137735547407
best_error: 4.501376912869137
best_error: 4.499915684254487
best_error: 4.499915453115808
best_error: 4.42452678178419
best_error: 4.424526571541518
best_error: 4.422336427226977
best_error: 4.422336278014705
best_error: 4.411931796664975
best_error: 4.411931597479529
best_error: 4.4085884399860955
best_error: 4.408587848685199
best_error: 4.407058136726574
best_error: 4.40705794984332
best_error: 4.404669367255009
best_error: 4.404668809480513
best_error: 4.402068084796423
best_error: 4.402067902464203
best_error: 4.393983026740326
best_error: 4.393982840031271
best_error: 4.361515023889217
best_error: 4.36151482884299
best_error: 4.351308206182647
best_error: 4.351308000285577
best_error: 4.338016798780538
best_error: 4.338016582474457
best_error: 4.320113815481692
best_error: 4.320113594657335
best_error: 4.316431083076445
best_error: 4.316430859715617
best_error: 4.314348400324203
best_error: 4.31434817770416
best_error: 4.312649370590604
best_error: 4.3126491466037935
best_error: 4.309493324687679
best_error: 4.309492870046734
best_error: 4.301018135315534
best_error: 4.301017642270093
best_error: 4.175303212215142
best_error: 4.1753030002064175
best_error: 4.122269280876544
best_error: 4.1222688564444905
best_error: 3.8982489787615293
best_error: 3.898248544013254
best_error: 3.8796553440334263
best_error: 3.8796551750363975
best_error: 3.812445209626352
best_error: 3.812444743224636
best_error: 3.7523344023408187
best_error: 3.752333934140095
best_error: 3.5309224812727034
best_error: 3.5309223915296464
best_error: 3.5309223186373924
best_error: 3.494788157464974
best_error: 3.494787672237214
best_error: 3.251293195893701
best_error: 3.251293172062903
best_error: 3.2512930347511695
best_error: 3.149866094639664
best_error: 3.149866090731792
best_error: 3.1498659363661936
best_error: 3.128539955434051
best_error: 3.128539557304421
best_error: 3.1187010408995564
best_error: 3.1187006224564637
best_error: 3.0431360434563226
best_error: 3.043135622416952
best_error: 3.0423988688977737
best_error: 3.0423984477926753
best_error: 3.042295867932631
best_error: 3.0422958679315846
best_error: 3.042295708617681
best_error: 3.042229885550996
best_error: 3.042229464430819
best_error: 3.0420602949272713
best_error: 3.0420598737919704
best_error: 3.042036216451672
best_error: 3.0420357953142254
best_error: 3.042020173222046
best_error: 3.042020114739275
best_error: 3.0420200041962895
best_error: 3.0420199457135118
best_error: 3.042019863196473
best_error: 3.0335133161684937
best_error: 3.0335133161674563
best_error: 3.0335131562716846
best_error: 3.0241169403004475
best_error: 3.024116489217211
best_error: 3.024031038746438
best_error: 3.0240305856035348
best_error: 3.024016390316013
best_error: 3.0240159370381523
best_error: 3.0240063236088504
best_error: 3.024005870232738
best_error: 3.02399997080866
best_error: 3.02399951737305
best_error: 3.023999307861653
best_error: 3.023998854202926
best_error: 3.023997958673183
best_error: 3.023997505221616
best_error: 3.023997188210683
best_error: 3.023996734564383
best_error: 3.0239965774271074
best_error: 3.0239965450444046
best_error: 3.023969511587051
best_error: 3.023969058125127
best_error: 3.0239245910620527
best_error: 3.0239241375964454
best_error: 3.0226439680923636
best_error: 3.0226435144754156
best_error: 3.0221384645555456
best_error: 3.022138010878841
best_error: 3.02180815534847
best_error: 3.021807701632733
best_error: 3.0217949837910605
best_error: 3.021794530073767
best_error: 3.021791217143073
best_error: 3.021790763425336
best_error: 3.0217887964945493
best_error: 3.021788786410223
best_error: 3.021788763885035
best_error: 3.0217886964517326
best_error: 3.0217886868544714
best_error: 3.0217886638422518
best_error: 3.021788638623585
best_error: 3.021788629026312
best_error: 3.0217886060140717
best_error: 3.0217885942179343
best_error: 3.0217885846206363
best_error: 3.0217885837979477
best_error: 3.0217885837969294
best_error: 3.021788578266063
