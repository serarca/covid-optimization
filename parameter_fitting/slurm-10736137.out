ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.456475551631296
best_error: 11.456475547906999
best_error: 9.18219281298079
best_error: 9.182192526185112
best_error: 8.924097695475613
best_error: 8.92409737706394
best_error: 8.116094863374338
best_error: 6.958119381022064
best_error: 6.958119381022054
best_error: 6.95811937321461
best_error: 6.955200953722074
best_error: 6.9552009537220645
best_error: 6.955200945713801
best_error: 6.952710191258527
best_error: 6.952710191258516
best_error: 6.952710183167828
best_error: 6.949810775087447
best_error: 6.949810706990258
best_error: 6.9487830494796565
best_error: 6.94878298302199
best_error: 6.925382671938751
best_error: 6.925382671938739
best_error: 6.925382661909961
best_error: 6.830081793434303
best_error: 6.830081793434301
best_error: 6.821169975168606
best_error: 6.821169975168601
best_error: 6.815898200654236
best_error: 6.792443937265132
best_error: 6.780445180037615
best_error: 6.54503591194244
best_error: 6.545035911942439
best_error: 6.183656624165574
best_error: 6.183656336270059
best_error: 6.121207686335813
best_error: 6.121207686335811
best_error: 5.332264607888023
best_error: 5.332264607888015
best_error: 5.332264600802597
best_error: 5.331660741617798
best_error: 5.331660741617787
best_error: 5.331660734481483
best_error: 5.329226866309215
best_error: 5.32922686630921
best_error: 5.329226865446513
best_error: 5.329226859049365
best_error: 5.323978161514383
best_error: 5.323978161514374
best_error: 5.323978119982151
best_error: 5.321788357235452
best_error: 5.3217883572354445
best_error: 5.3217883170506814
best_error: 5.315124169059002
best_error: 5.31512416234616
best_error: 5.3151241605263975
best_error: 5.2889423179886705
best_error: 5.288942292106545
best_error: 5.258131855613984
best_error: 5.258131855613969
best_error: 5.250131766607909
best_error: 5.250131766607894
best_error: 5.247177952704625
best_error: 5.247177952704611
best_error: 5.245346609047859
best_error: 5.245346609047843
best_error: 5.2296315424448245
best_error: 5.229631542444809
best_error: 5.229631542444735
best_error: 5.229488543741398
best_error: 5.2294885437413825
best_error: 5.229488543741306
best_error: 5.229229553639808
best_error: 5.2292295536397875
best_error: 5.229229553639712
best_error: 5.229211479396765
best_error: 5.229211479396751
best_error: 5.22921147939667
best_error: 5.2292043675641695
best_error: 5.229204367564149
best_error: 5.229204367564068
best_error: 5.2291964806363636
best_error: 5.229196480636347
best_error: 5.229196480636267
best_error: 5.229175800850226
best_error: 5.229175800850205
best_error: 5.229175800850127
best_error: 5.229145647021305
best_error: 5.2291456470212845
best_error: 5.229145647021198
best_error: 5.229137074170995
best_error: 5.229137074170977
best_error: 5.229137074170898
best_error: 5.229128645697443
best_error: 5.2291286456974255
best_error: 5.22912864569734
best_error: 5.229124394257896
best_error: 5.2291243942578784
best_error: 5.229124394257792
best_error: 5.2291202264062075
best_error: 5.229120226406191
best_error: 5.2291202264061045
best_error: 5.229118062196694
best_error: 5.229118062196676
best_error: 5.2291180621965925
best_error: 5.2291159453241285
best_error: 5.22911594532411
best_error: 5.229115945324028
best_error: 5.229114794272199
best_error: 5.229114794272183
best_error: 5.229114794272095
best_error: 5.22911367179368
best_error: 5.2291136717936615
best_error: 5.229113671793577
best_error: 5.229112994768478
best_error: 5.2291129947684585
best_error: 5.2291129947683705
best_error: 5.229112339079412
best_error: 5.2291123390793945
best_error: 5.229112339079308
best_error: 5.229111793618449
best_error: 5.22911179361843
best_error: 5.229111793618349
best_error: 5.229111281018178
best_error: 5.229111281018158
best_error: 5.22911128101807
best_error: 5.2291085406047975
best_error: 5.229108540604777
best_error: 5.229108540604692
best_error: 5.229106728804339
best_error: 5.22910672880432
best_error: 5.229106728804238
best_error: 5.229104947114376
best_error: 5.229104947114357
best_error: 5.229104947114273
best_error: 5.229104060396041
best_error: 5.229104060396025
best_error: 5.229104060395939
best_error: 5.229103188921444
best_error: 5.229103188921425
best_error: 5.229103188921345
best_error: 5.22910275732688
best_error: 5.229102757326863
best_error: 5.22910275732678
best_error: 5.229102739362013
best_error: 5.229102739361994
best_error: 5.229102739361904
best_error: 5.229102721894067
best_error: 5.2291027218940505
best_error: 5.229102721893966
best_error: 5.229102707272413
best_error: 5.2291027072723955
best_error: 5.229102707272309
best_error: 5.229102693427112
best_error: 5.229102693427096
best_error: 5.229102693427009
best_error: 5.229102604054169
best_error: 5.229102604054149
best_error: 5.229102604054061
best_error: 5.229102540287805
best_error: 5.229102540287785
best_error: 5.229102540287699
best_error: 5.229102523722645
best_error: 5.229102523722624
best_error: 5.229102523722542
best_error: 5.229102399999813
best_error: 5.229102399999793
best_error: 5.229102399999711
best_error: 5.229102398902365
best_error: 5.2291023989023495
best_error: 5.229102398902261
best_error: 5.229102397830434
best_error: 5.229102397830417
best_error: 5.229102397830333
best_error: 5.229102397137274
best_error: 5.2291023971372566
best_error: 5.229102397137171
best_error: 5.229102384807701
best_error: 5.229102384807684
best_error: 5.229102384807595
best_error: 5.229102384677573
best_error: 5.229102384677558
best_error: 5.2291023846774705
best_error: 5.229102384551286
best_error: 5.229102384551269
best_error: 5.229102384551183
best_error: 5.229102384430619
best_error: 5.2291023844306
best_error: 5.229102384430516
best_error: 5.229102384318129
best_error: 5.229102384318112
best_error: 5.229102384318026
best_error: 5.229102383597673
best_error: 5.229102382213237
best_error: 5.229102382046879
best_error: 5.229102382046862
best_error: 5.229102382046773
best_error: 5.229102381961543
best_error: 5.229102381961524
best_error: 5.229102381961441
best_error: 5.229102381961198
best_error: 5.229102381961182
best_error: 5.229102381961097
best_error: 5.229102381960855
best_error: 5.229102381960837
best_error: 5.229102381960752
