ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.47091359311048
best_error: 100.47091350689468
best_error: 100.4709134279517
best_error: 18.1708313874839
best_error: 18.170831387479247
best_error: 18.17083137752637
best_error: 18.144581428681228
best_error: 18.144581428676286
best_error: 18.14458141781243
best_error: 18.009146219458643
best_error: 18.009146219447903
best_error: 18.00914620275367
best_error: 13.449418543700272
best_error: 13.449418537557936
best_error: 13.44941842212322
best_error: 13.292710019280694
best_error: 13.292710014326964
best_error: 13.292710009976135
best_error: 13.292709787732425
best_error: 13.279192431436302
best_error: 13.279192418278129
best_error: 13.279192415125316
best_error: 13.024629469831364
best_error: 13.024629466054327
best_error: 13.02462945667409
best_error: 13.02462945241044
best_error: 12.790653532339519
best_error: 12.790653514536428
best_error: 12.790653504843382
best_error: 12.680880485857356
best_error: 12.68088046854555
best_error: 12.680880466139229
best_error: 12.464971566422793
best_error: 12.464971564109106
best_error: 12.464971557444978
best_error: 12.464971543455517
best_error: 12.337060122054954
best_error: 12.3370601037986
best_error: 12.337060095697582
best_error: 11.535600927392302
best_error: 11.535600839135395
best_error: 11.136873435010871
best_error: 11.136873414138599
best_error: 11.033455370952545
best_error: 11.033455358714516
best_error: 11.033455350092684
best_error: 10.893691979145906
best_error: 10.893691973181943
best_error: 10.893691958165984
best_error: 10.854111849419265
best_error: 10.854111821914266
best_error: 10.468350711685535
best_error: 10.468350696745127
best_error: 10.468350693962309
best_error: 10.334943583904018
best_error: 10.33494341085509
best_error: 10.2850178833665
best_error: 10.285017877422135
best_error: 10.285017868285367
best_error: 10.27620609319846
best_error: 10.276206088028633
best_error: 10.276206087963487
best_error: 10.276206078483291
best_error: 10.271902274416302
best_error: 10.27190227385508
best_error: 10.271902236353089
best_error: 10.262967385710631
best_error: 10.262967384202193
best_error: 10.262967363383101
best_error: 10.236847397846615
best_error: 10.236847392907336
best_error: 10.23684738308813
best_error: 10.230701388678423
best_error: 10.230701199668404
best_error: 10.158614236350369
best_error: 10.158614056099523
best_error: 9.966974406540077
best_error: 9.966974393135274
best_error: 9.966974391949263
best_error: 9.837057191541117
best_error: 9.837057159838198
best_error: 9.814658534610588
best_error: 9.814658518540076
best_error: 9.72961230011575
best_error: 9.729612285076174
best_error: 9.625475396210245
best_error: 9.625475365108429
best_error: 9.551365992613984
best_error: 9.551365897266784
best_error: 9.547912820296744
best_error: 9.547912724877865
best_error: 9.546461623708446
best_error: 9.546461598581224
best_error: 9.546454364199498
best_error: 9.546454268939375
best_error: 9.542950457796001
best_error: 9.542950355936554
best_error: 9.539329651800461
best_error: 9.539329631487288
best_error: 9.538831221940876
best_error: 9.538831201031195
best_error: 9.537571560903254
best_error: 9.537571413020611
best_error: 9.537360575398612
best_error: 9.537360431519883
best_error: 9.536182846337093
best_error: 9.536182826444858
best_error: 9.531578859455532
best_error: 9.531578840560694
best_error: 9.527817957307049
best_error: 9.527817939517712
best_error: 9.525086084122862
best_error: 9.525086064939208
best_error: 9.522577596799769
best_error: 9.522577577283943
best_error: 9.51888573494587
best_error: 9.518885721441722
best_error: 9.516754461221561
best_error: 9.516754446296266
best_error: 9.505234226901017
best_error: 9.505234211838243
best_error: 9.473609161743294
best_error: 9.473609143955533
best_error: 9.470348392632424
best_error: 9.470348247781722
best_error: 9.466123575325357
best_error: 9.46612355874846
best_error: 9.463191282701136
best_error: 9.463191147605388
best_error: 9.451181481947028
best_error: 9.451181466132129
best_error: 9.44916528906969
best_error: 9.449165273283025
best_error: 9.44900042152714
best_error: 9.449000282947381
best_error: 9.435404863688856
best_error: 9.435404848719475
best_error: 9.429343586668809
best_error: 9.429343570943885
best_error: 9.428592828417704
best_error: 9.428592812241668
best_error: 9.425962681703144
best_error: 9.42596266573113
best_error: 9.422605529099567
best_error: 9.42260551612361
best_error: 9.421089621424072
best_error: 9.421089608359187
best_error: 9.4182219973104
best_error: 9.418221982786378
best_error: 9.414023522356464
best_error: 9.414023508522025
