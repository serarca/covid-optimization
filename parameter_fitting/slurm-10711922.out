ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.313170636051826
best_error: 12.313170481356606
best_error: 11.04307474661286
best_error: 11.043074422989154
best_error: 9.372377415678956
best_error: 9.372376870831907
best_error: 6.696461823379098
best_error: 6.696461221959465
best_error: 6.093843358971916
best_error: 6.093842892205425
best_error: 5.854779408838397
best_error: 5.854779033097742
best_error: 5.498695203163346
best_error: 5.498694799012256
best_error: 5.43028696704393
best_error: 5.43028655324886
best_error: 5.402350886334489
best_error: 5.402350468130411
best_error: 5.401820073086237
best_error: 5.401819654799706
best_error: 5.401819503782928
best_error: 5.40181925198087
best_error: 5.401702508611824
best_error: 5.401702090307039
best_error: 5.401689787459767
best_error: 5.40168953566377
best_error: 5.401684001668734
best_error: 5.401683583361061
best_error: 5.401673990833614
best_error: 5.401673772168481
best_error: 5.307173981175588
best_error: 5.307173499929295
best_error: 5.28962983421629
best_error: 5.289629327317716
best_error: 5.257857016486695
best_error: 5.257856497824559
best_error: 5.2031843874294434
best_error: 5.203184166710686
best_error: 5.196074221583461
best_error: 5.196073683800512
best_error: 5.165956203663329
best_error: 5.165955984554106
best_error: 5.159733390756384
best_error: 5.159732838028576
best_error: 5.15565495262536
best_error: 5.155654361993459
best_error: 5.155209809555649
best_error: 5.1552096134754954
best_error: 5.154159695092783
best_error: 5.154159109933077
best_error: 5.154068569012135
best_error: 5.154068369096611
best_error: 5.154052540151264
best_error: 5.154052336189785
best_error: 5.153966264917107
best_error: 5.153965687231169
best_error: 5.153582692981116
best_error: 5.15358211063915
best_error: 5.152173731995559
best_error: 5.152173145303259
best_error: 5.135751166962621
best_error: 5.135750969840501
best_error: 5.134190858894396
best_error: 5.134190660805704
best_error: 5.128827505699015
best_error: 5.128827297158509
best_error: 5.108600267305954
best_error: 5.108600046441577
best_error: 5.099875402852611
best_error: 5.099875181696454
best_error: 5.096415903598437
best_error: 5.09641566999473
best_error: 5.094351766140845
best_error: 5.094351531939136
best_error: 5.091201544478612
best_error: 5.091201325128679
best_error: 5.0309568633669235
best_error: 5.030956670265146
best_error: 4.995535208208123
best_error: 4.995534650147036
best_error: 4.980275023132693
best_error: 4.980274782242743
best_error: 4.910674862944326
best_error: 4.910674629654661
best_error: 4.876699305720297
best_error: 4.876699148047306
best_error: 4.87666059933172
best_error: 4.8766598993238315
best_error: 4.839489830086125
best_error: 4.839489212037876
best_error: 4.822186583273568
best_error: 4.82218636990225
best_error: 4.818548409136291
best_error: 4.818547784789984
best_error: 4.804547349902112
best_error: 4.804547127717589
best_error: 4.791472947163108
best_error: 4.791472338771911
best_error: 4.775067577661034
best_error: 4.775067349308088
best_error: 4.762831018205876
best_error: 4.762830425530563
best_error: 4.747955513263787
best_error: 4.747955282776786
best_error: 4.731813152585833
best_error: 4.731812579220587
best_error: 4.7260627486220255
best_error: 4.726062512091918
best_error: 4.709919391509595
best_error: 4.709919157615447
best_error: 4.690619781999564
best_error: 4.690619229667866
best_error: 4.678772516098459
best_error: 4.6787722829152125
best_error: 4.647081075187263
best_error: 4.647080520362966
best_error: 4.620728539639362
best_error: 4.620728314779976
best_error: 4.607001618039726
best_error: 4.607001036354337
best_error: 4.588646186674911
best_error: 4.58864598750208
best_error: 4.583234864503726
best_error: 4.583234682885872
best_error: 4.567896841803391
best_error: 4.56789662588327
best_error: 4.564775274534238
best_error: 4.564774694970641
best_error: 4.513215107105875
best_error: 4.513214543087049
best_error: 4.497093795418786
best_error: 4.4970935850198925
best_error: 4.496159484222657
best_error: 4.496158926141328
best_error: 4.4959242768836045
best_error: 4.495924066687442
best_error: 4.484561285564478
best_error: 4.484561074226026
