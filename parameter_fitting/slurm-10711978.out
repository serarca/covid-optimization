ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.360490888080598
best_error: 11.360490699889304
best_error: 9.38880298373531
best_error: 9.388802607941365
best_error: 7.809523077275533
best_error: 7.809522699635676
best_error: 7.561908698253662
best_error: 7.561908456428199
best_error: 7.437051383589587
best_error: 7.437051161123179
best_error: 7.077160633185855
best_error: 7.077160421972346
best_error: 6.834570370057124
best_error: 6.83457017240897
best_error: 6.687010969263596
best_error: 6.687010779898697
best_error: 6.6019495417311305
best_error: 6.601949351178572
best_error: 6.566286358078173
best_error: 6.566286166666076
best_error: 6.542881117879286
best_error: 6.542880923382017
best_error: 6.528631917491374
best_error: 6.528631721127218
best_error: 6.507685864188998
best_error: 6.507685613705364
best_error: 6.489719749932312
best_error: 6.489718887892244
best_error: 5.308553611477569
best_error: 5.308553177362578
best_error: 5.282227814917839
best_error: 5.28222736492417
best_error: 5.132408575682964
best_error: 5.132408072674167
best_error: 5.029924350176628
best_error: 5.029923789970055
best_error: 5.011202915974341
best_error: 5.011202751465179
best_error: 5.0002999062720255
best_error: 5.0002993406305
best_error: 4.971749177663131
best_error: 4.971748606813739
best_error: 4.967509815511873
best_error: 4.967509243891653
best_error: 4.966400506028208
best_error: 4.966400342796925
best_error: 4.965399340867501
best_error: 4.965398768913735
best_error: 4.959979827340349
best_error: 4.959979260100283
best_error: 4.95559112182692
best_error: 4.955590580723649
best_error: 4.953488312078685
best_error: 4.953487775920818
best_error: 4.9293202811099714
best_error: 4.929320095132053
best_error: 4.925662135332645
best_error: 4.9256619493467
best_error: 4.9168715851077085
best_error: 4.916871399920467
best_error: 4.891780291377363
best_error: 4.891780106770317
best_error: 4.870335790086143
best_error: 4.8703356514969425
best_error: 4.845967873214622
best_error: 4.845967726819478
best_error: 4.836670035877136
best_error: 4.8366694527528935
best_error: 4.802451717313271
best_error: 4.80245120138181
best_error: 4.717303502733184
best_error: 4.717303310289907
best_error: 4.690916009399203
best_error: 4.690915816464624
best_error: 4.684978388692668
best_error: 4.6849778520062575
best_error: 4.6116866040836815
best_error: 4.611686061596583
best_error: 4.583990916962309
best_error: 4.583990726969492
best_error: 4.5794170516036345
best_error: 4.579416488911358
best_error: 4.497996809063887
best_error: 4.497996626549702
best_error: 4.49165597773153
best_error: 4.491655411040094
best_error: 4.458405048841469
best_error: 4.458404861773101
best_error: 4.415799024700551
best_error: 4.415798493729446
best_error: 4.389654122534413
best_error: 4.3896539429008286
best_error: 4.368035001709388
best_error: 4.368034482286843
best_error: 4.324223750879435
best_error: 4.324223578868897
best_error: 4.31802110169148
best_error: 4.318020634394839
best_error: 4.292275125515554
best_error: 4.292274624369215
best_error: 4.259848591381906
best_error: 4.259848435491277
best_error: 4.232827237170935
best_error: 4.2328270812747775
best_error: 4.217710189527689
best_error: 4.217710031533773
best_error: 4.201067195323055
best_error: 4.201067034821774
best_error: 4.195947088556687
best_error: 4.195946545483354
best_error: 4.189134063258402
best_error: 4.189133906843743
best_error: 4.171402834708253
best_error: 4.17140268289106
best_error: 4.169825393127017
best_error: 4.169825242404463
best_error: 4.158321499215228
best_error: 4.158320989269412
best_error: 4.155865299823201
best_error: 4.155864789617379
best_error: 4.1556608005687234
best_error: 4.1556602903412685
best_error: 4.155615381589391
best_error: 4.155614871357148
best_error: 4.155596826117841
best_error: 4.155596315883637
best_error: 4.155584646729351
best_error: 4.1555841364938555
best_error: 4.155583965011779
best_error: 4.155583815325349
best_error: 4.154441146439891
best_error: 4.1544406345662
best_error: 4.154360499959014
best_error: 4.154359988074814
best_error: 4.154309275787466
best_error: 4.154308763896601
best_error: 4.154303246792896
best_error: 4.1543030950492605
best_error: 4.154302838105984
best_error: 4.154302326214272
best_error: 4.154297125946033
best_error: 4.154296614053578
best_error: 4.1542952116003
best_error: 4.154295059856761
best_error: 4.1542940542762405
best_error: 4.154294017314154
best_error: 4.154293970838129
best_error: 4.1542939338760565
best_error: 4.154293922674967
best_error: 4.154293885712871
best_error: 4.154293884081707
best_error: 4.154293884075119
best_error: 4.154293883764875
best_error: 4.154293880033876
best_error: 4.154293876937986
best_error: 4.154293876931399
best_error: 4.154293876621149
