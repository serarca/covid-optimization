ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 94
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.69699651613963
best_error: 99.69699631993643
best_error: 20.01327104845493
best_error: 20.013271048451667
best_error: 20.013271048398714
best_error: 20.01327104754019
best_error: 20.013182747134493
best_error: 20.013182747131236
best_error: 20.01282872966239
best_error: 20.012828729659127
best_error: 20.011399529511667
best_error: 20.011399529508378
best_error: 20.005463624557606
best_error: 20.005463624554217
best_error: 19.977526010346345
best_error: 19.977526010346338
best_error: 19.977526010342473
best_error: 19.684542657109187
best_error: 19.684542657106572
best_error: 19.684542657100145
best_error: 19.519375828096326
best_error: 19.519375828091025
best_error: 19.519375828084446
best_error: 19.519375324257275
best_error: 19.519375324251975
best_error: 19.51937532424539
best_error: 19.519373308588094
best_error: 19.519373308582782
best_error: 19.519373308576206
best_error: 19.51936524089962
best_error: 19.519365240894295
best_error: 19.519365240887744
best_error: 19.51933288969761
best_error: 19.519332889692244
best_error: 19.519332889685725
best_error: 19.519202180805895
best_error: 19.51920218080033
best_error: 19.51920218079401
best_error: 19.518657333697032
best_error: 19.518657333690694
best_error: 19.518657333685137
best_error: 19.51603133450204
best_error: 19.516031334491945
best_error: 19.516031334490116
best_error: 19.49165108052832
best_error: 19.491651080496847
best_error: 19.49165098279713
best_error: 19.49165098276564
best_error: 19.491650591637484
best_error: 19.491650591605975
best_error: 19.491649023235194
best_error: 19.49164902320354
best_error: 19.491642689033284
best_error: 19.491642689001036
best_error: 19.491616358421357
best_error: 19.491616358386715
best_error: 19.4914934686747
best_error: 19.491493468629024
best_error: 19.490578197791574
best_error: 19.490578197667574
best_error: 19.41052149479644
best_error: 19.41052149150606
best_error: 19.410521484771763
best_error: 19.213779534614368
best_error: 19.21377949700318
best_error: 19.213779490808854
best_error: 18.3485799287797
best_error: 18.34857991969935
best_error: 18.295313517428234
best_error: 18.29531351728637
best_error: 18.295313512992383
best_error: 18.295305209182317
best_error: 18.29530520886864
best_error: 18.29529875613231
best_error: 18.29529875613213
best_error: 18.295294637640602
best_error: 18.29529463764042
best_error: 18.29529259664933
best_error: 18.29529259664915
best_error: 18.29529157175776
best_error: 18.29529157175758
best_error: 18.29529105451238
best_error: 18.295291054512198
best_error: 18.295290978366552
best_error: 18.295290978204395
best_error: 18.295290973924065
best_error: 18.295290908273394
best_error: 18.295290908273213
best_error: 18.29529065520937
best_error: 18.295290655209193
best_error: 18.295290010586776
best_error: 18.295290010424587
best_error: 18.295290006144054
best_error: 18.295287517700135
best_error: 18.2952875175379
best_error: 18.295287513256895
best_error: 18.295277546599113
best_error: 18.295277546436672
best_error: 18.295277542153737
best_error: 18.29523766932295
best_error: 18.295237669159697
best_error: 18.295237664869084
best_error: 18.295078274252067
best_error: 18.29507827408549
best_error: 18.295078269764197
best_error: 18.294442517656236
best_error: 18.294442517476494
best_error: 18.2944425130329
best_error: 18.292517247531606
best_error: 18.292517246199008
best_error: 18.29251724510238
best_error: 18.292517229066004
best_error: 18.290220510925877
best_error: 18.290220510098422
best_error: 18.2902204985963
best_error: 18.28094076137529
best_error: 18.28094076090335
best_error: 18.28094075339696
best_error: 18.235854137579633
best_error: 18.23585413591669
best_error: 18.19820735379027
best_error: 18.19820735177566
best_error: 18.19820734808984
best_error: 18.198207330289577
best_error: 18.19604592861948
best_error: 18.196045927203848
best_error: 18.196045911275263
best_error: 18.19518952685057
best_error: 18.195189526850257
best_error: 18.19514438235231
best_error: 18.195144382352307
best_error: 18.195144382352
best_error: 18.195032958122574
best_error: 18.19503295812257
best_error: 18.195032958122273
best_error: 18.195017987432948
best_error: 18.195017987432646
best_error: 18.195006430891958
best_error: 18.195006430891652
best_error: 18.195003788956768
best_error: 18.19500378895647
best_error: 18.195003002631225
best_error: 18.195003002630923
best_error: 18.19500235176139
best_error: 18.195002351761087
best_error: 18.19500144513116
best_error: 18.195001445130863
best_error: 18.19500089567406
best_error: 18.195000895673754
best_error: 18.195000707916048
best_error: 18.195000707652305
best_error: 18.195000702356957
best_error: 18.19500066989129
best_error: 18.195000669890987
best_error: 18.194999423160183
best_error: 18.194999423159885
best_error: 18.194999156393564
best_error: 18.194999156393266
best_error: 18.194999099739412
best_error: 18.194999099739114
best_error: 18.194999065448094
best_error: 18.194999065447792
best_error: 18.194999055179874
best_error: 18.194999054916096
best_error: 18.194999049620087
best_error: 18.19499897354079
best_error: 18.194998973540493
best_error: 18.19499895703966
best_error: 18.19499895703936
best_error: 18.19499895414312
best_error: 18.194998954142818
best_error: 18.19499895222591
best_error: 18.194998952225607
best_error: 18.19499894769601
best_error: 18.19499894689599
best_error: 18.194998946895982
best_error: 18.194998946895684
best_error: 18.194998944794644
best_error: 18.194998944794342
best_error: 18.194998943352505
