ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.33302940602655
best_error: 97.3330293438177
best_error: 97.33302928182873
best_error: 97.33302925885901
best_error: 97.33302923659787
best_error: 18.5980925508727
best_error: 18.59809235432001
best_error: 18.598090985651318
best_error: 16.6849949307117
best_error: 16.684994930406898
best_error: 16.684994909964956
best_error: 16.629662356076867
best_error: 16.629662355740948
best_error: 16.629662333085783
best_error: 16.35732401306204
best_error: 16.357324012651123
best_error: 16.357323976234262
best_error: 10.057522894836186
best_error: 10.057522874870433
best_error: 10.05752287401923
best_error: 9.990398113512898
best_error: 9.990397972878437
best_error: 9.955731088790264
best_error: 9.95573106936699
best_error: 9.95573106851537
best_error: 9.810719758778136
best_error: 9.810719738692686
best_error: 9.597095981914295
best_error: 9.597095962241937
best_error: 9.597095961541504
best_error: 9.33183925315996
best_error: 9.331839232431458
best_error: 9.331839231600492
best_error: 9.290302378670978
best_error: 9.290302354569672
best_error: 9.23052975996388
best_error: 9.230529676477243
best_error: 8.761271182384501
best_error: 8.761271077786782
best_error: 8.077082651908343
best_error: 8.07708264271205
best_error: 8.077082636332118
best_error: 8.077082628934228
best_error: 7.927336161248742
best_error: 7.92733572661334
best_error: 7.690488093305047
best_error: 7.690488084155332
best_error: 7.690488073364699
best_error: 7.690488063011022
best_error: 7.662608563511073
best_error: 7.662608529075435
best_error: 7.63183037856756
best_error: 7.631830347292197
best_error: 7.6006018610507775
best_error: 7.600601840162795
best_error: 7.576669160637287
best_error: 7.576669143350468
best_error: 7.56837647787879
best_error: 7.568376462457163
best_error: 7.5683764614393025
best_error: 7.534746787012242
best_error: 7.534746767608025
best_error: 7.534746734778175
best_error: 7.534746715373207
best_error: 7.534746696280131
best_error: 7.534746676874601
best_error: 7.534746665100034
best_error: 7.53144561805331
best_error: 7.531445598785968
best_error: 7.531103836212634
best_error: 7.531103817041116
best_error: 7.531047400614036
best_error: 7.531047177882444
best_error: 7.53102993027711
best_error: 7.531029911106562
best_error: 7.454010654842685
best_error: 7.454010624554548
best_error: 7.448385579093546
best_error: 7.448385551436296
best_error: 7.4361967398165225
best_error: 7.436196715364378
best_error: 7.416460476336534
best_error: 7.416460457076299
best_error: 7.37233407772965
best_error: 7.372334053587547
best_error: 7.363204718797611
best_error: 7.363204693994792
best_error: 7.340264335231561
best_error: 7.340264305646267
best_error: 7.330158639961033
best_error: 7.330158606846551
best_error: 7.3246893733437215
best_error: 7.324689339181939
best_error: 7.3070963979486105
best_error: 7.30709636310447
best_error: 7.244162067705317
best_error: 7.244161916110544
best_error: 7.15948692462044
best_error: 7.159486861687751
best_error: 7.152793372149538
best_error: 7.152793203873816
best_error: 7.083061465750957
best_error: 7.083061447239334
best_error: 7.058540542971718
best_error: 7.058540522790061
best_error: 7.03207559744468
best_error: 7.032075540611126
best_error: 7.032042452558317
best_error: 7.032042393180804
best_error: 7.030510689890041
best_error: 7.03051063121068
best_error: 6.9370299802598945
best_error: 6.937029970786267
best_error: 6.89906041950805
best_error: 6.89906040988353
best_error: 6.84947972056251
best_error: 6.8494796774240445
best_error: 6.8277099773268235
best_error: 6.827709935176013
best_error: 6.81747295207781
best_error: 6.817472646783321
best_error: 6.694925592386232
best_error: 6.6949255532380665
best_error: 6.622111624927928
best_error: 6.6221116219092195
best_error: 6.622111575258918
best_error: 6.584033969327387
best_error: 6.584033960999211
best_error: 6.584033933556382
best_error: 6.328237888070956
best_error: 6.328237879487646
best_error: 6.328237819968943
best_error: 6.20507113772347
best_error: 6.205071109993449
best_error: 6.098457330422727
best_error: 6.098457310007217
best_error: 5.978724008458988
best_error: 5.978723995780525
best_error: 5.978723993855229
