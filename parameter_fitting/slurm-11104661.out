ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.62263402519169
best_error: 96.62263390900404
best_error: 96.62263387653586
best_error: 96.62263382376963
best_error: 16.73334909052372
best_error: 16.73334909051608
best_error: 16.733349076354255
best_error: 16.710889814236925
best_error: 16.710889799647962
best_error: 16.612574182738058
best_error: 16.612574165928702
best_error: 16.015252809615443
best_error: 16.015252775576744
best_error: 15.832842722864285
best_error: 15.832842682002811
best_error: 15.621254960553234
best_error: 15.62125491377377
best_error: 10.93310280333781
best_error: 10.933102790804515
best_error: 10.933102760755283
best_error: 9.410058781157506
best_error: 9.410058661305735
best_error: 9.329359358215973
best_error: 9.32935933777306
best_error: 9.329359334269533
best_error: 9.312147247331474
best_error: 9.312147226380771
best_error: 9.312147223569607
best_error: 9.246595602906064
best_error: 9.246595580215612
best_error: 9.246595580203255
best_error: 8.881741869490806
best_error: 8.881741580369315
best_error: 8.313546682983425
best_error: 8.31354660123467
best_error: 8.301218488384233
best_error: 8.301218472188797
best_error: 8.281410499254083
best_error: 8.281410421865338
best_error: 8.28138101869762
best_error: 8.281381003826585
best_error: 8.273147405786476
best_error: 8.273147391565024
best_error: 8.265025611199079
best_error: 8.26502559834941
best_error: 8.264545041984828
best_error: 8.264545036500703
best_error: 8.264545031133201
best_error: 8.264545019539044
best_error: 8.263308918978396
best_error: 8.263308906162358
best_error: 8.261734778123596
best_error: 8.261734765329704
best_error: 8.257745337521143
best_error: 8.257745221555474
best_error: 8.249934950427473
best_error: 8.249934718024562
best_error: 8.202776561044733
best_error: 8.202776376545211
best_error: 8.19278683445469
best_error: 8.192786822966326
best_error: 8.190660104998903
best_error: 8.190660094376291
best_error: 8.188821685502637
best_error: 8.188821675498355
best_error: 8.187585046570064
best_error: 8.18758503662556
best_error: 8.187172854376879
best_error: 8.187172844436766
best_error: 8.186997215479305
best_error: 8.18699720554107
best_error: 8.18694812924293
best_error: 8.186947938318333
best_error: 8.180297101036865
best_error: 8.180297090852742
best_error: 8.178450774537946
best_error: 8.178450764519594
best_error: 8.17845076421572
best_error: 8.17464463681003
best_error: 8.174644625548432
best_error: 8.152989986373548
best_error: 8.152989973943027
best_error: 8.126709426319513
best_error: 8.126709410704546
best_error: 8.123644741997051
best_error: 8.12364472615715
best_error: 8.12242072818701
best_error: 8.122420618354507
best_error: 8.11234087910633
best_error: 8.112340775690313
best_error: 8.108890501347872
best_error: 8.108890482709873
best_error: 8.10094492785024
best_error: 8.10094491175775
best_error: 8.098586161568992
best_error: 8.098586051561158
best_error: 8.096192857909648
best_error: 8.096192752122944
best_error: 8.093739036820223
best_error: 8.093739020234237
best_error: 8.08566237439535
best_error: 8.08566235878772
best_error: 8.078456426824266
best_error: 8.078456412021708
best_error: 8.060252490225002
best_error: 8.060252476024857
best_error: 8.002033872419432
best_error: 8.002033861309897
best_error: 7.9744594621868945
best_error: 7.974459440772857
best_error: 7.972327941406524
best_error: 7.972327927107189
best_error: 7.957004535683498
best_error: 7.957004515456883
best_error: 7.956178979911799
best_error: 7.9561789582112805
best_error: 7.916280341214932
best_error: 7.91628031982672
best_error: 7.785911614637946
best_error: 7.785911607255198
best_error: 7.785911602473794
best_error: 7.785911594650711
best_error: 7.700589801646492
best_error: 7.700589789179285
best_error: 7.657655446427284
best_error: 7.657655435553863
best_error: 7.628657784605498
best_error: 7.62865777560096
best_error: 7.604897281809603
best_error: 7.604896964651779
best_error: 7.565533987338169
best_error: 7.565533978150547
best_error: 7.560683302869176
best_error: 7.560683293966365
best_error: 7.558614760355775
best_error: 7.558614751618684
best_error: 7.558398941062022
best_error: 7.5583989323303
best_error: 7.558195988713898
best_error: 7.558195703174643
best_error: 7.558177480056776
best_error: 7.5581774713289285
best_error: 7.5581660992409745
best_error: 7.558165813696196
best_error: 7.55816186454069
best_error: 7.558161855813218
best_error: 7.558147847550541
best_error: 7.558147838823414
best_error: 7.55814616735536
best_error: 7.558146158628264
best_error: 7.5581454155008
best_error: 7.5581454067737255
