ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.034488135371424
best_error: 10.034488127216495
best_error: 9.259325227573594
best_error: 9.25932514008489
best_error: 5.048772953062315
best_error: 5.048772526421695
best_error: 4.516257550351695
best_error: 4.5162574576646906
best_error: 4.502541546505094
best_error: 4.502541546504845
best_error: 4.502541533164123
best_error: 4.498800337250541
best_error: 4.498800337250284
best_error: 4.498800325153175
best_error: 4.496756189173468
best_error: 4.496756189038175
best_error: 4.496756175366803
best_error: 4.4967380042058025
best_error: 4.496737965337099
best_error: 4.496736330691217
best_error: 4.496736330377659
best_error: 4.496736316872187
best_error: 4.496674484109035
best_error: 4.496674483384986
best_error: 4.496674470255894
best_error: 4.496666535982378
best_error: 4.496666535178049
best_error: 4.496666522122258
best_error: 4.496662656111429
best_error: 4.496662636247571
best_error: 4.4966624110619
best_error: 4.496662410244307
best_error: 4.496662397199579
best_error: 4.496661982586599
best_error: 4.4966619817688915
best_error: 4.496661968724277
best_error: 4.496661921565721
best_error: 4.496661920748
best_error: 4.496661907703402
best_error: 4.4966618895612145
best_error: 4.496661888743486
best_error: 4.496661875698898
best_error: 4.4966618726745216
best_error: 4.49666187185679
best_error: 4.496661858812204
best_error: 4.49666184986765
best_error: 4.496661845121907
best_error: 4.496661842605916
best_error: 4.491807956799844
best_error: 4.491807956799591
best_error: 4.4918079442336
best_error: 4.4751237010291485
best_error: 4.475123609126546
best_error: 4.157428376081679
best_error: 4.157428371065197
best_error: 4.1574283393795435
best_error: 3.9545969159896406
best_error: 3.9545969159893515
best_error: 3.954596914060356
best_error: 3.939471124565999
best_error: 3.9394711245656864
best_error: 3.901944670664822
best_error: 3.9019446706645273
best_error: 3.7123384471088325
best_error: 3.712338447108706
best_error: 3.7123384338868117
best_error: 3.7111951805552543
best_error: 3.7111951505370144
best_error: 3.7058665357101983
best_error: 3.7058665357100824
best_error: 3.7058665329303966
best_error: 3.7058665327995515
best_error: 3.70361262326712
best_error: 3.703612623267008
best_error: 3.7036126202496855
best_error: 3.6997484227134625
best_error: 3.6997483650190413
best_error: 3.6623570259499276
best_error: 3.662356995619492
best_error: 3.6342754104432173
best_error: 3.634275410443067
best_error: 3.634275408628375
best_error: 3.6276598750577307
best_error: 3.62765987505765
best_error: 3.6276598633444808
best_error: 3.627459416634492
best_error: 3.6274594166344083
best_error: 3.6274594049116367
best_error: 3.6273284009570874
best_error: 3.6273284009570044
best_error: 3.6273283892118178
best_error: 3.62728469560493
best_error: 3.627284685569242
best_error: 3.6272846818100986
best_error: 3.627262575351183
best_error: 3.627262575351101
best_error: 3.627262563590126
best_error: 3.627259143514528
best_error: 3.627259133558997
best_error: 3.6272591297216468
best_error: 3.6029692775556095
best_error: 3.602969277555063
best_error: 3.6029692065348287
best_error: 3.5456091200678306
best_error: 3.545609120067636
best_error: 3.545609119186329
best_error: 3.535324965267531
best_error: 3.5353249652674164
best_error: 3.5353249508185316
best_error: 3.5345895144401513
best_error: 3.534589514440057
best_error: 3.5345894960102644
best_error: 3.53458717342258
best_error: 3.5345871734224947
best_error: 3.534587154962559
best_error: 3.4432803988429543
best_error: 3.443280398842546
best_error: 3.4432803666451886
best_error: 3.44262562397429
best_error: 3.4426255956403566
best_error: 3.442625580069645
best_error: 3.4327802780425016
best_error: 3.432780278042173
best_error: 3.432780264994095
best_error: 3.422213307529562
best_error: 3.422213273496699
best_error: 3.4169123825003953
best_error: 3.416912382500137
best_error: 3.416912365981539
best_error: 3.4130999284559054
best_error: 3.413099902339356
best_error: 3.4121575802926434
best_error: 3.4121575802924218
best_error: 3.4121166032202273
best_error: 3.4121165906971025
best_error: 3.412101651949892
best_error: 3.412101651949669
best_error: 3.4120772013963534
best_error: 3.4120771895702204
best_error: 3.412073710766441
best_error: 3.4120737107662165
best_error: 3.4120724936177798
best_error: 3.412072481790139
best_error: 3.412072179374685
best_error: 3.4120721793744604
best_error: 3.412072032738266
best_error: 3.4120720208209683
best_error: 3.4120720103414595
best_error: 3.412072010341242
best_error: 3.4120719643936868
best_error: 3.412071964393466
best_error: 3.4120719597189706
best_error: 3.412071949987342
