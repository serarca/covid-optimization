ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 68
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.78821606748113
best_error: 102.78821596785346
best_error: 102.78821587058836
best_error: 20.426065939664227
best_error: 20.426065939663154
best_error: 20.42606593772871
best_error: 20.42542322877251
best_error: 20.42542322681867
best_error: 20.422790451225424
best_error: 20.422790449195467
best_error: 20.411154032914585
best_error: 20.41115403052855
best_error: 20.33524122887539
best_error: 20.335241223516427
best_error: 20.248979205528645
best_error: 20.248979195712337
best_error: 20.12655634853656
best_error: 20.126556330608157
best_error: 15.60213035537839
best_error: 15.602129798410594
best_error: 13.840520726305908
best_error: 13.840520719639638
best_error: 13.84052070970197
best_error: 13.840238073847324
best_error: 13.840238067932301
best_error: 13.840238055685022
best_error: 13.821147972620533
best_error: 13.821147966892777
best_error: 13.821147954754395
best_error: 13.752505044450523
best_error: 13.752505039286383
best_error: 13.752505034053875
best_error: 13.752505028952477
best_error: 13.700557314688362
best_error: 13.700557310433702
best_error: 13.700557289722182
best_error: 13.691366124938412
best_error: 13.691365827961096
best_error: 13.653135682572778
best_error: 13.653135674237802
best_error: 13.653135673053352
best_error: 13.65148757560286
best_error: 13.65148754728398
best_error: 13.63417681105697
best_error: 13.63417680245481
best_error: 13.634176801523914
best_error: 13.622544655091312
best_error: 13.62254464654874
best_error: 13.622544645549528
best_error: 13.619198002140752
best_error: 13.619197993634986
best_error: 13.619197992596444
best_error: 13.617613500237464
best_error: 13.617613472468763
best_error: 13.61730105902215
best_error: 13.617301050527196
best_error: 13.617301049477756
best_error: 13.605526451964973
best_error: 13.605526226499991
best_error: 13.604930233849995
best_error: 13.60493000834094
best_error: 13.604913574391293
best_error: 13.604913565981995
best_error: 13.604913564906754
best_error: 13.60489664569678
best_error: 13.604896618194912
best_error: 13.601529725405292
best_error: 13.601529719009605
best_error: 13.601529715930281
best_error: 13.600163900985592
best_error: 13.60016389458949
best_error: 13.600163891511674
best_error: 13.59580985260651
best_error: 13.595809847810939
best_error: 13.595809846210766
best_error: 13.595809843118083
best_error: 13.554729821435236
best_error: 13.554729821435235
best_error: 13.554729816655069
best_error: 13.55472981502643
best_error: 13.55472981196927
best_error: 13.392977706849045
best_error: 13.392977706849035
best_error: 13.39297770200149
best_error: 13.392977700234596
best_error: 13.39297769747234
best_error: 12.796008245604458
best_error: 12.796008242595372
best_error: 12.796008095336253
best_error: 12.777234992036762
best_error: 12.777234931770167
best_error: 12.74549800366172
best_error: 12.74549797226664
best_error: 12.436616630031416
best_error: 12.436616599450964
best_error: 12.395250559816734
best_error: 12.395250549467079
best_error: 12.324560428975595
best_error: 12.324560419213697
best_error: 12.231152129547313
best_error: 12.231152036877187
best_error: 12.226572298000105
best_error: 12.226572211627406
best_error: 12.222636281694959
best_error: 12.222636196529091
best_error: 12.221162921445925
best_error: 12.221162836185412
best_error: 12.2210610972722
best_error: 12.221061093823305
best_error: 12.220636462269841
best_error: 12.22063637730142
best_error: 12.22058150461654
best_error: 12.22058150116874
best_error: 12.22033388110215
best_error: 12.220333877744903
best_error: 12.220154204462702
best_error: 12.220154125329566
best_error: 12.220009042297148
best_error: 12.220008963154342
best_error: 12.219836491298295
best_error: 12.219836489634401
best_error: 12.219561299113963
best_error: 12.219561297362922
best_error: 12.219204193464625
best_error: 12.219204116523773
best_error: 12.218286539335285
best_error: 12.21828646236692
best_error: 12.214519347300646
best_error: 12.214519270527125
best_error: 12.214464642469101
best_error: 12.21446456569387
best_error: 12.212703561256472
best_error: 12.212703484421155
best_error: 12.209369848435836
best_error: 12.20936977622766
best_error: 12.209056122992585
best_error: 12.209056122992582
best_error: 12.209056114191961
best_error: 12.20902204293332
best_error: 12.209021974746662
best_error: 12.20814522346317
best_error: 12.208145157485486
best_error: 12.207803291870459
best_error: 12.207803226172278
best_error: 12.207799586837906
best_error: 12.207799521139675
best_error: 12.207798293061428
best_error: 12.207798227363185
best_error: 12.207797143395794
best_error: 12.207797077697535
best_error: 12.207797049628567
best_error: 12.207797025466272
