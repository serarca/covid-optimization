ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.80054765663212
best_error: 97.8005475116836
best_error: 97.80054750031334
best_error: 97.80054747996199
best_error: 17.55090427724838
best_error: 17.550904277242417
best_error: 17.550904265632536
best_error: 17.539281820948244
best_error: 17.539281809043143
best_error: 17.49104208498801
best_error: 17.49104207250116
best_error: 17.25344786708947
best_error: 17.253447848840793
best_error: 9.269346815522063
best_error: 9.26934663696622
best_error: 9.197168816407608
best_error: 9.197168811474723
best_error: 9.197168790504653
best_error: 9.125612274864523
best_error: 9.12561223571336
best_error: 9.111579551837277
best_error: 9.111579543462922
best_error: 9.111579538625268
best_error: 9.11157952960852
best_error: 9.111579523632178
best_error: 9.100910672421495
best_error: 9.100910670687382
best_error: 9.1009106490527
best_error: 9.08721760776656
best_error: 9.087217602090702
best_error: 9.08721759574617
best_error: 9.087217585782657
best_error: 9.087217579566788
best_error: 8.989368877250826
best_error: 8.989368810880693
best_error: 8.856986965292792
best_error: 8.85698680979751
best_error: 8.786951353546142
best_error: 8.786951267893073
best_error: 8.719652955624952
best_error: 8.719652812823995
best_error: 8.670734564909546
best_error: 8.670734552644042
best_error: 8.669756085254164
best_error: 8.669755924863424
best_error: 8.669483656674311
best_error: 8.669483644440378
best_error: 8.669056376603669
best_error: 8.669056216353782
best_error: 8.668945609193102
best_error: 8.668945596968499
best_error: 8.668104980309325
best_error: 8.668104829258947
best_error: 8.665980211468721
best_error: 8.665980078130424
best_error: 8.664548938531127
best_error: 8.664548924679243
best_error: 8.663481309903247
best_error: 8.663481296099004
best_error: 8.6616879212227
best_error: 8.6616877806993
best_error: 8.65616215831404
best_error: 8.656162143410326
best_error: 8.654949483242621
best_error: 8.654949467494756
best_error: 8.649133014283022
best_error: 8.64913299880613
best_error: 8.646517828562436
best_error: 8.646517709838344
best_error: 8.642414842622816
best_error: 8.642414732308604
best_error: 8.632152427549578
best_error: 8.63215235064033
best_error: 8.626000522064823
best_error: 8.626000462565862
best_error: 8.620430886666348
best_error: 8.620430823031779
best_error: 8.61337673926052
best_error: 8.613376653911182
best_error: 8.607543750988423
best_error: 8.607543734550948
best_error: 8.606128052750062
best_error: 8.606127972255857
best_error: 8.605387375301458
best_error: 8.605387358722696
best_error: 8.60220792034945
best_error: 8.602207903998133
best_error: 8.60151645522171
best_error: 8.601516438989208
best_error: 8.601299207205255
best_error: 8.60129911897546
best_error: 8.570934891587884
best_error: 8.570934875828112
best_error: 8.498319957027283
best_error: 8.498319942772017
best_error: 8.49831993320594
best_error: 8.475022145958498
best_error: 8.475022128671677
best_error: 8.43897140059124
best_error: 8.438971384169186
best_error: 8.413207851417871
best_error: 8.41320783756218
best_error: 8.398042352261658
best_error: 8.398042337799573
best_error: 8.346912949082324
best_error: 8.346912928345496
best_error: 8.309369572239973
best_error: 8.309369551467077
best_error: 8.068575481295026
best_error: 8.068575460515554
best_error: 7.874747027341586
best_error: 7.874746831649801
best_error: 7.640376187763206
best_error: 7.640376180364308
best_error: 7.6403761713662774
best_error: 7.586744417047356
best_error: 7.586744106972598
best_error: 7.5060647757500725
best_error: 7.50606450002918
best_error: 7.505086746871713
best_error: 7.505086739453087
best_error: 7.505086735924629
best_error: 7.465004484270338
best_error: 7.4650044755999385
best_error: 7.464686488885494
best_error: 7.464686473531225
best_error: 7.425004512353347
best_error: 7.4250043055701616
best_error: 7.413618258120364
best_error: 7.413618246001782
best_error: 7.3847044855337405
best_error: 7.38470447638452
best_error: 7.378851493714583
best_error: 7.378851484828402
best_error: 7.378238236493938
best_error: 7.378238056550482
best_error: 7.378111602419716
best_error: 7.378111593576033
best_error: 7.377567534338592
best_error: 7.377567525504008
