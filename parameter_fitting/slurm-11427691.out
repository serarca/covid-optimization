ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.840897901353774
best_error: 21.84089708387329
best_error: 5.061765095907353
best_error: 5.061765095704382
best_error: 5.061760351382532
best_error: 5.061760351380522
best_error: 5.0617603513760825
best_error: 5.0617413643819456
best_error: 5.06174136437993
best_error: 5.061741364375495
best_error: 5.061665273626892
best_error: 5.0616652736248655
best_error: 5.061665273620429
best_error: 5.061358605083826
best_error: 5.061358605081743
best_error: 5.0613586050773165
best_error: 5.060093603538654
best_error: 5.060093603536322
best_error: 5.06009360353195
best_error: 5.0543078316989085
best_error: 5.054307831694927
best_error: 5.054307831691205
best_error: 4.985367647915401
best_error: 4.985367647180267
best_error: 4.983753734672134
best_error: 4.983753733885283
best_error: 4.98193970596715
best_error: 4.981939705119725
best_error: 4.025740023253969
best_error: 4.025739904981439
best_error: 3.989049398271314
best_error: 3.989049271910066
best_error: 3.9346984834084715
best_error: 3.9346983462829446
best_error: 3.9343807912533486
best_error: 3.934380672448674
best_error: 3.854196539178415
best_error: 3.8541964664636845
best_error: 3.8286223628147567
best_error: 3.8286222034018813
best_error: 3.6930647542813673
best_error: 3.693064618577781
best_error: 3.65599870131915
best_error: 3.6559985916065982
best_error: 3.555489648762858
best_error: 3.555489615585212
best_error: 3.5372304593290984
best_error: 3.537230282380023
best_error: 3.5074864862641117
best_error: 3.5074864034287714
best_error: 3.488609741387819
best_error: 3.4886096566110676
best_error: 3.484170770179725
best_error: 3.484170712598987
best_error: 3.4817512366054757
best_error: 3.481751200499314
best_error: 3.4687939913007004
best_error: 3.468793909041052
best_error: 3.4437587380148695
best_error: 3.4437585453797515
best_error: 3.23313119380138
best_error: 3.2331309280583644
best_error: 2.8917281882129773
best_error: 2.8917279115045096
best_error: 2.4974446604205394
best_error: 2.4974444344373556
best_error: 2.484584599698547
best_error: 2.4845845979423817
best_error: 2.4845845928402808
best_error: 2.48458458699596
best_error: 2.4167162264659705
best_error: 2.4167162250797922
best_error: 2.416716219697747
best_error: 2.4167162145871157
best_error: 2.379365462799442
best_error: 2.3793654616647717
best_error: 2.3793654561829913
best_error: 2.3793654513421716
best_error: 2.352245450961419
best_error: 2.3522454471140524
best_error: 2.3522454444782652
best_error: 2.352245439792206
best_error: 2.3424583384910056
best_error: 2.342458301180686
best_error: 2.3088711305558154
best_error: 2.308871063784926
best_error: 2.290160082331505
best_error: 2.290159948405081
best_error: 2.279920513435953
best_error: 2.2799203993464023
best_error: 2.2778910511047643
best_error: 2.2778910086766477
best_error: 2.276770089292762
best_error: 2.276770053036053
best_error: 2.2688409001986005
best_error: 2.2688408775864435
best_error: 2.243081193753545
best_error: 2.2430811920799716
best_error: 2.2430811900161127
best_error: 2.243081189768585
best_error: 2.13499114772162
best_error: 2.13499111071719
best_error: 2.132686155996566
best_error: 2.132686093576658
best_error: 2.1232126458297036
best_error: 2.123212605320912
best_error: 2.1122581959123643
best_error: 2.1122581940452223
best_error: 2.109059772135546
best_error: 2.1090597287713977
best_error: 2.102104889333973
best_error: 2.1021048442668597
best_error: 2.0949662279180217
best_error: 2.0949661943057936
best_error: 2.093030123994753
best_error: 2.0930300879925965
best_error: 2.0922054873289615
best_error: 2.092205471092586
best_error: 2.0916306881986095
best_error: 2.0916306846219586
best_error: 2.091611615048381
best_error: 2.0916116150285764
best_error: 2.0916116135190674
best_error: 2.0915871513736937
best_error: 2.0915871486863282
best_error: 2.091518387468268
best_error: 2.091518376531286
best_error: 2.091489368631662
best_error: 2.091489363758307
best_error: 2.091476959797066
best_error: 2.091476957763237
best_error: 2.0914587943531138
best_error: 2.0914587930371384
best_error: 2.0914442241410716
best_error: 2.09144422141706
best_error: 2.091403768599839
best_error: 2.091403764385601
best_error: 2.091283098419455
best_error: 2.0912830938007163
best_error: 2.0911195817480968
best_error: 2.0911195782100394
best_error: 2.0911195721471842
best_error: 2.0897947098506675
best_error: 2.0897946993846355
best_error: 2.089794698313155
best_error: 2.0875685178055123
best_error: 2.0875684633902543
best_error: 2.0846654915401603
best_error: 2.084665427952333
best_error: 2.0818136080547682
best_error: 2.0818135567161447
best_error: 2.0817847032399635
best_error: 2.081784648297032
best_error: 2.0817767316501614
best_error: 2.0817766752611195
best_error: 2.0817724555416355
best_error: 2.081772397802754
best_error: 2.081770722178096
best_error: 2.081770663976969
best_error: 2.0817695300377643
best_error: 2.0817694711027936
best_error: 2.08176880909115
best_error: 2.081768750093475
best_error: 2.0814887318807265
best_error: 2.081488679938402
best_error: 2.078078810877602
best_error: 2.0780787847653928
best_error: 2.0761157647422395
best_error: 2.076115723898081
best_error: 2.075099417216457
best_error: 2.0750994047980345
best_error: 2.0748929227682074
best_error: 2.0748929198242205
best_error: 2.074874790178031
best_error: 2.074874790031516
best_error: 2.0748747882220058
best_error: 2.0748559573654632
best_error: 2.0748559571505503
best_error: 2.0748559554292014
best_error: 2.074680356384832
best_error: 2.0746803527833024
best_error: 2.074241617685439
best_error: 2.0742416088449596
best_error: 2.0739060857019025
best_error: 2.0739060631982635
best_error: 2.073666740491042
best_error: 2.0736667309125068
best_error: 2.0734998236391897
best_error: 2.0734998226742
best_error: 2.0734948131883355
best_error: 2.0734948119541325
best_error: 2.0734934352872147
best_error: 2.0734934351401746
best_error: 2.073493434759061
best_error: 2.0734905800875056
best_error: 2.073490579928787
best_error: 2.0734905796326477
best_error: 2.073483117549643
best_error: 2.0734831172997135
best_error: 2.0734831170880303
best_error: 2.0734439352363676
best_error: 2.0734439349545806
best_error: 2.0734439347656872
best_error: 2.0733355891639986
best_error: 2.0733355886608127
best_error: 2.0730498450831845
best_error: 2.0730498448194186
best_error: 2.0730498443798844
best_error: 2.072711831450322
best_error: 2.072711827144236
best_error: 2.072538013523779
best_error: 2.0725380129467545
best_error: 2.0724921114178056
best_error: 2.072492109159399
best_error: 2.072485635431732
best_error: 2.072485634202646
best_error: 2.0724831517056144
best_error: 2.0724831508013724
best_error: 2.072482737045043
best_error: 2.0724827363510294
best_error: 2.0724825805576113
best_error: 2.0724825802926556
best_error: 2.0724824048757693
best_error: 2.072482404837593
best_error: 2.0724824047587687
best_error: 2.0724823014775877
best_error: 2.072482301077903
best_error: 2.072482092519264
best_error: 2.072482092065724
best_error: 2.072481432956398
best_error: 2.072481432417839
best_error: 2.0724813149348327
best_error: 2.0724813143522396
best_error: 2.072477090581324
best_error: 2.072477090019543
best_error: 2.0724558841493756
best_error: 2.0724558798744668
best_error: 2.072425323977213
best_error: 2.0724253195353697
best_error: 2.0722711805233387
best_error: 2.0722711772912037
best_error: 2.0720877186754647
best_error: 2.0720877180915367
best_error: 2.072087710529502
best_error: 2.0716088300873152
best_error: 2.071608829276417
best_error: 2.0716088242680475
best_error: 2.0715931297232864
best_error: 2.071593113669513
best_error: 2.0707254929116643
best_error: 2.0707254892115747
best_error: 2.0707176244353955
best_error: 2.070717609716909
best_error: 2.0706969927554186
best_error: 2.070696987290327
best_error: 2.0706967890212793
best_error: 2.070696782928175
best_error: 2.069863240066411
best_error: 2.0698632387207865
best_error: 2.0697001743967602
best_error: 2.0697001562890636
best_error: 2.0696940551478273
best_error: 2.0696940338756393
best_error: 2.0696910631305774
best_error: 2.0696910384377554
best_error: 2.069306738043761
best_error: 2.069306729504065
best_error: 2.0692758233514295
best_error: 2.069275822518354
