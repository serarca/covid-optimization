ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.347830349298539
best_error: 13.347830328772133
best_error: 13.34783032298968
best_error: 13.30225253964551
best_error: 13.302252515665593
best_error: 13.302252509930167
best_error: 12.958388808136418
best_error: 12.958388754299992
best_error: 12.958388751541762
best_error: 12.294648823557003
best_error: 12.294648702434833
best_error: 6.402261124501331
best_error: 6.402260853134741
best_error: 6.398668948682965
best_error: 6.398668705780208
best_error: 6.39219157392434
best_error: 6.392191335750846
best_error: 6.22238705443414
best_error: 6.2223868190824
best_error: 6.150954728764198
best_error: 6.150954493851508
best_error: 6.1054158510232845
best_error: 6.105415614930248
best_error: 6.079698088029904
best_error: 6.079697848632068
best_error: 6.062221795924912
best_error: 6.062221555482063
best_error: 6.053127346247076
best_error: 6.05312710464539
best_error: 6.046639762646004
best_error: 6.046639520219331
best_error: 6.041662628500753
best_error: 6.0416623866686425
best_error: 6.040487279649337
best_error: 6.040487037668295
best_error: 6.040224343380805
best_error: 6.040224101366444
best_error: 6.040074930079323
best_error: 6.040074689279567
best_error: 6.040001833951062
best_error: 6.040001492805265
best_error: 6.039838931680169
best_error: 6.039838690854332
best_error: 6.039739597375586
best_error: 6.03973925624004
best_error: 6.039721461492963
best_error: 6.039721220654156
best_error: 6.03971828568153
best_error: 6.039718068567497
best_error: 6.039717847084393
best_error: 6.039717781638402
best_error: 5.770240518648998
best_error: 5.770240215832818
best_error: 5.729243115819775
best_error: 5.729242745463893
best_error: 5.706527340274658
best_error: 5.706527001044574
best_error: 5.659069756439074
best_error: 5.659069427890246
best_error: 5.572870807420731
best_error: 5.5728705023799785
best_error: 5.549352600802777
best_error: 5.5493523035754535
best_error: 5.539244880317339
best_error: 5.539244582937376
best_error: 5.531640676402015
best_error: 5.531640377878498
best_error: 5.5250290303312415
best_error: 5.5250287332202905
best_error: 5.519520192488294
best_error: 5.519519894496156
best_error: 5.517260650429334
best_error: 5.517260352076177
best_error: 5.515923778506014
best_error: 5.515923479939368
best_error: 5.512864327364982
best_error: 5.512864028345723
best_error: 5.5120381585142875
best_error: 5.512037859372847
best_error: 5.511766390864343
best_error: 5.511766091682721
best_error: 5.511605747383825
best_error: 5.511605448178458
best_error: 5.5114796713558665
best_error: 5.511479372131855
best_error: 5.511416060098374
best_error: 5.511415760864951
best_error: 5.511408921512036
best_error: 5.511408573732316
best_error: 5.511383010737017
best_error: 5.511382711498706
best_error: 5.511313563054745
best_error: 5.511313263806171
best_error: 5.511306133722065
best_error: 5.511305834472392
best_error: 5.511301460793615
best_error: 5.511301161543255
best_error: 5.511298077749199
best_error: 5.511297778498346
best_error: 5.511296170533932
best_error: 5.511295871282793
best_error: 5.511294762750645
best_error: 5.511294463499287
best_error: 5.511293978191892
best_error: 5.511293678940426
best_error: 5.51129332430876
best_error: 5.511293025057186
best_error: 5.511293024371248
best_error: 5.511292725119643
best_error: 5.5112924575005575
best_error: 4.532041266918936
best_error: 4.5320404496098305
best_error: 4.532036838253061
best_error: 4.532036020943433
best_error: 4.532019123503614
best_error: 4.532018306191944
best_error: 4.531948263130596
best_error: 4.5319474458107285
best_error: 4.531664799634523
best_error: 4.531663982281909
best_error: 4.530530593495171
best_error: 4.530529776011552
best_error: 4.525993339634725
best_error: 4.525992522795697
best_error: 4.5079481362969585
best_error: 4.507947331970027
best_error: 4.435269051204535
best_error: 4.435268245544609
best_error: 4.150892578537802
best_error: 4.150891854971228
best_error: 3.8450326123351704
best_error: 3.845032047925381
best_error: 3.7503721204906886
best_error: 3.7503715639634434
best_error: 3.739403943451551
best_error: 3.73940339356085
best_error: 3.7347315560882066
best_error: 3.7347310064097217
best_error: 3.73252397642596
best_error: 3.7325234264658107
best_error: 3.731123798545438
best_error: 3.7311232484067256
best_error: 3.73091601189777
best_error: 3.730915461732586
best_error: 3.730855018353411
best_error: 3.730854468180456
best_error: 3.7308417696514873
best_error: 3.73084121947685
best_error: 3.7308334704168953
best_error: 3.7308329202411916
best_error: 3.730831911188588
best_error: 3.7308314747274367
best_error: 3.730831458799587
