ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.54374495157738
best_error: 24.543744333377067
best_error: 5.064526605799183
best_error: 5.064526605607783
best_error: 5.064519717627388
best_error: 5.064519717623375
best_error: 5.064519717596685
best_error: 5.0644921469331186
best_error: 5.064492146929098
best_error: 5.064492146902398
best_error: 5.064381575122533
best_error: 5.064381575118486
best_error: 5.064381575091748
best_error: 5.063934603580758
best_error: 5.063934603576608
best_error: 5.063934603549704
best_error: 5.062067702553524
best_error: 5.062067702548913
best_error: 5.062067702521338
best_error: 5.05299273701442
best_error: 5.052992737006675
best_error: 5.052992736976241
best_error: 3.4704066720650633
best_error: 3.470406481929512
best_error: 3.4704063430863723
best_error: 3.0585448694511217
best_error: 3.058544621833018
best_error: 3.058544287433836
best_error: 3.058544227764835
best_error: 3.0585436569543623
best_error: 2.8144559886657583
best_error: 2.8144559367418402
best_error: 2.8144555508451417
best_error: 2.8144553295043386
best_error: 2.802127663172949
best_error: 2.802127613807434
best_error: 2.787277794637005
best_error: 2.7872777911819564
best_error: 2.7872777827234727
best_error: 2.7867571836206495
best_error: 2.7867571796744404
best_error: 2.786757170954941
best_error: 2.786587841790764
best_error: 2.786587837762034
best_error: 2.7865878289783335
best_error: 2.786210978829593
best_error: 2.7862109740133105
best_error: 2.7862109649285105
best_error: 2.7856859724190093
best_error: 2.7856859678161707
best_error: 2.7856859587601117
best_error: 2.7780098945334095
best_error: 2.7780098911902797
best_error: 2.778009882169394
best_error: 2.7706350219230544
best_error: 2.770635018815057
best_error: 2.7706350090155096
best_error: 2.7689600698000576
best_error: 2.7689600651761315
best_error: 2.7689600567416877
best_error: 2.768830299313598
best_error: 2.7688302648082224
best_error: 2.7688158705141883
best_error: 2.7688158298705154
best_error: 2.7665249925402278
best_error: 2.7665249590340864
best_error: 2.7663433087543843
best_error: 2.7663432915292905
best_error: 2.76619831273785
best_error: 2.766198302981164
best_error: 2.76619830048829
best_error: 2.7654512115535437
best_error: 2.7654512111258334
best_error: 2.76545119944629
best_error: 2.7635865720280663
best_error: 2.7635865670412447
best_error: 2.7635865600936595
best_error: 2.7562778647963224
best_error: 2.756277857697926
best_error: 2.756277853004474
best_error: 2.724587644367631
best_error: 2.7245875141402296
best_error: 2.7245873582032902
best_error: 2.6854604220997778
best_error: 2.68546039974477
best_error: 2.6778644128384923
best_error: 2.6778644124884567
best_error: 2.6778644014426702
best_error: 2.6750110260920588
best_error: 2.67501099850742
best_error: 2.6226092097044233
best_error: 2.6226091367395927
best_error: 2.5710655876438437
best_error: 2.5710655346573095
best_error: 2.410900650877348
best_error: 2.410900648384998
best_error: 2.4109006400600945
best_error: 2.264977376275184
best_error: 2.2649772921552214
best_error: 2.161114446600366
best_error: 2.1611144394293476
best_error: 2.08390979235468
best_error: 2.0839097860048916
best_error: 2.040162164393572
best_error: 2.0401620998308747
best_error: 1.9543616352791275
best_error: 1.9543616344988866
best_error: 1.9543616338045187
best_error: 1.919823118200174
best_error: 1.9198230680752126
best_error: 1.9173751140966697
best_error: 1.9173750909035925
best_error: 1.917250625326054
best_error: 1.9172506237520903
best_error: 1.9172173358786855
best_error: 1.9172173358634246
best_error: 1.9172173356852775
best_error: 1.9172173351696278
best_error: 1.9171513201716528
best_error: 1.917151318894409
best_error: 1.9171513179750013
best_error: 1.917092116502245
best_error: 1.9170921152509623
best_error: 1.9169899505187302
best_error: 1.9169899484140351
best_error: 1.916485217521558
best_error: 1.9164852135257118
best_error: 1.9156536237305946
best_error: 1.9156536185477273
best_error: 1.9145615108785248
best_error: 1.9145615085577636
best_error: 1.9139765449829087
best_error: 1.9139765443142742
best_error: 1.9134840629942746
best_error: 1.9134840543317282
best_error: 1.9134288911401165
best_error: 1.913428890873327
best_error: 1.913428888889952
best_error: 1.913343695384429
best_error: 1.9133436912882638
best_error: 1.9132923274186968
best_error: 1.9132923233341088
best_error: 1.9129709102690098
best_error: 1.9129709069031844
best_error: 1.9128372147038204
best_error: 1.9128372055612277
best_error: 1.9120702729851442
best_error: 1.9120702633622009
best_error: 1.9094516510756157
best_error: 1.9094516393031336
best_error: 1.8931067242973858
best_error: 1.8931067050915424
best_error: 1.880945087508386
best_error: 1.8809450820980504
best_error: 1.8808186947213583
best_error: 1.8808186885549008
best_error: 1.8786576086843245
best_error: 1.878657563460405
best_error: 1.8714981269551072
best_error: 1.8714981200769778
best_error: 1.8635514343319957
best_error: 1.8635513955800216
best_error: 1.8626391250808445
best_error: 1.8626390707200893
best_error: 1.8612468842004077
best_error: 1.861246870512548
best_error: 1.8610253801506256
best_error: 1.8610253781287278
best_error: 1.8609701514304553
best_error: 1.8609701492953235
best_error: 1.8609058363210849
best_error: 1.8609058329958876
best_error: 1.860819734896841
best_error: 1.8608197332810732
best_error: 1.8605300027615164
best_error: 1.8605300025805311
best_error: 1.860530002010711
best_error: 1.8605300017357633
best_error: 1.860515020732545
best_error: 1.8605150204243472
best_error: 1.8605150199527367
best_error: 1.86051501967077
best_error: 1.8605149190554817
best_error: 1.860514919049924
best_error: 1.8605149187057333
best_error: 1.8605149182652014
best_error: 1.8605149179935176
best_error: 1.8604142982322616
best_error: 1.8604142974485274
best_error: 1.8604142971651396
best_error: 1.8603145939894423
best_error: 1.860314593210198
best_error: 1.8603145930782545
best_error: 1.8602454429001234
best_error: 1.8602454408581155
best_error: 1.8602204927507517
best_error: 1.8602204894127055
best_error: 1.8601952387533058
best_error: 1.8601952361356942
best_error: 1.8601760966205096
best_error: 1.860176096121613
best_error: 1.8601760930158682
best_error: 1.8601606798283081
best_error: 1.860160673532169
best_error: 1.8601328835495143
best_error: 1.8601328716735954
best_error: 1.8601042350394894
best_error: 1.860104221970567
best_error: 1.859968240041537
best_error: 1.8599682198336231
best_error: 1.8598402141478028
best_error: 1.8598401980553851
best_error: 1.8593790599108848
best_error: 1.859379049265523
best_error: 1.8592064449971095
best_error: 1.859206431717978
best_error: 1.8564051029112634
best_error: 1.8564050820185019
best_error: 1.8545343932378242
best_error: 1.8545341881563149
best_error: 1.8544889340069937
best_error: 1.8544889312265085
best_error: 1.8544661460988405
best_error: 1.8544661427193296
best_error: 1.8543568469828755
best_error: 1.8543568358335432
best_error: 1.853806318194207
best_error: 1.8538063136223826
best_error: 1.851871130235154
best_error: 1.8518711156727172
best_error: 1.8504479526176587
best_error: 1.8504479489282022
best_error: 1.849368290772085
best_error: 1.8493682828776423
best_error: 1.8493264759751704
best_error: 1.849326465964023
best_error: 1.849285469712604
best_error: 1.849285460413206
best_error: 1.8491104826893556
best_error: 1.8491104776058045
best_error: 1.849069554311023
best_error: 1.8490695504037722
best_error: 1.8490695468532434
best_error: 1.8490067779632733
best_error: 1.8490067739927292
best_error: 1.848969885735626
best_error: 1.8489698798169314
best_error: 1.8489425887409723
best_error: 1.8489425804290738
best_error: 1.8488735858743823
best_error: 1.8488735736512083
best_error: 1.8487586795998732
best_error: 1.8487586587305542
best_error: 1.848600909879083
best_error: 1.8486008858268679
best_error: 1.8474408894800514
best_error: 1.8474408552448494
best_error: 1.845589486911572
best_error: 1.845589443294876
best_error: 1.8429740851262166
best_error: 1.8429740335151163
best_error: 1.8405649552005305
best_error: 1.8405648993320065
best_error: 1.837952851838131
best_error: 1.8379528009913308
best_error: 1.8340696807423447
best_error: 1.8340696358862265
best_error: 1.8298710198863424
best_error: 1.8298710002012168
best_error: 1.8298710000106095
best_error: 1.8288942288066397
best_error: 1.8288941973675548
best_error: 1.8283367206099812
best_error: 1.8283366826366383
best_error: 1.8274257486623906
best_error: 1.8274257037838233
