ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.529123741783295
best_error: 11.52912371545338
best_error: 11.529123683660945
best_error: 11.351480129572387
best_error: 11.351480096104694
best_error: 11.351480059089354
best_error: 10.14033398066846
best_error: 10.140333890590894
best_error: 10.140333844778613
best_error: 9.337829618753473
best_error: 9.337829499844563
best_error: 9.191683447576793
best_error: 9.19168332646127
best_error: 8.952435423322799
best_error: 8.952435294662553
best_error: 8.724763043398134
best_error: 8.724762906970678
best_error: 8.58709167905898
best_error: 8.587091629946569
best_error: 8.587091551488598
best_error: 6.878878652689467
best_error: 6.8788785021361
best_error: 6.871216490415795
best_error: 6.871216442922785
best_error: 6.871216353795754
best_error: 6.649939607068106
best_error: 6.649939555769556
best_error: 6.64993946809528
best_error: 6.628230574236255
best_error: 6.628230521327184
best_error: 6.6282304351277315
best_error: 6.614436911214709
best_error: 6.614436857267732
best_error: 6.6144367722999835
best_error: 6.608075637509834
best_error: 6.608075583092933
best_error: 6.608075498555305
best_error: 6.603483307899547
best_error: 6.60348325314375
best_error: 6.603483168916338
best_error: 6.603206660398216
best_error: 6.603206509972781
best_error: 4.720274319230401
best_error: 4.720274030191103
best_error: 4.530498782762821
best_error: 4.530498501531165
best_error: 4.42806438697229
best_error: 4.428064165118819
best_error: 4.216530731487262
best_error: 4.216530471577661
best_error: 4.020588691352808
best_error: 4.020588417309247
best_error: 3.993544867943585
best_error: 3.993544595399665
best_error: 3.607546120166057
best_error: 3.607545714141782
best_error: 3.433649184676986
best_error: 3.4336487200777155
best_error: 3.043540837432417
best_error: 3.043540288872594
best_error: 2.8570403601198233
best_error: 2.857039883341292
best_error: 2.780358130707187
best_error: 2.780357707716777
best_error: 2.7370566787776296
best_error: 2.73705627522222
best_error: 2.7154571828979996
best_error: 2.715456785214137
best_error: 2.7011045322884795
best_error: 2.701104138714417
best_error: 2.6838895345202882
best_error: 2.683889141017815
best_error: 2.653475186141831
best_error: 2.6534747904026608
best_error: 2.6491835883172006
best_error: 2.649183192079615
best_error: 2.648497059282642
best_error: 2.64849704932959
best_error: 2.648496886252785
best_error: 2.458454304482223
best_error: 2.4584543044815166
best_error: 1.973420493241645
best_error: 1.9734201831148206
best_error: 1.94704633135931
best_error: 1.947046033362869
best_error: 1.8887349866024843
best_error: 1.8887346930644706
best_error: 1.7524609262458775
best_error: 1.7524609262451807
best_error: 1.6408449210127833
best_error: 1.6408445755179415
best_error: 1.5725664612199686
best_error: 1.5725664612192387
best_error: 1.5386627420018955
best_error: 1.5386627420012235
best_error: 1.455766802650887
best_error: 1.4557668026502537
best_error: 1.4546240016295506
best_error: 1.4546235659792401
best_error: 1.4304243998182806
best_error: 1.4304243998176558
best_error: 1.4221828430847272
best_error: 1.4221828430840953
best_error: 1.4136573080229922
best_error: 1.4136568399579261
best_error: 1.4067813169691017
best_error: 1.406781316968476
best_error: 1.4067811454508141
best_error: 1.402985603991877
best_error: 1.4029856039912572
best_error: 1.401799709576778
best_error: 1.40179922184473
best_error: 1.4015221164375293
best_error: 1.4015221164369027
best_error: 1.4015047667962262
best_error: 1.4015042790104324
best_error: 1.4014393218777452
best_error: 1.4014393218771235
best_error: 1.401122786452068
best_error: 1.4011222991622314
best_error: 1.4007958791879522
best_error: 1.4007958791873398
best_error: 1.4007957079376978
best_error: 1.4007080563514083
best_error: 1.4007075685330206
best_error: 1.399636798512193
best_error: 1.3996367985115665
best_error: 1.3996366273256582
best_error: 1.399530483059175
best_error: 1.3995299947598538
best_error: 1.398737880977719
best_error: 1.3987378809770612
best_error: 1.3987377099666287
best_error: 1.3979197903657434
best_error: 1.3979193116045283
best_error: 1.3974526048577463
best_error: 1.3974526048571296
best_error: 1.3974524338931325
best_error: 1.3973062975867738
best_error: 1.3973062975861699
best_error: 1.3973061266260443
best_error: 1.3972925335559845
best_error: 1.3972920546468688
best_error: 1.397255941967274
best_error: 1.39725594196663
best_error: 1.3972557710220195
best_error: 1.397244603132092
best_error: 1.3972441245991352
best_error: 1.3972137567991467
best_error: 1.397213756798496
best_error: 1.3972135858901678
best_error: 1.3971287555900143
best_error: 1.3971287555894016
best_error: 1.39712858465913
best_error: 1.396979053643562
best_error: 1.3969785513667419
best_error: 1.3960914352915594
best_error: 1.3960909420070569
best_error: 1.3950936150066817
best_error: 1.3950931227858214
best_error: 1.394811732776624
best_error: 1.394811240550746
best_error: 1.3946318275218967
best_error: 1.3946313357178834
