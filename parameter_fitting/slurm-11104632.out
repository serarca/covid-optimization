ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.27414162931338
best_error: 97.27414154603328
best_error: 97.27414147336688
best_error: 17.60295055430906
best_error: 17.602950554303128
best_error: 17.602950543170316
best_error: 17.562349179727665
best_error: 17.56234916778563
best_error: 17.354119654057005
best_error: 17.354119634686832
best_error: 15.110490783269281
best_error: 15.110490538338277
best_error: 12.308951645592405
best_error: 12.308951595787914
best_error: 12.30895151285054
best_error: 12.281229019955065
best_error: 12.281229016755294
best_error: 12.281229012716846
best_error: 12.281228770068594
best_error: 12.277993018087258
best_error: 12.277993012563767
best_error: 12.277993007512595
best_error: 12.277992990485354
best_error: 11.492846476747342
best_error: 11.492846472332236
best_error: 11.492846462140443
best_error: 11.492846447150232
best_error: 11.41492926058166
best_error: 11.414929249977114
best_error: 11.414929244348992
best_error: 10.586610359464306
best_error: 10.58661035314782
best_error: 10.586610348672586
best_error: 10.118181872561237
best_error: 10.118181867984367
best_error: 10.11818186044721
best_error: 9.841733102473022
best_error: 9.841733088211557
best_error: 9.309425187046344
best_error: 9.309425180544528
best_error: 9.309425178311596
best_error: 8.941066688608842
best_error: 8.941066676483203
best_error: 8.737412752119544
best_error: 8.737412574175979
best_error: 8.552428750332826
best_error: 8.5524286762683
best_error: 8.547009804109472
best_error: 8.54700977790719
best_error: 8.530471213517977
best_error: 8.53047116099967
best_error: 8.525774494496257
best_error: 8.525774442683469
best_error: 8.525722652182017
best_error: 8.525722626550818
best_error: 8.511753412786556
best_error: 8.51175339043533
best_error: 8.501435567553205
best_error: 8.501435547555761
best_error: 8.496445761225965
best_error: 8.496445742127477
best_error: 8.484199053104703
best_error: 8.484199035500968
best_error: 8.452785860242658
best_error: 8.452785844417019
best_error: 8.401310950884161
best_error: 8.40131093080998
best_error: 8.391133863478213
best_error: 8.391133842881047
best_error: 8.354567353051518
best_error: 8.354567328678085
best_error: 8.337691734872092
best_error: 8.337691712252235
best_error: 8.314557073646057
best_error: 8.314557030915799
best_error: 8.28015406448495
best_error: 8.280154045103297
best_error: 8.260986704663111
best_error: 8.26098668062494
best_error: 8.22614153168782
best_error: 8.226141509677518
best_error: 8.196546891457324
best_error: 8.196546871693922
best_error: 8.14777647820698
best_error: 8.147776375909944
best_error: 8.12593573994534
best_error: 8.12593571942651
best_error: 8.087298719564975
best_error: 8.0872986989576
best_error: 7.88411220168379
best_error: 7.884112060466128
best_error: 7.863811210478939
best_error: 7.863811193867205
best_error: 7.863430233450925
best_error: 7.863430216510832
best_error: 7.772170827347158
best_error: 7.772170819012393
best_error: 7.772170672690172
best_error: 7.761256519285948
best_error: 7.761256505618016
best_error: 7.7612565015220785
best_error: 7.74590825169814
best_error: 7.745908239266967
best_error: 7.745908234254679
best_error: 7.716982426657536
best_error: 7.71698241398176
best_error: 7.716982410820517
best_error: 7.627020534381172
best_error: 7.627020518021554
best_error: 7.596962518269827
best_error: 7.596962500550062
best_error: 7.512976688469699
best_error: 7.512976677155945
best_error: 7.421664132472805
best_error: 7.421664123173794
best_error: 7.406773944974583
best_error: 7.40677384514407
best_error: 7.327605828727512
best_error: 7.327605815226051
best_error: 7.327605814698745
best_error: 7.271746558426957
best_error: 7.271746558272535
best_error: 7.271746546349278
best_error: 7.125712483515768
best_error: 7.125712469627741
best_error: 7.125712226281647
best_error: 7.075101882183578
best_error: 7.075101749274174
best_error: 7.070686598736461
best_error: 7.070686590229346
best_error: 7.070686582312047
best_error: 7.070686581778431
best_error: 7.069960166538168
best_error: 7.069960031378706
best_error: 7.065985094980362
best_error: 7.065985088439344
best_error: 7.065985080694774
best_error: 7.065577597428495
best_error: 7.065577590961165
best_error: 7.065577583195279
best_error: 7.065367025475542
best_error: 7.065367019046661
best_error: 7.065367011255113
best_error: 7.065258454578398
best_error: 7.065258448297419
best_error: 7.065258440442801
best_error: 7.0651671549355015
best_error: 7.065167148656942
best_error: 7.06516714080199
best_error: 7.065131353382714
best_error: 7.065131347115308
best_error: 7.065131339258839
best_error: 7.06511622796377
best_error: 7.065116221696762
best_error: 7.065116213840239
best_error: 7.065109578715031
best_error: 7.065109572448206
best_error: 7.065109564591653
