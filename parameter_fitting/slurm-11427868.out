ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 80
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.01778572554253
best_error: 21.01778551678581
best_error: 4.375255473249999
best_error: 4.375255471443793
best_error: 4.3735171309537675
best_error: 4.3735171309252925
best_error: 4.3735171305884
best_error: 4.366442013677028
best_error: 4.3664420136471405
best_error: 4.366442013306911
best_error: 4.335931325086338
best_error: 4.3359313250497316
best_error: 4.335931324695345
best_error: 4.157873512160027
best_error: 4.157873512047691
best_error: 4.1578735116277326
best_error: 4.015845016802645
best_error: 4.015845016544915
best_error: 4.015845016130091
best_error: 3.8288163565323616
best_error: 3.828816355869714
best_error: 3.828816355638379
best_error: 3.465862441032806
best_error: 3.4658623468196437
best_error: 3.1052232998613816
best_error: 3.1052232923986436
best_error: 3.0134430821141693
best_error: 3.0134430750993597
best_error: 3.002689497066488
best_error: 3.002689492798626
best_error: 3.0026894899276915
best_error: 2.989657975817534
best_error: 2.9896579582632956
best_error: 2.9861524347437505
best_error: 2.986152414955791
best_error: 2.9823554807787516
best_error: 2.9823554593554267
best_error: 2.9801789959788
best_error: 2.9801789734973347
best_error: 2.9779167482899154
best_error: 2.9779167249619873
best_error: 2.2494070145520335
best_error: 2.2494068721985965
best_error: 2.1760740291643756
best_error: 2.1760740029051147
best_error: 2.1760738920923437
best_error: 2.163889327525683
best_error: 2.1638892459685994
best_error: 1.9041719706540186
best_error: 1.9041717353239067
best_error: 1.621707551731978
best_error: 1.621707524823643
best_error: 1.6165202438899584
best_error: 1.61652006508234
best_error: 1.6065574667226796
best_error: 1.6065574159532594
best_error: 1.5980416806468924
best_error: 1.5980416263937105
best_error: 1.5930589702682836
best_error: 1.5930589702343394
best_error: 1.5930589700084063
best_error: 1.5930589651698719
best_error: 1.5883381655887887
best_error: 1.5883381481742687
best_error: 1.5797182088026762
best_error: 1.579718167011849
best_error: 1.5497592080843297
best_error: 1.5497591440511216
best_error: 1.4285403063891795
best_error: 1.428540200482488
best_error: 1.412372111220897
best_error: 1.4123720312352321
best_error: 1.3378703448132212
best_error: 1.3378703168228072
best_error: 1.3224492222658597
best_error: 1.3224491336086286
best_error: 1.3156514652091806
best_error: 1.3129550945788357
best_error: 1.3031791985113883
best_error: 1.3031791617652404
best_error: 1.3018678207865895
best_error: 1.3018678170586633
best_error: 1.3013407365578962
best_error: 1.3013407325971005
best_error: 1.3006027778882234
best_error: 1.3006027687844772
best_error: 1.2982351066041047
best_error: 1.2982350902028639
best_error: 1.2928392075232755
best_error: 1.2928391776303756
best_error: 1.2775981175972715
best_error: 1.2775980823715332
best_error: 1.2687853671277047
best_error: 1.268785348108044
best_error: 1.2687853221791303
best_error: 1.254396954184965
best_error: 1.2543969128601027
best_error: 1.2063426284446017
best_error: 1.2063425666644405
best_error: 1.1918978110814138
best_error: 1.191897759317469
best_error: 1.1905760927238684
best_error: 1.1905760338399853
best_error: 1.1683619027084224
best_error: 1.1683618612788782
best_error: 1.1592161003893569
best_error: 1.1592160957119246
best_error: 1.144937225619364
best_error: 1.1449372253767023
best_error: 1.144937206829857
best_error: 1.141932960466091
best_error: 1.1419329042331838
best_error: 1.1399525082068378
best_error: 1.1399525055429975
best_error: 1.1395059600603377
best_error: 1.139505957110165
best_error: 1.139390599328178
best_error: 1.1393905936710622
best_error: 1.1392842500955
best_error: 1.1392842446936837
best_error: 1.1389553299624133
best_error: 1.1389553294409873
best_error: 1.1389553264253451
best_error: 1.1372909166375147
best_error: 1.1372909099824609
best_error: 1.1367522832309593
best_error: 1.1367522262600682
best_error: 1.1359406738681554
best_error: 1.1359406657852051
best_error: 1.1357529667714197
best_error: 1.135752922975908
best_error: 1.1352625606878455
best_error: 1.1352625427203975
best_error: 1.1347675039389162
best_error: 1.134767493103712
best_error: 1.1337556839122813
best_error: 1.1337556756266665
best_error: 1.1252375615766266
best_error: 1.1252375010016435
best_error: 1.125237453926861
best_error: 1.1252319306990757
best_error: 1.125231867935608
best_error: 1.1242144231326545
best_error: 1.124214372866086
best_error: 1.122622484277912
best_error: 1.1226224294185676
best_error: 1.119874592790122
best_error: 1.1198745909924748
best_error: 1.1198745877692133
best_error: 1.1178595296514653
best_error: 1.1178595296166498
best_error: 1.1178595291186653
best_error: 1.1178595279111065
best_error: 1.1158059580573712
best_error: 1.1158059429803293
best_error: 1.1144114889006698
best_error: 1.1144114862245602
best_error: 1.1138685968970967
best_error: 1.1138685872354177
best_error: 1.1133003197048614
best_error: 1.11330031393558
best_error: 1.1129675075447176
best_error: 1.1129675036139424
best_error: 1.1125493194506286
best_error: 1.1125493183087496
best_error: 1.1125493181579755
best_error: 1.1106030056573837
best_error: 1.1106029996967977
best_error: 1.108075510772986
best_error: 1.1080755059410068
best_error: 1.1069878300440474
best_error: 1.1069877737659726
best_error: 1.1031539559074353
best_error: 1.103153912675577
best_error: 1.0899922524808598
best_error: 1.0899922520306553
best_error: 1.0899922500516135
best_error: 1.078591180030332
best_error: 1.0785909358156105
best_error: 1.068618801912709
best_error: 1.0686187112938783
best_error: 1.0338430755166164
best_error: 1.0338428975549128
best_error: 1.0224575471567372
best_error: 1.0224575034279222
best_error: 1.017099339063081
best_error: 1.0170993144101894
best_error: 1.0074851321845568
best_error: 1.0074850984078036
best_error: 0.9996491018465022
best_error: 0.9996491011325872
best_error: 0.9996491010543056
best_error: 0.9996491010271282
best_error: 0.9994915854585414
best_error: 0.9994915828318875
best_error: 0.9994737117121716
best_error: 0.9994737102386244
best_error: 0.9994491534054843
best_error: 0.9994491525971181
best_error: 0.9994491524603868
best_error: 0.9994399217627441
best_error: 0.9994399216962332
best_error: 0.9994399210719429
best_error: 0.9994399207024399
best_error: 0.9994287727981521
best_error: 0.9994287727279177
best_error: 0.9994287720681373
best_error: 0.9994287717799755
best_error: 0.9994256722240107
best_error: 0.9994256721671642
best_error: 0.9994256715238489
best_error: 0.9994256711603507
best_error: 0.9994153979595185
best_error: 0.9994153975768062
best_error: 0.9994153973031219
best_error: 0.9994153968250815
best_error: 0.9992420757190504
best_error: 0.9992420745089011
best_error: 0.9990077633501562
best_error: 0.9990077633231939
best_error: 0.9990077626000836
best_error: 0.9988506473437571
best_error: 0.9988506469039465
best_error: 0.9988506465697529
best_error: 0.9986585729828225
best_error: 0.9986585696683656
best_error: 0.9976295204036008
best_error: 0.997629501642957
best_error: 0.9969776445832391
best_error: 0.9969776326472243
best_error: 0.9968179353973539
best_error: 0.9968179308528105
best_error: 0.9967998172056778
best_error: 0.9967998089324253
best_error: 0.9967891479470563
best_error: 0.9967891377494464
best_error: 0.9965678137948829
best_error: 0.9965678054093785
best_error: 0.9962711584167859
best_error: 0.9962711503751223
best_error: 0.9962103773772212
best_error: 0.9962103773302851
best_error: 0.9962103766222502
best_error: 0.9962047141855278
best_error: 0.9962047141311022
best_error: 0.9962047134412966
best_error: 0.9961929565279436
best_error: 0.9961929564736249
best_error: 0.9961929557529774
best_error: 0.9961762424563017
best_error: 0.9961762423676681
best_error: 0.9961762416682699
best_error: 0.9961270628747692
best_error: 0.9961270618036048
best_error: 0.9959973417327697
best_error: 0.9959973405842871
best_error: 0.9959973395619767
best_error: 0.9957854497344448
best_error: 0.9957854491296189
best_error: 0.9957854394360006
best_error: 0.9955180942377548
best_error: 0.9955180935727117
best_error: 0.995518082477298
best_error: 0.9946858390100569
best_error: 0.9946858382726095
best_error: 0.994685820220637
best_error: 0.9919906816234009
best_error: 0.9919906736818612
best_error: 0.991990663546907
best_error: 0.9868678969193929
best_error: 0.9868678929193605
best_error: 0.9868678618703917
best_error: 0.9854213580393365
best_error: 0.9854212325252117
best_error: 0.9843301453974452
best_error: 0.9843300684573719
best_error: 0.9808016773686412
best_error: 0.9808015565962536
best_error: 0.9742607669150687
best_error: 0.9742607399614444
best_error: 0.9738901613661229
best_error: 0.9738901613602438
best_error: 0.9738901613241405
best_error: 0.9738901606260117
best_error: 0.973890160075763
