ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 103.64345302876443
best_error: 103.6434528255118
best_error: 103.64345282347246
best_error: 20.66535521959561
best_error: 20.665355219594968
best_error: 20.665355218441594
best_error: 20.665272631124044
best_error: 20.66527262996772
best_error: 20.66494062556543
best_error: 20.664940624399826
best_error: 20.663585563387553
best_error: 20.66358556218361
best_error: 20.657689458816655
best_error: 20.657689457436838
best_error: 20.62217601258466
best_error: 20.622176009848047
best_error: 20.492428397272082
best_error: 20.492428386334947
best_error: 18.00331779424268
best_error: 18.003317468178068
best_error: 15.178471174841256
best_error: 15.178470497340264
best_error: 14.517741389884335
best_error: 14.517741355330259
best_error: 14.311915975656957
best_error: 14.311915947571329
best_error: 14.284659200182071
best_error: 14.284659197827546
best_error: 14.28465914896959
best_error: 14.283120410932158
best_error: 14.283120407409722
best_error: 14.283120377107169
best_error: 14.280891827867315
best_error: 14.280891823149137
best_error: 14.280891813608559
best_error: 14.280788133250056
best_error: 14.28078812817137
best_error: 14.280788124404825
best_error: 14.280788124240853
best_error: 14.280391735594959
best_error: 14.280391730491214
best_error: 14.28039172706918
best_error: 14.28039172657712
best_error: 14.280176721493683
best_error: 14.280176716388771
best_error: 14.280176712954876
best_error: 14.28017671247187
best_error: 14.280119127210796
best_error: 14.280119122080727
best_error: 14.280119119016335
best_error: 14.280119118186569
best_error: 14.280078627085093
best_error: 14.2800786219548
best_error: 14.280078618888187
best_error: 14.280078618060113
best_error: 14.28006279931883
best_error: 14.280062794188453
best_error: 14.280062791120974
best_error: 14.280062790293558
best_error: 14.280053318695103
best_error: 14.280053313564672
best_error: 14.280053310496672
best_error: 14.280053309669652
best_error: 14.280048682379089
best_error: 14.280048677248624
best_error: 14.280048674180442
best_error: 14.28004867335353
best_error: 14.280044735182486
best_error: 14.280044730051987
best_error: 14.28004472698365
best_error: 14.280044726156836
best_error: 14.280042438052012
best_error: 14.280042432921494
best_error: 14.280042429853069
best_error: 14.28004242902631
best_error: 14.280040525310106
best_error: 14.280040520179572
best_error: 14.280040517111068
best_error: 14.280040516284355
best_error: 14.280039269641303
best_error: 14.28003926451076
best_error: 14.280039261442216
best_error: 14.280039260615524
best_error: 14.28003828200352
best_error: 14.280038276872968
best_error: 14.280038273804387
best_error: 14.280038272977716
best_error: 14.28003739355513
best_error: 14.280037388424565
best_error: 14.280037385355946
best_error: 14.280037384529304
best_error: 14.280036830238986
best_error: 14.280036825108418
best_error: 14.280036822039776
best_error: 14.280036821213148
best_error: 14.280035998332984
best_error: 14.28003599320241
best_error: 14.280035990133733
best_error: 14.280035989307123
best_error: 14.280035770648988
best_error: 14.280035765518413
best_error: 14.28003576244973
best_error: 14.280035761623122
best_error: 14.280035588933895
best_error: 14.280035583803325
best_error: 14.280035580734634
best_error: 14.280035579908029
best_error: 14.28003543814311
best_error: 14.280035433012534
best_error: 14.280035429943833
best_error: 14.280035429117241
best_error: 14.280035336026538
best_error: 14.280035330895956
best_error: 14.280035327827257
best_error: 14.280035327000665
best_error: 14.280035196422988
best_error: 14.280035191292406
best_error: 14.280035188223703
best_error: 14.280035187397111
best_error: 14.280035136778377
best_error: 14.280035131647798
best_error: 14.28003512857909
best_error: 14.2800351277525
best_error: 14.2800350787146
best_error: 14.280035073584017
best_error: 14.280035070515305
best_error: 14.28003506968872
best_error: 14.28003505392104
best_error: 14.28003504879046
best_error: 14.280035045721748
best_error: 14.280035044895161
best_error: 14.280035036578404
best_error: 14.28003503144782
best_error: 14.280035027552522
