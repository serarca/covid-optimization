ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.68244298402303
best_error: 97.68244290654192
best_error: 97.68244285166587
best_error: 17.593546378455198
best_error: 17.59354606790324
best_error: 17.593543901860752
best_error: 14.459116200026228
best_error: 14.459116197751815
best_error: 14.459116140957136
best_error: 14.342655696633146
best_error: 14.342655694037425
best_error: 14.342655628519278
best_error: 13.670290429670585
best_error: 13.67029042577031
best_error: 13.670290301797657
best_error: 11.828464881510717
best_error: 11.828464879195948
best_error: 11.828464551793264
best_error: 9.657208094101478
best_error: 9.657208094100781
best_error: 9.657208087494677
best_error: 9.657208068016528
best_error: 9.63216599649782
best_error: 9.632165996497182
best_error: 9.632165989612593
best_error: 9.632165968828117
best_error: 9.290459725318758
best_error: 9.290459724388809
best_error: 9.290459718210505
best_error: 9.290459697142033
best_error: 7.855625209322854
best_error: 7.8556252093220795
best_error: 7.855625195956421
best_error: 7.855625191944951
best_error: 7.688154128664086
best_error: 7.688154107101479
best_error: 7.688154091457585
best_error: 7.556879280823337
best_error: 7.556879262598658
best_error: 7.115684633856869
best_error: 7.115684525961638
best_error: 6.854936838202335
best_error: 6.854936820971242
best_error: 6.770067652937977
best_error: 6.770067637721322
best_error: 6.770067635709477
best_error: 6.639755070307027
best_error: 6.639755059722242
best_error: 6.63915812610694
best_error: 6.639157920024921
best_error: 6.627639845500613
best_error: 6.627639643800726
best_error: 6.6239047682878684
best_error: 6.623904759114902
best_error: 6.614404451380634
best_error: 6.614404442946858
best_error: 6.598831432481894
best_error: 6.59883142587138
best_error: 6.595662238237888
best_error: 6.595662232590448
best_error: 6.595456169384841
best_error: 6.595456164361169
best_error: 6.593106120845309
best_error: 6.593105846952192
best_error: 6.5923211157708765
best_error: 6.592320842503734
best_error: 6.592315450616267
best_error: 6.592315445551816
best_error: 6.5922758061557
best_error: 6.592275532895998
best_error: 6.591298543962042
best_error: 6.591298538794255
best_error: 6.591266916313758
best_error: 6.591266911419032
best_error: 6.591248303660945
best_error: 6.591248298468364
best_error: 6.591238405237201
best_error: 6.591238400067402
best_error: 6.591217590190809
best_error: 6.5912175850359915
best_error: 6.5908291012421065
best_error: 6.590829095871057
best_error: 6.588012886359131
best_error: 6.5880128811508225
best_error: 6.570030908993955
best_error: 6.570030907730409
best_error: 6.570030907104015
best_error: 6.570030898677679
best_error: 6.5688305936195075
best_error: 6.568830584478905
best_error: 6.561818469973878
best_error: 6.561818463353825
best_error: 6.551185133608069
best_error: 6.551185127049137
best_error: 6.520853267728146
best_error: 6.520853257036856
best_error: 6.403220163454504
best_error: 6.403220141306083
best_error: 6.40322013604915
best_error: 6.317785533930479
best_error: 6.317785503978172
best_error: 6.317785459096713
best_error: 6.283637576441201
best_error: 6.283637547783181
best_error: 6.283637515629127
best_error: 6.048370559480009
best_error: 6.048370551516978
best_error: 6.048370545453706
best_error: 6.026495982923979
best_error: 6.026495977097976
best_error: 6.026495975845815
best_error: 6.025015051960999
best_error: 6.025015026364605
best_error: 6.025014190024967
best_error: 6.0250141639882155
best_error: 5.977752417392344
best_error: 5.977752413325844
best_error: 5.977752412378248
best_error: 5.9766267607560835
best_error: 5.976626435002412
best_error: 5.976285048414032
best_error: 5.976285044425852
best_error: 5.976285043608337
best_error: 5.976179889442229
best_error: 5.976179885488431
best_error: 5.976179884743148
best_error: 5.976134538379851
best_error: 5.9761345344264365
best_error: 5.976134533681659
best_error: 5.976112801562531
best_error: 5.976112797614138
best_error: 5.9761127968907575
best_error: 5.976101477503692
best_error: 5.97610147355539
best_error: 5.976101472832136
best_error: 5.97609569848874
best_error: 5.976095694540489
best_error: 5.9760956938172995
best_error: 5.976092667388931
best_error: 5.9760926634407046
best_error: 5.9760926627175515
best_error: 5.976090993024074
best_error: 5.976090989075862
best_error: 5.976090988352724
best_error: 5.976089949141327
best_error: 5.97608994519312
best_error: 5.9760899444699955
best_error: 5.976089176022657
best_error: 5.976089172074458
best_error: 5.976089171351344
best_error: 5.976089035059867
best_error: 5.976089031111667
best_error: 5.976089030388556
best_error: 5.9760890084904394
best_error: 5.976088968810135
best_error: 5.976088964861939
best_error: 5.9760889641388255
best_error: 5.9760889377508235
best_error: 5.9760889338026235
best_error: 5.976088933079513
best_error: 5.976088930310178
best_error: 5.976088902355508
best_error: 5.976088899413802
best_error: 5.976088830523283
