ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.650121780128092
best_error: 24.65012127521088
best_error: 4.960155145067116
best_error: 4.960155144542653
best_error: 4.960098133506979
best_error: 4.960098133502459
best_error: 4.960098133484717
best_error: 4.959869599237382
best_error: 4.959869599232831
best_error: 4.959869599215075
best_error: 4.958947570409169
best_error: 4.958947570404486
best_error: 4.958947570386687
best_error: 4.955127578518427
best_error: 4.955127578513143
best_error: 4.955127578495199
best_error: 4.937351899109028
best_error: 4.937351899099547
best_error: 4.937351899081915
best_error: 4.595078721180477
best_error: 4.595078712552789
best_error: 4.541060340506089
best_error: 4.541060328361075
best_error: 4.462804352780397
best_error: 4.46280433484247
best_error: 3.783514679496043
best_error: 3.783514620853739
best_error: 3.195299515163943
best_error: 3.195299370468371
best_error: 3.0014698411863905
best_error: 3.001469679455635
best_error: 2.9358201268378945
best_error: 2.935820051752543
best_error: 2.935820030195281
best_error: 2.9319843318776226
best_error: 2.9319842259770126
best_error: 2.886848498459665
best_error: 2.8868484664679177
best_error: 2.87804906420792
best_error: 2.8780490314218223
best_error: 2.851296165027815
best_error: 2.8512961471024614
best_error: 2.8232134056555345
best_error: 2.8232133652792526
best_error: 2.7076246956220276
best_error: 2.707624662864539
best_error: 2.5834874162567103
best_error: 2.583487256283462
best_error: 2.440291839002221
best_error: 2.4402916761519013
best_error: 2.2339059556061525
best_error: 2.2339058501810554
best_error: 2.090111414755995
best_error: 2.0901113394413935
best_error: 2.076740120528429
best_error: 2.076740118271621
best_error: 2.0767401174746674
best_error: 2.0767401170162922
best_error: 2.0365286135386507
best_error: 2.036528610456724
best_error: 2.0365286098439004
best_error: 1.8679197487029018
best_error: 1.8679197280983328
best_error: 1.8641815724506043
best_error: 1.8641815506164883
best_error: 1.8473511252148611
best_error: 1.8473510834010165
best_error: 1.8442337032757377
best_error: 1.8442336885595578
best_error: 1.843948728037146
best_error: 1.8439487037754736
best_error: 1.8435744488503638
best_error: 1.8435744445931634
best_error: 1.8435030626122277
best_error: 1.8435030614333767
best_error: 1.8435030608185
best_error: 1.8431753846523322
best_error: 1.843175378913713
best_error: 1.842321969693515
best_error: 1.8423219556179031
best_error: 1.8405379297792515
best_error: 1.8405379002265376
best_error: 1.8367215368725716
best_error: 1.8367214978176083
best_error: 1.830007655664465
best_error: 1.8300076019827498
best_error: 1.8267874158515185
best_error: 1.826787364201279
best_error: 1.8232732565566963
best_error: 1.8232731998440586
best_error: 1.8196264684366883
best_error: 1.8196264354605856
best_error: 1.8170488447608915
best_error: 1.8170488197680452
best_error: 1.8143380036365158
best_error: 1.8143379797111059
best_error: 1.813866312678413
best_error: 1.8138662761913877
best_error: 1.8125951069936952
best_error: 1.8125951061216798
best_error: 1.8125951026088327
best_error: 1.812569987505145
best_error: 1.8125699869022924
best_error: 1.8125386030130883
best_error: 1.812538601241031
best_error: 1.8125331523489614
best_error: 1.8125331518462937
best_error: 1.8125331516904837
best_error: 1.8125215943873112
best_error: 1.8125215924057057
best_error: 1.8125068923756171
best_error: 1.8125068901809471
best_error: 1.812424377217735
best_error: 1.812424374413428
best_error: 1.8123588008583262
best_error: 1.8123587989984884
best_error: 1.8122949491264322
best_error: 1.8122949483553108
best_error: 1.81228246211921
best_error: 1.8122824560616277
best_error: 1.8122641953673868
best_error: 1.8122641908310078
best_error: 1.8121875957882596
best_error: 1.8121875925588933
best_error: 1.8119515808836641
best_error: 1.8119515752968016
best_error: 1.8110644984927753
best_error: 1.8110644918715841
best_error: 1.808278270308986
best_error: 1.808278269258756
best_error: 1.8082782691721453
best_error: 1.8078262021877611
best_error: 1.8078261799392958
best_error: 1.8078124783643035
best_error: 1.8078124452515743
best_error: 1.8067602702447367
best_error: 1.8067602531333562
best_error: 1.8067552467876222
best_error: 1.8067552257365955
best_error: 1.8039529090058004
best_error: 1.8039529039657116
best_error: 1.8039370887909707
best_error: 1.8039370780625996
best_error: 1.8009906370486635
best_error: 1.8009906304549117
best_error: 1.799218805806828
best_error: 1.7992187971987337
best_error: 1.7992125163016721
best_error: 1.7992125099814458
best_error: 1.7980234123292373
best_error: 1.7980234007209228
best_error: 1.7979393177584473
best_error: 1.797939310309047
best_error: 1.7969823630659891
best_error: 1.7969823589638865
best_error: 1.7969823421624458
best_error: 1.7967178056522455
best_error: 1.7967177477447438
best_error: 1.7956394461289082
best_error: 1.7956394448745308
best_error: 1.7956394124839739
best_error: 1.7924191505472473
best_error: 1.792419131000618
best_error: 1.7905204295978954
best_error: 1.7905204124465863
best_error: 1.7902081446070028
best_error: 1.7902081441768265
best_error: 1.7899497205937587
best_error: 1.7899497193407907
best_error: 1.7899035287883565
best_error: 1.7899035287010767
best_error: 1.7897941025514077
best_error: 1.7897940993374033
best_error: 1.7897402453638143
best_error: 1.7897402397762356
best_error: 1.7896362974852575
best_error: 1.7896362972896036
best_error: 1.7896362958196517
best_error: 1.7893014780672793
best_error: 1.7893014718887514
best_error: 1.7889168082289664
best_error: 1.7889167969951143
best_error: 1.7879071399843138
best_error: 1.7879071227706083
best_error: 1.7876341846114983
best_error: 1.787634166903367
best_error: 1.7866711240132762
best_error: 1.7866711176710566
best_error: 1.7862872274776629
best_error: 1.7862872083632069
best_error: 1.7859085441451727
best_error: 1.7859085418942855
best_error: 1.7858812257417864
best_error: 1.785881224293874
best_error: 1.785873869441805
best_error: 1.785873867863804
best_error: 1.7858669431327283
best_error: 1.785866942400525
best_error: 1.7858633575145901
best_error: 1.7858633573704963
best_error: 1.7858624093156124
best_error: 1.7858624090163324
best_error: 1.785859623375018
best_error: 1.7858596227748973
best_error: 1.785852105673663
best_error: 1.7858521040166113
best_error: 1.7858234454859643
best_error: 1.7858234431035833
best_error: 1.7856555619585182
best_error: 1.7856555543635582
best_error: 1.7854634829984726
best_error: 1.7854634718526938
best_error: 1.784605577704873
best_error: 1.7846055645882364
best_error: 1.78431120537918
best_error: 1.7843111759942014
best_error: 1.7834504662037236
best_error: 1.7834504534491513
best_error: 1.781615856712165
best_error: 1.7816158209610182
best_error: 1.7797708105283017
best_error: 1.7797707755455545
best_error: 1.7789966937713777
best_error: 1.778996681340581
best_error: 1.778801805554627
best_error: 1.7788018053639363
best_error: 1.778801805309965
best_error: 1.7788018052081838
best_error: 1.7788018050953704
best_error: 1.778440502539983
best_error: 1.778440497443344
best_error: 1.778071714254674
best_error: 1.7780717093713625
best_error: 1.777356090329134
best_error: 1.7773560784266442
best_error: 1.7769823951071502
best_error: 1.776982389950694
best_error: 1.7765330166777544
best_error: 1.7765330131803245
best_error: 1.7764857975140245
best_error: 1.776485796615546
best_error: 1.776421200166556
best_error: 1.7764212001501696
best_error: 1.7763976465625726
best_error: 1.776397646489612
best_error: 1.7763913233836015
best_error: 1.7763913233820685
