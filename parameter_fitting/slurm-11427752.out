ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.837514343463155
best_error: 23.837513732325245
best_error: 4.958444879879491
best_error: 4.958444879347167
best_error: 4.958396520615364
best_error: 4.958396520611456
best_error: 4.958396520602762
best_error: 4.958202730598952
best_error: 4.9582027305950165
best_error: 4.958202730586327
best_error: 4.957421871356902
best_error: 4.957421871352851
best_error: 4.957421871344184
best_error: 4.954203782246619
best_error: 4.954203782242052
best_error: 4.954203782233505
best_error: 4.939573062093204
best_error: 4.939573062085207
best_error: 4.93957306207806
best_error: 4.783556464710667
best_error: 4.783556463576364
best_error: 4.771792119327361
best_error: 4.771792117922172
best_error: 4.754192330983543
best_error: 4.754192329107458
best_error: 3.6345729197673404
best_error: 3.634572853482148
best_error: 3.629274650155923
best_error: 3.6292745882312465
best_error: 3.6292570826230923
best_error: 3.6292570763188765
best_error: 3.6292570234520616
best_error: 3.629203736413196
best_error: 3.6292037346797996
best_error: 3.629203675679356
best_error: 3.54378276798387
best_error: 3.543782739792868
best_error: 3.5437827009788587
best_error: 3.3191666514680462
best_error: 3.31916642607691
best_error: 3.256419694606987
best_error: 3.2564194941822935
best_error: 3.1259940380248548
best_error: 3.125994006161239
best_error: 3.121701036998091
best_error: 3.121701002751077
best_error: 3.1162902652893973
best_error: 3.1162902135417005
best_error: 3.076239713941325
best_error: 3.0762396859745564
best_error: 3.0024899407482355
best_error: 3.0024899092610555
best_error: 2.9804071147514977
best_error: 2.980407023277037
best_error: 2.9510915885155247
best_error: 2.9510914970773765
best_error: 2.848908527917702
best_error: 2.848908524127715
best_error: 2.848908521792906
best_error: 2.7960310241201283
best_error: 2.7960308048019815
best_error: 2.740874575511405
best_error: 2.7408745086554616
best_error: 2.7032071474612436
best_error: 2.7032071276006815
best_error: 2.680566901779089
best_error: 2.680566901777535
best_error: 2.680566898641416
best_error: 2.6740833653519034
best_error: 2.674083365351075
best_error: 2.6740833625296183
best_error: 2.6575314876633103
best_error: 2.6575314407738944
best_error: 2.472921351734125
best_error: 2.4729213215132533
best_error: 2.3898738988151234
best_error: 2.3898738983449572
best_error: 2.3898738917390325
best_error: 2.3686934004429996
best_error: 2.3686931553872244
best_error: 2.3286484986107236
best_error: 2.3286484186701033
best_error: 2.267774475471221
best_error: 2.267774474415901
best_error: 2.2677744665183956
best_error: 2.2573718771668685
best_error: 2.2573718456276652
best_error: 2.2276832204341694
best_error: 2.2276832023907875
best_error: 2.195947025443359
best_error: 2.195947020326066
best_error: 2.195947017601921
best_error: 2.057548839281536
best_error: 2.057548705125088
best_error: 2.0358313816435603
best_error: 2.0358313642766763
best_error: 2.0236999362040167
best_error: 2.0236998711964045
best_error: 2.0180696824790805
best_error: 2.018069620498154
best_error: 2.015228575984643
best_error: 2.0152285746079603
best_error: 2.0152285719901384
best_error: 2.0152285717884415
best_error: 2.0115415415619022
best_error: 2.011541535003063
best_error: 2.0029776430283133
best_error: 2.0029776285552194
best_error: 1.9680893352753173
best_error: 1.9680893239575727
best_error: 1.928117737820772
best_error: 1.928117737230798
best_error: 1.9281177364395292
best_error: 1.9281177355920505
best_error: 1.9185958443010267
best_error: 1.918595815508675
best_error: 1.9121946334540778
best_error: 1.9121945991798952
best_error: 1.9106584789385404
best_error: 1.9106584633870383
best_error: 1.9102830371038755
best_error: 1.910283031411662
best_error: 1.9101949252911703
best_error: 1.9101949216436238
best_error: 1.9100918534091087
best_error: 1.9100918472366424
best_error: 1.9098622702929875
best_error: 1.9098622650686423
best_error: 1.9090468819491082
best_error: 1.9090468716913869
best_error: 1.908852963209877
best_error: 1.9088529582780134
best_error: 1.9087434618394936
best_error: 1.9087434581609046
best_error: 1.9087300818734132
best_error: 1.9087300813585875
best_error: 1.908730081298398
best_error: 1.9087244002551464
best_error: 1.9087243996858552
best_error: 1.9087185294528013
best_error: 1.9087185292130646
best_error: 1.9087185288753445
best_error: 1.9086863312567715
best_error: 1.9086863308485358
best_error: 1.9086863307563953
best_error: 1.908611598399215
best_error: 1.908611598378219
best_error: 1.9086115979065241
best_error: 1.907442821208555
best_error: 1.9074428210837513
best_error: 1.90744282079911
best_error: 1.9074428206234932
best_error: 1.9046489999982874
best_error: 1.9046489580060564
best_error: 1.9004090436254137
best_error: 1.900409011743149
best_error: 1.8992156294162859
best_error: 1.8992156282016703
best_error: 1.899215627239558
best_error: 1.892882176195565
best_error: 1.8928821757800727
best_error: 1.8928821750468792
best_error: 1.8928821745364213
best_error: 1.8909610588645922
best_error: 1.890961057449656
best_error: 1.8909610572600644
best_error: 1.8904941294660509
best_error: 1.8904941277499165
best_error: 1.8845428814429934
best_error: 1.8845428813929335
best_error: 1.8845428792990766
best_error: 1.883249796523914
best_error: 1.8832497776872605
best_error: 1.8829262821825459
best_error: 1.8829262638892736
best_error: 1.8827019468101813
best_error: 1.8827019463788632
best_error: 1.8826896534856659
best_error: 1.8826896533660042
best_error: 1.8826752179459338
best_error: 1.882675216444805
best_error: 1.8826563678594672
best_error: 1.882656365733939
best_error: 1.8826249027872126
best_error: 1.8826249003051787
best_error: 1.882594883314156
best_error: 1.8825948817640292
best_error: 1.8825460938916698
best_error: 1.8825460924422515
best_error: 1.8825302611791812
best_error: 1.882530260497195
best_error: 1.8824244247336681
best_error: 1.8824244247300126
best_error: 1.882424424700036
best_error: 1.8824244246668047
best_error: 1.8824244246540491
best_error: 1.8821684167374086
best_error: 1.8821684104706489
best_error: 1.881460805484281
best_error: 1.8814607959501422
best_error: 1.8814029838349597
best_error: 1.8814029838173894
best_error: 1.8800946396190605
best_error: 1.8800946395687976
best_error: 1.8796900000861938
best_error: 1.879689999960461
best_error: 1.8792195973628667
best_error: 1.879219591121782
best_error: 1.879159889327344
best_error: 1.8791598856881493
best_error: 1.8791113039450582
best_error: 1.8791113036556144
best_error: 1.8791100674468313
best_error: 1.8791100668070397
best_error: 1.8791097791324936
best_error: 1.8791097789991804
best_error: 1.8791096957591762
best_error: 1.879109695618432
best_error: 1.8791087176412944
best_error: 1.8791087174358563
best_error: 1.8791087174038297
best_error: 1.8791071208049934
best_error: 1.8791071205691037
best_error: 1.8791053014747987
best_error: 1.879105300990461
best_error: 1.8791012571628627
best_error: 1.879101257118064
best_error: 1.8791012571079104
best_error: 1.879091308124648
best_error: 1.8790913078974032
best_error: 1.879069855605573
best_error: 1.8790698539423578
best_error: 1.879016822455975
best_error: 1.8790168213587897
best_error: 1.8789428323745268
best_error: 1.8789428190986996
best_error: 1.8787523062243354
best_error: 1.8787522999334378
best_error: 1.8786041704633762
best_error: 1.8786041608181787
best_error: 1.8784418547495818
best_error: 1.8784418486993217
best_error: 1.8783418991274798
best_error: 1.8783418966014478
best_error: 1.878335894510334
best_error: 1.8783358942555934
best_error: 1.8783343449035046
best_error: 1.878334344660685
best_error: 1.8783321865437501
best_error: 1.8783321835818456
best_error: 1.8783269511323244
best_error: 1.8783269480615445
best_error: 1.8782505031283105
best_error: 1.8782504958373374
best_error: 1.8781279497435688
best_error: 1.8781279403046078
best_error: 1.878086649247996
best_error: 1.8780866475040807
best_error: 1.878082012542346
best_error: 1.8780820118178019
best_error: 1.8780798809913102
best_error: 1.8780798804595409
best_error: 1.8780784478545964
best_error: 1.878078447418588
best_error: 1.8780773718551698
best_error: 1.8780773715585783
best_error: 1.878074870975544
best_error: 1.8780748685516544
best_error: 1.87807050642177
best_error: 1.8780705046920392
