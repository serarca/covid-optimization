ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 90
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.56898979944829
best_error: 97.56898966771197
best_error: 20.346463458401782
best_error: 20.346462841262053
best_error: 20.34645859952413
best_error: 13.318618002756658
best_error: 13.31861799986255
best_error: 13.318617929252827
best_error: 13.22918072407963
best_error: 13.22918072091736
best_error: 13.229180643613228
best_error: 12.792046421449166
best_error: 12.79204641731759
best_error: 12.7920463098655
best_error: 10.337896750040077
best_error: 10.337896750039596
best_error: 10.337896747399158
best_error: 10.33789673317994
best_error: 10.3140931748006
best_error: 10.314093174800211
best_error: 10.314093173129491
best_error: 10.314093162025854
best_error: 10.312339958563493
best_error: 10.31233995856309
best_error: 10.312339956864495
best_error: 10.312339945704583
best_error: 10.310529291523173
best_error: 10.310529291522768
best_error: 10.310529289795575
best_error: 10.31052927860239
best_error: 10.300184554523634
best_error: 10.300184554523167
best_error: 10.300184552264684
best_error: 10.300184539157453
best_error: 10.252214501959124
best_error: 10.252214501958633
best_error: 10.252214499815015
best_error: 10.252214487975525
best_error: 9.952070849136838
best_error: 9.952070848367486
best_error: 9.952070846246542
best_error: 9.952070837456018
best_error: 9.78245114553151
best_error: 9.782451143028272
best_error: 9.782451139260465
best_error: 9.782451132855812
best_error: 9.689549388068288
best_error: 9.689549386291976
best_error: 9.689549382213265
best_error: 9.689549377430975
best_error: 9.626605641387528
best_error: 9.626605458060384
best_error: 9.512777126687313
best_error: 9.51277706508391
best_error: 9.51277706188932
best_error: 9.372188144594384
best_error: 9.372188108722874
best_error: 9.372188095879899
best_error: 9.198880261870555
best_error: 9.198880244232564
best_error: 9.198880217828885
best_error: 9.096377379552859
best_error: 9.096377359320948
best_error: 9.09637733415655
best_error: 9.058363427104647
best_error: 9.058363425860811
best_error: 9.058363402416754
best_error: 9.058363384147231
best_error: 9.040179720844515
best_error: 9.04017969420648
best_error: 9.04017968482697
best_error: 9.025050401447226
best_error: 9.025050364948887
best_error: 8.800636846879883
best_error: 8.800636788238455
best_error: 8.38091429409584
best_error: 8.380914261837694
best_error: 8.38091425203503
best_error: 7.88627688233118
best_error: 7.886276866205959
best_error: 7.8862768598709865
best_error: 7.886276856992972
best_error: 7.781026218877243
best_error: 7.781026205039588
best_error: 7.781026197642978
best_error: 7.778970330690536
best_error: 7.778969878265293
best_error: 7.762732445464882
best_error: 7.762732189951626
best_error: 7.720091540022225
best_error: 7.720091525403406
best_error: 7.7200915097770615
best_error: 7.7106494052138235
best_error: 7.710649223408005
best_error: 7.686853831013911
best_error: 7.6868538180658
best_error: 7.686853802945922
best_error: 7.653014954899639
best_error: 7.653014953133144
best_error: 7.653014936334314
best_error: 7.565771768664225
best_error: 7.565771763135427
best_error: 7.565771756250518
best_error: 7.561012031636339
best_error: 7.561012025816759
best_error: 7.5610120204442985
best_error: 7.561012018753496
best_error: 7.5597920762417985
best_error: 7.559791729240505
best_error: 7.5444993000162075
best_error: 7.544498905547105
best_error: 7.514605362333415
best_error: 7.514604974863701
best_error: 7.423819939117666
best_error: 7.423819931324738
best_error: 7.4238199268630165
best_error: 7.411197958241737
best_error: 7.411197937200419
best_error: 7.411197519918317
best_error: 7.346022224928575
best_error: 7.34602222020821
best_error: 7.346022038913837
best_error: 7.274309889055219
best_error: 7.274309871933613
best_error: 7.218086538778524
best_error: 7.218085971112744
best_error: 7.169617936728437
best_error: 7.169617919612121
best_error: 7.120519852923422
best_error: 7.120519851640589
best_error: 7.120519478732684
best_error: 7.118311976846886
best_error: 7.118311960739277
best_error: 7.0764330882919575
best_error: 7.076433074695298
best_error: 7.061659925092856
best_error: 7.061659917427267
best_error: 7.061659854577447
best_error: 7.05887967235551
best_error: 7.058879173144979
best_error: 7.0463214950757385
best_error: 7.046321486237033
best_error: 7.025675231357117
best_error: 7.025675225701013
best_error: 7.025675192035639
best_error: 6.984961103431505
best_error: 6.984961102741585
best_error: 6.984961015014237
best_error: 6.948998013975069
best_error: 6.948997920999702
best_error: 6.948841021913968
best_error: 6.948841020974565
best_error: 6.943435567397547
best_error: 6.943435565345837
best_error: 6.943435514315815
best_error: 6.939480648268505
best_error: 6.939480639748173
best_error: 6.93677862845931
best_error: 6.936778624457631
best_error: 6.934491503218717
best_error: 6.934491500344618
best_error: 6.934491467608048
best_error: 6.934108193245886
best_error: 6.934107870675115
best_error: 6.933235574676947
best_error: 6.933235571485082
best_error: 6.933235547652818
best_error: 6.932819012164503
best_error: 6.9328190077354614
best_error: 6.932624831775701
best_error: 6.93262482732799
best_error: 6.932507895415487
best_error: 6.932507890956407
best_error: 6.932486413246845
best_error: 6.932486408785665
best_error: 6.932475563592303
best_error: 6.93247555913101
best_error: 6.93246871402827
best_error: 6.932468709566902
best_error: 6.932464351344313
best_error: 6.932464346882897
best_error: 6.932461535741103
best_error: 6.932461531279661
best_error: 6.93245968166734
best_error: 6.93245967720589
best_error: 6.932458421558335
best_error: 6.932458417096852
best_error: 6.932457519914669
best_error: 6.932457515453194
best_error: 6.932456816887611
best_error: 6.932456812426123
best_error: 6.9324563288779535
best_error: 6.932456324416446
best_error: 6.93245595767752
best_error: 6.932455953216008
best_error: 6.9324556524218135
best_error: 6.932455647960298
best_error: 6.932455423462986
best_error: 6.932455419001463
best_error: 6.932455375675073
best_error: 6.932455274680723
best_error: 6.932455270219195
best_error: 6.932455180818752
best_error: 6.932455174448058
best_error: 6.93245516475957
