ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.215816023663603
best_error: 22.21581602065433
best_error: 22.215816005417338
best_error: 22.215815969642485
best_error: 4.23060337275115
best_error: 4.230603365399123
best_error: 2.644460704294017
best_error: 2.6444605621166044
best_error: 2.6444590120435207
best_error: 2.2873695015691538
best_error: 2.2873694089767485
best_error: 2.2873640352018305
best_error: 2.2860903043518
best_error: 2.286090270911222
best_error: 2.2860902517151054
best_error: 2.2860848107714777
best_error: 2.282753486279097
best_error: 2.282753473321575
best_error: 2.2827534149466127
best_error: 2.2827357954484016
best_error: 2.282735780810534
best_error: 2.282735725571977
best_error: 2.138924353417812
best_error: 2.1389243513094063
best_error: 2.138924289839659
best_error: 1.7233103589212513
best_error: 1.723310275900389
best_error: 1.6137392507846096
best_error: 1.6137391680123863
best_error: 1.5433347895087923
best_error: 1.543334767128477
best_error: 1.4260124197843664
best_error: 1.4260123979531851
best_error: 1.3994103540193927
best_error: 1.3994103523443782
best_error: 1.3994103272168468
best_error: 1.393403768770306
best_error: 1.3934037052993975
best_error: 1.3934036992828929
best_error: 1.3666376809624383
best_error: 1.3666376365478907
best_error: 1.3666376278322607
best_error: 1.3414310467640163
best_error: 1.341431041493286
best_error: 1.3414310388569255
best_error: 1.3185184897532027
best_error: 1.3185184552915357
best_error: 1.3119949435817757
best_error: 1.3119948626658382
best_error: 1.3073968403497178
best_error: 1.3073968388131243
best_error: 1.307396838338084
best_error: 1.304358721888035
best_error: 1.3043587218381842
best_error: 1.3043587211019316
best_error: 1.3043587205342917
best_error: 1.3022502639377558
best_error: 1.3022502626580055
best_error: 1.301710409916957
best_error: 1.3017104036112948
best_error: 1.300731222375612
best_error: 1.3007312006675675
best_error: 1.2992053822948089
best_error: 1.2992053677588011
best_error: 1.2962694118532667
best_error: 1.2962694058184983
best_error: 1.2934188032346468
best_error: 1.293418792966342
best_error: 1.285231769542103
best_error: 1.2852317522561874
best_error: 1.2624647596056173
best_error: 1.2624647382726193
best_error: 1.2469524505044014
best_error: 1.2469523857499427
best_error: 1.2416052973964582
best_error: 1.2416052315572048
best_error: 1.1891597485819698
best_error: 1.1891596922713683
best_error: 1.0705488374335135
best_error: 1.0705488369521006
best_error: 1.070548836281343
best_error: 1.0587347050204823
best_error: 1.058734697443994
best_error: 1.0535457311897958
best_error: 1.053545729066132
best_error: 1.0535457281393272
best_error: 1.0491971144074967
best_error: 1.0491971122682235
best_error: 1.0491971119142482
best_error: 1.0477977968342556
best_error: 1.0477977942766323
best_error: 1.0477977729069203
best_error: 1.047797594726361
best_error: 1.0453739357446907
best_error: 1.0453739188313445
best_error: 1.0449523422202054
best_error: 1.0449523161119598
best_error: 1.0440092105204122
best_error: 1.0440092087044315
best_error: 1.0440092077488368
best_error: 1.0437908981144879
best_error: 1.0437908969258458
best_error: 1.0437908943692236
best_error: 1.0437908938720126
best_error: 1.0437330987805964
best_error: 1.043733095465381
best_error: 1.0437330948179997
best_error: 1.0437330946588257
best_error: 1.043643758109551
best_error: 1.0436437557964704
best_error: 1.0436437545148898
best_error: 1.043643754427923
best_error: 1.0418772455490355
best_error: 1.0418772452084561
best_error: 1.0418772451076954
best_error: 1.0418772426837448
best_error: 1.0241430096950972
best_error: 1.024143005865632
best_error: 0.9950418102480377
best_error: 0.9950417892255077
best_error: 0.9950417590131775
best_error: 0.9932230538583497
best_error: 0.9932229451135298
best_error: 0.9932227642831367
best_error: 0.9919902750883165
best_error: 0.9919902685749888
best_error: 0.9919902169984043
best_error: 0.9901689333845992
best_error: 0.9901688471160963
best_error: 0.990168742716361
best_error: 0.987577225262916
best_error: 0.9875772185215047
best_error: 0.9873364878612272
best_error: 0.9873364784693431
best_error: 0.9871765734933611
best_error: 0.9871765691646702
best_error: 0.9871437049917846
best_error: 0.9871437045009145
best_error: 0.9871437037555509
best_error: 0.9871437016626758
best_error: 0.9871267123094689
best_error: 0.9871267118718821
best_error: 0.9871267110388995
best_error: 0.9871267089390724
best_error: 0.9870987223217128
best_error: 0.9870987220706782
best_error: 0.9870987219213214
best_error: 0.9870987208793776
best_error: 0.9870987188477005
best_error: 0.987067298042896
best_error: 0.9870672978230292
best_error: 0.9870672976480431
best_error: 0.9870672966138536
best_error: 0.9870672945677661
best_error: 0.9867903364637541
best_error: 0.986790336209436
best_error: 0.9867903360774022
best_error: 0.9867903352774695
best_error: 0.986790332934057
best_error: 0.9865761918325314
best_error: 0.9865761914956873
best_error: 0.9865761914413466
best_error: 0.9865761908051559
best_error: 0.9865761882835122
best_error: 0.9861765558775345
best_error: 0.9861765532431693
best_error: 0.9861765523149608
best_error: 0.9861389628613004
best_error: 0.9861389514664382
best_error: 0.9858729680002618
best_error: 0.9858729582879627
best_error: 0.9855191575302774
best_error: 0.9855191451704346
best_error: 0.9847021439478507
best_error: 0.9847021408569787
best_error: 0.9845452661277138
best_error: 0.9845452661144077
best_error: 0.9845452653775051
best_error: 0.9845452648172333
best_error: 0.9845294732044481
best_error: 0.9845294729465346
best_error: 0.9845294725119339
best_error: 0.9845294720530774
best_error: 0.9845242548336354
best_error: 0.9845242543737386
best_error: 0.9845242541132423
best_error: 0.9845242537159864
best_error: 0.9844933366032171
best_error: 0.9844933349786582
best_error: 0.9844396706298183
best_error: 0.9844396684306844
best_error: 0.9843269968540241
best_error: 0.984326993761998
best_error: 0.9839205676383653
best_error: 0.9839205631481142
best_error: 0.9839205602880976
best_error: 0.9833529681837112
best_error: 0.9833529624447714
best_error: 0.9833529550894228
best_error: 0.9815844462155858
best_error: 0.9815844379587009
best_error: 0.9815844230939823
best_error: 0.97817542457928
best_error: 0.978175405461339
best_error: 0.9781753890897157
best_error: 0.970765431395204
best_error: 0.9707654177960872
best_error: 0.9707653788908475
best_error: 0.9586623643840038
best_error: 0.9586622286263821
best_error: 0.9586621758627516
best_error: 0.9509562821085624
best_error: 0.9509561871507557
best_error: 0.9391261275984562
best_error: 0.9391260662843961
best_error: 0.9278313659237171
best_error: 0.9278313007656597
best_error: 0.9136908780085004
best_error: 0.9136907352258028
best_error: 0.9007250044422098
best_error: 0.9007249372328929
best_error: 0.8743132808907005
best_error: 0.8743132258905447
best_error: 0.8284051040993655
best_error: 0.8284050437182594
best_error: 0.8237299211993038
best_error: 0.8237298216806989
best_error: 0.8119551376117833
best_error: 0.8119551241207952
best_error: 0.8087080864581935
best_error: 0.8087080823162589
best_error: 0.8085494683971324
best_error: 0.8085494639964953
best_error: 0.808536698538539
best_error: 0.8085366940357792
best_error: 0.807147743481405
best_error: 0.8071477394902812
best_error: 0.80559584283592
best_error: 0.8055957772873623
best_error: 0.7850758014575285
best_error: 0.7850756668927644
best_error: 0.768241883243509
best_error: 0.7682418316653523
best_error: 0.7662129278794613
best_error: 0.7662129067046779
best_error: 0.7607960600806059
best_error: 0.7607960587816833
best_error: 0.7568908279327107
best_error: 0.7568908264747546
best_error: 0.7448708607037651
best_error: 0.7448707999728116
best_error: 0.7446368594051394
best_error: 0.7446367745944786
best_error: 0.7204911313348002
best_error: 0.7204911268757396
best_error: 0.7204911224153483
best_error: 0.7126950138458668
best_error: 0.7126950107431211
best_error: 0.7126950068366864
best_error: 0.7055844663269685
best_error: 0.705584445815451
best_error: 0.7049098319259887
best_error: 0.7049098060461445
best_error: 0.7042177833035005
best_error: 0.7042177721902847
best_error: 0.7039810600398937
best_error: 0.7039810569111244
best_error: 0.703825383301093
best_error: 0.7038253778768925
best_error: 0.7038093636490291
best_error: 0.7038093610203885
best_error: 0.7037980142956435
best_error: 0.7037980140393195
best_error: 0.7037980136997076
best_error: 0.7037980136183767
best_error: 0.7037583784517268
best_error: 0.7037583761350487
best_error: 0.7036711857780575
best_error: 0.7036711802415714
best_error: 0.7035137924881703
best_error: 0.7035137855200039
best_error: 0.7035132848209957
best_error: 0.7035132775119226
best_error: 0.7034994593766161
best_error: 0.7034994478200238
