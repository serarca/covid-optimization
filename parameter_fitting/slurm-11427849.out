ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.28102765170037
best_error: 22.28102740577425
best_error: 4.50211679609736
best_error: 4.50211679453156
best_error: 4.50108953516903
best_error: 4.5010895351538815
best_error: 4.501089535029958
best_error: 4.496929677088769
best_error: 4.496929677073001
best_error: 4.496929676948261
best_error: 4.47938352613023
best_error: 4.479383526111567
best_error: 4.479383525983536
best_error: 4.388779208211331
best_error: 4.388779208166849
best_error: 4.388779208028414
best_error: 4.256963426120837
best_error: 4.256963425970938
best_error: 4.256963425867497
best_error: 3.974979055336428
best_error: 3.974979054203494
best_error: 3.901569740261708
best_error: 3.9015697385869954
best_error: 3.404505486090223
best_error: 3.4045053595230432
best_error: 2.9509868284834413
best_error: 2.9509868092252782
best_error: 2.8676848096537655
best_error: 2.8676847874382885
best_error: 2.8576052914247274
best_error: 2.857605276392679
best_error: 2.840258634597845
best_error: 2.840258616563419
best_error: 2.719946249942593
best_error: 2.719946213883146
best_error: 2.5092362417203686
best_error: 2.509236222849944
best_error: 2.5092361825231206
best_error: 2.225228487636796
best_error: 2.22522848118328
best_error: 2.2252283770846457
best_error: 2.0326360955734204
best_error: 2.032635953148759
best_error: 1.9255791584748343
best_error: 1.9255790972161921
best_error: 1.9226870966948206
best_error: 1.9226870554467665
best_error: 1.7729088536378075
best_error: 1.7729086624267703
best_error: 1.7597401478235861
best_error: 1.7597400667390088
best_error: 1.741722554510067
best_error: 1.7417225537505048
best_error: 1.7417225472834428
best_error: 1.7395723287937122
best_error: 1.7395722845830426
best_error: 1.7378147008968363
best_error: 1.7378146771297478
best_error: 1.736673332303741
best_error: 1.7366733219606203
best_error: 1.735611433309387
best_error: 1.7356114332480665
best_error: 1.735611432691281
best_error: 1.7356114270218317
best_error: 1.7271871216580679
best_error: 1.727187087466678
best_error: 1.711692727855885
best_error: 1.711692667231413
best_error: 1.6216330931903251
best_error: 1.6216330080192565
best_error: 1.6073166424453253
best_error: 1.607316561330728
best_error: 1.5573020989279474
best_error: 1.5573020383044531
best_error: 1.5253335286958691
best_error: 1.5253334371031624
best_error: 1.5076030080377811
best_error: 1.5076029546377034
best_error: 1.440650857676156
best_error: 1.440650812246118
best_error: 1.2605807667837812
best_error: 1.2605807257656583
best_error: 1.2347977728493336
best_error: 1.234797760096793
best_error: 1.2325561080427836
best_error: 1.232556071903959
best_error: 1.2291366422873968
best_error: 1.2291366044837708
best_error: 1.2154658188734873
best_error: 1.2154657515471796
best_error: 1.2122501987217769
best_error: 1.2122501363575908
best_error: 1.208158318456447
best_error: 1.208158264711691
best_error: 1.1958296009119644
best_error: 1.1958295804063668
best_error: 1.1927329787571312
best_error: 1.1927329769206312
best_error: 1.1927329747227453
best_error: 1.1844400849048595
best_error: 1.1844400749473478
best_error: 1.181827304840557
best_error: 1.181827276510787
best_error: 1.180497269847761
best_error: 1.1804972462873136
best_error: 1.1803413607960955
best_error: 1.180341329800644
best_error: 1.1797135793055116
best_error: 1.17971356335788
best_error: 1.1794251428545754
best_error: 1.1794251428175737
best_error: 1.1794251424046178
best_error: 1.179425142110231
best_error: 1.1794251420749975
best_error: 1.1792867849432773
best_error: 1.1792867839801269
best_error: 1.1789019593135082
best_error: 1.1789019547344153
best_error: 1.1775563175895103
best_error: 1.1775563042106187
best_error: 1.175083538406436
best_error: 1.1750835182850883
best_error: 1.1690086217511864
best_error: 1.1690085917036341
best_error: 1.1689348638498784
best_error: 1.168934829349882
best_error: 1.1689180927371687
best_error: 1.1689180615183568
best_error: 1.1664778783457315
best_error: 1.1664778476859117
best_error: 1.1622993913604625
best_error: 1.1622993760805942
best_error: 1.1591826369109455
best_error: 1.159182623007419
best_error: 1.1580865041233492
best_error: 1.1580864976626652
best_error: 1.1576495376294
best_error: 1.1576495350775358
best_error: 1.1567037119269892
best_error: 1.1567037012363683
best_error: 1.1551331384427477
best_error: 1.1551331303429253
best_error: 1.154625213031779
best_error: 1.1546251889258212
best_error: 1.1525027339169867
best_error: 1.1525027189088883
best_error: 1.1448153157311851
best_error: 1.1448153152389688
best_error: 1.144815314797906
best_error: 1.1423491925494458
best_error: 1.1423491881519197
best_error: 1.1419468854445443
best_error: 1.141946878803597
best_error: 1.1413432935738874
best_error: 1.1413432932327527
best_error: 1.1413432901633547
best_error: 1.1412902978403938
best_error: 1.1412902965720102
best_error: 1.1412808562049197
best_error: 1.141280856033322
best_error: 1.1412808556583094
best_error: 1.1412780366479531
best_error: 1.1412780365767115
best_error: 1.1412780360998007
best_error: 1.1412308134702074
best_error: 1.141230811094451
best_error: 1.1410857839543933
best_error: 1.1410857790977251
best_error: 1.1407644699936024
best_error: 1.1407644629760083
best_error: 1.139450920446772
best_error: 1.1394509075074906
best_error: 1.1320861589045137
best_error: 1.1320861261572444
best_error: 1.1319109137494734
best_error: 1.1319109080378258
best_error: 1.1319108552992385
best_error: 1.1291412334495072
best_error: 1.1291412078542924
best_error: 1.1289990053541634
best_error: 1.1289989824087072
best_error: 1.1289982099893054
best_error: 1.128998187317265
best_error: 1.121578843132896
best_error: 1.1215788132007722
best_error: 1.119518305276712
best_error: 1.1195182789621978
best_error: 1.1194594478432873
best_error: 1.1194594233745483
best_error: 1.1194262476286976
best_error: 1.1194262247309774
best_error: 1.116010401049
best_error: 1.116010386253711
best_error: 1.113243038680878
best_error: 1.1132430193676615
best_error: 1.1129497674020963
best_error: 1.1129497246130782
best_error: 1.1100548079187411
best_error: 1.1100547991392304
best_error: 1.1100547837194574
best_error: 1.1067527342335488
best_error: 1.1067526799214054
best_error: 1.1010372108898179
best_error: 1.1010371575453242
best_error: 1.0974680886391117
best_error: 1.0974680805784152
best_error: 1.0922850489216451
best_error: 1.0922850465283958
best_error: 1.0910607242130974
best_error: 1.0910606991628784
best_error: 1.0907009648290293
best_error: 1.090700959018532
best_error: 1.0905093898187943
best_error: 1.0905093849903151
best_error: 1.0899439710192382
best_error: 1.089943968656399
best_error: 1.0893042717225412
best_error: 1.0893042676843083
best_error: 1.0890569597189768
best_error: 1.0890569592332975
best_error: 1.0889762358302415
best_error: 1.0889762356977084
best_error: 1.0889762355861812
best_error: 1.0886315836051421
best_error: 1.0886315826285111
best_error: 1.0881292953883053
best_error: 1.0881292948254593
best_error: 1.0875524261794036
best_error: 1.0875524259834777
best_error: 1.0875524256662294
best_error: 1.0875524252263429
best_error: 1.087287661646437
best_error: 1.0872876461513388
best_error: 1.0867410814941747
best_error: 1.0867410719578947
best_error: 1.0864857556848444
best_error: 1.0864857441359859
best_error: 1.0861605125721798
best_error: 1.0861605083106867
best_error: 1.0860954646720538
best_error: 1.0860954632238893
best_error: 1.0860847201910035
best_error: 1.0860847200587254
best_error: 1.0860847199226646
best_error: 1.0860847197685417
best_error: 1.0860266720025493
best_error: 1.0860266718271716
best_error: 1.085986258217705
best_error: 1.0859862556610897
best_error: 1.0859776619334531
best_error: 1.085977660718449
best_error: 1.0859681237581167
best_error: 1.0859681234260317
best_error: 1.0859664646479845
best_error: 1.0859664645428873
best_error: 1.085966464451513
best_error: 1.0859623237793585
best_error: 1.0859623231363722
best_error: 1.0859556299585336
best_error: 1.085955629511962
best_error: 1.0859556294487767
best_error: 1.0858906001531954
best_error: 1.0858905930461193
best_error: 1.0857839270208176
best_error: 1.085783922006563
best_error: 1.0856415427825474
best_error: 1.0856415251863087
best_error: 1.0849598854581586
best_error: 1.0849598688535194
best_error: 1.082416923788661
best_error: 1.0824169224618923
best_error: 1.0824169206261027
best_error: 1.0823264143020004
best_error: 1.082326398968305
best_error: 1.0822226876390781
best_error: 1.0822226662756378
best_error: 1.0809783965451316
best_error: 1.0809783888041797
best_error: 1.0809770505542238
best_error: 1.0809770422821956
