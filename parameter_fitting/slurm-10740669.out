ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.680846827639805
best_error: 11.68084682483126
best_error: 11.07585115760336
best_error: 11.075851077033658
best_error: 10.113877358155218
best_error: 10.113877150155469
best_error: 7.382683116035491
best_error: 7.067686787664559
best_error: 7.067686717799047
best_error: 7.051759224327714
best_error: 7.051759202288731
best_error: 7.042538968240773
best_error: 7.0425389682407635
best_error: 7.042538966179288
best_error: 7.035151738680722
best_error: 7.0351517386807085
best_error: 7.035151732678247
best_error: 6.854909205487823
best_error: 6.823356180000868
best_error: 6.717832252630396
best_error: 6.354234215111789
best_error: 5.855956795478324
best_error: 5.8559566895212525
best_error: 5.855956618521449
best_error: 5.5107310570697745
best_error: 5.510731057069745
best_error: 5.502545844898708
best_error: 5.502545844898666
best_error: 5.502222357250492
best_error: 5.502222348205658
best_error: 5.502096156644642
best_error: 5.502096156644602
best_error: 5.50204879508074
best_error: 5.5020487868666885
best_error: 5.502047967678123
best_error: 5.5020479676780845
best_error: 5.502047915362076
best_error: 5.502047907147827
best_error: 5.502047317371783
best_error: 5.502047309157394
best_error: 5.502047298443382
best_error: 5.502047298443343
best_error: 5.502047274222693
best_error: 5.502047266008294
best_error: 5.502046970132633
best_error: 5.5020469619181425
best_error: 5.502045879825122
best_error: 5.502045879825082
best_error: 5.502028444171508
best_error: 5.502028444171469
best_error: 5.501960240648393
best_error: 5.501960240648351
best_error: 5.501705018598511
best_error: 5.5017050185984715
best_error: 5.501208782686432
best_error: 5.501208782686391
best_error: 5.501084618901007
best_error: 5.501084618900968
best_error: 5.501033186467355
best_error: 5.501033186467314
best_error: 5.501031082901757
best_error: 5.501031082901722
best_error: 5.501026106168208
best_error: 5.501026106168164
best_error: 5.501018468852589
best_error: 5.501018468852546
best_error: 5.501017895547086
best_error: 5.50101789554705
best_error: 5.501017519821101
best_error: 5.501017519821062
best_error: 5.501016358614084
best_error: 5.501016358614043
best_error: 5.501016216912077
best_error: 5.501016216912038
best_error: 5.501016148573637
best_error: 5.501016148573595
best_error: 5.500917430050923
best_error: 5.500917430050883
best_error: 5.500778756249441
best_error: 5.500778738775339
best_error: 5.500764838645863
best_error: 5.500764822178245
best_error: 5.5007180345914115
best_error: 5.500718034591375
best_error: 5.500685166543183
best_error: 5.500685166543138
best_error: 5.500659414237553
best_error: 5.500659414237514
best_error: 5.500646822371274
best_error: 5.5006468223712295
best_error: 5.500639617243403
best_error: 5.500639617243362
best_error: 5.500636648227907
best_error: 5.500636648227861
best_error: 5.500634266509305
best_error: 5.500634266509264
best_error: 5.500632868379442
best_error: 5.500632868379401
best_error: 5.50063204409815
best_error: 5.500632044098106
best_error: 5.50063161251163
best_error: 5.500631612511588
best_error: 5.500631046773159
best_error: 5.500631046773118
best_error: 5.50063071927113
best_error: 5.500630719271087
best_error: 5.500630659018909
best_error: 5.500630659018867
best_error: 5.50063064651625
best_error: 5.50063064651621
best_error: 5.500630633278739
best_error: 5.500630633278697
best_error: 5.500630598005683
best_error: 5.500630598005639
best_error: 5.500630593754957
best_error: 5.5006305937549165
best_error: 5.500630590602989
best_error: 5.500630590602949
best_error: 5.500628429686858
best_error: 5.500628429686818
best_error: 5.500627294993543
best_error: 5.5006272949935
best_error: 5.500626978016446
best_error: 5.500626978016408
best_error: 5.500626724632701
best_error: 5.500626724632663
best_error: 5.50062648648524
best_error: 5.500626486485204
best_error: 5.500626267913537
best_error: 5.500626267913496
best_error: 5.500626066007678
best_error: 5.500626066007637
best_error: 5.50062594416897
best_error: 5.500625944168928
best_error: 5.500625941174666
best_error: 5.500625941174627
best_error: 5.500625939329253
best_error: 5.500625939329214
best_error: 5.500625938716642
best_error: 5.500625938716601
best_error: 5.500625938336063
best_error: 5.500625938336022
best_error: 5.500625938101191
best_error: 5.50062593810115
best_error: 5.500625937957582
best_error: 5.50062593795754
best_error: 5.500625937902579
best_error: 5.500625937902539
