ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.109844125846166
best_error: 11.109844117550995
best_error: 11.106362953603476
best_error: 11.106362945064939
best_error: 6.947642973460091
best_error: 6.947642451606418
best_error: 5.692261001602465
best_error: 5.692260505704337
best_error: 5.356623716556959
best_error: 5.3566236454508305
best_error: 5.163420541228165
best_error: 5.163420541168592
best_error: 5.1634205249872185
best_error: 5.160148903587526
best_error: 5.16014890352735
best_error: 5.160148887043899
best_error: 5.15320869791295
best_error: 5.153208609192655
best_error: 5.1025921700975765
best_error: 5.10259197657129
best_error: 4.875110270104948
best_error: 4.875110101175035
best_error: 4.473066347797191
best_error: 4.473066065016205
best_error: 4.427661236584408
best_error: 4.427661198299053
best_error: 4.422351917790508
best_error: 4.422351885723822
best_error: 4.407746362261756
best_error: 4.407746362171483
best_error: 4.407746355379141
best_error: 4.404419182692882
best_error: 4.404419182610003
best_error: 4.4044191758823255
best_error: 4.401846537602382
best_error: 4.401846537525836
best_error: 4.401846536897797
best_error: 4.401846530816839
best_error: 4.4001156057418935
best_error: 4.40011560566195
best_error: 4.400115598949347
best_error: 4.394475537126613
best_error: 4.3944755370435225
best_error: 4.394475530208682
best_error: 4.391246336943539
best_error: 4.3912463368586545
best_error: 4.391246330012483
best_error: 4.383564617371302
best_error: 4.383564507036743
best_error: 4.367148955583261
best_error: 4.3671489508446255
best_error: 4.367148944268509
best_error: 4.295253807929891
best_error: 4.295253785188674
best_error: 4.258796298688789
best_error: 4.2587962683280685
best_error: 4.243976640361412
best_error: 4.243976558619022
best_error: 4.179945039428023
best_error: 4.179944968493741
best_error: 4.054994538048638
best_error: 4.054994525760202
best_error: 4.051106056450652
best_error: 4.051105964997746
best_error: 4.006881875893867
best_error: 4.006881848657427
best_error: 3.945944642414428
best_error: 3.945944557479328
best_error: 3.8618675584924738
best_error: 3.8618675383269485
best_error: 3.80750386569641
best_error: 3.807503781790745
best_error: 3.7183041005379445
best_error: 3.718304061194761
best_error: 3.716320033459122
best_error: 3.7163200155629377
best_error: 3.714896824260746
best_error: 3.7148968188990557
best_error: 3.714873142506987
best_error: 3.714873136320935
best_error: 3.714841768325659
best_error: 3.7148417613186195
best_error: 3.714791500900965
best_error: 3.7147914937704547
best_error: 3.714747348260306
best_error: 3.7147473416746815
best_error: 3.7146525742527556
best_error: 3.7146525693952923
best_error: 3.7146443680687895
best_error: 3.7146443633327224
best_error: 3.714597013442507
best_error: 3.714597009591281
best_error: 3.7145946783527273
best_error: 3.7145946745902014
best_error: 3.7145924259874903
best_error: 3.714592422219554
best_error: 3.714590263416356
best_error: 3.7145902596432236
best_error: 3.7145819595152516
best_error: 3.71458195595318
best_error: 3.714561977608395
best_error: 3.7145619743572724
best_error: 3.714560644051376
best_error: 3.714560640797501
best_error: 3.714559350818586
best_error: 3.714559347699094
best_error: 3.714558436049624
best_error: 3.714558432928181
best_error: 3.7145575432772175
best_error: 3.7145575401538715
best_error: 3.714554950759145
best_error: 3.7145549476302833
best_error: 3.714552270281316
best_error: 3.7145522677608476
best_error: 3.714550948931283
best_error: 3.714550946408663
best_error: 3.7145495266641175
best_error: 3.7145495241744264
best_error: 3.7145488335182932
best_error: 3.7145488310274706
best_error: 3.714548215434695
best_error: 3.714548212942863
best_error: 3.7145440044266893
best_error: 3.714544001927963
best_error: 3.714540475776689
best_error: 3.7145404732721987
best_error: 3.7145399981828824
best_error: 3.7145399956776166
best_error: 3.7145398297389844
best_error: 3.714539827233439
best_error: 3.714538686857692
best_error: 3.7145386843502783
best_error: 3.714538598635756
best_error: 3.714538596128115
best_error: 3.7145385956006343
best_error: 3.714538595243101
best_error: 3.7145385950542105
best_error: 3.7145385948688663
best_error: 3.7145385947467133
best_error: 3.714538594229924
best_error: 3.714538594146518
