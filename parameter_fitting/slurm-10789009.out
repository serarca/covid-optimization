ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.64715466382556
best_error: 9.647154636507459
best_error: 8.825335266253155
best_error: 8.82533519412895
best_error: 6.588555355713687
best_error: 6.5885551424064195
best_error: 5.619801260852174
best_error: 5.619801259006982
best_error: 5.619801027156545
best_error: 5.458652588710693
best_error: 5.458652556317631
best_error: 5.458652367607296
best_error: 5.442944330377663
best_error: 5.442944283958538
best_error: 5.442944141814616
best_error: 4.545414344920738
best_error: 4.545414308776527
best_error: 4.5454141777200965
best_error: 3.9166101577224097
best_error: 3.916610130323625
best_error: 3.91660999612346
best_error: 3.564431455545458
best_error: 3.5644314286619654
best_error: 3.5644313170547317
best_error: 3.3476343596461606
best_error: 3.347634333890304
best_error: 3.3476342224073834
best_error: 3.310135158221652
best_error: 3.3101351327043442
best_error: 3.3101350175373736
best_error: 3.299222372313399
best_error: 3.2992223467705752
best_error: 3.299222231400975
best_error: 3.2925558264827828
best_error: 3.292555801215376
best_error: 3.2925556845944297
best_error: 3.2883918096242244
best_error: 3.288391784397505
best_error: 3.2883916672283933
best_error: 3.287008186158923
best_error: 3.2870081609457285
best_error: 3.287008043594586
best_error: 3.2861328084496746
best_error: 3.2861327832450433
best_error: 3.286132665778765
best_error: 3.285711543393877
best_error: 3.2857115181933665
best_error: 3.285711400671688
best_error: 3.2854132605391824
best_error: 3.285413235341589
best_error: 3.285413117780688
best_error: 3.2852836953708406
best_error: 3.285283670174519
best_error: 3.2852835525965745
best_error: 3.2852563301523183
best_error: 3.28525620355341
best_error: 3.285229659192056
best_error: 3.2852296339962526
best_error: 3.2852295164112135
best_error: 3.285224467382614
best_error: 3.285224442186869
best_error: 3.2852243246011454
best_error: 3.285223246244109
best_error: 3.2852232210483674
best_error: 3.2852231034624877
best_error: 3.2852228585243237
best_error: 3.285222833328588
best_error: 3.1167791224592163
best_error: 3.116779118283742
best_error: 3.116778951406828
best_error: 2.8521450215789597
best_error: 2.8521447589702427
best_error: 2.8488919893101854
best_error: 2.8488917170379366
best_error: 2.731447517972858
best_error: 2.7314471273982592
best_error: 2.695592325595408
best_error: 2.695591915384725
best_error: 2.6799175908058683
best_error: 2.6799171757747104
best_error: 2.6707048640854825
best_error: 2.6707044448465096
best_error: 2.6706828429819014
best_error: 2.6706824237385014
best_error: 2.670682014098454
best_error: 2.6706820073596216
best_error: 2.6706819542280105
best_error: 2.6706818466923012
best_error: 2.670681839953483
best_error: 2.670681794469407
best_error: 2.6706817852904097
best_error: 2.670658890161763
best_error: 2.6706584709259027
best_error: 2.6705665478605782
best_error: 2.6705661286557576
best_error: 2.6701797328329366
best_error: 2.6701793137521648
best_error: 2.668524009313792
best_error: 2.6685235971915944
best_error: 2.665842680763982
best_error: 2.6658426065918275
best_error: 2.665615651341769
best_error: 2.665615580352184
best_error: 2.665605421622116
best_error: 2.6656053504572443
best_error: 2.665599451892726
best_error: 2.6655993799757733
best_error: 2.6634513113031844
best_error: 2.6634509185040534
best_error: 2.6612914746262093
best_error: 2.6612911024532364
best_error: 2.6612052230514993
best_error: 2.6612051432827477
best_error: 2.661196342067047
best_error: 2.6611959698992296
best_error: 2.661194797640083
best_error: 2.6611947178711213
best_error: 2.66119463956079
best_error: 2.661194633888459
best_error: 2.6611946308654577
best_error: 2.6611946222995533
best_error: 2.66119461662722
best_error: 2.661194612695819
best_error: 2.6611946125085786
best_error: 2.6611946115882477
best_error: 2.6611946114010125
best_error: 2.6611946108007065
best_error: 2.6611946106134656
best_error: 2.661194610392506
best_error: 2.66119461020527
best_error: 2.66119461006645
best_error: 2.661194609994718
