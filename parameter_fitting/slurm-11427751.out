ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.281664454579765
best_error: 24.28166389594354
best_error: 4.959228920929492
best_error: 4.959228920400878
best_error: 4.959176693263438
best_error: 4.959176693259285
best_error: 4.959176693246703
best_error: 4.9589673719459
best_error: 4.9589673719417195
best_error: 4.958967371929135
best_error: 4.958123451583197
best_error: 4.958123451578893
best_error: 4.958123451566305
best_error: 4.954637272600019
best_error: 4.954637272595167
best_error: 4.95463727258259
best_error: 4.938622884568012
best_error: 4.938622884559437
best_error: 4.938622884547817
best_error: 4.727749161227742
best_error: 4.727749158698959
best_error: 4.708887362058798
best_error: 4.708887358844648
best_error: 4.681696275406625
best_error: 4.681696271058768
best_error: 3.8464379657253267
best_error: 3.8464377235992937
best_error: 3.7797220220520256
best_error: 3.7797219604905106
best_error: 3.308631335965191
best_error: 3.308631206333638
best_error: 3.1401143783362615
best_error: 3.1401142324469897
best_error: 3.0750281865974274
best_error: 3.075028165912421
best_error: 3.075028058904507
best_error: 3.073288598121983
best_error: 3.073288495101504
best_error: 3.060227117691666
best_error: 3.0602269816360903
best_error: 2.9977424531206998
best_error: 2.9977424109994435
best_error: 2.9891581522192814
best_error: 2.9891581513847387
best_error: 2.9891581311653335
best_error: 2.9695795541650125
best_error: 2.9695795313773603
best_error: 2.963217842898487
best_error: 2.9632178189072995
best_error: 2.9418313771514706
best_error: 2.9418313540423524
best_error: 2.924265058190505
best_error: 2.924265050788784
best_error: 2.924265050600466
best_error: 2.911173397856954
best_error: 2.9111733521161245
best_error: 2.897000594049215
best_error: 2.8970005178675593
best_error: 2.880119697737142
best_error: 2.8801196902061643
best_error: 2.863946803039565
best_error: 2.8639467782307806
best_error: 2.8621621296332087
best_error: 2.862162129616012
best_error: 2.8621621293407857
best_error: 2.86216212508225
best_error: 2.8589911744069463
best_error: 2.8589911743000163
best_error: 2.858991174204329
best_error: 2.858991170105365
best_error: 2.827153732653891
best_error: 2.8271537091416867
best_error: 2.6972905058884105
best_error: 2.697290457357679
best_error: 2.5181673221654957
best_error: 2.5181671466259488
best_error: 2.398970791974955
best_error: 2.3989707845890633
best_error: 2.2910792935929525
best_error: 2.291079291368924
best_error: 2.29107928726902
best_error: 2.2516979273596194
best_error: 2.2516976912666338
best_error: 2.0269844767307963
best_error: 2.026984345544858
best_error: 1.994197505040825
best_error: 1.9941974077027331
best_error: 1.9807667468238348
best_error: 1.9807666609522427
best_error: 1.976554290252323
best_error: 1.9765542085069945
best_error: 1.9731086366092376
best_error: 1.9731085785002787
best_error: 1.9594871839364398
best_error: 1.9594871571753645
best_error: 1.9470014203325894
best_error: 1.9470014114640408
best_error: 1.9454406912719673
best_error: 1.9454406644508597
best_error: 1.9434833336338841
best_error: 1.9434833138807321
best_error: 1.9425683896813546
best_error: 1.9425683840157262
best_error: 1.9406976513718819
best_error: 1.9406976511142253
best_error: 1.9406976506802036
best_error: 1.9406976481048772
best_error: 1.9406976478662736
best_error: 1.9233229083483672
best_error: 1.9233228930853103
best_error: 1.9042942470102637
best_error: 1.9042941993640778
best_error: 1.8949815530846943
best_error: 1.8949815286070615
best_error: 1.8782763183056175
best_error: 1.8782762993658804
best_error: 1.8714315679177824
best_error: 1.8714315582071088
best_error: 1.8681979044698338
best_error: 1.8681978887248685
best_error: 1.867641304757408
best_error: 1.8676412983297346
best_error: 1.8674876634446418
best_error: 1.8674876550290171
best_error: 1.8660620231066793
best_error: 1.8660620214679022
best_error: 1.8660620075899974
best_error: 1.8660299018766284
best_error: 1.8660298961848887
best_error: 1.8660298942767302
best_error: 1.8660292541201036
best_error: 1.866029247471077
best_error: 1.8659081121302536
best_error: 1.865908102547678
best_error: 1.865906044812605
best_error: 1.865906034311668
best_error: 1.865872384724847
best_error: 1.8658723569455071
best_error: 1.864697092578841
best_error: 1.864697079484589
best_error: 1.8642791245407204
best_error: 1.86427911861457
best_error: 1.8642506262175487
best_error: 1.864250624835906
best_error: 1.8642472550817817
best_error: 1.8642472539329693
best_error: 1.86424530275737
best_error: 1.8642453025645715
best_error: 1.8642453021522813
best_error: 1.8642440814381478
best_error: 1.8642440812224825
best_error: 1.864244080817279
best_error: 1.8642425054514247
best_error: 1.8642425047950457
best_error: 1.8642388313582077
best_error: 1.864238830136153
best_error: 1.864217405518738
best_error: 1.8642174049035611
best_error: 1.8641142538357371
best_error: 1.8641142459707103
best_error: 1.8639736779673894
best_error: 1.863973666916293
best_error: 1.8634871819479049
best_error: 1.8634871636607693
best_error: 1.85982209548086
best_error: 1.8598220504083818
best_error: 1.851232125645056
best_error: 1.8512320253324657
best_error: 1.8491732177869442
best_error: 1.8491731447191782
best_error: 1.8451141542574954
best_error: 1.8451141235012776
best_error: 1.8404918904178456
best_error: 1.8404918658160037
best_error: 1.8365926277457705
best_error: 1.8365925826384497
best_error: 1.835050067621312
best_error: 1.8350500655576887
best_error: 1.8350500650275854
best_error: 1.8349785449505773
best_error: 1.834978544450039
best_error: 1.834965862716998
best_error: 1.8349658610928856
best_error: 1.8349615156715038
best_error: 1.8349615150926084
best_error: 1.8349604660482428
best_error: 1.8349604659750407
best_error: 1.8349604659721626
best_error: 1.8349602640935672
best_error: 1.834960264059045
best_error: 1.834960264056827
best_error: 1.8349602640209495
best_error: 1.8349597189157607
best_error: 1.8349597183566373
best_error: 1.8349592568439501
best_error: 1.8349592566233652
best_error: 1.8349576693871632
best_error: 1.8349576693553706
best_error: 1.8349576693379677
best_error: 1.834945436200648
best_error: 1.8349454352223415
best_error: 1.834897918007822
best_error: 1.8348979147139053
best_error: 1.8348379356453561
best_error: 1.8348379300460016
best_error: 1.8347643225983787
best_error: 1.83476431409344
best_error: 1.8345500978594844
best_error: 1.8345500868266074
best_error: 1.8329347779007734
best_error: 1.832934755648177
best_error: 1.8325737023522732
best_error: 1.8325736978146818
best_error: 1.831530435158923
best_error: 1.8315304306154865
best_error: 1.8310420287256408
best_error: 1.8310420248079102
best_error: 1.8305686536992054
best_error: 1.8305686257257343
best_error: 1.8301547188853713
best_error: 1.8301547181628366
best_error: 1.830147437831869
best_error: 1.830147433453338
best_error: 1.8301440467834345
best_error: 1.8301440431778369
best_error: 1.8301099396507505
best_error: 1.8301099383702983
best_error: 1.8300629225030436
best_error: 1.8300629149430896
best_error: 1.82996991982901
best_error: 1.8299699170676758
best_error: 1.8298446611344366
best_error: 1.8298446604985068
best_error: 1.828970024568124
best_error: 1.8289700086734997
best_error: 1.8281416901286358
best_error: 1.8281416824189662
best_error: 1.828087543049906
best_error: 1.8280875344877756
best_error: 1.8278477217165072
best_error: 1.8278477129967436
best_error: 1.8278020614307122
best_error: 1.8278020444206273
best_error: 1.8276485014366788
best_error: 1.827648500106963
best_error: 1.8275958806752515
best_error: 1.827595877949345
best_error: 1.827591138515303
best_error: 1.827591128862326
best_error: 1.827550159640599
best_error: 1.8275501538866021
best_error: 1.8275150025268936
best_error: 1.8275150024515827
best_error: 1.8275150024383813
best_error: 1.8275150023616822
best_error: 1.8274729456479335
best_error: 1.827472945577042
best_error: 1.8274649631140008
best_error: 1.827464961544618
best_error: 1.8274604302438968
best_error: 1.8274604298311927
best_error: 1.8274439032944958
best_error: 1.8274439032224103
best_error: 1.8274409886583103
best_error: 1.8274409885902065
best_error: 1.8274374300047558
best_error: 1.8274374282879446
