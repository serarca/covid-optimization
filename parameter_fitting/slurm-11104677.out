ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 105.33164598919453
best_error: 105.33164578545004
best_error: 16.49670974970247
best_error: 16.496709749693494
best_error: 16.49670973369888
best_error: 16.482823297047325
best_error: 16.482823280685135
best_error: 16.42406457688882
best_error: 16.424064558974095
best_error: 16.120537322086566
best_error: 16.120537294786853
best_error: 13.000176641296088
best_error: 13.000176625627603
best_error: 12.98545239040242
best_error: 12.985452378375522
best_error: 12.985452376598303
best_error: 12.882627770025039
best_error: 12.882627766843814
best_error: 12.88262775450493
best_error: 12.525960374619407
best_error: 12.525960357035848
best_error: 12.493974845512945
best_error: 12.493974827473028
best_error: 12.457587554556707
best_error: 12.45758753732771
best_error: 12.425277622026222
best_error: 12.425277607432273
best_error: 12.42527760557116
best_error: 12.354817287198077
best_error: 12.354817277947348
best_error: 12.354817268972603
best_error: 11.970605751192112
best_error: 11.97060575119191
best_error: 11.970605746553161
best_error: 11.970605730002667
best_error: 11.861578700577358
best_error: 11.861578673243278
best_error: 11.861578669141359
best_error: 10.5617184216837
best_error: 10.561718346075189
best_error: 10.514850878110707
best_error: 10.514850808335028
best_error: 10.199081746051391
best_error: 10.199081717199164
best_error: 9.767664686776621
best_error: 9.7676646604568
best_error: 9.701968259473933
best_error: 9.70196816688874
best_error: 8.935663987196293
best_error: 8.93566393067061
best_error: 8.8175210982137
best_error: 8.817520940140955
best_error: 8.80593765056911
best_error: 8.805937611172851
best_error: 8.786630158862172
best_error: 8.7866301225733
best_error: 8.767938538164017
best_error: 8.767938298966625
best_error: 8.72277917603171
best_error: 8.722778940559376
best_error: 8.530441357889849
best_error: 8.530441305342668
best_error: 8.425180090227155
best_error: 8.425180014383516
best_error: 8.33184905313744
best_error: 8.331848128926094
best_error: 8.195258832238771
best_error: 8.195258643667755
best_error: 8.171222468475898
best_error: 8.171222269545629
best_error: 8.086376944326334
best_error: 8.086376708636578
best_error: 8.083841782912828
best_error: 8.083841747428709
best_error: 8.041988244494696
best_error: 8.041988054281893
best_error: 8.03695245227096
best_error: 8.036952271530772
best_error: 7.9975689576975535
best_error: 7.997568905910665
best_error: 7.747006378649031
best_error: 7.747006358620391
best_error: 7.600370866939722
best_error: 7.600370589814259
best_error: 7.5290464391079714
best_error: 7.5290456454965575
best_error: 7.440868319957465
best_error: 7.440868301820943
best_error: 7.440864564291454
best_error: 7.44086454615503
best_error: 7.35456643178029
best_error: 7.354566422793633
best_error: 7.3545664212267425
best_error: 7.354566420762235
best_error: 7.354563860112391
best_error: 7.354563851125796
best_error: 7.354563849558875
best_error: 7.354563849094361
best_error: 7.337952088256506
best_error: 7.337951521488238
best_error: 7.334288034653399
best_error: 7.334288031491404
best_error: 7.3342880252687745
best_error: 7.334286808875225
best_error: 7.334286805713227
best_error: 7.334286799490621
best_error: 7.333892652993032
best_error: 7.333892652369536
best_error: 7.333892649816036
best_error: 7.333892643624612
best_error: 7.3338064184738805
best_error: 7.333806417844292
best_error: 7.333806415296614
best_error: 7.333806409106854
best_error: 7.33377040172415
best_error: 7.333770401092011
best_error: 7.333770398546769
best_error: 7.333770392357704
best_error: 7.333764046108356
best_error: 7.333763487902179
best_error: 7.287223623813645
best_error: 7.287223607375005
best_error: 7.262677978283691
best_error: 7.262677942179236
best_error: 7.228127428774661
best_error: 7.228127387311989
best_error: 7.2203764226485365
best_error: 7.220376393059961
best_error: 7.200606899341494
best_error: 7.200606867928806
best_error: 7.199840463443601
best_error: 7.199840432350557
best_error: 7.197019301179482
best_error: 7.1970192769004475
best_error: 7.193975368052965
best_error: 7.193974903339139
best_error: 7.189762009701935
best_error: 7.189761986119468
best_error: 7.186790711247734
best_error: 7.186790235873021
best_error: 7.177005306938433
best_error: 7.177004827708889
best_error: 7.176230721679994
best_error: 7.176230244554401
best_error: 7.175813101968219
best_error: 7.175812624605365
best_error: 7.1755002610030925
best_error: 7.175499774059565
best_error: 7.14302754463082
best_error: 7.143027046435051
best_error: 7.134475842754106
best_error: 7.13447535372835
best_error: 7.133633901122251
best_error: 7.133633885288863
best_error: 7.1325201726306116
best_error: 7.132520156615617
best_error: 7.132083251477214
best_error: 7.13208323541612
best_error: 7.1320528593879935
best_error: 7.132052843323688
best_error: 7.132045970173512
best_error: 7.13204589638362
best_error: 7.124744602325365
best_error: 7.12474453201666
best_error: 7.029555882468552
best_error: 7.029555818358579
best_error: 7.018369687155515
best_error: 7.01836956381812
best_error: 7.016155443825523
best_error: 7.01615536398551
best_error: 7.0081584333840725
best_error: 7.008158329209728
best_error: 6.997685313673675
best_error: 6.9976852235509055
