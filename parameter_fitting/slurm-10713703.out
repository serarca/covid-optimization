ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.32398414438979
best_error: 13.323984114489935
best_error: 13.24388731247384
best_error: 13.243887275177503
best_error: 13.097240981068282
best_error: 13.097240929339584
best_error: 12.88455192900962
best_error: 12.884551854886645
best_error: 5.927486083911081
best_error: 5.927485729254422
best_error: 5.82049908521571
best_error: 5.820498765640052
best_error: 5.507855674348036
best_error: 5.507855037011445
best_error: 5.209807886420089
best_error: 5.209807288712815
best_error: 5.164877326170627
best_error: 5.16487674010446
best_error: 5.153511734489431
best_error: 5.1535111477489455
best_error: 5.147350033593438
best_error: 5.147349446033719
best_error: 5.146989434328096
best_error: 5.146989226074594
best_error: 5.146832204071387
best_error: 5.146831616437031
best_error: 5.1468124934053545
best_error: 5.146811905768161
best_error: 5.1468069015938696
best_error: 5.146806313955874
best_error: 5.1468055387254825
best_error: 5.146805330478999
best_error: 5.1468050232465385
best_error: 5.126463815040156
best_error: 5.126463264003292
best_error: 5.114947044432697
best_error: 5.114946542019471
best_error: 5.114061838941078
best_error: 5.1140613246662685
best_error: 5.11362682537828
best_error: 5.113626307684276
best_error: 5.108275482075701
best_error: 5.1082749515611985
best_error: 5.096506026382907
best_error: 5.0965058013818565
best_error: 5.093761117508337
best_error: 5.09376088875041
best_error: 5.075954235646492
best_error: 5.075953735684899
best_error: 5.074614862043715
best_error: 5.074614593142282
best_error: 5.070122409110047
best_error: 5.070122145317546
best_error: 5.0668412127946265
best_error: 5.066840998934056
best_error: 5.062291634905682
best_error: 5.062291054903719
best_error: 5.008264808472059
best_error: 5.0082645355915565
best_error: 4.995324506167523
best_error: 4.995324239990053
best_error: 4.991450193245969
best_error: 4.991449949035933
best_error: 4.988047133290255
best_error: 4.988046605440781
best_error: 4.985005413793164
best_error: 4.98500516503592
best_error: 4.980122269380713
best_error: 4.980122020862518
best_error: 4.978752396893105
best_error: 4.97875214844267
best_error: 4.978542746547043
best_error: 4.978542207094983
best_error: 4.966090378348831
best_error: 4.966090114766878
best_error: 4.952285742550624
best_error: 4.952285478922514
best_error: 4.945669518355493
best_error: 4.945669250736167
best_error: 4.882501611008683
best_error: 4.882501370805201
best_error: 4.872492526518231
best_error: 4.872491939304291
best_error: 4.840256928876387
best_error: 4.84025669259311
best_error: 4.831571772692374
best_error: 4.831571538486768
best_error: 4.793838781046224
best_error: 4.7938381442471805
best_error: 4.706042698571234
best_error: 4.706042080003763
best_error: 4.698403692450354
best_error: 4.698403442993886
best_error: 4.697686292502936
best_error: 4.697685680293068
best_error: 4.682464104812016
best_error: 4.682463846097208
best_error: 4.675655439665296
best_error: 4.675654839844589
best_error: 4.655483875834361
best_error: 4.655483615558019
best_error: 4.649195220019923
best_error: 4.64919462113411
best_error: 4.610993841084792
best_error: 4.610993574009381
best_error: 4.596292068898228
best_error: 4.596291489974261
best_error: 4.561473129375186
best_error: 4.5614728615196825
best_error: 4.559621876136738
best_error: 4.559621334665854
best_error: 4.491667231631276
best_error: 4.49166675029228
best_error: 4.0522118303548345
best_error: 4.052211349110724
best_error: 4.00002470811952
best_error: 4.000024219594714
best_error: 3.9970022659344613
best_error: 3.9970020960172183
best_error: 3.991207475957466
best_error: 3.9912069858880583
best_error: 3.988749542915348
best_error: 3.9887493697393497
best_error: 3.9867722165336703
best_error: 3.9867717108950074
best_error: 3.9790085149406886
best_error: 3.979008008351799
best_error: 3.9776672995942937
best_error: 3.9776667928413847
best_error: 3.977164756684359
best_error: 3.977164249870004
best_error: 3.9771610264007484
best_error: 3.977160857865092
best_error: 3.9771607115616554
best_error: 3.9771583417012124
best_error: 3.977158300828612
best_error: 3.977158285108028
best_error: 3.9771582442354037
best_error: 3.977158232942702
best_error: 3.9771582182681557
best_error: 3.9771582182601124
best_error: 3.977158205149598
best_error: 3.977158205141539
