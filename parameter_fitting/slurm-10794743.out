ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.378237202685918
best_error: 10.37823718225697
best_error: 10.213095625432635
best_error: 10.213095595193732
best_error: 8.41158180490888
best_error: 8.411581615550604
best_error: 5.773747093177802
best_error: 5.773746668065434
best_error: 4.535933313922543
best_error: 4.535933010859809
best_error: 4.274163775943169
best_error: 4.2741637638298045
best_error: 4.274163565915579
best_error: 4.241466899515566
best_error: 4.241466878390638
best_error: 4.241466708307138
best_error: 3.98871593607369
best_error: 3.9887157452524646
best_error: 3.849989035293612
best_error: 3.849988891413022
best_error: 3.7973861417455317
best_error: 3.797386135651545
best_error: 3.797386117730182
best_error: 3.768577950101843
best_error: 3.7685779146756326
best_error: 3.7597327312896027
best_error: 3.7597327188338694
best_error: 3.751534785937461
best_error: 3.751534780814638
best_error: 3.7515347784182076
best_error: 3.7465043004915577
best_error: 3.7465042185405224
best_error: 3.7418714724040534
best_error: 3.741871472276732
best_error: 3.7418714645771045
best_error: 3.7310398482639426
best_error: 3.731039841176134
best_error: 3.7310398404156535
best_error: 3.6776134881146363
best_error: 3.6776134410059624
best_error: 3.645996338621196
best_error: 3.6459963337015155
best_error: 3.6459962993163257
best_error: 3.504707130866
best_error: 3.504707090586623
best_error: 3.4922481700805563
best_error: 3.492248084055814
best_error: 3.4651116341050554
best_error: 3.465111577385845
best_error: 3.4022502822262544
best_error: 3.40225024423286
best_error: 3.35060022157852
best_error: 3.350600111305039
best_error: 3.3480898947287905
best_error: 3.348089894310312
best_error: 3.3460645360254375
best_error: 3.346064523837485
best_error: 3.344116528089809
best_error: 3.3441165123172505
best_error: 3.3374748647231294
best_error: 3.33747472001403
best_error: 3.324074186740966
best_error: 3.3240740496320904
best_error: 3.303916013534237
best_error: 3.3039159077801528
best_error: 3.294524652246681
best_error: 3.294524550822717
best_error: 3.284315370726304
best_error: 3.284315363885122
best_error: 3.2795121946399974
best_error: 3.279512190730265
best_error: 3.2778440625575085
best_error: 3.277844060579182
best_error: 3.277699158372448
best_error: 3.2776991579271
best_error: 3.2776787302913966
best_error: 3.2776787300547254
best_error: 3.2776777312539886
best_error: 3.2776777310173166
best_error: 3.277676765994476
best_error: 3.277676765757799
best_error: 3.277676011345112
best_error: 3.2776760111084444
best_error: 3.2776753032498
best_error: 3.277675303013126
best_error: 3.2776729816137604
best_error: 3.277672981253229
best_error: 3.2776714754112026
best_error: 3.277671475077907
best_error: 3.277671169850106
best_error: 3.277671169516867
best_error: 3.2776708820302125
best_error: 3.2776708816970213
best_error: 3.2776693502517036
best_error: 3.2776693499382623
best_error: 3.2776656425894926
best_error: 3.277665642276798
best_error: 3.277665620372673
best_error: 3.2776656200599774
best_error: 3.2776655987018737
best_error: 3.277665598389196
best_error: 3.277665585619947
best_error: 3.277665585307262
best_error: 3.277665572941051
best_error: 3.277665572628367
best_error: 3.277665553113734
best_error: 3.2776655528010523
best_error: 3.2776655337605027
best_error: 3.277665533447837
best_error: 3.277665522610051
best_error: 3.2776655222973767
best_error: 3.2776655117750098
best_error: 3.277665511462338
best_error: 3.2776655041186884
best_error: 3.2776655038060185
best_error: 3.277665496793973
best_error: 3.2776654964813
best_error: 3.2776654840455786
best_error: 3.2776654837329104
best_error: 3.277665471848119
best_error: 3.2776654715354625
best_error: 3.277665360055829
best_error: 3.277665359743184
best_error: 3.2776653590370275
best_error: 3.2776653587243723
best_error: 3.2776653583270643
best_error: 3.277665358014418
best_error: 3.2776653576350214
best_error: 3.277665357322384
best_error: 3.2776653572130705
best_error: 3.277665356900421
