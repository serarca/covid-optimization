ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 74
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 103.06357412321732
best_error: 103.06357403838643
best_error: 103.06357394042689
best_error: 19.692194728427232
best_error: 19.692194728425136
best_error: 19.692194723736492
best_error: 19.686894268104847
best_error: 19.686894268102698
best_error: 19.6868942632217
best_error: 19.663287005278935
best_error: 19.663287005276388
best_error: 19.663286999453423
best_error: 19.488335504742906
best_error: 19.488335504704335
best_error: 19.488335487660706
best_error: 19.400740494119916
best_error: 19.400740494028476
best_error: 19.40074046923219
best_error: 19.234577913285584
best_error: 19.234577913029142
best_error: 19.23457787137584
best_error: 15.459398131926726
best_error: 15.459397070612123
best_error: 14.773032759390247
best_error: 14.773032751659052
best_error: 14.773032671161165
best_error: 14.12033922979301
best_error: 14.120339211389641
best_error: 14.01692524468258
best_error: 14.016925235221539
best_error: 14.016925225404503
best_error: 13.673316070658654
best_error: 13.673316063283377
best_error: 13.673316050523145
best_error: 13.206953792165695
best_error: 13.206953779683086
best_error: 13.206953772102125
best_error: 12.784012005323468
best_error: 12.784012000352739
best_error: 12.784011987404615
best_error: 12.473520221854304
best_error: 12.473520198369892
best_error: 12.336676291074362
best_error: 12.33667619744431
best_error: 12.273585104332838
best_error: 12.273585090966044
best_error: 12.273585089931395
best_error: 12.244904795769335
best_error: 12.244904783946305
best_error: 12.244904781873586
best_error: 12.237595743086171
best_error: 12.237595585069581
best_error: 12.226222153538389
best_error: 12.226222146403618
best_error: 12.226222140646879
best_error: 12.224044875868424
best_error: 12.224044868547429
best_error: 12.224044862879808
best_error: 12.22029407029751
best_error: 12.220294062831812
best_error: 12.220294057245447
best_error: 12.218102831161133
best_error: 12.218102823627515
best_error: 12.21810281809236
best_error: 12.218088797620508
best_error: 12.218088600111287
best_error: 12.207745544009153
best_error: 12.207745536636612
best_error: 12.207745530970818
best_error: 12.167633214091325
best_error: 12.167633207771283
best_error: 12.167633201173691
best_error: 12.02027713973428
best_error: 12.020277136771155
best_error: 12.020277127349155
best_error: 12.020277117843314
best_error: 11.376941285196265
best_error: 11.376941282709964
best_error: 11.376941242877662
best_error: 11.37694123290404
best_error: 11.25041173074963
best_error: 11.2504115486815
best_error: 11.250149042741333
best_error: 11.250148860640753
best_error: 11.249096680597026
best_error: 11.249096498635815
best_error: 11.245517835201017
best_error: 11.245517825495812
best_error: 11.2455178218833
best_error: 11.230180683597787
best_error: 11.230180668184419
best_error: 11.215554179774001
best_error: 11.215554165192167
best_error: 11.20739167898343
best_error: 11.207391519774786
best_error: 11.20210258647212
best_error: 11.20210257186061
best_error: 11.201740417750552
best_error: 11.201740258584959
best_error: 11.198278751262457
best_error: 11.198278592469299
best_error: 11.198074052076008
best_error: 11.198073893243077
best_error: 11.198053440834745
best_error: 11.19805328199782
best_error: 11.198052648876814
best_error: 11.198052634420868
best_error: 11.198052399220249
best_error: 11.198052384764319
best_error: 11.197218124365168
best_error: 11.197218110032576
best_error: 11.196724139279501
best_error: 11.196724127735783
best_error: 11.191901530950062
best_error: 11.19190151890059
best_error: 11.187379810537584
best_error: 11.187379795417261
best_error: 11.185890858662782
best_error: 11.185890843186693
best_error: 11.184282082223005
best_error: 11.184282066747288
best_error: 11.179155435555264
best_error: 11.179155311021834
best_error: 11.170764308968971
best_error: 11.170764292919705
best_error: 11.162494786563233
best_error: 11.162494770429856
best_error: 11.150316188289608
best_error: 11.150316174706365
best_error: 11.149492320784205
best_error: 11.149492307281848
best_error: 11.146267505655283
best_error: 11.146267492306741
best_error: 11.145977402200442
best_error: 11.145977248678191
best_error: 11.145675905365152
best_error: 11.145675892052974
best_error: 11.14535629084111
best_error: 11.14535614139021
best_error: 11.145346680337674
best_error: 11.14534666703001
best_error: 11.145340005867066
best_error: 11.145339992559496
best_error: 11.145339853306833
best_error: 11.145339680087755
best_error: 11.145339666780181
best_error: 11.145339628634204
best_error: 11.145339600862783
best_error: 11.145339599982037
best_error: 11.145339597419198
