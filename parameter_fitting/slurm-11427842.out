ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.73091928703569
best_error: 21.730919249199786
best_error: 21.730919234456447
best_error: 4.4917256345153325
best_error: 4.4917256334930915
best_error: 4.491725633017768
best_error: 4.486469773143206
best_error: 4.48646977294123
best_error: 4.486469771637468
best_error: 4.464570374692601
best_error: 4.464570374456494
best_error: 4.464570373152142
best_error: 4.359198962472728
best_error: 4.359198962050175
best_error: 4.359198960752338
best_error: 3.2607824088311927
best_error: 3.260782391755522
best_error: 2.8108359594425485
best_error: 2.8108359211274982
best_error: 2.7663622790342814
best_error: 2.766362272671894
best_error: 2.766362229682511
best_error: 2.707595236661504
best_error: 2.7075952359950612
best_error: 2.707595164281863
best_error: 2.6048546657064655
best_error: 2.6048544645592937
best_error: 2.3873316854889315
best_error: 2.387331662931271
best_error: 2.387331558276454
best_error: 2.3185531067236385
best_error: 2.3185530823192164
best_error: 2.318552961423244
best_error: 2.302264155853026
best_error: 2.3022641292595774
best_error: 2.3022640105597345
best_error: 2.2905793381671598
best_error: 2.2905792802211047
best_error: 2.2905792761238266
best_error: 1.7915074086739184
best_error: 1.7915071987629116
best_error: 1.697779493116057
best_error: 1.6977793872267313
best_error: 1.6926997998432947
best_error: 1.6926997925222829
best_error: 1.68723247258997
best_error: 1.6872324673460382
best_error: 1.6714152599838925
best_error: 1.6714152424565776
best_error: 1.6389685563699945
best_error: 1.6389684801262028
best_error: 1.6033574049054535
best_error: 1.6033573059188684
best_error: 1.4837937312805434
best_error: 1.4837936524986575
best_error: 1.4264039145141405
best_error: 1.426403834466539
best_error: 1.3893565103519594
best_error: 1.3893564377291678
best_error: 1.3310170708847848
best_error: 1.3310170708844438
best_error: 1.3310170708429954
best_error: 1.3026597402666087
best_error: 1.3026596826706092
best_error: 1.2986149525221493
best_error: 1.2986148543149656
best_error: 1.2964508603884937
best_error: 1.2964508578228746
best_error: 1.2964508553757566
best_error: 1.2942091758651315
best_error: 1.2942091722169098
best_error: 1.2846342757879183
best_error: 1.2846342268527926
best_error: 1.2602929081476073
best_error: 1.260292785280708
best_error: 1.1941477437905976
best_error: 1.1941475809170574
best_error: 1.1148443155271177
best_error: 1.1148441795873458
best_error: 1.0841922610280086
best_error: 1.0841921695665957
best_error: 1.0644329207368572
best_error: 1.0644328614019718
best_error: 1.0613445012683835
best_error: 1.0613444381510133
best_error: 1.0566395557344535
best_error: 1.056639496910234
best_error: 1.0537130599882132
best_error: 1.0537130055183315
best_error: 1.052021376165889
best_error: 1.0520213235088234
best_error: 1.0503500218392516
best_error: 1.0503499673636272
best_error: 1.0449267547834662
best_error: 1.0449267008726817
best_error: 1.0379160112114572
best_error: 1.0379159999853684
best_error: 1.018161335801477
best_error: 1.018161325762056
best_error: 1.0142288313959527
best_error: 1.014228820729247
best_error: 1.010918631979892
best_error: 1.0109186159897687
best_error: 1.0084447947972008
best_error: 1.0084447735032778
best_error: 1.003990965809885
best_error: 1.00399095532064
best_error: 0.996699331753798
best_error: 0.9966993311220809
best_error: 0.9966993302678171
best_error: 0.9966993300154552
best_error: 0.9966993255038428
best_error: 0.9875055637806511
best_error: 0.987505541976207
best_error: 0.973521272545817
best_error: 0.9735212434699243
best_error: 0.9667414058500373
best_error: 0.9667413443746569
best_error: 0.9625915639632536
best_error: 0.9625915565109215
best_error: 0.9610290259038041
best_error: 0.9610290171696425
best_error: 0.9600553650730231
best_error: 0.9600553387515756
best_error: 0.9591651862266111
best_error: 0.9591651715751007
best_error: 0.9534497773663365
best_error: 0.9534497716153082
best_error: 0.9534497620617607
best_error: 0.929765505531761
best_error: 0.9297654519714666
best_error: 0.9156018232241188
best_error: 0.9156016527691111
best_error: 0.903712030262302
best_error: 0.9037119497733667
best_error: 0.8983161251115597
best_error: 0.8983160698616051
best_error: 0.8908143826048927
best_error: 0.890814347408252
best_error: 0.8857370308365111
best_error: 0.8857370145951983
best_error: 0.8832119028543094
best_error: 0.8832118871860919
best_error: 0.8764109097594914
best_error: 0.8764109026841698
best_error: 0.8733450713617897
best_error: 0.8733450674224511
best_error: 0.8672983630419031
best_error: 0.8672983627843024
best_error: 0.8672983623544414
best_error: 0.8672983621135111
best_error: 0.8665037903629773
best_error: 0.8665037591358288
best_error: 0.8656455280229829
best_error: 0.8656455239201064
best_error: 0.8650688429470693
best_error: 0.8650688428193724
best_error: 0.8650688423693944
best_error: 0.8650688415310909
best_error: 0.8637227876756008
best_error: 0.8637227840995664
best_error: 0.8596934801982006
best_error: 0.8596934610161707
best_error: 0.8505188281202564
best_error: 0.8505187852689573
best_error: 0.8021442430805475
best_error: 0.8021442423482023
best_error: 0.8021442422314138
best_error: 0.8021442413261174
best_error: 0.8020542506037035
best_error: 0.8020542498784482
best_error: 0.8020542497522901
best_error: 0.802054248852741
best_error: 0.7917938032574416
best_error: 0.7917937821921028
best_error: 0.7917799523487229
best_error: 0.7917799312855884
best_error: 0.7898894076721394
best_error: 0.7898893832408249
best_error: 0.7898851334823089
best_error: 0.7898851090396846
best_error: 0.7893119193606857
best_error: 0.789311892452401
best_error: 0.789311095711906
best_error: 0.7893110687997773
best_error: 0.7891198959972597
best_error: 0.789119868134319
best_error: 0.7891196015338113
best_error: 0.7891195736710359
best_error: 0.7890504289609886
best_error: 0.7890504006091577
best_error: 0.7890502258668849
best_error: 0.7890501975152319
best_error: 0.7890242874198107
best_error: 0.7890242588848078
best_error: 0.7890242106585386
best_error: 0.789024182123644
best_error: 0.7890157680682266
best_error: 0.789015739181839
best_error: 0.78901571860598
best_error: 0.7890134747547843
best_error: 0.7890134458525673
best_error: 0.7890134384154287
best_error: 0.7890119663402672
best_error: 0.7890119373315886
best_error: 0.7890119356764079
best_error: 0.7890115006620164
best_error: 0.7890114716305646
best_error: 0.7875021039479599
best_error: 0.7875021015356336
best_error: 0.7875020927071987
best_error: 0.7874474141519221
best_error: 0.7874474116173953
best_error: 0.7874474076651486
best_error: 0.7868761533004249
best_error: 0.7868761476974281
best_error: 0.7825524059823747
best_error: 0.782552384895533
best_error: 0.77788042237164
best_error: 0.7778803959701159
best_error: 0.7705853701146022
best_error: 0.7705853674935618
best_error: 0.7702628746019333
best_error: 0.7702628630795192
best_error: 0.7690548136680324
best_error: 0.7690548085981991
best_error: 0.7690162512740809
best_error: 0.7690162511697995
best_error: 0.7690162506128752
best_error: 0.7690162501544363
best_error: 0.7690162496355926
best_error: 0.7687955794525557
best_error: 0.7687955772905767
best_error: 0.768722272428128
best_error: 0.7687222658003676
best_error: 0.7686338588433297
best_error: 0.7686338503717803
best_error: 0.7683986947096499
best_error: 0.7683986881435455
best_error: 0.7654707793261598
best_error: 0.7654707550093527
best_error: 0.7586057399489922
best_error: 0.7586057290975208
best_error: 0.7567225999263403
best_error: 0.7567225055187775
best_error: 0.7473332682877886
best_error: 0.7473331917366479
best_error: 0.7453646556575283
best_error: 0.7453646502088616
best_error: 0.7432460352253146
best_error: 0.743246024333338
best_error: 0.7431071125570686
best_error: 0.7431070935245601
best_error: 0.7430935312203095
best_error: 0.7430935053925775
best_error: 0.7429946055068415
best_error: 0.7429945824479196
best_error: 0.7421148324542745
best_error: 0.742114829622857
best_error: 0.7421148256514833
best_error: 0.741348396151364
best_error: 0.7413483931921236
best_error: 0.7413483908063789
best_error: 0.7398401599943941
best_error: 0.7398401280514836
best_error: 0.7388777107346306
best_error: 0.7388777033104216
best_error: 0.7387668332449441
best_error: 0.7387668291259236
best_error: 0.7386727224222771
best_error: 0.7386727210967748
best_error: 0.7386269019683396
best_error: 0.7386269003877683
best_error: 0.7385779083379096
best_error: 0.7385779082896855
best_error: 0.7385779075102367
best_error: 0.738577907297906
best_error: 0.7382986162233223
best_error: 0.7382986152309379
