ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 18.5405122666304
best_error: 18.540512002906155
best_error: 13.291607069332578
best_error: 13.291607065747122
best_error: 13.291607054921844
best_error: 13.243356516268246
best_error: 13.243356512316822
best_error: 13.243356508869127
best_error: 12.9924634784481
best_error: 12.992463472521484
best_error: 12.992463467673089
best_error: 12.28931947379052
best_error: 12.289319424589126
best_error: 11.95018712918375
best_error: 11.950187120383132
best_error: 11.79448084143263
best_error: 11.794480829356548
best_error: 11.794480821086402
best_error: 11.794324909188736
best_error: 11.794324897380125
best_error: 11.79432488793404
best_error: 11.79424078497977
best_error: 11.794240773215474
best_error: 11.794240763415015
best_error: 11.79422912708218
best_error: 11.794229115297007
best_error: 11.794229105516486
best_error: 11.79422856676841
best_error: 11.7942285562243
best_error: 11.794228543739408
best_error: 11.628917584380979
best_error: 11.628917565951035
best_error: 11.624241358347946
best_error: 11.624241340131423
best_error: 11.620914528296176
best_error: 11.620914511132291
best_error: 11.620914509853517
best_error: 11.619179134890917
best_error: 11.619179117338472
best_error: 11.619179115838362
best_error: 11.610479009813986
best_error: 11.610478991961116
best_error: 11.610478979701574
best_error: 11.450348720210616
best_error: 11.45034869175939
best_error: 9.744975129075344
best_error: 9.744975004729017
best_error: 9.74497495871928
best_error: 9.655789429847767
best_error: 9.655789340339153
best_error: 9.655789238823463
best_error: 9.644699591450161
best_error: 9.644699499898566
best_error: 9.644699396908246
best_error: 9.634211067683456
best_error: 9.634210989474274
best_error: 9.634210869710039
best_error: 9.628894952960136
best_error: 9.628894874173632
best_error: 9.628894752557622
best_error: 9.624264604112753
best_error: 9.624264534722405
best_error: 9.624264401425139
best_error: 9.606209950112364
best_error: 9.606209890799654
best_error: 9.60620973263507
best_error: 9.597938445856268
best_error: 9.59793839750567
best_error: 9.597938223726512
best_error: 8.765643130816327
best_error: 8.765643099681437
best_error: 8.765642906731347
best_error: 8.579862633703275
best_error: 8.579862603793355
best_error: 8.57986240850096
best_error: 8.526100123117907
best_error: 8.526100090667118
best_error: 8.526099898566493
best_error: 8.492753522952055
best_error: 8.492753488631616
best_error: 8.492753298144109
best_error: 8.477739221921127
best_error: 8.477739187460436
best_error: 8.477738996920515
best_error: 8.470289617316032
best_error: 8.470289582170578
best_error: 8.470289392198922
best_error: 8.465325219887397
best_error: 8.465325184285973
best_error: 8.465324994692804
best_error: 8.464989907308745
best_error: 8.464989871676522
best_error: 8.46498968210891
best_error: 8.46479855541953
best_error: 8.464798519769747
best_error: 8.464798330216723
best_error: 8.46474015061125
best_error: 8.4647401149561
best_error: 8.464739925407493
best_error: 8.464702328331029
best_error: 8.464702292672406
best_error: 8.464702103126724
best_error: 8.464695669235972
best_error: 8.46469563357675
best_error: 8.464695444031554
best_error: 8.464695331180277
best_error: 8.464695234122809
best_error: 8.46469461818267
best_error: 8.464694582523329
best_error: 8.464694392978235
best_error: 8.464693665007225
best_error: 8.464693439802758
best_error: 5.115379856928549
best_error: 5.115379406074851
best_error: 5.106471433851317
best_error: 5.1064709864148226
best_error: 5.100920639158854
best_error: 5.10092019150768
best_error: 5.0966599795340635
best_error: 5.096659533949127
best_error: 5.0896966105266355
best_error: 5.089696163960093
best_error: 5.085431510592613
best_error: 5.085431062546777
best_error: 5.082210816960877
best_error: 5.082210367798512
best_error: 5.079362220744762
best_error: 5.079361770595125
best_error: 5.076191010335769
best_error: 5.0761905590871645
best_error: 5.072245022455766
best_error: 5.072244571404855
best_error: 5.07053238479763
best_error: 5.070532253964871
best_error: 5.0702646512799285
best_error: 5.070264201147396
best_error: 5.068768272746869
best_error: 5.068767822954138
best_error: 5.06875472316354
best_error: 5.068754273366256
best_error: 5.068720440046773
best_error: 5.068719990237127
best_error: 5.068693357756172
best_error: 5.068692907936768
best_error: 5.06867518088492
best_error: 5.068674731058971
best_error: 5.068674687476267
best_error: 5.068674656142826
best_error: 5.068674627523207
best_error: 5.067496941381842
best_error: 5.067496484044937
best_error: 5.0672574549878835
best_error: 5.067256999344307
best_error: 5.067255107369391
best_error: 5.0672546508039105
best_error: 5.067254628240484
best_error: 5.067254172592567
best_error: 5.029182731364731
best_error: 5.029182599826423
best_error: 5.018235088571509
best_error: 5.0182346330589915
best_error: 5.014649275026916
best_error: 5.014649143450024
best_error: 4.996826504272951
best_error: 4.996826374226041
best_error: 4.996804805116881
best_error: 4.996804675069205
best_error: 4.995414366149324
best_error: 4.995414236115033
best_error: 4.9905106012985465
best_error: 4.990510142610004
best_error: 4.990500566283684
best_error: 4.990500436304059
best_error: 4.99049048889113
best_error: 4.9904900302005615
best_error: 4.99042592501471
best_error: 4.990425466317668
best_error: 4.99041232074606
best_error: 4.990411862047658
best_error: 4.990407961288667
best_error: 4.990407831308848
best_error: 4.990405983043792
best_error: 4.990405524344867
best_error: 4.990405289004926
