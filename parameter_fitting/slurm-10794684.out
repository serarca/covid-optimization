ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.3964672187825
best_error: 9.396467119477341
best_error: 7.938100709823528
best_error: 7.938100496993522
best_error: 7.028458531330628
best_error: 7.028458259364373
best_error: 6.472737156195265
best_error: 6.472737087069642
best_error: 6.4727370237411295
best_error: 6.361846096409542
best_error: 6.361846019793611
best_error: 6.36184598253995
best_error: 5.923243500610886
best_error: 5.9232434191122225
best_error: 4.658954425821286
best_error: 4.65895439483514
best_error: 4.443986364394429
best_error: 4.443986356397852
best_error: 4.434960344493315
best_error: 4.434960263096995
best_error: 4.413325694084525
best_error: 4.413325694079468
best_error: 4.413325685369745
best_error: 4.374946036174981
best_error: 4.374946026764082
best_error: 4.374946025315667
best_error: 4.363868090058689
best_error: 4.363868077685453
best_error: 4.3066828449285515
best_error: 4.306682834045754
best_error: 4.217002907999857
best_error: 4.217002899557711
best_error: 4.2170028943752715
best_error: 4.210561143901211
best_error: 4.210560947503016
best_error: 4.169546058314893
best_error: 4.169545900546188
best_error: 4.152708683465263
best_error: 4.152708656265726
best_error: 4.1522263687048895
best_error: 4.152226342439184
best_error: 4.152215746630178
best_error: 4.152215720359375
best_error: 4.152207763564267
best_error: 4.152207737289624
best_error: 4.15220377597717
best_error: 4.152203749696182
best_error: 4.152201126762106
best_error: 4.152201100479852
best_error: 4.152199530984838
best_error: 4.152199504701818
best_error: 4.152198420876553
best_error: 4.152198394593003
best_error: 4.152197798111625
best_error: 4.152197771827782
best_error: 4.152197332688248
best_error: 4.152197306404177
best_error: 4.152197097187838
best_error: 4.152197070903656
best_error: 4.152196924625981
best_error: 4.1521968983417334
best_error: 4.1521967927377315
best_error: 4.152196766453425
best_error: 4.152196730380654
best_error: 4.152196704096315
best_error: 4.15219668053813
best_error: 4.152196680534239
best_error: 4.1521966575678295
best_error: 4.152196657563946
best_error: 4.152196652441433
best_error: 4.152196652437533
best_error: 4.15219665228724
best_error: 4.152196652137809
best_error: 4.151992807644961
best_error: 4.15199279874768
best_error: 4.151892911176857
best_error: 4.151892902205445
best_error: 4.151518600316695
best_error: 4.151518591198448
best_error: 4.149747084359362
best_error: 4.149747073956986
best_error: 4.149728556910453
best_error: 4.149728546450097
best_error: 4.149661510422627
best_error: 4.149661499824033
best_error: 4.149493673042875
best_error: 4.149493662240904
best_error: 4.149089888502083
best_error: 4.149089877528169
best_error: 4.148729839459781
best_error: 4.148729816301603
best_error: 4.145203050697451
best_error: 4.145203041704231
best_error: 4.142804445803245
best_error: 4.142804439397234
best_error: 4.142532080530294
best_error: 4.142532058851615
best_error: 4.14235448783955
best_error: 4.1423544797549745
best_error: 4.138550227466186
best_error: 4.138550204771636
best_error: 4.133644777369239
best_error: 4.133644767223831
best_error: 4.131272554769437
best_error: 4.1312725444783585
best_error: 4.125182490076049
best_error: 4.125182479616276
best_error: 4.123880902295665
best_error: 4.1238808806111775
best_error: 4.123830475108894
best_error: 4.1238304533889885
best_error: 4.1238122968643705
best_error: 4.123812286366037
best_error: 4.123730655483536
best_error: 4.123730631559683
best_error: 4.123723555218001
best_error: 4.1237235312761005
best_error: 4.1237096329534255
best_error: 4.123709609001932
best_error: 4.1237056093264695
best_error: 4.123705585372204
best_error: 4.123704290410899
best_error: 4.123704266455727
best_error: 4.123703556243436
best_error: 4.123703532287755
best_error: 4.123702788881438
best_error: 4.123702764925234
best_error: 4.123702121195718
best_error: 4.123702097239048
best_error: 4.123702003782498
best_error: 4.1237019798257455
best_error: 4.123701947024904
best_error: 4.1237019230681184
best_error: 4.123701882422462
best_error: 4.1237018584656315
best_error: 4.12370184837186
best_error: 4.123701824415008
best_error: 4.123701819239306
best_error: 4.123701819235281
best_error: 4.123701819008372
best_error: 4.123701819004344
best_error: 4.12370181886252
best_error: 4.123701818858495
best_error: 4.123701818378115
best_error: 4.123701818374095
best_error: 4.12370181835548
best_error: 4.123701818351462
