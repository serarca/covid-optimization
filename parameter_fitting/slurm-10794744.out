ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.61822578647412
best_error: 10.618225771645253
best_error: 10.558283311909443
best_error: 10.558283293424049
best_error: 9.919447820463883
best_error: 9.919447558026514
best_error: 6.4849621215062525
best_error: 6.484961668715465
best_error: 4.159905768641648
best_error: 4.15990546727088
best_error: 3.8867353704060106
best_error: 3.886735366492199
best_error: 3.886735363332749
best_error: 3.884593315663595
best_error: 3.8845933137071476
best_error: 3.884593308505677
best_error: 3.881393539060749
best_error: 3.881393464196047
best_error: 3.8783758482976105
best_error: 3.8783758409135496
best_error: 3.8758966989666144
best_error: 3.8758966483221107
best_error: 3.8757559949186673
best_error: 3.8757559837292073
best_error: 3.875353221989119
best_error: 3.875353210836953
best_error: 3.8751465322447975
best_error: 3.875146479128696
best_error: 3.874897892732485
best_error: 3.874897881344178
best_error: 3.87428003380183
best_error: 3.8742799808888995
best_error: 3.8724024188179826
best_error: 3.8724023639397958
best_error: 3.8652192790482127
best_error: 3.8652192186875105
best_error: 3.8422273970587626
best_error: 3.8422273068233266
best_error: 3.721453093596743
best_error: 3.7214528289352495
best_error: 3.5704403536680545
best_error: 3.5704400441703426
best_error: 3.561993514852845
best_error: 3.5619932203915567
best_error: 3.537615358953525
best_error: 3.537615089994438
best_error: 3.488563760098189
best_error: 3.488563536859109
best_error: 3.4691190247713015
best_error: 3.469118999137011
best_error: 3.4487575361465623
best_error: 3.448757445469648
best_error: 3.4325366494536085
best_error: 3.4325366485038584
best_error: 3.432536648393266
best_error: 3.4316714861630127
best_error: 3.4316714796020804
best_error: 3.4304741178260008
best_error: 3.430474108268232
best_error: 3.428435418638929
best_error: 3.428435408459291
best_error: 3.422401871464925
best_error: 3.422401858377646
best_error: 3.4194363020914103
best_error: 3.419436291880314
best_error: 3.4088739032405755
best_error: 3.408873894874611
best_error: 3.3818913687818357
best_error: 3.3818912641664367
best_error: 3.3663244555889653
best_error: 3.3663244425183327
best_error: 3.3611183580980173
best_error: 3.3611183479055278
best_error: 3.3554452724596144
best_error: 3.355445251572214
best_error: 3.349810073874205
best_error: 3.3498100734249903
best_error: 3.3483651033050585
best_error: 3.3483651016696228
best_error: 3.3483174063673653
best_error: 3.348317405408833
best_error: 3.3482901387526587
best_error: 3.3482901381504133
best_error: 3.34823212816515
best_error: 3.3482321280759075
best_error: 3.3482321280263982
best_error: 3.3481167235673452
best_error: 3.34811672309773
best_error: 3.3480350826158514
best_error: 3.348035082260998
best_error: 3.348031178622681
best_error: 3.3480311781550482
best_error: 3.3480149738870084
best_error: 3.3480149735205793
best_error: 3.3480127590558793
best_error: 3.348012758574904
best_error: 3.348000558539457
best_error: 3.3480005579900785
best_error: 3.347999024627587
best_error: 3.347999024086487
best_error: 3.347997563708689
best_error: 3.347997563175446
best_error: 3.3479877621815732
best_error: 3.347987761608553
best_error: 3.347966760647889
best_error: 3.3479667600840983
best_error: 3.3479666756260604
best_error: 3.3479666750627386
best_error: 3.347966592287805
best_error: 3.347966591724942
best_error: 3.3479665124290428
best_error: 3.347966511866602
best_error: 3.347966434338828
best_error: 3.3479664337768
best_error: 3.347966389320458
best_error: 3.3479663887586733
best_error: 3.347966345492676
best_error: 3.3479663449311245
best_error: 3.347966314460046
best_error: 3.347966313898664
best_error: 3.347966284694098
best_error: 3.3479662841328697
best_error: 3.347966231713458
best_error: 3.3479662311525127
best_error: 3.34796618032419
best_error: 3.3479661797635187
best_error: 3.3479656981101664
best_error: 3.347965697552064
best_error: 3.3479656938878732
best_error: 3.347965693329791
best_error: 3.3479656897605503
best_error: 3.347965689202492
best_error: 3.3479656873932186
best_error: 3.347965686835175
best_error: 3.3479656850884836
best_error: 3.3479656845304477
best_error: 3.347963766438933
best_error: 3.347963766037508
best_error: 3.3479548706398505
best_error: 3.3479548704974063
best_error: 3.34794922233569
best_error: 3.347949222192967
best_error: 3.347947446498541
best_error: 3.3479474463556924
best_error: 3.3479460882812
best_error: 3.3479460881384107
best_error: 3.3479383356478407
best_error: 3.347938335504444
best_error: 3.347938294747413
best_error: 3.3479382946040084
best_error: 3.3479382543951908
best_error: 3.3479382542517913
best_error: 3.347938211666734
best_error: 3.3479382115233287
best_error: 3.347938170540549
best_error: 3.347938170397138
best_error: 3.3479375167932175
best_error: 3.3479375166497602
best_error: 3.3479374808811584
best_error: 3.347937480737702
best_error: 3.347937444854324
best_error: 3.347937444710859
best_error: 3.3479363594583043
best_error: 3.347936359314758
best_error: 3.3479363554137658
best_error: 3.3479363552702184
best_error: 3.3479363514068057
best_error: 3.3479363512632587
best_error: 3.347936349325606
best_error: 3.3479363491820644
best_error: 3.3479363472646995
best_error: 3.3479363471211543
best_error: 3.347936346150533
best_error: 3.3479363460069926
best_error: 3.347936345350674
best_error: 3.347936345207123
best_error: 3.3479363445603427
best_error: 3.347936344416798
best_error: 3.347936336456013
best_error: 3.3479363363124763
best_error: 3.3479363284230566
best_error: 3.3479363282795065
best_error: 3.3479363244181224
best_error: 3.347936324274587
best_error: 3.3479363204484764
best_error: 3.347936320304929
best_error: 3.3479363188189475
