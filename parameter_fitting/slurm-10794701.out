ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.569688508450236
best_error: 11.569688501908256
best_error: 11.566746417707655
best_error: 11.566746410905518
best_error: 8.556856314947435
best_error: 8.556855894993237
best_error: 7.738646178778659
best_error: 7.738645649579523
best_error: 6.7622668027058905
best_error: 6.762266288119809
best_error: 6.254493622303959
best_error: 6.254493602630371
best_error: 6.23235486536964
best_error: 6.232354854533759
best_error: 6.229324393562381
best_error: 6.229324371058649
best_error: 6.228059193367683
best_error: 6.228059172290702
best_error: 6.226906244139341
best_error: 6.226906235023626
best_error: 6.225965783096747
best_error: 6.225965763024757
best_error: 6.219844493122573
best_error: 6.219844473365806
best_error: 6.195004306471574
best_error: 6.195004289063566
best_error: 6.094062349558973
best_error: 6.094062225802089
best_error: 5.577090779409242
best_error: 5.577090577488469
best_error: 5.209950478499925
best_error: 5.2099503290267934
best_error: 5.206884743280755
best_error: 5.206884595223268
best_error: 5.19885667770446
best_error: 5.198856677582108
best_error: 5.197998517369451
best_error: 5.197998373938171
best_error: 5.197887003450111
best_error: 5.197886980085078
best_error: 5.196799706508602
best_error: 5.196799683102214
best_error: 5.1924769723181905
best_error: 5.192476952283508
best_error: 5.176329382517987
best_error: 5.176329382395975
best_error: 5.114831498610089
best_error: 5.1148314916194195
best_error: 4.941077527322446
best_error: 4.941077466746437
best_error: 4.90544567987924
best_error: 4.905445632143534
best_error: 4.870472834486875
best_error: 4.870472759704532
best_error: 4.857960364287297
best_error: 4.8579603449825015
best_error: 4.854528339898523
best_error: 4.85452832766621
best_error: 4.8498894329219135
best_error: 4.849889423670342
best_error: 4.8189970950203165
best_error: 4.818997087283998
best_error: 4.812166999858131
best_error: 4.812166866909808
best_error: 4.788995659905247
best_error: 4.78899544211914
best_error: 4.778412364801084
best_error: 4.778412174141985
best_error: 4.769333400542505
best_error: 4.769333336747181
best_error: 4.7388966178504415
best_error: 4.73889659914632
best_error: 4.673121235286599
best_error: 4.673121078404075
best_error: 4.647110851442724
best_error: 4.647110828648321
best_error: 4.630606381448068
best_error: 4.630606293393122
best_error: 4.595341223102364
best_error: 4.59534111764418
best_error: 4.582417181959819
best_error: 4.58241707043358
best_error: 4.444731905718063
best_error: 4.444731820059452
best_error: 4.349356254579291
best_error: 4.349356233635623
best_error: 4.349356178872474
best_error: 4.2898388485450045
best_error: 4.28983882007162
best_error: 4.288296331550621
best_error: 4.288296308632021
best_error: 4.287982019231545
best_error: 4.28798199814637
best_error: 4.28411247915165
best_error: 4.284112478603015
best_error: 4.284112461071772
best_error: 4.28285228132755
best_error: 4.282852135581978
best_error: 4.27246916634302
best_error: 4.272469021190767
best_error: 4.245548439783734
best_error: 4.245548427904428
best_error: 4.238389158215009
best_error: 4.238389117636536
best_error: 4.231339614197841
best_error: 4.231339580868335
best_error: 4.217546290883305
best_error: 4.2175462890551625
best_error: 4.217546281580623
best_error: 4.216998563359146
best_error: 4.216998559780238
best_error: 4.2169985574821816
best_error: 4.216791066282802
best_error: 4.216791062163762
best_error: 4.21679106194601
best_error: 4.2166871678295115
best_error: 4.216687163177556
best_error: 4.216632791988994
best_error: 4.216632787300749
best_error: 4.216623462562071
best_error: 4.216623457873907
best_error: 4.216615928580471
best_error: 4.216615923892371
best_error: 4.216612194123337
best_error: 4.216612189435262
best_error: 4.216609119440869
best_error: 4.2166091147528215
best_error: 4.216607678060236
best_error: 4.216607673372197
best_error: 4.216606458382754
best_error: 4.216606453694723
best_error: 4.216606438621076
best_error: 4.216606433933041
best_error: 4.216568081755609
best_error: 4.216568049935532
best_error: 4.214821270491952
best_error: 4.214821267742392
best_error: 4.214821263906782
best_error: 4.214804358555005
best_error: 4.214804356050267
best_error: 4.214804351235218
best_error: 4.214748031217733
best_error: 4.21474802904677
best_error: 4.214748023358214
best_error: 4.214682589522786
best_error: 4.214682575091029
best_error: 4.214656397428448
best_error: 4.214656397175399
best_error: 4.21465638559237
best_error: 4.214654661638525
best_error: 4.2146546616105525
best_error: 4.214654649616633
best_error: 4.214638439857902
best_error: 4.214638427130627
best_error: 4.214585478317151
best_error: 4.214585464215691
best_error: 4.2144949863835235
best_error: 4.214494970211459
best_error: 4.214375757130983
best_error: 4.214375738195365
best_error: 4.214154963245624
best_error: 4.21415494374996
best_error: 4.213259213591026
best_error: 4.213259196465682
best_error: 4.213034777224789
best_error: 4.2130347600421745
best_error: 4.212943592601004
best_error: 4.212943577531877
