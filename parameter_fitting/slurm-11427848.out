ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.323176027296373
best_error: 22.323175830549584
best_error: 4.508137119094595
best_error: 4.508137117551286
best_error: 4.50675062636723
best_error: 4.5067506263483
best_error: 4.506750626173352
best_error: 4.501112775854354
best_error: 4.50111277583442
best_error: 4.5011127756578695
best_error: 4.476858225858823
best_error: 4.476858225833988
best_error: 4.476858225650842
best_error: 4.335998686727727
best_error: 4.335998686640643
best_error: 4.335998686440485
best_error: 4.212167352345472
best_error: 4.212167352098713
best_error: 4.212167351965374
best_error: 4.031386022984815
best_error: 4.031386022105147
best_error: 3.035524751680016
best_error: 3.035524687511999
best_error: 3.013484244376608
best_error: 3.0134842248617573
best_error: 2.8551921478603486
best_error: 2.8551921330512307
best_error: 2.8505993934918
best_error: 2.8505993512353167
best_error: 2.841606984771945
best_error: 2.841606979947576
best_error: 2.841606971652829
best_error: 2.810850729554092
best_error: 2.8108506873637493
best_error: 2.807701532468763
best_error: 2.8077014903432955
best_error: 2.804088405445376
best_error: 2.804088363211318
best_error: 2.6741811375107782
best_error: 2.6741810916163256
best_error: 2.291532190788682
best_error: 2.2915321439559775
best_error: 2.2915320793309615
best_error: 2.235323674634044
best_error: 2.235323576589151
best_error: 2.2303770273299732
best_error: 2.2303769344150783
best_error: 2.162798149011909
best_error: 2.162798094469658
best_error: 2.1627980813987424
best_error: 1.9251122886530052
best_error: 1.9251120698460589
best_error: 1.8425836539375262
best_error: 1.8425836405600797
best_error: 1.8425836111743519
best_error: 1.7995462445826136
best_error: 1.799546222805698
best_error: 1.7821490031400216
best_error: 1.7821489378805069
best_error: 1.7780893318781856
best_error: 1.7780893058107896
best_error: 1.7767694314837184
best_error: 1.7767694314587117
best_error: 1.7767694309298592
best_error: 1.7767694244337857
best_error: 1.7762852742287845
best_error: 1.7762852717447628
best_error: 1.7762852675682197
best_error: 1.7736935412906425
best_error: 1.7736935405698182
best_error: 1.7736935405646568
best_error: 1.773693534803933
best_error: 1.7297676580031907
best_error: 1.7297676216026727
best_error: 1.492781776066466
best_error: 1.4927815928762656
best_error: 1.4580809040803269
best_error: 1.4580808391706443
best_error: 1.2934722339584424
best_error: 1.2934721534918914
best_error: 1.2676593041969344
best_error: 1.2676592527568866
best_error: 1.262275653932447
best_error: 1.2622756413910872
best_error: 1.2616914496897165
best_error: 1.2616914412130917
best_error: 1.2581539300888005
best_error: 1.2581538916951263
best_error: 1.2554169847131582
best_error: 1.2554169430434943
best_error: 1.2509309765453276
best_error: 1.2509309688786354
best_error: 1.2474787598856663
best_error: 1.2474787505482687
best_error: 1.2452753020245708
best_error: 1.2452752799488251
best_error: 1.2407566519010074
best_error: 1.2407566246651445
best_error: 1.2313508565739426
best_error: 1.2313508183898254
best_error: 1.2133178687192718
best_error: 1.2133178175552854
best_error: 1.1969197126364322
best_error: 1.1969196570460026
best_error: 1.1927453490112891
best_error: 1.1927453205870027
best_error: 1.185922009683984
best_error: 1.185921999814501
best_error: 1.1821787524924927
best_error: 1.182178743297174
best_error: 1.1796374225604982
best_error: 1.1796374218630021
best_error: 1.1796374217517493
best_error: 1.1796374194986272
best_error: 1.1695158103428582
best_error: 1.169515809843937
best_error: 1.1695158073380192
best_error: 1.1634748696811519
best_error: 1.1634747544154471
best_error: 1.1598151935831367
best_error: 1.1598151796823093
best_error: 1.1577396548275278
best_error: 1.1577396258289832
best_error: 1.1563251401288535
best_error: 1.1563251325193762
best_error: 1.156133200750815
best_error: 1.1561331986068994
best_error: 1.1559439190400487
best_error: 1.155943916828534
best_error: 1.1551085774344905
best_error: 1.1551085732684927
best_error: 1.1532490873536831
best_error: 1.1532490840602667
best_error: 1.152915177048267
best_error: 1.1529151708013956
best_error: 1.1486429613747018
best_error: 1.1486429467109176
best_error: 1.1468259311278188
best_error: 1.1468258950132026
best_error: 1.142355468817935
best_error: 1.1423554455996578
best_error: 1.1353939511711717
best_error: 1.1353939497499674
best_error: 1.1353939480234871
best_error: 1.135393947987624
best_error: 1.1304249144081269
best_error: 1.1304249063077962
best_error: 1.1260310882843454
best_error: 1.1260310497508415
best_error: 1.122343177260074
best_error: 1.122343131877211
best_error: 1.1201596510006773
best_error: 1.120159596411799
best_error: 1.118594728256304
best_error: 1.1185947199314537
best_error: 1.1183308788692055
best_error: 1.1183308752379324
best_error: 1.1179340230631225
best_error: 1.1179340191022231
best_error: 1.1176587773202282
best_error: 1.1176587700408631
best_error: 1.1171770036309356
best_error: 1.117176986107134
best_error: 1.116062197014734
best_error: 1.1160621601901917
best_error: 1.115176689256865
best_error: 1.1151766645016759
best_error: 1.1146088013208146
best_error: 1.1146088000767347
best_error: 1.1142728893144196
best_error: 1.114272889314262
best_error: 1.114272889301068
best_error: 1.1142728887090712
best_error: 1.1142728884062603
best_error: 1.1132729008226558
best_error: 1.1132728957683764
best_error: 1.1085129335931614
best_error: 1.1085129081745138
best_error: 1.101803005534739
best_error: 1.1018029649947212
best_error: 1.0928764487880964
best_error: 1.09287637586377
best_error: 1.090096454312203
best_error: 1.0900964254141468
best_error: 1.087248525427498
best_error: 1.08724851431423
best_error: 1.0855399291229513
best_error: 1.085539924046853
best_error: 1.0855399208989547
best_error: 1.0841362615872705
best_error: 1.0841362585902163
best_error: 1.0841362556513021
best_error: 1.074435828423713
best_error: 1.0744358281418145
best_error: 1.074435820827904
best_error: 1.0561786856713191
best_error: 1.0561786616608038
best_error: 1.0502415233413864
best_error: 1.0502415233372924
best_error: 1.0502415233037785
best_error: 1.0502415223802324
best_error: 1.0502415218732999
best_error: 1.0429736767308362
best_error: 1.0429736745919829
best_error: 1.0429736713576108
best_error: 1.0401541847162603
best_error: 1.0401541654593025
best_error: 1.0398389160890247
best_error: 1.0398389103105017
best_error: 1.0393291300905725
best_error: 1.0393291192029377
best_error: 1.039111832561212
best_error: 1.039111832186484
best_error: 1.0391118315265382
best_error: 1.0388494131359558
best_error: 1.0388494078320232
best_error: 1.035248708578514
best_error: 1.0352486591179626
best_error: 1.0266955151538804
best_error: 1.02669542644642
best_error: 1.0204620228206422
best_error: 1.020461956556184
best_error: 1.0184950429124904
best_error: 1.0184950361859457
best_error: 1.0179254446658583
best_error: 1.0179254350011682
best_error: 1.0176904878391295
best_error: 1.0176904872866508
best_error: 1.0176904820352581
best_error: 1.0176065736971445
best_error: 1.0176065735810278
best_error: 1.0176065703080748
best_error: 1.0175802916847996
best_error: 1.0175802909937373
best_error: 1.0175753229312143
best_error: 1.017575322597767
best_error: 1.0175753225612179
best_error: 1.0175713162238456
best_error: 1.0175713158865198
best_error: 1.0175713158184323
best_error: 1.0175655228710943
best_error: 1.0175655210214933
best_error: 1.0175576816386747
best_error: 1.0175576793290604
best_error: 1.0175352382809617
best_error: 1.0175352327097775
best_error: 1.017505995808967
best_error: 1.0175059907535478
best_error: 1.0174212166024967
best_error: 1.0174212146727788
best_error: 1.0174137070168552
best_error: 1.017413706974857
best_error: 1.0174137068412556
best_error: 1.0174109476837023
best_error: 1.0174109471430135
best_error: 1.0174033935284796
best_error: 1.0174033932883577
best_error: 1.0173547218908332
best_error: 1.0173547208832965
best_error: 1.0173191519023772
best_error: 1.0173191472066796
best_error: 1.0172699933113105
best_error: 1.0172699891410582
best_error: 1.017108434725416
best_error: 1.0171084345521544
