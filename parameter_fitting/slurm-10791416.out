ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.40254799293507
best_error: 10.402547988094117
best_error: 10.113278962916782
best_error: 10.113278938031462
best_error: 7.223066509060104
best_error: 7.223066169742476
best_error: 5.596995738539071
best_error: 5.596995235811086
best_error: 4.359082952276674
best_error: 4.359082562849585
best_error: 4.196691824600345
best_error: 4.196691773349875
best_error: 4.1697699718443655
best_error: 4.169769971754623
best_error: 4.169769955071655
best_error: 4.167589547372034
best_error: 4.167589547282421
best_error: 4.167589530446127
best_error: 4.1661418268276735
best_error: 4.16614178086089
best_error: 4.16451575239434
best_error: 4.1645157523044345
best_error: 4.164515735343562
best_error: 4.150394508766992
best_error: 4.150394508674724
best_error: 4.150394491593978
best_error: 4.092941483345389
best_error: 4.092941483243266
best_error: 4.092941466110487
best_error: 3.871078355261818
best_error: 3.87107829430576
best_error: 3.584017876100922
best_error: 3.5840176562806896
best_error: 3.5816445452081602
best_error: 3.5816443342825437
best_error: 3.5798702964435565
best_error: 3.5798700816182807
best_error: 3.5792115921561725
best_error: 3.5792113747708987
best_error: 3.5790021193453505
best_error: 3.5790018999793887
best_error: 3.5788641542256485
best_error: 3.578863934587414
best_error: 3.5787946258701275
best_error: 3.5787944053334373
best_error: 3.5787654409459164
best_error: 3.578765219907315
best_error: 3.578729285638736
best_error: 3.578729063385899
best_error: 3.5787290633069055
best_error: 3.5787290632358846
best_error: 3.5787290631460147
best_error: 3.578729062961486
best_error: 3.5787290626656594
best_error: 3.5787290624492925
best_error: 3.5787290621795314
best_error: 3.5787290603521185
best_error: 3.578729057796875
best_error: 3.5787290568033763
best_error: 3.578729054982541
best_error: 3.5787290508192853
best_error: 3.516704530608377
best_error: 3.5167045304290925
best_error: 3.516704524024528
best_error: 3.5142938025292594
best_error: 3.514293802348044
best_error: 3.5142937959467417
best_error: 3.5051837369592476
best_error: 3.5051837367719862
best_error: 3.5051837303993887
best_error: 3.458432667831586
best_error: 3.458432640283614
best_error: 3.433950556209986
best_error: 3.433950531280723
best_error: 3.423848904436811
best_error: 3.42384875587045
best_error: 3.384530240875634
best_error: 3.3845302309784477
best_error: 3.3001950391278223
best_error: 3.3001950285800667
best_error: 3.1190731544306676
best_error: 3.1190731472006856
best_error: 3.1190730320554843
best_error: 2.9061598733266516
best_error: 2.9061598607099297
best_error: 2.9061597388150133
best_error: 2.796550590505556
best_error: 2.7965505584331782
best_error: 2.775478868564197
best_error: 2.7754788570117688
best_error: 2.7459063897671485
best_error: 2.7459063889891215
best_error: 2.731300038925167
best_error: 2.731300038119772
best_error: 2.6824183233398164
best_error: 2.6824182145949185
best_error: 2.660522975572868
best_error: 2.6605229676732836
best_error: 2.6584328626939113
best_error: 2.6584328514729743
best_error: 2.647850776954722
best_error: 2.647850756587943
best_error: 2.634602421018808
best_error: 2.6346023436156125
best_error: 2.6342935655321016
best_error: 2.634293560451648
best_error: 2.6335691429767456
best_error: 2.6335691375212655
best_error: 2.633059322188496
best_error: 2.6330593166279233
best_error: 2.6327956988996104
best_error: 2.632795693261953
best_error: 2.6327600791468244
best_error: 2.632760073512924
best_error: 2.6327401681949696
best_error: 2.6327401625631746
best_error: 2.632738683414234
best_error: 2.6327386777825885
best_error: 2.632738001228489
best_error: 2.6327379955969166
best_error: 2.632737817059981
best_error: 2.6327378114284263
best_error: 2.6327378027523096
best_error: 2.6327377398283693
best_error: 2.6327377387087565
best_error: 2.6327377368174574
best_error: 2.632737736801102
best_error: 2.632737736580322
