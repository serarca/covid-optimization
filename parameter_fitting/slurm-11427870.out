ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 80
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 20.837513404884884
best_error: 20.837513111742922
best_error: 4.357166828886883
best_error: 4.357166827015477
best_error: 4.3558921169815275
best_error: 4.355892116963919
best_error: 4.355892116796414
best_error: 4.350726071147633
best_error: 4.350726071129278
best_error: 4.350726070960609
best_error: 4.328874669728133
best_error: 4.328874669706286
best_error: 4.328874669532862
best_error: 4.215112792884459
best_error: 4.215112792831161
best_error: 4.21511279264068
best_error: 4.068578240382273
best_error: 4.06857824022451
best_error: 4.068578240057741
best_error: 3.811605026276764
best_error: 3.811605025545478
best_error: 3.7336304284064643
best_error: 3.7336304273458194
best_error: 3.219178628585142
best_error: 3.2191786216589446
best_error: 2.990731804944037
best_error: 2.9907317961717927
best_error: 2.986090895491168
best_error: 2.986090892255429
best_error: 2.98609088730453
best_error: 2.9793338656510873
best_error: 2.979333856960949
best_error: 2.9563123050362883
best_error: 2.9563122770245336
best_error: 2.485845158140723
best_error: 2.485845120033714
best_error: 2.4858450495915334
best_error: 2.3091663681383623
best_error: 2.309166325075025
best_error: 2.3091662402700504
best_error: 2.3072781319982076
best_error: 2.3072780221429467
best_error: 2.2852817252782236
best_error: 2.285281644868678
best_error: 2.0213315240639833
best_error: 2.021331485565592
best_error: 2.0213314625764904
best_error: 1.8438008470003389
best_error: 1.8438006334462838
best_error: 1.7124189580685327
best_error: 1.7124188904604867
best_error: 1.6744516041019823
best_error: 1.674451553951142
best_error: 1.6500406826255192
best_error: 1.6500406577107032
best_error: 1.648642564639257
best_error: 1.6486425478099225
best_error: 1.6473337163087967
best_error: 1.647333716293136
best_error: 1.6473337159884196
best_error: 1.6473337109761446
best_error: 1.6467336944224593
best_error: 1.6467336944047104
best_error: 1.646733694085224
best_error: 1.6467336891338156
best_error: 1.6445894299204085
best_error: 1.6445894293509777
best_error: 1.6445894248659416
best_error: 1.6223051010587712
best_error: 1.6223050757832607
best_error: 1.501567971143
best_error: 1.5015678748739316
best_error: 1.4953964152697703
best_error: 1.495396396226881
best_error: 1.2966662949088894
best_error: 1.2966662583192627
best_error: 1.292746363419451
best_error: 1.292746361163156
best_error: 1.29274635246903
best_error: 1.2912922331929366
best_error: 1.2912922156666673
best_error: 1.2900432517458305
best_error: 1.2900432330301101
best_error: 1.2866622158058334
best_error: 1.2866622113047126
best_error: 1.2861529112111514
best_error: 1.2861529081647072
best_error: 1.2848060320561407
best_error: 1.284806030303565
best_error: 1.2748096756821103
best_error: 1.274809572883995
best_error: 1.252613007909119
best_error: 1.2526129263081263
best_error: 1.2259715984646655
best_error: 1.2259715947360315
best_error: 1.220559807324717
best_error: 1.220559806797358
best_error: 1.220559806002585
best_error: 1.203088778785682
best_error: 1.2030887367384724
best_error: 1.1924213922393891
best_error: 1.1924213921570714
best_error: 1.192421391010718
best_error: 1.1924213909121693
best_error: 1.1924213904805676
best_error: 1.1924213892968722
best_error: 1.190502089292223
best_error: 1.1905020855552175
best_error: 1.1905020696087165
best_error: 1.1802428530116318
best_error: 1.1802428279828812
best_error: 1.1779550088170472
best_error: 1.1779549804752518
best_error: 1.1777230037045774
best_error: 1.1777229804293077
best_error: 1.1775392168784817
best_error: 1.1775391998647131
best_error: 1.1767795938713637
best_error: 1.17677958848253
best_error: 1.1747197162457168
best_error: 1.1747197068382176
best_error: 1.1741345201386393
best_error: 1.174134514237691
best_error: 1.1740208873941158
best_error: 1.1740208844923457
best_error: 1.1738722906685188
best_error: 1.1738722877474335
best_error: 1.1732529156520821
best_error: 1.1732529138526993
best_error: 1.1729992694129547
best_error: 1.1729992593571203
best_error: 1.1722076418369398
best_error: 1.172207631873068
best_error: 1.1720606195610046
best_error: 1.172060618221893
best_error: 1.1720606135731866
best_error: 1.1716552491376753
best_error: 1.17165524335711
best_error: 1.1703727959720536
best_error: 1.1703727915324345
best_error: 1.168483450707164
best_error: 1.1684834452263846
best_error: 1.1679155443458418
best_error: 1.1679155412097035
best_error: 1.1648072753087444
best_error: 1.164807256045668
best_error: 1.1570863613814033
best_error: 1.157086342192779
best_error: 1.1546273375107328
best_error: 1.1546273240474882
best_error: 1.1471205708685714
best_error: 1.1471205607195423
best_error: 1.1298864666719057
best_error: 1.129886444602545
best_error: 1.1150228244495637
best_error: 1.115022635455909
best_error: 1.1003404705711939
best_error: 1.1003404191958088
best_error: 1.0953477202521358
best_error: 1.0953476830103737
best_error: 1.094697465300092
best_error: 1.0946974350347956
best_error: 1.0926905020107829
best_error: 1.0926904955771473
best_error: 1.09229856090464
best_error: 1.0922985556820144
best_error: 1.092046712307383
best_error: 1.0920467043522315
best_error: 1.090938176332025
best_error: 1.0909381647440555
best_error: 1.0894769525102799
best_error: 1.0894769305717555
best_error: 1.0885898141270662
best_error: 1.0885898003690437
best_error: 1.0876106541447779
best_error: 1.0876106457407018
best_error: 1.0858328809900892
best_error: 1.0858328809556277
best_error: 1.0858328804724093
best_error: 1.0858328791443421
best_error: 1.0850258185543133
best_error: 1.0850258039307499
best_error: 1.0846244835959156
best_error: 1.0846244825533835
best_error: 1.0846244821330984
best_error: 1.0840177181519934
best_error: 1.0840177181439206
best_error: 1.0840177163297557
best_error: 1.0836451158077507
best_error: 1.0836451124032882
best_error: 1.0832477834787382
best_error: 1.0832477543622892
best_error: 1.0831073133840443
best_error: 1.0831073023644544
best_error: 1.0820464791549569
best_error: 1.082046456651971
best_error: 1.0804370691824015
best_error: 1.0804370503722125
best_error: 1.078899451776917
best_error: 1.0788994429482528
best_error: 1.0780349817076749
best_error: 1.0780349730720051
best_error: 1.0778588522797292
best_error: 1.0778588490578913
best_error: 1.0778182777125629
best_error: 1.07781827625749
best_error: 1.077790947753159
best_error: 1.0777909464750677
best_error: 1.077740840169884
best_error: 1.0777408376217814
best_error: 1.0775465669440105
best_error: 1.0775465552342223
best_error: 1.0773394309390447
best_error: 1.0773394213301442
best_error: 1.0766287531522645
best_error: 1.0766287494839744
best_error: 1.071910065467557
best_error: 1.071910029531879
best_error: 1.0679501747705025
best_error: 1.067950140801079
best_error: 1.0671764249293627
best_error: 1.0671764249279203
best_error: 1.0671764230489484
best_error: 1.0661324655542652
best_error: 1.0661324491928794
best_error: 1.0656429378927077
best_error: 1.0656429181974398
best_error: 1.065370067459667
best_error: 1.0653700510115183
best_error: 1.063950790042937
best_error: 1.0639507900406406
best_error: 1.0639507878584973
best_error: 1.0639378506741863
best_error: 1.0639378506460766
best_error: 1.063937848423795
best_error: 1.0639371212982918
best_error: 1.0639371212694189
best_error: 1.0639371190488884
best_error: 1.0638745290846032
best_error: 1.0638745251963213
best_error: 1.0634930209585256
best_error: 1.0634930055021645
best_error: 1.0613688090697486
best_error: 1.0613688073691019
best_error: 1.0613688066340476
best_error: 1.0613513063462103
best_error: 1.0613513031533122
best_error: 1.060016668092736
best_error: 1.060016668036521
best_error: 1.0600166680119762
best_error: 1.060016667775813
best_error: 1.0567447772286647
best_error: 1.0567447567483583
best_error: 1.0553131558455784
best_error: 1.0553131431786513
best_error: 1.0550878422630985
best_error: 1.0550878395898717
best_error: 1.0549934687748537
best_error: 1.0549934675026096
best_error: 1.054944051976735
best_error: 1.0549440503309386
best_error: 1.0548750461400187
best_error: 1.0548750459620395
best_error: 1.05469473189043
best_error: 1.0546947276423433
best_error: 1.0543610406553479
best_error: 1.0543610270362498
best_error: 1.0525990103337408
best_error: 1.0525989953133257
best_error: 1.0523648080559718
best_error: 1.052364794433212
best_error: 1.0521682410648843
best_error: 1.0521682313260894
best_error: 1.0521234019328487
best_error: 1.0521234018899333
best_error: 1.0521234018081742
