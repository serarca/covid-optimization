ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.240124792475303
best_error: 23.240124230027522
best_error: 4.8176293802388
best_error: 4.81762937930514
best_error: 4.817468147173004
best_error: 4.817468147167257
best_error: 4.817468147159544
best_error: 4.816821224235156
best_error: 4.816821224229317
best_error: 4.816821224221642
best_error: 4.814199793732307
best_error: 4.814199793726078
best_error: 4.814199793718572
best_error: 4.803105727045007
best_error: 4.803105727036784
best_error: 4.803105727030268
best_error: 4.744315068132054
best_error: 4.744315068095561
best_error: 4.674116873397828
best_error: 4.6741168732099965
best_error: 4.516474424911649
best_error: 4.516474422879801
best_error: 4.463404001979354
best_error: 4.4634039986723
best_error: 4.008116997078691
best_error: 4.008116979699047
best_error: 3.6657672104927777
best_error: 3.6657671764178006
best_error: 3.3872137389671417
best_error: 3.3872136850682377
best_error: 3.380812246252942
best_error: 3.3808121120741634
best_error: 3.2599443368191796
best_error: 3.2599441090799983
best_error: 3.2244619843248548
best_error: 3.2244618496573993
best_error: 3.0028591468206782
best_error: 3.0028589775375476
best_error: 2.898685587253061
best_error: 2.8986854383423792
best_error: 2.8369945426456478
best_error: 2.8369943730973266
best_error: 2.6981744084190167
best_error: 2.6981743974050176
best_error: 2.6835026639678228
best_error: 2.683502653959491
best_error: 2.6490073167760655
best_error: 2.649007231519789
best_error: 2.6321822697661243
best_error: 2.632182250588628
best_error: 2.626655781358724
best_error: 2.626655775006039
best_error: 2.625556037251698
best_error: 2.62555602381072
best_error: 2.6224311900775636
best_error: 2.6224311898174983
best_error: 2.622431185730176
best_error: 2.58558954957536
best_error: 2.5855895240551687
best_error: 2.415998752384929
best_error: 2.4159987134667915
best_error: 2.4149380727122334
best_error: 2.4149379471646624
best_error: 2.377765625666063
best_error: 2.3777655818507415
best_error: 2.193541925652975
best_error: 2.193541904180629
best_error: 2.101742722792028
best_error: 2.1017427219805955
best_error: 2.101742714856727
best_error: 2.04463067905416
best_error: 2.044630678214357
best_error: 2.044630671889785
best_error: 2.0247250785848827
best_error: 2.0247250125029366
best_error: 1.9867427645108213
best_error: 1.986742679383789
best_error: 1.8690035921488106
best_error: 1.8690035007927448
best_error: 1.8644192892422853
best_error: 1.864419235619795
best_error: 1.8585689297040913
best_error: 1.8585689250601547
best_error: 1.8548825389703256
best_error: 1.854882512519707
best_error: 1.8534879959290727
best_error: 1.8534879955386965
best_error: 1.853487994284349
best_error: 1.8534879917932465
best_error: 1.8532753735220566
best_error: 1.853275373490619
best_error: 1.8532753729118605
best_error: 1.8532753695769
best_error: 1.8524303506510054
best_error: 1.852430344119126
best_error: 1.8405338522889951
best_error: 1.840533759852346
best_error: 1.8242082330047256
best_error: 1.82420811082965
best_error: 1.7854711627021933
best_error: 1.7854710732426338
best_error: 1.779474453953584
best_error: 1.7794744095882375
best_error: 1.7787659517246854
best_error: 1.7787659475217066
best_error: 1.778705545549148
best_error: 1.7787055447410014
best_error: 1.7786823599280686
best_error: 1.7786823580306668
best_error: 1.778674726477758
best_error: 1.7786747260796063
best_error: 1.778674725932574
best_error: 1.7786685692881208
best_error: 1.7786685691421342
best_error: 1.7786685689127506
best_error: 1.7786685687223573
best_error: 1.778660293355416
best_error: 1.7786602924040946
best_error: 1.778630447142338
best_error: 1.7786304450573596
best_error: 1.7785979631213993
best_error: 1.7785979599674946
best_error: 1.7785220525504293
best_error: 1.7785220500327454
best_error: 1.7783193496999545
best_error: 1.7783193461078497
best_error: 1.7778471179012374
best_error: 1.7778471178091249
best_error: 1.7778471176762218
best_error: 1.7778471167512335
best_error: 1.776151200637964
best_error: 1.7761511946343764
best_error: 1.7728797469163229
best_error: 1.772879726574329
best_error: 1.7728791173064833
best_error: 1.7728790968282624
best_error: 1.7728786758022974
best_error: 1.7728786555553377
best_error: 1.7653191469506788
best_error: 1.7653191469135054
best_error: 1.7653191466649585
best_error: 1.7621703599762377
best_error: 1.762170336261379
best_error: 1.7612673344188312
best_error: 1.7612673131416048
best_error: 1.7604730227212337
best_error: 1.7604730116688758
best_error: 1.7598620423340205
best_error: 1.759862037915004
best_error: 1.7591497408025893
best_error: 1.7591497407821535
best_error: 1.7591497404502223
best_error: 1.7573377719981063
best_error: 1.7573377645473978
best_error: 1.7554185231122503
best_error: 1.7554185016856092
best_error: 1.7531594619075341
best_error: 1.753159433018557
best_error: 1.7500431980909905
best_error: 1.7500431730745376
best_error: 1.7452071335429664
best_error: 1.7452071332302703
best_error: 1.7452071324696337
best_error: 1.7423162177618154
best_error: 1.7423162098468739
best_error: 1.7372379283320072
best_error: 1.7372379261547402
best_error: 1.7368809566417147
best_error: 1.7368809539854988
best_error: 1.7368513372244134
best_error: 1.7368513338284068
best_error: 1.7368223936289096
best_error: 1.7368223929614546
best_error: 1.736821383258069
best_error: 1.7368213824988785
best_error: 1.7368208768433435
best_error: 1.7368208763950925
best_error: 1.7368196622413314
best_error: 1.7368196622297618
best_error: 1.7368196622172374
best_error: 1.7368159800272454
best_error: 1.7368159797062936
best_error: 1.736799742957168
best_error: 1.7367997396623938
best_error: 1.7367764074870982
best_error: 1.7367764036269944
best_error: 1.7367120226245651
best_error: 1.7367120151473057
best_error: 1.736638829301432
best_error: 1.736638816711531
best_error: 1.7365196214992107
best_error: 1.7365196150947009
best_error: 1.7363913694625785
best_error: 1.736391367365847
best_error: 1.7363262756084004
best_error: 1.736326274194935
best_error: 1.7363188753115164
best_error: 1.7363188744496745
best_error: 1.7363158010438635
best_error: 1.7363158010194233
best_error: 1.7363154767911606
best_error: 1.7363154763891335
best_error: 1.7363152101588222
best_error: 1.7363152100304788
best_error: 1.7363151228276583
best_error: 1.7363151226344267
best_error: 1.7363150812778452
best_error: 1.7363150810415795
best_error: 1.7363150540986667
best_error: 1.7363150540272618
best_error: 1.7363150539543077
best_error: 1.7363150538829057
best_error: 1.7363150538662095
best_error: 1.7363150537948098
best_error: 1.7363150537404035
best_error: 1.7363150537066787
best_error: 1.7363150536862042
best_error: 1.7363150536839935
best_error: 1.7363150536743581
