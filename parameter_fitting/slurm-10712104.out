ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 14.683710100006081
best_error: 14.68371001596477
best_error: 10.477254330436708
best_error: 10.477254324087887
best_error: 10.477254299733398
best_error: 10.088880922124861
best_error: 10.08888091453521
best_error: 9.918856431674303
best_error: 9.91885642238297
best_error: 9.845749535669661
best_error: 9.84574952361535
best_error: 9.735572367355278
best_error: 9.73557235135542
best_error: 7.766865799330693
best_error: 7.766865616542004
best_error: 7.365013114616123
best_error: 7.365012913490133
best_error: 6.936226620007748
best_error: 6.9362263921604885
best_error: 6.364124094833127
best_error: 6.364123934970452
best_error: 6.0032732281333505
best_error: 6.003273111089757
best_error: 5.887859806880641
best_error: 5.887859705285217
best_error: 5.746663598672728
best_error: 5.7466635350429796
best_error: 5.746663497292138
best_error: 5.626706007454811
best_error: 5.626705951062318
best_error: 5.626705905890276
best_error: 5.559556705319242
best_error: 5.559556652282788
best_error: 5.559556603223498
best_error: 5.553800133758214
best_error: 5.553800080245804
best_error: 5.553800031430486
best_error: 5.550187585525255
best_error: 5.55018753171578
best_error: 5.550187483052274
best_error: 5.539816542328484
best_error: 5.539816487719219
best_error: 5.539816439581946
best_error: 5.535806157597805
best_error: 5.535806102680297
best_error: 5.535806054745941
best_error: 5.534898731477417
best_error: 5.534898676490241
best_error: 5.5348986286017565
best_error: 5.534440666854735
best_error: 5.534440611832403
best_error: 5.534440563967024
best_error: 5.533867786863632
best_error: 5.533867731797302
best_error: 5.533867683960805
best_error: 5.533716592525518
best_error: 5.533716537447573
best_error: 5.533716489618701
best_error: 5.533666063644818
best_error: 5.533666008562986
best_error: 5.533665960736654
best_error: 5.533635925430138
best_error: 5.5336358703459805
best_error: 5.533635822521175
best_error: 5.533613087040857
best_error: 5.533613031954964
best_error: 5.533612984131306
best_error: 5.533601152765489
best_error: 5.533601097678682
best_error: 5.533601049855603
best_error: 5.533584932094981
best_error: 5.533584877006932
best_error: 5.533584829184687
best_error: 5.533581988131602
best_error: 5.533581933043328
best_error: 5.533581885221238
best_error: 5.533580710324026
best_error: 5.533580655235648
best_error: 5.533580607413594
best_error: 5.533579578350713
best_error: 5.533579523262253
best_error: 5.5335794754402725
best_error: 5.533579123988584
best_error: 5.533579068900076
best_error: 5.533579021078116
best_error: 5.533578835826312
best_error: 5.533578780737785
best_error: 5.533578732915844
best_error: 5.533578649362401
best_error: 5.5335785942738624
best_error: 5.533578546451951
best_error: 5.533578523458454
best_error: 5.533578469531605
best_error: 5.5335784205479985
best_error: 5.533578332584344
best_error: 5.533578176075229
best_error: 5.507022305560572
best_error: 5.507022250588075
best_error: 5.507022205688106
best_error: 5.399882351729066
best_error: 5.399882295876341
best_error: 5.399882259992339
best_error: 5.217170364773391
best_error: 5.2171703041157915
best_error: 5.217170285580848
best_error: 5.214506073681567
best_error: 5.214506073681566
best_error: 5.213294945583501
best_error: 5.2132949455835
best_error: 5.212202827575508
best_error: 5.212202827575507
best_error: 5.212202827575506
best_error: 5.211574907916953
best_error: 5.2113189049559905
best_error: 5.21131890495599
best_error: 5.211153400752782
best_error: 5.211153400752777
best_error: 5.211051433714301
best_error: 5.2110514337142995
best_error: 5.210986546169826
best_error: 5.210986546169824
best_error: 5.2109005184244825
best_error: 5.210900518424475
best_error: 5.210892340119898
best_error: 5.210892340119888
best_error: 5.210886570461869
best_error: 5.2108865704618665
best_error: 5.210883465802116
best_error: 5.210883465802112
best_error: 5.210881220288731
best_error: 5.21088122028873
best_error: 5.210881220288729
best_error: 5.210880059487396
best_error: 5.210880059487392
best_error: 5.210879353088988
best_error: 5.210878924518354
best_error: 5.210878924518347
best_error: 5.210878643380156
best_error: 5.210878643380152
best_error: 5.2108784784361415
best_error: 5.210878478436139
best_error: 5.210878366444918
best_error: 5.2108783664449145
best_error: 5.210878292417731
best_error: 5.210878292417727
best_error: 5.210878256831297
best_error: 5.2108782568312915
best_error: 5.210878231761182
best_error: 5.210878216796646
best_error: 5.210878216796644
best_error: 5.210878205290653
best_error: 5.2108782052906495
best_error: 5.210878199944049
best_error: 5.210878199944048
best_error: 5.210878195632992
best_error: 5.210878195632988
best_error: 5.210878163667447
best_error: 5.2108781596316325
best_error: 5.210878158509319
