ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.049590304118148
best_error: 24.049589652359302
best_error: 5.038971365754747
best_error: 5.0389713654805535
best_error: 5.03895902048781
best_error: 5.038959020484726
best_error: 5.038959020472004
best_error: 5.038909596047484
best_error: 5.038909596044392
best_error: 5.038909596031667
best_error: 5.038711201314976
best_error: 5.038711201311851
best_error: 5.038711201299108
best_error: 5.037906274234573
best_error: 5.037906274231314
best_error: 5.037906274218505
best_error: 5.034491299853388
best_error: 5.034491299849466
best_error: 5.034491299836436
best_error: 5.016391981493162
best_error: 5.016391981481948
best_error: 5.0163919814704885
best_error: 4.987905807173772
best_error: 4.987905807112176
best_error: 4.834158749560188
best_error: 4.834158744093013
best_error: 4.789017872394137
best_error: 4.789017863391144
best_error: 4.73135291340214
best_error: 4.731352899031502
best_error: 3.7283971434534164
best_error: 3.72839684972278
best_error: 3.7283966803093893
best_error: 3.5348149330692378
best_error: 3.534814794801937
best_error: 3.2197092286696476
best_error: 3.219709043992465
best_error: 3.0833375602807354
best_error: 3.083337531547987
best_error: 3.0736065601762452
best_error: 3.073606555870098
best_error: 3.0736065484581445
best_error: 3.068520501151158
best_error: 3.068520490323698
best_error: 3.0685204882471298
best_error: 3.037898156361272
best_error: 3.0378981345918312
best_error: 2.8370249515885195
best_error: 2.8370249254291426
best_error: 2.8370249203392963
best_error: 2.747406215324444
best_error: 2.747406195902161
best_error: 2.3288454209838165
best_error: 2.328845318959402
best_error: 2.1721074890564704
best_error: 2.1721072437026567
best_error: 2.116843172222619
best_error: 2.116843133467545
best_error: 2.1168430608122653
best_error: 2.088642778768711
best_error: 2.0886426754367755
best_error: 2.0449385449016018
best_error: 2.0449384882993518
best_error: 2.0240728244314696
best_error: 2.0240728068324922
best_error: 2.0076498999411196
best_error: 2.0076498968057392
best_error: 2.0076498953128206
best_error: 2.00334608520995
best_error: 2.003346084749562
best_error: 2.0033460844730877
best_error: 2.0033460822842573
best_error: 2.0025390278206743
best_error: 2.0025390227323308
best_error: 1.9980534249760509
best_error: 1.9980533880304683
best_error: 1.9979887327888497
best_error: 1.9979886987289248
best_error: 1.9977988471353931
best_error: 1.9977988358391792
best_error: 1.9977988321853724
best_error: 1.994203070576323
best_error: 1.99420306280702
best_error: 1.994203044658349
best_error: 1.9924228255254772
best_error: 1.9924228191320972
best_error: 1.9924228137202504
best_error: 1.9915125943184457
best_error: 1.9915125893701042
best_error: 1.9901101086164104
best_error: 1.9901101021314098
best_error: 1.9887797443775959
best_error: 1.9887797394012179
best_error: 1.9885769108934752
best_error: 1.9885768871485678
best_error: 1.9875243934053899
best_error: 1.9875243848103523
best_error: 1.9866095898687772
best_error: 1.9866095706324787
best_error: 1.9840323109563838
best_error: 1.9840322798073056
best_error: 1.9814424557009733
best_error: 1.9814424212298687
best_error: 1.9775987881752772
best_error: 1.977598767932519
best_error: 1.9696991392863017
best_error: 1.9696991158858004
best_error: 1.96174280095756
best_error: 1.9617427973062258
best_error: 1.9612856716512348
best_error: 1.96128567001824
best_error: 1.9612856696804741
best_error: 1.9612115787666484
best_error: 1.9612115747309131
best_error: 1.9611668377061122
best_error: 1.9611668374667355
best_error: 1.9611668365727697
best_error: 1.961157362059013
best_error: 1.9611573618850573
best_error: 1.9611573614506566
best_error: 1.9611486943781313
best_error: 1.9611486923805486
best_error: 1.9611308520456001
best_error: 1.9611308484763834
best_error: 1.9610656848147878
best_error: 1.961065684454814
best_error: 1.961065684233239
best_error: 1.960524701770549
best_error: 1.9605247002965467
best_error: 1.9584587997557685
best_error: 1.9584587921088046
best_error: 1.9503955717332238
best_error: 1.9503955695699366
best_error: 1.95016916257492
best_error: 1.9501691588368764
best_error: 1.9501672943554593
best_error: 1.950167290709536
best_error: 1.9430747624335052
best_error: 1.9430747567395827
best_error: 1.9335027277757217
best_error: 1.933502718723291
best_error: 1.9335027152418964
best_error: 1.9286324160325574
best_error: 1.9286323205583882
best_error: 1.928160248123445
best_error: 1.9281601792159002
best_error: 1.9240976527217586
best_error: 1.924097604914671
best_error: 1.9195380091922007
best_error: 1.9195379965441686
best_error: 1.9177299930953853
best_error: 1.91772998842937
best_error: 1.9176665787833804
best_error: 1.9176665784938356
best_error: 1.9176665683696277
best_error: 1.9176662925568504
best_error: 1.9176662923920866
best_error: 1.917666281830237
best_error: 1.9157167084780575
best_error: 1.9157167021435477
best_error: 1.915708675415099
best_error: 1.9157086628112132
best_error: 1.9154621042137223
best_error: 1.915462102025506
best_error: 1.9154202376140865
best_error: 1.9154202371885967
best_error: 1.915420234865588
best_error: 1.9153519192298347
best_error: 1.9153519109079389
best_error: 1.9152650398273787
best_error: 1.9152650289795878
best_error: 1.9150349884710096
best_error: 1.9150349735646666
best_error: 1.9142334627655322
best_error: 1.9142334321265633
best_error: 1.913733386989962
best_error: 1.9137333690174665
best_error: 1.9131908664714259
best_error: 1.9131908613153907
best_error: 1.9131022122671855
best_error: 1.9131021891166795
best_error: 1.912976076839644
best_error: 1.9129760709814039
best_error: 1.9129369857577734
best_error: 1.9129369807720535
best_error: 1.912747385230549
best_error: 1.9127473822098204
best_error: 1.9125403348814192
best_error: 1.9125403289374239
best_error: 1.9118409392720246
best_error: 1.9118409348533247
best_error: 1.9118409336793007
best_error: 1.9115768504503061
best_error: 1.9115768487358593
best_error: 1.911576846306348
best_error: 1.9114240881296272
best_error: 1.9114240874510862
best_error: 1.9114240869206642
best_error: 1.9113474776680217
best_error: 1.9113474756290763
best_error: 1.9111597832066605
best_error: 1.911159773803204
best_error: 1.910774884431482
best_error: 1.9107748658167858
best_error: 1.9099098847884515
best_error: 1.9099098445002902
best_error: 1.9099078251528752
best_error: 1.9099077839218845
best_error: 1.9096157091400698
best_error: 1.9096156756848228
best_error: 1.9090322277439598
best_error: 1.9090322276101193
best_error: 1.909032227368252
best_error: 1.909032226884242
best_error: 1.9085760396718334
best_error: 1.9085760260055935
best_error: 1.9084517882021919
best_error: 1.9084517841190387
best_error: 1.9083426985159564
best_error: 1.9083426937881984
best_error: 1.908214906117882
best_error: 1.90821489639608
best_error: 1.9079065285289294
best_error: 1.90790651948153
best_error: 1.907794310774305
best_error: 1.9077942984558884
best_error: 1.907730828375709
best_error: 1.9077308094859564
best_error: 1.9073856280497918
best_error: 1.9073856029720004
best_error: 1.9069755472373768
best_error: 1.9069755392229104
best_error: 1.9069189095218555
best_error: 1.9069189082028921
best_error: 1.9069169753333766
best_error: 1.9069169750996724
best_error: 1.9069169695442982
best_error: 1.906916968496165
best_error: 1.9069169131442243
best_error: 1.906916912718917
best_error: 1.9069168449257206
best_error: 1.9069168448631668
best_error: 1.9069168220610409
best_error: 1.906916821887593
best_error: 1.9069167583957383
best_error: 1.9069167581532378
best_error: 1.9069163727627134
best_error: 1.9069163716894986
best_error: 1.9069160131949368
best_error: 1.906916012256964
best_error: 1.9069125295985163
best_error: 1.9069125290237268
best_error: 1.9069047246126727
best_error: 1.9069047226092442
best_error: 1.906899653966044
best_error: 1.906899652240968
best_error: 1.9068824492792589
best_error: 1.9068824471784538
best_error: 1.906881683456816
best_error: 1.9068816812979685
best_error: 1.906767563504721
best_error: 1.906767553857089
