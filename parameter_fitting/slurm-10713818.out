ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.981291445833632
best_error: 10.981291400782975
best_error: 10.981291373146224
best_error: 10.553680615014082
best_error: 10.553680549672482
best_error: 10.553680518221643
best_error: 9.579740691584009
best_error: 9.579740588496952
best_error: 9.198018217174894
best_error: 9.198018096820455
best_error: 9.08149145122659
best_error: 9.081491323444608
best_error: 8.601312820290651
best_error: 8.601312683331455
best_error: 8.418846662621903
best_error: 8.41884648716484
best_error: 7.888467004732288
best_error: 7.888466927316697
best_error: 5.055935407775145
best_error: 5.055935171063467
best_error: 4.896040699793598
best_error: 4.896040405971336
best_error: 4.694373871379691
best_error: 4.694373546098171
best_error: 4.303542931123464
best_error: 4.303542813261469
best_error: 3.9789099605656033
best_error: 3.9789096269417046
best_error: 3.466201081571328
best_error: 3.466200749650286
best_error: 3.387412239522927
best_error: 3.3874119056785155
best_error: 3.350746503981109
best_error: 3.3507463948425524
best_error: 3.3486650994751868
best_error: 3.348664763487992
best_error: 3.2908523576482667
best_error: 3.290851994306151
best_error: 3.2296334683617216
best_error: 3.2296333819611647
best_error: 3.222055711007007
best_error: 3.2220556433006866
best_error: 3.1905653974603503
best_error: 3.1905653345046736
best_error: 3.0704321274457698
best_error: 3.0704317044345153
best_error: 2.5455904178556414
best_error: 2.545590041331434
best_error: 2.4158631265735018
best_error: 2.4158627221511626
best_error: 2.394532246974828
best_error: 2.3945318792342043
best_error: 2.2490024659729357
best_error: 2.2490021090736088
best_error: 2.195308971994795
best_error: 2.195308611809896
best_error: 1.7995291628207843
best_error: 1.7995288148398798
best_error: 1.706648946633074
best_error: 1.706648595415746
best_error: 1.6797094003622342
best_error: 1.6797090468455629
best_error: 1.6756604634979997
best_error: 1.6756601104916888
best_error: 1.674736315616573
best_error: 1.6747359625088432
best_error: 1.6744653376950858
best_error: 1.6744649845576098
best_error: 1.6744088182272296
best_error: 1.6744084650835582
best_error: 1.6744011356411388
best_error: 1.6744007824966212
best_error: 1.6743993336121188
best_error: 1.6743989804674018
best_error: 1.6743984312740054
best_error: 1.6743984312675315
best_error: 1.6743984291887695
best_error: 1.6743984017208704
best_error: 1.6743984004132442
best_error: 1.6743983401098244
best_error: 1.6647000112063381
best_error: 1.66469966136058
best_error: 1.6645995619937946
best_error: 1.6645992119432966
best_error: 1.6643509479295622
best_error: 1.6643505980055946
best_error: 1.6615986057289995
best_error: 1.661598255655955
best_error: 1.6514908740109164
best_error: 1.651490523291761
best_error: 1.646204002430244
best_error: 1.6462036505918314
best_error: 1.6366917396791723
best_error: 1.6366917396727403
best_error: 1.629842585840815
best_error: 1.6298425858344774
best_error: 1.629301474785791
best_error: 1.6293011176406764
best_error: 1.6277243852823964
best_error: 1.6277240279208012
best_error: 1.6201884787692014
best_error: 1.620188112111491
best_error: 1.546306262478192
best_error: 1.5463062624718553
best_error: 1.5463061170956927
best_error: 1.494910402869937
best_error: 1.4949104028637126
best_error: 1.494910258496801
best_error: 1.4859831031685973
best_error: 1.4859826693264178
best_error: 1.482838005402006
best_error: 1.4828375722486336
best_error: 1.4824165216266751
best_error: 1.4824160884199928
best_error: 1.4822501561574661
best_error: 1.482249722930626
best_error: 1.4821496404472805
best_error: 1.482149207208268
best_error: 1.482140566275631
best_error: 1.482140133035518
best_error: 1.4821356557300136
best_error: 1.4821352224893136
best_error: 1.4821349525618857
best_error: 1.4821345193210942
best_error: 1.482134489989142
best_error: 1.4819581465110538
best_error: 1.4819577132448007
best_error: 1.4816601299961185
best_error: 1.481659696687068
best_error: 1.4815613085150514
best_error: 1.4815608751934781
best_error: 1.4814687097392305
best_error: 1.4814682764076816
best_error: 1.4814367848033387
best_error: 1.4814363514684943
best_error: 1.481416308385614
best_error: 1.4814158750486803
best_error: 1.4814153405527009
best_error: 1.481414907215656
best_error: 1.48141487326189
