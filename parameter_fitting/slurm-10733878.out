ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.115182552121203
best_error: 8.115182539104712
best_error: 5.37970483418949
best_error: 5.379704033109173
best_error: 3.2330638959387805
best_error: 3.2330637039998296
best_error: 3.0775327984939223
best_error: 3.0775327367154746
best_error: 3.043685572662232
best_error: 3.0436855441025648
best_error: 3.0415349620820527
best_error: 3.041534936784218
best_error: 3.0410939415431204
best_error: 3.04109394154312
best_error: 3.0410939390929412
best_error: 3.041082255890676
best_error: 3.0410822315961106
best_error: 3.0410720352833374
best_error: 3.0410720352833365
best_error: 3.0410720328321683
best_error: 3.041019878324862
best_error: 3.041019878324861
best_error: 3.041019875868337
best_error: 3.0408105459227324
best_error: 3.040810545922731
best_error: 3.0408105434451125
best_error: 3.039961977581811
best_error: 3.0399619775818083
best_error: 3.039961975019624
best_error: 3.036378179240608
best_error: 3.0363781792406073
best_error: 3.036378176337944
best_error: 3.01865043081333
best_error: 3.018650430813328
best_error: 3.0186504263897924
best_error: 2.9812189292163422
best_error: 2.9812189292163405
best_error: 2.981218924447514
best_error: 2.971766457267441
best_error: 2.9717664572674396
best_error: 2.9705199370460362
best_error: 2.9705199359790884
best_error: 2.97012912105969
best_error: 2.97012912017333
best_error: 2.9690607229180226
best_error: 2.9690607229180217
best_error: 2.966517680250612
best_error: 2.9603257298317613
best_error: 2.96032572983176
best_error: 2.956513256253398
best_error: 2.9565132562533973
best_error: 2.9561644366902504
best_error: 2.9561644357666066
best_error: 2.956164435040825
best_error: 2.950879430200863
best_error: 2.9488415496859717
best_error: 2.94884154968597
best_error: 2.948841548433701
best_error: 2.948841547543105
best_error: 2.9357818408992014
best_error: 2.9357818387712324
best_error: 2.9314843579010548
best_error: 2.9277271324380774
best_error: 2.915265596164836
best_error: 2.9152655961648355
best_error: 2.894755707816679
best_error: 2.894755677115031
best_error: 2.874701910562456
best_error: 2.8747019091575607
best_error: 2.868560842946559
best_error: 2.8685607978096064
best_error: 2.865475444213087
best_error: 2.8654754433195597
best_error: 2.86116182717602
best_error: 2.8611618268766086
best_error: 2.859741023500226
best_error: 2.8597410235002245
best_error: 2.859741023119666
best_error: 2.859209919130656
best_error: 2.859209919130655
best_error: 2.859209918760219
best_error: 2.8589720644196577
best_error: 2.858972064419656
best_error: 2.8589720639708593
best_error: 2.858859139163277
best_error: 2.8588591391632763
best_error: 2.8588591387166398
best_error: 2.858804122881675
best_error: 2.8588041224243645
best_error: 2.858779711373302
best_error: 2.858779661825034
best_error: 2.8586916901808306
best_error: 2.8586916901808292
best_error: 2.858691690180828
best_error: 2.8577693866937617
best_error: 2.857769386693759
best_error: 2.8570709986131386
best_error: 2.8570709986131293
best_error: 2.8567549630828966
best_error: 2.8567549630828935
best_error: 2.8565435946439566
best_error: 2.8565435946439557
best_error: 2.8565435946439512
best_error: 2.856435738262398
best_error: 2.8564357382623933
best_error: 2.856378521965653
best_error: 2.8563785219656475
best_error: 2.856347913297765
best_error: 2.8563479132977636
best_error: 2.856347913297755
best_error: 2.856331642343387
best_error: 2.856331642343385
best_error: 2.856316070327465
best_error: 2.8563160703274595
best_error: 2.8563130557277097
best_error: 2.856313055727706
best_error: 2.856312178785149
best_error: 2.856312178785141
best_error: 2.856311700629066
best_error: 2.856311700629065
best_error: 2.856311700629056
best_error: 2.8563116572879226
best_error: 2.856311599519919
best_error: 2.856311536629177
best_error: 2.85631153662917
best_error: 2.856311533391442
best_error: 2.856311520653688
best_error: 2.8563115179755854
best_error: 2.8563115179755783
best_error: 2.856311515795257
best_error: 2.8563115157952463
best_error: 2.8563115156291197
best_error: 2.8563115148120106
best_error: 2.856311514812009
best_error: 2.8563115143837225
best_error: 2.856311514383722
best_error: 2.8563115143837146
best_error: 2.8563115142264692
