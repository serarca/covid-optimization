ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.435949706799494
best_error: 11.435949698784437
best_error: 11.149087299979097
best_error: 11.149087256480273
best_error: 7.641888633206614
best_error: 7.641888250028134
best_error: 6.810534469201157
best_error: 6.810534137486307
best_error: 6.806048255915018
best_error: 6.806048255914993
best_error: 6.679699864702529
best_error: 6.679699864702391
best_error: 6.663865801671183
best_error: 6.663865713802632
best_error: 6.6638101285720115
best_error: 6.663810128571623
best_error: 6.663810123276457
best_error: 6.663122661845202
best_error: 6.663122661844804
best_error: 6.663122656416573
best_error: 6.662412900362034
best_error: 6.6624129003616215
best_error: 6.66241289481656
best_error: 6.661834941418375
best_error: 6.661834941417967
best_error: 6.661834935775467
best_error: 6.66179305587441
best_error: 6.661793055874002
best_error: 6.661793050231525
best_error: 6.661769435170838
best_error: 6.661769435170436
best_error: 6.661769429527982
best_error: 6.6617562819763565
best_error: 6.6617562819759595
best_error: 6.661756276325735
best_error: 6.661749046868971
best_error: 6.661749046868569
best_error: 6.661749041218366
best_error: 6.661745443923559
best_error: 6.661745443923158
best_error: 6.661745438272932
best_error: 6.661745410057575
best_error: 6.661745410057168
best_error: 6.661745404406943
best_error: 6.661745394575105
best_error: 6.661745389169195
best_error: 6.661745381671523
best_error: 6.661745379969112
best_error: 6.661620631457781
best_error: 6.661620543523552
best_error: 6.661347819016251
best_error: 6.661347731067371
best_error: 6.660243009736999
best_error: 6.660242921728411
best_error: 6.655604386455153
best_error: 6.655604297779751
best_error: 6.633368384370118
best_error: 6.6333682962314455
best_error: 6.488989261785468
best_error: 6.488989261785103
best_error: 6.488989251300748
best_error: 6.441165843192204
best_error: 6.44116584319209
best_error: 6.407100123843778
best_error: 6.407100123843681
best_error: 5.4886768392345155
best_error: 5.488676684814871
best_error: 5.467796707678215
best_error: 5.467796707678027
best_error: 5.426904629949496
best_error: 5.426904584280214
best_error: 5.426904555123039
best_error: 5.343583017172049
best_error: 5.343583017171921
best_error: 5.343583016107441
best_error: 5.34023171272715
best_error: 5.340231712727048
best_error: 5.34023171167536
best_error: 5.335620170737129
best_error: 5.335620170737023
best_error: 5.33562016969694
best_error: 5.334907458311422
best_error: 5.334907458311314
best_error: 5.334907457262306
best_error: 5.334300920936545
best_error: 5.33430092093643
best_error: 5.334300919880794
best_error: 5.33381101813505
best_error: 5.333811018134947
best_error: 5.333811017070903
best_error: 5.333612335455425
best_error: 5.33361233545532
best_error: 5.333612334391383
best_error: 5.3334548921753955
best_error: 5.3334548921752924
best_error: 5.333454891105295
best_error: 5.333103311410968
best_error: 5.333103230070971
best_error: 5.332853745836162
best_error: 5.332853745836033
best_error: 5.3328537447436535
best_error: 5.33278130835481
best_error: 5.3327813083546705
best_error: 5.332781307256382
best_error: 5.332571562364265
best_error: 5.3325715623641186
best_error: 5.332571562125087
best_error: 5.3325715612540385
best_error: 5.332477471388312
best_error: 5.3324774713881675
best_error: 5.332477470056628
best_error: 5.332461002592403
best_error: 5.332461002592257
best_error: 5.33246100125931
best_error: 5.332455831737023
best_error: 5.332455831736885
best_error: 5.332455830403493
best_error: 5.3324541151005675
best_error: 5.332454115100423
best_error: 5.332454113766831
best_error: 5.3324528392423005
best_error: 5.332452839242146
best_error: 5.332452837908419
best_error: 5.3324522363690985
best_error: 5.332452236368959
best_error: 5.332452235035143
best_error: 5.332451763606903
best_error: 5.332451763606761
best_error: 5.332451762272894
best_error: 5.332451605546455
best_error: 5.332451570386164
best_error: 5.332451566279242
best_error: 5.332451559054804
best_error: 5.332451558293803
best_error: 5.3324515582936485
best_error: 5.332451556959773
best_error: 5.3324515567946555
best_error: 5.332451556768599
