ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 68
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 105.39531232415113
best_error: 105.39531211476441
best_error: 20.419874835483093
best_error: 20.419874835481984
best_error: 20.41987483350362
best_error: 20.419684513016247
best_error: 20.419684511031477
best_error: 20.41891811116877
best_error: 20.418918109162597
best_error: 20.415768142503325
best_error: 20.415768140407653
best_error: 20.401631249786178
best_error: 20.40163124725898
best_error: 20.297985765233467
best_error: 20.29798575822377
best_error: 20.296118598233296
best_error: 20.29611859112448
best_error: 20.294210606989473
best_error: 20.29421059977876
best_error: 13.69750930939323
best_error: 13.69750929840702
best_error: 13.667303772621585
best_error: 13.667303767161107
best_error: 13.667303765789622
best_error: 13.66730376481264
best_error: 13.666374492920893
best_error: 13.666374488810025
best_error: 13.666374486476572
best_error: 13.66637448491353
best_error: 13.664738614436278
best_error: 13.664738610744225
best_error: 13.664738601932633
best_error: 13.664279798542514
best_error: 13.664279794906385
best_error: 13.664279785302725
best_error: 13.66396586545433
best_error: 13.663965861824312
best_error: 13.663965852163198
best_error: 13.66371451353241
best_error: 13.663714509907283
best_error: 13.66371450020014
best_error: 13.663488361197
best_error: 13.663488357599064
best_error: 13.663488347490976
best_error: 13.663304054692343
best_error: 13.66330405149397
best_error: 13.66330403553873
best_error: 13.663103854347257
best_error: 13.663103851151742
best_error: 13.663103835164623
best_error: 13.66299901710185
best_error: 13.662999014277656
best_error: 13.662998992552268
best_error: 13.662947526847212
best_error: 13.66294752402376
best_error: 13.662947502290113
best_error: 13.662669002567835
best_error: 13.662668688358242
best_error: 13.621512910470203
best_error: 13.621512654536392
best_error: 13.608251764414053
best_error: 13.608251757838499
best_error: 13.608251756536273
best_error: 13.603923659949919
best_error: 13.60392365316118
best_error: 13.603923652043761
best_error: 13.60231439531223
best_error: 13.602314388535458
best_error: 13.602314387395074
best_error: 13.602217509418995
best_error: 13.602217502642942
best_error: 13.602217501501173
best_error: 13.602170599933675
best_error: 13.602170570937709
best_error: 13.602127262089294
best_error: 13.602127255317754
best_error: 13.602127254181116
best_error: 13.60095279879301
best_error: 13.600952554648355
best_error: 13.60063127093637
best_error: 13.60063126417915
best_error: 13.600631263027136
best_error: 13.599311732025367
best_error: 13.599311725278707
best_error: 13.599311724110347
best_error: 13.599305232292352
best_error: 13.59930522554575
best_error: 13.599305224377307
best_error: 13.599304234345833
best_error: 13.599304227599234
best_error: 13.599304226430782
best_error: 13.599303743649074
best_error: 13.599303736902474
best_error: 13.599303735734022
best_error: 13.599303558457354
best_error: 13.599303551710756
best_error: 13.5993035505423
best_error: 13.599149157257713
best_error: 13.599149150513172
best_error: 13.599149149343415
best_error: 13.599053049729037
best_error: 13.59905304298576
best_error: 13.59905304181519
best_error: 13.599021909863811
best_error: 13.599021665608987
best_error: 13.599021533733893
best_error: 13.599021526991038
best_error: 13.599021525820188
best_error: 13.59901818833403
best_error: 13.599018181591223
best_error: 13.599018180420314
best_error: 13.599016132859049
best_error: 13.599016126116268
best_error: 13.599016124945331
best_error: 13.599014879315273
best_error: 13.59901487257251
best_error: 13.599014871401556
best_error: 13.599014122685727
best_error: 13.599014115942975
best_error: 13.59901411477201
best_error: 13.599013956023512
best_error: 13.59901394928076
best_error: 13.599013948109793
best_error: 13.599013848357842
best_error: 13.59901384161509
best_error: 13.599013840444123
best_error: 13.59901382291458
best_error: 13.599013794872496
best_error: 13.599013788129753
best_error: 13.59901378695878
best_error: 13.59901378144193
best_error: 13.59901377469918
best_error: 13.59901377352821
best_error: 13.599013771955137
best_error: 13.599013770784161
best_error: 13.59901376995694
best_error: 13.599013768785966
best_error: 13.599013767705168
