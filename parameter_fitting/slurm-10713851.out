ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.77685788417178
best_error: 11.776857873136656
best_error: 11.776857850919399
best_error: 11.661129881009918
best_error: 11.66112986719236
best_error: 11.661129841021529
best_error: 9.536586854606025
best_error: 9.536586774311024
best_error: 9.148559659918416
best_error: 9.14855956956661
best_error: 9.130888825506169
best_error: 9.130888733076329
best_error: 8.511477132430153
best_error: 8.511477016769751
best_error: 8.160645976064227
best_error: 8.160645925567653
best_error: 8.160645905979436
best_error: 7.387895760788112
best_error: 7.387895726001438
best_error: 7.387895669935746
best_error: 7.033614168949507
best_error: 7.033614166250807
best_error: 7.033614073745246
best_error: 3.5941088568777673
best_error: 3.5941086811974623
best_error: 3.5941086759375596
best_error: 3.3059483970823647
best_error: 3.3059482265343467
best_error: 3.179638168471746
best_error: 3.1796379942811592
best_error: 3.102955331206303
best_error: 3.102955153645773
best_error: 3.086380324679088
best_error: 3.0863803246774957
best_error: 2.8926411300920076
best_error: 2.8926409321534035
best_error: 2.838784260950572
best_error: 2.8387838677928476
best_error: 2.6845941023227127
best_error: 2.6845938405815652
best_error: 2.5502603966127766
best_error: 2.550260110340619
best_error: 2.446590089906061
best_error: 2.4465897886786783
best_error: 2.432392497043911
best_error: 2.4323924970425557
best_error: 2.419466371929281
best_error: 2.4194660631434224
best_error: 2.4043511975723675
best_error: 2.404350873844744
best_error: 2.3998448421319782
best_error: 2.39984451790253
best_error: 2.399302280017781
best_error: 2.3993019557275055
best_error: 2.399022075898012
best_error: 2.399021751576318
best_error: 2.3989941983723617
best_error: 2.398994198370927
best_error: 2.398701169147147
best_error: 2.398700849833189
best_error: 2.3977117926070255
best_error: 2.3977114843681746
best_error: 2.3949667222119464
best_error: 2.3949664129696857
best_error: 2.3865772492163915
best_error: 2.386577249214989
best_error: 2.3680295711861916
best_error: 2.3680292266736256
best_error: 2.3558983662682227
best_error: 2.3558983662668664
best_error: 2.352919681159232
best_error: 2.3529196811579274
best_error: 2.348991602676146
best_error: 2.3489912306129646
best_error: 2.345218516884498
best_error: 2.3452181860413504
best_error: 2.3449549632585316
best_error: 2.344954963257149
best_error: 2.343133205275564
best_error: 2.3431332052742393
best_error: 2.341294018523798
best_error: 2.3412940185223983
best_error: 2.333559959735305
best_error: 2.3335596118732918
best_error: 2.3218981070904756
best_error: 2.3218977677788812
best_error: 2.3125713098706067
best_error: 2.3125713098692433
best_error: 2.2920068464446626
best_error: 2.292006846443301
best_error: 2.2313700089381463
best_error: 2.2313700089366995
best_error: 2.2248796444787677
best_error: 2.224879644477342
best_error: 2.2239012318384423
best_error: 2.2239008948686467
best_error: 2.220850202315517
best_error: 2.22084986140125
best_error: 2.1979714989698764
best_error: 2.197971157611631
best_error: 2.1978394645788257
best_error: 2.1978394645774184
best_error: 2.19779398951945
best_error: 2.1977939895180274
best_error: 2.197793223686812
best_error: 2.197792882311626
best_error: 2.197792538334934
best_error: 2.19779253833355
best_error: 2.1977911333199653
best_error: 2.197790791944718
best_error: 2.1766188961457553
best_error: 2.176618896144343
best_error: 2.1766187484630457
best_error: 2.1705787615154626
best_error: 2.1705787615140677
best_error: 2.168946666296688
best_error: 2.1689463089845953
best_error: 2.162185947113427
best_error: 2.1621855851568164
best_error: 2.158704128517801
best_error: 2.1587041285164212
best_error: 2.1480212154240896
best_error: 2.148020842917371
best_error: 2.1408020896592435
best_error: 2.1408017052978883
best_error: 2.118401170181974
best_error: 2.1184007615171208
best_error: 2.113600338330918
best_error: 2.113599928481964
best_error: 2.1112760944114703
best_error: 2.1112756947221527
best_error: 2.1068891653981066
best_error: 2.106888760873454
best_error: 2.1051749972320626
best_error: 2.1051745884862356
best_error: 2.1045990303443065
best_error: 2.1045986215567978
best_error: 2.1043137076119773
best_error: 2.10431329880363
best_error: 2.104301202557745
best_error: 2.104300793748484
best_error: 2.1043001178135943
best_error: 2.1042997090042066
best_error: 2.1042996652241572
best_error: 2.1042996230138393
best_error: 2.1042996203405817
best_error: 2.1042996191179237
