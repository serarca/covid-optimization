ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.9085345336893
best_error: 9.908534525807944
best_error: 3.918248679577757
best_error: 3.9182485561733627
best_error: 3.8724400700012085
best_error: 3.8724399726041696
best_error: 3.761151232903857
best_error: 3.761151056685505
best_error: 3.5364818125795976
best_error: 3.5364816987985406
best_error: 3.515811330690327
best_error: 3.5158113306828085
best_error: 3.515811325162786
best_error: 3.5125783611431145
best_error: 3.512578359547308
best_error: 3.512578355568016
best_error: 3.511805500987478
best_error: 3.511805499149813
best_error: 3.5118054953450937
best_error: 3.5114386881552813
best_error: 3.5114386861965614
best_error: 3.5114386824852653
best_error: 3.511254252039767
best_error: 3.5112542500576387
best_error: 3.51125424637407
best_error: 3.511158275796838
best_error: 3.5111582737972435
best_error: 3.511158270133239
best_error: 3.511107948598169
best_error: 3.51110794659595
best_error: 3.5111079429357863
best_error: 3.5110724899766184
best_error: 3.5110724879725543
best_error: 3.511072484315092
best_error: 3.511065104655702
best_error: 3.511065102651256
best_error: 3.511065098994339
best_error: 3.5110644327664593
best_error: 3.5110644307619814
best_error: 3.5110644271051115
best_error: 3.511064345025365
best_error: 3.511064287346838
best_error: 3.510703921483098
best_error: 3.5107039195679044
best_error: 3.510703915816125
best_error: 3.5092880531352924
best_error: 3.509288051685298
best_error: 3.5092880474463244
best_error: 3.505053819292525
best_error: 3.5050538192868785
best_error: 3.505053813517917
best_error: 3.4949152633030933
best_error: 3.494915263286225
best_error: 3.4949152572745783
best_error: 3.4207962651592565
best_error: 3.420796265110102
best_error: 3.420796256338157
best_error: 3.415901012835106
best_error: 3.4159010127936598
best_error: 3.4159010037527713
best_error: 3.4154057871016477
best_error: 3.4154057870611125
best_error: 3.41540577798708
best_error: 3.3624497494941066
best_error: 3.362449749460688
best_error: 3.339012340283445
best_error: 3.339012340267902
best_error: 3.3129604495409124
best_error: 3.3129603567244983
best_error: 3.3121511667436403
best_error: 3.3121511496461826
best_error: 3.311653548263428
best_error: 3.3107995238074026
best_error: 3.310799517189234
best_error: 3.3107666051955063
best_error: 3.3107665985699826
best_error: 3.310429331599649
best_error: 3.3104293252033186
best_error: 3.310157413564498
best_error: 3.310157408995702
best_error: 3.31002844756023
best_error: 3.310028446147912
best_error: 3.310009455725963
best_error: 3.310009455412259
best_error: 3.3100081695228027
best_error: 3.3100079336535346
best_error: 3.3100078474366357
best_error: 3.3100078474340267
best_error: 3.3100073825908245
best_error: 3.3100073825021945
best_error: 3.310007382501547
best_error: 3.3099975837946958
best_error: 3.309997583710463
best_error: 3.309997583700845
best_error: 3.3099662891504296
best_error: 3.3099662884531846
best_error: 3.3099394954574137
best_error: 3.3099394927933283
best_error: 3.309912052681343
best_error: 3.30991205022763
best_error: 3.30985288981973
best_error: 3.309852889381264
best_error: 3.309817024133838
best_error: 3.309817023720229
best_error: 3.3098014908715556
best_error: 3.3098014897186543
best_error: 3.3097965606407507
best_error: 3.30979656014314
best_error: 3.3097965597398327
best_error: 3.309770604144714
best_error: 3.3097706037297234
best_error: 3.3097448900469386
best_error: 3.3097448899245543
best_error: 3.30972758650676
best_error: 3.3097275863627886
best_error: 3.3097189739401633
best_error: 3.3097146519058205
best_error: 3.3097113265208713
best_error: 3.30971132644894
best_error: 3.3097112850916353
best_error: 3.3097112850809145
best_error: 3.30971128112772
best_error: 3.3097112811176688
best_error: 3.30971127929559
best_error: 3.309711279285847
best_error: 3.309711279285716
best_error: 3.309711277926386
best_error: 3.3097112779168727
best_error: 3.3097112779164872
best_error: 3.3097112765468024
best_error: 3.3097112765375156
best_error: 3.3097112765368757
best_error: 3.309711275846645
best_error: 3.3097112758374756
best_error: 3.309711275836709
best_error: 3.3097112757352116
best_error: 3.309711275569547
best_error: 3.309711275560423
best_error: 3.30971127555961
best_error: 3.3097112743288264
best_error: 3.3097112743198975
best_error: 3.309711274318861
best_error: 3.309711274154691
best_error: 3.309711274145805
best_error: 3.3097112741447163
best_error: 3.3097112740912706
best_error: 3.309711274082396
best_error: 3.3097112740812897
best_error: 3.3097112740361063
best_error: 3.309711274027245
best_error: 3.3097112740261325
best_error: 3.3097112740006294
best_error: 3.309711273991778
best_error: 3.309711273990655
best_error: 3.309711273971403
best_error: 3.309711273962553
best_error: 3.309711273961426
best_error: 3.3097112739453416
best_error: 3.309711273936498
best_error: 3.30971127393536
best_error: 3.309711273927398
best_error: 3.3097112739185577
best_error: 3.3097112739174137
best_error: 3.3097112738973022
best_error: 3.3097112738884698
best_error: 3.3097112738873236
