ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.7465875189429
best_error: 9.746587407250118
best_error: 8.934448890128637
best_error: 8.9344486595316
best_error: 5.9755315553773976
best_error: 5.975530855936127
best_error: 4.792440969577971
best_error: 4.792440278692416
best_error: 4.391796832674433
best_error: 4.391796187099734
best_error: 4.326032484202008
best_error: 4.326032404212967
best_error: 4.275665039031191
best_error: 4.275664383631925
best_error: 4.264888094698495
best_error: 4.264888016195986
best_error: 4.262127130189878
best_error: 4.262126473280462
best_error: 4.254871087516955
best_error: 4.254871009392837
best_error: 4.254828387920762
best_error: 4.254827730199414
best_error: 4.250579827948904
best_error: 4.250579749892217
best_error: 4.233567519410748
best_error: 4.233566864628523
best_error: 4.16869959611061
best_error: 4.168698985884499
best_error: 4.077525412199559
best_error: 4.077524982178326
best_error: 4.054524665768351
best_error: 4.054524165307303
best_error: 4.047470757426006
best_error: 4.047470292041218
best_error: 4.04537266831534
best_error: 4.04537219890044
best_error: 4.039915455224243
best_error: 4.03991494715853
best_error: 4.027686896635221
best_error: 4.027686377063249
best_error: 3.9672887886400123
best_error: 3.967288222721799
best_error: 3.932372790955631
best_error: 3.932372717777515
best_error: 3.82758387110874
best_error: 3.8275837976186247
best_error: 3.6899964681888413
best_error: 3.6899959867676007
best_error: 3.6468499004619837
best_error: 3.6468498074902755
best_error: 3.646849796167402
best_error: 3.6370298500201437
best_error: 3.6370297579494033
best_error: 3.63702974608389
best_error: 3.6366452550640327
best_error: 3.636644743118392
best_error: 3.6366280005161915
best_error: 3.636627908490155
best_error: 3.6366278965935006
best_error: 3.6365924292995677
best_error: 3.6365919173389702
best_error: 3.6364655667050956
best_error: 3.636465054710309
best_error: 3.63610788046219
best_error: 3.6361077883270605
best_error: 3.6361077765171492
best_error: 3.6361061536009593
best_error: 3.636105641498105
best_error: 3.6332652968894124
best_error: 3.6332647831695866
best_error: 3.6242054785751385
best_error: 3.6242049484475434
best_error: 3.609709546959386
best_error: 3.6097094703590544
best_error: 3.609709441901307
best_error: 3.609080533180263
best_error: 3.609079970236718
best_error: 3.602355058845224
best_error: 3.602354476544671
best_error: 3.474371506950673
best_error: 3.474371450217376
best_error: 3.47437140145731
best_error: 3.4286967515835443
best_error: 3.428696696089526
best_error: 3.428696646052577
best_error: 3.179559501337914
best_error: 3.17955949084714
best_error: 3.179559398495771
best_error: 3.0431715972572775
best_error: 3.0431715906357164
best_error: 3.0431714978663855
best_error: 3.0416344692027075
best_error: 3.0416340715876533
best_error: 3.0365775205586925
best_error: 3.036577124314938
best_error: 3.0305612185720694
best_error: 3.0305608134965514
best_error: 3.0278982193532418
best_error: 3.0278982144102367
best_error: 3.0267598562096625
best_error: 3.026759451545864
best_error: 3.0264517929702928
best_error: 3.026451388274017
best_error: 3.0263765354488616
best_error: 3.0263761307446497
best_error: 3.026359393579157
best_error: 3.0263589888728717
best_error: 3.0263484330221155
best_error: 3.026348028314482
best_error: 3.02634371251816
best_error: 3.026343307809938
best_error: 3.026342657536656
best_error: 3.026342652627461
best_error: 3.0246449456127857
best_error: 3.0246449410472938
best_error: 3.0245875444426287
best_error: 3.0245871397821404
best_error: 3.0232628452760766
best_error: 3.023262440951086
best_error: 3.0226040620112453
best_error: 3.0226040576329574
best_error: 3.0226039625528305
best_error: 3.022584793725866
best_error: 3.0225843893343702
best_error: 3.0225661048242043
best_error: 3.0225657004291615
best_error: 3.0225631183356074
best_error: 3.022562713940008
best_error: 3.022562203452555
best_error: 3.0225617990567777
best_error: 3.022561782447835
best_error: 3.0225617814536547
best_error: 3.0225617603431263
best_error: 3.022561674466596
best_error: 3.0225616700851714
best_error: 3.022561657921467
best_error: 3.0225616283250405
best_error: 3.022561627330889
best_error: 3.022561606220282
best_error: 3.0224688610246613
best_error: 3.0224684550097605
best_error: 3.022461587774212
best_error: 3.022461181734493
