ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 78
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.42716888934181
best_error: 99.42716881195396
best_error: 99.42716871946668
best_error: 18.874951382016093
best_error: 18.874951382012433
best_error: 18.874951375257297
best_error: 18.85803152308067
best_error: 18.858031515962917
best_error: 18.779362154842634
best_error: 18.779362145436746
best_error: 16.58481391138468
best_error: 16.584813655544004
best_error: 13.77345122526803
best_error: 13.773451098090792
best_error: 13.677134197492181
best_error: 13.677134190096696
best_error: 13.67713379086015
best_error: 13.648349740328458
best_error: 13.648349728841591
best_error: 13.648349716286916
best_error: 13.270418303759662
best_error: 13.270418290833337
best_error: 13.270418278964154
best_error: 12.258535163629007
best_error: 12.258535145369695
best_error: 12.258535132426374
best_error: 11.710739002186504
best_error: 11.710738985064504
best_error: 11.710738972559453
best_error: 11.446883985613873
best_error: 11.44688392114462
best_error: 11.375545463258282
best_error: 11.375545411751284
best_error: 11.158440562917795
best_error: 11.15844055712075
best_error: 11.158440553829852
best_error: 11.158440536013078
best_error: 10.972942943043119
best_error: 10.972942913567802
best_error: 10.885007426614894
best_error: 10.88500742405915
best_error: 10.88500741456106
best_error: 10.885007400624
best_error: 10.765876020524946
best_error: 10.76587590098416
best_error: 10.727616546804168
best_error: 10.727616527386758
best_error: 10.727616522157348
best_error: 10.700353199034627
best_error: 10.700353181024704
best_error: 10.700353174664706
best_error: 10.613586697020665
best_error: 10.613586683242959
best_error: 10.61358667371471
best_error: 10.611464907322189
best_error: 10.611464720059303
best_error: 10.48901956766744
best_error: 10.48901955625226
best_error: 10.489019545287237
best_error: 10.46160530663849
best_error: 10.461605272399202
best_error: 10.361119963643635
best_error: 10.36111995197123
best_error: 10.361119941331703
best_error: 10.280878939723756
best_error: 10.280878924537351
best_error: 10.280878917230272
best_error: 10.270475729443813
best_error: 10.27047570329631
best_error: 10.25018477982291
best_error: 10.250184764807003
best_error: 10.250184757357909
best_error: 10.046354338325184
best_error: 10.046354330913278
best_error: 10.046354295098482
best_error: 10.019774145799879
best_error: 10.019773924577663
best_error: 9.976297722146269
best_error: 9.976297547027734
best_error: 9.97394033963018
best_error: 9.973940317232387
best_error: 9.920775941197531
best_error: 9.920775823325672
best_error: 9.9011256911758
best_error: 9.901125585208247
best_error: 9.893725018364945
best_error: 9.893724918207749
best_error: 9.892567971204329
best_error: 9.892567871699077
best_error: 9.892366450950238
best_error: 9.89236635143821
best_error: 9.892350245219824
best_error: 9.892350227749173
best_error: 9.874515251357732
best_error: 9.87451516476505
best_error: 9.87205085530988
best_error: 9.87205083536109
best_error: 9.87040307179509
best_error: 9.870403051880327
best_error: 9.864446997429717
best_error: 9.864446978248637
best_error: 9.861210410758947
best_error: 9.861210331588406
best_error: 9.861151527578608
best_error: 9.861151509125083
best_error: 9.854491626268892
best_error: 9.85449160769345
best_error: 9.835510299263305
best_error: 9.835510278317841
best_error: 9.830321595540404
best_error: 9.830321560219485
best_error: 9.830044606363275
best_error: 9.830044586265714
best_error: 9.82536139933624
best_error: 9.825361379020096
best_error: 9.813565496884706
best_error: 9.813565476221696
best_error: 9.78719587367743
best_error: 9.787195853409102
best_error: 9.6667000431196
best_error: 9.666700023746223
best_error: 9.393678784801201
best_error: 9.3936787582144
best_error: 9.345009372515324
best_error: 9.345009346426355
best_error: 9.302847599629663
best_error: 9.302847574321929
best_error: 9.231843325007706
best_error: 9.23184330103074
best_error: 9.175186973125562
best_error: 9.175186948329717
best_error: 9.082301456939655
best_error: 9.082301431872967
best_error: 8.91799002688
best_error: 8.917990016741456
best_error: 8.917990011988092
best_error: 8.874111247893666
best_error: 8.874111148480809
best_error: 8.744576038590404
best_error: 8.744576031598488
best_error: 8.7287341269881
best_error: 8.72873412001924
best_error: 8.728734104796795
best_error: 8.72724987217837
best_error: 8.727249865223152
best_error: 8.727249847245622
best_error: 8.72661295716823
best_error: 8.72661295019753
best_error: 8.726612932545953
best_error: 8.726313649193106
best_error: 8.726313642220719
best_error: 8.726313624540754
best_error: 8.726129699864433
best_error: 8.726129692891
best_error: 8.726129675193603
best_error: 8.72606975601369
best_error: 8.726069744187312
best_error: 8.71898654862489
best_error: 8.718986542082632
best_error: 8.718986506197894
best_error: 8.712071354138237
best_error: 8.712071348326507
best_error: 8.712071299124267
best_error: 8.709463627743865
best_error: 8.709463621708496
best_error: 8.709463579150825
best_error: 8.708350095700972
best_error: 8.70835008965257
best_error: 8.70835004970868
