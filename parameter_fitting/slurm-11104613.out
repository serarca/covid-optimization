ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.40357348013919
best_error: 99.40357339822481
best_error: 99.40357331612773
best_error: 18.219415167908753
best_error: 18.219415167903893
best_error: 18.2194151580899
best_error: 18.19071514584597
best_error: 18.1907151350856
best_error: 18.041254485357538
best_error: 18.041254468823006
best_error: 13.115114495426054
best_error: 13.115114493409557
best_error: 13.115114489865928
best_error: 13.115114084014245
best_error: 13.06069545216085
best_error: 13.060695444073424
best_error: 13.060695432004918
best_error: 12.8313233841274
best_error: 12.831323378096968
best_error: 12.831323374153484
best_error: 12.831323363539106
best_error: 11.966120784446897
best_error: 11.96612077150634
best_error: 11.966120760281811
best_error: 11.753636112826765
best_error: 11.75363611002204
best_error: 11.753636105184212
best_error: 11.753636087323134
best_error: 11.254797503811613
best_error: 11.254797481648675
best_error: 11.254797474210486
best_error: 10.697904763889635
best_error: 10.6979047511346
best_error: 10.697904739419233
best_error: 10.411627652562121
best_error: 10.411627651526832
best_error: 10.411627644879534
best_error: 10.411627628806729
best_error: 10.143873630114475
best_error: 10.143873602874173
best_error: 9.977745909451956
best_error: 9.97774571954137
best_error: 9.925669864258651
best_error: 9.92566985189709
best_error: 9.925669844317586
best_error: 9.902711221213128
best_error: 9.902711210360806
best_error: 9.902711201820251
best_error: 9.868517789798823
best_error: 9.868517782731113
best_error: 9.86851778257001
best_error: 9.868517780978959
best_error: 9.86851777130158
best_error: 9.862077782444729
best_error: 9.862077775715056
best_error: 9.862077775502392
best_error: 9.862077772911306
best_error: 9.86207776412246
best_error: 9.860105942915448
best_error: 9.860105710916756
best_error: 9.859532781091406
best_error: 9.859532775172225
best_error: 9.859532774732765
best_error: 9.85953276842167
best_error: 9.859532762831781
best_error: 9.859353460295466
best_error: 9.859353454403745
best_error: 9.859353453957757
best_error: 9.859353447542592
best_error: 9.85935344204012
best_error: 9.859331210540486
best_error: 9.859331204649008
best_error: 9.859331204202984
best_error: 9.859331197786984
best_error: 9.859331192285378
best_error: 9.859330873122603
best_error: 9.859330641655223
best_error: 9.85932756200089
best_error: 9.859327556109456
best_error: 9.859327555663427
best_error: 9.859327549247292
best_error: 9.85932754374582
best_error: 9.859326806180423
best_error: 9.859326800288995
best_error: 9.859326799842963
best_error: 9.859326793426797
best_error: 9.859326787925356
best_error: 9.859326604095832
best_error: 9.859326603942042
best_error: 9.831443927784223
best_error: 9.83144364199192
best_error: 9.77978128248199
best_error: 9.779780984906761
best_error: 9.589123809763588
best_error: 9.589123468265736
best_error: 9.509058545767864
best_error: 9.509058314759718
best_error: 9.457556819832867
best_error: 9.457556660499982
best_error: 9.428503068976637
best_error: 9.428502955161196
best_error: 9.425687071156002
best_error: 9.425687051304148
best_error: 9.422925074463308
best_error: 9.422924978716889
best_error: 9.422394418356614
best_error: 9.422394398494534
best_error: 9.420518265124262
best_error: 9.420518177084134
best_error: 9.417911193817407
best_error: 9.417911113623742
best_error: 9.416184028656525
best_error: 9.416183951792299
best_error: 9.416114501307872
best_error: 9.416114424453317
best_error: 9.416108153029553
best_error: 9.416108076175579
best_error: 9.416107034103867
best_error: 9.416107015476209
best_error: 9.416106757178285
best_error: 9.416106680324432
best_error: 9.416105868805982
best_error: 9.416105791952218
best_error: 9.416105747155076
best_error: 9.416105728527441
best_error: 9.414294856253214
best_error: 9.414294837378051
best_error: 9.413678504612278
best_error: 9.413678486646727
best_error: 9.409448473930464
best_error: 9.409448455617351
best_error: 9.396700661579168
best_error: 9.396700644723264
best_error: 9.390328490829027
best_error: 9.390328474038228
best_error: 9.372332011411316
best_error: 9.372331996225427
best_error: 9.365549771744165
best_error: 9.365549756767306
best_error: 9.345499952579523
best_error: 9.345499937881385
best_error: 9.322546802867967
best_error: 9.322546786783562
best_error: 9.301291843716879
best_error: 9.301291827163944
best_error: 9.285863571270527
best_error: 9.28586341891825
best_error: 9.191891720443802
best_error: 9.191891705120739
best_error: 9.164912526490497
best_error: 9.164912507296608
best_error: 9.16266556763987
best_error: 9.162665553790013
best_error: 9.10747687571522
best_error: 9.107476864640123
best_error: 9.105356634463641
best_error: 9.105356625599761
best_error: 9.105356614464064
best_error: 9.075240271764002
best_error: 9.07523994125391
best_error: 9.06668031493355
best_error: 9.066680309639638
best_error: 9.066680274209997
best_error: 9.066293185641644
best_error: 9.066292864509455
best_error: 8.995871163256714
best_error: 8.99587115409928
best_error: 8.995871145246609
best_error: 8.986561532860879
best_error: 8.986561512796035
best_error: 8.955916874710436
best_error: 8.955916855631227
best_error: 8.881806034986411
best_error: 8.88180601697145
best_error: 8.881496772193158
best_error: 8.881496754162612
best_error: 8.844194022158904
best_error: 8.844193885451041
