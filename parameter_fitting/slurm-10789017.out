ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 7.8273919333989905
best_error: 7.8273919212484095
best_error: 7.827391900840721
best_error: 6.270510215717235
best_error: 6.2705100303648
best_error: 2.9702817932626058
best_error: 2.9702813312092173
best_error: 2.3966412322770596
best_error: 2.3966408302697855
best_error: 2.171228501810872
best_error: 2.171228136932381
best_error: 2.130439868152262
best_error: 2.130439844322562
best_error: 2.12382792895297
best_error: 2.123827905155539
best_error: 2.123499419879407
best_error: 2.1234993960851645
best_error: 2.123467788498319
best_error: 2.1234674539741696
best_error: 2.122997073803806
best_error: 2.1229967392819686
best_error: 2.1212286803964435
best_error: 2.121228656628479
best_error: 2.1141687552034165
best_error: 2.1141687313810684
best_error: 2.086243549253215
best_error: 2.086243524967924
best_error: 1.9739090244345472
best_error: 1.9739089997189359
best_error: 1.6645358553582228
best_error: 1.6645356300481837
best_error: 1.6548104765265204
best_error: 1.6548102308565928
best_error: 1.6345527841887162
best_error: 1.6345527486779385
best_error: 1.6107571197240125
best_error: 1.6107570785992538
best_error: 1.6063590547655244
best_error: 1.606359013753886
best_error: 1.6050180407373278
best_error: 1.605017999487472
best_error: 1.604943627508884
best_error: 1.6049433988548603
best_error: 1.604749462367701
best_error: 1.604749421124156
best_error: 1.604695515641665
best_error: 1.604695474399406
best_error: 1.6046910985093028
best_error: 1.604690869819272
best_error: 1.594825292116437
best_error: 1.5948252516685537
best_error: 1.5597564085603215
best_error: 1.5597563762901583
best_error: 1.5516431089856564
best_error: 1.5516430733587692
best_error: 1.5510249981764388
best_error: 1.5510249627114636
best_error: 1.5500317332377762
best_error: 1.5500317030821515
best_error: 1.5484146571833635
best_error: 1.5484146231979583
best_error: 1.5416256821150895
best_error: 1.5416256521715286
best_error: 1.52852609525853
best_error: 1.528526061132761
best_error: 1.5147408356936516
best_error: 1.5147405643587426
best_error: 1.4612231160622362
best_error: 1.4612230829430333
best_error: 1.4382302914562244
best_error: 1.4382302573070045
best_error: 1.4203493410221317
best_error: 1.4203490537441157
best_error: 1.3971881413147842
best_error: 1.3971881075085648
best_error: 1.3814800289399365
best_error: 1.3814799964064566
best_error: 1.3711863529007184
best_error: 1.3711863198203218
best_error: 1.3526456854681457
best_error: 1.352645652203397
best_error: 1.3515979011611492
best_error: 1.3515978679386105
best_error: 1.351568789708963
best_error: 1.351568478117487
best_error: 1.3515367062457175
best_error: 1.3515366730223315
best_error: 1.3515362229158496
best_error: 1.351535911320339
best_error: 1.351521413717078
best_error: 1.3515213804934694
best_error: 1.3515212508599816
best_error: 1.351520939262608
best_error: 1.3441192896741483
best_error: 1.3441192569813496
best_error: 1.3435525996594948
best_error: 1.343552283885443
best_error: 1.3262972584895079
best_error: 1.326297226915223
best_error: 1.326297143853772
best_error: 1.3218365353800605
best_error: 1.3218362020059662
best_error: 1.3217984157056288
best_error: 1.3217983841111831
best_error: 1.3217983010514693
best_error: 1.3204962145871986
best_error: 1.3204958809696952
best_error: 1.3189895492558297
best_error: 1.3189895178653341
best_error: 1.3189894344630284
best_error: 1.3186088092851047
best_error: 1.3186084753653158
best_error: 1.3112608511999055
best_error: 1.311260512105335
best_error: 1.2979298878856542
best_error: 1.2979295225929282
best_error: 1.2977581347677094
best_error: 1.297757766088308
best_error: 1.2974928185391807
best_error: 1.2974924496634748
best_error: 1.296523698020156
best_error: 1.2965233236229516
best_error: 1.2961264373697596
best_error: 1.2961260624441875
best_error: 1.2960096151491736
best_error: 1.2960092402002066
best_error: 1.2959606780693067
best_error: 1.2959603031105513
best_error: 1.2959525319777798
best_error: 1.2959525078672107
best_error: 1.2959524134627964
best_error: 1.295952132238729
best_error: 1.2959332756529531
best_error: 1.2959329011854532
best_error: 1.2959261900682884
best_error: 1.2959261658435683
best_error: 1.2959260716346863
best_error: 1.2959239792949133
best_error: 1.2959236066847288
best_error: 1.2959217448113562
best_error: 1.295921610431821
best_error: 1.295921573631667
best_error: 1.2959212010083814
best_error: 1.2959211398104444
best_error: 1.2959208360006471
best_error: 1.2959208135645517
