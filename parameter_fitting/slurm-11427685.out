ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.893756018787098
best_error: 24.893755447591094
best_error: 5.065443592460952
best_error: 5.06544359227311
best_error: 5.065436030281999
best_error: 5.065436030276885
best_error: 5.065436030240798
best_error: 5.065405760375701
best_error: 5.065405760370578
best_error: 5.065405760334477
best_error: 5.06528434054635
best_error: 5.065284340541194
best_error: 5.0652843405050305
best_error: 5.064793142774301
best_error: 5.064793142769003
best_error: 5.064793142732598
best_error: 5.062734919735469
best_error: 5.062734919729548
best_error: 5.0627349196921365
best_error: 5.052564133675789
best_error: 5.052564133665692
best_error: 5.052564133623705
best_error: 3.6594192168516493
best_error: 3.6594189782136732
best_error: 2.6834368400284747
best_error: 2.68343534367696
best_error: 2.6614572742193134
best_error: 2.661457268847029
best_error: 2.6614572591495467
best_error: 2.6612377120099406
best_error: 2.661237706119294
best_error: 2.6612376969790095
best_error: 2.66036922216618
best_error: 2.6603692137376242
best_error: 2.6603692071642744
best_error: 2.6571503498926323
best_error: 2.6571503189694443
best_error: 2.63993673063867
best_error: 2.6399366318143493
best_error: 2.620378548043058
best_error: 2.6203784486340567
best_error: 2.5748790542852493
best_error: 2.574878954375517
best_error: 2.574878694088223
best_error: 2.453350498035622
best_error: 2.453350463729831
best_error: 2.4533503648752455
best_error: 2.4533503357717343
best_error: 2.45193001965791
best_error: 2.4519299861440165
best_error: 2.451929885252532
best_error: 2.448791859093673
best_error: 2.448791827559295
best_error: 2.448791721831989
best_error: 2.4341676896984534
best_error: 2.4341676678909345
best_error: 2.4341675406098404
best_error: 2.385867220043886
best_error: 2.3858670316112884
best_error: 2.3637928563192268
best_error: 2.363792672139806
best_error: 2.359500050103087
best_error: 2.359499852885553
best_error: 2.3594996008642535
best_error: 2.329719518081256
best_error: 2.329719341181049
best_error: 2.322727665843752
best_error: 2.3227274882209916
best_error: 2.3201183722195258
best_error: 2.320118195173004
best_error: 2.3060583868046396
best_error: 2.306058214473715
best_error: 2.2897397104508626
best_error: 2.289739539831344
best_error: 2.229694659839716
best_error: 2.2296946574037992
best_error: 2.2296944923812507
best_error: 2.187710127528464
best_error: 2.1877100700855556
best_error: 2.1877100318907323
best_error: 2.148701561204377
best_error: 2.1487014776065854
best_error: 2.0439247918703787
best_error: 2.043924674425677
best_error: 2.0327961785655497
best_error: 2.0327960660533204
best_error: 2.019203512269661
best_error: 2.0192034136056014
best_error: 2.0157766909070287
best_error: 2.0157765951886772
best_error: 2.007426233696996
best_error: 2.0074261581423958
best_error: 2.0040969653779044
best_error: 2.0040969160230544
best_error: 2.004096887868923
best_error: 2.0036475856521987
best_error: 2.0036475436952417
best_error: 2.003647495848633
best_error: 2.0029317138558524
best_error: 2.002931688513333
best_error: 2.0029316037180878
best_error: 2.0021790718940293
best_error: 2.002179047782268
best_error: 2.002178956697683
best_error: 2.0016950963977527
best_error: 2.0016950726813745
best_error: 2.0016949790426883
best_error: 2.001398951226674
best_error: 2.0013989259334592
best_error: 2.0013988385586545
best_error: 1.9962806138213016
best_error: 1.9962805677376236
best_error: 1.9962805352185697
best_error: 1.9838547429761035
best_error: 1.9838547177805728
best_error: 1.9838546110887296
best_error: 1.9674778408806275
best_error: 1.9674778103215738
best_error: 1.9674777175139633
best_error: 1.9474747160283394
best_error: 1.9474746785538424
best_error: 1.9158011071670473
best_error: 1.915801057002493
best_error: 1.8830701808783732
best_error: 1.8830701292658434
best_error: 1.870017802551508
best_error: 1.8700177377823652
best_error: 1.8690223453384192
best_error: 1.869022278960562
best_error: 1.8629974596827485
best_error: 1.862997418883361
best_error: 1.8621291483543343
best_error: 1.8621291071943515
best_error: 1.8593101745905711
best_error: 1.8593101340413727
best_error: 1.8522403655298743
best_error: 1.85224033710863
best_error: 1.8495091055907884
best_error: 1.8495090996038177
best_error: 1.8490216664179924
best_error: 1.849021665790291
best_error: 1.8490216584876384
best_error: 1.8489605523836843
best_error: 1.8489605513985585
best_error: 1.8489605482369158
best_error: 1.8489475107779023
best_error: 1.8489475088064165
best_error: 1.8489475086663167
best_error: 1.8489303225273646
best_error: 1.848930318233131
best_error: 1.8489267227762154
best_error: 1.8489267182372664
best_error: 1.8489026327576599
best_error: 1.8489026258272556
best_error: 1.848864046795449
best_error: 1.8488640395703757
best_error: 1.8487962496897858
best_error: 1.8487962392614938
best_error: 1.8486811259599463
best_error: 1.8486811193188328
best_error: 1.8485632932890093
best_error: 1.848563290498232
best_error: 1.8484659698263366
best_error: 1.8484659697351702
best_error: 1.8484659683517575
best_error: 1.8483946570042804
best_error: 1.8483946565501868
best_error: 1.848394656012124
best_error: 1.8483203227046778
best_error: 1.8483203217994124
best_error: 1.848100580224505
best_error: 1.848100577395979
best_error: 1.8475945657521045
best_error: 1.8475945520300872
best_error: 1.8470254438074656
best_error: 1.847025429154275
best_error: 1.844854563463993
best_error: 1.8448545438932762
best_error: 1.8361753504664302
best_error: 1.8361753265673588
best_error: 1.8210244551733026
best_error: 1.8210242522464273
best_error: 1.8210237124087443
best_error: 1.8140042213424163
best_error: 1.8140040721360382
best_error: 1.8140038282218274
best_error: 1.807105359255093
best_error: 1.8071052941095909
best_error: 1.8034989471280656
best_error: 1.803498943160862
best_error: 1.8034989358290954
best_error: 1.8012871098986718
best_error: 1.8012870955253422
best_error: 1.7962198377877803
best_error: 1.7962198329237986
best_error: 1.7962198200385493
best_error: 1.790969083359138
best_error: 1.7909690756531078
best_error: 1.7907588858648
best_error: 1.7907588741472171
best_error: 1.7906165359402633
best_error: 1.7906165317228715
best_error: 1.7905774620247101
best_error: 1.7905774596713426
best_error: 1.7904520346022208
best_error: 1.7904520292269515
best_error: 1.7904036023991592
best_error: 1.790403601672801
best_error: 1.790403601551289
best_error: 1.790385882376298
best_error: 1.790385881157098
best_error: 1.7903827236409002
best_error: 1.7903827231177487
best_error: 1.7903827228630953
best_error: 1.7903827227795015
best_error: 1.7903746466712014
best_error: 1.7903746434265937
best_error: 1.790361834621504
best_error: 1.79036182738726
best_error: 1.7902960049653407
best_error: 1.7902959933841527
best_error: 1.7902293735708352
best_error: 1.7902293564750167
best_error: 1.790203279950997
best_error: 1.7902032668389958
best_error: 1.7901807208107785
best_error: 1.790180716110878
best_error: 1.7901736025582167
best_error: 1.7901736003435784
best_error: 1.7901717351235606
best_error: 1.7901717342417556
best_error: 1.7901704331479045
best_error: 1.7901704326634031
best_error: 1.7901704324549967
best_error: 1.7901704323014733
best_error: 1.7901695595750695
best_error: 1.790169558832806
best_error: 1.790169558721879
best_error: 1.790169360900938
best_error: 1.7901693596166084
best_error: 1.790169066483496
best_error: 1.7901690656675349
best_error: 1.790169065623776
best_error: 1.7901689477409792
best_error: 1.79016894703248
best_error: 1.790168946894565
best_error: 1.7901681584601608
best_error: 1.7901681577218092
best_error: 1.7901681576083492
best_error: 1.79016718332634
best_error: 1.7901671832203232
best_error: 1.7901671826273013
best_error: 1.790167182479216
best_error: 1.7901651298061958
best_error: 1.7901651287638602
best_error: 1.7901637449663892
best_error: 1.7901637432645787
best_error: 1.7901630517723321
best_error: 1.790163049267714
best_error: 1.7901623473566732
best_error: 1.7901623451850452
best_error: 1.7901617650240118
best_error: 1.7901617641693792
best_error: 1.7901617641662173
best_error: 1.7901610572824849
best_error: 1.790161056645591
best_error: 1.7901610565460686
best_error: 1.7901610564245558
best_error: 1.790160953128333
best_error: 1.7901609519460542
best_error: 1.7901591582379337
best_error: 1.7901591568565598
best_error: 1.7901564980612938
best_error: 1.790156497669696
best_error: 1.790156497266856
best_error: 1.7901564971932291
best_error: 1.7901508585423054
best_error: 1.790150857759723
best_error: 1.7901508576801308
best_error: 1.7901351315350087
best_error: 1.7901351295979335
best_error: 1.7901326276860674
best_error: 1.7901326263294808
best_error: 1.790131831581719
best_error: 1.7901318304685825
best_error: 1.7901305321243908
best_error: 1.7901305311536353
best_error: 1.7901301129741243
best_error: 1.7901301096631457
best_error: 1.7901293016147664
best_error: 1.7901293009273878
best_error: 1.790129300411503
best_error: 1.7901280856097768
best_error: 1.7901280843832001
best_error: 1.7901246406045983
best_error: 1.790124639263774
best_error: 1.7901197649595029
best_error: 1.7901197603486474
best_error: 1.790115308766556
best_error: 1.790115304418315
