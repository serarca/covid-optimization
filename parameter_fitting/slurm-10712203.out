ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.683498634144957
best_error: 12.683498619535882
best_error: 12.683498614035761
best_error: 11.09775653130757
best_error: 11.097756432373192
best_error: 9.016359539763481
best_error: 9.016359366352855
best_error: 8.750662088245035
best_error: 8.750661967335605
best_error: 8.710609788787355
best_error: 8.710609712358202
best_error: 6.762879712783899
best_error: 6.7628795956406
best_error: 6.25374603488271
best_error: 6.253745923296474
best_error: 6.062491606421382
best_error: 6.062491488529105
best_error: 5.975987544072925
best_error: 5.9759874222633425
best_error: 5.955670067658488
best_error: 5.955670065136413
best_error: 5.942894303815475
best_error: 5.942894146363895
best_error: 5.529178167068752
best_error: 5.529177796896071
best_error: 5.306451521195654
best_error: 5.306451262880577
best_error: 5.146236279891376
best_error: 5.146236277301794
best_error: 5.003434263695343
best_error: 5.00343401700826
best_error: 4.975904331736249
best_error: 4.975904085764898
best_error: 4.970407054233583
best_error: 4.970406807786955
best_error: 4.966385543368529
best_error: 4.966385297187436
best_error: 4.96539963515137
best_error: 4.965399388883299
best_error: 4.964686458556168
best_error: 4.964686212225201
best_error: 4.9644942625978095
best_error: 4.964494260070911
best_error: 4.964450544911394
best_error: 4.964450298559632
best_error: 4.964429770746689
best_error: 4.964429524393083
best_error: 4.9644250313496014
best_error: 4.964424784995583
best_error: 4.964422199613482
best_error: 4.964421953259212
best_error: 4.964420831662975
best_error: 4.964420585308588
best_error: 4.964419891048458
best_error: 4.964419644693988
best_error: 4.96441948200413
best_error: 4.964419418976798
best_error: 4.964419394121139
best_error: 4.964419381751304
best_error: 4.964419380219949
best_error: 4.964419366371816
best_error: 4.96441934586587
best_error: 4.964419345220017
best_error: 4.964419342955953
best_error: 4.964419327576468
best_error: 4.952462594627324
best_error: 4.952462592110834
best_error: 4.910135734939785
best_error: 4.910135732491607
best_error: 4.85415299699061
best_error: 4.854152593892268
best_error: 4.84266015707834
best_error: 4.842659781868743
best_error: 4.839652341784783
best_error: 4.839652012784978
best_error: 4.834336944621194
best_error: 4.834336596454476
best_error: 4.828726232198477
best_error: 4.828725867846476
best_error: 4.8249241193710874
best_error: 4.82492411700042
best_error: 4.822836854508182
best_error: 4.822836494741534
best_error: 4.818230662342434
best_error: 4.81823031474097
best_error: 4.771298455641723
best_error: 4.771298452809327
best_error: 4.759912452298429
best_error: 4.759912124854981
best_error: 4.683818739556654
best_error: 4.683818433638535
best_error: 4.648913630700146
best_error: 4.648913313085853
best_error: 4.6446633887436235
best_error: 4.644663384865596
best_error: 4.644663328446898
best_error: 4.644652208963103
best_error: 4.644651890742722
best_error: 4.635200233764724
best_error: 4.635199904370589
best_error: 4.634278091832261
best_error: 4.634277740046489
best_error: 4.633385464086653
best_error: 4.633385126674046
best_error: 4.633262712641605
best_error: 4.633262373284211
best_error: 4.633192808861326
best_error: 4.633192469359859
best_error: 4.633014674472151
best_error: 4.633014335627022
best_error: 4.632432730924714
best_error: 4.632432395028955
best_error: 4.632124248446443
best_error: 4.632123912439049
best_error: 4.631973339979062
best_error: 4.631973005320002
best_error: 4.631919125961446
best_error: 4.631918791281564
best_error: 4.631913919383908
best_error: 4.631913915138753
best_error: 4.6319138589410835
best_error: 4.631911475031121
best_error: 4.631911140348293
best_error: 4.631899502485225
best_error: 4.631899167797783
best_error: 4.631897761571068
best_error: 4.631897426883263
best_error: 4.631896918366079
best_error: 4.631896583678124
best_error: 4.631896529692332
best_error: 4.631896195004302
best_error: 4.631896190127128
best_error: 4.631896172793088
best_error: 4.631896162952113
best_error: 4.631896159919108
