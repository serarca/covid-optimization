ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.990403106609437
best_error: 9.990403101153992
best_error: 4.835969420705626
best_error: 4.835969081170567
best_error: 4.6503834134743425
best_error: 4.650383333046641
best_error: 4.630358693589194
best_error: 4.6303586447622145
best_error: 4.627354896443566
best_error: 4.627354896443463
best_error: 4.627354887976136
best_error: 4.6268542620598465
best_error: 4.626854262059741
best_error: 4.626854253478547
best_error: 4.62672930999541
best_error: 4.626729281650321
best_error: 4.625539598792147
best_error: 4.625539591920907
best_error: 4.625539589128766
best_error: 4.624166955008226
best_error: 4.6241669550081195
best_error: 4.624166946280305
best_error: 4.617019024845769
best_error: 4.617019024845668
best_error: 4.617019015936491
best_error: 4.598020221289865
best_error: 4.598020221289741
best_error: 4.598020215407766
best_error: 4.592809835216055
best_error: 4.5928098352158875
best_error: 4.556079688784991
best_error: 4.556079688784835
best_error: 4.458154877246491
best_error: 4.4581548772463755
best_error: 4.458154861890153
best_error: 4.1141428651972465
best_error: 4.114142865197085
best_error: 4.114142856638856
best_error: 4.0143913303768475
best_error: 4.014391330376639
best_error: 3.688322849669278
best_error: 3.6883227223004327
best_error: 3.6408028109452575
best_error: 3.6408027469789204
best_error: 3.6349473608546554
best_error: 3.634947348726135
best_error: 3.634334515604274
best_error: 3.6343345156042104
best_error: 3.634334513895059
best_error: 3.6342834127486983
best_error: 3.6342834067577887
best_error: 3.6341958217447243
best_error: 3.6341958146521325
best_error: 3.6341755600530856
best_error: 3.6341755600530155
best_error: 3.634175559655802
best_error: 3.6341755583276294
best_error: 3.63411044851716
best_error: 3.634110441903443
best_error: 3.633901073166066
best_error: 3.6339010706486237
best_error: 3.6335275253744475
best_error: 3.63352752238144
best_error: 3.632104945924326
best_error: 3.6321049403289885
best_error: 3.627557644311919
best_error: 3.627557644311848
best_error: 3.627557635144515
best_error: 3.6054890158354795
best_error: 3.60548901583536
best_error: 3.605488992043722
best_error: 3.5984228249493833
best_error: 3.598422824949275
best_error: 3.598422805828394
best_error: 3.5883388205629303
best_error: 3.5883388205628197
best_error: 3.5883388068012696
best_error: 3.581035903065248
best_error: 3.5810359030651298
best_error: 3.581035898849632
best_error: 3.573850264902991
best_error: 3.5738502649028856
best_error: 3.5716453909178343
best_error: 3.571645390917715
best_error: 3.570623237437207
best_error: 3.5706232374370903
best_error: 3.5667289718813033
best_error: 3.5667289718811896
best_error: 3.555389658278553
best_error: 3.5553896582784468
best_error: 3.5066787873215133
best_error: 3.5066787873214014
best_error: 3.5066787680401657
best_error: 3.3468772928182595
best_error: 3.346877210528082
best_error: 3.3257403815099895
best_error: 3.325740381509921
best_error: 3.325740371891138
best_error: 3.3248417589356247
best_error: 3.3248417338862724
best_error: 3.324563697553927
best_error: 3.324563697553858
best_error: 3.3245636950452497
best_error: 3.324445519996436
best_error: 3.3244455199963694
best_error: 3.3244455180983636
best_error: 3.3243945875257968
best_error: 3.324394587525729
best_error: 3.324394586364787
best_error: 3.3243849170572686
best_error: 3.324384906493323
best_error: 3.3243670131346295
best_error: 3.3243670131345624
best_error: 3.324367012067085
best_error: 3.324363901231867
best_error: 3.3243638906083772
best_error: 3.324360248346149
best_error: 3.3243602483460784
best_error: 3.324360247277334
best_error: 3.3243588654188327
best_error: 3.3243588547923095
best_error: 3.324357428614013
best_error: 3.3243574286139426
best_error: 3.3243574275509373
best_error: 3.324349160804086
best_error: 3.324349160804019
best_error: 3.32434888812542
best_error: 3.3243488881253502
best_error: 3.324348813881361
best_error: 3.324348813881295
best_error: 3.32434881289973
best_error: 3.3243488088850857
