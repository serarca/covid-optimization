ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.757672360187147
best_error: 25.757671998630975
best_error: 5.046432104998279
best_error: 5.046432104753089
best_error: 5.046408367603596
best_error: 5.046408367591878
best_error: 5.046408367506827
best_error: 5.04631327863023
best_error: 5.046313278618464
best_error: 5.046313278533344
best_error: 5.045930676573933
best_error: 5.0459306765619765
best_error: 5.045930676476583
best_error: 5.044363281406459
best_error: 5.044363281393704
best_error: 5.04436328130719
best_error: 5.037424702118065
best_error: 5.037424702101515
best_error: 5.037424702010076
best_error: 4.988016812614684
best_error: 4.988016812535241
best_error: 4.988016812428886
best_error: 4.928494429530424
best_error: 4.928494429075841
best_error: 3.989438442022092
best_error: 3.989438303960546
best_error: 3.989438180180749
best_error: 2.730101083623987
best_error: 2.730100788229345
best_error: 2.730098219841529
best_error: 2.730097640721519
best_error: 2.4250001281628393
best_error: 2.4249999833657903
best_error: 2.3790546573328566
best_error: 2.379051481651922
best_error: 2.3758038929607928
best_error: 2.3758038892030986
best_error: 2.375803847218962
best_error: 2.3757927438456905
best_error: 2.375792685345216
best_error: 2.3757730481348074
best_error: 2.375772990442856
best_error: 2.375694739891613
best_error: 2.375694684709365
best_error: 2.3753933612202154
best_error: 2.375393309933347
best_error: 2.3743586119758247
best_error: 2.3743585629895474
best_error: 2.370950403191994
best_error: 2.3709503725382626
best_error: 2.3709503695622445
best_error: 2.3709492868048754
best_error: 2.3690152344550235
best_error: 2.3690152325997724
best_error: 2.3690152301523506
best_error: 2.369015177330364
best_error: 2.368885499264943
best_error: 2.3688854639005914
best_error: 2.368882296947869
best_error: 2.3688822968502734
best_error: 2.3688822662520153
best_error: 2.368860429543162
best_error: 2.368860427041288
best_error: 2.368860412740504
best_error: 2.3688068423691377
best_error: 2.3688068374761566
best_error: 2.368806832874775
best_error: 2.3688068325554426
best_error: 2.3683582304351924
best_error: 2.3683582247018222
best_error: 2.368358220662743
best_error: 2.3667115021548035
best_error: 2.366711487330121
best_error: 2.365938003406642
best_error: 2.3659379481994818
best_error: 2.365053671763165
best_error: 2.3650536140121377
best_error: 2.3648174292745447
best_error: 2.364817372479195
best_error: 2.3647567878051756
best_error: 2.364756729089961
best_error: 2.3628530754710106
best_error: 2.3628530335030518
best_error: 2.346171940498594
best_error: 2.346171906951185
best_error: 2.3191353638691847
best_error: 2.3191352726693144
best_error: 2.3191347859573916
best_error: 2.293045109282794
best_error: 2.2930450554834865
best_error: 2.293045024518822
best_error: 2.290196654170297
best_error: 2.290196583496211
best_error: 2.2475419608702443
best_error: 2.247541951974261
best_error: 2.2345767812663353
best_error: 2.2345766614238234
best_error: 2.234576159489849
best_error: 2.2282552224775043
best_error: 2.2282551483089774
best_error: 2.211351735361402
best_error: 2.2113517267572114
best_error: 2.2097182315849806
best_error: 2.209718227264859
best_error: 2.2089241413972704
best_error: 2.2089241407904776
best_error: 2.2089241406817224
best_error: 2.208924139431337
best_error: 2.2084644998610035
best_error: 2.20846449927064
best_error: 2.2084644991483895
best_error: 2.2084644978946035
best_error: 2.206699806369995
best_error: 2.206699803235817
best_error: 2.199910372024004
best_error: 2.199910312361347
best_error: 2.1975483227106953
best_error: 2.1975482283432575
best_error: 2.195151774810634
best_error: 2.1951517666797127
best_error: 2.195079928671321
best_error: 2.195079923927654
best_error: 2.195017423630693
best_error: 2.195017419528763
best_error: 2.1949143834414757
best_error: 2.1949143820799626
best_error: 2.194914381452277
best_error: 2.1948806459690133
best_error: 2.1948806425061083
best_error: 2.1948435456313304
best_error: 2.1948435440203427
best_error: 2.194843543671414
best_error: 2.1948417105936473
best_error: 2.194841710245802
best_error: 2.1948417098553357
best_error: 2.1948417086931573
best_error: 2.1948396338556
best_error: 2.1948396329609103
best_error: 2.194839631936123
best_error: 2.1948381174661713
best_error: 2.194838116359109
best_error: 2.194838115535702
best_error: 2.194834725844556
best_error: 2.1948347251536457
best_error: 2.194834725108594
best_error: 2.1948347239337607
best_error: 2.194826056892242
best_error: 2.1948260552503576
best_error: 2.194826054954116
best_error: 2.1948157348983335
best_error: 2.194815732717796
best_error: 2.194803294694229
best_error: 2.1948032924564393
best_error: 2.1947982564203907
best_error: 2.194798254338346
best_error: 2.194790817759209
best_error: 2.194790815704389
best_error: 2.1947696269832537
best_error: 2.1947696254030964
best_error: 2.194769625115545
best_error: 2.1947023365888048
best_error: 2.1947023345278054
best_error: 2.1944023222274494
best_error: 2.1944023208459824
best_error: 2.1944023203271827
best_error: 2.1928951478557726
best_error: 2.192895147259219
best_error: 2.1928951471448994
best_error: 2.1928951460979373
best_error: 2.1913217544481625
best_error: 2.1913217503416162
best_error: 2.1860232241775015
best_error: 2.1860231973784146
best_error: 2.1135150648197936
best_error: 2.113515009430893
best_error: 2.028433524932563
best_error: 2.0284334539655715
best_error: 1.8185688789247088
best_error: 1.8185687072251289
best_error: 1.818568198665857
best_error: 1.812634637363021
best_error: 1.8126345945003077
best_error: 1.72150421219012
best_error: 1.721504073452217
best_error: 1.717092260041697
best_error: 1.7170921597758495
best_error: 1.7105959036055909
best_error: 1.7105958076719963
best_error: 1.690466287051044
best_error: 1.6904662415299956
best_error: 1.6579308761556746
best_error: 1.6579308752695527
best_error: 1.6579308414769856
best_error: 1.6341900739634907
best_error: 1.6341900307212254
best_error: 1.634189657490622
best_error: 1.6203582690356613
best_error: 1.6203582538444201
best_error: 1.6126544927701516
best_error: 1.6126544541438708
best_error: 1.6105237689220113
best_error: 1.610523751358801
best_error: 1.6103778534730926
best_error: 1.6103778527664685
best_error: 1.610377852734613
best_error: 1.61037785268664
best_error: 1.6103445366691247
best_error: 1.6103445338510105
best_error: 1.610340633730815
best_error: 1.610340633343009
best_error: 1.610340632967806
best_error: 1.6103406327348189
best_error: 1.610340247147761
best_error: 1.6103402458754354
best_error: 1.6103402222525336
best_error: 1.6103402209580537
best_error: 1.610340186435778
best_error: 1.6103401855427055
best_error: 1.6103401854224517
best_error: 1.6103401738483827
best_error: 1.610340173024019
best_error: 1.6103401728331734
best_error: 1.6103401567929954
best_error: 1.6103401555393804
best_error: 1.610340137209835
best_error: 1.610340136342448
best_error: 1.610340136192201
best_error: 1.6103400378958777
best_error: 1.610340037015628
best_error: 1.6103400368781697
best_error: 1.6103397198761618
best_error: 1.6103397193647138
best_error: 1.610339719112668
best_error: 1.6103397188710347
best_error: 1.6103391917388405
best_error: 1.6103391912030673
best_error: 1.610339190975312
best_error: 1.6103391907297402
best_error: 1.610338439188906
best_error: 1.6103384383781354
best_error: 1.6103384381846686
best_error: 1.610337790405129
best_error: 1.6103377896095836
best_error: 1.6103377893992652
best_error: 1.6103355804576558
best_error: 1.6103355803147903
best_error: 1.6103355797113175
best_error: 1.6103355797057197
best_error: 1.6103355794699703
best_error: 1.6103157471955771
best_error: 1.61031574650197
best_error: 1.6103157464508113
best_error: 1.6103157462191018
best_error: 1.6102877396803825
best_error: 1.6102877396518167
best_error: 1.6102877390955725
best_error: 1.6102877389534997
best_error: 1.6102877388252927
best_error: 1.6102682662640913
best_error: 1.6102682660342267
best_error: 1.6102682657316814
best_error: 1.6102682655468328
best_error: 1.6102682654906144
best_error: 1.610248363732429
best_error: 1.6102483632597537
best_error: 1.6102483632545221
best_error: 1.610248363025677
best_error: 1.610229671170234
best_error: 1.6102296697767642
best_error: 1.6102006497838173
best_error: 1.6102006488981164
best_error: 1.6101791307654134
best_error: 1.6101791299390493
best_error: 1.6099441758711333
best_error: 1.6099441751925552
best_error: 1.6099441751395596
best_error: 1.609413430846788
best_error: 1.609413425480947
best_error: 1.6081585279261026
best_error: 1.6081585119367405
best_error: 1.606051895017657
best_error: 1.6060518292525787
best_error: 1.6037388302713322
best_error: 1.603738806934338
best_error: 1.6023642502558524
best_error: 1.6023642328105947
best_error: 1.6021402904049085
best_error: 1.6021402752200224
best_error: 1.6016547499765161
best_error: 1.6016547341314473
best_error: 1.6016541886772948
best_error: 1.6016541746186266
best_error: 1.601654163495944
best_error: 1.6013149137319957
best_error: 1.601314911253688
best_error: 1.6011260768239248
best_error: 1.6011260742958406
best_error: 1.6007445801110334
best_error: 1.6007445736844341
best_error: 1.6004713564334168
best_error: 1.600471345217968
best_error: 1.5998560660351464
best_error: 1.5998560541319131
best_error: 1.5996753519232456
best_error: 1.5996753392225747
best_error: 1.5985895805483386
best_error: 1.59858955735281
best_error: 1.5980017203350634
best_error: 1.5980017022600286
best_error: 1.5979805500800148
best_error: 1.597980532777217
best_error: 1.5979245367895958
best_error: 1.5979245231491814
best_error: 1.5979017721681392
best_error: 1.5979017590527027
best_error: 1.5978650062094346
best_error: 1.5978649917911312
best_error: 1.5978425832424172
best_error: 1.5978425676707975
