ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 62
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.3360510221661
best_error: 99.33605081874394
best_error: 99.33605081561556
best_error: 20.74977269250676
best_error: 20.74977269250629
best_error: 20.749772691656823
best_error: 20.74972526185055
best_error: 20.749725260999256
best_error: 20.74953478176684
best_error: 20.749534780910096
best_error: 20.748760522561692
best_error: 20.748760521682556
best_error: 20.745451005004803
best_error: 20.745451004026187
best_error: 20.72750880957888
best_error: 20.727508807964846
best_error: 19.168157885002245
best_error: 19.168157686936723
best_error: 18.447132796584683
best_error: 18.44713249722905
best_error: 16.93024494599877
best_error: 16.930244441128323
best_error: 15.598002559354464
best_error: 15.598001893570409
best_error: 15.341330721805843
best_error: 15.341330684271032
best_error: 15.04553368500875
best_error: 15.045533656193106
best_error: 14.966176930384352
best_error: 14.966176907749055
best_error: 14.95504568996995
best_error: 14.955045542227174
best_error: 14.950785696427614
best_error: 14.950785676749831
best_error: 14.948674661802885
best_error: 14.948674520589986
best_error: 14.948671062498308
best_error: 14.948671043500969
best_error: 14.948670149562199
best_error: 14.948670130564855
best_error: 14.948670081368174
best_error: 14.94867006630709
best_error: 14.948614295286081
best_error: 14.948614176867915
best_error: 14.927408304939659
best_error: 14.927408286603628
best_error: 14.92578407910151
best_error: 14.925784060720227
best_error: 14.921179654585647
best_error: 14.9211796354436
best_error: 14.919405350657286
best_error: 14.919405331940599
best_error: 14.912358004145968
best_error: 14.912357985590418
best_error: 14.91220317821336
best_error: 14.912203035169806
best_error: 14.910575808468058
best_error: 14.910575790338964
best_error: 14.910203054872946
best_error: 14.910203036749753
best_error: 14.91014873184148
best_error: 14.91014858845973
best_error: 14.910143503626546
best_error: 14.910143485504305
best_error: 14.910108178084634
best_error: 14.910108159962938
best_error: 14.9101080547852
best_error: 14.910105300023098
best_error: 14.910105281901451
best_error: 14.91010511280147
best_error: 14.910105108662709
best_error: 14.910105103926306
best_error: 14.897065330050019
best_error: 14.89706515838082
best_error: 14.893623143331464
best_error: 14.893622977242837
best_error: 14.89266916377943
best_error: 14.892669146947735
best_error: 14.892224891514012
best_error: 14.892224874687487
best_error: 14.892055852555321
best_error: 14.892055835730629
best_error: 14.887329150486035
best_error: 14.887328988810758
best_error: 14.887225753392338
best_error: 14.887225736239415
best_error: 14.856421876751408
best_error: 14.856421848041077
best_error: 14.763354681313679
best_error: 14.763354654158745
best_error: 14.763350949560245
best_error: 14.763350938929655
best_error: 14.763350933820629
best_error: 14.763079260585108
best_error: 14.763079249421933
best_error: 14.763079244864766
best_error: 14.757356256825595
best_error: 14.757356220463613
best_error: 14.753929637030378
best_error: 14.75392959005248
best_error: 14.733860209284288
best_error: 14.73386012659414
best_error: 14.729233598230365
best_error: 14.729233575086452
best_error: 14.693575852630852
best_error: 14.693575850924738
best_error: 14.693575848547642
best_error: 14.69357584589018
best_error: 14.693121079374976
best_error: 14.693121078629432
best_error: 14.69312097737845
best_error: 14.692891323556218
best_error: 14.69289132185104
best_error: 14.692891319474779
best_error: 14.692891316817558
best_error: 14.692841061618921
best_error: 14.692841060872706
best_error: 14.692840959595827
best_error: 14.692722456446198
best_error: 14.692722454751562
best_error: 14.692722452365699
best_error: 14.692722449708153
best_error: 14.692710878904364
best_error: 14.692710878157836
best_error: 14.692710776868928
best_error: 14.692708881292827
best_error: 14.692708880546295
best_error: 14.692708779257199
best_error: 14.69270864585291
best_error: 14.692708645106379
best_error: 14.692708644976706
best_error: 14.692708644476927
best_error: 14.692708635211511
best_error: 14.692708631114916
best_error: 14.692708630368383
best_error: 14.69270862047352
best_error: 14.692708613489362
