ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.19263478827499
best_error: 10.192634783783742
best_error: 9.581721763211004
best_error: 9.581721750712456
best_error: 8.406294498838605
best_error: 8.406294384714865
best_error: 2.85999453248573
best_error: 2.8599943813747513
best_error: 2.743766382248599
best_error: 2.743766370311663
best_error: 2.7288584060582215
best_error: 2.7288583214837945
best_error: 2.7119150315780405
best_error: 2.711915027790273
best_error: 2.7119150215609418
best_error: 2.7099371823493628
best_error: 2.709937102973261
best_error: 2.695842740849502
best_error: 2.695842639994559
best_error: 2.680377173894407
best_error: 2.680377159130789
best_error: 2.516488149136698
best_error: 2.5164881485488966
best_error: 2.5164881426259846
best_error: 2.318123969998964
best_error: 2.3181239604021706
best_error: 2.3181239381593888
best_error: 2.2371764409262394
best_error: 2.2371763928800332
best_error: 2.237176298667682
best_error: 2.1823887980699195
best_error: 2.1823887947643907
best_error: 2.1823887835750524
best_error: 2.1723898358812344
best_error: 2.1723898145652627
best_error: 2.172389756659572
best_error: 2.1497655299944887
best_error: 2.1497655227018235
best_error: 2.148028287914382
best_error: 2.148028287338144
best_error: 2.148028286879526
best_error: 2.1471157743280864
best_error: 2.1471157725310084
best_error: 2.146912739631616
best_error: 2.1469127346372554
best_error: 2.146675760665428
best_error: 2.146675760422948
best_error: 2.1466757546586104
best_error: 2.1465270607852016
best_error: 2.1465270606473372
best_error: 2.1465270523702076
best_error: 2.1464953586177336
best_error: 2.1464953584240334
best_error: 2.1464953499777293
best_error: 2.1463558878937854
best_error: 2.146355887013167
best_error: 2.1463558796940916
best_error: 2.1463260027839497
best_error: 2.1463260018930646
best_error: 2.14632599464346
best_error: 2.1462969386525548
best_error: 2.1462969377609955
best_error: 2.146277958170441
best_error: 2.1462779572746906
best_error: 2.146277950005106
best_error: 2.1462697128694175
best_error: 2.146269711972838
best_error: 2.1462697046998764
best_error: 2.1462684759336588
best_error: 2.1462684750369587
best_error: 2.146268467763492
best_error: 2.1462681105283736
best_error: 2.146268109624144
best_error: 2.1462681024293624
best_error: 2.1462671846131958
best_error: 2.146267183708838
best_error: 2.146267176514071
best_error: 2.146266617130613
best_error: 2.146266616226162
best_error: 2.1462666090314233
best_error: 2.146266560213419
best_error: 2.146266559308979
best_error: 2.1462665521142257
best_error: 2.146266506695999
best_error: 2.146266505791555
best_error: 2.1462452193272785
best_error: 2.146245218773792
best_error: 2.146209946105651
best_error: 2.146209945563589
best_error: 2.1454303286621594
best_error: 2.145430328425354
best_error: 2.1453573860914212
best_error: 2.145357382963833
best_error: 2.1453573812800606
best_error: 2.1451573315462737
best_error: 2.1451573290859067
best_error: 2.145157325716113
best_error: 2.1450727409270156
best_error: 2.1450727407890873
best_error: 2.144874912853252
best_error: 2.144874912771858
best_error: 2.1448729161750095
best_error: 2.144872915079002
best_error: 2.1448729083272555
best_error: 2.144838024462279
best_error: 2.144838024135788
best_error: 2.144838015608566
best_error: 2.1448267363515994
best_error: 2.144826736112776
best_error: 2.1448267275834976
best_error: 2.1448144690124797
best_error: 2.144814468872081
best_error: 2.1448144602616717
best_error: 2.1448081304792157
best_error: 2.144808130339167
best_error: 2.1448081218304624
best_error: 2.1448051190923367
best_error: 2.144805118943108
best_error: 2.14480511051765
best_error: 2.1448020604433187
best_error: 2.144802060431597
best_error: 2.144802004154191
best_error: 2.144802004021268
best_error: 2.1448019955787503
best_error: 2.14480124207179
best_error: 2.1448012419388496
best_error: 2.144801233496165
best_error: 2.14480097130861
best_error: 2.1448009711756404
best_error: 2.144800962732929
best_error: 2.144800955097158
best_error: 2.1448009500065006
best_error: 2.1448009453267165
best_error: 2.1448009427678603
best_error: 2.1448009416716345
best_error: 2.1448009413926967
best_error: 2.1448009412597324
best_error: 2.144800940775924
best_error: 2.1448009406429476
best_error: 2.14480094028157
best_error: 2.144800940148604
best_error: 2.1448009396628316
best_error: 2.1448009395298575
best_error: 2.1448009389029923
best_error: 2.144800938770029
best_error: 2.1448009386888804
best_error: 2.1448009386771973
best_error: 2.1448009386624998
best_error: 2.144800938269649
best_error: 2.144800938243563
