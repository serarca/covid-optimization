ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.778902904673362
best_error: 21.778902524402902
best_error: 4.489010986591682
best_error: 4.4890109849728965
best_error: 4.48829482463929
best_error: 4.488294824628549
best_error: 4.488294824581722
best_error: 4.485405149551218
best_error: 4.485405149540097
best_error: 4.485405149493183
best_error: 4.473415658427496
best_error: 4.473415658414642
best_error: 4.473415658367479
best_error: 4.416572305545811
best_error: 4.416572305520251
best_error: 4.416572305475188
best_error: 3.2800582799958273
best_error: 3.280058265828343
best_error: 3.1840605527407644
best_error: 3.1840605391105554
best_error: 2.9580054599420817
best_error: 2.9580054443833843
best_error: 2.9423959790916054
best_error: 2.9423959604375587
best_error: 2.939540795394724
best_error: 2.939540784451493
best_error: 2.9349203216349196
best_error: 2.934920310227252
best_error: 2.91575037956695
best_error: 2.9157503670666824
best_error: 2.8131142179564024
best_error: 2.813114172084831
best_error: 2.7869706894222475
best_error: 2.786970643274343
best_error: 2.7537739000544246
best_error: 2.7537738539295105
best_error: 2.505920980490655
best_error: 2.5059209335304025
best_error: 2.505920895075682
best_error: 2.293406330479527
best_error: 2.293406266913434
best_error: 2.2934062596157374
best_error: 2.2593366759299225
best_error: 2.2593365817147206
best_error: 2.058340792302332
best_error: 2.058340721781451
best_error: 1.9078026893223656
best_error: 1.9078026877191612
best_error: 1.9078026246970707
best_error: 1.8991158088687126
best_error: 1.8991157105105918
best_error: 1.8890451092481595
best_error: 1.8890450965502672
best_error: 1.882228210624046
best_error: 1.882228210118071
best_error: 1.8822282100739165
best_error: 1.8822282036907247
best_error: 1.881819514192678
best_error: 1.8818194964964743
best_error: 1.8813840517398808
best_error: 1.8813840511456181
best_error: 1.8813840449304424
best_error: 1.8793802047800099
best_error: 1.879380201869459
best_error: 1.8793801980523153
best_error: 1.8729398845536005
best_error: 1.8729398614907586
best_error: 1.8249500974132418
best_error: 1.8249500810465509
best_error: 1.824950074977588
best_error: 1.498455185715858
best_error: 1.4984551555430687
best_error: 1.3969792891792132
best_error: 1.3969792811208661
best_error: 1.3969792539961992
best_error: 1.394004215041536
best_error: 1.3940041844234612
best_error: 1.3932835782998976
best_error: 1.3932835349054724
best_error: 1.3930474168090736
best_error: 1.3930473651025255
best_error: 1.3930394608913002
best_error: 1.3930394079229538
best_error: 1.3927096619054657
best_error: 1.392709601481495
best_error: 1.3916964769896318
best_error: 1.3916964028762182
best_error: 1.3904279941873219
best_error: 1.390427906960938
best_error: 1.3852702435832862
best_error: 1.3852702020556273
best_error: 1.3623413512793947
best_error: 1.3623412799982477
best_error: 1.3497910060166052
best_error: 1.349790995516949
best_error: 1.3497909881909818
best_error: 1.3472376261514762
best_error: 1.3472376045874304
best_error: 1.3379222525183345
best_error: 1.3379222127349908
best_error: 1.3260523390760386
best_error: 1.3260523111040887
best_error: 1.3234142304875471
best_error: 1.3234142304736594
best_error: 1.3234142302850826
best_error: 1.3234142292107975
best_error: 1.3227625443423534
best_error: 1.32276253768073
best_error: 1.3225002632555865
best_error: 1.3225002608791652
best_error: 1.3223841028758299
best_error: 1.3223840970225154
best_error: 1.3223290983829474
best_error: 1.3223290910089418
best_error: 1.321884291452782
best_error: 1.3218842646960665
best_error: 1.3213507274087046
best_error: 1.3213506924014118
best_error: 1.3176937405750908
best_error: 1.3176936745380328
best_error: 1.3089151653112956
best_error: 1.3089150641846563
best_error: 1.306901595154466
best_error: 1.306901487625245
best_error: 1.2989462496511106
best_error: 1.2989461689750266
best_error: 1.2958761711993203
best_error: 1.2958761190402148
best_error: 1.292558466893634
best_error: 1.2925584253767162
best_error: 1.2912363300732772
best_error: 1.2912363261925786
best_error: 1.291136046436028
best_error: 1.291136045238118
best_error: 1.2911114135429234
best_error: 1.291111411319585
best_error: 1.2910576135434044
best_error: 1.2910576104987137
best_error: 1.2908607848395408
best_error: 1.2908607799620437
best_error: 1.2902976948298215
best_error: 1.2902976866419715
best_error: 1.2891325344906193
best_error: 1.2891325238994031
best_error: 1.2860130132121828
best_error: 1.2860129835516714
best_error: 1.283285103252923
best_error: 1.2832850726156582
best_error: 1.2826475854651087
best_error: 1.282647555670056
best_error: 1.2696461129394085
best_error: 1.269646084822454
best_error: 1.2682688408422649
best_error: 1.2682688342937172
best_error: 1.2682688325210187
best_error: 1.2658827607050511
best_error: 1.2658827552016882
best_error: 1.2658827512306732
best_error: 1.2634372938844955
best_error: 1.2634372083320324
best_error: 1.257750451779506
best_error: 1.2577504264946813
best_error: 1.2551284307288122
best_error: 1.255128395421748
best_error: 1.2531794917673995
best_error: 1.2531794591432914
best_error: 1.251841527646762
best_error: 1.2518415196675725
best_error: 1.2513194948496666
best_error: 1.2513194857343952
best_error: 1.251036723644049
best_error: 1.2510367230938981
best_error: 1.250752078997239
best_error: 1.2507520784675603
best_error: 1.2483689750813178
best_error: 1.248368966439458
best_error: 1.2458930627267377
best_error: 1.2458930050231338
best_error: 1.2451699738940938
best_error: 1.2451699736104407
best_error: 1.245169973303038
best_error: 1.2421681499520267
best_error: 1.2421681290974744
best_error: 1.2417458672821784
best_error: 1.2417458310605307
best_error: 1.2383221106815447
best_error: 1.2383220793322014
best_error: 1.2317222037238629
best_error: 1.2317221840117138
best_error: 1.2311676119640373
best_error: 1.2311676077046685
best_error: 1.2309208142909807
best_error: 1.2309208142908714
best_error: 1.2309208139949135
best_error: 1.2309208136535397
best_error: 1.230707025952599
best_error: 1.2307070249128853
best_error: 1.2306457312895207
best_error: 1.230645730459055
best_error: 1.2306414904709677
best_error: 1.2306414903517098
best_error: 1.2306414901306326
best_error: 1.2305896295515157
best_error: 1.2305896282989794
best_error: 1.2305495274420872
best_error: 1.2305495244337052
best_error: 1.2303736982859264
best_error: 1.2303736943596686
best_error: 1.230194304676756
best_error: 1.2301942990104069
best_error: 1.229959348115205
best_error: 1.2299593480300361
best_error: 1.2299593476194481
best_error: 1.2299593473858175
best_error: 1.229829012829306
best_error: 1.2298290076839025
best_error: 1.2295231211840028
best_error: 1.2295231144375713
best_error: 1.2290104749031614
best_error: 1.229010465938898
best_error: 1.2287473425729052
best_error: 1.2287473391099228
best_error: 1.2283778956764344
best_error: 1.2283778946832802
best_error: 1.2279759783941255
best_error: 1.227975973357267
best_error: 1.2278899013213633
best_error: 1.2278899011914344
best_error: 1.2278840583803068
best_error: 1.2278840573457868
best_error: 1.2278816924984135
best_error: 1.2278816915674233
best_error: 1.2278788301311139
best_error: 1.2278788298228798
best_error: 1.2278787024773208
best_error: 1.2278787023432622
best_error: 1.2278786174430005
best_error: 1.227878617388641
best_error: 1.2278785310506752
best_error: 1.2278785309819402
best_error: 1.2278782610439658
best_error: 1.2278782610415109
best_error: 1.2278782610231738
best_error: 1.2278777577004971
best_error: 1.2278777573280535
best_error: 1.2278772194422538
best_error: 1.2278772193974041
best_error: 1.2278760146252439
best_error: 1.2278760145982497
best_error: 1.227872444032477
best_error: 1.2278724438643938
best_error: 1.227870639743518
best_error: 1.2278706391472618
best_error: 1.227870327127491
best_error: 1.2278703257786654
best_error: 1.2278697340824574
best_error: 1.227869733227702
best_error: 1.22786939753622
best_error: 1.2278693974624812
best_error: 1.2278692616497706
best_error: 1.2278692615574645
best_error: 1.227869151094259
best_error: 1.2278691508837403
best_error: 1.2278691376725797
best_error: 1.2278691375055153
best_error: 1.227869118713743
best_error: 1.2278691186572537
