ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 94
days_switch 80
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.00594203557506
best_error: 99.00594183208258
best_error: 19.958268543218715
best_error: 19.958268543217457
best_error: 19.958268543187707
best_error: 19.95826854257607
best_error: 19.95822839066563
best_error: 19.95822839066438
best_error: 19.958067550354784
best_error: 19.95806755035478
best_error: 19.958067550353526
best_error: 19.957420483863068
best_error: 19.95742048386181
best_error: 19.95477137972017
best_error: 19.95477137971889
best_error: 19.943090969158174
best_error: 19.943090969156785
best_error: 19.867346792417106
best_error: 19.86734679241501
best_error: 19.641754644995668
best_error: 19.641754644993128
best_error: 19.64175464499149
best_error: 19.641754511925107
best_error: 19.64175451192257
best_error: 19.64175451192093
best_error: 19.641753979601575
best_error: 19.641753979599027
best_error: 19.641753979597397
best_error: 19.64175184964575
best_error: 19.641751849643203
best_error: 19.641751849641576
best_error: 19.641743319218964
best_error: 19.641743319216406
best_error: 19.64174331921479
best_error: 19.64170902678014
best_error: 19.641709026777516
best_error: 19.641709026775963
best_error: 19.64156905455366
best_error: 19.641569054550814
best_error: 19.64156905454948
best_error: 19.640959246544714
best_error: 19.640959246540817
best_error: 19.640959246540532
best_error: 19.63714329605226
best_error: 19.637143296042655
best_error: 19.626909648808148
best_error: 19.626909648789727
best_error: 19.626909621586755
best_error: 19.626909621568362
best_error: 19.62690951265881
best_error: 19.626909512640406
best_error: 19.62690907626757
best_error: 19.626909076249113
best_error: 19.626907319794498
best_error: 19.626907319775842
best_error: 19.626900116990132
best_error: 19.626900116970674
best_error: 19.626868316882454
best_error: 19.62686831685949
best_error: 19.626681476059034
best_error: 19.626681476017048
best_error: 19.623373863644623
best_error: 19.6233738632999
best_error: 19.607689327785113
best_error: 19.607689325694803
best_error: 19.250122996274964
best_error: 19.25012294100695
best_error: 19.250122929681332
best_error: 19.06032307854831
best_error: 19.060322987414448
best_error: 19.06032297292465
best_error: 18.892986344902447
best_error: 18.892986229519785
best_error: 18.892986211703434
best_error: 18.412932571513604
best_error: 18.41293254218141
best_error: 18.412932524048724
best_error: 18.399606051312826
best_error: 18.399606051175347
best_error: 18.399606042114737
best_error: 18.398092611850494
best_error: 18.39809261171265
best_error: 18.398092603980174
best_error: 18.397338044805927
best_error: 18.397338044700792
best_error: 18.39733804468091
best_error: 18.397338043797188
best_error: 18.397022023419822
best_error: 18.39702202241653
best_error: 18.397012807578967
best_error: 18.39701280657208
best_error: 18.397005667107692
best_error: 18.397005666098003
best_error: 18.39700031717383
best_error: 18.397000316162075
best_error: 18.396996426208005
best_error: 18.396996425194732
best_error: 18.39699446077185
best_error: 18.396994459757813
best_error: 18.396992897529337
best_error: 18.39699289651469
best_error: 18.396992061114933
best_error: 18.396992060099965
best_error: 18.396991424917697
best_error: 18.396991424195424
best_error: 18.396991177338823
best_error: 18.396991176616442
best_error: 18.396990988788403
best_error: 18.39699098806595
best_error: 18.396990844056575
best_error: 18.39699084333407
best_error: 18.39699074836256
best_error: 18.39699074764
best_error: 18.396990644636297
best_error: 18.396990643913693
best_error: 18.396990596108207
best_error: 18.396990595385574
best_error: 18.396990530525542
best_error: 18.39699052980289
best_error: 18.396990516381546
best_error: 18.396990515658896
best_error: 18.396990503794076
best_error: 18.39699050307141
best_error: 18.396990497169423
best_error: 18.39699049644675
best_error: 18.396990488426134
best_error: 18.396990487703462
best_error: 18.396990485499924
best_error: 18.39699048477725
best_error: 18.396990483965684
best_error: 18.396990483243016
best_error: 18.396990481978847
best_error: 18.39699048125617
best_error: 18.396990480687865
best_error: 18.39699048039857
