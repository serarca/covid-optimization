ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.99553402805813
best_error: 97.99553394474091
best_error: 97.99553387156234
best_error: 17.52583630338594
best_error: 17.525836303379737
best_error: 17.525836290789645
best_error: 17.478292195848866
best_error: 17.478292182045468
best_error: 17.233125530690643
best_error: 17.233125507982226
best_error: 16.091548731257355
best_error: 16.091548603995225
best_error: 12.555242418889808
best_error: 12.555242300106007
best_error: 12.380206826162265
best_error: 12.380206823326088
best_error: 12.38020681972318
best_error: 12.380206572547015
best_error: 12.362277335603963
best_error: 12.362277257827383
best_error: 12.25945697183905
best_error: 12.259456932704083
best_error: 11.837980675786685
best_error: 11.83798062660386
best_error: 11.153464095171552
best_error: 11.153464089264963
best_error: 11.153464064996447
best_error: 10.858748989740747
best_error: 10.858748978665801
best_error: 10.858748958318733
best_error: 10.126700569711502
best_error: 10.126700363284339
best_error: 9.474863863033509
best_error: 9.474863841381978
best_error: 9.474863835600084
best_error: 9.423069440790547
best_error: 9.423069437942985
best_error: 9.423069437767253
best_error: 9.423069412911941
best_error: 9.265664485048957
best_error: 9.265664478821995
best_error: 9.265664457381197
best_error: 9.260928252052866
best_error: 9.260928218256037
best_error: 9.03065070075833
best_error: 9.030650683808975
best_error: 9.030650675007813
best_error: 8.927530452237843
best_error: 8.927530320206772
best_error: 8.87539773072323
best_error: 8.875397721245452
best_error: 8.87539770789017
best_error: 8.841520755610498
best_error: 8.841520507844685
best_error: 8.830591542420393
best_error: 8.830591539388148
best_error: 8.830591490132386
best_error: 8.828598344608938
best_error: 8.828598340588952
best_error: 8.828598303709017
best_error: 8.81896102691345
best_error: 8.818961022442327
best_error: 8.818960993081092
best_error: 8.803895103302962
best_error: 8.803895086453203
best_error: 8.792639628572454
best_error: 8.792639612995185
best_error: 8.785505075028581
best_error: 8.785504903308581
best_error: 8.778765287270335
best_error: 8.778765274278609
best_error: 8.774736092472734
best_error: 8.774736079268578
best_error: 8.762394297252026
best_error: 8.762394167874973
best_error: 8.748160496526662
best_error: 8.748160479688986
best_error: 8.740991032819904
best_error: 8.740990954059768
best_error: 8.738626668795854
best_error: 8.738626574846773
best_error: 8.736491379587608
best_error: 8.736491266457943
best_error: 8.735672956357895
best_error: 8.735672940466344
best_error: 8.735645110433131
best_error: 8.735645015172528
best_error: 8.735313572335794
best_error: 8.735313476959892
best_error: 8.735093382916984
best_error: 8.735093286079325
best_error: 8.735041147291025
best_error: 8.735041130452558
best_error: 8.735033039227986
best_error: 8.735032931626002
best_error: 8.734775719156117
best_error: 8.734775608943682
best_error: 8.73323145892901
best_error: 8.733231442005028
best_error: 8.730495904654635
best_error: 8.730495887052008
best_error: 8.722979660120362
best_error: 8.722979641891643
best_error: 8.710934211408894
best_error: 8.710934191628624
best_error: 8.693895229506838
best_error: 8.693895209273201
best_error: 8.625733065450566
best_error: 8.625733046916565
best_error: 8.579878103895362
best_error: 8.579878082141665
best_error: 8.553747723242093
best_error: 8.553747707411764
best_error: 8.5253868373605
best_error: 8.52538681191852
best_error: 8.45580600180347
best_error: 8.45580593573731
best_error: 8.423282331906355
best_error: 8.42328230367717
best_error: 8.383690304703137
best_error: 8.383690275565232
best_error: 8.189501580068278
best_error: 8.189501561099773
best_error: 8.176012580105457
best_error: 8.176012577269017
best_error: 8.176012509624691
best_error: 8.17475094438235
best_error: 8.174750942723836
best_error: 8.174750860977735
best_error: 8.174749349377821
best_error: 8.17474934772007
best_error: 8.17474926596974
best_error: 8.174748074746528
best_error: 8.17474807308938
best_error: 8.17474799133569
best_error: 8.174746695971992
best_error: 8.174746694315495
best_error: 8.174746612558174
best_error: 8.17474607142284
best_error: 8.174746070228592
best_error: 8.174745982821742
best_error: 8.174745911387932
best_error: 8.17474585654048
best_error: 8.174745844507552
best_error: 8.174745839282343
best_error: 8.17474583800064
best_error: 8.174745837445286
best_error: 8.174745836804096
