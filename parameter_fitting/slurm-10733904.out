ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.201823793431043
best_error: 8.201823784908497
best_error: 3.457417754067868
best_error: 3.4574177505084114
best_error: 3.1980994618421095
best_error: 3.198099438306037
best_error: 3.0643663855280865
best_error: 3.0643662052071723
best_error: 3.0630436920014783
best_error: 3.0630436920014774
best_error: 3.0630436795047613
best_error: 2.8922065186310215
best_error: 2.892206510948642
best_error: 2.886207979074417
best_error: 2.8862079742248916
best_error: 2.8862079713786386
best_error: 2.884018941812046
best_error: 2.8840189387852693
best_error: 2.8840189340245694
best_error: 2.8804355742756216
best_error: 2.8804355742756202
best_error: 2.8804355742756185
best_error: 2.880435566197897
best_error: 2.879532383943427
best_error: 2.8795323839434253
best_error: 2.8795323759341263
best_error: 2.87919892304821
best_error: 2.8791989149943626
best_error: 2.879035942750996
best_error: 2.8790359427509937
best_error: 2.8790359346897016
best_error: 2.8789689086490613
best_error: 2.878968908649056
best_error: 2.8789689005752073
best_error: 2.878958909788588
best_error: 2.8789589097885875
best_error: 2.8789589097885866
best_error: 2.8789589017128603
best_error: 2.878953505495812
best_error: 2.8789535054958106
best_error: 2.8789534974190714
best_error: 2.8789485018404983
best_error: 2.8789485018404974
best_error: 2.878948493762823
best_error: 2.8789463508160567
best_error: 2.8789463508160558
best_error: 2.8789463427379776
best_error: 2.8789449719681866
best_error: 2.878944971968182
best_error: 2.878944963889848
best_error: 2.8789436321208663
best_error: 2.878943632120865
best_error: 2.878942530541729
best_error: 2.878942530541727
best_error: 2.878942522462935
best_error: 2.8789423043232683
best_error: 2.8789423043232647
best_error: 2.8789422962444307
best_error: 2.878942219558671
best_error: 2.8789422195586702
best_error: 2.8789422114798193
best_error: 2.878942163793958
best_error: 2.878942163793954
best_error: 2.878942155715094
best_error: 2.8789420950383633
best_error: 2.8789420950383584
best_error: 2.878942086959487
best_error: 2.878942076540214
best_error: 2.878942076540211
best_error: 2.878942068461334
best_error: 2.878942066824057
best_error: 2.878942066824055
best_error: 2.878942058745177
best_error: 2.8789420577211717
best_error: 2.8789420577211686
best_error: 2.8789420496422884
best_error: 2.8789420379458206
best_error: 2.8789420349998065
best_error: 2.8789420349998056
best_error: 2.8789420349998034
best_error: 2.8789420346761734
best_error: 2.878053678067707
best_error: 2.878053674493993
best_error: 2.8780536697817016
best_error: 2.87805211404916
best_error: 2.878052109535992
best_error: 2.8780521057574218
best_error: 2.878049061300014
best_error: 2.8780490569087913
best_error: 2.8780490530082425
best_error: 2.8780487622110718
best_error: 2.878048757952393
best_error: 2.878048753919326
best_error: 2.8780486558411753
best_error: 2.8780486515595856
best_error: 2.8780486475494236
best_error: 2.8780474954766353
best_error: 2.878047491195244
best_error: 2.878047487184756
best_error: 2.8780430024071917
best_error: 2.8780429980158293
best_error: 2.878042994114721
best_error: 2.8780275469587324
best_error: 2.8780275424129433
best_error: 2.8780275386640914
best_error: 2.877993773439537
best_error: 2.8779937675320606
best_error: 2.877993765107704
best_error: 2.8779825707284243
best_error: 2.877982564530557
best_error: 2.877982562393802
best_error: 2.8779397596975023
best_error: 2.877939753402265
best_error: 2.877939751353098
best_error: 2.8777877235644262
best_error: 2.87778771661248
best_error: 2.8777877151855202
best_error: 2.87727590799993
best_error: 2.8772758971792998
best_error: 2.8628917180684317
best_error: 2.86289169390985
best_error: 2.8551100205190396
best_error: 2.855110020519037
best_error: 2.8551100137229217
best_error: 2.8551100077054667
best_error: 2.8421219161271276
best_error: 2.8421219161271267
best_error: 2.8421219112447487
best_error: 2.842121904313829
best_error: 2.8419378163866327
best_error: 2.8419378163866322
best_error: 2.8419378115086587
best_error: 2.8419121974802244
best_error: 2.8419121926028663
best_error: 2.841901621314592
best_error: 2.84190161643749
best_error: 2.8418968469534316
best_error: 2.8418968420764457
best_error: 2.8418961683347086
best_error: 2.84189611795961
best_error: 2.8418955155569154
best_error: 2.8418955155569146
best_error: 2.84189551067995
best_error: 2.8418947378573827
best_error: 2.8418947329804336
best_error: 2.8418947109535377
best_error: 2.8418947055997963
best_error: 2.8418947022311527
best_error: 2.841894696950324
best_error: 2.84189469228875
