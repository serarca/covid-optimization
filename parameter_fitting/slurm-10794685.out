ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.515234027942409
best_error: 10.515233971893217
best_error: 9.874556839542
best_error: 9.87455672429115
best_error: 8.472773219832673
best_error: 8.47277295768815
best_error: 6.231245108715687
best_error: 6.231244680439554
best_error: 5.434421873085173
best_error: 5.434421566219088
best_error: 5.252370031784592
best_error: 5.2523700095171
best_error: 5.252369804977446
best_error: 5.222682516793257
best_error: 5.222682480702643
best_error: 5.222682320917891
best_error: 5.064196513211453
best_error: 5.064196461365222
best_error: 4.860512746031659
best_error: 4.860512666140409
best_error: 4.6873421824439125
best_error: 4.687342144912877
best_error: 4.685631475029483
best_error: 4.685631459472677
best_error: 4.666400952421222
best_error: 4.666400926300959
best_error: 4.641555076160112
best_error: 4.641555041381247
best_error: 4.6270022465752705
best_error: 4.6270022047691794
best_error: 4.6232092047107205
best_error: 4.623209145069067
best_error: 4.5307991517235084
best_error: 4.530799072869973
best_error: 4.47741101794632
best_error: 4.4774109846698735
best_error: 4.4274475198943675
best_error: 4.427447472949527
best_error: 4.359171699492198
best_error: 4.359171663773263
best_error: 4.2683582627721774
best_error: 4.268358256220584
best_error: 4.262158912367827
best_error: 4.2621588868873586
best_error: 4.260482037659105
best_error: 4.260482019529812
best_error: 4.257037558209918
best_error: 4.257037556646624
best_error: 4.257037546149656
best_error: 4.246283211416994
best_error: 4.246283087829864
best_error: 4.237286538169941
best_error: 4.237286407416986
best_error: 4.211500710543633
best_error: 4.211500701710651
best_error: 4.197825266890453
best_error: 4.197825249581141
best_error: 4.192650537504781
best_error: 4.192650517128178
best_error: 4.184079008098694
best_error: 4.1840789879423514
best_error: 4.181001408124139
best_error: 4.181001388851237
best_error: 4.178751352864439
best_error: 4.1787513271470615
best_error: 4.17808476642875
best_error: 4.1780847425478065
best_error: 4.177848188025888
best_error: 4.177848165005113
best_error: 4.177801896543902
best_error: 4.177801873944441
best_error: 4.177800982910787
best_error: 4.177800971107137
best_error: 4.177799115616671
best_error: 4.177799093016279
best_error: 4.177794008037013
best_error: 4.177793985434906
best_error: 4.177793140464936
best_error: 4.177793117862373
best_error: 4.177793055847063
best_error: 4.177793033244455
best_error: 4.177792988300443
best_error: 4.177792965697799
best_error: 4.177792948722451
best_error: 4.177792926119787
best_error: 4.177792907117153
best_error: 4.177792884514468
best_error: 4.177792866864351
best_error: 4.177792857779288
best_error: 4.177792854022935
best_error: 4.177792852175165
best_error: 4.1777928521497865
best_error: 4.177785316847637
best_error: 4.177785304999362
best_error: 4.17776764889879
best_error: 4.177767637012069
best_error: 4.177656327609125
best_error: 4.177656303440445
best_error: 4.176999496102761
best_error: 4.176999472473216
best_error: 4.176981345625145
best_error: 4.176981322069276
best_error: 4.176971709278344
best_error: 4.176971685799596
best_error: 4.176966587247157
best_error: 4.1769665637682705
best_error: 4.176963833210505
best_error: 4.1769638097315385
best_error: 4.176962372314783
best_error: 4.176962348835777
best_error: 4.176961598942017
best_error: 4.176961575462991
best_error: 4.176961528981262
best_error: 4.176961517645031
best_error: 4.176961500432056
best_error: 4.17696147695303
best_error: 4.176961335254537
best_error: 4.176961311775513
best_error: 4.176961004375043
best_error: 4.176960993038846
best_error: 4.176960758238819
best_error: 4.176960758211957
best_error: 4.176960475551821
best_error: 4.176960464215782
best_error: 4.176958652238047
best_error: 4.176958628759375
best_error: 4.176955116545779
best_error: 4.176955093067616
best_error: 4.17694100499251
best_error: 4.176940981516343
best_error: 4.176886892468003
best_error: 4.1768868810396675
best_error: 4.176838536544503
best_error: 4.176838524767834
best_error: 4.1767275495184695
best_error: 4.176727534777275
best_error: 4.176716756571111
best_error: 4.176716740106952
best_error: 4.176686998145558
best_error: 4.1766869767777335
best_error: 4.1766420763134935
best_error: 4.176642063055933
best_error: 4.176622943993849
best_error: 4.176622930413307
best_error: 4.17662210771035
best_error: 4.176622089211179
best_error: 4.176611103356881
best_error: 4.176611089778024
best_error: 4.176588623181959
best_error: 4.176588609882573
best_error: 4.176511071704087
best_error: 4.176511057820655
