ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 19.983173375283624
best_error: 19.983173131874217
best_error: 13.052888337248724
best_error: 13.052888332583715
best_error: 13.052888318359445
best_error: 12.958198462236016
best_error: 12.958198456853117
best_error: 12.95819845212865
best_error: 12.404638745507174
best_error: 12.404638735816157
best_error: 12.404638729126418
best_error: 11.913693748234007
best_error: 11.913693737262673
best_error: 11.866744097860094
best_error: 11.866744088402177
best_error: 11.828612223154613
best_error: 11.828612215310116
best_error: 11.828612211128627
best_error: 10.710099537886268
best_error: 10.71009932452622
best_error: 10.676307617587813
best_error: 10.676307584802872
best_error: 10.67630742679378
best_error: 10.42687140230589
best_error: 10.42687136813159
best_error: 10.426871209315818
best_error: 10.423497871183029
best_error: 10.423497843082632
best_error: 10.423497676048662
best_error: 9.414648279211207
best_error: 9.414648233036328
best_error: 9.4146480826782
best_error: 8.895870095632509
best_error: 8.895870064203468
best_error: 8.89586989760475
best_error: 8.619038833970041
best_error: 8.619038802588914
best_error: 8.619038635156791
best_error: 8.4637533301953
best_error: 8.463753305684198
best_error: 8.463753132019686
best_error: 8.375932700062926
best_error: 8.375932674401687
best_error: 8.375932500943925
best_error: 8.3274198983346
best_error: 8.327419871687187
best_error: 8.32741969842224
best_error: 8.318695723347172
best_error: 8.318695695658372
best_error: 8.318695522801697
best_error: 8.310754460750275
best_error: 8.310754432125277
best_error: 8.310754259628887
best_error: 8.306619594297853
best_error: 8.306619566436947
best_error: 8.306619392961412
best_error: 8.303911514730245
best_error: 8.30391148655411
best_error: 8.303911313196295
best_error: 8.301487864180814
best_error: 8.301487836947413
best_error: 8.301487662517845
best_error: 8.300220564946846
best_error: 8.300220537566727
best_error: 8.300220363190894
best_error: 8.299086757144233
best_error: 8.299086729633107
best_error: 8.299086555305115
best_error: 8.298478512793137
best_error: 8.298478485211822
best_error: 8.298478310909362
best_error: 8.297937767941853
best_error: 8.29793774029819
best_error: 8.297937566018376
best_error: 8.297637126407686
best_error: 8.297637098729389
best_error: 8.297636924462179
best_error: 8.297372925456715
best_error: 8.297372897747987
best_error: 8.29737272349183
best_error: 8.297107580284687
best_error: 8.297107552545418
best_error: 8.297107378300318
best_error: 8.29686786541502
best_error: 8.296867837648154
best_error: 8.296867663413062
best_error: 8.296749533524284
best_error: 8.296749505743804
best_error: 8.296749331513645
best_error: 8.296642134994213
best_error: 8.296642107201384
best_error: 8.296641932975714
best_error: 8.296590903727402
best_error: 8.296590875928686
best_error: 8.296590701705153
best_error: 8.2965824030546
best_error: 8.2965823752549
best_error: 8.296582201031688
best_error: 8.296574741412655
best_error: 8.29657471361207
best_error: 8.296574539389185
best_error: 8.296570914467138
best_error: 8.296570886666107
best_error: 8.296570712443387
best_error: 8.296567453023531
best_error: 8.296567425222115
best_error: 8.29656725099955
best_error: 8.296565766245463
best_error: 8.296565738443846
best_error: 8.296565564221353
best_error: 8.29656423118553
best_error: 8.296564203383747
best_error: 8.296564029161296
best_error: 8.296563984397913
best_error: 8.296563956596092
best_error: 8.296563782373667
best_error: 8.296563759805759
best_error: 8.296563557781479
best_error: 5.487044257962445
best_error: 5.4870434359922164
best_error: 5.006465847216455
best_error: 5.0064653102369086
best_error: 4.962993052892774
best_error: 4.9629925478171195
best_error: 4.954401008661428
best_error: 4.95440050665116
best_error: 4.945959544720931
best_error: 4.945959047807891
best_error: 4.938907084445686
best_error: 4.938906588386314
best_error: 4.938678299322609
best_error: 4.938678184128343
best_error: 4.937410169872689
best_error: 4.937409677167981
best_error: 4.932892432785602
best_error: 4.932891941694717
best_error: 4.931953335841259
best_error: 4.931952845853871
best_error: 4.931627447797494
best_error: 4.931627332825055
best_error: 4.931470003259067
best_error: 4.931469514158888
best_error: 4.925105084323507
best_error: 4.92510459146772
best_error: 4.9122803542592965
best_error: 4.912280239391608
best_error: 4.912274254875047
best_error: 4.912274140007428
best_error: 4.912249857376246
best_error: 4.9122497425088465
best_error: 4.912152267991669
best_error: 4.912152153125265
best_error: 4.911761920225325
best_error: 4.911761805362911
best_error: 4.9102006855023035
best_error: 4.910200570655748
best_error: 4.9039583981172346
best_error: 4.903958283505716
