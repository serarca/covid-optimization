ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 24.376186898512895
best_error: 24.376186898503615
best_error: 24.37618688692499
best_error: 23.48963713013201
best_error: 23.489637130099567
best_error: 23.489637130074875
best_error: 23.46057503929487
best_error: 23.46057503926224
best_error: 23.460575039237934
best_error: 23.427538150518046
best_error: 23.427538150485386
best_error: 23.427538150460542
best_error: 23.427494475805076
best_error: 23.42749447577223
best_error: 23.427494475747885
best_error: 23.427320890797674
best_error: 23.427320890764086
best_error: 23.42732089074166
best_error: 23.42664080212585
best_error: 23.426640802089075
best_error: 23.426640802073802
best_error: 23.4240072398188
best_error: 23.424007239765167
best_error: 23.424007239765114
best_error: 23.424007239764904
best_error: 23.424007239764073
best_error: 23.42400723976075
best_error: 23.424007239747453
best_error: 23.42400723969427
best_error: 23.424007239535165
best_error: 23.424007239481526
best_error: 23.42400723868421
best_error: 23.424007238630576
best_error: 23.424007235280392
best_error: 23.42400723522676
best_error: 23.424007221665086
best_error: 23.424007221611447
best_error: 23.42400716720328
best_error: 23.42400716714964
best_error: 23.424006949347003
best_error: 23.42400694929336
best_error: 23.42400607777705
best_error: 23.424006077723398
best_error: 23.42400258917793
best_error: 23.424002589124218
best_error: 23.4239885975678
best_error: 23.42398859751386
best_error: 23.423932028926004
best_error: 23.423932028871135
best_error: 23.42369566366427
best_error: 23.423695663605415
best_error: 23.423443116054667
best_error: 23.423443115991397
best_error: 23.42344311599133
best_error: 23.42344311599104
best_error: 23.423443115989883
best_error: 23.423443115985254
best_error: 23.42344311596674
best_error: 23.423443115955966
best_error: 23.4234431158927
best_error: 23.42344311565979
best_error: 23.423443115596527
best_error: 23.42344311447509
best_error: 23.423443114411825
best_error: 23.42344310973629
best_error: 23.423443109673027
best_error: 23.423443090781028
best_error: 23.42344309071776
best_error: 23.42344301495896
best_error: 23.423443014895696
best_error: 23.423442711654488
best_error: 23.423442711591214
best_error: 23.423441498177233
best_error: 23.423441498113938
best_error: 23.423436640114694
best_error: 23.423436640051314
best_error: 23.42341714116509
best_error: 23.423417141101357
best_error: 23.423338062382584
best_error: 23.423338062317434
best_error: 23.42300334418782
best_error: 23.42300334411647
best_error: 23.42263782540335
best_error: 23.422637825324887
best_error: 23.422637825324777
best_error: 23.422637825324333
best_error: 23.422637825322553
best_error: 23.42263782531543
best_error: 23.42263782528694
best_error: 23.422637825251446
best_error: 23.422637825172988
best_error: 23.422637824795636
best_error: 23.422637824717178
best_error: 23.422637822972387
best_error: 23.422637822893925
best_error: 23.422637815679387
best_error: 23.42263781560093
best_error: 23.422637786507252
best_error: 23.422637786428794
best_error: 23.422637669816556
best_error: 23.422637669738094
best_error: 23.422637203019093
best_error: 23.422637202940628
best_error: 23.422635335274524
best_error: 23.422635335196016
best_error: 23.422627855409143
best_error: 23.422627855330486
best_error: 23.42259779303002
best_error: 23.422597792950764
best_error: 23.42259374853804
best_error: 23.42259374853395
best_error: 23.422593748533945
best_error: 23.42259374853394
best_error: 23.422593748533927
best_error: 23.422593748533867
best_error: 23.422593748533636
best_error: 23.422593748532698
best_error: 23.422593748528957
best_error: 23.42259374851807
best_error: 23.422593748513975
best_error: 23.422593748458162
best_error: 23.42259374845407
best_error: 23.42259374821853
best_error: 23.422593748214435
best_error: 23.422593747260002
best_error: 23.42259374725591
best_error: 23.422593743426006
best_error: 23.422593743421913
best_error: 23.422593728091798
best_error: 23.422593728087705
best_error: 23.422593666783378
best_error: 23.42259366677929
best_error: 23.422593422002677
best_error: 23.4225934219986
best_error: 23.422592450021874
best_error: 23.422592450017838
best_error: 23.42259149399043
best_error: 23.422591493986445
best_error: 23.422563469446324
best_error: 23.42256346944631
