ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 23.34368299016645
best_error: 23.343682809111524
best_error: 4.629405314116839
best_error: 4.629405312839778
best_error: 4.6284045156651095
best_error: 4.628404515649209
best_error: 4.628404515521101
best_error: 4.624343803570337
best_error: 4.624343803553691
best_error: 4.624343803424589
best_error: 4.607184058438844
best_error: 4.6071840584186265
best_error: 4.607184058285512
best_error: 4.514478546833496
best_error: 4.5144785467751465
best_error: 4.514478546631977
best_error: 4.40402845837375
best_error: 4.40402845817796
best_error: 4.404028458095067
best_error: 4.179863117511669
best_error: 4.179863116166583
best_error: 4.1203373048979595
best_error: 4.1203373029228505
best_error: 3.169313094021603
best_error: 3.169312999181579
best_error: 3.0280385960618914
best_error: 3.0280385696980505
best_error: 2.8867250424320297
best_error: 2.8867250138206333
best_error: 2.8709394957809384
best_error: 2.8709394453448356
best_error: 2.84949339557466
best_error: 2.8494933752002516
best_error: 2.8294066086665897
best_error: 2.829406586504263
best_error: 2.7017882116066723
best_error: 2.7017881757961275
best_error: 2.631814172944543
best_error: 2.631814138951151
best_error: 2.631814126106134
best_error: 2.528672928567036
best_error: 2.5286728964109666
best_error: 2.5286728612464584
best_error: 2.3393588760304356
best_error: 2.339358847588095
best_error: 2.3393587722894
best_error: 2.2289678258741135
best_error: 2.2289677981413347
best_error: 2.228967705400487
best_error: 2.200474402369693
best_error: 2.2004743187435762
best_error: 2.196680745953097
best_error: 2.1966806694086425
best_error: 2.086072438414544
best_error: 2.086072393879312
best_error: 2.052065468579991
best_error: 2.052065433501629
best_error: 2.0331565087965244
best_error: 2.0331564797448474
best_error: 1.9750008689358354
best_error: 1.9750008562711208
best_error: 1.9648908586530762
best_error: 1.9648907874514174
best_error: 1.9604340603101589
best_error: 1.9604340344674966
best_error: 1.959465822870746
best_error: 1.9594657687115147
best_error: 1.9450676400863336
best_error: 1.9450676228982655
best_error: 1.9215889389687728
best_error: 1.9215888972433992
best_error: 1.8848357407957304
best_error: 1.8848355332916558
best_error: 1.8408503695814118
best_error: 1.840850154147387
best_error: 1.6722150375765699
best_error: 1.6722148066858802
best_error: 1.5843439585913124
best_error: 1.5843437200003299
best_error: 1.432763545203192
best_error: 1.4327634268040539
best_error: 1.4169019523094533
best_error: 1.4169018346677047
best_error: 1.400331593860854
best_error: 1.4003315850080889
best_error: 1.3568036849432021
best_error: 1.3568035914618415
best_error: 1.324438094508023
best_error: 1.3244380715191513
best_error: 1.3226508934053733
best_error: 1.3226508735725302
best_error: 1.3168139315525917
best_error: 1.316813931388514
best_error: 1.3168139312424336
best_error: 1.3168139303873037
best_error: 1.3133355959059134
best_error: 1.3133355856007045
best_error: 1.3120326816336811
best_error: 1.3120326738053187
best_error: 1.3112461964344875
best_error: 1.3112461908775561
best_error: 1.3085367504087946
best_error: 1.3085367473051368
best_error: 1.3006031120021426
best_error: 1.3006031119274175
best_error: 1.3006031006013075
best_error: 1.285118282156981
best_error: 1.2851182788494768
best_error: 1.2851182676489454
best_error: 1.2766191062825565
best_error: 1.2766190810515046
best_error: 1.269522852351696
best_error: 1.2695228383721664
best_error: 1.2604480072400874
best_error: 1.2604479839338771
best_error: 1.2564017476077558
best_error: 1.2564016623301384
best_error: 1.2542268320839896
best_error: 1.2542268251310427
best_error: 1.2526712310939008
best_error: 1.2526712241082847
best_error: 1.2523882420978452
best_error: 1.252388241661819
best_error: 1.2523882413655496
best_error: 1.2523882406318634
best_error: 1.2518101001269248
best_error: 1.251810092699175
best_error: 1.2516047919210875
best_error: 1.2516047640547776
best_error: 1.2509795154230992
best_error: 1.2509795152789065
best_error: 1.25097951478256
best_error: 1.2509795141059774
best_error: 1.2506293804140274
best_error: 1.25062936376935
best_error: 1.2500958729903355
best_error: 1.2500958695899538
best_error: 1.2491030469303925
best_error: 1.2491030467954478
best_error: 1.2491030462786845
best_error: 1.249103045935265
best_error: 1.2491030459194936
best_error: 1.243281220772831
best_error: 1.2432812176786319
best_error: 1.2336453364505642
best_error: 1.233645300358037
best_error: 1.2298297665701443
best_error: 1.2298297506063505
best_error: 1.2267542955023238
best_error: 1.2267542949591685
best_error: 1.2267542930301851
best_error: 1.2221493442247904
best_error: 1.222149278192386
best_error: 1.2149998160070643
best_error: 1.2149998054259836
best_error: 1.2140574446046726
best_error: 1.2140573902603036
best_error: 1.2100619130527326
best_error: 1.2100618819928166
best_error: 1.207645406675349
best_error: 1.207645394612703
best_error: 1.203421359646081
best_error: 1.2034213591771423
best_error: 1.203421344552681
best_error: 1.203295377432822
best_error: 1.203295372364432
best_error: 1.2032953720749409
best_error: 1.2032953717477133
best_error: 1.2032953710958683
best_error: 1.2032953706751237
best_error: 1.2032953691970922
best_error: 1.2032953660455719
best_error: 1.2032831257731735
best_error: 1.2032831227627196
best_error: 1.203283118880266
best_error: 1.2031980624411984
best_error: 1.203198057712964
best_error: 1.2028189086449226
best_error: 1.2028189026309182
best_error: 1.2027888312328003
best_error: 1.2027888274310938
best_error: 1.202748558429191
best_error: 1.202748554632096
best_error: 1.2026065296543762
best_error: 1.2026065253348925
best_error: 1.2025865314014619
best_error: 1.2025865303276213
best_error: 1.2025865259078266
best_error: 1.2025668947463224
best_error: 1.2025668909559044
best_error: 1.2025450611749706
best_error: 1.2025450604066983
best_error: 1.2025450555977866
best_error: 1.2025265318764764
best_error: 1.2025265284616313
best_error: 1.2025041659982791
best_error: 1.2025041655409041
best_error: 1.2025041604375506
best_error: 1.2023424010168882
best_error: 1.2023423926354717
best_error: 1.2018640749801037
best_error: 1.2018640742766733
best_error: 1.201864073531588
best_error: 1.201488435168589
best_error: 1.2014884351539166
best_error: 1.2014884344344858
best_error: 1.2014884337332048
best_error: 1.1992036610404193
best_error: 1.1992036493094411
best_error: 1.198332514516837
best_error: 1.1983324956439858
best_error: 1.196080911796012
best_error: 1.1960808838269974
best_error: 1.1956621247877512
best_error: 1.1956621115926418
best_error: 1.1955208776140875
best_error: 1.1955208774018018
best_error: 1.1955208768296548
best_error: 1.195491738611931
best_error: 1.1954917385443726
best_error: 1.1954917378270182
best_error: 1.1954917377795056
best_error: 1.1952966568722727
best_error: 1.1952966567652874
best_error: 1.1952966560849885
best_error: 1.19529665588066
best_error: 1.1940189987434495
best_error: 1.1940189851148408
best_error: 1.1906591020677404
best_error: 1.190659087229414
best_error: 1.1898221489425165
best_error: 1.1898221357592131
best_error: 1.1877150154594627
best_error: 1.1877149921639738
best_error: 1.18558899102326
best_error: 1.185588966872459
best_error: 1.1807919523384414
best_error: 1.1807919350167098
best_error: 1.173405916509418
best_error: 1.1734058658623092
best_error: 1.1698859997923428
best_error: 1.1698859959575938
best_error: 1.166153080182215
best_error: 1.1661530609145603
best_error: 1.157759414270033
best_error: 1.157759388927111
best_error: 1.1508583040291276
best_error: 1.1508583032923887
best_error: 1.1508583032226076
best_error: 1.150848546672414
best_error: 1.1508485465659692
best_error: 1.1508485458615285
best_error: 1.1508484452697474
best_error: 1.1508484451540246
best_error: 1.1508484444553888
best_error: 1.1508484411403126
best_error: 1.1508484410243534
best_error: 1.1508484403259365
best_error: 1.1434799837484022
best_error: 1.1434799766126373
best_error: 1.1420041846629756
best_error: 1.1420041844248012
best_error: 1.1420041837969521
best_error: 1.1406139224231213
best_error: 1.1406138862002957
best_error: 1.140293848697049
best_error: 1.1402938269362806
best_error: 1.1402729947829287
best_error: 1.1402729683298483
best_error: 1.1400630368646332
best_error: 1.1400630336124105
best_error: 1.1400630319138032
best_error: 1.140001931166716
best_error: 1.1400019206047514
best_error: 1.1352111992317697
best_error: 1.135211198196425
best_error: 1.1343018289742728
best_error: 1.1343018275191965
best_error: 1.1342147387430959
best_error: 1.1342147374347271
best_error: 1.1337791547373153
best_error: 1.1337791528165753
best_error: 1.1337634489545418
best_error: 1.1337634484284258
best_error: 1.133763446831098
best_error: 1.1336089064667276
best_error: 1.133608902593911
best_error: 1.1335562211884367
best_error: 1.1335562195647846
best_error: 1.1334417016130138
best_error: 1.1334417001554582
best_error: 1.1332976535352441
best_error: 1.1332976503093632
best_error: 1.1327191200997677
best_error: 1.1327191142252147
