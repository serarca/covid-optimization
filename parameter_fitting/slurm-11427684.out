ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.196611166562242
best_error: 25.196610642203186
best_error: 5.066571315464902
best_error: 5.066571315281375
best_error: 5.066562869668865
best_error: 5.066562869662192
best_error: 5.066562869614681
best_error: 5.066529060949868
best_error: 5.066529060943183
best_error: 5.06652906089565
best_error: 5.0663934160190225
best_error: 5.066393416012286
best_error: 5.06639341596467
best_error: 5.065844177953002
best_error: 5.065844177946059
best_error: 5.065844177898105
best_error: 5.063534001669425
best_error: 5.063534001661576
best_error: 5.063534001612208
best_error: 5.05188967780104
best_error: 5.051889677787168
best_error: 5.051889677731128
best_error: 5.025739074154871
best_error: 5.02573907410492
best_error: 5.025739074048092
best_error: 4.743132156293581
best_error: 4.743132135381711
best_error: 2.9762103458416997
best_error: 2.9762100571632533
best_error: 2.9762081514488687
best_error: 2.976207875588952
best_error: 2.6238686127725708
best_error: 2.623868587941907
best_error: 2.6238662498170395
best_error: 2.619448560759841
best_error: 2.619448551209629
best_error: 2.6194479400049717
best_error: 2.619146641296162
best_error: 2.619146639079492
best_error: 2.6191458831845016
best_error: 2.619054060688687
best_error: 2.6190540606868637
best_error: 2.619053985996792
best_error: 2.619026296771431
best_error: 2.6190262939589384
best_error: 2.6190262253939482
best_error: 2.619017410656448
best_error: 2.619017407841345
best_error: 2.6190173420579326
best_error: 2.618987082058594
best_error: 2.61898707988105
best_error: 2.6189870216321465
best_error: 2.618851974702776
best_error: 2.618851973965529
best_error: 2.618851933682789
best_error: 2.618615175511605
best_error: 2.618615174655412
best_error: 2.618615146345346
best_error: 2.6180184625528278
best_error: 2.618018459969237
best_error: 2.6180184429392725
best_error: 2.616651870946492
best_error: 2.6166518672193684
best_error: 2.6166518579143303
best_error: 2.616651857101881
best_error: 2.6128325160387145
best_error: 2.612832510018285
best_error: 2.612832507580583
best_error: 2.6128325017900567
best_error: 2.599172785459183
best_error: 2.5991727808016325
best_error: 2.5991727799937285
best_error: 2.599172770768565
best_error: 2.552212064761961
best_error: 2.552211925772568
best_error: 2.5080263668076013
best_error: 2.508026364717393
best_error: 2.5080263531352807
best_error: 2.4640374122681017
best_error: 2.4640373280755674
best_error: 2.4640369187857925
best_error: 2.464035467275761
best_error: 2.458836785641927
best_error: 2.458836720663229
best_error: 2.4054911266745735
best_error: 2.4054910128749274
best_error: 2.4054901546482967
best_error: 2.405488542682693
best_error: 2.3821367214245464
best_error: 2.3821363979931687
best_error: 2.3821326312677193
best_error: 2.3473002665875815
best_error: 2.3473000639400095
best_error: 2.3472986870570622
best_error: 2.3472939717938193
best_error: 2.319024109142209
best_error: 2.319023906855144
best_error: 2.2408087161221206
best_error: 2.2408085004078355
best_error: 2.231687016841603
best_error: 2.2316867938126457
best_error: 2.221061431984117
best_error: 2.221061216095888
best_error: 2.1848018802069418
best_error: 2.1848016937232133
best_error: 2.184799720901127
best_error: 2.1782219766335236
best_error: 2.1782219683369295
best_error: 2.178221801548959
best_error: 2.1764547622355876
best_error: 2.176454750054931
best_error: 2.17645459364771
best_error: 2.1758042139352742
best_error: 2.1758042002946283
best_error: 2.175804052046258
best_error: 2.173737883209806
best_error: 2.1737378818643
best_error: 2.1737377182697384
best_error: 2.1730365233293525
best_error: 2.1730363506384895
best_error: 2.172443264456011
best_error: 2.172443087508608
best_error: 2.1699584637860054
best_error: 2.169958282047763
best_error: 2.162715583917992
best_error: 2.1627153922909614
best_error: 2.1484054403617034
best_error: 2.1484052298325667
best_error: 2.1483959272907693
best_error: 2.122400004508886
best_error: 2.122399767418685
best_error: 2.119051869345066
best_error: 2.119051628301454
best_error: 2.1162914258082406
best_error: 2.1162911812151877
best_error: 2.113737707884904
best_error: 2.113737460664797
best_error: 2.1126695071693833
best_error: 2.1126692913083223
best_error: 2.0809010766612577
best_error: 2.0809010647088213
best_error: 2.0809010181341043
best_error: 1.959733528620398
best_error: 1.9597334853898087
best_error: 1.8995176160655018
best_error: 1.8995175223483483
best_error: 1.892698382705958
best_error: 1.8926982682301239
best_error: 1.8547363021254852
best_error: 1.854736288414093
best_error: 1.8547362467186508
best_error: 1.8333042878805244
best_error: 1.8333042201690122
best_error: 1.8245100852658707
best_error: 1.8245100485541133
best_error: 1.8240629407248843
best_error: 1.8240629280417022
best_error: 1.823733754220071
best_error: 1.8237337494865835
best_error: 1.823220985999918
best_error: 1.8232209847153285
best_error: 1.8232209842600489
best_error: 1.821877615142592
best_error: 1.8218775761592099
best_error: 1.818249755948355
best_error: 1.8182496765758764
best_error: 1.8182495487710628
best_error: 1.8072800668652662
best_error: 1.807279900758352
best_error: 1.807279770492712
best_error: 1.8058416584298504
best_error: 1.8058415534948509
best_error: 1.802925375663391
best_error: 1.8029252464683834
best_error: 1.8006260914158676
best_error: 1.8006260594479209
best_error: 1.7940143180130617
best_error: 1.7940142336606204
best_error: 1.793782337704367
best_error: 1.7937822598931858
best_error: 1.7923852914910732
best_error: 1.792385290155981
best_error: 1.7923852898867179
best_error: 1.7902918340617162
best_error: 1.7902918329457054
best_error: 1.790291832221665
best_error: 1.784728591833688
best_error: 1.784728568204377
best_error: 1.7846822454425837
best_error: 1.7846822202145955
best_error: 1.7806911764975766
best_error: 1.7806911699966832
best_error: 1.7806911623025792
best_error: 1.7789093683058637
best_error: 1.7789093522201835
best_error: 1.7785196442293225
best_error: 1.7785196427933996
best_error: 1.7780610518275786
best_error: 1.7780610489461413
best_error: 1.7778030513888154
best_error: 1.7778030484679257
best_error: 1.7768018410691935
best_error: 1.7768018365291303
best_error: 1.7767442761496903
best_error: 1.7767442757641252
best_error: 1.7767442723365745
best_error: 1.776744272208104
best_error: 1.7756466869000922
best_error: 1.7756466727674185
best_error: 1.7756454924083938
best_error: 1.775645478385444
best_error: 1.775607741634739
best_error: 1.7756077269761263
best_error: 1.7744233652516843
best_error: 1.7744233650126189
best_error: 1.774423341770349
best_error: 1.7733947619351185
best_error: 1.7733947606946185
best_error: 1.7733947454832415
best_error: 1.7723727190078657
best_error: 1.772372718618309
best_error: 1.7723727114691052
best_error: 1.771811776023688
best_error: 1.7718117746233193
best_error: 1.7718117736636103
best_error: 1.7716676101148152
best_error: 1.771667609630984
best_error: 1.7716676082465386
best_error: 1.7716526494904943
best_error: 1.7716526490711484
best_error: 1.7716526475189303
best_error: 1.771617768581047
best_error: 1.7716177631780992
best_error: 1.7716144858584766
best_error: 1.771614481136848
best_error: 1.771612357958547
best_error: 1.7716123535524657
best_error: 1.7716089791138268
best_error: 1.7716089718464223
best_error: 1.7716068496730066
best_error: 1.7716068418284823
best_error: 1.7716040388462013
best_error: 1.7716040308254648
best_error: 1.7715999034402188
best_error: 1.771599894106391
best_error: 1.7715923261062236
best_error: 1.771592315172746
best_error: 1.771572910322125
best_error: 1.7715728984923604
best_error: 1.7715343864212263
best_error: 1.7715343693767613
best_error: 1.7715002893859508
best_error: 1.7715002710314374
best_error: 1.7711738170497795
best_error: 1.7711737877410103
best_error: 1.7708184462660501
best_error: 1.7708184156926299
best_error: 1.7700311642384094
best_error: 1.770031152670952
best_error: 1.7690270443202698
best_error: 1.7690270427469195
best_error: 1.769027042518484
best_error: 1.7690270417704559
best_error: 1.7682208188912572
best_error: 1.7682207959091818
best_error: 1.7680102050542041
best_error: 1.7680101867698457
best_error: 1.7676298591690098
best_error: 1.767629846700577
best_error: 1.7671683105395868
best_error: 1.7671683051271967
best_error: 1.766942597998388
best_error: 1.7669425942839223
best_error: 1.7666950022471775
best_error: 1.7666950002366675
best_error: 1.766695000162104
best_error: 1.7665933878230953
best_error: 1.7665933848334603
best_error: 1.7665537941008176
best_error: 1.7665537915128073
best_error: 1.7662700298944736
best_error: 1.7662700289182443
best_error: 1.76626996763849
best_error: 1.7661543569482447
best_error: 1.7661543528776464
best_error: 1.766154342656216
best_error: 1.76529179095729
best_error: 1.7652917274636866
best_error: 1.7651985572099569
best_error: 1.7651984672915726
best_error: 1.7650489841943124
best_error: 1.7650489841482255
best_error: 1.7650489462245778
best_error: 1.7649347024802078
best_error: 1.7649346985463905
best_error: 1.7649346732413298
best_error: 1.7641258596375533
best_error: 1.764125851734825
best_error: 1.76412584543585
best_error: 1.763450609800978
best_error: 1.7634505502252835
best_error: 1.7599037629328966
best_error: 1.7599037120870091
best_error: 1.759123769686183
best_error: 1.7591236980759029
best_error: 1.7570531082287493
best_error: 1.7570530520202996
