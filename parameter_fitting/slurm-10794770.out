ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.52457454054985
best_error: 10.524574534781872
best_error: 10.32579403887515
best_error: 10.325794019155422
best_error: 6.782567769198808
best_error: 6.782567351991797
best_error: 5.4906592354836645
best_error: 5.490658696382897
best_error: 4.422522009865428
best_error: 4.4225218319351685
best_error: 4.380823427300416
best_error: 4.380823374720042
best_error: 4.3580950563518845
best_error: 4.358095056277215
best_error: 4.358095039885442
best_error: 4.356265341894672
best_error: 4.3562653418199435
best_error: 4.356265325039853
best_error: 4.355481721897639
best_error: 4.355481669570568
best_error: 4.353777910380387
best_error: 4.353777910305446
best_error: 4.353777893417883
best_error: 4.347578391940283
best_error: 4.347578391864553
best_error: 4.3475783750526436
best_error: 4.322549772590994
best_error: 4.322549772511991
best_error: 4.322549755441263
best_error: 4.21898900876762
best_error: 4.218989008674261
best_error: 4.21898899163247
best_error: 3.955468018136795
best_error: 3.955467938522438
best_error: 3.951431438558975
best_error: 3.9514311991294435
best_error: 3.859467448867631
best_error: 3.859467245446973
best_error: 3.777245962256125
best_error: 3.7772457996995676
best_error: 3.711432832299109
best_error: 3.711432656690755
best_error: 3.7069426885484353
best_error: 3.7069426884240544
best_error: 3.7069426835551185
best_error: 3.7069426814074355
best_error: 3.7052375632908423
best_error: 3.705237544347719
best_error: 3.6912640490210022
best_error: 3.6912638432407796
best_error: 3.686156859656728
best_error: 3.6861568521772554
best_error: 3.6861568449460167
best_error: 3.6691278422029017
best_error: 3.669127660868356
best_error: 3.639779701846165
best_error: 3.6397796994414313
best_error: 3.639779699040754
best_error: 3.639779694069051
best_error: 3.4312235127405897
best_error: 3.43122351135655
best_error: 3.4312235110425733
best_error: 3.431223504129494
best_error: 3.273126408628516
best_error: 3.2731263198752543
best_error: 3.2427919475059754
best_error: 3.2427918677776164
best_error: 3.2326064686561864
best_error: 3.232606385606237
best_error: 3.185872804891676
best_error: 3.185872737935393
best_error: 3.1204641789208813
best_error: 3.1204640117042843
best_error: 3.1101255571479958
best_error: 3.110125358035888
best_error: 3.0440264888246835
best_error: 3.0440263085417363
best_error: 3.0340569243438678
best_error: 3.0340569047883457
best_error: 3.018629522739175
best_error: 3.0186295076489515
best_error: 3.0180652956938134
best_error: 3.018065062821386
best_error: 2.975868206626747
best_error: 2.97586801163536
best_error: 2.9379713809673835
best_error: 2.9379713626184456
best_error: 2.926875222559589
best_error: 2.9268752085742276
best_error: 2.9249991023223503
best_error: 2.9249990271673045
best_error: 2.9193620124943793
best_error: 2.919362004035431
best_error: 2.9182992319731076
best_error: 2.918299138074631
best_error: 2.917879904924538
best_error: 2.9178799034917944
best_error: 2.9177464932850694
best_error: 2.91774649044702
best_error: 2.917682199169622
best_error: 2.917682196076753
best_error: 2.9176644373958736
best_error: 2.9176644342397164
best_error: 2.917651936624827
best_error: 2.917651933406143
best_error: 2.917639842447629
best_error: 2.9176398392301626
best_error: 2.9176317350547256
best_error: 2.917631731838069
best_error: 2.9176237041189332
best_error: 2.917623700903075
best_error: 2.9176197559633135
best_error: 2.91761975271361
best_error: 2.917614803494616
best_error: 2.9176148002454054
best_error: 2.917613218612654
best_error: 2.9176132153635987
best_error: 2.917612386978193
best_error: 2.9176123837292134
best_error: 2.917611705108779
best_error: 2.9176117018598764
best_error: 2.9176113089551343
best_error: 2.917611305706265
best_error: 2.917610857981519
best_error: 2.917610854732696
best_error: 2.917610676419791
best_error: 2.91761067317099
best_error: 2.9176105680385476
best_error: 2.9176105647897552
best_error: 2.917610447231935
best_error: 2.917610443983147
best_error: 2.9176103968698195
best_error: 2.9176103936210422
best_error: 2.9176103663231197
best_error: 2.9176103630743513
best_error: 2.9176103436767735
best_error: 2.9176103404280007
best_error: 2.9176103280213264
best_error: 2.917610324772557
best_error: 2.9176103133729563
best_error: 2.917610310124178
best_error: 2.9176102881346466
best_error: 2.9176102874595786
