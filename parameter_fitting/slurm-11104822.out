ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 96
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 90.55900765818693
best_error: 90.55900725879354
best_error: 27.246492874156125
best_error: 27.24649287414839
best_error: 27.246492874036456
best_error: 27.246492872816926
best_error: 27.2464200902578
best_error: 27.246420090250062
best_error: 27.246128567291215
best_error: 27.24612856728347
best_error: 27.244956240158988
best_error: 27.244956240151208
best_error: 27.240164722706893
best_error: 27.24016472269897
best_error: 27.21919054908424
best_error: 27.219190549075712
best_error: 27.088838720217463
best_error: 27.088838720205082
best_error: 26.45096313966498
best_error: 26.450963139633863
best_error: 26.45096218290627
best_error: 26.450962182875156
best_error: 26.450958355359365
best_error: 26.45095835535936
best_error: 26.45095835532825
best_error: 26.45094303697302
best_error: 26.4509430369419
best_error: 26.450881631868285
best_error: 26.450881631837166
best_error: 26.45063388188617
best_error: 26.450633881855055
best_error: 26.449607151554915
best_error: 26.44960715152382
best_error: 26.444796205804987
best_error: 26.44479620580474
best_error: 26.44479620577398
best_error: 26.391493072977475
best_error: 26.391493072975603
best_error: 26.391493072947604
best_error: 26.391493037915136
best_error: 26.391493037913268
best_error: 26.391493037885265
best_error: 26.391492897665636
best_error: 26.391492897663756
best_error: 26.391492897635764
best_error: 26.391492336666122
best_error: 26.391492336664243
best_error: 26.39149233663625
best_error: 26.39149009264388
best_error: 26.391490092642012
best_error: 26.391490092614006
best_error: 26.391481116167597
best_error: 26.39148111616571
best_error: 26.391481116137726
best_error: 26.391445204040142
best_error: 26.391445204038135
best_error: 26.391445204010264
best_error: 26.39130145437344
best_error: 26.391301454371
best_error: 26.39130145434355
best_error: 26.390724730657762
best_error: 26.390724730653464
best_error: 26.390724730627838
best_error: 26.388432668396092
best_error: 26.38843266838124
best_error: 26.388432662054957
best_error: 26.388432662040096
best_error: 26.38843263668646
best_error: 26.388432636671602
best_error: 26.388432535149356
best_error: 26.388432535134484
best_error: 26.388432127990118
best_error: 26.38843212797519
best_error: 26.38843048310949
best_error: 26.388430483094336
best_error: 26.388423639145632
best_error: 26.38842363912949
best_error: 26.388391728417865
best_error: 26.388391728397398
best_error: 26.388168241587554
best_error: 26.38816824154162
best_error: 26.382236697697124
best_error: 26.382236697133646
best_error: 26.3630033128482
best_error: 26.363003310334786
best_error: 26.127769043935388
best_error: 26.12776902220435
best_error: 26.12776900307649
best_error: 26.061100261068177
best_error: 26.06110022730282
best_error: 26.061100207572622
best_error: 25.99498838489729
best_error: 25.994988339031423
best_error: 25.99498831849965
best_error: 25.919471939644815
best_error: 25.9194719103835
best_error: 25.85650853715041
best_error: 25.856508465532073
best_error: 25.856508442831323
best_error: 25.519205660930115
best_error: 25.51920563700998
best_error: 25.51920560485198
best_error: 25.47975265386598
best_error: 25.479752641313045
best_error: 25.47008487868671
best_error: 25.47008487803907
best_error: 25.468421576577708
best_error: 25.468421574989403
best_error: 25.468234429983852
best_error: 25.468234426968685
best_error: 25.450572163664745
best_error: 25.45057216360747
best_error: 25.44285452441178
best_error: 25.442854524010535
best_error: 25.442854518130876
best_error: 25.44245667985954
best_error: 25.44245667956064
best_error: 25.442456674783998
best_error: 25.44244328913495
best_error: 25.442443289134832
best_error: 25.442440884821167
best_error: 25.442440884821053
best_error: 25.442431273641
best_error: 25.442431273640885
best_error: 25.442395185337613
best_error: 25.442395185253613
best_error: 25.44237408357531
best_error: 25.442374083466248
best_error: 25.442360371137685
best_error: 25.44236036604256
best_error: 25.44225112044529
best_error: 25.4422511153266
best_error: 25.441967122732944
best_error: 25.44196712260679
best_error: 25.44135981205136
best_error: 25.441359811412283
best_error: 25.437769429834436
best_error: 25.43776942867791
best_error: 25.422145540759047
best_error: 25.42214553844852
best_error: 25.21000797767119
best_error: 25.21000797434297
best_error: 25.056426396267828
best_error: 25.05642637617228
best_error: 25.056426334132546
best_error: 25.019967790471107
best_error: 25.019967787012906
best_error: 25.019962724290274
best_error: 25.01996272373003
best_error: 25.019962723181933
best_error: 25.01995338598071
best_error: 25.019953385980365
best_error: 25.019953384871197
best_error: 25.019950524225703
best_error: 25.019950524225354
best_error: 25.01995052311609
best_error: 25.019946147817056
best_error: 25.019946147745046
best_error: 25.019946144348836
best_error: 25.019910538136013
best_error: 25.019910538063055
best_error: 25.0199105346603
best_error: 25.019768208318474
best_error: 25.019768208241615
best_error: 25.01976820481286
best_error: 25.01920091353059
best_error: 25.01920091343807
best_error: 25.01920090990773
best_error: 25.01729075754087
best_error: 25.01729075661837
best_error: 25.017290746457356
best_error: 25.015303005513385
best_error: 25.015303004287688
best_error: 25.015302992581354
best_error: 25.014746475904833
best_error: 25.014746474623465
best_error: 25.014746462910306
best_error: 25.014238740723375
best_error: 25.014238738583806
best_error: 25.01423872088656
best_error: 25.00973968312002
best_error: 25.00973967866976
best_error: 25.009739645266762
best_error: 24.986746211568832
best_error: 24.98674620520452
best_error: 24.98674619598887
best_error: 24.945130041789042
best_error: 24.945130041787785
best_error: 24.94513003668814
best_error: 24.940668568517708
best_error: 24.94066854782953
best_error: 24.93363378241317
best_error: 24.933633780259715
best_error: 24.933633778785552
best_error: 24.914517340436333
best_error: 24.914517337358625
best_error: 24.901631514885203
best_error: 24.901631512241085
best_error: 24.901631511927604
best_error: 24.89557353309501
best_error: 24.89557352175595
best_error: 24.895438567425558
best_error: 24.895438563444397
best_error: 24.871138979660397
best_error: 24.871138953930767
best_error: 24.87001907338735
best_error: 24.870019072946402
best_error: 24.870019072450564
best_error: 24.864724220103245
best_error: 24.864724208822192
best_error: 24.864499576334502
best_error: 24.864499575305448
best_error: 24.864328097899836
best_error: 24.864328095300788
best_error: 24.86431602639932
best_error: 24.864316026327796
best_error: 24.86431016058197
best_error: 24.864310160514425
best_error: 24.864308807574496
best_error: 24.864308807507722
best_error: 24.86430752059524
best_error: 24.864307520529177
best_error: 24.864306818517804
best_error: 24.864306818452107
best_error: 24.86430618750434
best_error: 24.86430618743899
best_error: 24.864305858423183
best_error: 24.864305858357987
best_error: 24.864305569016956
best_error: 24.864305568951906
best_error: 24.864305423697466
best_error: 24.86430542363249
best_error: 24.86430529629469
best_error: 24.8643052962298
best_error: 24.864305267248014
best_error: 24.864305267183116
best_error: 24.86430524278483
best_error: 24.86430524271994
best_error: 24.864305228236386
best_error: 24.864305228171514
best_error: 24.864305216333
best_error: 24.86430521626813
best_error: 24.86430520817749
best_error: 24.864305208112636
best_error: 24.864305201987225
best_error: 24.864305201922356
best_error: 24.864305195880885
best_error: 24.864305195816023
best_error: 24.864305192400856
best_error: 24.86430519233599
best_error: 24.86430518718825
best_error: 24.864305187123417
best_error: 24.864305185925645
best_error: 24.864305185860797
best_error: 24.864305184990407
best_error: 24.86430518492556
best_error: 24.864305184262093
best_error: 24.864305184197235
best_error: 24.864305183623394
best_error: 24.864305183558557
best_error: 24.864305183218747
best_error: 24.86430518315389
best_error: 24.864305182654544
best_error: 24.864305182589682
best_error: 24.864305182052913
