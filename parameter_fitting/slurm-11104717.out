ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.69506483087957
best_error: 96.69506474988464
best_error: 96.69506469815279
best_error: 17.645894313817916
best_error: 17.645893999175055
best_error: 17.645891805470356
best_error: 14.42175285239638
best_error: 14.421752850271275
best_error: 14.42175279402813
best_error: 14.307462509073627
best_error: 14.307462506660034
best_error: 14.307462441978435
best_error: 13.657834946672086
best_error: 13.657834943113738
best_error: 13.657834823718492
best_error: 11.767131864649793
best_error: 11.767131863055607
best_error: 11.767131536613745
best_error: 9.850811093608986
best_error: 9.850811089942344
best_error: 9.850811087168028
best_error: 9.850811062814481
best_error: 9.75954081941741
best_error: 9.759540812724284
best_error: 9.75954079833482
best_error: 9.701345238787049
best_error: 9.70134523878621
best_error: 9.70134523189672
best_error: 9.701345213842526
best_error: 9.666252724655987
best_error: 9.66625272376179
best_error: 9.666252720414384
best_error: 9.666252717776427
best_error: 9.666252693890769
best_error: 9.254472523734833
best_error: 9.254472523734519
best_error: 9.254472515809727
best_error: 9.254472496757138
best_error: 8.798066289741804
best_error: 8.798066277350518
best_error: 8.79806626625857
best_error: 8.674973949888681
best_error: 8.674973949887839
best_error: 8.67497393939225
best_error: 8.67497392508102
best_error: 8.490544941358003
best_error: 8.490544903239481
best_error: 8.185707070064453
best_error: 8.18570707006174
best_error: 8.185707055354191
best_error: 8.185707048558182
best_error: 8.046695673971282
best_error: 8.046695671829438
best_error: 8.046695655625964
best_error: 8.046695652406902
best_error: 7.908781499276589
best_error: 7.9087814639960285
best_error: 7.649644619858405
best_error: 7.649644514157979
best_error: 6.959858420692916
best_error: 6.959858374196423
best_error: 6.924372052946943
best_error: 6.92437151251464
best_error: 6.8504216595485365
best_error: 6.850421543989439
best_error: 6.832014797799653
best_error: 6.832014745349246
best_error: 6.827004324730248
best_error: 6.827004282834195
best_error: 6.813432461164949
best_error: 6.813432430926966
best_error: 6.8079927631609785
best_error: 6.807992724531305
best_error: 6.793330677867393
best_error: 6.793330640365372
best_error: 6.784334309048582
best_error: 6.784334252185704
best_error: 6.77452214355324
best_error: 6.774522109485085
best_error: 6.742384033104036
best_error: 6.742384001362426
best_error: 6.721409357513048
best_error: 6.721409304252614
best_error: 6.714550538511059
best_error: 6.714550538509059
best_error: 6.714550537457627
best_error: 6.714550533679736
best_error: 6.714550530065773
best_error: 6.710319118581221
best_error: 6.710319098037614
best_error: 6.7014407758043175
best_error: 6.701440775512951
best_error: 6.701440770225725
best_error: 6.701440767431642
best_error: 6.6671184723771075
best_error: 6.667118466530737
best_error: 6.667118464314787
best_error: 6.667118463775275
best_error: 6.65614072921596
best_error: 6.65614069954971
best_error: 6.644777267755333
best_error: 6.644777257104562
best_error: 6.619944751103922
best_error: 6.619944726500595
best_error: 6.581591398728191
best_error: 6.581591390454253
best_error: 6.58159138976909
best_error: 6.563659195591358
best_error: 6.5636591924330085
best_error: 6.563659191467118
best_error: 6.563659186705845
best_error: 6.541043491376167
best_error: 6.541043375358068
best_error: 6.539493252174308
best_error: 6.539493223116603
best_error: 6.527062119683257
best_error: 6.527062037778071
best_error: 6.467223465813439
best_error: 6.467223345094093
best_error: 6.454454119774216
best_error: 6.454453692298855
best_error: 6.4330426450858935
best_error: 6.433042523173263
best_error: 6.431847523270734
best_error: 6.4318469629750235
best_error: 6.42403378446082
best_error: 6.424033668932305
best_error: 6.423480605823481
best_error: 6.423480052669746
best_error: 6.423476735193699
best_error: 6.423476619609002
best_error: 6.423458893517438
best_error: 6.423458777930944
best_error: 6.42345750333075
best_error: 6.4234573096019005
