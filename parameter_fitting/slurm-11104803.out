ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 94
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.50685348977282
best_error: 98.50685328126089
best_error: 19.936412823672768
best_error: 19.93641282367199
best_error: 19.936412823649828
best_error: 19.93641282313826
best_error: 19.936386203820394
best_error: 19.936386203819612
best_error: 19.93627960566468
best_error: 19.936279605664676
best_error: 19.936279605663895
best_error: 19.935851303615607
best_error: 19.935851303614825
best_error: 19.934106925263453
best_error: 19.93410692526345
best_error: 19.934106925262657
best_error: 19.9265876746203
best_error: 19.926587674619455
best_error: 19.88385316066227
best_error: 19.883853160661133
best_error: 19.685132535245856
best_error: 19.685132535244712
best_error: 19.685132535243373
best_error: 19.685132467128877
best_error: 19.685132467127712
best_error: 19.68513246712639
best_error: 19.68363742732796
best_error: 19.683637427324722
best_error: 19.674335608697575
best_error: 19.67433560868728
best_error: 19.674335527285887
best_error: 19.674335527275563
best_error: 19.674335201296326
best_error: 19.67433520128599
best_error: 19.67433389183706
best_error: 19.674333891826606
best_error: 19.674328564904155
best_error: 19.674328564893234
best_error: 19.674305760225323
best_error: 19.674305760212413
best_error: 19.67418535940953
best_error: 19.674185359386033
best_error: 19.672609537108166
best_error: 19.672609536946524
best_error: 19.667740118403955
best_error: 19.66774011776166
best_error: 19.66753702439144
best_error: 19.667537023727142
best_error: 19.666651976572954
best_error: 19.666651975811355
best_error: 19.66154150747557
best_error: 19.661541506115196
best_error: 19.497953754426536
best_error: 19.497953735661977
best_error: 19.497953725259208
best_error: 19.391802133027063
best_error: 19.391802094395224
best_error: 19.39180208310797
best_error: 19.240379060790506
best_error: 19.240378993223697
best_error: 19.240378979805676
best_error: 18.504534172576413
best_error: 18.5045340518544
best_error: 18.504534027523555
best_error: 18.43367115671167
best_error: 18.433671155864882
best_error: 18.433059521638604
best_error: 18.43305952150455
best_error: 18.43305952073099
best_error: 18.433051620123507
best_error: 18.433051619600874
best_error: 18.433050935064518
best_error: 18.4330509345417
best_error: 18.433050363365222
best_error: 18.433050362842266
best_error: 18.433049740555916
best_error: 18.433049740421943
best_error: 18.433047768974788
best_error: 18.43304776884022
best_error: 18.43304748853679
best_error: 18.433047488402128
best_error: 18.43304723292029
best_error: 18.43304723278554
best_error: 18.4330472131214
best_error: 18.433047212986658
best_error: 18.433047205088357
best_error: 18.43304720495363
best_error: 18.43304720122165
best_error: 18.433047201086897
best_error: 18.433047193779732
best_error: 18.433047193644985
best_error: 18.433047188167205
best_error: 18.43304718816703
best_error: 18.433045265270877
best_error: 18.433045265135565
best_error: 18.433018096337047
best_error: 18.43301809619361
best_error: 18.432909444860282
best_error: 18.432909444684352
best_error: 18.43247823517125
best_error: 18.432478234479547
best_error: 18.430808000301738
best_error: 18.430807998359942
best_error: 18.429370590971505
best_error: 18.429370589382458
best_error: 18.42937058461725
best_error: 18.429370570675342
best_error: 18.428605573184633
best_error: 18.428605573158045
best_error: 18.428605570580572
best_error: 18.426127707162465
best_error: 18.42612770699192
best_error: 18.42612770333831
best_error: 18.425237287760474
best_error: 18.425237286492614
best_error: 18.425237285776795
best_error: 18.42523727312461
best_error: 18.424452546666686
best_error: 18.42445254642441
best_error: 18.424357986854943
best_error: 18.424357986688722
best_error: 18.424357986512117
best_error: 18.424357984331802
best_error: 18.42430389013581
best_error: 18.424303889974137
best_error: 18.424303889807444
best_error: 18.42430388763833
best_error: 18.424227890361227
best_error: 18.424227890214517
best_error: 18.424227890062305
best_error: 18.424227887934823
best_error: 18.424061676373988
best_error: 18.424061676153663
best_error: 18.423738284640635
best_error: 18.423738284453165
best_error: 18.42268141529623
best_error: 18.422681415217728
best_error: 18.421345318250463
best_error: 18.421345317402693
best_error: 18.421345309491592
best_error: 18.420814075291986
best_error: 18.420814074345067
best_error: 18.420814066134465
best_error: 18.420126669157778
best_error: 18.42012666883016
best_error: 18.420126665593767
best_error: 18.41991756623353
best_error: 18.41991756499689
best_error: 18.41991755614553
best_error: 18.419227161404404
best_error: 18.419227160879966
best_error: 18.41922715690838
best_error: 18.418819854605083
best_error: 18.41881985402362
best_error: 18.418819850010195
best_error: 18.418669868540604
best_error: 18.41866986848229
best_error: 18.418606569057875
best_error: 18.41860656844596
best_error: 18.41860656452379
best_error: 18.418599328943728
best_error: 18.418599328941536
best_error: 18.41859763925024
best_error: 18.41859763924912
best_error: 18.418597639248212
best_error: 18.418597126518517
best_error: 18.41859712651723
best_error: 18.418597126516474
best_error: 18.418596664552027
best_error: 18.41859666455032
best_error: 18.418596664549977
best_error: 18.41859643994944
best_error: 18.418596439947628
best_error: 18.418596439947393
best_error: 18.418595822802576
best_error: 18.418595822800395
best_error: 18.418595688260925
best_error: 18.41859568825869
best_error: 18.418595598262257
best_error: 18.41859559826001
best_error: 18.418595534392367
best_error: 18.41859553439007
best_error: 18.418595485916406
best_error: 18.418595485914107
best_error: 18.418595443719504
best_error: 18.418595443717177
best_error: 18.41859539658268
best_error: 18.41859539658035
best_error: 18.418595264332325
best_error: 18.41859526432992
best_error: 18.41859503022198
best_error: 18.418595030219496
best_error: 18.41859490777257
best_error: 18.41859490777003
best_error: 18.418594903003576
best_error: 18.418594903001036
best_error: 18.41859490013451
best_error: 18.418594900131986
best_error: 18.418594897442922
best_error: 18.4185948974404
best_error: 18.418594893472612
best_error: 18.41859489347008
best_error: 18.418594880820816
best_error: 18.41859488081829
best_error: 18.41859487108033
best_error: 18.4185948710778
best_error: 18.41859486681357
best_error: 18.418594866811045
best_error: 18.418594863458086
best_error: 18.418594863455553
best_error: 18.41859486330052
best_error: 18.418594863298004
best_error: 18.418594863153476
best_error: 18.418594863150943
best_error: 18.418594862911696
best_error: 18.418594862909163
best_error: 18.418594862705078
best_error: 18.418594862702534
best_error: 18.41859486130235
best_error: 18.41859486129982
best_error: 18.418594861290096
best_error: 18.41859486128753
best_error: 18.418594861281804
best_error: 18.418594861279264
best_error: 18.41859486127382
best_error: 18.418594861271295
best_error: 18.41859486126946
best_error: 18.41859486126692
