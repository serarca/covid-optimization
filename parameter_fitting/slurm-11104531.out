ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 74
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.1899104695496
best_error: 101.1899103064119
best_error: 101.1899102879001
best_error: 19.738869898806406
best_error: 19.73886989880421
best_error: 19.738869894213757
best_error: 19.737198839359774
best_error: 19.737198834731693
best_error: 19.730386324508018
best_error: 19.730386319734393
best_error: 19.70092057965915
best_error: 19.700920574235298
best_error: 19.538498044198477
best_error: 19.5384980352356
best_error: 19.534507822633678
best_error: 19.534507813535246
best_error: 19.530448707888212
best_error: 19.530448698650343
best_error: 16.681521790693708
best_error: 16.68152146225001
best_error: 15.827235641568203
best_error: 15.827235206930855
best_error: 14.552850616150385
best_error: 14.552850036804342
best_error: 12.75969239889124
best_error: 12.759692014731776
best_error: 12.548631293137962
best_error: 12.548631281711504
best_error: 12.54863127886556
best_error: 12.547688850575259
best_error: 12.547688622118269
best_error: 12.545316289675974
best_error: 12.545316278442657
best_error: 12.545316275434876
best_error: 12.542901196049755
best_error: 12.542901184875774
best_error: 12.542901181831784
best_error: 12.542385148459225
best_error: 12.542385137321023
best_error: 12.5423851342462
best_error: 12.542159767911947
best_error: 12.542159756778322
best_error: 12.5421597537011
best_error: 12.542054559551527
best_error: 12.542054548420047
best_error: 12.5420545453417
best_error: 12.54199325187408
best_error: 12.541993240743722
best_error: 12.54199323766468
best_error: 12.541973858512131
best_error: 12.541973847382117
best_error: 12.541973844302866
best_error: 12.541970437297122
best_error: 12.541970210247026
best_error: 12.530787492024258
best_error: 12.530787480945655
best_error: 12.530787477753005
best_error: 12.486343134196142
best_error: 12.486342920157071
best_error: 12.460292694986602
best_error: 12.460292681579741
best_error: 12.46029267942091
best_error: 12.459065546707563
best_error: 12.459065533303686
best_error: 12.459065531128076
best_error: 12.45413870745186
best_error: 12.454138694038154
best_error: 12.454138691817073
best_error: 12.434063687007653
best_error: 12.434063673608552
best_error: 12.434063671149321
best_error: 12.350338613603224
best_error: 12.35033859957591
best_error: 12.350338596813867
best_error: 12.28116689414103
best_error: 12.281166879400207
best_error: 12.281166876580087
best_error: 12.279968321018686
best_error: 12.279968306285062
best_error: 12.279968303455895
best_error: 12.275173999443776
best_error: 12.27517398473071
best_error: 12.275173981873614
best_error: 12.255978415176301
best_error: 12.25597840056953
best_error: 12.255978397576493
best_error: 12.231890176691346
best_error: 12.231890162220846
best_error: 12.231890159054208
best_error: 12.230684507204426
best_error: 12.230684492741158
best_error: 12.230684489565691
best_error: 12.22586084170048
best_error: 12.225860827266143
best_error: 12.225860824055365
best_error: 12.206550255324661
best_error: 12.206550241005566
best_error: 12.206550237653945
best_error: 12.129718947133016
best_error: 12.129718932899033
best_error: 12.129718929359246
best_error: 11.82314678993889
best_error: 11.823146777062977
best_error: 11.823146771732166
best_error: 11.736954810031753
best_error: 11.736954797621319
best_error: 11.736954791699
best_error: 11.735779902729687
best_error: 11.735779890324153
best_error: 11.73577988439557
best_error: 11.731079284954099
best_error: 11.731079272550286
best_error: 11.731079266614504
best_error: 11.712258831883148
best_error: 11.71225881955089
best_error: 11.712258813521506
best_error: 11.636777325155832
best_error: 11.636777313021817
best_error: 11.636777306705449
best_error: 11.391515235943286
best_error: 11.391515214888159
best_error: 11.370475384364333
best_error: 11.370475362615444
best_error: 11.353354890855746
best_error: 11.35335488937028
best_error: 11.349705329994503
best_error: 11.349705328486309
best_error: 11.335114127200178
best_error: 11.335114125718984
best_error: 11.27720517704966
best_error: 11.277205175696693
best_error: 11.100715842992308
best_error: 11.100715840783195
best_error: 11.10071583674356
best_error: 11.100048504989328
best_error: 11.100048502776277
best_error: 11.097618905540067
best_error: 11.097618903313396
best_error: 11.09741325767677
best_error: 11.097413257676768
best_error: 11.097413255447506
best_error: 11.097409092164096
best_error: 11.097409089934658
best_error: 11.09740531857695
best_error: 11.097405316347356
best_error: 11.09737212759287
best_error: 11.097372125361906
best_error: 11.097352980935906
best_error: 11.097352978704158
best_error: 11.097347649026496
best_error: 11.097347646794477
best_error: 11.097346632999022
best_error: 11.09734663076696
best_error: 11.097345635894667
best_error: 11.097345635894666
best_error: 11.097345633662567
best_error: 11.097345136357921
best_error: 11.0973451341258
best_error: 11.097344646286569
best_error: 11.097344644054424
best_error: 11.09734440147918
best_error: 11.097344399247026
best_error: 11.097344161337128
best_error: 11.097344159104964
best_error: 11.097344042029908
best_error: 11.097344039797738
best_error: 11.097343924978855
best_error: 11.09734392274668
best_error: 11.097343917537465
best_error: 11.097343915305288
best_error: 11.097343912662232
best_error: 11.097343910430055
best_error: 11.097343907880541
best_error: 11.09734390788054
best_error: 11.097343905648366
