ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 103.92683169733448
best_error: 103.92683160722532
best_error: 103.92683153095027
best_error: 18.133439743096794
best_error: 18.133439743092197
best_error: 18.133439732706734
best_error: 18.106612884505104
best_error: 18.106612884500315
best_error: 18.106612873122494
best_error: 17.96603635693229
best_error: 17.966036356922988
best_error: 17.966036338930596
best_error: 14.395628917260595
best_error: 14.395628911028023
best_error: 14.395628876059654
best_error: 14.376766171781107
best_error: 14.376766165715694
best_error: 14.376766164401065
best_error: 14.376766162003456
best_error: 14.376766060852402
best_error: 14.372647950879703
best_error: 14.372647941672689
best_error: 14.372647939465596
best_error: 13.546020897039329
best_error: 13.546020896270857
best_error: 13.546020878541981
best_error: 13.102840338874971
best_error: 13.102840316070834
best_error: 12.946333157259568
best_error: 12.946333138783194
best_error: 12.946333138077556
best_error: 11.865242323267742
best_error: 11.865242313010919
best_error: 11.86524230566623
best_error: 11.176273147480696
best_error: 11.176273128887939
best_error: 10.92458753339144
best_error: 10.924587371911501
best_error: 10.54271716539758
best_error: 10.542717160888447
best_error: 10.542717160726392
best_error: 10.542717153936788
best_error: 10.522663043019513
best_error: 10.522663042900115
best_error: 10.522663033034098
best_error: 10.522663027946635
best_error: 10.51498981554807
best_error: 10.514989815452147
best_error: 10.514989795285043
best_error: 10.494191845332866
best_error: 10.494191843553372
best_error: 10.494191841350746
best_error: 10.494191831623386
best_error: 10.476115127877277
best_error: 10.47611512285689
best_error: 10.476115117386257
best_error: 10.476115116910528
best_error: 10.465094328626119
best_error: 10.465094307900529
best_error: 10.40693925892314
best_error: 10.406939247805344
best_error: 10.329687093811483
best_error: 10.329687091097423
best_error: 10.32968708754601
best_error: 10.329687083980634
best_error: 10.311885911183492
best_error: 10.31188590954735
best_error: 10.311885905566566
best_error: 10.311885904797542
best_error: 10.31188590152752
best_error: 10.306262226516138
best_error: 10.306261917747221
best_error: 10.30590495422041
best_error: 10.305904952980868
best_error: 10.30590494478811
best_error: 10.305904944623702
best_error: 10.304749825136337
best_error: 10.304749823919996
best_error: 10.304749815506835
best_error: 10.304521042553574
best_error: 10.30452104134183
best_error: 10.30452103288497
best_error: 10.30448192372532
best_error: 10.304481615092026
best_error: 10.304471234532999
best_error: 10.30447092589989
best_error: 10.266491255931417
best_error: 10.266491245660639
best_error: 10.264496586396065
best_error: 10.264496570253929
best_error: 10.262682468777893
best_error: 10.262682453722359
best_error: 10.261801210690129
best_error: 10.261801201761973
best_error: 10.261801201484921
best_error: 10.259357747582985
best_error: 10.259357736866873
best_error: 10.256246392649068
best_error: 10.256246379362015
best_error: 10.252449780582909
best_error: 10.252449767271527
best_error: 10.229316592495888
best_error: 10.229316575368259
best_error: 10.213927429333781
best_error: 10.213927411947301
best_error: 10.208972865688182
best_error: 10.208972848304214
best_error: 10.206882984846635
best_error: 10.206882967459975
best_error: 10.20688139180131
best_error: 10.20688137441457
best_error: 10.206879831024871
best_error: 10.206879813638073
best_error: 10.206878823399892
best_error: 10.206878806013043
best_error: 10.20687788465806
best_error: 10.206877867271169
best_error: 10.206876987058374
best_error: 10.206876969671447
best_error: 10.206871178257902
best_error: 10.206871160870714
best_error: 10.206867194247472
best_error: 10.206867176860104
best_error: 10.206855985443289
best_error: 10.20685596805544
best_error: 10.206855885748336
best_error: 10.206855868360478
best_error: 10.206855802738293
best_error: 10.206855785350426
best_error: 10.206855711245336
best_error: 10.206855693857475
best_error: 10.20685562574516
best_error: 10.206855608357303
best_error: 10.191624723283432
best_error: 10.191624710386659
best_error: 10.191527829768438
best_error: 10.191527612702597
best_error: 10.191467812702294
best_error: 10.191467799854557
best_error: 10.191361256112906
best_error: 10.191361243266925
best_error: 10.191343721566177
best_error: 10.191343708720485
best_error: 10.191336291352773
best_error: 10.19133627850721
best_error: 10.191335137397287
best_error: 10.191335124551738
best_error: 10.19133465670668
best_error: 10.191334643861143
best_error: 10.191334562821186
