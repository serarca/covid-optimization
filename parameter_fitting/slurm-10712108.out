ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.183087680177152
best_error: 10.183087649442033
best_error: 10.183087625478276
best_error: 8.913477132764598
best_error: 8.913477029238258
best_error: 5.442402562983865
best_error: 5.4424023052680575
best_error: 4.576698561356045
best_error: 4.576698306348202
best_error: 4.207382499490819
best_error: 4.2073822640329075
best_error: 4.034582635048498
best_error: 4.034582398210752
best_error: 3.9372984776550224
best_error: 3.937298241768696
best_error: 3.8913165302315136
best_error: 3.8913162908234495
best_error: 3.867591031838378
best_error: 3.8675907905811235
best_error: 3.856273227166282
best_error: 3.8562729845511843
best_error: 3.8488280250876064
best_error: 3.848827782773394
best_error: 3.8457072130586276
best_error: 3.845706970370867
best_error: 3.84519210944008
best_error: 3.845191866690682
best_error: 3.8449117291880954
best_error: 3.8449114864051506
best_error: 3.8447833105883746
best_error: 3.8447830677900674
best_error: 3.8446961348803494
best_error: 3.8446958920716066
best_error: 3.8446621842550117
best_error: 3.844662116753384
best_error: 3.844662090241008
best_error: 3.8446612580992063
best_error: 3.8446612352178158
best_error: 3.8446612217079377
best_error: 3.844660528930545
best_error: 3.844660506049186
best_error: 3.844660492539269
best_error: 3.8446576122591356
best_error: 3.8446575893778654
best_error: 3.8446575758678354
best_error: 3.8446459456253868
best_error: 3.844645922744469
best_error: 3.844645909233984
best_error: 3.8445269680665266
best_error: 3.844526725238735
best_error: 3.844051147497477
best_error: 3.8440509046169478
best_error: 3.8421492995902207
best_error: 3.8421490564988483
best_error: 3.834564838995348
best_error: 3.834564595062903
best_error: 3.8048912183447503
best_error: 3.8048909704403444
best_error: 3.699785199553676
best_error: 3.6997849354505146
best_error: 3.481685187254855
best_error: 3.4816848333821477
best_error: 3.465130808549387
best_error: 3.4651304272126486
best_error: 3.4073804609022247
best_error: 3.4073800761812327
best_error: 3.368522203396125
best_error: 3.3685218194084543
best_error: 3.3474222948035877
best_error: 3.3474222314615134
best_error: 3.347173531337579
best_error: 3.3471731424414957
best_error: 3.3325655975586845
best_error: 3.3325651261056217
best_error: 3.323568509880416
best_error: 3.32356808239968
best_error: 3.3120570509081064
best_error: 3.3120566193853054
best_error: 3.3001989571996426
best_error: 3.3001989084099614
best_error: 3.2902492557350267
best_error: 3.290249202945487
best_error: 3.245925869228558
best_error: 3.24592581346304
best_error: 3.2295049189695177
best_error: 3.229504544661332
best_error: 3.157332799044722
best_error: 3.1573324216453926
best_error: 2.917018349759642
best_error: 2.9170179663937534
best_error: 2.8773696315353225
best_error: 2.877369234186623
best_error: 2.865977843963009
best_error: 2.8659778292982834
best_error: 2.86597776460776
best_error: 2.8618116185056617
best_error: 2.8618112185476132
best_error: 2.7317328219400667
best_error: 2.731732423831291
best_error: 2.633015685658667
best_error: 2.6330152915799916
best_error: 2.6077991367106597
best_error: 2.6077987448903723
best_error: 2.604209968156229
best_error: 2.604209577053429
best_error: 2.6027132193394884
best_error: 2.602712828194292
best_error: 2.6020346981588727
best_error: 2.6020343069945477
best_error: 2.6019009173857284
best_error: 2.60190091666392
best_error: 2.601900838704993
best_error: 2.6018556622622007
best_error: 2.6018552710920866
best_error: 2.6018526946437
best_error: 2.6018526939217046
best_error: 2.6018526159633772
best_error: 2.6018486616764767
best_error: 2.601848270507932
best_error: 2.6018428810254286
best_error: 2.601842489856706
best_error: 2.6018408966941236
best_error: 2.6018408959720882
best_error: 2.6018408180140282
best_error: 2.6018406150120494
best_error: 2.601840591581155
best_error: 2.6018405851208515
best_error: 2.601840561689956
best_error: 2.6018405606926667
best_error: 2.601840537261756
best_error: 2.6018405297824962
best_error: 2.6006218134478614
best_error: 2.6006214247076596
best_error: 2.596121421946452
best_error: 2.5961210443634872
best_error: 2.594812860485969
best_error: 2.5948124882824164
best_error: 2.5936039818251557
best_error: 2.593603611038752
best_error: 2.582143184214186
best_error: 2.582142815340813
best_error: 2.580611580804593
best_error: 2.5806112126631904
best_error: 2.579355566715698
best_error: 2.5793551987161294
best_error: 2.5789652066186055
best_error: 2.578964838589429
best_error: 2.5787375945162614
best_error: 2.578737226469922
best_error: 2.5786306200461153
best_error: 2.578630251991753
best_error: 2.578609492067653
best_error: 2.5786094915406226
best_error: 2.578609414503993
best_error: 2.5771188071901134
best_error: 2.577118440399488
best_error: 2.5755201507239454
best_error: 2.5755197841488893
best_error: 2.5754457730454896
best_error: 2.575445406844523
best_error: 2.5753963027437674
best_error: 2.575395937403246
best_error: 2.5750628651243987
best_error: 2.5750624997716036
best_error: 2.574887192291671
best_error: 2.574886826932425
best_error: 2.5747948713670006
best_error: 2.574794506004374
best_error: 2.574746377541672
best_error: 2.5747460121772474
best_error: 2.5747210614881584
best_error: 2.574720696122805
best_error: 2.5747182740229846
best_error: 2.574717908657404
best_error: 2.574716343571845
best_error: 2.5747159782060987
best_error: 2.574715531736042
best_error: 2.5747155244072024
best_error: 2.5747155182805077
best_error: 2.5747154215998336
best_error: 2.5747154142709987
best_error: 2.5747154101777117
best_error: 2.5747154028488675
best_error: 2.5747154025218557
best_error: 2.5747153999722765
best_error: 2.574715398903117
best_error: 2.5747153962293274
best_error: 2.5747153958333753
best_error: 2.5747153949379387
best_error: 2.5747153945419976
