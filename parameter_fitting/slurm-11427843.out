ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.893327085901518
best_error: 21.893327033557494
best_error: 21.893327032172873
best_error: 4.45474497538738
best_error: 4.45474497426574
best_error: 4.454744974207771
best_error: 4.451195295975096
best_error: 4.451195295828612
best_error: 4.451195294790124
best_error: 4.436467001720789
best_error: 4.436467001555937
best_error: 4.4364670005132485
best_error: 4.367254123886216
best_error: 4.367254123625361
best_error: 4.367254122566677
best_error: 3.4359156867925473
best_error: 3.43591567659734
best_error: 3.226121960719756
best_error: 3.2261218882671314
best_error: 3.1590494467091332
best_error: 3.159049427220667
best_error: 2.8658452817299347
best_error: 2.865845255033566
best_error: 2.860672715545765
best_error: 2.860672687972646
best_error: 2.8388552168604004
best_error: 2.838855190959365
best_error: 2.728437994641323
best_error: 2.728437990853481
best_error: 2.72843795406213
best_error: 2.401101438415695
best_error: 2.4011013531144836
best_error: 2.3092545451012914
best_error: 2.3092544528837378
best_error: 2.2146281541533686
best_error: 2.214628042889609
best_error: 1.9372339078414242
best_error: 1.9372337473309398
best_error: 1.7485810224821023
best_error: 1.7485808529064166
best_error: 1.7288988126626899
best_error: 1.7288987981365855
best_error: 1.728898793458413
best_error: 1.6912069589292091
best_error: 1.6912069446762168
best_error: 1.6670106163018332
best_error: 1.6670105786512146
best_error: 1.6558098149995055
best_error: 1.6558098081749717
best_error: 1.652661887831084
best_error: 1.6526618643685398
best_error: 1.6512032753988797
best_error: 1.6512032735101798
best_error: 1.6481724746587902
best_error: 1.6481724618632319
best_error: 1.6353400299194605
best_error: 1.6353399847924504
best_error: 1.622270031492429
best_error: 1.6222699624993382
best_error: 1.6059789800355524
best_error: 1.6059788925722174
best_error: 1.5684325149451064
best_error: 1.5684324155084293
best_error: 1.4975977527397972
best_error: 1.4975976663029715
best_error: 1.4484340355388559
best_error: 1.4484338606788436
best_error: 1.4064008234512977
best_error: 1.406400709816277
best_error: 1.4059593549039178
best_error: 1.4059592414053927
best_error: 1.391531002318547
best_error: 1.3915308963439543
best_error: 1.3863089510795943
best_error: 1.3863088465346893
best_error: 1.3632648842621011
best_error: 1.3632647678667789
best_error: 1.325552515950545
best_error: 1.3255522601043512
best_error: 1.2526501043011196
best_error: 1.2526498259794376
best_error: 1.0961370628693379
best_error: 1.0961367748822934
best_error: 0.9836900022484211
best_error: 0.9836898618942765
best_error: 0.9315317541831603
best_error: 0.9315317284574819
best_error: 0.9294320283982789
best_error: 0.9294320188845646
best_error: 0.9241900724125085
best_error: 0.9241900393541783
best_error: 0.9237395997902159
best_error: 0.9237395331073198
best_error: 0.9226267695346059
best_error: 0.9226267205169414
best_error: 0.9179511524949323
best_error: 0.9179511355907962
best_error: 0.9129588339356529
best_error: 0.912958820991493
best_error: 0.9060284206731809
best_error: 0.9060283890443641
best_error: 0.9024802411267651
best_error: 0.9024802164631379
best_error: 0.9006487437476433
best_error: 0.9006487427492427
best_error: 0.9006487419807928
best_error: 0.8998161586838025
best_error: 0.8998161507999982
best_error: 0.899593790714249
best_error: 0.8995937854081977
best_error: 0.8990081150395802
best_error: 0.8990081147551057
best_error: 0.8990081134502053
best_error: 0.8982757569680409
best_error: 0.8982757506234559
best_error: 0.8974441521425497
best_error: 0.8974441391425563
best_error: 0.896606633932115
best_error: 0.8966066335642722
best_error: 0.8966066330327334
best_error: 0.8966066319302626
best_error: 0.8942998591718925
best_error: 0.8942998479777873
best_error: 0.888116155846831
best_error: 0.8881161223997239
best_error: 0.8875862596949691
best_error: 0.8875862236720258
best_error: 0.881805993744362
best_error: 0.8818059510397527
best_error: 0.8801554148149516
best_error: 0.8801553848909219
best_error: 0.8800480565217683
best_error: 0.8800480267028371
best_error: 0.8783358864842495
best_error: 0.8783358623275989
best_error: 0.8722340392844984
best_error: 0.8722340356237054
best_error: 0.8722340207462966
best_error: 0.8309780678095793
best_error: 0.8309779217902263
best_error: 0.8011810807013261
best_error: 0.8011810339418807
best_error: 0.7920714476519508
best_error: 0.7920713295917414
best_error: 0.7871910393366438
best_error: 0.7871909078070705
best_error: 0.786536885175005
best_error: 0.7865367692113489
best_error: 0.7833003982576782
best_error: 0.7833003580622424
best_error: 0.7811801892440765
best_error: 0.7811801754787513
best_error: 0.7787111088360027
best_error: 0.7787110915974725
best_error: 0.7755504963509349
best_error: 0.7755504764473173
best_error: 0.7726537960965831
best_error: 0.7726537731761671
best_error: 0.7695050329037033
best_error: 0.7695050305944668
best_error: 0.7695050185477617
best_error: 0.7683959739565406
best_error: 0.7683959379983929
best_error: 0.7668664337112928
best_error: 0.7668663813304829
best_error: 0.76317879640348
best_error: 0.7631787385111819
best_error: 0.7569218097550638
best_error: 0.7569217311189697
best_error: 0.7567059439077484
best_error: 0.7567059291840902
best_error: 0.7551702044008239
best_error: 0.7551701941563015
best_error: 0.7550437115714413
best_error: 0.7550437042190866
best_error: 0.7549714799050747
best_error: 0.7549714798431973
best_error: 0.7549714795962204
best_error: 0.7549091666662996
best_error: 0.7549091630593616
best_error: 0.7548151200604617
best_error: 0.7548151167755442
best_error: 0.754753120067189
best_error: 0.7547531079108996
best_error: 0.7543955241125261
best_error: 0.7543955234487048
best_error: 0.7543955172228614
best_error: 0.7539260345196332
best_error: 0.7539260319525305
best_error: 0.7533882360588281
best_error: 0.7533882328713405
best_error: 0.7533219320917601
best_error: 0.7533219319239044
best_error: 0.7533219319216387
best_error: 0.7532954535134592
best_error: 0.7532954513514369
best_error: 0.7532933115687492
best_error: 0.753293309936049
best_error: 0.7532816810386506
best_error: 0.7532816804786334
best_error: 0.7532759873334588
best_error: 0.7532759857020962
best_error: 0.7532742521492736
best_error: 0.7532742519595356
best_error: 0.7532733394883152
best_error: 0.7532733392919597
best_error: 0.7532730019433509
best_error: 0.7532730001929937
best_error: 0.753271827338273
best_error: 0.753271826718262
best_error: 0.7532661665712977
best_error: 0.7532661663921058
best_error: 0.75325071154506
best_error: 0.7532507106673598
best_error: 0.753224125173106
best_error: 0.7532241228972275
best_error: 0.7531737777463918
best_error: 0.7531737736383148
best_error: 0.7530414782299387
best_error: 0.7530414712828918
best_error: 0.7527447510653767
best_error: 0.7527447420797002
best_error: 0.7523506364948069
best_error: 0.7523506358611938
best_error: 0.7523505792759835
best_error: 0.7523505784806268
best_error: 0.7523505659390741
best_error: 0.7523505651439213
best_error: 0.7523505616750235
best_error: 0.7523505608558277
best_error: 0.7523505607901021
best_error: 0.7523505599709214
best_error: 0.7523505596228666
best_error: 0.752350553393689
best_error: 0.7523505520788832
best_error: 0.7521331926356251
best_error: 0.7521331853122103
best_error: 0.7520528024012674
best_error: 0.7520527964305722
best_error: 0.7519663964216331
best_error: 0.7519663962429027
best_error: 0.7519663960745977
best_error: 0.751962955744841
best_error: 0.7519629555657567
best_error: 0.7519629553699532
best_error: 0.7519446953372708
best_error: 0.7519446946161904
best_error: 0.7518446483704017
best_error: 0.7518446478402145
best_error: 0.7518446466507543
best_error: 0.7516701420685987
best_error: 0.7516701359223193
best_error: 0.7511678341552251
best_error: 0.7511678110191005
best_error: 0.7506204766279461
best_error: 0.7506204758584981
best_error: 0.7506204613858678
best_error: 0.7502552353367139
best_error: 0.7502552069296263
best_error: 0.750237091436118
best_error: 0.7502370613423246
