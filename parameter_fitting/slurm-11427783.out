ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.367846596162117
best_error: 24.367846548237186
best_error: 24.367846530620863
best_error: 4.795030712650709
best_error: 4.79503071194049
best_error: 4.794044152185044
best_error: 4.794044152116736
best_error: 4.794044151714769
best_error: 4.790013960556403
best_error: 4.79001396048381
best_error: 4.790013960080653
best_error: 4.772409559846458
best_error: 4.772409559753623
best_error: 4.772409559345756
best_error: 4.661500523944293
best_error: 4.661500523606113
best_error: 4.661500523251433
best_error: 4.521146035522857
best_error: 4.521146033946037
best_error: 3.327818033647647
best_error: 3.327817894634143
best_error: 2.4351951702335546
best_error: 2.4351949664011605
best_error: 2.1529208411234286
best_error: 2.152920829673833
best_error: 2.1529207220068556
best_error: 2.1511469550890667
best_error: 2.151146948475944
best_error: 2.1511468347142646
best_error: 2.1179893091024744
best_error: 2.1179892907724476
best_error: 2.1179891895526195
best_error: 2.0901146356159206
best_error: 2.0901145506629404
best_error: 1.9910153569986997
best_error: 1.9910153352492028
best_error: 1.9910153069975083
best_error: 1.9478055504020113
best_error: 1.9478052827042511
best_error: 1.9373734914498926
best_error: 1.9373734899219477
best_error: 1.9373734351160576
best_error: 1.922595480334494
best_error: 1.9225953645254088
best_error: 1.9174995084938171
best_error: 1.917499472219378
best_error: 1.9123086471927917
best_error: 1.9123085837543605
best_error: 1.9108106283431159
best_error: 1.9108106019089361
best_error: 1.9065121835977568
best_error: 1.9065121797992461
best_error: 1.9004263038433837
best_error: 1.9004262956156195
best_error: 1.8969704208981406
best_error: 1.8969704104474783
best_error: 1.5528942778696142
best_error: 1.5528942768425802
best_error: 1.5528942669756696
best_error: 1.4695322587973179
best_error: 1.469532094669803
best_error: 1.4682766894079555
best_error: 1.4682765735541927
best_error: 1.4461068863922728
best_error: 1.4461068685115526
best_error: 1.4434155386549892
best_error: 1.4434154945855697
best_error: 1.442755168778378
best_error: 1.442755165847658
best_error: 1.4425273896688355
best_error: 1.4425273895640809
best_error: 1.442527388906556
best_error: 1.4425273879362346
best_error: 1.4423242891658112
best_error: 1.4423242830569805
best_error: 1.4418610719409202
best_error: 1.441861045995777
best_error: 1.4415085272360166
best_error: 1.441508508392466
best_error: 1.4410447478935573
best_error: 1.4410447423518065
best_error: 1.4409658250747555
best_error: 1.4409658190047667
best_error: 1.4390153746290542
best_error: 1.439015368241022
best_error: 1.437522889465327
best_error: 1.4375228539499616
best_error: 1.4373820808115223
best_error: 1.4373820429957738
best_error: 1.437126476880237
best_error: 1.4371264294882211
best_error: 1.4371261305154266
best_error: 1.437126083191786
best_error: 1.4370294574449973
best_error: 1.4370294117993507
best_error: 1.4368632698867585
best_error: 1.4368632271540651
best_error: 1.4365484458744207
best_error: 1.4365484136267264
best_error: 1.4356112525517408
best_error: 1.4356112446205864
best_error: 1.428257324410897
best_error: 1.4282573170844457
best_error: 1.4282573119516713
best_error: 1.4100854952492161
best_error: 1.4100854087336594
best_error: 1.397116317870741
best_error: 1.3971162054248658
best_error: 1.3573307122621032
best_error: 1.3573306853009475
best_error: 1.3314635362348557
best_error: 1.3314634612550633
best_error: 1.258189401684749
best_error: 1.2581893862129114
best_error: 1.2335325018140484
best_error: 1.2335325017111578
best_error: 1.233532501117548
best_error: 1.2335324948340767
best_error: 1.206459948407663
best_error: 1.2064599214520326
best_error: 1.1828187888560355
best_error: 1.1828187045147065
best_error: 1.1807001164151105
best_error: 1.1807000455877914
best_error: 1.1770367485053626
best_error: 1.1770367299745508
best_error: 1.1726242791440755
best_error: 1.1726242619412792
best_error: 1.16373192037475
best_error: 1.1637318700587806
best_error: 1.160643549536213
best_error: 1.1606435336870402
best_error: 1.158864040235829
best_error: 1.1588640167336843
best_error: 1.1577167986443504
best_error: 1.1577167982447703
best_error: 1.1577167980835064
best_error: 1.1577167979858987
best_error: 1.157716797835825
best_error: 1.1577167971722868
best_error: 1.157470871956057
best_error: 1.1574708711211765
best_error: 1.157470870646059
best_error: 1.157421205223436
best_error: 1.1574212049620969
best_error: 1.1574212046020933
best_error: 1.157421203855826
best_error: 1.1565043874732563
best_error: 1.1565043869240814
best_error: 1.1565043861759576
best_error: 1.1529814869716393
best_error: 1.1529814823100522
best_error: 1.14110674647885
best_error: 1.1411066941048589
best_error: 1.0904519148565779
best_error: 1.0904518961159595
best_error: 1.0866830571119883
best_error: 1.0866830474386326
best_error: 1.086683046445508
best_error: 1.0827054225876436
best_error: 1.082705362564491
best_error: 1.082098340860585
best_error: 1.0820983033028224
best_error: 1.0811660630117093
best_error: 1.081166023860434
best_error: 1.0776452078266199
best_error: 1.0776451637403985
best_error: 1.0748330437149982
best_error: 1.0748330181596608
best_error: 1.0743652293403865
best_error: 1.0743651979524271
best_error: 1.0726461472997142
best_error: 1.0726461427480398
best_error: 1.0694669952903126
best_error: 1.069466990096085
best_error: 1.0688865614667258
best_error: 1.0688865611092497
best_error: 1.0688865602636497
best_error: 1.0687067432307022
best_error: 1.0687067426495482
best_error: 1.06870674214181
best_error: 1.0684704985746551
best_error: 1.0684704937022242
best_error: 1.0684026045143913
best_error: 1.0684026022762516
best_error: 1.068353660312879
best_error: 1.0683536595651832
best_error: 1.0683536592062937
best_error: 1.0683254606497337
best_error: 1.0683254596726532
best_error: 1.0683254595885905
best_error: 1.0683125181504005
best_error: 1.068312514256121
best_error: 1.0683029340408465
best_error: 1.06830292939184
best_error: 1.0682601963875362
best_error: 1.0682601912442737
best_error: 1.06817248283059
best_error: 1.0681724779040835
best_error: 1.0679668537330138
best_error: 1.0679668510617306
best_error: 1.0670713503059932
best_error: 1.0670713469908608
best_error: 1.0639342631370041
best_error: 1.0639342379159884
best_error: 1.0589826674846146
best_error: 1.0589825882671209
best_error: 1.0534181754474428
best_error: 1.0534180515804585
best_error: 1.0410819155905195
best_error: 1.0410819095584152
best_error: 1.025644702973724
best_error: 1.0256446781883473
best_error: 1.0244173062915627
best_error: 1.0244172663680091
best_error: 1.0168432669313006
best_error: 1.0168432383979564
best_error: 1.01257304497312
best_error: 1.0125730352105362
best_error: 1.0082995258838567
best_error: 1.0082995005884503
best_error: 1.0075370293380597
best_error: 1.0075370195547388
best_error: 1.006950277014446
best_error: 1.006950276866479
best_error: 1.0068062257121593
best_error: 1.006806225638576
best_error: 1.0066240973933251
best_error: 1.0066240966091964
best_error: 1.0066132844658577
best_error: 1.006613283991858
best_error: 1.0066116207688898
best_error: 1.0066116197562607
best_error: 1.0066079626754034
best_error: 1.0066079625095943
best_error: 1.0065961738952678
best_error: 1.006596172854189
best_error: 1.0065694814519095
best_error: 1.0065694802832357
best_error: 1.0064769460998773
best_error: 1.0064769430012455
best_error: 1.0063409926211535
best_error: 1.0063409854163157
best_error: 1.006152481148552
best_error: 1.0061524766989154
best_error: 1.0058584776847066
best_error: 1.005858474653275
best_error: 1.0058490948416818
best_error: 1.0058490936678466
best_error: 1.005799594598256
best_error: 1.00579959413266
best_error: 1.0057972382563174
best_error: 1.005797237576605
best_error: 1.0057971289024668
best_error: 1.0057971287963239
best_error: 1.0057969845810286
best_error: 1.0057969843216998
best_error: 1.0057969805684326
best_error: 1.0057969799819133
best_error: 1.005796948789303
best_error: 1.005796948495734
best_error: 1.0057969345107662
best_error: 1.0057969343794326
best_error: 1.0057969151436381
best_error: 1.0057969151420496
best_error: 1.0057969110614828
best_error: 1.005796911021341
best_error: 1.0057968959136774
best_error: 1.0057968958189896
best_error: 1.0057968871118614
best_error: 1.005796886985118
best_error: 1.0057968570851843
best_error: 1.0057968568783384
