ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 26.02376569066623
best_error: 26.023765495032368
best_error: 5.090356313787189
best_error: 5.090356313688696
best_error: 5.0903563136885355
best_error: 5.090356313562103
best_error: 5.090308175372948
best_error: 5.090308175274046
best_error: 5.0903081751477615
best_error: 5.0901151797214315
best_error: 5.090115179621532
best_error: 5.0901151794958395
best_error: 5.089336057870245
best_error: 5.0893360577662925
best_error: 5.089336057643019
best_error: 5.086100847150325
best_error: 5.08610084702913
best_error: 5.086100846916327
best_error: 5.070914795875333
best_error: 5.0709147956638985
best_error: 5.070914795609879
best_error: 4.988919823293989
best_error: 4.988919820154815
best_error: 4.985288491920695
best_error: 4.985288488172968
best_error: 4.9618806518116525
best_error: 4.9618806434854665
best_error: 3.675923334858246
best_error: 3.675923312367976
best_error: 3.6720765932953507
best_error: 3.6720765848142207
best_error: 3.6715142697564995
best_error: 3.6715142656776028
best_error: 3.6714411015099357
best_error: 3.671441101314177
best_error: 3.671441100940524
best_error: 3.671441100684716
best_error: 3.6713265233004604
best_error: 3.6713265231982826
best_error: 3.671326522808075
best_error: 3.671326522441602
best_error: 3.671080223211656
best_error: 3.67108021446168
best_error: 3.670595482577133
best_error: 3.6705954750876333
best_error: 3.6692144769117347
best_error: 3.669214476803025
best_error: 3.6692144763808017
best_error: 3.6692144760607888
best_error: 3.664544374060784
best_error: 3.664544350265167
best_error: 3.6400403212190713
best_error: 3.6400402390076545
best_error: 3.4697327628380816
best_error: 3.469732447041458
best_error: 3.40157410460346
best_error: 3.4015739242808563
best_error: 3.3775241097482582
best_error: 3.3775240757243883
best_error: 3.3671008302588286
best_error: 3.367100829747659
best_error: 3.3671008293803344
best_error: 3.3671008288328648
best_error: 3.3662489399005318
best_error: 3.3662489393510784
best_error: 3.3662489389780252
best_error: 3.3662489378163176
best_error: 3.349840080821619
best_error: 3.3498400794942427
best_error: 3.349840078689031
best_error: 3.3392821452316452
best_error: 3.3392821380514524
best_error: 3.3226011056134634
best_error: 3.3226011043720343
best_error: 3.3226011038302192
best_error: 3.2915255962884538
best_error: 3.2915255954990297
best_error: 3.2915255952586495
best_error: 3.2905572150661144
best_error: 3.29055719898931
best_error: 3.290532571132624
best_error: 3.290532551840476
best_error: 3.2905319646972653
best_error: 3.2905319443762733
best_error: 3.1372195260437787
best_error: 3.137219217960082
best_error: 3.105561213717599
best_error: 3.10556119791105
best_error: 3.0924470208144466
best_error: 3.092446993738372
best_error: 3.041924930289868
best_error: 3.041924893834495
best_error: 2.9013606623648367
best_error: 2.901360391505368
best_error: 2.9013601577886665
best_error: 2.8750763324181663
best_error: 2.875076332045258
best_error: 2.8750763255899012
best_error: 2.8749063051219523
best_error: 2.8749063024388652
best_error: 2.874906299429452
best_error: 2.8346380505892506
best_error: 2.834637913729695
best_error: 2.810255608480131
best_error: 2.8102555302134795
best_error: 2.7134833906944555
best_error: 2.7134830493036013
best_error: 2.713473277754825
best_error: 2.708235616489136
best_error: 2.708235570944368
best_error: 2.7072480887968293
best_error: 2.7072480875563474
best_error: 2.7072480853621563
best_error: 2.689994945406296
best_error: 2.68999485427249
best_error: 2.6838536805259334
best_error: 2.6838536703605094
best_error: 2.670006285963788
best_error: 2.670006233296084
best_error: 2.6689485939356365
best_error: 2.6689485648373408
best_error: 2.668497680659208
best_error: 2.6684976364082997
best_error: 2.666841875239585
best_error: 2.6668418336411093
best_error: 2.6658033179239022
best_error: 2.665803316464828
best_error: 2.6658033153926497
best_error: 2.6653681557096083
best_error: 2.665368121923031
best_error: 2.6472931345771986
best_error: 2.647293132248098
best_error: 2.647293131402693
best_error: 2.6471767086562816
best_error: 2.6471767074179757
best_error: 2.647176705041403
best_error: 2.6471751477958434
best_error: 2.647175146662574
best_error: 2.6471751441033935
best_error: 2.619859740990677
best_error: 2.61985969769117
best_error: 2.6193961095182994
best_error: 2.619396102223036
best_error: 2.615264192035886
best_error: 2.6152641867568387
best_error: 2.596788537622497
best_error: 2.5967885150732206
best_error: 2.58750191571548
best_error: 2.587501914536554
best_error: 2.5875019135734094
best_error: 2.586631536385356
best_error: 2.5866315362238677
best_error: 2.5866315347515654
best_error: 2.5862881637802286
best_error: 2.5862881624471594
best_error: 2.5862550183205975
best_error: 2.5862550155311097
best_error: 2.5862509858328324
best_error: 2.586250981619539
best_error: 2.586236474835965
best_error: 2.586236469353916
best_error: 2.5859426965082566
best_error: 2.585942683206255
best_error: 2.5853440804412524
best_error: 2.5853440468892126
best_error: 2.5840492516750455
best_error: 2.5840491964339494
best_error: 2.577866365424315
best_error: 2.577866283263707
best_error: 2.577036716146491
best_error: 2.577036636708403
best_error: 2.5738886598810637
best_error: 2.5738885991055964
best_error: 2.571075704580083
best_error: 2.571075673032945
best_error: 2.570299080044007
best_error: 2.5702990786814417
best_error: 2.5700606206326104
best_error: 2.5700606194614797
best_error: 2.568209597155104
best_error: 2.5682095648397842
best_error: 2.56486282997518
best_error: 2.564862726548762
best_error: 2.564855450145718
best_error: 2.5648547808779174
best_error: 2.5598866733543257
best_error: 2.5598866647677077
best_error: 2.54781362652953
best_error: 2.547813626443508
best_error: 2.547813623660179
best_error: 2.471145736735502
best_error: 2.471145482888419
best_error: 2.4710750054130672
best_error: 2.414406442754588
best_error: 2.414406332365238
best_error: 2.39518432014188
best_error: 2.3951843094088834
best_error: 2.395184052172231
best_error: 2.395184041439161
best_error: 2.3932640238194596
best_error: 2.393263968560238
best_error: 2.36744104139426
best_error: 2.367440984440309
best_error: 2.340214136087233
best_error: 2.3402141360417796
best_error: 2.3402141197458883
best_error: 2.340013621959759
best_error: 2.3400136219181804
best_error: 2.3400136057088967
best_error: 2.3222132983854777
best_error: 2.3222131002256075
best_error: 2.285880835578548
best_error: 2.2858806944079886
best_error: 2.2717744515397165
best_error: 2.2717744250982257
best_error: 2.2717732639573107
best_error: 2.2717732375155317
best_error: 2.2690939261098126
best_error: 2.269093924133591
best_error: 2.2684776896200645
best_error: 2.2684776874048747
best_error: 2.2683737852929036
best_error: 2.2683737761201392
best_error: 2.2683504731732684
best_error: 2.268350472466414
best_error: 2.2683504713750247
best_error: 2.2683497863333297
best_error: 2.268349785400933
best_error: 2.268349784537338
best_error: 2.2683493035692477
best_error: 2.2683493025053902
best_error: 2.268349301775382
best_error: 2.268348070747483
best_error: 2.26834806871675
best_error: 2.268346554353064
best_error: 2.2683465523935253
best_error: 2.2683413625490583
best_error: 2.2683413591113553
best_error: 2.2683056038225065
best_error: 2.2683055975808895
best_error: 2.268214714626733
best_error: 2.2682147063430484
best_error: 2.267987262922476
best_error: 2.2679872533217127
best_error: 2.2679039534921603
best_error: 2.2679039434987907
best_error: 2.2676577405372016
best_error: 2.267657732418765
best_error: 2.266651941705671
best_error: 2.2664618843088102
best_error: 2.266461883352597
best_error: 2.2664618831622083
best_error: 2.2657283715867225
best_error: 2.265728371533886
best_error: 2.2637566585202205
best_error: 2.2637566577397967
best_error: 2.2637566129553655
best_error: 2.2637566121749426
best_error: 2.2636623769486746
best_error: 2.2636623702519274
best_error: 2.262699333924283
best_error: 2.262699332863983
best_error: 2.2623315745156862
best_error: 2.262331572252113
best_error: 2.2623315717272656
best_error: 2.262076642743073
best_error: 2.2620766413265763
best_error: 2.26096916797467
best_error: 2.2609691595064096
best_error: 2.260858414125841
best_error: 2.260858412343436
best_error: 2.2608584117544948
best_error: 2.260857453653428
best_error: 2.260857451870811
best_error: 2.2608574512820754
best_error: 2.2604210008717582
best_error: 2.2604209999169473
best_error: 2.2604208620322477
best_error: 2.260420861100453
best_error: 2.2604186078308652
best_error: 2.2604186061274105
best_error: 2.2598890505146576
best_error: 2.2598890491080597
best_error: 2.259737699305291
best_error: 2.2597376925720596
best_error: 2.2597347085488413
best_error: 2.259734701811596
best_error: 2.2592192865653016
best_error: 2.259219283477174
best_error: 2.2590475100636187
best_error: 2.259047508679199
best_error: 2.2590143093639496
best_error: 2.2590143082113374
best_error: 2.2585413061024027
best_error: 2.2585366929258184
best_error: 2.258329874656284
best_error: 2.2583298741649247
best_error: 2.258327226278117
best_error: 2.2583272218284156
best_error: 2.25824472934687
best_error: 2.2582447288537773
