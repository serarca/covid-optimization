ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.0090596677643
best_error: 24.009059662737172
best_error: 24.009059649296923
best_error: 24.009059604301427
best_error: 4.7945125443475325
best_error: 4.7945125441824565
best_error: 4.7945125434878655
best_error: 4.791195794108586
best_error: 4.791195793936239
best_error: 4.791195793241553
best_error: 4.777272978985554
best_error: 4.777272978780261
best_error: 4.777272978086816
best_error: 4.706162431721508
best_error: 4.706162431249337
best_error: 4.706162430644086
best_error: 4.567306027789953
best_error: 4.567306024718198
best_error: 2.519837332941471
best_error: 2.5198372529885793
best_error: 2.3952276184196095
best_error: 2.3952275552536806
best_error: 2.3083481141425026
best_error: 2.308348108204024
best_error: 2.2155997835244645
best_error: 2.215599423124323
best_error: 1.86114672178441
best_error: 1.8611464819189978
best_error: 1.7968655219761822
best_error: 1.7968654797895622
best_error: 1.7869170848819604
best_error: 1.7869170223973372
best_error: 1.7832248361951937
best_error: 1.7832248107448732
best_error: 1.7820016975559176
best_error: 1.7820016937033163
best_error: 1.7814045612828289
best_error: 1.7814045587899268
best_error: 1.7791866687618951
best_error: 1.7791866687568165
best_error: 1.7791866677580332
best_error: 1.7791866672259657
best_error: 1.7461384181916388
best_error: 1.7461384180090906
best_error: 1.7461384009111154
best_error: 1.6800738493182807
best_error: 1.6800737247293775
best_error: 1.6656438769871054
best_error: 1.6656438646542115
best_error: 1.6656438434868297
best_error: 1.64828129878876
best_error: 1.6482811640676696
best_error: 1.6389411099167301
best_error: 1.63894105373088
best_error: 1.6343802966914887
best_error: 1.6343802609193936
best_error: 1.6338759562617668
best_error: 1.633875944217349
best_error: 1.6331490456592161
best_error: 1.6331490452321713
best_error: 1.6331490449518498
best_error: 1.6331490442847894
best_error: 1.6328142962777725
best_error: 1.632814290953391
best_error: 1.6293596969197026
best_error: 1.629359662446928
best_error: 1.6200792261396242
best_error: 1.6200791910639918
best_error: 1.6165405270687367
best_error: 1.6165404883441534
best_error: 1.6150967569232066
best_error: 1.615096728061581
best_error: 1.6147815581232683
best_error: 1.614781543491242
best_error: 1.614663812269385
best_error: 1.6146638119401175
best_error: 1.614663811587023
best_error: 1.6146638108710922
best_error: 1.6146497591759978
best_error: 1.6146497584740909
best_error: 1.6146497578460681
best_error: 1.614639032990627
best_error: 1.6146390322838917
best_error: 1.6146390316734078
best_error: 1.6145815406447772
best_error: 1.6145815341369476
best_error: 1.614478992848991
best_error: 1.6144789872958858
best_error: 1.6132821949649179
best_error: 1.6132821805782445
best_error: 1.6112195537897642
best_error: 1.6112195531844264
best_error: 1.6112195425334936
best_error: 1.6064810172627344
best_error: 1.6064810116617172
best_error: 1.6064810061503538
best_error: 1.5918221037236506
best_error: 1.5918220869007993
best_error: 1.5484977787960004
best_error: 1.5484977556237005
best_error: 1.5484977078595918
best_error: 1.5089981302786233
best_error: 1.5089981083138022
best_error: 1.5089979452621887
best_error: 1.5089971013627679
best_error: 1.456140818802115
best_error: 1.4561407823349495
best_error: 1.4561406948799913
best_error: 1.4331361435816146
best_error: 1.4331360971922271
best_error: 1.3823529994836168
best_error: 1.3823528922693467
best_error: 1.3823526221299636
best_error: 1.378509748581841
best_error: 1.378509690051712
best_error: 1.3691625910973284
best_error: 1.3691625262287832
best_error: 1.3649091990618363
best_error: 1.3649091320557536
best_error: 1.3636565419629898
best_error: 1.3636564668135196
best_error: 1.3573752359919886
best_error: 1.3573751633019406
best_error: 1.3273966781864928
best_error: 1.327396669355145
best_error: 1.3267357206372195
best_error: 1.3267356348356976
best_error: 1.3267356233960184
best_error: 1.3253069203529204
best_error: 1.3253069005717852
best_error: 1.3249906113588334
best_error: 1.324990609426373
best_error: 1.3249906085685925
best_error: 1.32495467848642
best_error: 1.3249546763438511
best_error: 1.3249546758330428
best_error: 1.3249510799347934
best_error: 1.3249510795315806
best_error: 1.324951079408864
best_error: 1.3249510775098685
best_error: 1.3249486787767413
best_error: 1.3249486783652893
best_error: 1.3249486782489113
best_error: 1.3249486763328873
best_error: 1.3249405303076958
best_error: 1.3249405298343573
best_error: 1.3249405297632462
best_error: 1.3249405278240034
best_error: 1.3248932436867467
best_error: 1.3248932376038902
best_error: 1.324783408545698
best_error: 1.3247833863150276
best_error: 1.324716864697129
best_error: 1.3247168486350689
best_error: 1.3244352952859273
best_error: 1.3244352937952677
best_error: 1.3244352932595524
best_error: 1.3242474355525473
best_error: 1.3242474314093498
best_error: 1.3219744069242854
best_error: 1.3219743836754503
best_error: 1.3162206683676851
best_error: 1.3162206314932925
best_error: 1.291461404722899
best_error: 1.2914613850755403
best_error: 1.2914613105738186
best_error: 1.2843857627610171
best_error: 1.284385720794889
best_error: 1.2751435360413874
best_error: 1.2751435068671086
best_error: 1.275143488810794
best_error: 1.2648603857608771
best_error: 1.2648603370491192
best_error: 1.2234929712155367
best_error: 1.2234929102624996
best_error: 1.134113814938538
best_error: 1.1341137403748456
best_error: 1.0877114540448438
best_error: 1.087711402100817
best_error: 1.0877060487203474
best_error: 1.0653890847485818
best_error: 1.0653890494237925
best_error: 1.0653889175962303
best_error: 1.0486582233804689
best_error: 1.0486582215025857
best_error: 1.0486581027395416
best_error: 1.044569845497223
best_error: 1.0445697835584717
best_error: 1.042227210855161
best_error: 1.0422272079082804
best_error: 1.0422271776981873
best_error: 1.0414733421749716
best_error: 1.0414733185797445
best_error: 1.0413546116011032
best_error: 1.0413546098674475
best_error: 1.0412948096330752
best_error: 1.0412948012223504
best_error: 1.0412937014546835
best_error: 1.041293692977023
best_error: 1.04129358093045
best_error: 1.0412935705181527
best_error: 1.0412923747450622
best_error: 1.0412923649758448
best_error: 1.0412894541135644
best_error: 1.0412894451944723
best_error: 1.0412859024661894
best_error: 1.041285895947995
best_error: 1.0412779099699692
best_error: 1.0412779034291892
best_error: 1.041247508579298
best_error: 1.0412475036063364
best_error: 1.040838392134655
best_error: 1.0408383915493769
best_error: 1.0408383910974464
best_error: 1.0408383908256067
best_error: 1.0406108851359068
best_error: 1.0406108845384667
best_error: 1.0406108844986293
best_error: 1.0406108842944297
best_error: 1.0406108838202177
best_error: 1.0404783718430108
best_error: 1.0404783712402397
best_error: 1.0404783706368526
best_error: 1.040478370567131
best_error: 1.0404298689835398
best_error: 1.040429865615647
best_error: 1.040420193092287
best_error: 1.0404201864051768
best_error: 1.0404149515576966
best_error: 1.0404149453227318
best_error: 1.0404124655330407
best_error: 1.0404124584863892
best_error: 1.040411873647881
best_error: 1.0404118674085296
best_error: 1.0404117365386032
best_error: 1.0404117305763925
best_error: 1.0404117053918756
best_error: 1.0404116997077353
best_error: 1.040411488648533
best_error: 1.0404114829208877
best_error: 1.0404114004308653
best_error: 1.0404113951242677
best_error: 1.0404112131899594
best_error: 1.0404112074150915
best_error: 1.0404108669909287
best_error: 1.0404108608837472
best_error: 1.0404096130579896
best_error: 1.040409606091858
best_error: 1.0404086774954862
best_error: 1.0404086705187663
best_error: 1.040405177472053
best_error: 1.0404051705161173
best_error: 1.0403822015201996
best_error: 1.040382192269664
best_error: 1.0403589564370335
best_error: 1.0403589457464129
best_error: 1.0402769281206492
best_error: 1.0402769099143745
best_error: 1.0402521555319513
best_error: 1.0402521375228153
best_error: 1.0402184545838196
best_error: 1.0402184372525547
best_error: 1.040207485529333
best_error: 1.0402074688317753
best_error: 1.0401898657585587
best_error: 1.040189853769475
best_error: 1.0401801214015443
best_error: 1.0401801108281692
