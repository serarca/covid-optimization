ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.318594159327976
best_error: 25.318594076782787
best_error: 4.978308120911901
best_error: 4.97830812048599
best_error: 4.9779357258717685
best_error: 4.97793572581765
best_error: 4.9779357255416175
best_error: 4.9764326982821
best_error: 4.97643269822617
best_error: 4.976432697949104
best_error: 4.970191772214303
best_error: 4.970191772150596
best_error: 4.970191771869415
best_error: 4.9410291051197035
best_error: 4.941029105012186
best_error: 4.941029104717059
best_error: 4.8035033625016474
best_error: 4.803503361687371
best_error: 4.795029069315411
best_error: 4.795029068372662
best_error: 4.752402602055513
best_error: 4.752402600045154
best_error: 3.390943261412173
best_error: 3.390943073525176
best_error: 2.8036048236118942
best_error: 2.8036047047199757
best_error: 2.731242414054151
best_error: 2.7312420216849507
best_error: 2.7265713632835378
best_error: 2.726571256552522
best_error: 2.672345896025046
best_error: 2.6723458735161967
best_error: 2.6452897306010743
best_error: 2.6452893785556966
best_error: 2.3331872501976387
best_error: 2.333186957709151
best_error: 2.3331852420611643
best_error: 2.3056344925194123
best_error: 2.3056343643801056
best_error: 2.294141215461626
best_error: 2.2941410960366344
best_error: 2.148069954814753
best_error: 2.148069885714026
best_error: 2.1370163382643064
best_error: 2.137016325030511
best_error: 2.1346983854561743
best_error: 2.1346983420410366
best_error: 2.1095931981073783
best_error: 2.1095931644264017
best_error: 1.9973568079971833
best_error: 1.9973567426880063
best_error: 1.9973567078416117
best_error: 1.9734110078676925
best_error: 1.9734109229331493
best_error: 1.954634882836377
best_error: 1.9546347841001466
best_error: 1.8890538073391894
best_error: 1.88905374614775
best_error: 1.8717632356090035
best_error: 1.871763201130853
best_error: 1.8688675520554585
best_error: 1.8688674960578573
best_error: 1.862096811204276
best_error: 1.862096805113743
best_error: 1.862096803626531
best_error: 1.8620967989152652
best_error: 1.851922986494977
best_error: 1.851922961409136
best_error: 1.8466945125300132
best_error: 1.8466944530536764
best_error: 1.8238190613737475
best_error: 1.8238190072762845
best_error: 1.7446969663229035
best_error: 1.7446969658398712
best_error: 1.7446969649986004
best_error: 1.744696959913883
best_error: 1.629028033864941
best_error: 1.6290279933032648
best_error: 1.5950123585230107
best_error: 1.5950123513913133
best_error: 1.5950123500783184
best_error: 1.5791951834616902
best_error: 1.579195047690973
best_error: 1.5664904080277815
best_error: 1.5664902150485969
best_error: 1.502960913407666
best_error: 1.5029608706122233
best_error: 1.4736544797997846
best_error: 1.473654442928577
best_error: 1.4657459316957948
best_error: 1.4657459238198822
best_error: 1.4609307070111281
best_error: 1.4609306169224607
best_error: 1.4522805734992343
best_error: 1.4522805729152524
best_error: 1.4522805727375774
best_error: 1.4522805724558732
best_error: 1.4513597400933635
best_error: 1.4513597388444242
best_error: 1.4513597368901776
best_error: 1.4509679412415661
best_error: 1.450967937122142
best_error: 1.4501781010424926
best_error: 1.4501780927952606
best_error: 1.44987953355199
best_error: 1.4498795273027716
best_error: 1.44959498691634
best_error: 1.4495949844214495
best_error: 1.4493910303126274
best_error: 1.4493910242506898
best_error: 1.4492674021315006
best_error: 1.4492673929406512
best_error: 1.448742046241519
best_error: 1.4487420192575544
best_error: 1.448138108957055
best_error: 1.448138080557655
best_error: 1.446267234457398
best_error: 1.446267198682712
best_error: 1.4399003380266793
best_error: 1.4399003359425544
best_error: 1.4379121695304944
best_error: 1.4379119716220197
best_error: 1.4211414386572048
best_error: 1.4211413564222337
best_error: 1.41392701928987
best_error: 1.4139270150569283
best_error: 1.4139269930354015
best_error: 1.4088575041669802
best_error: 1.408857482795891
best_error: 1.4063259330995164
best_error: 1.406325863461808
best_error: 1.4048444588574887
best_error: 1.4048443846849217
best_error: 1.394477286622808
best_error: 1.3944772207167642
best_error: 1.3889440777634057
best_error: 1.3889440526140961
best_error: 1.383202441391773
best_error: 1.3832024201695268
best_error: 1.3802986329029938
best_error: 1.3802986058310753
best_error: 1.378015466922359
best_error: 1.3780154269390616
best_error: 1.3714914056342769
best_error: 1.3714913624974785
best_error: 1.356192793264306
best_error: 1.3561927335709894
best_error: 1.3031997544205862
best_error: 1.3031996424901957
best_error: 1.30212883783364
best_error: 1.3021288256338894
best_error: 1.3021287806087785
best_error: 1.29374827063285
best_error: 1.293748240959186
best_error: 1.2799600576482497
best_error: 1.2799600234412771
best_error: 1.268092082795833
best_error: 1.2680920466106393
best_error: 1.2591110875009848
best_error: 1.2591110501799125
best_error: 1.2511823657963466
best_error: 1.251182329468467
best_error: 1.2476352964549937
best_error: 1.2476352365980103
best_error: 1.24589003587875
best_error: 1.2458899963725565
best_error: 1.2434416864228974
best_error: 1.2434416037649902
best_error: 1.227170464313291
best_error: 1.2271703593229688
best_error: 1.2271698143160978
best_error: 1.2271572664992858
best_error: 1.2271571651876005
best_error: 1.2271566810380368
best_error: 1.2257735527664304
best_error: 1.2257735430780756
best_error: 1.2222878306782452
best_error: 1.2222878253233358
best_error: 1.2211596683172403
best_error: 1.2211596558823463
best_error: 1.2208428670428966
best_error: 1.220842865076703
best_error: 1.220546382182666
best_error: 1.2205463801889425
best_error: 1.2204820085264827
best_error: 1.220482007227697
best_error: 1.2202655772251538
best_error: 1.2202655763015329
best_error: 1.2197766443299738
best_error: 1.219776612661055
best_error: 1.2194542143129539
best_error: 1.2194542044960857
best_error: 1.2194255077875906
best_error: 1.2194255012378081
best_error: 1.2194200084983784
best_error: 1.219420005051983
best_error: 1.2194147916005846
best_error: 1.2194147875247319
best_error: 1.2194004315485056
best_error: 1.2194004277306
best_error: 1.2193444832563807
best_error: 1.2193444814879602
best_error: 1.2192864153053005
best_error: 1.219286413785437
best_error: 1.2192010836875904
best_error: 1.2192010805902473
best_error: 1.2191923043360384
best_error: 1.2191923010901633
best_error: 1.219186065921038
best_error: 1.219186063170271
best_error: 1.2191803456632544
best_error: 1.2191803434232018
best_error: 1.2191751332766256
best_error: 1.2191751321193147
best_error: 1.2191575272584425
best_error: 1.2191575271939643
best_error: 1.219157526878449
best_error: 1.2191575264144436
best_error: 1.2191022086780736
best_error: 1.2191022085293146
best_error: 1.2191022076703433
best_error: 1.2190724488544564
best_error: 1.2190724483465265
best_error: 1.2190724477671195
best_error: 1.2189753825074552
best_error: 1.218975381934977
best_error: 1.2189753813034583
best_error: 1.2188146281076913
best_error: 1.218814624679499
best_error: 1.218517043391059
best_error: 1.2185170390545101
best_error: 1.2175888746035077
best_error: 1.2175888745981136
best_error: 1.217588872784921
best_error: 1.2160871664647122
best_error: 1.2160871641975077
best_error: 1.214113804254326
best_error: 1.2141137443625074
best_error: 1.2141135539567913
best_error: 1.2117501477817447
best_error: 1.211750047129328
best_error: 1.2117495661868127
best_error: 1.2115162982311913
best_error: 1.2115161489081319
best_error: 1.2104820317528004
best_error: 1.210481896104488
best_error: 1.202357312209374
best_error: 1.2023571706448437
best_error: 1.193344138794598
best_error: 1.1933439758574018
best_error: 1.1923257206107012
best_error: 1.1923255683917318
best_error: 1.1900877145285012
best_error: 1.1900875618829614
best_error: 1.1866480639522536
best_error: 1.186647984502772
best_error: 1.1866344754366989
best_error: 1.1866344742578376
best_error: 1.186121260396119
best_error: 1.186121216565363
