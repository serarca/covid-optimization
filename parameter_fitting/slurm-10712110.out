ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.496937636393849
best_error: 9.496937570096428
best_error: 8.036181591978558
best_error: 8.036181338235348
best_error: 6.685124703409824
best_error: 6.685124565965438
best_error: 4.196129850707084
best_error: 4.196129231234091
best_error: 3.7726024648152148
best_error: 3.7726023905817527
best_error: 3.6880600165983135
best_error: 3.6880594661457096
best_error: 3.673537436331276
best_error: 3.6735373662159483
best_error: 3.6728542089962315
best_error: 3.672853666691129
best_error: 3.66264910630202
best_error: 3.662648567090849
best_error: 3.661935926964757
best_error: 3.6619358580167543
best_error: 3.661841879066823
best_error: 3.6618413397886043
best_error: 3.6549029603618273
best_error: 3.6549024270015766
best_error: 3.6294603418386373
best_error: 3.629459829950247
best_error: 3.5184682465978816
best_error: 3.518467835375065
best_error: 3.5146856801311173
best_error: 3.514685243019472
best_error: 3.5100757617262928
best_error: 3.5100753387214807
best_error: 3.495839742654608
best_error: 3.4958393208357554
best_error: 3.4468105520869994
best_error: 3.446810148743832
best_error: 3.244180721223881
best_error: 3.2441803390572224
best_error: 3.1565692655059383
best_error: 3.156568864358836
best_error: 2.9440750453746567
best_error: 2.944074569344785
best_error: 2.9415426332216406
best_error: 2.9415421562478943
best_error: 2.940538998909629
best_error: 2.9405385172029073
best_error: 2.9400782385041024
best_error: 2.940077756176641
best_error: 2.939852074401918
best_error: 2.939851591538119
best_error: 2.939737310494065
best_error: 2.9397368275953815
best_error: 2.939671046592024
best_error: 2.939670563673516
best_error: 2.9396362406088734
best_error: 2.93963575767995
best_error: 2.939618032483386
best_error: 2.9396175495490313
best_error: 2.9396123114407247
best_error: 2.9396122772560505
best_error: 2.9396122166353686
best_error: 2.9396117466280884
best_error: 2.939611263691593
best_error: 2.938884544467805
best_error: 2.9388840615132743
best_error: 2.9359872192048027
best_error: 2.9359871853339112
best_error: 2.9359871243950932
best_error: 2.9244701382901015
best_error: 2.9244701058550033
best_error: 2.9244700434672013
best_error: 2.879726030175832
best_error: 2.8797260061651
best_error: 2.879725935337145
best_error: 2.6977922592251664
best_error: 2.6977922588396153
best_error: 2.6977921646555947
best_error: 2.436198464233029
best_error: 2.4361984637975658
best_error: 2.436198370526701
best_error: 2.436076153414248
best_error: 2.4360757009021294
best_error: 2.435261445509557
best_error: 2.4352609929646567
best_error: 2.4351971414794287
best_error: 2.435196688931954
best_error: 2.4351934920115665
best_error: 2.4351930394637744
best_error: 2.435191817999435
best_error: 2.435191773715702
best_error: 2.3864120732633376
best_error: 2.386411720563598
best_error: 2.3510004950998926
best_error: 2.3510000986686603
best_error: 2.327911243169692
best_error: 2.3279108623874736
best_error: 2.3237858843307775
best_error: 2.3237855034222585
best_error: 2.321253093973386
best_error: 2.3212527122581936
best_error: 2.320338662098173
best_error: 2.320338280092522
best_error: 2.320007589213399
best_error: 2.320007207102674
best_error: 2.319885545413152
best_error: 2.319885163263729
best_error: 2.319786673035476
best_error: 2.3197862908542577
best_error: 2.3196989879103405
best_error: 2.319698605700912
best_error: 2.3196529243543926
best_error: 2.3196525421301777
best_error: 2.3196121750932526
best_error: 2.3196117928559383
best_error: 2.3195904321607577
best_error: 2.3195900499164646
best_error: 2.319571290294797
best_error: 2.3195709080443323
best_error: 2.3195607542868037
best_error: 2.3195603720329494
best_error: 2.3195515701174014
best_error: 2.3195511878606023
best_error: 2.319546174806096
best_error: 2.319545792547575
best_error: 2.319541576592304
best_error: 2.3195411943322974
best_error: 2.3195384292253647
best_error: 2.3195380469643423
best_error: 2.319535913026341
best_error: 2.319535530764509
best_error: 2.319518081466156
best_error: 2.3195176992736353
best_error: 2.31924256322034
best_error: 2.3192421809955253
best_error: 2.3192362284834926
best_error: 2.3192362279994003
best_error: 2.3192361373393684
best_error: 2.319212238460109
best_error: 2.319211856231743
best_error: 2.3191694925349005
best_error: 2.3191691103015177
best_error: 2.3191601783444393
best_error: 2.319159796109961
best_error: 2.3191584907781424
best_error: 2.319158108543459
best_error: 2.319157546817614
best_error: 2.319157164582824
best_error: 2.319157036719793
best_error: 2.3191566544849445
best_error: 2.319156332771705
