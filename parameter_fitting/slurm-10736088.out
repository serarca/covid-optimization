ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.714487428492268
best_error: 11.714487426533266
best_error: 11.591408965304343
best_error: 11.591408949338254
best_error: 7.960167724382906
best_error: 7.960167368278857
best_error: 7.667020292567228
best_error: 7.66702013720261
best_error: 7.637105176747552
best_error: 7.6371050208063975
best_error: 7.598497339803117
best_error: 7.598497339803113
best_error: 7.598497339770162
best_error: 7.581956562440594
best_error: 7.58195656244059
best_error: 7.581956561892116
best_error: 7.581316588196463
best_error: 7.581316539275153
best_error: 7.581195152231544
best_error: 7.581195103298898
best_error: 7.581121456892575
best_error: 7.581121456892572
best_error: 7.5811214563187646
best_error: 7.580234286568609
best_error: 7.580234286568604
best_error: 7.580234285954558
best_error: 7.576926451787317
best_error: 7.576926451787315
best_error: 7.5769264510369725
best_error: 7.563354991067181
best_error: 7.563354991067177
best_error: 7.563354990260123
best_error: 7.495708856648188
best_error: 7.495708802242341
best_error: 7.442473994800461
best_error: 7.442473994800459
best_error: 7.4424739873835595
best_error: 7.434214585008386
best_error: 7.392774900778032
best_error: 7.3927749007780275
best_error: 7.392774887912776
best_error: 7.392052181056288
best_error: 7.392052181056283
best_error: 7.39205216796545
best_error: 7.391988993301436
best_error: 7.391988933019059
best_error: 7.3919560020915
best_error: 7.391956002091495
best_error: 7.39195598899924
best_error: 7.3919304268184955
best_error: 7.391930366530294
best_error: 7.2882162465947555
best_error: 7.288216246594755
best_error: 7.2882162259551775
best_error: 7.267427065821295
best_error: 7.086388120042043
best_error: 7.086387934840898
best_error: 6.942101402294563
best_error: 6.94210098608251
best_error: 6.214267430020609
best_error: 6.214267351932348
best_error: 6.171808559017044
best_error: 6.171808559017035
best_error: 6.1508360353906735
best_error: 6.1508360353906655
best_error: 6.146932611040606
best_error: 6.146932553127653
best_error: 6.119919183489286
best_error: 6.11991914219785
best_error: 6.086067016009395
best_error: 6.086067016009382
best_error: 6.070608419513923
best_error: 6.070608419513916
best_error: 6.059605261162123
best_error: 6.059605239446943
best_error: 6.037210102097909
best_error: 6.037210100519917
best_error: 6.0343753307960295
best_error: 6.034375330796022
best_error: 6.034375330795964
best_error: 6.034083589724905
best_error: 6.0340835897248954
best_error: 6.033161649326733
best_error: 6.033161649326722
best_error: 6.033161649326677
best_error: 6.03275436990255
best_error: 6.032754369902546
best_error: 6.031961418775776
best_error: 6.0319614187757695
best_error: 6.031961418775733
best_error: 6.0297964947061775
best_error: 6.02979649470617
best_error: 6.029796494706147
best_error: 6.0266324136530205
best_error: 6.026632413653014
best_error: 6.026632413652994
best_error: 6.02387488817264
best_error: 6.023874888172632
best_error: 6.023874888172618
best_error: 6.020626781401726
best_error: 6.0206267814017185
best_error: 6.020626781401698
best_error: 6.020162090204485
best_error: 6.020162090204474
best_error: 6.020162090204458
best_error: 6.020036941338818
best_error: 6.020036941338807
best_error: 6.020036941338792
best_error: 6.0199878479230815
best_error: 6.019987847923075
best_error: 6.019987847923053
best_error: 6.019966577114193
best_error: 6.019966577114184
best_error: 6.019966577114163
best_error: 6.019958728935747
best_error: 6.019958728935739
best_error: 6.0199587289357215
best_error: 6.019954224469933
best_error: 6.019954224469922
best_error: 6.019954224469902
best_error: 6.019951641881624
best_error: 6.019951641881614
best_error: 6.019951641881593
best_error: 6.019950164753557
best_error: 6.019950164753548
best_error: 6.019950164753531
best_error: 6.0199493234160615
best_error: 6.019949323416053
best_error: 6.019949323416032
best_error: 6.019948847250421
best_error: 6.0199488472504115
best_error: 6.0199488472503955
best_error: 6.019948771661371
best_error: 6.0199486963090205
best_error: 6.019948432977783
best_error: 6.019948432977775
best_error: 6.019948432977754
best_error: 6.019948391067676
best_error: 6.0199483910676665
best_error: 6.019948391067646
best_error: 6.019948354733431
