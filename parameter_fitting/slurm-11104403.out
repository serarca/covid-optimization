ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.46128612816364
best_error: 100.46128593927948
best_error: 100.46128592445561
best_error: 20.630565388780894
best_error: 20.63056538878012
best_error: 20.63056538781679
best_error: 20.630410223697442
best_error: 20.630410222731424
best_error: 20.629787316459982
best_error: 20.629787315486247
best_error: 20.627259045330902
best_error: 20.627259044325317
best_error: 20.616511290916037
best_error: 20.616511289765302
best_error: 20.558551694928653
best_error: 20.558551692653225
best_error: 20.557931347795627
best_error: 20.55793134550402
best_error: 19.433026062719577
best_error: 19.433025914732724
best_error: 19.283678031840275
best_error: 19.283677860290247
best_error: 19.09385518043807
best_error: 19.093854978746506
best_error: 17.235087584647978
best_error: 17.235087086574502
best_error: 15.977859787470319
best_error: 15.9778597756559
best_error: 15.943790935194725
best_error: 15.943790927344889
best_error: 15.934261027778438
best_error: 15.934260927805784
best_error: 15.932312641612455
best_error: 15.932312635284799
best_error: 15.924694161154447
best_error: 15.924694159745751
best_error: 15.924694114769679
best_error: 15.908501343914022
best_error: 15.90850127049777
best_error: 15.847116370588445
best_error: 15.847116248929538
best_error: 15.642969086494091
best_error: 15.642968474261528
best_error: 14.778148099767346
best_error: 14.778148061425968
best_error: 14.62634286968225
best_error: 14.626342833780276
best_error: 14.439225870145641
best_error: 14.439225839872536
best_error: 14.43004576308503
best_error: 14.430045762609286
best_error: 14.430045667993747
best_error: 14.405195494686694
best_error: 14.405195492734428
best_error: 14.405195423537645
best_error: 14.393164053392093
best_error: 14.393164023902212
best_error: 14.359989883847733
best_error: 14.359989856441633
best_error: 14.340961087871356
best_error: 14.340960943903116
best_error: 14.330795403819256
best_error: 14.33079537579195
best_error: 14.283181000435022
best_error: 14.283180976860631
best_error: 14.264907772983356
best_error: 14.264907751585469
best_error: 14.23900880460784
best_error: 14.239008785491412
best_error: 14.235778881548548
best_error: 14.235778740122736
best_error: 14.232282698057901
best_error: 14.232282678390275
best_error: 14.140977156270363
best_error: 14.14097715372215
best_error: 14.140977150255065
best_error: 14.140977147253409
best_error: 14.1247589524396
best_error: 14.124758950929671
best_error: 14.124758836423396
best_error: 14.11860033189152
best_error: 14.11860033153874
best_error: 14.118600234256263
best_error: 14.1157341693125
best_error: 14.11573407782473
best_error: 14.11441768736462
best_error: 14.114417597085897
best_error: 14.11372268855753
best_error: 14.113722609711877
best_error: 14.113553290653819
best_error: 14.113553212140744
best_error: 14.11344922632514
best_error: 14.113449147803344
best_error: 14.113387216666064
best_error: 14.113387138139071
best_error: 14.113350485765835
best_error: 14.113350407235764
best_error: 14.113327785811975
best_error: 14.113327707280007
best_error: 14.113314808693708
best_error: 14.113314730160651
best_error: 14.113306448372372
best_error: 14.113306369838613
best_error: 14.113301350123415
best_error: 14.113301271589215
best_error: 14.113298282410982
best_error: 14.113298203876521
best_error: 14.113296613893537
best_error: 14.113296535358934
best_error: 14.113295526971257
best_error: 14.113295448436558
best_error: 14.113294975677036
best_error: 14.11329489714229
best_error: 14.11329458768142
best_error: 14.113294509146641
best_error: 14.113294406563481
best_error: 14.11329432802869
best_error: 14.113294268879196
best_error: 14.113294259734776
best_error: 14.113294244592574
best_error: 14.113294235448155
best_error: 14.113294233191407
best_error: 14.113294224046987
best_error: 14.113294217292601
best_error: 14.113294213559458
best_error: 14.11321957355489
best_error: 14.11321957036998
best_error: 14.11321956771131
best_error: 14.113219564452063
best_error: 14.112671597466425
best_error: 14.112671594283693
best_error: 14.112671591622444
best_error: 14.112671588363117
best_error: 14.1105779205033
best_error: 14.110577917683568
best_error: 14.11057791465781
best_error: 14.110577911397506
best_error: 14.102433113436646
best_error: 14.102433110854447
best_error: 14.10243310758485
best_error: 14.102433104322781
best_error: 14.100998934993164
best_error: 14.100998932374166
best_error: 14.100998805688063
best_error: 14.088734407192591
best_error: 14.088734387624537
best_error: 14.08873438755429
best_error: 14.06902853662276
best_error: 14.069028516963584
best_error: 14.062591019661497
best_error: 14.062591002005867
best_error: 14.0605699172512
best_error: 14.060569899646312
best_error: 14.060459796308702
best_error: 14.060459778706607
best_error: 14.060448173439951
best_error: 14.060448155838118
best_error: 14.060442600230434
best_error: 14.060442582628744
best_error: 14.060442280989129
best_error: 14.06044226338744
best_error: 14.06044222637612
best_error: 14.060442208774434
best_error: 14.059521411563718
best_error: 14.059521393959812
best_error: 14.054466184440917
best_error: 14.05446616678763
best_error: 13.871380820165212
best_error: 13.87138079276027
best_error: 13.824933543564708
best_error: 13.824933518297247
best_error: 13.722607728162835
best_error: 13.722607709332149
best_error: 13.718527786440387
best_error: 13.718527625552902
best_error: 13.71174422420232
best_error: 13.711744207045282
best_error: 13.710565014027974
best_error: 13.710564853251856
best_error: 13.709884631215813
best_error: 13.709884614089919
best_error: 13.70555471404634
best_error: 13.70555469703087
best_error: 13.689490353315978
best_error: 13.689490336778775
best_error: 13.684097496827572
best_error: 13.684097480924606
best_error: 13.672722323869621
best_error: 13.672722308544836
best_error: 13.67017376962661
best_error: 13.670173754375758
best_error: 13.669346688680236
best_error: 13.669346673442984
best_error: 13.669232932507967
best_error: 13.669232733518966
best_error: 13.655124261367
best_error: 13.655124246157259
best_error: 13.620085485288357
best_error: 13.620085469495407
best_error: 13.61727117261158
best_error: 13.617271156832512
