ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.951473883294067
best_error: 10.951473880288917
best_error: 10.501282241558998
best_error: 10.501282191504389
best_error: 6.722562098181673
best_error: 6.722561916813336
best_error: 6.618063679364764
best_error: 6.618063622716359
best_error: 6.613141284389306
best_error: 6.6131412276527755
best_error: 6.604332524551881
best_error: 6.6043325202133305
best_error: 6.597984478679061
best_error: 6.597984478679059
best_error: 6.597984474158049
best_error: 6.569903983661703
best_error: 6.569903929181384
best_error: 6.54244163580025
best_error: 6.5424416266531065
best_error: 6.518580777767882
best_error: 6.475079829967086
best_error: 6.475079814837313
best_error: 6.474362233370984
best_error: 6.47436217662769
best_error: 6.396904411612221
best_error: 6.396904411612219
best_error: 6.3969041270277565
best_error: 6.36687198722036
best_error: 6.366871987220359
best_error: 6.366871960700592
best_error: 6.228409569073147
best_error: 6.221404124323715
best_error: 6.221404124323714
best_error: 6.22140411850892
best_error: 5.9536303949024
best_error: 5.789945891626099
best_error: 5.733540506726362
best_error: 5.733540506726361
best_error: 5.515141797031038
best_error: 5.515141797031037
best_error: 4.916181100545946
best_error: 4.916181013665689
best_error: 4.886848893935186
best_error: 4.886848887145371
best_error: 4.882736014144608
best_error: 4.882736013899057
best_error: 4.882735994350232
best_error: 4.867843839114146
best_error: 4.867843838022042
best_error: 4.86784381292345
best_error: 4.864089887033176
best_error: 4.864089887033174
best_error: 4.862737996295278
best_error: 4.862737994670075
best_error: 4.862737966413119
best_error: 4.862371066164083
best_error: 4.862371064485224
best_error: 4.8623710362703205
best_error: 4.862290086542403
best_error: 4.845505430931573
best_error: 4.81870182996407
best_error: 4.804953034046759
best_error: 4.796479855819053
best_error: 4.7807686545446915
best_error: 4.78076865454469
best_error: 4.7698765114303265
best_error: 4.769876480256519
best_error: 4.705493261803439
best_error: 4.701520930066037
best_error: 4.70152075298611
best_error: 4.652796975501213
best_error: 4.652796972784372
best_error: 4.651695439032402
best_error: 4.6516954390324
best_error: 4.651695436541079
best_error: 4.651214050398552
best_error: 4.651214050398548
best_error: 4.6505680926721595
best_error: 4.650568021213852
best_error: 4.649889129483996
best_error: 4.649889129483991
best_error: 4.64971842507534
best_error: 4.649718425075339
best_error: 4.649718425075334
best_error: 4.649684495996982
best_error: 4.649684495996979
best_error: 4.649664455808225
best_error: 4.6496644558082245
best_error: 4.649664455808221
best_error: 4.649657450960859
best_error: 4.649657380076666
best_error: 4.649655248751355
best_error: 4.649655248751351
best_error: 4.6496324620389045
best_error: 4.649632462038897
best_error: 4.64961614230112
best_error: 4.649616142301119
best_error: 4.649616142301113
best_error: 4.6496062803649245
best_error: 4.649606280364919
best_error: 4.649599443039247
best_error: 4.649599443039246
best_error: 4.649599443039241
best_error: 4.649595086793872
best_error: 4.649595086793869
best_error: 4.64959219573465
best_error: 4.649592195734648
best_error: 4.649592195734646
best_error: 4.649590158463111
best_error: 4.649590158463108
best_error: 4.649588934642987
best_error: 4.649588934642981
best_error: 4.649587146152255
best_error: 4.649587146152252
best_error: 4.64958690444493
best_error: 4.649586904444922
best_error: 4.649586764296196
best_error: 4.649586764296189
best_error: 4.649586643478023
best_error: 4.649586587500625
best_error: 4.649586587500623
best_error: 4.649586493776786
best_error: 4.64958649377678
best_error: 4.649586487003325
best_error: 4.649586487003324
best_error: 4.64958648700332
best_error: 4.649586482732692
best_error: 4.649586482732689
best_error: 4.649586479436386
best_error: 4.6495864794363815
best_error: 4.649586477312306
best_error: 4.649586476647277
best_error: 4.6495864766472765
best_error: 4.649586476647274
best_error: 4.649586469639634
best_error: 4.649586469047038
