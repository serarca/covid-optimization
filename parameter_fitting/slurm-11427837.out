ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 20.56414381366389
best_error: 20.56414379577995
best_error: 20.564143768739342
best_error: 4.807599921335674
best_error: 4.80759992100531
best_error: 4.807599919892917
best_error: 4.807599918456037
best_error: 4.78482296979904
best_error: 4.784822968190778
best_error: 4.784822966922706
best_error: 4.687094547135815
best_error: 4.687094544756048
best_error: 4.68709454416352
best_error: 4.096086180707818
best_error: 4.096086165309477
best_error: 3.8881166190278162
best_error: 3.8881165857299176
best_error: 3.793749100025811
best_error: 3.7937490527663416
best_error: 3.626599989542925
best_error: 3.626599915365881
best_error: 3.451691495637441
best_error: 3.4516913920804297
best_error: 3.21845989306906
best_error: 3.218459749920346
best_error: 2.136679293949582
best_error: 2.136679011175471
best_error: 2.0411669866553313
best_error: 2.0411669457843256
best_error: 2.0187425426464363
best_error: 2.0187425263402154
best_error: 2.016695299175316
best_error: 2.0166952650924834
best_error: 2.0156901352486254
best_error: 2.0156901337764705
best_error: 2.0156901334361046
best_error: 2.015587711702984
best_error: 2.0155877110863902
best_error: 2.015587710423946
best_error: 2.0153451778469473
best_error: 2.015345169334432
best_error: 2.0148305753243614
best_error: 2.0148305544481477
best_error: 2.013343095277438
best_error: 2.0133430603913207
best_error: 2.007699972115983
best_error: 2.0076998885855555
best_error: 1.9991332199885847
best_error: 1.9991331066344917
best_error: 1.966066796932291
best_error: 1.9660666026992635
best_error: 1.9296720089542259
best_error: 1.9296717799182213
best_error: 1.9090655205998508
best_error: 1.9090653415352412
best_error: 1.8672870807759805
best_error: 1.8672869668348158
best_error: 1.8589689172196358
best_error: 1.8589688888790235
best_error: 1.8525623897861592
best_error: 1.8525623859935385
best_error: 1.8525140012511006
best_error: 1.8525140008794123
best_error: 1.8525140008492635
best_error: 1.8524901795493027
best_error: 1.852490179139834
best_error: 1.8505819623692799
best_error: 1.8505819610698224
best_error: 1.8444645062303477
best_error: 1.844464498096828
best_error: 1.8261520090664922
best_error: 1.8261519920569353
best_error: 1.8171909031498468
best_error: 1.817190878329783
best_error: 1.8064071739414826
best_error: 1.806407168415837
best_error: 1.802049206755931
best_error: 1.8020492001343151
best_error: 1.8013753864756785
best_error: 1.8013753863139084
best_error: 1.801375384429153
best_error: 1.8013753840984454
best_error: 1.8013753833720343
best_error: 1.8005276602016462
best_error: 1.8005276529661793
best_error: 1.7893538787643992
best_error: 1.7893538741516792
best_error: 1.7545669318115207
best_error: 1.7545667666666773
best_error: 1.7159919499077125
best_error: 1.7159918136226244
best_error: 1.6697660526605886
best_error: 1.6697660339633282
best_error: 1.642802060896088
best_error: 1.6428020497645925
best_error: 1.6402340239365056
best_error: 1.64023400126616
best_error: 1.5493593922281235
best_error: 1.5493592702342334
best_error: 1.5169988906614125
best_error: 1.5169988491335347
best_error: 1.5148518012710535
best_error: 1.514851787324113
best_error: 1.5137279914213648
best_error: 1.513727989930789
best_error: 1.511754751217034
best_error: 1.5117547392899204
best_error: 1.5079432414109601
best_error: 1.5079432108863577
best_error: 1.5023398098316068
best_error: 1.5023397729799688
best_error: 1.4866365783862452
best_error: 1.4866365137175594
best_error: 1.4601610972372308
best_error: 1.4601610786467811
best_error: 1.4394840230238635
best_error: 1.4394840024087738
best_error: 1.4360110586974486
best_error: 1.4360110488117936
best_error: 1.4350809605434067
best_error: 1.4350809532658808
best_error: 1.4350103697654517
best_error: 1.4350103520706292
best_error: 1.43468554567268
best_error: 1.4346855397198894
best_error: 1.4346497599491306
best_error: 1.4346497594450982
best_error: 1.4346497584260334
best_error: 1.4345874481092822
best_error: 1.4345874465607629
best_error: 1.4341240461444555
best_error: 1.4341240390118761
best_error: 1.433849120829583
best_error: 1.4338491105282805
best_error: 1.433257512805618
best_error: 1.4332575040741387
best_error: 1.4322801333978128
best_error: 1.432280126565074
best_error: 1.4313086920874452
best_error: 1.4313086888558835
best_error: 1.431050553391622
best_error: 1.4310505470231152
best_error: 1.4304037597027806
best_error: 1.4304037485219927
best_error: 1.4298630510981751
best_error: 1.4298630391709244
best_error: 1.429391691324307
best_error: 1.4293916867547145
best_error: 1.4292294286692007
best_error: 1.4292294219377297
best_error: 1.428872765781677
best_error: 1.4288727625205502
best_error: 1.4286603905113355
best_error: 1.4286603873670947
best_error: 1.4267849811855626
best_error: 1.4267849767731569
best_error: 1.4196740947983968
best_error: 1.4196740773467262
best_error: 1.4150868235641898
best_error: 1.4150868147205264
best_error: 1.4011614417529379
best_error: 1.4011614155371714
best_error: 1.3753897010924903
best_error: 1.3753896804823416
best_error: 1.3711261863799493
best_error: 1.3711261673352322
best_error: 1.3707671085277047
best_error: 1.3707671050807577
best_error: 1.3707671033554976
best_error: 1.370766848281304
best_error: 1.3707668448291068
best_error: 1.3707668431088544
best_error: 1.3707668190153521
best_error: 1.370766815413253
best_error: 1.3707668138139342
best_error: 1.3508165182863494
best_error: 1.3508165127766985
best_error: 1.3475142028962248
best_error: 1.3475141913669204
best_error: 1.347514158970652
best_error: 1.3451553659512436
best_error: 1.3451553615701004
best_error: 1.3418707379152073
best_error: 1.3418707346770666
best_error: 1.3406044494387586
best_error: 1.3406044451829962
best_error: 1.3389970340043313
best_error: 1.338997030108075
best_error: 1.3364009911078272
best_error: 1.336400988890143
best_error: 1.33510464081414
best_error: 1.3351046365760397
best_error: 1.3351046358642924
best_error: 1.334308836030435
best_error: 1.3343088332623045
best_error: 1.332309079155882
best_error: 1.3323090745569686
best_error: 1.3323090743411146
best_error: 1.3270462806814107
best_error: 1.3270462799931781
best_error: 1.327046279380972
best_error: 1.3237429270755487
best_error: 1.323742925978826
best_error: 1.3221034796380755
best_error: 1.322103478076314
best_error: 1.3210061625344187
best_error: 1.3210061619918716
best_error: 1.3205886244323581
best_error: 1.320588624067166
best_error: 1.3205108025587728
best_error: 1.3205108023811953
best_error: 1.3199789521174434
best_error: 1.3199789520343015
best_error: 1.3189402417968055
best_error: 1.3189402416538976
best_error: 1.3189082301823822
best_error: 1.318134053111994
best_error: 1.3181340525929601
best_error: 1.3178457336184346
best_error: 1.3178457330972375
best_error: 1.3175821061216564
best_error: 1.3175821055637065
best_error: 1.3173901678149906
best_error: 1.3173901602620892
best_error: 1.3171961068960016
best_error: 1.3171961068543157
best_error: 1.3171494341279808
best_error: 1.3171494339670493
best_error: 1.3171017854685667
best_error: 1.3171017852966522
best_error: 1.3170688197455633
best_error: 1.3170688196163538
best_error: 1.317050800961623
best_error: 1.31705079858056
best_error: 1.3170398813809099
best_error: 1.317039881335724
best_error: 1.317037971684076
best_error: 1.317037971654034
best_error: 1.3170367492179051
best_error: 1.3170367482398218
best_error: 1.3170356522639366
best_error: 1.31703565226214
