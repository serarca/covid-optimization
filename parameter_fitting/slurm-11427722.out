ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.778355926966366
best_error: 25.778355719469634
best_error: 5.020830043124892
best_error: 5.020830042802671
best_error: 5.020740944679747
best_error: 5.020740944657682
best_error: 5.020740944509573
best_error: 5.020383210816662
best_error: 5.020383210794335
best_error: 5.020383210645965
best_error: 5.018930442494099
best_error: 5.018930442470692
best_error: 5.01893044232127
best_error: 5.012742758675774
best_error: 5.012742758647589
best_error: 5.01274275849374
best_error: 4.979339884531949
best_error: 4.979339884469388
best_error: 4.979339884295987
best_error: 4.9382012087725755
best_error: 4.938201208618955
best_error: 4.938201208458402
best_error: 4.805720395773304
best_error: 4.805720392712647
best_error: 4.778463032176422
best_error: 4.778463027278029
best_error: 4.753849884013253
best_error: 4.753849876966553
best_error: 3.6457220785000475
best_error: 3.6457218253577683
best_error: 3.2566630152691243
best_error: 3.256662714401366
best_error: 2.981801522806799
best_error: 2.98180116150141
best_error: 2.82536780954164
best_error: 2.8253677103612715
best_error: 2.7903305331499917
best_error: 2.7903305046855866
best_error: 2.775380303528306
best_error: 2.7753799496520783
best_error: 2.697429781060128
best_error: 2.6974296063096563
best_error: 2.6754594392274775
best_error: 2.675459379206473
best_error: 2.3753780672095406
best_error: 2.3753779808795814
best_error: 2.3753775795502743
best_error: 2.3687200816474787
best_error: 2.368719997624312
best_error: 2.368719948352039
best_error: 2.3421514994598507
best_error: 2.342151417386395
best_error: 2.342151292006972
best_error: 2.328098628591754
best_error: 2.3280985802960057
best_error: 2.3280982379769166
best_error: 2.3115477482964346
best_error: 2.3115477461580327
best_error: 2.311547733788758
best_error: 2.2891592969466203
best_error: 2.2891592102774143
best_error: 2.2726582860997437
best_error: 2.2726582849291437
best_error: 2.2726582738778296
best_error: 2.2715937049262935
best_error: 2.2715936489288646
best_error: 2.2683759352396318
best_error: 2.2683759312581073
best_error: 2.268375325557326
best_error: 2.2683418972022364
best_error: 2.2683418931013466
best_error: 2.268341790555439
best_error: 2.268330933804967
best_error: 2.26833093058937
best_error: 2.268330870318925
best_error: 2.268317995572316
best_error: 2.268317995254914
best_error: 2.2683179950092236
best_error: 2.2683179107767066
best_error: 2.26830664897544
best_error: 2.2683066488363592
best_error: 2.2683065718367605
best_error: 2.268252582954842
best_error: 2.26825258187908
best_error: 2.268252528396001
best_error: 2.2682349476457992
best_error: 2.268234940205565
best_error: 2.268234915879317
best_error: 2.267819200605463
best_error: 2.2678191917678734
best_error: 2.26781918533004
best_error: 2.2660280183117485
best_error: 2.266028016631303
best_error: 2.266028014391524
best_error: 2.2660280075011783
best_error: 2.259785331161163
best_error: 2.2597853308152174
best_error: 2.259785319023622
best_error: 2.2386252970527063
best_error: 2.238625293475906
best_error: 2.2386252843510084
best_error: 2.1536458082043093
best_error: 2.1536458026512166
best_error: 2.153645796064245
best_error: 2.0169713395957376
best_error: 2.0169708526129253
best_error: 2.0169703922586346
best_error: 1.9828282712724756
best_error: 1.9828282631563872
best_error: 1.982828262940568
best_error: 1.9610014279602999
best_error: 1.9610014203975725
best_error: 1.9610014195774306
best_error: 1.9510030651152581
best_error: 1.9510030641281098
best_error: 1.951003058746211
best_error: 1.9510030562066774
best_error: 1.930818592241602
best_error: 1.9308184914035917
best_error: 1.8747449542329746
best_error: 1.8747445380252206
best_error: 1.7485773926185388
best_error: 1.748577004216778
best_error: 1.6847643572449535
best_error: 1.6847643297187642
best_error: 1.6745707141157788
best_error: 1.6745706934705589
best_error: 1.6677358255313508
best_error: 1.6677356026018304
best_error: 1.6605944133414452
best_error: 1.6605944102443255
best_error: 1.6557202874958385
best_error: 1.655720270607023
best_error: 1.6551821133977171
best_error: 1.6551821071989457
best_error: 1.6548084237663732
best_error: 1.6548084227577309
best_error: 1.6536277867870666
best_error: 1.6536277835451267
best_error: 1.6469994738608722
best_error: 1.6469994724303563
best_error: 1.6118980890312715
best_error: 1.6118978660169438
best_error: 1.6118974970795248
best_error: 1.581005748633298
best_error: 1.5810057173052774
best_error: 1.5739115197417206
best_error: 1.5739114500626619
best_error: 1.5568820912385724
best_error: 1.5568820154797274
best_error: 1.5544114657127333
best_error: 1.554411392708147
best_error: 1.5460145934459462
best_error: 1.5460145434468993
best_error: 1.541829856928801
best_error: 1.5418298448845897
best_error: 1.5140184554342155
best_error: 1.5140183397252789
best_error: 1.5098704131489114
best_error: 1.5098703921062855
best_error: 1.5098703885924103
best_error: 1.5066216051626136
best_error: 1.5066215827136
best_error: 1.4956957616579118
best_error: 1.4956957281062042
best_error: 1.4867811581131145
best_error: 1.4867811438431806
best_error: 1.4829772695851409
best_error: 1.4829772081759347
best_error: 1.4825169888423333
best_error: 1.482516917469458
best_error: 1.4809016223837603
best_error: 1.480901603998923
best_error: 1.4806460099933283
best_error: 1.480645992864142
best_error: 1.4803457100470512
best_error: 1.4803456992254305
best_error: 1.4802947182522723
best_error: 1.480294714083531
best_error: 1.480285966314635
best_error: 1.4802859656992835
best_error: 1.4802859655112461
best_error: 1.480285363305467
best_error: 1.480285362595034
best_error: 1.4802853624992454
best_error: 1.480285201203092
best_error: 1.4802852003294222
best_error: 1.4802850966319039
best_error: 1.4802850954082754
best_error: 1.480284879614413
best_error: 1.4802848786391545
best_error: 1.480283984266479
best_error: 1.4802839832619832
best_error: 1.4802808013964353
best_error: 1.4802808005267434
best_error: 1.4802647090887482
best_error: 1.4802647062704128
best_error: 1.4802484577251689
best_error: 1.480248453525184
best_error: 1.480171758400101
best_error: 1.480171736565344
best_error: 1.4800265362291487
best_error: 1.4800265171939504
best_error: 1.478172889583353
best_error: 1.4781728645853605
best_error: 1.4748367659916277
best_error: 1.4748367106781215
best_error: 1.4700628617897533
best_error: 1.4700627933288826
best_error: 1.4625523603207835
best_error: 1.4625522591367912
best_error: 1.4625504852932358
best_error: 1.4515828168249438
best_error: 1.4515827094968348
best_error: 1.4515820817203826
best_error: 1.449686782369346
best_error: 1.4496865681406905
best_error: 1.4496850732763524
best_error: 1.4462471985283971
best_error: 1.4462469964469837
best_error: 1.442399812900738
best_error: 1.4423996916798314
best_error: 1.4321253643449916
best_error: 1.4321252549667927
best_error: 1.4320337373750176
best_error: 1.4320336283452164
best_error: 1.4199515675557364
best_error: 1.419951548035082
best_error: 1.419941210898839
best_error: 1.4199411912545579
best_error: 1.419750769657818
best_error: 1.419750728101094
best_error: 1.4197385698038196
best_error: 1.4197385287060345
best_error: 1.4196898476438766
best_error: 1.4196898069818709
best_error: 1.4194930911605557
best_error: 1.4194930531669498
best_error: 1.418865430384971
best_error: 1.418865400339985
best_error: 1.4188639049781935
best_error: 1.4188638743779953
best_error: 1.4188413207283574
best_error: 1.4188412809691189
best_error: 1.4186688610907165
best_error: 1.418668825145463
best_error: 1.4186686769003751
best_error: 1.418668640954678
best_error: 1.4186633058800402
best_error: 1.4186632654344467
best_error: 1.4180685477631394
best_error: 1.418068522570813
best_error: 1.418065712324215
best_error: 1.4180656869163937
best_error: 1.4179381608122297
best_error: 1.4179381233359123
best_error: 1.4174384041753842
best_error: 1.4174383791678486
best_error: 1.4174366944163577
best_error: 1.4174366693623333
best_error: 1.4173373885727947
best_error: 1.417337354000171
best_error: 1.4062279323551017
best_error: 1.4062278628217322
best_error: 1.4024746632157903
best_error: 1.402474656799507
best_error: 1.4024746522050597
best_error: 1.399453859248721
best_error: 1.3994538297982648
best_error: 1.398047080029883
best_error: 1.3980470542836576
best_error: 1.3978366435081977
best_error: 1.3978366231005757
best_error: 1.3977215911877994
best_error: 1.397721585862589
best_error: 1.3977121489235527
best_error: 1.3977121443466702
best_error: 1.3977121420613554
best_error: 1.3976517331404477
best_error: 1.3976517146004175
best_error: 1.3975836086970224
best_error: 1.3975835862958508
best_error: 1.3972455900398928
best_error: 1.3972455434292042
best_error: 1.3968568741202043
best_error: 1.3968568301838125
best_error: 1.3960533475198273
best_error: 1.3960533367339207
best_error: 1.3960003145302144
best_error: 1.3960003124179963
best_error: 1.3959914392675534
best_error: 1.3959914385763712
best_error: 1.395991438490471
best_error: 1.395991259092692
best_error: 1.3959912584033063
best_error: 1.3959912583067515
