ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.666764282458779
best_error: 12.66676426682
best_error: 12.666764262866138
best_error: 10.778984100810714
best_error: 10.778983992260905
best_error: 9.119648570223877
best_error: 9.119648410211434
best_error: 8.924552740874486
best_error: 8.924552664958535
best_error: 8.910410959992513
best_error: 8.910410811841286
best_error: 8.890659624675084
best_error: 8.890659511267156
best_error: 8.346691635001397
best_error: 8.346691527765852
best_error: 5.341246511764108
best_error: 5.341246324167392
best_error: 5.202801981234151
best_error: 5.202801713704151
best_error: 5.092889022750103
best_error: 5.092888755056611
best_error: 5.0851255529385355
best_error: 5.0851252856846525
best_error: 5.080852595962355
best_error: 5.080852331879515
best_error: 5.078510533680037
best_error: 5.078510270047902
best_error: 5.077163332826251
best_error: 5.07716307088028
best_error: 5.076454195082093
best_error: 5.076453933079565
best_error: 5.076111144414603
best_error: 5.076110882384723
best_error: 5.075916950729516
best_error: 5.075916688684158
best_error: 5.075804393659379
best_error: 5.075804131605045
best_error: 5.075745989440772
best_error: 5.075745727381778
best_error: 5.075707727529693
best_error: 5.07570746546765
best_error: 5.075689458061321
best_error: 5.0756891959978
best_error: 5.07567620851283
best_error: 5.075675946448219
best_error: 5.0756705547233985
best_error: 5.075670292658332
best_error: 5.07567000541211
best_error: 5.075669743347007
best_error: 5.075669503320532
best_error: 5.075669421891394
best_error: 5.075669419927896
best_error: 5.075669386841701
best_error: 5.075669363923639
best_error: 5.075669359828817
best_error: 5.075669337710966
best_error: 5.075669335747447
best_error: 5.075669332790202
best_error: 5.075669329030452
best_error: 5.075669323571076
best_error: 5.07566931184275
best_error: 5.0747656112254
best_error: 5.074765342890936
best_error: 5.072305502794438
best_error: 5.072305231329418
best_error: 5.061612769827368
best_error: 5.061612472075208
best_error: 5.059622539327032
best_error: 5.0596225278037785
best_error: 5.058310938822716
best_error: 5.058310926924953
best_error: 5.055650121561541
best_error: 5.055649814014947
best_error: 5.054718955210767
best_error: 5.05471864824053
best_error: 5.054693953166554
best_error: 5.054693940524429
best_error: 5.054611744443534
best_error: 5.054611731823616
best_error: 5.054610413019451
best_error: 5.05461010610575
best_error: 5.054347768627975
best_error: 5.054347755979919
best_error: 5.054266819967314
best_error: 5.05426680731802
best_error: 5.053992248328526
best_error: 5.053991936050036
best_error: 5.053833627987595
best_error: 5.053833615339795
best_error: 5.053540098306417
best_error: 5.05354008565428
best_error: 5.052714285327266
best_error: 5.052714272718509
best_error: 5.052536450574651
best_error: 5.052536132957375
best_error: 5.048935602861228
best_error: 5.048935590249645
best_error: 5.017394321603366
best_error: 5.017394309872616
best_error: 4.993874263613137
best_error: 4.993873870225729
best_error: 4.980463284930994
best_error: 4.980462836173212
best_error: 4.93530496784105
best_error: 4.9353045548575185
best_error: 4.931034100145941
best_error: 4.931033686839498
best_error: 4.914256754688566
best_error: 4.914256355085601
best_error: 4.912615593966365
best_error: 4.912615194238881
best_error: 4.9118168546647105
best_error: 4.911816454876641
best_error: 4.911773400319115
best_error: 4.911773000526214
best_error: 4.9117702964560275
best_error: 4.911769896662788
best_error: 4.830677339177484
best_error: 4.830676949439235
best_error: 4.8008835878444724
best_error: 4.800883226061991
best_error: 4.785435092970677
best_error: 4.785434731511739
best_error: 4.781515030812558
best_error: 4.781514669051113
best_error: 4.781459531908862
best_error: 4.781459520416675
best_error: 4.769765152953331
best_error: 4.769764798762536
best_error: 4.757585110169859
best_error: 4.757584748330145
best_error: 4.746720313506469
best_error: 4.746719912962186
best_error: 4.732638475104753
best_error: 4.732638077425492
best_error: 4.717657554763535
best_error: 4.71765716411031
best_error: 4.71748709800706
best_error: 4.71748708728526
best_error: 4.717487044978281
best_error: 4.715547702512497
best_error: 4.715547313228055
best_error: 4.715457680538281
best_error: 4.715457669830604
best_error: 4.715457627524529
best_error: 4.715449577140195
best_error: 4.7154491878505285
best_error: 4.7154473397716306
best_error: 4.715447301844753
best_error: 4.715447260852591
best_error: 4.715447077964356
best_error: 4.715447048837438
best_error: 4.71544704461396
best_error: 4.71544703390626
best_error: 4.715446991600297
best_error: 4.7154469497856475
best_error: 4.702471524057107
best_error: 4.702471513644907
best_error: 4.7023810007131175
best_error: 4.702380652298782
best_error: 4.698393839104206
best_error: 4.698393508522326
best_error: 4.6982883467041034
best_error: 4.6982880161999905
best_error: 4.698287572230694
best_error: 4.69828756215996
best_error: 4.698287337377069
best_error: 4.698287154973162
best_error: 4.698287153314494
best_error: 4.698287152014132
best_error: 4.69828714735367
