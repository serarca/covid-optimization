ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.164610039682987
best_error: 19.16460974346151
best_error: 4.217377112463004
best_error: 4.2173771103539295
best_error: 4.215560260327914
best_error: 4.215560260295582
best_error: 4.215560259844934
best_error: 4.208175344079773
best_error: 4.208175344045995
best_error: 4.208175343591501
best_error: 4.176624031227447
best_error: 4.176624031187001
best_error: 4.176624030716255
best_error: 4.002090851106962
best_error: 4.002090851007177
best_error: 4.002090850456608
best_error: 3.8477944924837346
best_error: 3.8477944922750256
best_error: 3.847794491687168
best_error: 3.6760915108133134
best_error: 3.6760915103428062
best_error: 3.676091509805272
best_error: 3.437172058167263
best_error: 3.4371720567996955
best_error: 3.4371720567396333
best_error: 3.2592703071330438
best_error: 3.2592703046517797
best_error: 3.2339391680561915
best_error: 3.23393916769223
best_error: 3.233939165834577
best_error: 3.2336545126415563
best_error: 3.233654511161784
best_error: 3.2336545104100947
best_error: 3.188842633552585
best_error: 3.1888426315146865
best_error: 3.188842628199979
best_error: 2.7626919003162467
best_error: 2.762691898199039
best_error: 2.7626918352985435
best_error: 2.723087036309561
best_error: 2.72308696225684
best_error: 2.6766501252335253
best_error: 2.676650041861552
best_error: 2.463879581920816
best_error: 2.463879456080333
best_error: 2.3250802717024173
best_error: 2.3250801185076813
best_error: 2.2398936092168684
best_error: 2.239893599397379
best_error: 2.2398935422861954
best_error: 2.234537828520424
best_error: 2.2345377809947733
best_error: 2.1327300822954087
best_error: 2.1327299384055993
best_error: 1.9737007513736577
best_error: 1.97370066987764
best_error: 1.783879924172241
best_error: 1.783879722353453
best_error: 1.7561082525079652
best_error: 1.7561082021213483
best_error: 1.7221768150260817
best_error: 1.7221767200783031
best_error: 1.705394723615881
best_error: 1.7053946974761538
best_error: 1.6980719780565214
best_error: 1.698071968536434
best_error: 1.6840473532786233
best_error: 1.684047351487724
best_error: 1.6739867105668276
best_error: 1.6739866664166423
best_error: 1.6582227383099728
best_error: 1.6582227006029857
best_error: 1.6495512647241346
best_error: 1.6495511588687433
best_error: 1.641349720463831
best_error: 1.6413497130895491
best_error: 1.639619181527826
best_error: 1.6396191539239726
best_error: 1.6388047580700271
best_error: 1.6388047443450104
best_error: 1.6375859208759196
best_error: 1.6375859170663327
best_error: 1.6370762847673652
best_error: 1.6370762798638274
best_error: 1.631798362272624
best_error: 1.6317983558278988
best_error: 1.587247363784273
best_error: 1.5872471957072174
best_error: 1.5455478086147638
best_error: 1.545547772154124
best_error: 1.5261361679934753
best_error: 1.5261361416315276
best_error: 1.4729737662420894
best_error: 1.4729737629171473
best_error: 1.4703555842746556
best_error: 1.4703555842251876
best_error: 1.4703555840747158
best_error: 1.4703555831239359
best_error: 1.468453761063679
best_error: 1.4684537388925596
best_error: 1.4663636072801942
best_error: 1.466363589911828
best_error: 1.461459148483633
best_error: 1.461459139436946
best_error: 1.4430924183583411
best_error: 1.4430924109293535
best_error: 1.4409527919599256
best_error: 1.4409527885873152
best_error: 1.4394436677485094
best_error: 1.439443662159995
best_error: 1.4390706819004067
best_error: 1.439070663620336
best_error: 1.4390264095769048
best_error: 1.4390263876557554
best_error: 1.4390186695260059
best_error: 1.4390186459017504
best_error: 1.4390181986822639
best_error: 1.4390181749432296
best_error: 1.4390163406738303
best_error: 1.4390163154871964
best_error: 1.4385655713385832
best_error: 1.4385655480962072
best_error: 1.438557554322507
best_error: 1.4385575301226496
best_error: 1.4378379658853162
best_error: 1.4378379638530714
best_error: 1.4377283235421603
best_error: 1.437728317342885
best_error: 1.437584005660945
best_error: 1.4375840019849946
best_error: 1.4370839149198267
best_error: 1.4370839144470995
best_error: 1.4370839129783906
best_error: 1.4353753596474965
best_error: 1.4353753569904963
best_error: 1.433168814692883
best_error: 1.4331688047918805
best_error: 1.4309087250126051
best_error: 1.4309087084661807
best_error: 1.4282207024936628
best_error: 1.428220690134561
best_error: 1.425542887858782
best_error: 1.4255428865749495
best_error: 1.4253244665810123
best_error: 1.42532446148321
best_error: 1.4250756094121075
best_error: 1.4250756094105999
best_error: 1.4250756062040406
best_error: 1.4246460961426992
best_error: 1.424646085839018
best_error: 1.4213643692050058
best_error: 1.4213643311313628
best_error: 1.415086069160489
best_error: 1.415085987604493
best_error: 1.4051501928424799
best_error: 1.4051500865011135
best_error: 1.3906933283820855
best_error: 1.3906932067515536
best_error: 1.368558616836292
best_error: 1.368558494427483
best_error: 1.359026086897722
best_error: 1.3590260114852988
best_error: 1.351271482294612
best_error: 1.3512714534684218
best_error: 1.3493648821827384
best_error: 1.349364879969249
best_error: 1.3489776637298843
best_error: 1.348977661042647
best_error: 1.3477723154450183
best_error: 1.347772310234253
best_error: 1.3430338001941717
best_error: 1.343033776120247
best_error: 1.3341308822346098
best_error: 1.334130841233401
best_error: 1.329981599827924
best_error: 1.329981522439019
best_error: 1.319734297265686
best_error: 1.3197342328454646
best_error: 1.2980975277454463
best_error: 1.2980974573766735
best_error: 1.280745325705418
best_error: 1.2807452998989965
best_error: 1.2727093069634088
best_error: 1.2727092948382412
best_error: 1.262754762035688
best_error: 1.2627547563700163
best_error: 1.2597268939823414
best_error: 1.2597268937546182
best_error: 1.259726893154736
best_error: 1.2597268915231257
best_error: 1.2553335932892207
best_error: 1.255333565232725
best_error: 1.250300360347057
best_error: 1.250300305739447
best_error: 1.2380029946633504
best_error: 1.2380029413295512
best_error: 1.2198490400283644
best_error: 1.219849036484466
best_error: 1.2158652098487965
best_error: 1.2158651863546812
best_error: 1.1977805137149804
best_error: 1.1977804207100784
best_error: 1.1826376570780832
best_error: 1.1826376564655512
best_error: 1.1826376557604763
best_error: 1.1826376546962298
best_error: 1.1640922167061627
best_error: 1.1640921998211535
best_error: 1.1532348543899356
best_error: 1.1532348537945332
best_error: 1.153234851887531
best_error: 1.1326287824695749
best_error: 1.1326287196698435
best_error: 1.1305311357604275
best_error: 1.1305311192008203
best_error: 1.1301466475363469
best_error: 1.1301466475247874
best_error: 1.1301466475240425
best_error: 1.1301466474824047
best_error: 1.13014664742549
best_error: 1.130074098010856
best_error: 1.130074095193587
best_error: 1.1300453504827783
best_error: 1.1300453489792524
best_error: 1.1300298724231264
best_error: 1.1300298712377055
best_error: 1.1300209645783732
best_error: 1.1300209638527
best_error: 1.1300063960074822
best_error: 1.1300063946265828
best_error: 1.129981303016491
best_error: 1.1299813020562077
best_error: 1.1298300765026699
best_error: 1.1298300702619186
best_error: 1.1297704266174051
best_error: 1.1297704252563618
best_error: 1.1297288483568702
best_error: 1.1297288467562079
best_error: 1.1296839716563396
best_error: 1.1296839713780902
best_error: 1.1296839687143565
best_error: 1.129606632972379
best_error: 1.1296066284731214
best_error: 1.1295159022535588
best_error: 1.1295159004844895
best_error: 1.129323393128394
best_error: 1.1293233931115048
best_error: 1.1293233929185726
best_error: 1.1290954316210478
best_error: 1.1290954287013073
best_error: 1.128897650391601
best_error: 1.1288976478313653
best_error: 1.1286914262390906
best_error: 1.1286914240012411
best_error: 1.1285876742305605
best_error: 1.1285876596853377
best_error: 1.128406036595901
best_error: 1.1284060322523972
best_error: 1.1283129408455552
best_error: 1.1283129360509812
best_error: 1.1280584940164007
best_error: 1.128058489095041
best_error: 1.1280530564571338
best_error: 1.128053050193566
best_error: 1.1278793017859465
best_error: 1.1278792983719494
best_error: 1.1276078843189055
best_error: 1.127607875230065
