ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.984189288465938
best_error: 22.98418924470237
best_error: 22.98418923130298
best_error: 18.214998974166924
best_error: 18.214998784357636
best_error: 13.403758564932973
best_error: 13.403758307025607
best_error: 10.261922593437882
best_error: 10.261922568981829
best_error: 9.705719130308799
best_error: 9.705719091661873
best_error: 9.279989178980573
best_error: 9.279989137369947
best_error: 8.016127092341252
best_error: 8.016127091052981
best_error: 8.009107511025677
best_error: 8.009107509203513
best_error: 8.009107508683334
best_error: 7.987266316503663
best_error: 7.987266314551956
best_error: 7.987266314152806
best_error: 7.895757713100643
best_error: 7.8957577068706986
best_error: 7.704784505430964
best_error: 7.704784411379506
best_error: 7.122793605341541
best_error: 7.122793544384069
best_error: 3.485158220052577
best_error: 3.4851580001523614
best_error: 3.367325152001938
best_error: 3.367324607914786
best_error: 2.967529910886269
best_error: 2.967529786869044
best_error: 2.9555040557686345
best_error: 2.9555040424049377
best_error: 2.941715956366027
best_error: 2.9417158574564324
best_error: 2.9379482107026713
best_error: 2.9379481873384323
best_error: 2.937450989610046
best_error: 2.9374509835101166
best_error: 2.9374509832756592
best_error: 2.9372957085243514
best_error: 2.937295708328285
best_error: 2.937295699982737
best_error: 2.937004239939715
best_error: 2.937004239738439
best_error: 2.937004231371171
best_error: 2.935839741507797
best_error: 2.93583974129964
best_error: 2.935839732913286
best_error: 2.93121270949004
best_error: 2.9312127091961315
best_error: 2.931212700497162
best_error: 2.9138907273240284
best_error: 2.913890666184689
best_error: 2.913335202601559
best_error: 2.9133351770003197
best_error: 2.8522151689172985
best_error: 2.8522151155208455
best_error: 2.851849796915245
best_error: 2.8518497834276406
best_error: 2.8232211033873953
best_error: 2.8232210994793565
best_error: 2.823221098236751
best_error: 2.8090755238061598
best_error: 2.8090755028040757
best_error: 2.808525776830061
best_error: 2.8085257693759194
best_error: 2.7926104313543703
best_error: 2.7926104310091113
best_error: 2.792610426398651
best_error: 2.7913575646249664
best_error: 2.791357564111791
best_error: 2.791357563539656
best_error: 2.7913575596925773
best_error: 2.7901748012356826
best_error: 2.7901747817980875
best_error: 2.766927165652636
best_error: 2.76692710208866
best_error: 2.724575547884504
best_error: 2.7245751916280097
best_error: 2.7243630399214926
best_error: 2.7122660578771005
best_error: 2.712266025375848
best_error: 2.7079135876288665
best_error: 2.7079133866487153
best_error: 2.7067831643009685
best_error: 2.706783077155697
best_error: 2.6846954605521383
best_error: 2.684695379564819
best_error: 2.6800757343990087
best_error: 2.680075664427587
best_error: 2.6770785400018435
best_error: 2.6770785043202547
best_error: 2.6767765077548353
best_error: 2.6767765003488755
best_error: 2.6767404710855454
best_error: 2.6767404661663776
best_error: 2.676740465919644
best_error: 2.6767061849766174
best_error: 2.6767061817573623
best_error: 2.676706179808915
best_error: 2.676649204632382
best_error: 2.676649204317483
best_error: 2.676649203742506
best_error: 2.6766491994624984
best_error: 2.676511624195949
best_error: 2.6765116215664393
best_error: 2.676511619022773
best_error: 2.6760056379978563
best_error: 2.6760056373188412
best_error: 2.676005632818933
best_error: 2.6752592428135653
best_error: 2.675259242651429
best_error: 2.6752592420337997
best_error: 2.6752592376326887
best_error: 2.6727348199689835
best_error: 2.672734813511085
best_error: 2.6562430071749996
best_error: 2.656242999689832
best_error: 2.6473308812455576
best_error: 2.647330656169572
best_error: 2.6471802951213466
best_error: 2.6029401113826163
best_error: 2.602940110431463
best_error: 2.6029401097179847
best_error: 2.6029401060329076
best_error: 2.558818115828489
best_error: 2.558818009789826
best_error: 2.5587174103739554
best_error: 2.558417767430314
best_error: 2.5584177640671695
best_error: 2.5584177619747015
best_error: 2.5411703314311653
best_error: 2.5411702274739243
best_error: 2.5252878746945426
best_error: 2.5252877732001395
best_error: 2.486086841685518
best_error: 2.4860867531163495
best_error: 2.380995965361002
best_error: 2.380995940132376
best_error: 2.368307954479191
best_error: 2.3683078441955128
best_error: 2.3554164820223167
best_error: 2.355416408392187
best_error: 2.312286168771864
best_error: 2.3122404869338435
best_error: 2.3114226429970803
best_error: 2.3114159921341737
best_error: 2.31084886823066
best_error: 2.3108488449959665
best_error: 2.2669777248092466
best_error: 2.266977709329848
best_error: 2.208098208564549
best_error: 2.2080981346561797
best_error: 2.208036874185245
best_error: 2.2030249269823776
best_error: 2.20302484658408
best_error: 2.1654929671231633
best_error: 2.1654928898451646
best_error: 2.1445682570856066
best_error: 2.1445682560986623
best_error: 2.144566414915915
best_error: 2.1396031179603416
best_error: 2.139603117656003
best_error: 2.139603115995827
best_error: 2.139295545120437
best_error: 2.1392954286845223
best_error: 2.136176851654419
best_error: 2.1361767903162887
best_error: 2.131995136950842
best_error: 2.1319951051061246
best_error: 2.1299138695009727
best_error: 2.129913862821266
best_error: 2.125415499820594
best_error: 2.1254154772452396
best_error: 2.1253922012969455
best_error: 2.1218435014799484
best_error: 2.1218435011505807
best_error: 2.1183273995414256
best_error: 2.1183273992369616
best_error: 2.118327398465989
best_error: 2.107798678313773
best_error: 2.107798678094668
best_error: 2.107798675196316
best_error: 2.103790411989846
best_error: 2.1037903902728843
best_error: 2.103102616317997
best_error: 2.103102564971333
best_error: 2.101936662507424
best_error: 2.101936612499085
best_error: 2.0999644692125834
best_error: 2.0999644485687377
best_error: 2.0996666123511556
best_error: 2.0996666106229442
best_error: 2.0996473116286105
best_error: 2.0996473071644677
best_error: 2.0995956240681424
best_error: 2.099595611494136
best_error: 2.099515258464217
best_error: 2.099515241896125
best_error: 2.099273945736384
best_error: 2.099273915404248
best_error: 2.098298984229766
best_error: 2.09829893468195
best_error: 2.0934317496579897
best_error: 2.0934316744299495
best_error: 2.0915801865704484
best_error: 2.0880834589118815
best_error: 2.0880834588855124
best_error: 2.0874959429244178
best_error: 2.0874386660678383
best_error: 2.0874386631018704
best_error: 2.0874297749242823
best_error: 2.087429771827696
best_error: 2.0874262084947683
best_error: 2.087426207913299
best_error: 2.087425780590725
best_error: 2.087425780575573
best_error: 2.087425780388979
best_error: 2.087425780375283
