ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 15.096892244928753
best_error: 15.096892236964731
best_error: 15.09689218526217
best_error: 9.11817401653322
best_error: 9.118174005139753
best_error: 9.051511008935863
best_error: 9.051510979726121
best_error: 7.3410755179435485
best_error: 7.341075517935091
best_error: 7.34107550504556
best_error: 6.335047215630896
best_error: 6.33504716960376
best_error: 5.536713186400766
best_error: 5.536713171092046
best_error: 5.5367131689989915
best_error: 5.516142445226917
best_error: 5.516142441287049
best_error: 5.516142428456943
best_error: 5.477883484099461
best_error: 5.477883478950689
best_error: 5.477883478947605
best_error: 5.477883466929125
best_error: 5.45542801808998
best_error: 5.4554280105874575
best_error: 5.455428000631976
best_error: 5.251839989062125
best_error: 5.251839968798125
best_error: 5.215047405291969
best_error: 5.215047387739879
best_error: 5.192585542878092
best_error: 5.19258491535439
best_error: 5.191568507774585
best_error: 5.1915684916145395
best_error: 5.191452559249556
best_error: 5.191452543090984
best_error: 5.191436542275679
best_error: 5.1914365261173305
best_error: 5.191429902680072
best_error: 5.191429886521817
best_error: 5.191426917266861
best_error: 5.191426901108614
best_error: 5.191426573185307
best_error: 5.191426556101768
best_error: 5.191426539943525
best_error: 5.191426520771743
best_error: 5.191426518057698
best_error: 5.190130823999471
best_error: 5.190130193399673
best_error: 5.183842225695495
best_error: 5.183841937417105
best_error: 5.182923178131228
best_error: 5.182923170067682
best_error: 5.182923158024031
best_error: 5.181639376806749
best_error: 5.181639093007145
best_error: 5.180865845438056
best_error: 5.180865565653404
best_error: 5.1808508418693
best_error: 5.180850833015498
best_error: 5.180850821717935
best_error: 5.18056528661236
best_error: 5.180564641089324
best_error: 5.1797614343730105
best_error: 5.179761434265293
best_error: 5.1795798231014265
best_error: 5.179579544884251
best_error: 5.179279387021074
best_error: 5.1792793868873614
best_error: 5.178745195033616
best_error: 5.178745194865291
best_error: 5.178723379774059
best_error: 5.178723107731404
best_error: 5.178397573488665
best_error: 5.1783973014164015
best_error: 5.178251615043091
best_error: 5.178251614859638
best_error: 5.178251588839056
best_error: 5.17824972717195
best_error: 5.1782494529497995
best_error: 5.1781964189585725
best_error: 5.178196140568911
best_error: 5.1781847869118565
best_error: 5.178184512160728
best_error: 5.17818431029438
best_error: 5.178184035543238
best_error: 5.178184031433567
best_error: 5.17818257809285
best_error: 5.178182303317625
best_error: 5.178181876447039
best_error: 5.178181601660604
best_error: 5.178181097781243
best_error: 5.178180822982332
best_error: 5.178180671266896
best_error: 5.178180396461145
best_error: 5.1781802027911175
best_error: 5.178180160648279
best_error: 5.1781801337370075
best_error: 5.178180113649713
best_error: 5.17818010257343
best_error: 5.17818009536457
best_error: 5.178180090529084
best_error: 5.178180087227272
best_error: 5.178180085051617
best_error: 5.178180083657972
best_error: 5.178175116958299
best_error: 5.178174840410083
best_error: 5.178173715334149
best_error: 5.178173438785796
best_error: 5.178173174959207
best_error: 5.17817303952118
best_error: 5.17814043273421
best_error: 5.178140158432729
best_error: 5.1781258115487905
best_error: 5.1781255372686505
best_error: 5.178097807023082
best_error: 5.178097652930225
best_error: 5.178097455094047
best_error: 5.178091706018471
best_error: 5.178091433815453
best_error: 5.178019018233011
best_error: 5.178018746000635
best_error: 5.177857695673092
best_error: 5.177857423434791
best_error: 5.177215473431749
best_error: 5.1772153190440005
best_error: 5.1771912254802945
best_error: 5.177190954176808
best_error: 5.177189282411215
best_error: 5.1771890111091405
best_error: 5.177187686991269
best_error: 5.177187415690354
best_error: 5.177186953140168
best_error: 5.177186681839778
best_error: 5.177186490927427
