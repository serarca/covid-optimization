ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 86
days_switch 5
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 13.912872599876971
best_error: 13.912872203184506
best_error: 4.824248861995604
best_error: 4.824248861780111
best_error: 4.82424885869066
best_error: 4.824248857532664
best_error: 4.815277082601542
best_error: 4.815277079189806
best_error: 4.815277078118518
best_error: 4.778234833777017
best_error: 4.778234829926765
best_error: 4.778234829233287
best_error: 4.612245656196674
best_error: 4.612245650289331
best_error: 4.428207637947641
best_error: 4.428207628451253
best_error: 4.39998976271398
best_error: 4.399989754259272
best_error: 4.022499102564004
best_error: 4.022499101867474
best_error: 4.02249909771958
best_error: 4.010805543641568
best_error: 4.010805542341598
best_error: 4.010805540479871
best_error: 3.755049510702871
best_error: 3.7550495100346133
best_error: 3.755049503624644
best_error: 3.7550494981557385
best_error: 3.7085589631923415
best_error: 3.708558959025572
best_error: 3.7061992672854402
best_error: 3.7061992628701548
best_error: 3.7000983606192044
best_error: 3.700098355696566
best_error: 3.6907793671693216
best_error: 3.690779361333986
best_error: 3.6881541952032753
best_error: 3.6881541887763882
best_error: 3.6845304205554172
best_error: 3.6845304134960686
best_error: 3.6845076743822465
best_error: 3.6845076672644113
best_error: 3.675647616374896
best_error: 3.6756476083683407
best_error: 3.6470913777281475
best_error: 3.6470913693095532
best_error: 3.2567182137667476
best_error: 3.256718135916354
best_error: 3.09958915707407
best_error: 3.0995891354717315
best_error: 2.886665622061821
best_error: 2.88666561994104
best_error: 2.8866656041951506
best_error: 2.8852782299624433
best_error: 2.885278225995862
best_error: 2.8852782255593348
best_error: 2.885278208199314
best_error: 2.8852443725003165
best_error: 2.88524436912457
best_error: 2.8852443681751456
best_error: 2.8852443509188066
best_error: 2.7847053249641975
best_error: 2.784705304219314
best_error: 2.6653782521465104
best_error: 2.6653782451371937
best_error: 2.6653782442025418
best_error: 2.146801065183718
best_error: 2.1468010056982654
best_error: 1.8890165807088124
best_error: 1.8890165629792506
best_error: 1.8532037484614572
best_error: 1.853203747047804
best_error: 1.853203737917718
best_error: 1.8532037358050466
best_error: 1.8532037331591777
best_error: 1.824593864231014
best_error: 1.824593818814016
best_error: 1.7718269903139532
best_error: 1.771826980879311
best_error: 1.7582494523839136
best_error: 1.7582494514343878
best_error: 1.7582494510148807
best_error: 1.7582494480035065
best_error: 1.7484130259181092
best_error: 1.748413024812061
best_error: 1.7484130244606435
best_error: 1.748413022372211
best_error: 1.7243536742242391
best_error: 1.724353662700458
best_error: 1.7056116801817987
best_error: 1.7056116759157052
best_error: 1.6880581197399842
best_error: 1.688058111141678
best_error: 1.6637812544177306
best_error: 1.6637812467439224
best_error: 1.6432328223113057
best_error: 1.6432328091932795
best_error: 1.6347648452932102
best_error: 1.6347648316709302
best_error: 1.6341581329740087
best_error: 1.6341581161891887
best_error: 1.608258461536159
best_error: 1.6082584537733786
best_error: 1.6051769097309179
best_error: 1.6051768900145018
best_error: 1.5870880676286876
best_error: 1.587088064050279
best_error: 1.5757071792386688
best_error: 1.5757071678967423
best_error: 1.5733122243592115
best_error: 1.5733122218937194
best_error: 1.5691630002520123
best_error: 1.5691629990123142
best_error: 1.5691629985538136
best_error: 1.566409818130513
best_error: 1.5664098160956248
best_error: 1.5596803605048544
best_error: 1.5596803560679708
best_error: 1.5552634984439626
best_error: 1.5552634962301364
best_error: 1.5552634923225428
best_error: 1.5335872458437296
best_error: 1.533587243891614
best_error: 1.5221148077288313
best_error: 1.5221148066218328
best_error: 1.5140192996908532
best_error: 1.5140192933881975
best_error: 1.5089450465934542
best_error: 1.5089450454465327
best_error: 1.5074084422892167
best_error: 1.507408441924691
best_error: 1.5074084419204823
best_error: 1.50691260234739
best_error: 1.5069126021020738
best_error: 1.5068413360460784
best_error: 1.5068413360045665
best_error: 1.5068413359299304
best_error: 1.5067902641984716
best_error: 1.5067902640451385
best_error: 1.5067026155158911
best_error: 1.5067026154049756
best_error: 1.5067026154045349
best_error: 1.5066824836515271
best_error: 1.5066824827559717
best_error: 1.5066520686574372
best_error: 1.5066520683357245
best_error: 1.506632274029889
best_error: 1.5066322738700513
best_error: 1.506625229350991
best_error: 1.5066252292678601
best_error: 1.5066252292335551
best_error: 1.5066153423559334
best_error: 1.5066153423408588
best_error: 1.5066153422268236
best_error: 1.5065994670428355
best_error: 1.5065994668297955
best_error: 1.506545613679072
best_error: 1.5065456125542005
best_error: 1.5064914673729257
best_error: 1.506491465618424
best_error: 1.5062173312078622
best_error: 1.5062173290644594
best_error: 1.5060061003177072
best_error: 1.506006098890401
best_error: 1.5059821122564798
best_error: 1.5059821095446662
best_error: 1.505869158763417
best_error: 1.505869158326685
best_error: 1.505869158158133
best_error: 1.5058691578538466
best_error: 1.505410647537157
best_error: 1.5054106452794445
best_error: 1.505117088153195
best_error: 1.5051170870064126
best_error: 1.5043236799154196
best_error: 1.5043236756943508
best_error: 1.503977982116431
best_error: 1.5039779811452831
best_error: 1.5037022622364242
best_error: 1.5037022609543989
best_error: 1.5034314908424857
best_error: 1.5034314908289206
best_error: 1.5034314906587571
best_error: 1.5032334761668091
best_error: 1.503233476145738
best_error: 1.5032334760945216
best_error: 1.5032240819461742
best_error: 1.5032240815899984
best_error: 1.5032171446692177
best_error: 1.5032171445805267
best_error: 1.5032171445488933
best_error: 1.5032140212166336
best_error: 1.503214021209521
best_error: 1.5032140211748757
best_error: 1.503211442733282
best_error: 1.5032114427120666
best_error: 1.5032114426924614
best_error: 1.5032104804500213
best_error: 1.5032104800662645
best_error: 1.5032036829710043
best_error: 1.5032036828680597
best_error: 1.503202574985756
best_error: 1.50320257493812
best_error: 1.5032015160673753
best_error: 1.503201516043578
best_error: 1.5032010623553944
best_error: 1.503201062331962
best_error: 1.5032006052198117
best_error: 1.5032006051056825
best_error: 1.5031994674308755
best_error: 1.5031994674264317
best_error: 1.5031994674109217
best_error: 1.5031983425325663
best_error: 1.503198342516605
best_error: 1.5031981141384723
best_error: 1.503198114123015
best_error: 1.5031981103024188
best_error: 1.5031981102886565
best_error: 1.5031980693434972
best_error: 1.5031980693280065
best_error: 1.503198068987155
best_error: 1.50319806897337
best_error: 1.5031979323771185
best_error: 1.5031979323584272
best_error: 1.5031977946717696
best_error: 1.5031977946618085
best_error: 1.5031975587292639
best_error: 1.5031975586668933
best_error: 1.5031975205200738
best_error: 1.5031975205099384
best_error: 1.5031974939456512
best_error: 1.503197493927702
best_error: 1.5031974856139743
best_error: 1.5031974855760795
best_error: 1.503197481299968
best_error: 1.5031974812965407
best_error: 1.5031974812918536
best_error: 1.5031974812809648
best_error: 1.5031974763787996
best_error: 1.5031974763720666
best_error: 1.5031974763706395
best_error: 1.503197476358486
best_error: 1.503197471905137
best_error: 1.5031974718983698
best_error: 1.5031974718969412
best_error: 1.5031974718848613
best_error: 1.5031974688383114
best_error: 1.5031974688374208
best_error: 1.5031974688204037
best_error: 1.503197466759253
best_error: 1.5031974667583703
best_error: 1.5031974667413326
best_error: 1.5031974665122683
best_error: 1.503197466485559
