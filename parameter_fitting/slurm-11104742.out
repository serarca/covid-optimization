ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 90
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.62418001892759
best_error: 97.62417989448183
best_error: 97.62417988283023
best_error: 17.609398903261905
best_error: 17.60939858484854
best_error: 17.609396371490266
best_error: 13.557745061322573
best_error: 13.557745061064342
best_error: 13.557745026756667
best_error: 13.498955050134487
best_error: 13.498955049862959
best_error: 13.498955013196028
best_error: 13.226566841682093
best_error: 13.226566841396348
best_error: 13.22656679327949
best_error: 11.016741329518592
best_error: 11.016741153292532
best_error: 10.717128508585622
best_error: 10.717128309715672
best_error: 10.553064277656144
best_error: 10.553064065498363
best_error: 10.373673348775363
best_error: 10.373673126482819
best_error: 9.883259319263589
best_error: 9.88325913968461
best_error: 9.637485843810792
best_error: 9.637485841162524
best_error: 9.637485839184343
best_error: 9.637485832013223
best_error: 9.636800745981303
best_error: 9.636800730523632
best_error: 9.636800726099278
best_error: 9.631286086684787
best_error: 9.631286070427537
best_error: 9.631286066440287
best_error: 9.61299554358081
best_error: 9.612995541155778
best_error: 9.612995538810832
best_error: 9.61299553186465
best_error: 9.447438488164366
best_error: 9.447438487084725
best_error: 9.44743848207133
best_error: 9.44743847657471
best_error: 8.658740335024872
best_error: 8.658740335021625
best_error: 8.658740318958518
best_error: 8.087056994259706
best_error: 8.08705697943224
best_error: 8.087056972836113
best_error: 7.995186895874436
best_error: 7.995186889928583
best_error: 7.995186874534212
best_error: 7.9870366676152145
best_error: 7.987036660742778
best_error: 7.987036646284577
best_error: 7.884416032189422
best_error: 7.8844160108077626
best_error: 7.88441600362594
best_error: 7.662403333151059
best_error: 7.662403313001423
best_error: 7.662403310182641
best_error: 7.591230616633508
best_error: 7.591230599800278
best_error: 7.591230584075113
best_error: 7.41462349947373
best_error: 7.414623480353625
best_error: 7.414623467605806
best_error: 7.2241653101471615
best_error: 7.224165294095735
best_error: 7.16525676598787
best_error: 7.165256754984692
best_error: 7.165256754777522
best_error: 7.14026886218179
best_error: 7.140268461832826
best_error: 7.10944432476849
best_error: 7.109444323942821
best_error: 7.109444320581398
best_error: 7.109444289337024
best_error: 7.095293856311558
best_error: 7.095293534876515
best_error: 7.0247419550789845
best_error: 7.024741952295467
best_error: 7.024741949033308
best_error: 7.024741948962726
best_error: 6.924448463085047
best_error: 6.924448459870002
best_error: 6.92444845454912
best_error: 6.8884190409718284
best_error: 6.888419038721013
best_error: 6.888419033417205
best_error: 6.829647226176347
best_error: 6.829646935122823
best_error: 6.789633217578118
best_error: 6.78963321399038
best_error: 6.789633206871096
best_error: 6.786940747416077
best_error: 6.786940418045949
best_error: 6.78673995991288
best_error: 6.786739956658435
best_error: 6.786739950588175
best_error: 6.782285454924488
best_error: 6.782285451664836
best_error: 6.782285445691268
best_error: 6.781752039966865
best_error: 6.781752036747346
best_error: 6.781752030744542
best_error: 6.781504336764147
best_error: 6.7815043335384235
best_error: 6.781504327546902
best_error: 6.781384567019309
best_error: 6.781384563793381
best_error: 6.781384557804081
best_error: 6.781323215587956
best_error: 6.781323212361915
best_error: 6.781323206373764
best_error: 6.7812915365149316
best_error: 6.781291533288843
best_error: 6.781291527301273
best_error: 6.781275080108498
best_error: 6.781275076882378
best_error: 6.781275070895117
best_error: 6.781266491023504
best_error: 6.781266487797371
best_error: 6.781266481810267
best_error: 6.78126218863329
best_error: 6.781262185407135
best_error: 6.781262179420121
best_error: 6.781260026866828
best_error: 6.7812600236406535
best_error: 6.7812600176536915
best_error: 6.781258951174983
best_error: 6.781258947948805
best_error: 6.781258941961863
best_error: 6.78125842094085
best_error: 6.781258417714665
best_error: 6.781258411727738
best_error: 6.781258161858985
best_error: 6.781258158632797
best_error: 6.7812581526458775
best_error: 6.781258012380875
best_error: 6.781258009154689
best_error: 6.78125800316777
best_error: 6.781257898874435
best_error: 6.78125789887109
best_error: 6.781257845740941
