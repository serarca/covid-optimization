ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.722335763624752
best_error: 11.722335747720805
best_error: 11.722335733012878
best_error: 11.349875600135189
best_error: 11.349875573663505
best_error: 11.349875555435483
best_error: 11.073930806572214
best_error: 11.073930786161744
best_error: 11.073930735371047
best_error: 10.635344899213628
best_error: 10.635344847505777
best_error: 10.635344825580422
best_error: 9.445831795094492
best_error: 9.445831707539002
best_error: 9.274720322663782
best_error: 9.274720227335472
best_error: 8.955098663568966
best_error: 8.955098560509409
best_error: 8.954901209492197
best_error: 8.954901106468952
best_error: 8.437897247762205
best_error: 8.437897217598085
best_error: 8.43789717523613
best_error: 7.594782854391164
best_error: 7.594782831681584
best_error: 7.594782781589951
best_error: 6.224093947923449
best_error: 6.22409394778451
best_error: 4.613909499634325
best_error: 4.613909321482041
best_error: 4.583498231907505
best_error: 4.583497752474886
best_error: 4.303616779041673
best_error: 4.303616491534131
best_error: 3.921373486112752
best_error: 3.9213732218061716
best_error: 3.6473530304081825
best_error: 3.647352762429057
best_error: 3.603057763599714
best_error: 3.6030577634786525
best_error: 3.5815224347236523
best_error: 3.581522162149013
best_error: 3.581314773862
best_error: 3.581314501263258
best_error: 3.5789653393223437
best_error: 3.5789650665161123
best_error: 3.5778893388607207
best_error: 3.5778890659594933
best_error: 3.5772617971492617
best_error: 3.5772615241926484
best_error: 3.5769112621232964
best_error: 3.576910989135759
best_error: 3.576723536102201
best_error: 3.576723263098093
best_error: 3.5766046176206
best_error: 3.576604344606004
best_error: 3.5765347765144724
best_error: 3.5765345034937104
best_error: 3.5764818526157907
best_error: 3.576481579590352
best_error: 3.576478381341873
best_error: 3.5764781083161346
best_error: 3.576476312844722
best_error: 3.5764760398188002
best_error: 3.5764746456056336
best_error: 3.57647437257956
best_error: 3.576474297421377
best_error: 3.57647402439527
best_error: 3.5764738991506384
best_error: 3.5764738923261707
best_error: 3.576473892250944
best_error: 3.5764738844780544
best_error: 3.576450409968297
best_error: 3.5764501369357387
best_error: 3.5763576038658615
best_error: 3.576357330807901
best_error: 3.576004442061992
best_error: 3.5760041689075033
best_error: 3.5748449825773627
best_error: 3.5748447091081994
best_error: 3.5729795324931826
best_error: 3.5729792584014133
best_error: 3.571815735496595
best_error: 3.5718154609881143
best_error: 3.5666429717401664
best_error: 3.5666426931829647
best_error: 3.5514507060100815
best_error: 3.5514504105740987
best_error: 3.5513731792242025
best_error: 3.551372878628337
best_error: 3.551283560593867
best_error: 3.5512832607273777
best_error: 3.5511466901907007
best_error: 3.5511463914272854
best_error: 3.547412040160339
best_error: 3.5474120401138434
best_error: 3.546656989238839
best_error: 3.5466566907126937
best_error: 3.5463395348897944
best_error: 3.5463392363310757
best_error: 3.5462478374083974
best_error: 3.546247538840265
best_error: 3.546184968845112
best_error: 3.5461846702705206
best_error: 3.5093827752173503
best_error: 3.5093827751884876
best_error: 3.507038287821564
best_error: 3.507037937247734
best_error: 3.5032811029440802
best_error: 3.5032807472548955
best_error: 3.470317243617471
best_error: 3.4703169083676593
best_error: 3.46515281101101
best_error: 3.465152808985869
best_error: 3.4206544507039554
best_error: 3.420654106913627
best_error: 3.391544514606064
best_error: 3.391544209369246
best_error: 3.3872768200946113
best_error: 3.3169002110672867
best_error: 3.3168998174706954
best_error: 3.316402857303912
best_error: 3.310440551273479
best_error: 3.310440201092055
best_error: 3.3004578415822916
best_error: 3.3004574799613877
best_error: 3.299228101290506
best_error: 3.2992280064646753
best_error: 3.2955123662610855
best_error: 3.295512001578137
best_error: 3.2949423140353096
best_error: 3.294941949271669
best_error: 3.29491747348197
best_error: 3.2949173787952097
best_error: 3.294892679392717
best_error: 3.294892314622773
best_error: 3.294880472742716
best_error: 3.2948804418869937
best_error: 3.294635945765834
best_error: 3.2946355809399774
best_error: 3.2917924586984775
best_error: 3.29179208958157
best_error: 3.288918349521947
best_error: 3.288917957799961
best_error: 3.2888474955440534
best_error: 3.288847110582827
best_error: 3.2888164444395493
best_error: 3.2888160572590293
best_error: 3.288803487360196
best_error: 3.2888031001626983
best_error: 3.28877195203916
best_error: 3.2887715613549773
best_error: 3.288622232877581
best_error: 3.2886218421697158
best_error: 3.2880259621121883
best_error: 3.288025571050884
best_error: 3.2876178874778597
best_error: 3.287617496351659
best_error: 3.287438809641399
best_error: 3.28743841848675
best_error: 3.2874063647303067
best_error: 3.2874059735707624
best_error: 3.2873965262319373
best_error: 3.2873964311059525
best_error: 3.2873941094440626
best_error: 3.2873937182826656
