ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 74
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 109.33086015737774
best_error: 109.33086000749063
best_error: 109.33085997335142
best_error: 19.67151915071799
best_error: 19.671519150715454
best_error: 19.6715191461718
best_error: 19.670171873554775
best_error: 19.670171868971746
best_error: 19.66467192049484
best_error: 19.66467191575954
best_error: 19.64072083141067
best_error: 19.640720825976622
best_error: 19.495685097671455
best_error: 19.49568508677875
best_error: 19.062148194097087
best_error: 19.062148156964042
best_error: 15.827170568883751
best_error: 15.827170296034
best_error: 14.540230960348733
best_error: 14.540230581759962
best_error: 13.585313882437953
best_error: 13.585313632928155
best_error: 13.333312335934348
best_error: 13.33331221419941
best_error: 13.311942131574483
best_error: 13.311942113446444
best_error: 13.311223975446246
best_error: 13.311223956802413
best_error: 13.037371717265174
best_error: 13.037371707314739
best_error: 12.897382950176318
best_error: 12.89738273695019
best_error: 12.874470807929407
best_error: 12.874470792205795
best_error: 12.874470783949668
best_error: 12.830920892968651
best_error: 12.8309208912593
best_error: 12.83092087605754
best_error: 12.789053890615154
best_error: 12.789053885611116
best_error: 12.789053884506414
best_error: 12.78905388269105
best_error: 12.75919257484465
best_error: 12.759192402983764
best_error: 12.737082448212677
best_error: 12.737082433893146
best_error: 12.71785848822487
best_error: 12.717858480130422
best_error: 12.708331009606024
best_error: 12.708331002552308
best_error: 12.708331002399365
best_error: 12.697713416111373
best_error: 12.697713378712113
best_error: 12.69729903670408
best_error: 12.697298710402176
best_error: 12.694373540633464
best_error: 12.69437323085959
best_error: 12.693551854073668
best_error: 12.693551852575474
best_error: 12.693551850752637
best_error: 12.693551847301531
best_error: 12.692490317497903
best_error: 12.692490316015132
best_error: 12.692490314124052
best_error: 12.69249031067542
best_error: 12.511376756326415
best_error: 12.511376743633878
best_error: 12.506709760875353
best_error: 12.506709715241424
best_error: 12.50500756910605
best_error: 12.505007554362376
best_error: 12.503667664645622
best_error: 12.50366761925035
best_error: 12.437019737187056
best_error: 12.437019690031919
best_error: 12.43701968757308
best_error: 12.298571706680283
best_error: 12.298571661028745
best_error: 12.298571659782006
best_error: 12.035615429677073
best_error: 12.035615428603986
best_error: 12.035615380093217
best_error: 12.010338712820765
best_error: 12.010338712521405
best_error: 12.010338652112877
best_error: 11.974488827536618
best_error: 11.97448882737153
best_error: 11.9744887679772
best_error: 11.848435477419933
best_error: 11.848435474101848
best_error: 11.848435467231738
best_error: 11.836675734219654
best_error: 11.836675707247723
best_error: 11.829009048389308
best_error: 11.829009022186408
best_error: 11.817983166091029
best_error: 11.81798316342759
best_error: 11.817983153662004
best_error: 11.769472443740998
best_error: 11.769472441631086
best_error: 11.769472438623186
best_error: 11.769472437769897
best_error: 11.768627783036997
best_error: 11.768627780639182
best_error: 11.76862777914715
best_error: 11.76862777706085
best_error: 11.755563042258348
best_error: 11.755562945962964
best_error: 11.75295259548952
best_error: 11.752952579982335
best_error: 11.750282200478686
best_error: 11.750282116132645
best_error: 11.749295789506629
best_error: 11.749295775833023
best_error: 11.743193771332772
best_error: 11.74319375653338
best_error: 11.739211886907796
best_error: 11.73921187991002
best_error: 11.734085721698541
best_error: 11.734085693974436
best_error: 11.730484113152574
best_error: 11.730484079229232
best_error: 11.719016178194636
best_error: 11.719016121405684
best_error: 11.694996014278624
best_error: 11.694995999889283
best_error: 11.693716868807135
best_error: 11.693716854616481
best_error: 11.692188184127872
best_error: 11.69218817001823
best_error: 11.690595051564884
best_error: 11.690594953119085
best_error: 11.6822812944818
best_error: 11.682281224676178
best_error: 11.68138253386734
best_error: 11.681382464224946
best_error: 11.68122272664699
best_error: 11.681222710626217
best_error: 11.68117488254996
best_error: 11.681174866531162
best_error: 11.67391589119606
best_error: 11.673915891191818
best_error: 11.67391586183116
best_error: 11.671516443933843
best_error: 11.671516442154077
best_error: 11.671516429298206
best_error: 11.66994776867645
best_error: 11.669947764629386
best_error: 11.667349575244732
best_error: 11.66734957046808
best_error: 11.664259013726305
best_error: 11.664258986777694
best_error: 11.659812066266468
best_error: 11.659812040775561
best_error: 11.65094161351135
best_error: 11.650941610643192
best_error: 11.64280660512241
best_error: 11.642806579808848
best_error: 11.641223804316798
best_error: 11.641223803499432
best_error: 11.641223790260849
best_error: 11.640425994093995
best_error: 11.640425993246952
best_error: 11.640425980330097
best_error: 11.640024857604715
best_error: 11.640024856722597
best_error: 11.640024844165106
best_error: 11.639829619698816
best_error: 11.639829618817917
best_error: 11.63982960624661
best_error: 11.639716982866235
best_error: 11.639716981986043
best_error: 11.639716969406763
best_error: 11.63966570498801
best_error: 11.639665704108136
best_error: 11.639665691525227
best_error: 11.639630033232663
best_error: 11.639630032353015
best_error: 11.639630019767582
