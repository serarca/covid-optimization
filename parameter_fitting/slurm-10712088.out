ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.915605521039726
best_error: 12.915605410800797
best_error: 11.82395531592966
best_error: 11.823955312409623
best_error: 11.823955296938426
best_error: 11.638036266058407
best_error: 11.638036261537625
best_error: 11.63803625556518
best_error: 10.376342178530525
best_error: 10.376342166803125
best_error: 10.15673802887198
best_error: 10.156738016457119
best_error: 10.129294814852406
best_error: 10.129294801706925
best_error: 10.05759185162922
best_error: 10.05759183014012
best_error: 9.753441249194427
best_error: 9.753441181767258
best_error: 9.732374657619877
best_error: 9.732374588978555
best_error: 9.675316503256639
best_error: 9.675316429355489
best_error: 9.675316422446262
best_error: 9.6562757100902
best_error: 9.656275638953552
best_error: 9.656275622597425
best_error: 9.64214079822996
best_error: 9.642140724721642
best_error: 9.64214070131746
best_error: 9.6421396186968
best_error: 9.642139545901205
best_error: 9.642139521745772
best_error: 9.555705306601723
best_error: 9.555705270125316
best_error: 9.555705195577264
best_error: 9.553901153647974
best_error: 9.553901112703748
best_error: 9.553901042432987
best_error: 8.323073691360424
best_error: 8.101568352525465
best_error: 8.097704416732943
best_error: 8.09770428257226
best_error: 7.495285192182252
best_error: 7.495285050407674
best_error: 7.392374036806629
best_error: 7.392373892996337
best_error: 7.361687249400387
best_error: 7.361687105210281
best_error: 7.3377857827052075
best_error: 7.3377856378897
best_error: 7.3264168538592225
best_error: 7.326416708674292
best_error: 7.317211279081563
best_error: 7.317211133819367
best_error: 7.315776863178394
best_error: 7.3157767178697926
best_error: 7.315663474900823
best_error: 7.315663329588535
best_error: 7.315577431168593
best_error: 7.315577285853532
best_error: 7.315537012025828
best_error: 7.315536866709474
best_error: 7.315504809991278
best_error: 7.3155046646738375
best_error: 7.315499017872069
best_error: 7.3154988725544765
best_error: 7.315496350517602
best_error: 7.315495405241958
best_error: 7.315495259924219
best_error: 7.315495056041252
best_error: 7.315494910723529
best_error: 7.315494902760527
best_error: 7.3154948401310165
best_error: 7.315494827004986
best_error: 7.315494681687259
best_error: 5.508525100699845
best_error: 5.50852502192371
best_error: 5.508524982806792
best_error: 4.996443083959388
best_error: 4.9964429639547205
best_error: 4.928275710066497
best_error: 4.928275589725498
best_error: 4.913384579346012
best_error: 4.823284527415514
best_error: 4.823284396875064
best_error: 4.743882599809897
best_error: 4.743882462144315
best_error: 4.742612131921499
best_error: 4.7347161911755675
best_error: 4.734716052433928
best_error: 4.733487198903307
best_error: 4.73348706001753
best_error: 4.733154164820331
best_error: 4.7331534392195
best_error: 4.7331533002946005
best_error: 4.733134636382017
best_error: 4.7331344974552465
best_error: 4.7331337451443325
best_error: 4.733121061857651
best_error: 4.733120922929872
best_error: 4.733097282100982
best_error: 4.7330971431716
best_error: 4.733012169568587
best_error: 4.730825397363379
best_error: 4.722145435888068
best_error: 4.686481626380788
best_error: 4.686481484310372
best_error: 4.558051391001607
best_error: 4.558051239868968
best_error: 4.215889042298875
best_error: 4.215888824685557
best_error: 3.6794565963560415
best_error: 3.6794563265017013
best_error: 3.6201746621884703
best_error: 3.620174344957249
best_error: 3.620089130669983
best_error: 3.6200888102789808
best_error: 3.620072347852769
best_error: 3.620072027452659
best_error: 3.620006096831641
best_error: 3.620005776395203
best_error: 3.61977777580948
best_error: 3.6197774547220103
best_error: 3.618023495027817
best_error: 3.618023169497478
best_error: 3.6143855974869057
best_error: 3.6143852508538807
best_error: 3.6077400838804725
best_error: 3.607739738606483
best_error: 3.5815265361233477
best_error: 3.5815261953706816
best_error: 3.4786280276141905
best_error: 3.478627686879349
best_error: 3.3783466375250155
best_error: 3.3783462926608827
best_error: 3.339025115152528
best_error: 3.339024766902885
best_error: 3.321262102916113
best_error: 3.321261751797856
best_error: 3.3127881048665326
best_error: 3.3127877519961877
best_error: 3.309777252494281
best_error: 3.3097768991985754
best_error: 3.3077310737511025
best_error: 3.3077307201664934
best_error: 3.3068572486860166
best_error: 3.306856894978056
best_error: 3.306640561036618
best_error: 3.3066402072980954
best_error: 3.3065089655217923
best_error: 3.306508930668546
best_error: 3.3065089002591783
best_error: 3.3064990180015448
best_error: 3.306498664243044
best_error: 3.306497614225333
best_error: 3.306497260466634
best_error: 3.306496695800333
best_error: 3.3064963420414912
best_error: 3.3064962934772764
best_error: 3.3064962770834363
best_error: 3.2860683936884802
best_error: 3.2860680209385826
best_error: 3.284514819789056
best_error: 3.2845144432921103
best_error: 3.279263800854605
best_error: 3.279263420586469
best_error: 3.2777738024454735
best_error: 3.2777734215261836
best_error: 3.2770332832684557
best_error: 3.277032902023821
best_error: 3.2770122648805797
best_error: 3.277011883626708
best_error: 3.276978278448781
best_error: 3.276977897181083
best_error: 3.276943614949516
best_error: 3.276943233667681
best_error: 3.276920715287281
best_error: 3.276920333996115
best_error: 3.2769200344532785
best_error: 3.2769196531619182
best_error: 3.276919047622888
best_error: 3.276918666331259
best_error: 3.2769180726070934
best_error: 3.2769180627667787
best_error: 3.276918053154592
best_error: 3.2769180471368347
best_error: 3.2769180415776873
best_error: 3.2769180383381507
best_error: 3.2769180353878777
best_error: 3.2769180333191663
best_error: 3.2769180311899415
