ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.20159722742818
best_error: 102.20159713963513
best_error: 102.2015970758433
best_error: 16.5235789569065
best_error: 16.52357895689861
best_error: 16.52357894000074
best_error: 16.448262707919604
best_error: 16.448262707910946
best_error: 16.448262688223064
best_error: 15.939054761801383
best_error: 15.939054761749876
best_error: 15.939054712677216
best_error: 15.595776914590582
best_error: 15.595776914447388
best_error: 15.595776839176324
best_error: 15.00787394356152
best_error: 15.007873943114198
best_error: 15.00787382209982
best_error: 13.935356986265278
best_error: 13.935356983506004
best_error: 13.935356943869309
best_error: 13.860601358296421
best_error: 13.860601354522785
best_error: 13.860601353443435
best_error: 13.860601258078233
best_error: 13.852990244559088
best_error: 13.852990239547704
best_error: 13.852990238399833
best_error: 13.498593964109759
best_error: 13.49859395746331
best_error: 13.220070608470692
best_error: 13.22007059535515
best_error: 13.067703408808665
best_error: 13.06770339212033
best_error: 12.86224676201963
best_error: 12.862246741570779
best_error: 12.766485498965835
best_error: 12.766485478298582
best_error: 12.521976031091931
best_error: 12.521976009890963
best_error: 12.463623918568059
best_error: 12.463623914677356
best_error: 11.154126521839418
best_error: 11.154126514588691
best_error: 10.135525606644903
best_error: 10.135525406459161
best_error: 9.56276327257483
best_error: 9.562763261105284
best_error: 9.342773906433148
best_error: 9.342773898361983
best_error: 9.34277389608257
best_error: 9.089528835849759
best_error: 9.089528834867277
best_error: 9.089528821640869
best_error: 8.984527022891053
best_error: 8.984527021760462
best_error: 8.984527006465914
best_error: 8.907202366836351
best_error: 8.907202326333453
best_error: 8.759931007737194
best_error: 8.759930099620771
best_error: 8.759633129160878
best_error: 8.759633119410953
best_error: 8.671756928984333
best_error: 8.671756925902951
best_error: 8.671756925405333
best_error: 8.67175692127449
best_error: 8.565688400188991
best_error: 8.565688332739226
best_error: 8.538351976652107
best_error: 8.538351884896349
best_error: 8.521235236367803
best_error: 8.521235108175109
best_error: 8.501933646784101
best_error: 8.501933460779368
best_error: 8.482702736027965
best_error: 8.482702512844828
best_error: 8.482027850512914
best_error: 8.48202716874467
best_error: 8.379919389447242
best_error: 8.379918865158785
best_error: 8.339432112165913
best_error: 8.339431826398842
best_error: 8.282537509160793
best_error: 8.282537499128878
best_error: 8.243662058543517
best_error: 8.243661556117347
best_error: 8.076052278579434
best_error: 8.076051583036039
best_error: 7.916191650632309
best_error: 7.916191354639919
best_error: 7.890940788433943
best_error: 7.890940761564368
best_error: 7.890940759283808
best_error: 7.860993088010341
best_error: 7.860992723773577
best_error: 7.826185313880758
best_error: 7.826185037349821
best_error: 7.821942834041346
best_error: 7.821942824936072
best_error: 7.820810595913509
best_error: 7.820810326375973
best_error: 7.811083019688129
best_error: 7.811083012409519
best_error: 7.8110397480235605
best_error: 7.811039462491561
best_error: 7.803278172882508
best_error: 7.803277842403026
best_error: 7.796380044219966
best_error: 7.796379670627361
best_error: 7.794632987985023
best_error: 7.794632345019506
best_error: 7.79362202715642
best_error: 7.793621381851323
best_error: 7.777611328277846
best_error: 7.777610707396441
best_error: 7.6804630989708205
best_error: 7.6804624566640065
best_error: 7.667266872465581
best_error: 7.66726623161861
best_error: 7.616506937316298
best_error: 7.616506401423562
best_error: 7.603673676474741
best_error: 7.603673652694207
best_error: 7.583677571829148
best_error: 7.583677571756223
best_error: 7.58367756725999
best_error: 7.539093312990059
best_error: 7.539093312903157
best_error: 7.539093306279006
best_error: 7.380376855707706
best_error: 7.380376822797639
best_error: 7.340072897820851
best_error: 7.3400728501000705
best_error: 7.340062702975374
best_error: 7.3400626552543775
best_error: 7.264095547722336
best_error: 7.26409540068304
best_error: 7.221598441760515
best_error: 7.221598387223697
best_error: 7.0766169387555
best_error: 7.0766168520919335
best_error: 6.995711717003774
best_error: 6.995711639021245
best_error: 6.863180796094657
best_error: 6.863180742208344
best_error: 6.704825453923189
best_error: 6.7048254120861195
