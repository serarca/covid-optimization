ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.718757025524983
best_error: 24.71875699376228
best_error: 24.718756958604086
best_error: 4.904651184497522
best_error: 4.904651184026462
best_error: 4.90465118396166
best_error: 4.903745433917904
best_error: 4.903745433821941
best_error: 4.903745433380638
best_error: 4.900057264882541
best_error: 4.90005726478007
best_error: 4.90005726433949
best_error: 4.8841486522134865
best_error: 4.884148652081107
best_error: 4.884148651644438
best_error: 4.789150797567091
best_error: 4.789150797130908
best_error: 4.789150796815224
best_error: 4.369181861038766
best_error: 4.369181340079142
best_error: 2.991210579960301
best_error: 2.991210261777447
best_error: 2.6573292540320637
best_error: 2.6573291560176022
best_error: 2.635663122040311
best_error: 2.6356627369766237
best_error: 2.6018101495886965
best_error: 2.6018100748416852
best_error: 2.5794362297525315
best_error: 2.5794362182307613
best_error: 2.578383691432187
best_error: 2.5783835132544555
best_error: 2.57557410078474
best_error: 2.575574063408385
best_error: 2.490446748230626
best_error: 2.4904467130827315
best_error: 2.3970710834612476
best_error: 2.3970710812353198
best_error: 2.3970710802714934
best_error: 2.3963982687640377
best_error: 2.3963982528500303
best_error: 2.3913548379752396
best_error: 2.3913547641058686
best_error: 2.3683041697308735
best_error: 2.3683039081649415
best_error: 2.3195723627258222
best_error: 2.3195719829589865
best_error: 1.9426738086023208
best_error: 1.9426737638919453
best_error: 1.935923494825744
best_error: 1.935923480117553
best_error: 1.9348177366368267
best_error: 1.9348177302887564
best_error: 1.9342193673921915
best_error: 1.934219362925596
best_error: 1.9327134930940153
best_error: 1.9327134916692719
best_error: 1.9327134903290974
best_error: 1.9311548328369867
best_error: 1.9311547967746774
best_error: 1.928549887368841
best_error: 1.928549812992632
best_error: 1.9115713681790445
best_error: 1.9115712322028444
best_error: 1.8644023680218933
best_error: 1.864402165902752
best_error: 1.7788052294040266
best_error: 1.7788050277725598
best_error: 1.767144533710238
best_error: 1.7671443297610514
best_error: 1.7279773955138658
best_error: 1.72797717374657
best_error: 1.6384367984582828
best_error: 1.638436772223078
best_error: 1.6363828947998933
best_error: 1.6363828897665018
best_error: 1.6349283335577334
best_error: 1.634928331911006
best_error: 1.634928331394829
best_error: 1.6349283311768281
best_error: 1.6295357347606823
best_error: 1.6295357061839926
best_error: 1.536745741816165
best_error: 1.536745467298375
best_error: 1.4584172113000593
best_error: 1.4584170314455382
best_error: 1.4571716157310288
best_error: 1.457171503495619
best_error: 1.446649424509297
best_error: 1.4466493054099048
best_error: 1.4350861564202655
best_error: 1.4350861332547853
best_error: 1.4339316210157471
best_error: 1.4339316099585515
best_error: 1.4338514453304558
best_error: 1.4338514400945912
best_error: 1.433833372142918
best_error: 1.433833370543546
best_error: 1.4338333698566275
best_error: 1.4338165493686879
best_error: 1.4338165490646608
best_error: 1.4338165459333307
best_error: 1.4337396937928617
best_error: 1.4337396711325638
best_error: 1.433571919106222
best_error: 1.4335718903044876
best_error: 1.4330943360425636
best_error: 1.4330942740349693
best_error: 1.431760639562185
best_error: 1.4317605445154982
best_error: 1.4246753885602723
best_error: 1.424675200014458
best_error: 1.4125798410827366
best_error: 1.4125795623295985
best_error: 1.4072791412204233
best_error: 1.4072788687568711
best_error: 1.3921434069179535
best_error: 1.3921432104592366
best_error: 1.3845190587710638
best_error: 1.3845190368807152
best_error: 1.268286849223674
best_error: 1.268286642213475
best_error: 1.2682844614836055
best_error: 1.2682842544730129
best_error: 1.2438265452785966
best_error: 1.2438264913335113
best_error: 1.2409330866639876
best_error: 1.2409329955095412
best_error: 1.2133564934942782
best_error: 1.2133563875630615
best_error: 1.2129837548026705
best_error: 1.2129836233936462
best_error: 1.2129274082519836
best_error: 1.2129272620896843
best_error: 1.1884223213714329
best_error: 1.1884222259011852
best_error: 1.1817080451051405
best_error: 1.18170801938288
best_error: 1.1802292738543896
best_error: 1.1802292041074764
best_error: 1.1785873118884829
best_error: 1.1785872858866988
best_error: 1.1778563949214134
best_error: 1.177856392034865
best_error: 1.1774104248900146
best_error: 1.1774104193251962
best_error: 1.1772925758211334
best_error: 1.177292569463008
best_error: 1.1771516416547982
best_error: 1.1771516301794487
best_error: 1.1770231548028591
best_error: 1.177023145194961
best_error: 1.1769578777973329
best_error: 1.1769578740271782
best_error: 1.1769246990777789
best_error: 1.176924695565628
best_error: 1.1768348359226988
best_error: 1.1768348285342305
best_error: 1.1765695981285549
best_error: 1.1765695980501332
best_error: 1.1765695928017086
best_error: 1.1750906969873216
best_error: 1.1750906900714444
best_error: 1.1715532918390312
best_error: 1.171553284946461
best_error: 1.1715532815145826
best_error: 1.1568119861168065
best_error: 1.1568118938487737
best_error: 1.1428306119266527
best_error: 1.1428304183722007
best_error: 1.1324978504961722
best_error: 1.132497732944317
best_error: 1.1221332109405515
best_error: 1.122133153908049
best_error: 1.102917409719685
best_error: 1.102917400313404
best_error: 1.102787419059706
best_error: 1.102787418515913
best_error: 1.102787418452642
best_error: 1.1027874181607187
best_error: 1.102778078970551
best_error: 1.1027780784396817
best_error: 1.1027780783662053
best_error: 1.1027780780632335
best_error: 1.10277174020258
best_error: 1.1027717334629943
best_error: 1.1026994664370386
best_error: 1.102699464077388
best_error: 1.1026727886058418
best_error: 1.102672783247371
best_error: 1.1026580123037883
best_error: 1.1026580114384879
best_error: 1.102658011418574
best_error: 1.1026484259347975
best_error: 1.1026484253321958
best_error: 1.1026484250235569
best_error: 1.1026412929192297
best_error: 1.1026412923252678
best_error: 1.1026412919648063
best_error: 1.1026364822679573
best_error: 1.1026364816843708
best_error: 1.1026364812699214
best_error: 1.1026328303344868
best_error: 1.1026328297562042
best_error: 1.1026328293102128
best_error: 1.1026293545635086
best_error: 1.1026293539867107
best_error: 1.1026293535312508
best_error: 1.1026193614632707
best_error: 1.1026193551799581
best_error: 1.1024606829765387
best_error: 1.1024606805952335
best_error: 1.1021215557926236
best_error: 1.1021215319629165
best_error: 1.1019829343798921
best_error: 1.1019829337995022
best_error: 1.1019829335728013
best_error: 1.1019695560123395
best_error: 1.1019695554354891
best_error: 1.1019695552004092
best_error: 1.1019292050076959
best_error: 1.1019292044482272
best_error: 1.1019292041516975
best_error: 1.101736475997101
best_error: 1.1017364754423464
best_error: 1.1017364751561076
best_error: 1.1003766632750605
best_error: 1.1003766567630613
best_error: 1.1003766196986762
best_error: 1.0997440306928317
best_error: 1.0997440237638911
best_error: 1.0997439786988141
best_error: 1.0993905420157233
best_error: 1.0993905225676226
best_error: 1.0993904753897177
best_error: 1.0976837286891539
best_error: 1.0976837149008418
best_error: 1.0966403207089415
best_error: 1.0966403061489003
best_error: 1.094903601814378
best_error: 1.0949036012365299
best_error: 1.094903600315971
best_error: 1.0948597549027763
best_error: 1.0948597543064786
best_error: 1.0948597534291649
best_error: 1.0948454549412492
best_error: 1.0948454543470383
best_error: 1.0948454534423837
best_error: 1.0948375320183812
best_error: 1.0948375314277126
best_error: 1.0948375304947862
best_error: 1.0948159012224876
best_error: 1.0948159009719458
best_error: 1.0948159006404365
best_error: 1.094815899665123
best_error: 1.0947627879049286
best_error: 1.0947627837078822
best_error: 1.0946720291967842
best_error: 1.094672023184782
best_error: 1.094077230855709
best_error: 1.094077217972945
best_error: 1.0939039933107277
best_error: 1.0939039856376125
best_error: 1.093704618623671
best_error: 1.0937046175088923
best_error: 1.0936973685193527
best_error: 1.093697367437455
best_error: 1.0936828136425771
best_error: 1.0936828000854881
best_error: 1.093665790925425
best_error: 1.0936657781327954
best_error: 1.0936191986992363
best_error: 1.0936191926065728
best_error: 1.0935417019177198
best_error: 1.0935416952021546
best_error: 1.0935069905829657
best_error: 1.093506987628767
best_error: 1.0934555331019822
best_error: 1.0934555316738592
best_error: 1.0934303446999767
best_error: 1.0934303435708834
