ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.932073999735268
best_error: 11.932073924990505
best_error: 11.393831879633513
best_error: 11.393831762318115
best_error: 9.930573440900865
best_error: 9.930573214735055
best_error: 8.873891485947668
best_error: 8.873891211242977
best_error: 8.474849863362817
best_error: 8.474849599045369
best_error: 8.404146372152088
best_error: 8.404146168709717
best_error: 7.761218486933112
best_error: 7.761218290736224
best_error: 6.973747838840387
best_error: 6.973747571330268
best_error: 5.91622443701116
best_error: 5.916224230672566
best_error: 5.834276058909255
best_error: 5.834275812932868
best_error: 5.79299510903804
best_error: 5.792994863725823
best_error: 5.242525359185771
best_error: 5.242524871720802
best_error: 5.022050469135218
best_error: 5.022050054057207
best_error: 4.81996872921985
best_error: 4.819968307795924
best_error: 4.679396812288379
best_error: 4.679396386391808
best_error: 4.65967890190527
best_error: 4.659678479701848
best_error: 4.655236367984777
best_error: 4.6552361640358475
best_error: 4.650247451335669
best_error: 4.650247027928563
best_error: 4.650180338023568
best_error: 4.650180134207356
best_error: 4.649865286948666
best_error: 4.649864863492825
best_error: 4.649623802062094
best_error: 4.649623378575453
best_error: 4.649511951784499
best_error: 4.649511528283584
best_error: 4.649464762278269
best_error: 4.649464338771352
best_error: 4.649433460534494
best_error: 4.649433256737898
best_error: 4.627765208146937
best_error: 4.627764769411098
best_error: 4.626895092379723
best_error: 4.626894598890411
best_error: 4.619355441441807
best_error: 4.6193549895440835
best_error: 4.614454316802412
best_error: 4.61445385694844
best_error: 4.605171748256755
best_error: 4.6051712489506444
best_error: 4.5922999504232305
best_error: 4.592299780743884
best_error: 4.586073493842154
best_error: 4.586073320432321
best_error: 4.583085016965994
best_error: 4.583084821716145
best_error: 4.577118992251094
best_error: 4.5771188086606225
best_error: 4.574566121258588
best_error: 4.574565931334707
best_error: 4.571210225732624
best_error: 4.571210042620391
best_error: 4.538892222880003
best_error: 4.538891736344507
best_error: 4.454977063273931
best_error: 4.454976872868323
best_error: 4.420255832653204
best_error: 4.42025563940735
best_error: 4.232453218817188
best_error: 4.232452748614707
best_error: 4.114634249285643
best_error: 4.114634081046628
best_error: 4.101215299973129
best_error: 4.101214846979544
best_error: 4.063061771108153
best_error: 4.063061305611617
best_error: 4.054963679699663
best_error: 4.054963520177277
best_error: 4.046609395387514
best_error: 4.046608921757429
best_error: 4.024859027140097
best_error: 4.024858545649792
best_error: 3.9873848737737885
best_error: 3.987384734083684
best_error: 3.987384732939256
best_error: 3.940239819698534
best_error: 3.940239267065399
best_error: 3.899217808617547
best_error: 3.8992172289600204
best_error: 3.8883810275502046
best_error: 3.8883809011448096
best_error: 3.888380888058296
best_error: 3.885890186943339
best_error: 3.885889606585887
best_error: 3.8504223970905747
best_error: 3.850422279646767
best_error: 3.850422257688423
best_error: 3.641686077314661
best_error: 3.641686000322804
best_error: 3.641685939743713
best_error: 3.534248484126387
best_error: 3.534248408464547
best_error: 3.534248350077646
best_error: 3.50738956901649
best_error: 3.507389197503472
best_error: 3.4820100353340147
best_error: 3.482009972190119
best_error: 3.4820099039814085
best_error: 3.4817660205321372
best_error: 3.4817656414380043
best_error: 3.481085904829069
best_error: 3.4810858422306876
best_error: 3.4810857735270977
best_error: 3.4808514185339208
best_error: 3.4808510392245946
best_error: 3.48069205100742
best_error: 3.4806919886404866
best_error: 3.4806919197269495
best_error: 3.4806851430778836
best_error: 3.4806850807150127
best_error: 3.4806850117977817
best_error: 3.4806837356283165
best_error: 3.480683356279525
best_error: 3.4806828048327754
best_error: 3.4806827424712976
best_error: 3.480682704924826
