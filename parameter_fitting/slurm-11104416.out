ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.62835882410388
best_error: 100.62835863313362
best_error: 100.62835862019476
best_error: 20.671305013940255
best_error: 20.671305013939644
best_error: 20.671305012825663
best_error: 20.671215196248628
best_error: 20.67121519513145
best_error: 20.670853836522646
best_error: 20.67085383539503
best_error: 20.669374107301277
best_error: 20.669374106130356
best_error: 20.662845400829596
best_error: 20.662845399457208
best_error: 20.62087103727699
best_error: 20.62087103427751
best_error: 20.545381959776748
best_error: 20.545381952658538
best_error: 20.326658639597063
best_error: 20.326658612892963
best_error: 20.244718904281704
best_error: 20.2447188683346
best_error: 14.778383319726867
best_error: 14.778383287800157
best_error: 14.665843636125675
best_error: 14.665843631836399
best_error: 14.665843609242492
best_error: 14.664904308681539
best_error: 14.664904303930761
best_error: 14.664904288539173
best_error: 14.664679383269092
best_error: 14.664679378459972
best_error: 14.66467936406773
best_error: 14.664628489527804
best_error: 14.664628484718035
best_error: 14.664628470325022
best_error: 14.664583735271881
best_error: 14.66458373046154
best_error: 14.664583716067847
best_error: 14.66455901898983
best_error: 14.664559014179169
best_error: 14.664558999785108
best_error: 14.664537508211538
best_error: 14.664537503400608
best_error: 14.664537489006214
best_error: 14.66452485308637
best_error: 14.66452484827528
best_error: 14.66452483388069
best_error: 14.664514088265815
best_error: 14.664514083454584
best_error: 14.664514069059834
best_error: 14.664506704429646
best_error: 14.664506699618325
best_error: 14.664506685223461
best_error: 14.664500819551964
best_error: 14.664500814740569
best_error: 14.664500800345618
best_error: 14.664492654437625
best_error: 14.664492627746657
best_error: 14.664480281986375
best_error: 14.66448027717478
best_error: 14.664480262779177
best_error: 14.664477499419013
best_error: 14.664477494607388
best_error: 14.664477480211703
best_error: 14.664476802688824
best_error: 14.664476797877192
best_error: 14.664476783481485
best_error: 14.66447634642289
best_error: 14.664476341611259
best_error: 14.664476327215533
best_error: 14.664475201155827
best_error: 14.66447519634418
best_error: 14.66447518194842
best_error: 14.664475125901948
best_error: 14.664475121090302
best_error: 14.664475106694539
best_error: 14.664475065539396
best_error: 14.66447506072775
best_error: 14.664475046331983
best_error: 14.664475019025964
best_error: 14.664475014214318
best_error: 14.664474999818548
best_error: 14.664474974219972
best_error: 14.664474969408323
best_error: 14.664474955012558
best_error: 14.66447494955522
best_error: 14.664474944743574
best_error: 14.664474930347808
best_error: 14.664474904571282
best_error: 14.664474899759632
best_error: 14.664474892128906
best_error: 14.664346720998907
best_error: 14.66434669431036
best_error: 14.66366223892918
best_error: 14.663662212274613
best_error: 14.66093614628882
best_error: 14.660936119707959
best_error: 14.655813441875157
best_error: 14.655813415749964
best_error: 14.633682152976018
best_error: 14.633682127973707
best_error: 14.632115742830097
best_error: 14.632115338405171
best_error: 14.601460482038515
best_error: 14.601460481918085
best_error: 14.601460397981473
best_error: 14.596085445213294
best_error: 14.596085445205137
best_error: 14.59608535949215
best_error: 14.595519323408514
best_error: 14.595519323404833
best_error: 14.595519237620227
best_error: 14.595308076359078
best_error: 14.595308076357064
best_error: 14.595307990545736
best_error: 14.595140415188709
best_error: 14.595140034173195
best_error: 14.593970954510095
best_error: 14.593970573631555
best_error: 14.5935406585813
best_error: 14.593540277655864
best_error: 14.59352292674372
best_error: 14.593522839725104
best_error: 14.59330059169902
best_error: 14.593300591695103
best_error: 14.593300505946797
best_error: 14.591628255473202
best_error: 14.591628255473182
best_error: 14.591628169570006
best_error: 14.591141584370227
best_error: 14.591141498418274
best_error: 14.591038918903084
best_error: 14.59103883294085
best_error: 14.590974666169899
best_error: 14.59097458020122
best_error: 14.590963438959625
best_error: 14.590963352989824
best_error: 14.59096153969796
best_error: 14.590961453727967
best_error: 14.590960686452648
best_error: 14.590960600482571
best_error: 14.590960142190829
best_error: 14.5909601208741
best_error: 14.582051850349327
best_error: 14.582051829196814
best_error: 14.582051829034544
best_error: 14.536965572232557
best_error: 14.536965551143664
best_error: 14.50772541990786
best_error: 14.507725417837158
best_error: 14.50772541487214
best_error: 14.507725412056988
best_error: 14.504391057095066
best_error: 14.504391055491936
best_error: 14.504391052056276
best_error: 14.504391049272115
best_error: 14.501720629510565
best_error: 14.501720556823255
best_error: 14.499959462318788
best_error: 14.499959389118512
best_error: 14.492900883032679
best_error: 14.492900808790626
best_error: 14.464406730745244
best_error: 14.464406653196747
best_error: 14.348299874820116
best_error: 14.348299854899615
best_error: 14.348299485705791
best_error: 14.226641683447053
best_error: 14.226641658421652
best_error: 14.221769447294939
best_error: 14.221769438951748
best_error: 14.208952704108931
best_error: 14.20895267950061
best_error: 14.094323014273742
best_error: 14.094322992460286
best_error: 14.094322569492666
best_error: 14.032619841557048
best_error: 14.032619836958151
best_error: 14.032619835524148
best_error: 13.871968391084417
best_error: 13.871968390809396
best_error: 13.87196828018118
best_error: 13.869366170971862
best_error: 13.869366077458007
best_error: 13.866492733192691
best_error: 13.866492728117052
best_error: 13.866492726697075
best_error: 13.862587198509619
best_error: 13.862587131547503
best_error: 13.82463194162778
best_error: 13.824631868466998
best_error: 13.690078007567575
best_error: 13.690078002825434
best_error: 13.690078001932212
best_error: 13.390009850523027
best_error: 13.3900098504403
best_error: 13.390009718972308
best_error: 13.374825172145464
best_error: 13.374825071967765
best_error: 13.36915969907986
best_error: 13.369159609176169
best_error: 13.36574550389572
best_error: 13.365745414608588
best_error: 13.363915586685899
best_error: 13.363915497217597
best_error: 13.363520612313923
best_error: 13.363520522806526
best_error: 13.363375990699044
best_error: 13.363375901177328
best_error: 13.36328191193196
best_error: 13.363281822400932
best_error: 13.363234194168955
best_error: 13.363234104633223
best_error: 13.363216130757749
best_error: 13.363216041220245
best_error: 13.36320432571776
best_error: 13.363204236179087
best_error: 13.363198897468607
best_error: 13.363198807929395
best_error: 13.36319491780786
best_error: 13.363194828268256
best_error: 13.363194709217991
best_error: 13.363194704124762
best_error: 13.363160046903214
best_error: 13.363159957381217
best_error: 13.3630032139061
best_error: 13.363003124404457
best_error: 13.362404359588677
best_error: 13.362404270820726
best_error: 13.360382196098875
best_error: 13.360382109589008
best_error: 13.359937279751957
best_error: 13.359937193224992
best_error: 13.359740871240945
best_error: 13.35974078470642
best_error: 13.359668891911204
best_error: 13.359668886828526
best_error: 13.357435547389983
best_error: 13.357435467094522
best_error: 13.357058469335714
best_error: 13.357058389016153
best_error: 13.356892158959099
best_error: 13.356892078628906
best_error: 13.356808628914795
best_error: 13.356808548579256
best_error: 13.356757684930002
best_error: 13.356757604591206
best_error: 13.356734903276836
best_error: 13.356734822936584
best_error: 13.356718568229319
best_error: 13.356718487888022
best_error: 13.35671727736657
best_error: 13.35671719702519
best_error: 13.356716428609666
best_error: 13.356716348268227
best_error: 13.356716067258793
best_error: 13.356715986917335
best_error: 13.356715980273172
best_error: 13.356715900046705
