ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.195311000823532
best_error: 11.195310984622452
best_error: 11.172759981563672
best_error: 11.172759963570751
best_error: 10.343193652827836
best_error: 10.343193543583274
best_error: 5.723831372240748
best_error: 5.723830760266294
best_error: 4.889651402474614
best_error: 4.889651237147055
best_error: 4.840397738522286
best_error: 4.840397716272453
best_error: 4.8329549812958605
best_error: 4.832954981208273
best_error: 4.832954970456024
best_error: 4.827755068435538
best_error: 4.827755068346367
best_error: 4.8277550570587255
best_error: 4.820832578214345
best_error: 4.820832568275348
best_error: 4.820832560789656
best_error: 4.790147810497383
best_error: 4.790147810412668
best_error: 4.790147802504476
best_error: 4.644960637883761
best_error: 4.644960597389588
best_error: 4.550954349791345
best_error: 4.550954265337408
best_error: 4.529902952476958
best_error: 4.529902891353253
best_error: 4.498885612737881
best_error: 4.498885612689411
best_error: 4.498885605694342
best_error: 4.492962209925048
best_error: 4.492962202731249
best_error: 4.482313085255996
best_error: 4.482313074219311
best_error: 4.471383605387966
best_error: 4.471383533763422
best_error: 4.4605841768405785
best_error: 4.460584090449306
best_error: 4.439135297848236
best_error: 4.439135291338164
best_error: 4.439135289489647
best_error: 4.403641503658708
best_error: 4.403641335773022
best_error: 4.250927376075149
best_error: 4.250927375812732
best_error: 4.25092736944403
best_error: 4.239657678781341
best_error: 4.239657530804828
best_error: 4.234678646775551
best_error: 4.2346783695381705
best_error: 4.194108292978654
best_error: 4.194108145734962
best_error: 4.107589967043496
best_error: 4.1075898933660016
best_error: 4.0788508067046365
best_error: 4.078850787666587
best_error: 4.07654846283672
best_error: 4.076548450423091
best_error: 4.074132183484545
best_error: 4.074132158891265
best_error: 4.067310308450273
best_error: 4.067310282562966
best_error: 4.044207866205358
best_error: 4.044207849444576
best_error: 4.035854117273357
best_error: 4.035854106530859
best_error: 4.017881716793284
best_error: 4.017881705369118
best_error: 4.014587210455444
best_error: 4.01458718772801
best_error: 4.01230651314447
best_error: 4.012306497795593
best_error: 4.012252630289679
best_error: 4.012252616333867
best_error: 4.012231131194712
best_error: 4.012231117513135
best_error: 4.012204963919838
best_error: 4.012204951337337
best_error: 4.0121934335341765
best_error: 4.012193420945487
best_error: 4.012182814597587
best_error: 4.012182802003202
best_error: 4.012177120854729
best_error: 4.012177108257285
best_error: 4.012171903376558
best_error: 4.012171890776321
best_error: 4.012168997489793
best_error: 4.012168984887994
best_error: 4.012166360366804
best_error: 4.0121663477635945
best_error: 4.012164761102321
best_error: 4.012164748498251
best_error: 4.012163341989803
best_error: 4.012163329384973
best_error: 4.012162232816768
best_error: 4.012162220211346
best_error: 4.012161327525674
best_error: 4.0121613149197675
best_error: 4.01215975950051
best_error: 4.012159746893756
best_error: 4.012158916119964
best_error: 4.01215890351276
best_error: 4.012157222399594
best_error: 4.012157202920973
best_error: 4.012156578704859
best_error: 4.012156566096121
best_error: 4.012153923719659
best_error: 4.012153911062841
best_error: 4.0121535677264575
best_error: 4.012153553055699
best_error: 4.012148917442115
best_error: 4.012148904403855
best_error: 4.012148354561188
best_error: 4.012148340754037
best_error: 4.0121460789374375
best_error: 4.012146065507684
best_error: 4.012144345837549
best_error: 4.012144326687812
best_error: 4.012133800684307
best_error: 4.0121337813029685
best_error: 4.012090876299021
best_error: 4.012090856602746
best_error: 4.012028077546615
best_error: 4.012028056907498
best_error: 4.011965152531256
best_error: 4.011965131902739
best_error: 4.011443613123548
best_error: 4.011443593267556
best_error: 4.01143162211416
best_error: 4.0114316022598935
best_error: 4.011221345761364
best_error: 4.0112213265753205
best_error: 4.0111880137007265
best_error: 4.011187996537339
best_error: 4.011110387976247
best_error: 4.011110373790095
best_error: 4.011084791250572
best_error: 4.0110847783653965
best_error: 4.011065005081126
best_error: 4.011064992711875
best_error: 4.011057534423742
best_error: 4.011057522054189
best_error: 4.011052631022662
best_error: 4.011052618652923
best_error: 4.011049375153213
best_error: 4.011049362783351
best_error: 4.011047186398914
best_error: 4.011047174028963
best_error: 4.011045682271627
best_error: 4.011045669901613
best_error: 4.011044600942759
best_error: 4.011044588572705
best_error: 4.011043757915469
best_error: 4.0110437455453845
best_error: 4.01104297199149
best_error: 4.011042959621374
best_error: 4.0110419718607435
best_error: 4.011041959593419
best_error: 4.011040545354829
best_error: 4.011040533087454
best_error: 4.0110399596832425
best_error: 4.011039947299378
best_error: 4.011039660015865
best_error: 4.011039647631833
best_error: 4.011039381997388
best_error: 4.0110393696131945
best_error: 4.011039244443025
best_error: 4.011039232058751
best_error: 4.01103911649407
best_error: 4.011039104109725
best_error: 4.011039098047832
best_error: 4.011039085663466
best_error: 4.011039081206268
best_error: 4.011039068821898
best_error: 4.0110390590043865
best_error: 4.011039050182734
best_error: 4.011039044048798
best_error: 4.0110390388047055
best_error: 4.011039032390777
best_error: 4.011039028057993
best_error: 4.011039027820395
best_error: 4.0110390247264025
