ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.257251962659153
best_error: 8.257251950943717
best_error: 2.8967368125114676
best_error: 2.8967367794690526
best_error: 2.8843430015309344
best_error: 2.8843429989883105
best_error: 2.8832819561013476
best_error: 2.883281953643524
best_error: 2.883281953215281
best_error: 2.882770437477306
best_error: 2.8827704373740057
best_error: 2.8827704346318317
best_error: 2.877636470526213
best_error: 2.8776364675888324
best_error: 2.8751268613566077
best_error: 2.8751268583855363
best_error: 2.8732189365129437
best_error: 2.8732189333700364
best_error: 2.871939004423135
best_error: 2.871939001216744
best_error: 2.8706844755344303
best_error: 2.8706844722494638
best_error: 2.870142169052392
best_error: 2.8701421657659183
best_error: 2.869705291185419
best_error: 2.8697052878689053
best_error: 2.869524718460434
best_error: 2.869524715125944
best_error: 2.8694084408388494
best_error: 2.8694084375022895
best_error: 2.8693060765001515
best_error: 2.869306073147014
best_error: 2.869280368472064
best_error: 2.869280365114671
best_error: 2.8692631282618266
best_error: 2.8692631249016105
best_error: 2.8692520380091864
best_error: 2.8692520346471166
best_error: 2.8692486205210037
best_error: 2.8692486171583638
best_error: 2.869245851053165
best_error: 2.8692458476900615
best_error: 2.8692447406509323
best_error: 2.8692447372876453
best_error: 2.8692440585703687
best_error: 2.8692440552069653
best_error: 2.8692434314613053
best_error: 2.869243428097798
best_error: 2.8692431366282363
best_error: 2.8692431332646797
best_error: 2.869242816665268
best_error: 2.8692428133016574
best_error: 2.8692427061669123
best_error: 2.869242702803283
best_error: 2.8692426394378985
best_error: 2.869242636074259
best_error: 2.869242586852498
best_error: 2.869242583488848
best_error: 2.8692425590253317
best_error: 2.8692425556616774
best_error: 2.8692425308614204
best_error: 2.8692425274977635
best_error: 2.86924251248267
best_error: 2.869242509119009
best_error: 2.8692425067499783
best_error: 2.8692425033863147
best_error: 2.869242499864465
best_error: 2.8692424965008
best_error: 2.869242493128986
best_error: 2.869242489765321
best_error: 2.868320840309077
best_error: 2.8683208369117166
best_error: 2.8683193582255373
best_error: 2.8683193582141486
best_error: 2.868319354828223
best_error: 2.8683182333623316
best_error: 2.8683182299649403
best_error: 2.8683148224516586
best_error: 2.8683148190540297
best_error: 2.8683017900903605
best_error: 2.86830178669178
best_error: 2.868258624086379
best_error: 2.8682586206842267
best_error: 2.8681662057176642
best_error: 2.8681662057126514
best_error: 2.868166202313659
best_error: 2.868041216102307
best_error: 2.8680412126865145
best_error: 2.8679378802044035
best_error: 2.8679378767789983
best_error: 2.867779383886146
best_error: 2.867204639334586
best_error: 2.865065996936247
best_error: 2.8650659969285535
best_error: 2.8547780340319138
best_error: 2.8547780338454722
best_error: 2.8498726078265997
best_error: 2.8498726075575496
best_error: 2.8415372682704754
best_error: 2.8384919822446344
best_error: 2.837968344777591
best_error: 2.8379542710910917
best_error: 2.837912839433869
best_error: 2.83790682747667
best_error: 2.8366319354467366
best_error: 2.8243587173122036
best_error: 2.8243587171364712
best_error: 2.8166473544729675
best_error: 2.8032471245944355
best_error: 2.803247074215847
best_error: 2.782574595407251
best_error: 2.7825745463475444
best_error: 2.771174300320524
best_error: 2.7711742539563344
best_error: 2.7710168334643765
best_error: 2.767891127822098
best_error: 2.767430480161959
best_error: 2.767411527213235
best_error: 2.7674086547374506
best_error: 2.7674070332168017
best_error: 2.767406120409587
best_error: 2.7674056084705887
best_error: 2.7674053227268103
best_error: 2.7674051641769966
best_error: 2.7674050456379504
best_error: 2.767404989863103
best_error: 2.767404957338411
best_error: 2.7674049439461594
best_error: 2.767404940624735
best_error: 2.767404939884268
