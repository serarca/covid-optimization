ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.36297135768369
best_error: 98.3629712864848
best_error: 98.3629712665371
best_error: 98.36297121488704
best_error: 18.04735500334094
best_error: 18.047354742381454
best_error: 18.047352923303215
best_error: 15.524058593743396
best_error: 15.524058592431015
best_error: 15.524058550212718
best_error: 15.442972498445242
best_error: 15.442972496959914
best_error: 15.44297244879954
best_error: 14.992622949393942
best_error: 14.992622947223277
best_error: 14.99262286104775
best_error: 13.546992901396987
best_error: 13.546992900750581
best_error: 13.546992653126203
best_error: 10.435359518991277
best_error: 10.435359396115366
best_error: 10.157276587786436
best_error: 10.157276587785791
best_error: 10.157276580392574
best_error: 10.157276561292514
best_error: 10.148198444451285
best_error: 10.148198440444917
best_error: 10.14819843686745
best_error: 10.14819842146747
best_error: 9.61426281848579
best_error: 9.614262818484862
best_error: 9.61426280995202
best_error: 9.614262793881707
best_error: 9.113893525081249
best_error: 9.113893507778624
best_error: 9.113893490304658
best_error: 8.771957778138862
best_error: 8.771957730171954
best_error: 7.853241972298125
best_error: 7.85324193235842
best_error: 7.695055352282924
best_error: 7.695055152363663
best_error: 7.610861842469699
best_error: 7.610861832074142
best_error: 7.572001561576101
best_error: 7.572001548660067
best_error: 7.564301075056758
best_error: 7.564301073217765
best_error: 7.564301068635915
best_error: 7.564301063799749
best_error: 7.551300339565004
best_error: 7.551300337297938
best_error: 7.551300337072625
best_error: 7.551300336272568
best_error: 7.551300333517204
best_error: 7.551300328292781
best_error: 7.515616270241087
best_error: 7.5156160120440365
best_error: 7.48915105087296
best_error: 7.489151044840818
best_error: 7.489151040781781
best_error: 7.489151039025597
best_error: 7.483463774612542
best_error: 7.483463758588813
best_error: 7.444050449074558
best_error: 7.444050434340204
best_error: 7.378743050934105
best_error: 7.378742720838155
best_error: 7.324171893854183
best_error: 7.324171695676716
best_error: 7.277515806986433
best_error: 7.2775157985332
best_error: 7.271528126008159
best_error: 7.271528117854147
best_error: 7.271507073002869
best_error: 7.271506838273529
best_error: 7.271042396754568
best_error: 7.2710421342609015
best_error: 7.270625637454609
best_error: 7.2706253756544985
best_error: 7.270604361126469
best_error: 7.270604352834887
best_error: 7.270472644101611
best_error: 7.270472635827749
best_error: 7.27025254593817
best_error: 7.270252537579937
best_error: 7.269414778667147
best_error: 7.269414770337613
best_error: 7.269379448755457
best_error: 7.269379205533742
best_error: 7.268990218089744
best_error: 7.268989974987021
best_error: 7.2680268808045545
best_error: 7.268026872387838
best_error: 7.266163068333131
best_error: 7.266163059898935
best_error: 7.259768132434774
best_error: 7.259768124211693
best_error: 7.237728313006867
best_error: 7.2377283022398125
best_error: 7.237728300968428
best_error: 7.233089277959936
best_error: 7.23308926732197
best_error: 7.233089266519032
best_error: 7.2240890862531355
best_error: 7.224089076288652
best_error: 7.221695696029318
best_error: 7.221695685796098
best_error: 7.2209727933149175
best_error: 7.220972783128293
best_error: 7.2203893387018905
best_error: 7.220389328254108
best_error: 7.220067962002723
best_error: 7.220067951214055
best_error: 7.220067951114256
best_error: 7.2133875398039855
best_error: 7.213387529691888
best_error: 7.2133875292935326
best_error: 7.19421827780211
best_error: 7.194218268829646
best_error: 7.178624697287121
best_error: 7.178624688902653
best_error: 7.176542898392205
best_error: 7.176542890355773
best_error: 7.175743351618742
best_error: 7.175743117193495
best_error: 7.155784824424136
best_error: 7.155784816035987
best_error: 7.15578481549521
best_error: 7.147825377586517
best_error: 7.147825369053699
best_error: 7.147825368148547
best_error: 7.138924099569824
best_error: 7.138924090432955
best_error: 7.138924088754411
best_error: 7.137439656729902
best_error: 7.137439646872149
best_error: 7.137439644285304
best_error: 7.136090669806125
best_error: 7.136090659676502
best_error: 7.136090656843333
best_error: 7.1356364761213396
best_error: 7.13563646629637
best_error: 7.13563646449299
best_error: 7.134668812956755
best_error: 7.134668803031516
best_error: 7.134668800986478
best_error: 7.133192129278359
best_error: 7.133192120392256
best_error: 7.132263616818088
best_error: 7.132263607825743
best_error: 7.132263607771041
best_error: 7.129382410371067
best_error: 7.129382401036688
best_error: 7.129382399114121
best_error: 7.125015938386721
best_error: 7.125015929650127
best_error: 7.125015928084826
