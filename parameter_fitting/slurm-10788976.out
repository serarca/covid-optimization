ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.65322073804273
best_error: 10.653220708731698
best_error: 10.386675387582379
best_error: 10.386675338400286
best_error: 10.04657863158119
best_error: 10.046578553016687
best_error: 9.510278090215392
best_error: 9.510277959999367
best_error: 5.009735394343529
best_error: 5.009735209523015
best_error: 4.7578305844858795
best_error: 4.757830583799232
best_error: 4.757830341626693
best_error: 4.67047771203919
best_error: 4.6704776649839035
best_error: 4.6704775671625
best_error: 4.653774044594238
best_error: 4.653773991653621
best_error: 4.653773911772554
best_error: 4.60036435306213
best_error: 4.600364167419645
best_error: 4.584279853243775
best_error: 4.58427980191807
best_error: 4.584279717418722
best_error: 4.485382442634214
best_error: 4.485382391681134
best_error: 4.48538230421412
best_error: 4.474842625355634
best_error: 4.474842574380123
best_error: 4.474842486873133
best_error: 4.467874899846876
best_error: 4.467874849235028
best_error: 4.46787476033656
best_error: 4.464881280330784
best_error: 4.464881229761997
best_error: 4.464881140443678
best_error: 4.463536826487077
best_error: 4.463536643864968
best_error: 4.463460407657455
best_error: 4.46346035710862
best_error: 4.4634602675912625
best_error: 4.463446003272323
best_error: 4.463445952723681
best_error: 4.463445863204312
best_error: 4.4634366650010335
best_error: 4.463436614452531
best_error: 4.4634365249318435
best_error: 4.46343259247311
best_error: 4.463432541924663
best_error: 4.463432452403409
best_error: 4.463430805687189
best_error: 4.463430623067394
best_error: 3.962069574919872
best_error: 3.962069294788396
best_error: 3.9617346901368578
best_error: 3.9617344117575746
best_error: 3.9515186507585494
best_error: 3.951518372377887
best_error: 3.909912794632778
best_error: 3.909912519633977
best_error: 3.8540938043655855
best_error: 3.854093642054659
best_error: 3.850361446419807
best_error: 3.850361181730941
best_error: 3.7917765419976357
best_error: 3.7917762807898576
best_error: 3.7869811252304375
best_error: 3.7869808658354662
best_error: 3.7852823638451456
best_error: 3.7852822064562996
best_error: 3.7848337168728863
best_error: 3.7848334587249823
best_error: 3.7847696482763755
best_error: 3.784769390122089
best_error: 3.7847534068989708
best_error: 3.7847532494892895
best_error: 3.7847445555992216
best_error: 3.784744404160625
best_error: 3.784744271725751
best_error: 3.7768235835579347
best_error: 3.7768234276202657
best_error: 3.747121466116683
best_error: 3.747121312690918
best_error: 3.5972472920191274
best_error: 3.5972471608070484
best_error: 3.594148311754861
best_error: 3.5941481808090776
best_error: 3.5864476129751983
best_error: 3.5864474845056176
best_error: 3.582875702100085
best_error: 3.5828755709379414
best_error: 3.5519832855136575
best_error: 3.5519829103204366
best_error: 3.476194425248452
best_error: 3.4761940081629135
best_error: 3.4692090408591856
best_error: 3.469208938758709
best_error: 3.4529733429666445
best_error: 3.4529729315271465
best_error: 3.436295494396586
best_error: 3.436295082555323
best_error: 3.429506467604904
best_error: 3.429506346641948
best_error: 3.4229906005730797
best_error: 3.4229901954599518
best_error: 3.41988058825303
best_error: 3.419880185321369
best_error: 3.417766807122989
best_error: 3.417766683640346
best_error: 3.4169614572449625
best_error: 3.41696106485918
best_error: 3.416602684031989
best_error: 3.416602561457922
best_error: 3.4165922237493067
best_error: 3.416591827344371
best_error: 3.416391342754638
best_error: 3.4163909450260173
best_error: 3.4145847903277247
best_error: 3.4145846688531285
best_error: 3.413553650095051
best_error: 3.4135532520271914
best_error: 3.4122269111276204
best_error: 3.4122267909407293
best_error: 3.4113858911173227
best_error: 3.411385770705603
best_error: 3.4108662885500918
best_error: 3.4108658873064526
best_error: 3.4105211344916064
best_error: 3.4105210154919994
best_error: 3.41008221040234
best_error: 3.4100818049207575
best_error: 3.409692536517347
best_error: 3.409692417677043
best_error: 3.4093795879095845
best_error: 3.4093791867963765
best_error: 3.409055108958702
best_error: 3.4090549889208743
best_error: 3.4089823656765024
best_error: 3.4089822456599865
best_error: 3.4088566076612095
best_error: 3.408856206583766
best_error: 3.408475250081575
best_error: 3.408475131370479
best_error: 3.4082841331190323
best_error: 3.4082840131315804
best_error: 3.4082762317067656
best_error: 3.4082758299095675
best_error: 3.4082538095618675
best_error: 3.4082536895777613
best_error: 3.4082295936692706
best_error: 3.4082294746789605
best_error: 3.408085162829775
best_error: 3.408084760052464
best_error: 3.4080666588029103
best_error: 3.408066256037281
best_error: 3.4080593516477378
best_error: 3.4080589488867155
best_error: 3.408056093264515
best_error: 3.4080556905055683
best_error: 3.4080556099233044
best_error: 3.408055609797194
best_error: 3.4080556093023304
best_error: 3.408055385590494
best_error: 3.408055385457589
best_error: 3.4080553793095927
best_error: 3.4080553622664715
best_error: 3.408055362133559
best_error: 3.4080553620087817
