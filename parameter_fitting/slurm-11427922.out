ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 84
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 14.26702629048576
best_error: 14.267025877082187
best_error: 3.9705478092904407
best_error: 3.9705478066416107
best_error: 3.968701225259699
best_error: 3.968701225244252
best_error: 3.9687012251653884
best_error: 3.9612213579499094
best_error: 3.961221357933658
best_error: 3.961221357854513
best_error: 3.929550414041886
best_error: 3.9295504140217083
best_error: 3.9295504139417234
best_error: 3.777525520628818
best_error: 3.7775255205655163
best_error: 3.7775255204974916
best_error: 3.668147870602505
best_error: 3.6681478704467163
best_error: 3.6681478704337875
best_error: 3.5591822001779247
best_error: 3.5591821998099262
best_error: 3.4779498641474356
best_error: 3.4779498635343526
best_error: 3.425045539128795
best_error: 3.425045535673042
best_error: 3.4234649726388566
best_error: 3.4234649718592425
best_error: 3.4234649717968653
best_error: 3.42229578984993
best_error: 3.422295789817626
best_error: 3.4222957889819896
best_error: 3.4184932342763417
best_error: 3.418493233294883
best_error: 3.3765999049198814
best_error: 3.376599901714964
best_error: 2.8625506651029142
best_error: 2.862550525521071
best_error: 2.2396243215229323
best_error: 2.2396241998685587
best_error: 2.1260490193826174
best_error: 2.126048954356916
best_error: 2.0847049181225024
best_error: 2.0847049136993685
best_error: 2.0847049111665883
best_error: 2.0794183670498625
best_error: 2.079418348803065
best_error: 2.0742182722886517
best_error: 2.0742182533634814
best_error: 2.049365217043557
best_error: 2.0493652104669255
best_error: 2.020717475817555
best_error: 2.020717382795969
best_error: 1.959432597483309
best_error: 1.9594325519264226
best_error: 1.9404016789019796
best_error: 1.9404016593680504
best_error: 1.9219534122162971
best_error: 1.9219533885499178
best_error: 1.8841692120024616
best_error: 1.8841691935239115
best_error: 1.8347800915535362
best_error: 1.8347799978875567
best_error: 1.8291906244469234
best_error: 1.8291906009324668
best_error: 1.8211006377262324
best_error: 1.8211006052967225
best_error: 1.8190019992378512
best_error: 1.8190019626823757
best_error: 1.817905227792262
best_error: 1.817905188564861
best_error: 1.8095830018029335
best_error: 1.8095829568598083
best_error: 1.761636973731969
best_error: 1.7616369683138273
best_error: 1.7586466505372564
best_error: 1.7586466328935522
best_error: 1.7526812746360747
best_error: 1.7526812517796204
best_error: 1.746202706336413
best_error: 1.7462026876429737
best_error: 1.7072910928231957
best_error: 1.7072910886561428
best_error: 1.6845653429710417
best_error: 1.6845653164070709
best_error: 1.6575484997951813
best_error: 1.6575484454520515
best_error: 1.6568861173563452
best_error: 1.6568860570972108
best_error: 1.6549360714678705
best_error: 1.6549360053085553
best_error: 1.6384171798264668
best_error: 1.6384171700049566
best_error: 1.6351984369264658
best_error: 1.6351984236859087
best_error: 1.6316916580521998
best_error: 1.6316916577678047
best_error: 1.6304716477770742
best_error: 1.630471636792949
best_error: 1.629024238269775
best_error: 1.6290242348956605
best_error: 1.627959958301464
best_error: 1.6279599576282473
best_error: 1.6271015460613163
best_error: 1.627101544380192
best_error: 1.6271015437498222
best_error: 1.6264152201144504
best_error: 1.6264152163981753
best_error: 1.6263232922934139
best_error: 1.6263232919570259
best_error: 1.626323291868501
best_error: 1.626221645316238
best_error: 1.6262216452272416
best_error: 1.6262216449994726
best_error: 1.6261691259898348
best_error: 1.6261691258883968
best_error: 1.6261691256896904
best_error: 1.6261400827169479
best_error: 1.6261400800711203
best_error: 1.6257603768994289
best_error: 1.6257603746493643
best_error: 1.6244050034033066
best_error: 1.6244049993415262
best_error: 1.6221548935466368
best_error: 1.622154886707748
best_error: 1.6207426266045422
best_error: 1.6207426231737008
best_error: 1.6177367286205058
best_error: 1.6177367273364027
best_error: 1.6155327960134858
best_error: 1.6155327849854726
best_error: 1.6146323210292564
best_error: 1.6146323169855805
best_error: 1.6125499520168143
best_error: 1.6125499455543004
best_error: 1.6074867646788504
best_error: 1.607486716415396
best_error: 1.5723469602814135
best_error: 1.572346883269158
best_error: 1.5680123220710716
best_error: 1.5680123210468673
best_error: 1.5680123190087236
best_error: 1.5679236210095737
best_error: 1.5679236210095733
best_error: 1.5679236180399743
best_error: 1.5674152625405224
best_error: 1.5674152605802667
best_error: 1.5674152604087124
best_error: 1.5670871613265396
best_error: 1.5670871587638937
best_error: 1.5665941387750248
best_error: 1.5665941337282556
best_error: 1.5662751876922656
best_error: 1.5662751848933645
best_error: 1.564393146757301
best_error: 1.564393144162658
best_error: 1.5643115253547868
best_error: 1.5643115226208255
best_error: 1.5626865122803937
best_error: 1.5626865066629807
best_error: 1.562425631676802
best_error: 1.5624256289320995
best_error: 1.5521890857279077
best_error: 1.5521890800679872
best_error: 1.5484366433386993
best_error: 1.5484366384534112
best_error: 1.5462194478532703
best_error: 1.546219442796013
best_error: 1.5430961461922112
best_error: 1.543096141186053
best_error: 1.5429427959826378
best_error: 1.5429427947299872
best_error: 1.5428807508322404
best_error: 1.5428807487835
best_error: 1.5427478005831434
best_error: 1.542747791724086
best_error: 1.5424358060120686
best_error: 1.5424357955716792
best_error: 1.5404518664803637
best_error: 1.5404518485152883
best_error: 1.539715574217996
best_error: 1.5397155656717305
best_error: 1.5395399607556493
best_error: 1.5395399602154307
best_error: 1.5395232061686968
best_error: 1.5395232061325261
best_error: 1.5395232059506008
best_error: 1.539523205755458
best_error: 1.5395076559423808
best_error: 1.5395076559284462
best_error: 1.5395076559207335
best_error: 1.539507655727643
best_error: 1.5395076555245581
best_error: 1.5394596698739145
best_error: 1.5394596698686471
best_error: 1.539459669749842
best_error: 1.5394596693821914
best_error: 1.539234990110932
best_error: 1.5392349887478767
best_error: 1.538575973448387
best_error: 1.538575971139656
best_error: 1.5377262868710573
best_error: 1.537726284494373
best_error: 1.536409268367601
best_error: 1.5364092656585322
best_error: 1.5362819993659949
best_error: 1.5362819980191753
best_error: 1.536107349284448
best_error: 1.536107347832523
best_error: 1.5360990523707954
best_error: 1.5360990505310053
best_error: 1.5360835255757013
best_error: 1.5360835252294884
best_error: 1.536082905081728
best_error: 1.5360829048633535
best_error: 1.5360826824353513
best_error: 1.5360826822888292
best_error: 1.5360826516424941
best_error: 1.536082651363116
best_error: 1.5360824121099272
best_error: 1.5360824117399219
best_error: 1.536081841842024
best_error: 1.5360818416134085
best_error: 1.5360811828056753
best_error: 1.5360811822330447
best_error: 1.5360804615872092
best_error: 1.5360804611271897
best_error: 1.5360786244233284
best_error: 1.5360786237750121
best_error: 1.5360767063920358
best_error: 1.5360767063644678
best_error: 1.536076706359184
best_error: 1.5360767063059027
best_error: 1.5360697143087199
best_error: 1.5360697136507264
best_error: 1.5360434368366216
best_error: 1.536043433550663
best_error: 1.5360328328437884
best_error: 1.5360328278172097
best_error: 1.5360146731777562
best_error: 1.5360146676045292
best_error: 1.5358354472980826
best_error: 1.5358354373909255
best_error: 1.535145645518686
best_error: 1.5351456357353888
best_error: 1.535044842566754
best_error: 1.5350448414904598
best_error: 1.5350448369486935
best_error: 1.5343653584232553
best_error: 1.534365354026539
best_error: 1.5343628720010105
best_error: 1.5343628667668918
best_error: 1.534049346972915
best_error: 1.5340493439330252
best_error: 1.5332353069712743
best_error: 1.5332353046860627
best_error: 1.5331544601522855
best_error: 1.533154459339261
best_error: 1.5331544587137274
