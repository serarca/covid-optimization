ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.723553579391176
best_error: 11.723553578636503
best_error: 11.665560952824002
best_error: 11.665560951213841
best_error: 11.354974333547244
best_error: 11.35497431894218
best_error: 10.995738281156179
best_error: 10.99573824146814
best_error: 10.360562785777002
best_error: 10.360562698888875
best_error: 9.20106416355499
best_error: 9.201063975196979
best_error: 7.891819557145237
best_error: 7.891819517671014
best_error: 7.891819302958824
best_error: 7.891022751553576
best_error: 7.891022708176235
best_error: 7.891022497698197
best_error: 4.786763716382906
best_error: 4.786763347903005
best_error: 4.586926413505742
best_error: 4.586926377160227
best_error: 4.586926278174353
best_error: 4.534574641396398
best_error: 4.534574622822391
best_error: 4.534574588785526
best_error: 4.514570103622275
best_error: 4.514570100907866
best_error: 4.511295077180709
best_error: 4.511295072508807
best_error: 4.511024559725945
best_error: 4.511024551249941
best_error: 4.511024488393676
best_error: 4.5107003080271175
best_error: 4.510700298129239
best_error: 4.5107002395623415
best_error: 4.508374936110986
best_error: 4.508374931457092
best_error: 4.463611616847886
best_error: 4.463611615128016
best_error: 4.41648978113594
best_error: 4.4164897789611866
best_error: 4.416489776847629
best_error: 4.409163214709656
best_error: 4.409163214028777
best_error: 4.408505691392271
best_error: 4.408505690723937
best_error: 4.408479516776878
best_error: 4.408479512239927
best_error: 4.4084794980058986
best_error: 4.40845951830441
best_error: 4.408459517639923
best_error: 4.408402587196822
best_error: 4.4084025865663765
best_error: 4.408393573549276
best_error: 4.408393569381851
best_error: 4.408393553089221
best_error: 4.40838730516178
best_error: 4.408387301077437
best_error: 4.408387284446491
best_error: 4.40837593616625
best_error: 4.408375918327662
best_error: 4.408375837201991
best_error: 4.408269700136115
best_error: 4.40826969736951
best_error: 4.4082696797108385
best_error: 4.407832369299145
best_error: 4.407832368861195
best_error: 4.4076071933334235
best_error: 4.407607175832243
best_error: 4.407607092995536
best_error: 4.407525384082549
best_error: 4.407525366444174
best_error: 4.4075252842888695
best_error: 4.407196363489348
best_error: 4.407196344605699
best_error: 4.407196267245455
best_error: 4.407080381526313
best_error: 4.407080376911056
best_error: 4.407080362945971
best_error: 4.406573045877293
best_error: 4.406573041676692
best_error: 4.406573025287264
best_error: 4.406524129218181
best_error: 4.406524129218175
best_error: 4.406181378471441
best_error: 4.406181378471429
best_error: 4.406032706829165
best_error: 4.406032706829152
best_error: 4.405711474939907
best_error: 4.405711470292992
best_error: 4.4057114562545365
best_error: 4.405708446322604
best_error: 4.405708446322592
best_error: 4.405675022903641
best_error: 4.4056750183173055
best_error: 4.405675003442413
best_error: 4.405517238004792
best_error: 4.405517233518476
best_error: 4.4055172181617275
best_error: 4.405476258739366
best_error: 4.40547625428156
best_error: 4.405476238837649
best_error: 4.405469594023651
best_error: 4.40546958956706
best_error: 4.405469574119587
best_error: 4.405467100639575
best_error: 4.405467100639564
best_error: 4.405459157658678
best_error: 4.405459157658669
best_error: 4.405437078381441
best_error: 4.40543707393639
best_error: 4.4054370581371725
best_error: 4.40540972870849
best_error: 4.405409724864663
best_error: 4.405409706067392
best_error: 4.405405213970812
best_error: 4.4054052139708
best_error: 4.405403140657265
best_error: 4.405403136822041
best_error: 4.40540311809992
best_error: 4.405403029155531
best_error: 4.405403029155521
best_error: 4.405375119804149
best_error: 4.405375115733049
best_error: 4.405375098093947
best_error: 4.405361719943865
best_error: 4.405361715789633
best_error: 4.405361698365384
best_error: 4.405361442107227
best_error: 4.405361437952143
best_error: 4.405361420529745
best_error: 4.405361324202163
best_error: 4.40536132004672
