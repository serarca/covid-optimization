ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 94
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.78076273274503
best_error: 97.78076247433309
best_error: 20.279226394609026
best_error: 20.27922639456029
best_error: 20.27922639428632
best_error: 20.27922639236432
best_error: 20.278897915753653
best_error: 20.27889791570488
best_error: 20.27758350322737
best_error: 20.27758350317941
best_error: 20.272294868331507
best_error: 20.2722948682832
best_error: 20.249709088828666
best_error: 20.249709088777465
best_error: 20.12823339846475
best_error: 20.128233398399573
best_error: 18.61581232404387
best_error: 18.615812323845834
best_error: 18.615797358404766
best_error: 18.61579735820673
best_error: 18.61573746237851
best_error: 18.61573746218048
best_error: 18.615497340833127
best_error: 18.61549734063511
best_error: 18.614528130545484
best_error: 18.61452813034751
best_error: 18.61050415704765
best_error: 18.610504156850197
best_error: 18.5913198236737
best_error: 18.591319823477743
best_error: 18.44598867406054
best_error: 18.44598867405901
best_error: 18.445988673886948
best_error: 18.44598682628464
best_error: 18.445986826283125
best_error: 18.44598682611105
best_error: 18.44597943517763
best_error: 18.445979435176113
best_error: 18.445979435004038
best_error: 18.44594987069414
best_error: 18.445949870692594
best_error: 18.44594987052055
best_error: 18.44583161187193
best_error: 18.445831611870354
best_error: 18.44583161169834
best_error: 18.44535856230614
best_error: 18.445358562304378
best_error: 18.445358562132547
best_error: 18.443466131349787
best_error: 18.443466131347282
best_error: 18.44346613117618
best_error: 18.4360792653653
best_error: 18.436079265359528
best_error: 18.4360792651972
best_error: 18.43363444598422
best_error: 18.433634445977187
best_error: 18.433634426572933
best_error: 18.433634426565884
best_error: 18.433634348837156
best_error: 18.433634348830104
best_error: 18.433634036442363
best_error: 18.433634036435233
best_error: 18.433632763462708
best_error: 18.433632763455375
best_error: 18.433627285868546
best_error: 18.43362728586034
best_error: 18.433598427784606
best_error: 18.43359842777218
best_error: 18.43330412159332
best_error: 18.433304121548506
best_error: 18.40082344557907
best_error: 18.40082344190629
best_error: 18.35138175041246
best_error: 18.351381747266327
best_error: 18.351381739610904
best_error: 18.21631146261023
best_error: 18.21631145664174
best_error: 18.21631143503686
best_error: 18.194103712915467
best_error: 18.194103707964917
best_error: 18.194103684242005
best_error: 18.11888111596825
best_error: 18.118881115889767
best_error: 18.118881104803187
best_error: 18.11784175854806
best_error: 18.117841758467538
best_error: 18.117841747115293
best_error: 18.106014588824866
best_error: 18.106014588743786
best_error: 18.10601458584938
best_error: 18.10121225928209
best_error: 18.10121225833588
best_error: 17.884790914134733
best_error: 17.884790908763705
best_error: 17.884790885231375
best_error: 17.88479085118745
best_error: 17.70967363840317
best_error: 17.709673634261843
best_error: 17.709673632956424
best_error: 17.709673592527274
best_error: 17.683471501893624
best_error: 17.683471501893102
best_error: 17.68347148523206
best_error: 17.674817840522575
best_error: 17.67481784036186
best_error: 17.67481784034435
best_error: 17.674817839095756
best_error: 17.67481782685316
best_error: 17.66522316992765
best_error: 17.66522316732593
best_error: 17.66522315647716
best_error: 17.630026472379562
best_error: 17.630026472148135
best_error: 17.630026466826692
best_error: 17.630026461924242
best_error: 17.50263942522364
best_error: 17.502639425222675
best_error: 17.502639417602765
best_error: 17.49788604837445
best_error: 17.49788604837344
best_error: 17.49788604060978
best_error: 17.473132639423955
best_error: 17.473132639422936
best_error: 17.473132636757672
best_error: 17.470117985987024
best_error: 17.470117985822192
best_error: 17.47011797828346
best_error: 17.4699270547984
best_error: 17.469927054643236
best_error: 17.46992704716339
best_error: 17.469896581017572
best_error: 17.469896581016528
best_error: 17.469880149855566
best_error: 17.46988014985452
best_error: 17.469855922743964
best_error: 17.469855922742923
best_error: 17.469848802071553
best_error: 17.469848802070512
best_error: 17.469844220719356
best_error: 17.46984422071831
best_error: 17.469843228279448
best_error: 17.469843228278407
best_error: 17.469842875156985
best_error: 17.469842875155944
best_error: 17.46984272321751
best_error: 17.46984272321647
best_error: 17.469842646866805
best_error: 17.469842646865764
best_error: 17.469842610590945
best_error: 17.469842610589904
best_error: 17.469842593318305
best_error: 17.469842593317267
best_error: 17.46984258227467
best_error: 17.469842582273625
best_error: 17.469842577600428
best_error: 17.469842577599387
best_error: 17.469842575437838
