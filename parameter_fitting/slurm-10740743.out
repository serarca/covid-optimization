ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.192381812572513
best_error: 11.19238180611047
best_error: 10.91589630479172
best_error: 10.915896267554663
best_error: 8.668760821521696
best_error: 8.668760502209965
best_error: 6.50173990021223
best_error: 6.501739502007395
best_error: 6.120422988150158
best_error: 6.120422951873049
best_error: 6.11749721356348
best_error: 6.117497205081387
best_error: 6.1174878182439185
best_error: 6.117487818243833
best_error: 6.117487813086404
best_error: 6.117358840593369
best_error: 6.11735883294754
best_error: 6.11204236821253
best_error: 6.11204236821245
best_error: 6.112042362818674
best_error: 6.091021038079973
best_error: 6.091021038079898
best_error: 6.0910210329928836
best_error: 6.0493662497468685
best_error: 6.04936624974684
best_error: 6.0283121430279785
best_error: 6.028312143027949
best_error: 5.997569451096381
best_error: 5.997569430145835
best_error: 5.887016407307439
best_error: 5.887016407307366
best_error: 5.887016396503448
best_error: 5.8465962908911635
best_error: 5.846596290891129
best_error: 5.83312782571164
best_error: 5.833127825711623
best_error: 5.746644008266149
best_error: 5.746644008266137
best_error: 5.654478491489053
best_error: 5.654478284535895
best_error: 5.372361076483089
best_error: 5.372360751724624
best_error: 5.2629687865885115
best_error: 5.262968571323776
best_error: 5.041979522004696
best_error: 5.041979269908545
best_error: 4.866756913103625
best_error: 4.866756874452525
best_error: 4.8662240093970315
best_error: 4.866224006128302
best_error: 4.86622399766191
best_error: 4.86497689013552
best_error: 4.86497689013549
best_error: 4.864976888719467
best_error: 4.864207500610404
best_error: 4.864207500610365
best_error: 4.864207499147837
best_error: 4.862374229988711
best_error: 4.862374187784252
best_error: 4.857046471982974
best_error: 4.857046423647342
best_error: 4.8322445395180145
best_error: 4.832244539517955
best_error: 4.832244518333518
best_error: 4.82883936863921
best_error: 4.828839368639146
best_error: 4.828839352342161
best_error: 4.821722697763868
best_error: 4.821722697763812
best_error: 4.821722688937329
best_error: 4.788312518142033
best_error: 4.788312518142008
best_error: 4.78831251559309
best_error: 4.775031518211737
best_error: 4.775031518211719
best_error: 4.759645709349468
best_error: 4.7596457093494475
best_error: 4.7006818025485115
best_error: 4.700681802548481
best_error: 4.633542254285692
best_error: 4.633542254285642
best_error: 4.6335421945058215
best_error: 4.603319150987798
best_error: 4.603319083624867
best_error: 4.5730787874073
best_error: 4.573078787407266
best_error: 4.570515780535687
best_error: 4.570515780535651
best_error: 4.56997430342657
best_error: 4.569974277060943
best_error: 4.5696852946863595
best_error: 4.569685294686322
best_error: 4.5695894278634634
best_error: 4.569589423979653
best_error: 4.56952919373096
best_error: 4.569529191540557
best_error: 4.569515192017649
best_error: 4.569515190537754
best_error: 4.5695118230466045
best_error: 4.569511821952665
best_error: 4.569506761166463
best_error: 4.569506760602205
best_error: 4.569506444878003
best_error: 4.569506444312102
best_error: 4.569506170221163
best_error: 4.569506169743866
best_error: 4.569505224631143
best_error: 4.569505224170558
best_error: 4.569504674337395
best_error: 4.569504674337359
best_error: 4.569504485364914
best_error: 4.569504484921859
best_error: 4.569504295448001
best_error: 4.569504295013312
best_error: 4.569503767671682
best_error: 4.569503767225188
best_error: 4.569502949121189
best_error: 4.569502948765094
best_error: 4.5695027897027085
best_error: 4.569502789315942
best_error: 4.569502541299223
best_error: 4.5695025409109915
best_error: 4.5695023676459865
best_error: 4.569502367256732
best_error: 4.569502342956976
best_error: 4.569502342567573
best_error: 4.569502334121089
best_error: 4.569502333731637
best_error: 4.5695022816603394
best_error: 4.569502281270576
best_error: 4.569502279832077
best_error: 4.569502279442303
best_error: 4.569502279127489
best_error: 4.569502278737709
best_error: 4.569502278554958
best_error: 4.569502278554918
