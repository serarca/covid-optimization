ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.354282432001844
best_error: 10.354282426415015
best_error: 10.161392496323504
best_error: 10.161392479390383
best_error: 6.705588248286749
best_error: 6.705587863237812
best_error: 5.406642702738156
best_error: 5.406642191349723
best_error: 4.180574195703701
best_error: 4.1805738180276615
best_error: 3.9826322184377347
best_error: 3.9826321704688583
best_error: 3.9502452396172365
best_error: 3.9502452395011325
best_error: 3.950245223262724
best_error: 3.9465675007161627
best_error: 3.946567500600511
best_error: 3.946567484013644
best_error: 3.944481477032427
best_error: 3.944481476916927
best_error: 3.944481460193424
best_error: 3.9444774748573956
best_error: 3.944477443474585
best_error: 3.9422175475213392
best_error: 3.942217547405165
best_error: 3.942217530735688
best_error: 3.8944751336547982
best_error: 3.894475133529125
best_error: 3.8944751169664116
best_error: 3.710384119717908
best_error: 3.7103841112032967
best_error: 3.4462756953517215
best_error: 3.4462755048872387
best_error: 3.4347745900962514
best_error: 3.434774426540821
best_error: 3.4343694108546075
best_error: 3.434369346910831
best_error: 3.4322626559168024
best_error: 3.4322625892313794
best_error: 3.425674163933728
best_error: 3.4256740872119473
best_error: 3.3981724607530652
best_error: 3.3981722673726305
best_error: 3.1559096470198917
best_error: 3.155909474821562
best_error: 3.066696908748879
best_error: 3.0666967663495237
best_error: 3.0637109743400996
best_error: 3.0637108367993084
best_error: 2.970689329028253
best_error: 2.9706893208878826
best_error: 2.9706892151919657
best_error: 2.899479896266265
best_error: 2.899479742558421
best_error: 2.816708635162181
best_error: 2.8167084773481634
best_error: 2.770100013607775
best_error: 2.770099955485178
best_error: 2.760052851602963
best_error: 2.760052849380577
best_error: 2.760052843650264
best_error: 2.749131280004772
best_error: 2.749131256817094
best_error: 2.737539166141676
best_error: 2.7375391481306486
best_error: 2.7375390621439024
best_error: 2.7268326105813614
best_error: 2.726832597053016
best_error: 2.701939717737986
best_error: 2.7019396932671937
best_error: 2.697818962821663
best_error: 2.697818947989456
best_error: 2.6978189479672743
best_error: 2.660127578780199
best_error: 2.6601275523558208
best_error: 2.61230777657356
best_error: 2.612307746555704
best_error: 2.588945608191127
best_error: 2.5889455934301395
best_error: 2.584218697978341
best_error: 2.584218689020484
best_error: 2.5825048078368953
best_error: 2.5825048020697805
best_error: 2.5813906422574284
best_error: 2.5813906381887546
best_error: 2.5792287462355015
best_error: 2.579228745674087
best_error: 2.579228745377459
best_error: 2.579151043739585
best_error: 2.5791510433558704
best_error: 2.5791510428841553
best_error: 2.5791193210074628
best_error: 2.5791193206862113
best_error: 2.5791193201548497
best_error: 2.579104601828867
best_error: 2.5791046015088055
best_error: 2.5791046009761494
best_error: 2.5790973289112182
best_error: 2.57909732859174
best_error: 2.5790973280584533
best_error: 2.579093660321793
best_error: 2.5790936600026115
best_error: 2.579093659468998
best_error: 2.579089048030508
best_error: 2.5790890477117063
best_error: 2.5790890471776597
best_error: 2.5790886370770103
best_error: 2.5790885652526767
best_error: 2.578241021605847
best_error: 2.5782409550745693
best_error: 2.577878998805806
best_error: 2.5778789351722415
best_error: 2.5778063465099614
best_error: 2.5778062840911913
best_error: 2.577718559890757
best_error: 2.577718498379074
best_error: 2.5772047155587825
best_error: 2.5772046557282997
best_error: 2.5740654671281193
best_error: 2.5740654665970792
best_error: 2.574065417980216
best_error: 2.5725661157480584
best_error: 2.57256606365754
best_error: 2.5718139945419685
best_error: 2.571813990086321
best_error: 2.571644960012302
best_error: 2.5716449550683107
best_error: 2.571386227747875
best_error: 2.5713862220616988
best_error: 2.571215961920415
best_error: 2.571215956292183
best_error: 2.5711689009643
best_error: 2.571168895339656
best_error: 2.5711599250478274
best_error: 2.5711599194238777
best_error: 2.571157972050911
best_error: 2.5711579664271276
best_error: 2.571157248605865
best_error: 2.571157242982138
best_error: 2.5711572394461917
best_error: 2.5711572360642654
best_error: 2.5711572360402117
