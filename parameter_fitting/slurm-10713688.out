ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.771769673552242
best_error: 13.771769667024856
best_error: 13.771769663987158
best_error: 13.765765996126579
best_error: 13.765765989167356
best_error: 13.765765986063558
best_error: 13.374343395156504
best_error: 13.374343349918469
best_error: 13.374343348223563
best_error: 9.822836798229648
best_error: 9.822836311271615
best_error: 7.697113713295991
best_error: 7.697112975921616
best_error: 5.9270413954868655
best_error: 5.92704069918385
best_error: 5.328211180243667
best_error: 5.328210647939645
best_error: 5.253456529745742
best_error: 5.25345602762389
best_error: 5.2333701327315705
best_error: 5.233369640223431
best_error: 5.226296873370089
best_error: 5.226296382154852
best_error: 5.223130485288376
best_error: 5.223129993690524
best_error: 5.221236117708415
best_error: 5.221235625881748
best_error: 5.220865539432646
best_error: 5.220865234542235
best_error: 5.220724866971869
best_error: 5.2207243750833365
best_error: 5.220517048848415
best_error: 5.220516556870667
best_error: 5.220272759164715
best_error: 5.220272458225049
best_error: 5.2200816849296405
best_error: 5.220081188514152
best_error: 5.220011683803043
best_error: 5.220011387083515
best_error: 5.220001839208569
best_error: 5.220001338563753
best_error: 5.219980369744325
best_error: 5.219979869041204
best_error: 5.219964720839311
best_error: 5.21996421757216
best_error: 5.219837651160669
best_error: 5.219837145289567
best_error: 5.21955762294061
best_error: 5.21955733019577
best_error: 5.218996408220368
best_error: 5.218996111142808
best_error: 5.214743304387514
best_error: 5.214742997796355
best_error: 5.213272342622763
best_error: 5.213272035000248
best_error: 5.211181826467652
best_error: 5.211181532650559
best_error: 5.210024981069226
best_error: 5.210024691532224
best_error: 5.208976892942049
best_error: 5.208976609235679
best_error: 5.207976369878969
best_error: 5.207976085027484
best_error: 5.205071120929939
best_error: 5.205070839180748
best_error: 5.201923578115579
best_error: 5.201923277596016
best_error: 5.200269660485057
best_error: 5.200269362258258
best_error: 5.2001688954400915
best_error: 5.200168597227112
best_error: 5.2001615444821
best_error: 5.200161046136088
best_error: 5.18776024396871
best_error: 5.1877599581656995
best_error: 5.187101539219789
best_error: 5.187101247147897
best_error: 5.1869517524150135
best_error: 5.186951466371985
best_error: 5.186737527245436
best_error: 5.186737240831167
best_error: 5.1863418481135515
best_error: 5.186341560164526
best_error: 5.186328088949733
best_error: 5.186327801162692
best_error: 5.186270539221467
best_error: 5.186270249300215
best_error: 5.186240165479964
best_error: 5.186239871244289
best_error: 5.186186591413811
best_error: 5.186186297165034
best_error: 5.185998617168343
best_error: 5.185998322867475
best_error: 5.1845703497699756
best_error: 5.184570052187057
best_error: 5.174946405886905
best_error: 5.174945887770574
best_error: 5.15712899779955
best_error: 5.157128715915567
best_error: 5.148775042718144
best_error: 5.148774757184981
best_error: 5.135056298862832
best_error: 5.135055759024968
best_error: 5.116356104318532
best_error: 5.116355797261965
best_error: 5.1057413175417885
best_error: 5.105741017844128
best_error: 5.087747637424293
best_error: 5.087747080729837
best_error: 5.082267457977685
best_error: 5.082267167685524
best_error: 5.075462907991174
best_error: 5.075462612429793
best_error: 5.070471914453361
best_error: 5.070471626053699
best_error: 5.060500904062206
best_error: 5.060500614187231
best_error: 5.028974124693021
best_error: 5.028973530581977
best_error: 5.011093397870679
best_error: 5.011092801414155
best_error: 4.993323140452663
best_error: 4.993322801822023
best_error: 4.9850007528926525
best_error: 4.985000158372126
best_error: 4.961141557074305
best_error: 4.961141235429273
best_error: 4.960153190200375
best_error: 4.96015286887126
best_error: 4.959269375764817
best_error: 4.959268779981827
best_error: 4.938065474578124
best_error: 4.938065162201873
best_error: 4.934068072239587
best_error: 4.934067781091332
best_error: 4.92472868484446
best_error: 4.924728019858138
best_error: 4.897834475847703
best_error: 4.897834167530723
best_error: 4.887517903966435
best_error: 4.887517590229834
