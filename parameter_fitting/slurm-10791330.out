ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.131165315809183
best_error: 10.131165252736464
best_error: 9.179199931307647
best_error: 9.179199786155092
best_error: 7.7026332986330885
best_error: 7.702633019159139
best_error: 6.142055317872223
best_error: 6.142054977199935
best_error: 5.755065805607867
best_error: 5.755065784888795
best_error: 5.755065569255443
best_error: 5.70542904445042
best_error: 5.705428998232726
best_error: 5.705428859869931
best_error: 5.097249432504627
best_error: 5.0972493804848975
best_error: 4.6553738080487665
best_error: 4.65537374273772
best_error: 4.5526023240538205
best_error: 4.552602279265336
best_error: 4.5501203135858415
best_error: 4.550120283489496
best_error: 4.546810834646642
best_error: 4.546810834440587
best_error: 4.546810810485579
best_error: 4.545737941401409
best_error: 4.545737925331463
best_error: 4.544987275365561
best_error: 4.544987274749655
best_error: 4.544987252399447
best_error: 4.544929223002756
best_error: 4.544929222387841
best_error: 4.544929200016553
best_error: 4.54491806220105
best_error: 4.544918046404654
best_error: 4.544911888095031
best_error: 4.544911887480484
best_error: 4.544911865102657
best_error: 4.5448999828804
best_error: 4.544899982247098
best_error: 4.54489996001494
best_error: 4.544898104179149
best_error: 4.544898103545892
best_error: 4.544898081313021
best_error: 4.544897387619193
best_error: 4.544897371823112
best_error: 4.543030268192811
best_error: 4.543030243086617
best_error: 4.536154768255145
best_error: 4.536154734857951
best_error: 4.488026533584505
best_error: 4.4880265335736125
best_error: 4.4880265291501
best_error: 4.450358960760004
best_error: 4.450358960166136
best_error: 4.450358960044118
best_error: 4.4503589541174495
best_error: 4.441827920312484
best_error: 4.441827919615557
best_error: 4.441196189375814
best_error: 4.441196154243766
best_error: 4.439289862688964
best_error: 4.439289844395762
best_error: 4.4019823335855595
best_error: 4.401982302605773
best_error: 4.392135091084796
best_error: 4.392135049808892
best_error: 4.389023447269954
best_error: 4.389023406140752
best_error: 4.376904695790719
best_error: 4.376904655298073
best_error: 4.333688924310225
best_error: 4.333688886742597
best_error: 4.096797523791972
best_error: 4.096797520544659
best_error: 4.096797420539831
best_error: 4.05890591163323
best_error: 4.058905902937115
best_error: 4.058541701683933
best_error: 4.058541672046319
best_error: 4.058133231556477
best_error: 4.058133211183799
best_error: 4.053772490761517
best_error: 4.053772469231331
best_error: 4.040029123006667
best_error: 4.040029103713254
best_error: 4.036534112920241
best_error: 4.036534097905711
best_error: 4.032877657699119
best_error: 4.032877642530799
best_error: 4.027682298939487
best_error: 4.027682282093137
best_error: 4.027214022489278
best_error: 4.027214005097436
best_error: 4.026676605969399
best_error: 4.0266765883272075
best_error: 4.026600933687485
best_error: 4.0266009159804215
best_error: 4.026545747799735
best_error: 4.02654572995972
best_error: 4.026482789734616
best_error: 4.026482771840046
best_error: 4.026450378117166
best_error: 4.026450360232645
best_error: 4.0264013615549725
best_error: 4.026401344246785
best_error: 4.026377641275993
best_error: 4.026377629394274
best_error: 4.026372943376051
best_error: 4.02637292604148
best_error: 4.026366461766037
best_error: 4.026366444426182
best_error: 4.026366104144082
best_error: 4.026366086803941
best_error: 4.026365804863978
best_error: 4.02636578752359
best_error: 4.026365589848977
best_error: 4.026365572508412
best_error: 4.026365424502666
best_error: 4.026365407161969
best_error: 4.026365235200409
best_error: 4.026365217859555
best_error: 4.02636512897837
best_error: 4.026365111637432
best_error: 4.0263649026077175
best_error: 4.026364885266596
best_error: 4.026364876595183
best_error: 4.02636485925404
best_error: 4.0263648428342425
best_error: 4.0263648327713915
best_error: 4.026364815430212
best_error: 4.026364813782422
best_error: 4.026364813742865
best_error: 4.026364807875457
best_error: 4.026364807835905
best_error: 4.026364805652459
best_error: 4.026364805612903
best_error: 4.026364804440244
best_error: 4.026364804400691
best_error: 4.026364801553054
best_error: 4.026364801043545
best_error: 4.026364801003988
