ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 82
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.54070621184657
best_error: 102.5407060693623
best_error: 102.54070605235194
best_error: 17.399708833018106
best_error: 17.39970883301122
best_error: 17.399708820855817
best_error: 17.388170499320523
best_error: 17.38817048685202
best_error: 17.338991694808865
best_error: 17.33899168100419
best_error: 17.075489598725405
best_error: 17.075489576306147
best_error: 11.941762615325345
best_error: 11.941762550112731
best_error: 11.889497994782614
best_error: 11.889497963169276
best_error: 11.88949795898673
best_error: 11.885035501572633
best_error: 11.885035487545565
best_error: 11.885035472083864
best_error: 11.873513270776881
best_error: 11.873513252110923
best_error: 11.87351323586202
best_error: 11.402673583891573
best_error: 11.402673581899608
best_error: 11.402673551119342
best_error: 10.772564348092759
best_error: 10.772564329936001
best_error: 10.772564328004904
best_error: 10.08051269075633
best_error: 10.080512681453053
best_error: 10.080512677430349
best_error: 10.031653939729992
best_error: 10.031653505208475
best_error: 9.669332132327646
best_error: 9.669332084870751
best_error: 9.605231839766951
best_error: 9.605231835285808
best_error: 9.605231834496575
best_error: 9.60523182839464
best_error: 9.600653199871193
best_error: 9.600653193666684
best_error: 9.600653188396079
best_error: 9.589578350704617
best_error: 9.589578345814907
best_error: 9.589578345595111
best_error: 9.5895783393688
best_error: 9.502427496752453
best_error: 9.502427405814336
best_error: 9.479376769986933
best_error: 9.47937630359612
best_error: 9.477076299334266
best_error: 9.477076183492473
best_error: 9.44585263637318
best_error: 9.445852176648346
best_error: 9.417829947367787
best_error: 9.417829938281066
best_error: 9.41782993787746
best_error: 9.39397328883793
best_error: 9.393973283836358
best_error: 9.393973279478782
best_error: 9.392663280880988
best_error: 9.39266324312026
best_error: 9.381905391650106
best_error: 9.381905354424369
best_error: 9.367820227693418
best_error: 9.367820220574188
best_error: 9.367820218440565
best_error: 9.34903983370703
best_error: 9.349039826449129
best_error: 9.349039824606185
best_error: 9.327166807630121
best_error: 9.32716642234298
best_error: 9.277621678373022
best_error: 9.277621366999757
best_error: 9.257159046024018
best_error: 9.257158739210242
best_error: 9.252001509279545
best_error: 9.252001501184695
best_error: 9.25200150087748
best_error: 9.248674058475961
best_error: 9.248674050421121
best_error: 9.248674050087441
best_error: 9.248089271204218
best_error: 9.248089263152952
best_error: 9.24808926281802
best_error: 9.247858904897292
best_error: 9.247858896847433
best_error: 9.247858896512001
best_error: 9.2477548529932
best_error: 9.247754844914581
best_error: 9.247754844608329
best_error: 9.247738109929667
best_error: 9.247738065438414
best_error: 9.247717328158135
best_error: 9.247717320079737
best_error: 9.247717319773413
best_error: 9.24768215517932
best_error: 9.247682147101127
best_error: 9.247682146794734
best_error: 9.247676627577563
best_error: 9.247676619499405
best_error: 9.247676619192994
best_error: 9.247673733010991
best_error: 9.247673724932852
best_error: 9.247673724626438
best_error: 9.247672545550895
best_error: 9.247672537472761
best_error: 9.247672537166345
best_error: 9.24767236882403
best_error: 9.247672324335404
best_error: 9.247672309001683
best_error: 9.247672300923545
best_error: 9.247672300617133
best_error: 9.247672036524246
best_error: 9.247672028446116
best_error: 9.2476720281397
best_error: 9.247672019993308
best_error: 9.247671975504687
best_error: 9.247671971166586
best_error: 9.247671970860171
best_error: 9.247671966635973
best_error: 9.24666063220171
best_error: 9.246660624946253
best_error: 9.246660623835247
best_error: 9.24644896954996
best_error: 9.246448962298928
best_error: 9.24644896118716
best_error: 9.246042483887976
best_error: 9.246042476645458
best_error: 9.246042475532214
best_error: 9.246007732635238
best_error: 9.24600741782488
best_error: 9.245990809750275
best_error: 9.245990802508839
best_error: 9.245990801395406
best_error: 9.245845347531231
best_error: 9.2458453409796
best_error: 9.24584533917864
best_error: 9.24582705664795
best_error: 9.245827050096697
best_error: 9.245827048295682
best_error: 9.245815804543442
best_error: 9.245815797992407
best_error: 9.24581579619137
best_error: 9.245808901170262
best_error: 9.245808894619369
best_error: 9.24580889281831
best_error: 9.2458046821456
best_error: 9.245804675594794
best_error: 9.245804673793721
best_error: 9.245802117675787
best_error: 9.24580211112503
best_error: 9.24580210932395
best_error: 9.245800570679675
best_error: 9.245800564128949
best_error: 9.245800562327865
best_error: 9.24579964712684
best_error: 9.245799640576134
best_error: 9.24579963877505
best_error: 9.245799189916266
best_error: 9.24579914090694
best_error: 9.245799125735639
