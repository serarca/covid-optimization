ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 10
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.24596285534346
best_error: 22.245962852063432
best_error: 22.245962835303448
best_error: 22.24596280189225
best_error: 6.691105884793537
best_error: 6.69110558435746
best_error: 6.69108312194179
best_error: 2.525372637424102
best_error: 2.525372586794819
best_error: 2.523952870282025
best_error: 2.2406656443075184
best_error: 2.2406656366802657
best_error: 2.2406656278370507
best_error: 2.1271568680082225
best_error: 2.1271568622080963
best_error: 2.127156861100458
best_error: 2.127156851479463
best_error: 2.120863682009519
best_error: 2.120863681240104
best_error: 2.120863680334527
best_error: 2.120863674731631
best_error: 2.120863665918635
best_error: 2.013217256030384
best_error: 2.0132172288099075
best_error: 1.9112328546393678
best_error: 1.9112327506028273
best_error: 1.8446124784498823
best_error: 1.8446121154218127
best_error: 1.782607383257877
best_error: 1.7826073161184695
best_error: 1.7380958374258313
best_error: 1.7380958110583864
best_error: 1.722953887871409
best_error: 1.7229538543884089
best_error: 1.7164527452773068
best_error: 1.7164527360093138
best_error: 1.7148538148420476
best_error: 1.7148538060118046
best_error: 1.7129080927240898
best_error: 1.7129080844084685
best_error: 1.705395779133387
best_error: 1.7053957734669236
best_error: 1.6987457962651635
best_error: 1.698745780748685
best_error: 1.6986873467515107
best_error: 1.6986873334880856
best_error: 1.6983499690756623
best_error: 1.6983499687116486
best_error: 1.6983499649658313
best_error: 1.6957708768555575
best_error: 1.6957708767378252
best_error: 1.6957708764906578
best_error: 1.6957708728880303
best_error: 1.692867227144048
best_error: 1.6928672263942326
best_error: 1.6928672234677882
best_error: 1.692867222885593
best_error: 1.6926772523885725
best_error: 1.6926772522314164
best_error: 1.6926772519922146
best_error: 1.6926772485915103
best_error: 1.6926771857772303
best_error: 1.6926771856203802
best_error: 1.6926771853808862
best_error: 1.6926771819797954
best_error: 1.6926764433289114
best_error: 1.6926764432007892
best_error: 1.6926764429331644
best_error: 1.692676439530077
best_error: 1.692676246125552
best_error: 1.692676245997436
best_error: 1.6926762457297937
best_error: 1.6926762423266086
best_error: 1.6926748380243568
best_error: 1.6926748379079302
best_error: 1.6926748376342413
best_error: 1.692674834197817
best_error: 1.6910510644347512
best_error: 1.691051064386616
best_error: 1.6910510639982754
best_error: 1.691051060827539
best_error: 1.6910510606243365
best_error: 1.689986076645158
best_error: 1.6899860761657657
best_error: 1.689986073231762
best_error: 1.6899860724652773
best_error: 1.677476730051512
best_error: 1.6774767232446093
best_error: 1.6307326500525157
best_error: 1.6307326416272054
best_error: 1.6103270580701063
best_error: 1.6103269386559749
best_error: 1.5865768136947918
best_error: 1.5865766962318277
best_error: 1.5384709776778818
best_error: 1.5384709590526335
best_error: 1.5223543800911394
best_error: 1.5223543399741863
best_error: 1.500924796189078
best_error: 1.5009245566311742
best_error: 1.469990830103273
best_error: 1.4699906241537868
best_error: 1.3893060621736104
best_error: 1.3893059555854606
best_error: 1.3723432226791272
best_error: 1.3723427208355183
best_error: 1.3613328120745591
best_error: 1.3613325835425982
best_error: 1.360601595674609
best_error: 1.3606013188127295
best_error: 1.3605870945624958
best_error: 1.3605868115247992
best_error: 1.3605384155734583
best_error: 1.3605381178361384
best_error: 1.3605332682152846
best_error: 1.3605329670822472
best_error: 1.360530107340923
best_error: 1.3605298038784672
best_error: 1.338022793746061
best_error: 1.3380225829899124
best_error: 1.3380192330683878
best_error: 1.3333472482400175
best_error: 1.3333469684791146
best_error: 1.2707736378274632
best_error: 1.2707734271285989
best_error: 1.2701611863957813
best_error: 1.2701609754580765
best_error: 1.1720939635621797
best_error: 1.1720939069295402
best_error: 1.1711690642228312
best_error: 1.17116906326306
best_error: 1.171169057108297
best_error: 1.1711690570183952
best_error: 1.1689216013719415
best_error: 1.168921591264932
best_error: 1.1664931532031735
best_error: 1.1664931506753045
best_error: 1.1664931418217064
best_error: 1.1653383332575862
best_error: 1.165338323752176
best_error: 1.162821067557837
best_error: 1.1628210076247114
best_error: 1.1610977872659007
best_error: 1.1610977777631564
best_error: 1.1577157728773058
best_error: 1.1577156945838245
best_error: 1.1171515644518073
best_error: 1.1171515049082337
best_error: 1.1171236950476702
best_error: 1.117123635531912
best_error: 1.1127776317574096
best_error: 1.1127775532581516
best_error: 1.0918810318066954
best_error: 1.0918810318012697
best_error: 1.0918810314713858
best_error: 1.0918810301076773
best_error: 1.084314374599952
best_error: 1.084314130462267
best_error: 1.0754479391817329
best_error: 1.0754478882172034
best_error: 1.0588466781202763
best_error: 1.0588466754436512
best_error: 1.0587632130146114
best_error: 1.0587632106533105
best_error: 1.0585651262375801
best_error: 1.0585651195384154
best_error: 1.0585073080538132
best_error: 1.0585073027022989
best_error: 1.0585073017247506
best_error: 1.0585071654850673
best_error: 1.0585071651466793
best_error: 1.05850716483032
best_error: 1.058507163960586
best_error: 1.0585066892911215
best_error: 1.058506684471918
best_error: 1.058506681673971
best_error: 1.058505904789989
best_error: 1.0585059044449736
best_error: 1.0585059041415419
best_error: 1.058505903264592
best_error: 1.0585059027658499
best_error: 1.0585051573525361
best_error: 1.05850515647099
best_error: 1.0585051558115692
best_error: 1.0585051536028087
best_error: 1.058505152717383
best_error: 1.0585051520618494
best_error: 1.058501326719363
best_error: 1.0585013233760212
best_error: 1.0584097682669436
best_error: 1.0584097607980931
best_error: 1.0584097595225344
best_error: 1.0584097520537035
best_error: 1.0584069578409758
best_error: 1.0584069560131901
best_error: 1.0580670531883982
best_error: 1.0580670259691314
best_error: 1.0530459831294394
best_error: 1.053045924529407
best_error: 1.0530454013641888
best_error: 1.0530453427641235
best_error: 1.0528623013257494
best_error: 1.0528622946897657
best_error: 1.0427403054568443
best_error: 1.0427402971308712
best_error: 1.0415604896264887
best_error: 1.0415604727808483
best_error: 1.0413027504526045
best_error: 1.041302746065494
best_error: 1.041249764441401
best_error: 1.0412497561631207
best_error: 1.0411576722078473
best_error: 1.041157663998295
best_error: 1.0408534674155039
best_error: 1.0408534567345624
best_error: 1.0391871568503215
best_error: 1.0391871092980836
best_error: 1.0364622341968348
best_error: 1.0364621845020716
best_error: 1.0364615600180442
best_error: 1.0350188626072316
best_error: 1.0350188604666013
best_error: 1.035018859341411
best_error: 1.0336414094896826
best_error: 1.0336412641188302
best_error: 1.0336360127843391
best_error: 1.033575815781068
best_error: 1.0335758086650424
best_error: 1.0323637208411338
best_error: 1.0323636755643824
best_error: 1.032362763475211
best_error: 1.0322736883394303
best_error: 1.0322736045350702
best_error: 1.0322709849060245
best_error: 1.032243712202698
best_error: 1.0322436523877085
best_error: 1.0322421012977556
best_error: 1.0319068169617212
best_error: 1.0319068035400993
best_error: 1.0315518929478125
best_error: 1.0315517991611138
best_error: 1.0315497643342424
best_error: 1.0315117524020276
best_error: 1.0315117209806155
best_error: 1.0313100870515028
best_error: 1.031310031166543
best_error: 1.0308080343034947
best_error: 1.0308080292648194
best_error: 1.0300719240417089
best_error: 1.0300719031747803
best_error: 1.0280015766204527
best_error: 1.0280015635564677
best_error: 1.0276082481612454
best_error: 1.0276082381496083
best_error: 1.026605873093668
best_error: 1.0266058642115796
best_error: 1.026605081021592
best_error: 1.0201304142402052
best_error: 1.0201303925515446
best_error: 1.0185197080083395
best_error: 1.0185195835229957
best_error: 1.0185157987158535
best_error: 1.0185155898151739
best_error: 1.017674600958361
best_error: 1.0176745802358473
best_error: 1.0175323695898144
best_error: 1.0175323589223928
best_error: 1.0175052027851175
best_error: 1.0175051971252556
best_error: 1.0170914457842866
best_error: 1.017091445368244
best_error: 1.0170914451214754
best_error: 1.0162544449435036
best_error: 1.0162544400670204
best_error: 1.0162135547112126
best_error: 1.0162135473166622
best_error: 1.0162014614956767
best_error: 1.0162014569467928
best_error: 1.016195152022585
best_error: 1.0161951492120165
best_error: 1.0161916192579417
best_error: 1.0161916191301879
best_error: 1.0161916187876607
best_error: 1.0161901672760028
best_error: 1.0161901669573137
best_error: 1.0161901668328197
best_error: 1.0161897303191498
best_error: 1.016189729304046
best_error: 1.0161893954167254
best_error: 1.0161893949978518
best_error: 1.0161893670785687
best_error: 1.016189366899967
best_error: 1.0161893666910853
best_error: 1.0161893568692535
best_error: 1.0161893564692883
best_error: 1.0161893535028077
best_error: 1.0161893531017356
best_error: 1.0161893530280504
