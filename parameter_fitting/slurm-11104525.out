ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 72
days_switch 85
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 109.51687506820235
best_error: 109.51687495618944
best_error: 109.5168748790168
best_error: 19.98739670971083
best_error: 19.987396709708896
best_error: 19.987396706230303
best_error: 19.985732574966423
best_error: 19.98573257144002
best_error: 19.978851019437982
best_error: 19.978851015717975
best_error: 19.947102048462167
best_error: 19.947102043766982
best_error: 19.658616093156482
best_error: 19.65861607417943
best_error: 19.6446345610276
best_error: 19.64463454115881
best_error: 18.866246240751682
best_error: 18.866246155233032
best_error: 14.866021271862497
best_error: 14.866020875496407
best_error: 13.765567915882944
best_error: 13.765567604393587
best_error: 13.678979775034488
best_error: 13.678979764363497
best_error: 13.582465249928614
best_error: 13.582465160435692
best_error: 13.576745290445803
best_error: 13.57674528376251
best_error: 13.576745282617889
best_error: 13.576745280928368
best_error: 13.576101739626708
best_error: 13.576101655932069
best_error: 13.5711813422154
best_error: 13.571181269705594
best_error: 13.570261130828511
best_error: 13.570261124495156
best_error: 13.570261123028544
best_error: 13.570261121348993
best_error: 13.570229131362492
best_error: 13.570229059678507
best_error: 13.570176288944584
best_error: 13.570176217256385
best_error: 13.570167576905362
best_error: 13.57016750521639
best_error: 13.570166270675474
best_error: 13.570166198986387
best_error: 13.57016616770542
best_error: 13.570166161372509
best_error: 13.570166159905686
best_error: 13.570166158226485
best_error: 13.565538469210082
best_error: 13.565538396224945
best_error: 13.54746926952506
best_error: 13.547469263904524
best_error: 13.547469262237671
best_error: 13.547469260149953
best_error: 13.484089445227843
best_error: 13.484089439965429
best_error: 13.484089438624007
best_error: 13.484089436168478
best_error: 13.334761128848118
best_error: 13.334761127378837
best_error: 13.334761112226118
best_error: 13.311478148305088
best_error: 13.311478147477697
best_error: 13.31147812899684
best_error: 13.272067341186569
best_error: 13.272067335071805
best_error: 13.272067329872172
best_error: 13.264831646179841
best_error: 13.264831636659023
best_error: 13.253658396087777
best_error: 13.253658382538433
best_error: 13.248529367254811
best_error: 13.248529355627182
best_error: 13.24475535520591
best_error: 13.244755343091594
best_error: 13.218253127757865
best_error: 13.21825311310462
best_error: 13.162622629692887
best_error: 13.162622612626986
best_error: 13.147314675663559
best_error: 13.1473144552251
best_error: 13.116014292579935
best_error: 13.116014279506462
best_error: 13.077964372392271
best_error: 13.077964206662394
best_error: 13.064884667735736
best_error: 13.064884657597986
best_error: 13.064135991042646
best_error: 13.064135980830205
best_error: 13.064093707739582
best_error: 13.064093697525553
best_error: 13.0640124092753
best_error: 13.064012399058214
best_error: 13.063930500493644
best_error: 13.063930489770716
best_error: 13.063927788907923
best_error: 13.063927778184933
best_error: 13.063924685828692
best_error: 13.06392467510563
best_error: 13.063920466269249
best_error: 13.063920455546075
best_error: 13.063919185315594
best_error: 13.063919147213484
best_error: 13.063919146959035
best_error: 13.0639166586102
best_error: 13.063916647886941
best_error: 13.063915922197877
best_error: 13.063915911474602
best_error: 13.06236523735804
best_error: 13.062365066534335
best_error: 13.061075064723601
best_error: 13.061075054548214
best_error: 13.060624726430019
best_error: 13.060624561388384
best_error: 13.060390841145098
best_error: 13.060390831028574
best_error: 13.06022948649213
best_error: 13.060229327027908
best_error: 13.059929673982293
best_error: 13.059929636402405
best_error: 13.059929636181938
best_error: 13.059757866556005
best_error: 13.05975785646902
best_error: 13.059747785246227
best_error: 13.059747775159185
best_error: 13.059742204945852
best_error: 13.059742194846834
best_error: 13.059738746982303
best_error: 13.059738709409306
best_error: 13.059738709188748
best_error: 13.059738692768944
best_error: 13.059738682656711
best_error: 13.05973589709549
best_error: 13.059735859520604
best_error: 13.059735859299966
best_error: 13.053163671007056
best_error: 13.053163665473654
best_error: 13.053163665216434
best_error: 13.053163655978816
best_error: 13.022520991011266
best_error: 13.022520984564004
best_error: 13.022520984290388
best_error: 13.022520976516631
best_error: 12.985819655717808
best_error: 12.985819615687355
best_error: 12.985819614182056
best_error: 12.975973598380968
best_error: 12.975973558453244
best_error: 12.97597355709946
best_error: 12.961286208382145
best_error: 12.961286169157407
best_error: 12.961286168216908
best_error: 12.955630961566232
best_error: 12.955630922765213
best_error: 12.955630922077749
best_error: 12.949585281282145
best_error: 12.9495852440356
best_error: 12.949585243693637
best_error: 12.941884709059181
best_error: 12.94188467457582
best_error: 12.94188467453091
best_error: 12.93838057316276
best_error: 12.938380538829747
best_error: 12.936632825146091
best_error: 12.936632790877885
best_error: 12.935751026186754
best_error: 12.935750991953082
best_error: 12.93529164518474
best_error: 12.935291610950756
best_error: 12.934986664028013
best_error: 12.934986629793794
best_error: 12.934863701296496
best_error: 12.934863667628832
best_error: 12.93484729218195
best_error: 12.934847258550292
best_error: 12.934841337913626
best_error: 12.934841304282045
best_error: 12.93483827792835
best_error: 12.934838244296742
best_error: 12.934837044117337
best_error: 12.934837010485756
best_error: 12.934836951216944
best_error: 12.934836949864549
best_error: 12.93483694342958
best_error: 12.934836940520979
best_error: 12.901541968968736
best_error: 12.90154193518978
best_error: 12.772583932646349
best_error: 12.772583900402397
best_error: 12.719881313872982
best_error: 12.71988128010316
best_error: 12.708624867775479
best_error: 12.708624835226368
best_error: 12.703910511160087
best_error: 12.703910470477858
best_error: 12.698785812693748
best_error: 12.69878576598725
best_error: 12.694875010951389
best_error: 12.694874959223878
best_error: 12.693326399260922
best_error: 12.69332634699093
best_error: 12.692508481645591
best_error: 12.692508429201723
best_error: 12.692076006988888
best_error: 12.692075954292726
best_error: 12.691847683526511
best_error: 12.691847630781632
best_error: 12.691727436161333
best_error: 12.691727383390791
best_error: 12.691700275857277
best_error: 12.691700245186539
best_error: 12.6916917943262
best_error: 12.691691741547224
best_error: 12.69157890833711
best_error: 12.691578855486554
best_error: 12.691269375762666
best_error: 12.691269345029102
best_error: 12.69073030597529
best_error: 12.690730275080794
best_error: 12.337593036787228
best_error: 12.337592995429985
best_error: 12.334624546662912
best_error: 12.334624505397848
best_error: 12.32832656061392
best_error: 12.328326520050336
best_error: 12.32584913856036
best_error: 12.32584909838832
best_error: 12.316546661515565
best_error: 12.316546621343214
best_error: 12.280017549299936
best_error: 12.280017509405159
best_error: 12.274779847137083
best_error: 12.274779807475419
best_error: 12.27339177629515
best_error: 12.27339173660504
best_error: 12.267148716134205
best_error: 12.267148676684782
best_error: 12.263780149235988
best_error: 12.263780109906303
best_error: 12.262166111430076
best_error: 12.262166072173404
best_error: 12.261291281145171
best_error: 12.261291241935272
best_error: 12.260817829876462
best_error: 12.260817790643953
best_error: 12.260564103463778
best_error: 12.260564064245525
best_error: 12.260384738005776
best_error: 12.260384698797555
best_error: 12.260355058050093
best_error: 12.260354999860484
best_error: 12.26033669030286
best_error: 12.260336651096859
best_error: 12.260303649602076
best_error: 12.260303610397614
best_error: 12.260297127923934
best_error: 12.26029708871976
