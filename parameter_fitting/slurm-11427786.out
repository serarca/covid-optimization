ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 72
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.699984689080182
best_error: 24.69998454038306
best_error: 4.834319552243833
best_error: 4.834319551380119
best_error: 4.833755396690401
best_error: 4.833755396671675
best_error: 4.833755396538844
best_error: 4.831474824091484
best_error: 4.831474824072263
best_error: 4.83147482393849
best_error: 4.821923805307291
best_error: 4.821923805285807
best_error: 4.8219238051481685
best_error: 4.774384009186536
best_error: 4.774384009147431
best_error: 4.774384008993549
best_error: 4.675759992505531
best_error: 4.6757599923467295
best_error: 4.675759992215642
best_error: 4.032227780660053
best_error: 4.032227760810713
best_error: 3.330666267156443
best_error: 3.3306662139094825
best_error: 3.1180974659253233
best_error: 3.118097407608444
best_error: 2.9490971360044353
best_error: 2.949097068547009
best_error: 2.8244309121597517
best_error: 2.824430857826467
best_error: 2.7996350033448083
best_error: 2.79963490634204
best_error: 2.209465627125875
best_error: 2.209465588382822
best_error: 2.203832911671915
best_error: 2.203832868054051
best_error: 2.200991204593932
best_error: 2.2009911671413693
best_error: 2.1996148439812093
best_error: 2.1996148322914273
best_error: 2.19826359189283
best_error: 2.198263581704797
best_error: 2.196068289511936
best_error: 2.196068258366748
best_error: 2.1761324238880944
best_error: 2.1761323777574413
best_error: 1.8372845242663987
best_error: 1.837284447502933
best_error: 1.8371529040072216
best_error: 1.8371528252950962
best_error: 1.834303757509133
best_error: 1.834303675019697
best_error: 1.6842502518466091
best_error: 1.6842501311665032
best_error: 1.6149110667999358
best_error: 1.6149108350973664
best_error: 1.59180782670037
best_error: 1.591807801091533
best_error: 1.530978312280423
best_error: 1.530978311356457
best_error: 1.5309783058471587
best_error: 1.5229672422999203
best_error: 1.522967203916094
best_error: 1.499017037386288
best_error: 1.4990169737270995
best_error: 1.4953048782754763
best_error: 1.4953048617872293
best_error: 1.4918698544437965
best_error: 1.4918698472389729
best_error: 1.491392158001388
best_error: 1.4913921420483418
best_error: 1.4894728228108596
best_error: 1.48947277694958
best_error: 1.4876678633126357
best_error: 1.4876678234600325
best_error: 1.4862957160369035
best_error: 1.4862957111763544
best_error: 1.4861468793811952
best_error: 1.4861468784785068
best_error: 1.486146878058393
best_error: 1.4859388564297895
best_error: 1.485938853900675
best_error: 1.4832074901648775
best_error: 1.4832074768348849
best_error: 1.4774624708342226
best_error: 1.4774624469697437
best_error: 1.4582303701813089
best_error: 1.4582303431987476
best_error: 1.4543454737081853
best_error: 1.4543454408554184
best_error: 1.4163523892209684
best_error: 1.4163523759740644
best_error: 1.40920722985244
best_error: 1.4092072040917734
best_error: 1.4072565178528567
best_error: 1.407256499094209
best_error: 1.4017718420757763
best_error: 1.4017718371542816
best_error: 1.4017718360769011
best_error: 1.398936710622816
best_error: 1.3989367021316244
best_error: 1.380787064431116
best_error: 1.380787039437663
best_error: 1.3724746246143684
best_error: 1.372474624218116
best_error: 1.3724746241344954
best_error: 1.372474624063326
best_error: 1.3724746234484573
best_error: 1.3724746233577934
best_error: 1.3711954318372324
best_error: 1.3711954310404249
best_error: 1.3711954309070113
best_error: 1.3711954303495753
best_error: 1.3707723356550914
best_error: 1.370772330036268
best_error: 1.3702838659691876
best_error: 1.3702838582326635
best_error: 1.368933639161792
best_error: 1.36893363287368
best_error: 1.368748691909363
best_error: 1.3687486834233744
best_error: 1.3676503508524374
best_error: 1.367650350325442
best_error: 1.367650349981332
best_error: 1.3676503496963703
best_error: 1.3671987133713406
best_error: 1.3671987077124812
best_error: 1.3670341408740094
best_error: 1.3670341358686189
best_error: 1.3669788605260238
best_error: 1.366978859560157
best_error: 1.366951075367339
best_error: 1.3669510739961224
best_error: 1.3666293827752485
best_error: 1.3666293789557598
best_error: 1.3640850762879966
best_error: 1.364085058923356
best_error: 1.3591587476460996
best_error: 1.3591587235265477
best_error: 1.3530257769358554
best_error: 1.353025718985345
best_error: 1.349062339500911
best_error: 1.3490622843293867
best_error: 1.3471392927412271
best_error: 1.3471392413035952
best_error: 1.3455488201763943
best_error: 1.3455487752636843
best_error: 1.3427382580265133
best_error: 1.3427382559364003
best_error: 1.3427382535980388
best_error: 1.3427382530900858
best_error: 1.3314816485980259
best_error: 1.3314816322141436
best_error: 1.3314816192654502
best_error: 1.3277218949767629
best_error: 1.3277218659964998
best_error: 1.3252909134917004
best_error: 1.3252908910992443
best_error: 1.3229090613459482
best_error: 1.3229090530247074
best_error: 1.3219853330374167
best_error: 1.3219853254144776
best_error: 1.3212264847973634
best_error: 1.3212264781753493
best_error: 1.3205149740030537
best_error: 1.3205149648468422
best_error: 1.317658344969351
best_error: 1.3176583398321648
best_error: 1.3104670453427325
best_error: 1.3104670107307987
best_error: 1.3016318712389632
best_error: 1.301631801677114
best_error: 1.3013885816253907
best_error: 1.301388493717277
best_error: 1.2943681506005211
best_error: 1.294368021000935
best_error: 1.289500049678284
best_error: 1.289500028472321
best_error: 1.2870725939747476
best_error: 1.287072591280727
best_error: 1.2870725753199104
best_error: 1.286174866607776
best_error: 1.286174858131511
best_error: 1.2860115863507349
best_error: 1.2860115752628927
best_error: 1.2859450331902638
best_error: 1.2859450207913756
best_error: 1.2859031453646488
best_error: 1.2859031322641883
best_error: 1.2858070365662106
best_error: 1.285807022467701
best_error: 1.2858037174510102
best_error: 1.2858037031791658
best_error: 1.2849101099525684
best_error: 1.2849100969601175
best_error: 1.2844637057914197
best_error: 1.2844636971947556
best_error: 1.2839597804011473
best_error: 1.283959775982155
best_error: 1.282683732123356
best_error: 1.282683728524722
best_error: 1.2826837220362883
best_error: 1.2814287188440376
best_error: 1.2814286860294133
best_error: 1.280660721502293
best_error: 1.2806607107419603
best_error: 1.2803250959632149
best_error: 1.2803250923627845
best_error: 1.280006741373146
best_error: 1.2800067409185842
best_error: 1.2800067409086615
best_error: 1.2800067394559906
best_error: 1.2795026029537235
best_error: 1.2795025929390853
best_error: 1.2787945322783911
best_error: 1.278794524732438
best_error: 1.2739481870324223
best_error: 1.2739481749870232
best_error: 1.267315622441718
best_error: 1.2673155779639198
best_error: 1.2657513780647567
best_error: 1.2657513649797822
best_error: 1.2657513593953944
best_error: 1.264789213081464
best_error: 1.2647892076234601
best_error: 1.2647891800135307
best_error: 1.2617934744971742
best_error: 1.26179342128882
best_error: 1.2522262921575276
best_error: 1.2522262693863082
best_error: 1.2515402982443509
best_error: 1.251540295248289
best_error: 1.2515402798531228
best_error: 1.2509911851923474
best_error: 1.250991148861119
best_error: 1.2505276530017968
best_error: 1.2505276273935364
best_error: 1.2488003686494644
best_error: 1.2488003439961002
best_error: 1.2461260356009176
best_error: 1.2461259948672612
best_error: 1.244057685705913
best_error: 1.2440576529356955
best_error: 1.2439465302663366
best_error: 1.2439465228378785
best_error: 1.241664718521283
best_error: 1.2416647109860535
best_error: 1.2407592589186542
best_error: 1.2407592368179707
best_error: 1.2404426136896638
best_error: 1.240442598390819
best_error: 1.2401052694807826
best_error: 1.2401052683199718
best_error: 1.2397167768692277
best_error: 1.2397167765766295
best_error: 1.239716776317252
best_error: 1.2394212576612713
best_error: 1.2394212452222784
best_error: 1.239381125347154
best_error: 1.2393811228834353
