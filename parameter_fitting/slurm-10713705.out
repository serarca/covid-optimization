ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.461730764596075
best_error: 13.461730745112074
best_error: 13.461730742211948
best_error: 13.422587600143636
best_error: 13.422587577434143
best_error: 13.422587574907997
best_error: 13.269201850561913
best_error: 13.269201814087833
best_error: 13.269201813811332
best_error: 13.010824182175618
best_error: 13.010824119779953
best_error: 6.500775395589362
best_error: 6.500774847195877
best_error: 5.923178308521644
best_error: 5.923177898210344
best_error: 5.813208787513016
best_error: 5.813208446233062
best_error: 5.6233762211868505
best_error: 5.623375887277507
best_error: 5.555105057091765
best_error: 5.555104733575732
best_error: 5.527898549322768
best_error: 5.527898226927719
best_error: 5.516389644266898
best_error: 5.516389321532883
best_error: 5.512190768979343
best_error: 5.512190447803129
best_error: 5.509807127085422
best_error: 5.509806806503953
best_error: 5.508470529286434
best_error: 5.508470209439734
best_error: 5.507738154501944
best_error: 5.507737834554252
best_error: 5.507401058777534
best_error: 5.507400738783348
best_error: 5.507192946999643
best_error: 5.507192626976776
best_error: 5.507045542602217
best_error: 5.507045222559546
best_error: 5.506953512245943
best_error: 5.506953192190902
best_error: 5.50691379805197
best_error: 5.506913477991602
best_error: 5.506898715048161
best_error: 5.506898379248183
best_error: 5.425315194793174
best_error: 5.425314852930858
best_error: 5.1997050724562754
best_error: 5.199704617650683
best_error: 5.192965017212656
best_error: 5.192964552961376
best_error: 5.188853054196413
best_error: 5.1888525848574005
best_error: 5.187031853066259
best_error: 5.187031325113942
best_error: 5.1576677306011245
best_error: 5.157667204308154
best_error: 5.045656765083348
best_error: 5.045656277851256
best_error: 5.040061788722721
best_error: 5.040061497861521
best_error: 5.039243362919683
best_error: 5.039242876589587
best_error: 5.034924448673733
best_error: 5.034924231423917
best_error: 5.016232261225042
best_error: 5.01623201274716
best_error: 5.01600808238032
best_error: 5.016007809731029
best_error: 5.015648452614476
best_error: 5.015648198121319
best_error: 4.9698875329662275
best_error: 4.969887245299251
best_error: 4.950327163718573
best_error: 4.950326645169174
best_error: 4.926289875382236
best_error: 4.926289584432469
best_error: 4.912948998925332
best_error: 4.912948710232027
best_error: 4.857164170078095
best_error: 4.857163534918899
best_error: 4.829970557174217
best_error: 4.8299703241183956
best_error: 4.802589465753666
best_error: 4.802589186653484
best_error: 4.766500277242992
best_error: 4.766499692672513
best_error: 4.727657318865429
best_error: 4.727656732085755
best_error: 4.674636427132283
best_error: 4.674635826946992
best_error: 4.662324938945809
best_error: 4.662324665601725
best_error: 4.647026828994123
best_error: 4.647026214650413
best_error: 4.6452522707044395
best_error: 4.645251656088829
best_error: 4.645250232579199
best_error: 4.645249960725282
best_error: 4.644622358088891
best_error: 4.644621743413591
best_error: 4.633983345857342
best_error: 4.633983076106281
best_error: 4.633080956595712
best_error: 4.633080339784083
best_error: 4.599282473353123
best_error: 4.599282209799751
best_error: 4.572101091450543
best_error: 4.5721004675611425
best_error: 4.533657173302325
best_error: 4.533656898088989
best_error: 4.499292569380817
best_error: 4.499291981076103
best_error: 4.450060532591344
best_error: 4.450060214632762
best_error: 4.435508271180177
best_error: 4.435507749422811
best_error: 4.43444458125264
best_error: 4.434444299371076
best_error: 4.431445268661315
best_error: 4.431444740653287
best_error: 4.431215612186826
best_error: 4.431215330853593
best_error: 4.430480426316901
best_error: 4.430479898118777
best_error: 4.430414233072004
best_error: 4.430413951874842
best_error: 4.429362945615056
best_error: 4.429362440010474
best_error: 4.428737249530264
best_error: 4.428736952974129
best_error: 4.428091814687413
best_error: 4.428091312614406
best_error: 4.426183289938682
best_error: 4.4261827581998165
best_error: 4.344212289168129
best_error: 4.344212015137824
best_error: 4.325008841772808
best_error: 4.325008580406852
best_error: 4.305190069134374
best_error: 4.30518950161575
best_error: 4.130294767476943
best_error: 4.130294232367692
best_error: 4.128015903983359
best_error: 4.128015409496991
best_error: 4.0379261607046235
best_error: 4.037925625228575
best_error: 4.028004309812313
best_error: 4.028004121175622
best_error: 4.008438061103794
best_error: 4.008437502466013
best_error: 3.981479584873118
best_error: 3.981479008515627
