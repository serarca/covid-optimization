ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.102228744240232
best_error: 11.102228719178665
best_error: 11.102228692267358
best_error: 10.822456200675726
best_error: 10.822456166135265
best_error: 10.822456133902977
best_error: 9.356694502313296
best_error: 9.356694418133928
best_error: 9.011079627608439
best_error: 9.011079532152612
best_error: 8.959782895159481
best_error: 8.959782795801644
best_error: 8.525223532007308
best_error: 8.52522342050128
best_error: 8.0523785263313
best_error: 8.052378459482686
best_error: 8.052378453327204
best_error: 6.645587712228963
best_error: 6.645587606211919
best_error: 6.559091526911257
best_error: 6.55909152690392
best_error: 3.568374536622815
best_error: 3.5683742250713215
best_error: 3.526782095131631
best_error: 3.5267818349245577
best_error: 3.4501032669937612
best_error: 3.4501030169230393
best_error: 3.420898142510529
best_error: 3.420897915228573
best_error: 3.333272904578039
best_error: 3.3332726652961933
best_error: 3.133047210417183
best_error: 3.1330469938393857
best_error: 2.9706037141208137
best_error: 2.9706035263810486
best_error: 2.8141213427762057
best_error: 2.8141211593055853
best_error: 2.7204406037911593
best_error: 2.7204404216709097
best_error: 2.648739894309766
best_error: 2.648739712961891
best_error: 2.615268642006419
best_error: 2.6152684585166615
best_error: 2.606076856069484
best_error: 2.606076671743641
best_error: 2.598810711485454
best_error: 2.5988105265001917
best_error: 2.59875263171127
best_error: 2.5987524467207486
best_error: 2.5987123570449606
best_error: 2.598712172050776
best_error: 2.5986929787435686
best_error: 2.5986927937476363
best_error: 2.5986785295579318
best_error: 2.5986783445606854
best_error: 2.5986721896859115
best_error: 2.5986720046880727
best_error: 2.5986698104779293
best_error: 2.5986696254798907
best_error: 2.5986695222949954
best_error: 2.218568718045403
best_error: 2.2185687180369458
best_error: 1.7297397212734986
best_error: 1.7297392620721623
best_error: 1.6788747813462923
best_error: 1.6788744358257646
best_error: 1.6528707409798464
best_error: 1.65287074097179
best_error: 1.6416720859991296
best_error: 1.641671710943652
best_error: 1.6370580790497486
best_error: 1.6370576798659564
best_error: 1.6328303636261703
best_error: 1.6328299614237927
best_error: 1.6325873590187836
best_error: 1.632587359011063
best_error: 1.632450066338002
best_error: 1.632449664070605
best_error: 1.6323168646420374
best_error: 1.6323164620545283
best_error: 1.6323073718126124
best_error: 1.6323073053727335
best_error: 1.632307291953069
best_error: 1.6323072847524491
best_error: 1.6321233882657784
best_error: 1.6321233882581314
best_error: 1.6318510292572532
best_error: 1.6318510292497326
best_error: 1.45247113645851
best_error: 1.4524707209858605
best_error: 1.4324754889119407
best_error: 1.4324750442805019
best_error: 1.4249458848607528
best_error: 1.4249454149976184
best_error: 1.4237904659028664
best_error: 1.4237899916743335
best_error: 1.4230495247258923
best_error: 1.4230490503821995
best_error: 1.4228176151423773
best_error: 1.4228171407624612
best_error: 1.4227210258989604
best_error: 1.4227205515039834
best_error: 1.4226574164777022
best_error: 1.4226569420728068
best_error: 1.422636519522713
best_error: 1.4226365195160509
best_error: 1.4226365149899076
best_error: 1.422636381630486
best_error: 1.4226338289696057
best_error: 1.4226336973516194
best_error: 1.419647709945484
best_error: 1.4196477099387748
best_error: 1.419647707932755
best_error: 1.4196475721658233
best_error: 1.4194277008279907
best_error: 1.4194272351583197
best_error: 1.4126174394453115
best_error: 1.412617003307779
best_error: 1.4122834413482446
best_error: 1.4122830087585325
best_error: 1.4120648603168058
best_error: 1.4120644301222893
best_error: 1.4111759546159475
best_error: 1.4111759546089622
best_error: 1.4111758176652014
best_error: 1.4111529140403478
best_error: 1.4111529140333592
best_error: 1.4111527770925956
best_error: 1.4111301092911257
best_error: 1.4111301092841786
best_error: 1.411129972364901
best_error: 1.4110840986271551
best_error: 1.4110840986201765
best_error: 1.4110839616680382
best_error: 1.4110772611881228
best_error: 1.4110768331367973
best_error: 1.411068435169434
best_error: 1.4110680049482967
best_error: 1.4110144968273057
best_error: 1.4110144968203409
best_error: 1.4110143598708083
best_error: 1.4109842053747041
best_error: 1.4109842053677455
best_error: 1.4109840684353618
best_error: 1.4108112911056134
best_error: 1.4108112910986494
best_error: 1.410804932840686
best_error: 1.4108045021886513
best_error: 1.4107634521766923
best_error: 1.4107630216486924
best_error: 1.4106525073011489
best_error: 1.4106520726341012
best_error: 1.4106279185070436
best_error: 1.4106274838324704
best_error: 1.410083193763001
best_error: 1.410082758760025
best_error: 1.4100304447164338
best_error: 1.4100304447094798
best_error: 1.4100303074971772
