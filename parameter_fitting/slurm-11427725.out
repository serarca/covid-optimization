ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 50
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.60552608314768
best_error: 25.605525734088832
best_error: 5.011558923617984
best_error: 5.0115589232612345
best_error: 5.01151568077928
best_error: 5.011515680770656
best_error: 5.011515680700947
best_error: 5.011342344417937
best_error: 5.011342344409267
best_error: 5.011342344339471
best_error: 5.0106430985458505
best_error: 5.010643098536994
best_error: 5.010643098466839
best_error: 5.00774765504087
best_error: 5.007747655031216
best_error: 5.007747654959586
best_error: 4.994269141810929
best_error: 4.994269141796741
best_error: 4.994269141718455
best_error: 4.796158082672252
best_error: 4.796158080589338
best_error: 4.583571136743384
best_error: 4.58357112029487
best_error: 3.5339995614891824
best_error: 3.5339994441608384
best_error: 3.5339994397080625
best_error: 3.1765433047397584
best_error: 3.1765431484645648
best_error: 3.1765429849707267
best_error: 2.91378665234917
best_error: 2.913786472700236
best_error: 2.9137861551436632
best_error: 2.9137858011554205
best_error: 2.712379779113633
best_error: 2.712379607659754
best_error: 2.4873931757972914
best_error: 2.487393100959965
best_error: 2.473440188742678
best_error: 2.4734401634781755
best_error: 2.4722215990340617
best_error: 2.4722215859443146
best_error: 2.47013925482451
best_error: 2.47013923681357
best_error: 2.4698136574501945
best_error: 2.4698136566907083
best_error: 2.4698136472444676
best_error: 2.4688310447152055
best_error: 2.4688310069916346
best_error: 2.4677760951389254
best_error: 2.4677760627645733
best_error: 2.464035044615555
best_error: 2.4640350433075993
best_error: 2.464035035038606
best_error: 2.430056691766876
best_error: 2.4300566334834413
best_error: 2.2899807435515074
best_error: 2.2899806776161977
best_error: 2.289980453831529
best_error: 2.28757306748107
best_error: 2.2875730032191504
best_error: 2.2473000458898538
best_error: 2.2472998284941066
best_error: 2.2472997557015395
best_error: 2.1909865192997877
best_error: 2.1909864417518534
best_error: 2.1875957703333877
best_error: 2.1875957693388894
best_error: 2.1875957634205414
best_error: 2.123729492438488
best_error: 2.1237294913822256
best_error: 2.123729485196229
best_error: 1.981803835490602
best_error: 1.9818038314436712
best_error: 1.981803828155295
best_error: 1.9649421056078287
best_error: 1.9649420504388018
best_error: 1.964941974295621
best_error: 1.940820810293497
best_error: 1.9408208096643507
best_error: 1.9408208050955094
best_error: 1.8235442841968912
best_error: 1.8235441817243776
best_error: 1.746299729886681
best_error: 1.7462996950163017
best_error: 1.7427745757813866
best_error: 1.7427745304107538
best_error: 1.7427744749432563
best_error: 1.7425424661168254
best_error: 1.7425424152795324
best_error: 1.7376065921661072
best_error: 1.7376065885741343
best_error: 1.736275275056727
best_error: 1.7362752696683181
best_error: 1.7318382139482142
best_error: 1.7318381995779208
best_error: 1.7270715729595865
best_error: 1.727071441352516
best_error: 1.7250128082665115
best_error: 1.7250127965989446
best_error: 1.7220375417053126
best_error: 1.722037535685684
best_error: 1.7207612737572624
best_error: 1.7207612627960207
best_error: 1.7205048287894307
best_error: 1.7205048122314386
best_error: 1.7195688751639435
best_error: 1.719568872552024
best_error: 1.719381385240421
best_error: 1.7193813848532054
best_error: 1.719381382757806
best_error: 1.7192993648690975
best_error: 1.7192993627506639
best_error: 1.7191264983760188
best_error: 1.7191264970570925
best_error: 1.7186933013760342
best_error: 1.7186933012232595
best_error: 1.7186933006816272
best_error: 1.7176550439103875
best_error: 1.7176550435884235
best_error: 1.717655043283552
best_error: 1.7119554721842105
best_error: 1.7119554705487656
best_error: 1.696699515271195
best_error: 1.6966995065085277
best_error: 1.6966992248937378
best_error: 1.695658909534686
best_error: 1.695658907158896
best_error: 1.6826845564769153
best_error: 1.682684441501737
best_error: 1.6826844375482777
best_error: 1.6743253526701967
best_error: 1.6743251811173803
best_error: 1.6649511975147078
best_error: 1.664951074247553
best_error: 1.663942706531922
best_error: 1.6639426137194209
best_error: 1.660118156252805
best_error: 1.6601181550212445
best_error: 1.660117869702401
best_error: 1.6580575753949425
best_error: 1.6580575290772157
best_error: 1.6579063667530827
best_error: 1.6579063637265532
best_error: 1.6576904234052188
best_error: 1.6576904216331525
best_error: 1.657493125854229
best_error: 1.6574931051689483
best_error: 1.6573936832719292
best_error: 1.6573936657154125
best_error: 1.6571373629626478
best_error: 1.6571373489325834
best_error: 1.6571348539511872
best_error: 1.657134839967061
best_error: 1.6571069213703131
best_error: 1.6571069210283524
best_error: 1.65710691480788
best_error: 1.656765739941558
best_error: 1.6567657313715165
best_error: 1.6565179528875005
best_error: 1.6565179424136094
best_error: 1.6563527803917555
best_error: 1.6563527801643603
best_error: 1.6563527795918263
best_error: 1.6563527795236093
best_error: 1.6563497841209343
best_error: 1.6563497821031092
best_error: 1.6563483752768962
best_error: 1.6563483751863763
best_error: 1.6563483747892824
best_error: 1.6563483744203615
best_error: 1.6563483743980114
best_error: 1.6563480950772698
best_error: 1.6563480946275653
best_error: 1.6563480942602091
best_error: 1.6563480942049125
best_error: 1.6563477328686635
best_error: 1.6563477323639235
best_error: 1.6563477320324298
best_error: 1.6563477319920827
best_error: 1.6563476370375816
best_error: 1.6563476362930731
best_error: 1.6563476362177263
best_error: 1.6563476361634053
best_error: 1.656347249702036
best_error: 1.6563472490011604
best_error: 1.6563472488705018
best_error: 1.65634724882576
best_error: 1.6563458821581016
best_error: 1.6563458813701732
best_error: 1.6563458813117384
best_error: 1.6563458812787162
best_error: 1.6563363917535412
best_error: 1.6563363906452377
best_error: 1.6563363903382886
best_error: 1.656327001330516
best_error: 1.6563269999924637
best_error: 1.6563269978789859
best_error: 1.6563215197307246
best_error: 1.6563215179951079
best_error: 1.6563215167634422
best_error: 1.656311964159819
best_error: 1.6563119615827233
best_error: 1.656309564377703
best_error: 1.6563095620066435
best_error: 1.656304659530964
best_error: 1.6563046569058633
best_error: 1.6563006563544778
best_error: 1.6563006538671448
best_error: 1.65628770094984
best_error: 1.6562876986485435
best_error: 1.6562539070452638
best_error: 1.6562539054378254
best_error: 1.6562199627006853
best_error: 1.6562199620112708
best_error: 1.656219961929219
best_error: 1.656219961838265
best_error: 1.6561965896485944
best_error: 1.6561965888742014
best_error: 1.6561965887889791
best_error: 1.6561835090737498
best_error: 1.6561835083454504
best_error: 1.6561835082241976
best_error: 1.6561829658840606
best_error: 1.6561829651763649
best_error: 1.6561829650383815
best_error: 1.6561816596486216
best_error: 1.6561816589286165
best_error: 1.6561816588015075
best_error: 1.6561804509794589
best_error: 1.656180450262801
best_error: 1.6561804501336106
best_error: 1.6561779484918517
best_error: 1.656177947764308
best_error: 1.6561779476438745
best_error: 1.6561699862247172
best_error: 1.656169985496475
best_error: 1.6561699853772698
best_error: 1.6561429825526792
best_error: 1.6561429821749198
best_error: 1.6561429818097795
best_error: 1.6561429817051314
best_error: 1.6560546001736478
best_error: 1.6560545938050126
best_error: 1.6558763620122219
best_error: 1.6558763504710612
best_error: 1.6555903104958778
best_error: 1.6555902875725528
best_error: 1.655384448161529
best_error: 1.655384421122025
best_error: 1.654693662753259
best_error: 1.6546936262730307
best_error: 1.6533872515671328
best_error: 1.6533872245125363
best_error: 1.65338681842012
best_error: 1.6527611781662284
best_error: 1.652761162649796
best_error: 1.6527611538247842
best_error: 1.6519445206873475
best_error: 1.6519445180963184
best_error: 1.6519445093506442
best_error: 1.6513601547513286
best_error: 1.6513601414979513
best_error: 1.6509146120879987
best_error: 1.650914596502206
best_error: 1.6500632987167927
best_error: 1.6500632809068216
best_error: 1.6483003492579968
best_error: 1.6483003320343903
best_error: 1.6445419315882717
best_error: 1.644541926924074
best_error: 1.6445419201326488
best_error: 1.6415885298409945
best_error: 1.6415884647156478
best_error: 1.6359400622515943
best_error: 1.6359400032458538
best_error: 1.6356414243790869
best_error: 1.6356413308624977
best_error: 1.626912859576242
best_error: 1.626912763985589
best_error: 1.6179425267867789
best_error: 1.6179424068558277
best_error: 1.612274538017225
best_error: 1.6122744569950656
best_error: 1.6007029344400083
best_error: 1.600702836124118
best_error: 1.5953513816858498
best_error: 1.5953513091873341
best_error: 1.5881639130085403
best_error: 1.5881638969531662
best_error: 1.5856387506829126
best_error: 1.5856387115278539
best_error: 1.5817117757292731
best_error: 1.5817117435385237
best_error: 1.5767611693253176
best_error: 1.5767611651199689
best_error: 1.5767611645162571
