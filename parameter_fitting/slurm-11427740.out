ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.174279549614877
best_error: 25.174279497493934
best_error: 25.17427948066664
best_error: 4.975487259866953
best_error: 4.975487259523927
best_error: 4.975487259395683
best_error: 4.974881474865292
best_error: 4.974881474760189
best_error: 4.974881474392543
best_error: 4.97384264225964
best_error: 4.973842642152313
best_error: 4.973842641784356
best_error: 4.973325252446212
best_error: 4.973325252337717
best_error: 4.973325251970155
best_error: 4.971233669024003
best_error: 4.97123366891074
best_error: 4.971233668544791
best_error: 4.962501479889457
best_error: 4.962501479755582
best_error: 4.962501479396739
best_error: 4.920184244552005
best_error: 4.9201842442947825
best_error: 4.920184243986452
best_error: 4.544143924983126
best_error: 4.544143891045434
best_error: 4.528907297685152
best_error: 4.528907260064575
best_error: 4.5110104283495485
best_error: 4.511010386335041
best_error: 4.053330922957226
best_error: 4.053330760133469
best_error: 3.001682428557257
best_error: 3.001682382896062
best_error: 2.994526626138762
best_error: 2.9945266168273257
best_error: 2.993909990258928
best_error: 2.993909988671025
best_error: 2.993073071098429
best_error: 2.9930730695562766
best_error: 2.989774705572301
best_error: 2.9897747007899222
best_error: 2.9778974136988006
best_error: 2.9778973459372198
best_error: 2.792623152840247
best_error: 2.792622737392074
best_error: 2.3652077616981653
best_error: 2.365207449891287
best_error: 2.1769629195960105
best_error: 2.1769628143500244
best_error: 2.134640406448384
best_error: 2.1346402537434286
best_error: 2.0523488733008124
best_error: 2.052348643168761
best_error: 2.034405874735528
best_error: 2.0344058663233584
best_error: 2.033424145878587
best_error: 2.033424139290268
best_error: 2.0294548143538664
best_error: 2.029454802855215
best_error: 2.0278151180354893
best_error: 2.027815032647922
best_error: 2.0230690138182372
best_error: 2.0230689186640354
best_error: 2.00842339585751
best_error: 2.008423264401339
best_error: 2.001307898743768
best_error: 2.0013078717263495
best_error: 1.9952417999628294
best_error: 1.9952417872153005
best_error: 1.9934802678921555
best_error: 1.993480249278659
best_error: 1.9896290947502686
best_error: 1.9896290885532957
best_error: 1.9896290878106282
best_error: 1.981909412784998
best_error: 1.9819093082666777
best_error: 1.957797932154983
best_error: 1.9577977106228346
best_error: 1.8861472178337726
best_error: 1.88614717446312
best_error: 1.873184701379683
best_error: 1.8731846743724392
best_error: 1.592845286155551
best_error: 1.5928452129497785
best_error: 1.58714891210531
best_error: 1.5871487946669622
best_error: 1.5017348444288232
best_error: 1.5017348389465888
best_error: 1.4031866396952335
best_error: 1.4031866310080172
best_error: 1.4031860099981779
best_error: 1.40318600131847
best_error: 1.4014001921867143
best_error: 1.4014001854404483
best_error: 1.3901806312294591
best_error: 1.390180618513825
best_error: 1.3901806160163346
best_error: 1.3809315273785034
best_error: 1.3809315129297906
best_error: 1.3797557164112728
best_error: 1.3797556636210486
best_error: 1.379329515795328
best_error: 1.3793294186776424
best_error: 1.3791044169989266
best_error: 1.3791042910443911
best_error: 1.3665220111929892
best_error: 1.3665219562651323
best_error: 1.3489464867949084
best_error: 1.3489463024925712
best_error: 1.334640863018608
best_error: 1.3346408441829114
best_error: 1.334239491925668
best_error: 1.3342394914768227
best_error: 1.3342394914767113
best_error: 1.3342394910860116
best_error: 1.3341232689062188
best_error: 1.334123268033287
best_error: 1.3341232680217192
best_error: 1.3341027123921305
best_error: 1.3341027116525228
best_error: 1.334102711506029
best_error: 1.3340402058175487
best_error: 1.3340402047977085
best_error: 1.333944212694548
best_error: 1.3339442126522665
best_error: 1.3339442123017795
best_error: 1.3339442120265756
best_error: 1.333944211771883
best_error: 1.333889477969567
best_error: 1.3338894779532793
best_error: 1.3338894775809222
best_error: 1.3338894774147627
best_error: 1.333889476954865
best_error: 1.3333775786717086
best_error: 1.3333775783000654
best_error: 1.3333775773864363
best_error: 1.3313772040980885
best_error: 1.3313772023255261
best_error: 1.3304219055976545
best_error: 1.3304218844184357
best_error: 1.3263370179502243
best_error: 1.3263364847567354
best_error: 1.3238989336490794
best_error: 1.3238988938465905
best_error: 1.3229735062682753
best_error: 1.322973486282455
best_error: 1.3222836597003225
best_error: 1.322283647088153
best_error: 1.3211667596971757
best_error: 1.3211667504914684
best_error: 1.3174396150481413
best_error: 1.3174396070888381
best_error: 1.3174381755094131
best_error: 1.317408467937948
best_error: 1.3174084610470005
best_error: 1.3174084115589109
best_error: 1.3174084094897327
best_error: 1.3174038799260137
best_error: 1.317403876202265
best_error: 1.3174038406774726
best_error: 1.3174036144509904
best_error: 1.3174036107277212
best_error: 1.3174035754462003
best_error: 1.317349049947763
best_error: 1.3173490404634143
best_error: 1.317349040459942
best_error: 1.3173490337762417
best_error: 1.3173082948095853
best_error: 1.3173082939564522
best_error: 1.3173082842127894
best_error: 1.3173082831333458
best_error: 1.3173071751939633
best_error: 1.3173071658418636
best_error: 1.3072202483294169
best_error: 1.3072201540979014
best_error: 1.3072174938206547
best_error: 1.2990202198475072
best_error: 1.2990202095211243
best_error: 1.2990190435902493
best_error: 1.2990144852332524
best_error: 1.2990144753767914
best_error: 1.2990144251067388
best_error: 1.2838731980677303
best_error: 1.2838731938056207
best_error: 1.2828624656145402
best_error: 1.2828624615560387
best_error: 1.2784576470251383
best_error: 1.2784576356575428
best_error: 1.2784575410175467
best_error: 1.2777797315442154
best_error: 1.2777796749292256
best_error: 1.2775959482321162
best_error: 1.2775958772794815
best_error: 1.277421497226209
best_error: 1.2774214287230048
best_error: 1.27645263837818
best_error: 1.2764526230778157
best_error: 1.2764525697839972
best_error: 1.275162840371398
best_error: 1.275162823118103
best_error: 1.2751627988914185
best_error: 1.2703645286936744
best_error: 1.2703644950148465
best_error: 1.2653414835589574
best_error: 1.2653414315959564
best_error: 1.2617708906192322
best_error: 1.2617708212903873
best_error: 1.2617703746322695
best_error: 1.2609593899398435
best_error: 1.2609593856363077
best_error: 1.2609227912896976
best_error: 1.2609227861608892
best_error: 1.2609038203891212
best_error: 1.2609038198096567
best_error: 1.2609038197997797
best_error: 1.2609038194747848
best_error: 1.2608931234915501
best_error: 1.260893119126984
best_error: 1.2608869539893057
best_error: 1.2608869493193204
best_error: 1.2608682040701025
best_error: 1.2608682004942753
best_error: 1.2608269221963493
best_error: 1.2608269179694829
best_error: 1.260733607850074
best_error: 1.2607336073759026
best_error: 1.2607336067553636
best_error: 1.2606004876702115
best_error: 1.260600477447117
best_error: 1.2604874607479895
best_error: 1.2604874486063362
best_error: 1.2604542890176784
best_error: 1.2604542846095261
best_error: 1.2604429007314448
best_error: 1.260442896177123
best_error: 1.2604265172788152
best_error: 1.2604265138191846
best_error: 1.2603955460339538
best_error: 1.260395542882759
best_error: 1.260311181399706
best_error: 1.2603111808445218
best_error: 1.2603111806000604
best_error: 1.2600655127113902
best_error: 1.2600655065420916
best_error: 1.2594404379243656
best_error: 1.2594404193391433
best_error: 1.2583824370314403
best_error: 1.2583824062472098
best_error: 1.254898266307085
best_error: 1.2548982113166691
best_error: 1.2529507966408184
best_error: 1.2529507430148916
best_error: 1.2506779473285194
best_error: 1.2506779134821762
best_error: 1.2500138409606818
best_error: 1.2500138335808044
best_error: 1.2499262419264183
best_error: 1.2499262353910763
best_error: 1.2498920886499927
best_error: 1.2498920760649594
best_error: 1.2498575088194503
best_error: 1.249857500072078
best_error: 1.2498410970356029
best_error: 1.2498410902179586
best_error: 1.2497984592637654
best_error: 1.2497984537747793
best_error: 1.2495341757019371
best_error: 1.2495341756309255
best_error: 1.2495341750409223
best_error: 1.2494305282701916
best_error: 1.2494305281457716
best_error: 1.2494305275093556
best_error: 1.2489259715082985
best_error: 1.248925734364691
best_error: 1.2485912540942257
best_error: 1.2485912415663076
