ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.139537312884922
best_error: 9.139537282414189
best_error: 9.139537277671185
best_error: 6.521593026249093
best_error: 6.521592832298409
best_error: 3.407083757600388
best_error: 3.4070837235308775
best_error: 2.9614076269459852
best_error: 2.9614073522341067
best_error: 2.693772127837297
best_error: 2.6937721269410044
best_error: 2.6937719372971523
best_error: 2.6619348326529675
best_error: 2.6619348310319664
best_error: 2.661934649863804
best_error: 2.6421916127418514
best_error: 2.642191610528382
best_error: 2.642191431109112
best_error: 2.6289409338221024
best_error: 2.628940930692217
best_error: 2.628940753065539
best_error: 2.6188807366424154
best_error: 2.6188807332670425
best_error: 2.61888055504872
best_error: 2.6125954228170833
best_error: 2.6125954194361496
best_error: 2.6125952404239907
best_error: 2.606641108575497
best_error: 2.6066411047857567
best_error: 2.6066409256484633
best_error: 2.6038487071718963
best_error: 2.6038487033372024
best_error: 2.6038485249824
best_error: 2.6011162208225853
best_error: 2.6011161804113154
best_error: 2.598026640963793
best_error: 2.598026637132228
best_error: 2.59802645806218
best_error: 2.5975594611512065
best_error: 2.597559457319896
best_error: 2.5975592781925254
best_error: 2.597349145480157
best_error: 2.5973491416489454
best_error: 2.5973489624957855
best_error: 2.5971636669779636
best_error: 2.5971636631468416
best_error: 2.597163483970927
best_error: 2.597063510410665
best_error: 2.5970635065796084
best_error: 2.597063327391411
best_error: 2.597019881821871
best_error: 2.5970198779908396
best_error: 2.5970196987972924
best_error: 2.5969791252134726
best_error: 2.596979121382461
best_error: 2.596978942183921
best_error: 2.5969639953337813
best_error: 2.5969639915027622
best_error: 2.596963812302378
best_error: 2.5969547065689227
best_error: 2.596954702737923
best_error: 2.5969545235363816
best_error: 2.596947659109508
best_error: 2.596947655278509
best_error: 2.596947476076104
best_error: 2.5969438950591632
best_error: 2.596943891228169
best_error: 2.596943712025305
best_error: 2.596941396851433
best_error: 2.596941393020429
best_error: 2.59694121381727
best_error: 2.596939595014674
best_error: 2.5969395911836783
best_error: 2.596939411980289
best_error: 2.5969385484376097
best_error: 2.5969385446066133
best_error: 2.5969383654030915
best_error: 2.5969378020569867
best_error: 2.5969377982259987
best_error: 2.5969376190223894
best_error: 2.5969373588888995
best_error: 2.5969373550579093
best_error: 2.5969371758542437
best_error: 2.596937048707832
best_error: 2.596937044876828
best_error: 2.5969368656731264
best_error: 2.596936857876919
best_error: 2.596936854045925
best_error: 2.596936674842199
best_error: 2.5969365454782984
best_error: 2.5969175574005865
best_error: 2.5969175537547344
best_error: 2.59691737437796
best_error: 2.596822577127927
best_error: 2.596822573896274
best_error: 2.5968223939025625
best_error: 2.594381022934374
best_error: 2.5943809829468383
best_error: 2.5942991905759984
best_error: 2.5942991873559973
best_error: 2.594299007046078
best_error: 2.5942900115103678
best_error: 2.594290008290412
best_error: 2.5942898279793365
best_error: 2.594287265696917
best_error: 2.5942872624769766
best_error: 2.5942872378187904
best_error: 2.5942869958520367
best_error: 2.594286992632095
best_error: 2.5942869679738902
best_error: 2.5942869504151127
best_error: 2.5925506996032297
best_error: 2.5925506983105358
best_error: 2.592550515222891
best_error: 2.592103422201556
best_error: 2.5921034218967574
best_error: 2.592103235511975
best_error: 2.5920620113188604
best_error: 2.592062011090719
best_error: 2.5920618241862172
best_error: 2.592054177385692
best_error: 2.592053989492115
best_error: 2.5920521357854294
best_error: 2.592051947892765
best_error: 2.592049562333351
best_error: 2.5920493744418787
best_error: 2.5920488026185033
best_error: 2.5920486147273833
best_error: 2.5920485311190418
best_error: 2.5920483432280577
best_error: 2.592048262028163
best_error: 2.5920149045073657
best_error: 2.5920147166136602
best_error: 2.5918987878046043
best_error: 2.5918987876447006
best_error: 2.591898600235129
best_error: 2.5846284210335324
best_error: 2.5846282337292683
best_error: 2.580510357061245
best_error: 2.580510169667849
best_error: 2.580249747472006
best_error: 2.5802495600454796
best_error: 2.580037752132208
best_error: 2.580037564678734
best_error: 2.5799427395062278
best_error: 2.5799425520406762
best_error: 2.579930131123489
best_error: 2.5799299436563583
best_error: 2.5799245990995345
best_error: 2.579924411631714
best_error: 2.5799233094890597
best_error: 2.5799231220210768
best_error: 2.5799228071631766
best_error: 2.5799226196951275
best_error: 2.579922181120942
best_error: 2.5799219936528126
best_error: 2.57992189351192
best_error: 2.5799218569570845
best_error: 2.5799217798211287
best_error: 2.579921779820914
best_error: 2.5799217522101063
best_error: 2.5799217399940115
best_error: 2.5799217289781797
best_error: 2.579921722907522
best_error: 2.579921717488445
best_error: 2.5799217142673982
best_error: 2.5799217114554294
best_error: 2.579921709430552
best_error: 2.579921707782483
