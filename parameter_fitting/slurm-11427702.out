ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 64
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.86609026528139
best_error: 25.86608995045635
best_error: 5.04952034638876
best_error: 5.049520346154957
best_error: 5.0494916086247486
best_error: 5.049491608608342
best_error: 5.0494916085014045
best_error: 5.049376466847197
best_error: 5.049376466830707
best_error: 5.049376466723686
best_error: 5.048912823853459
best_error: 5.048912823836629
best_error: 5.048912823729273
best_error: 5.047007421514465
best_error: 5.047007421496224
best_error: 5.047007421387494
best_error: 5.038451369244175
best_error: 5.038451369219145
best_error: 5.038451369104363
best_error: 4.969052839294015
best_error: 4.969052839111322
best_error: 4.969052839022521
best_error: 4.473676170920452
best_error: 4.473675648335782
best_error: 2.8057252457194735
best_error: 2.8057248548831137
best_error: 2.805724300636771
best_error: 2.6922601365921723
best_error: 2.6922601095243963
best_error: 2.691348033976178
best_error: 2.6913480262520117
best_error: 2.6899489342492404
best_error: 2.68994892705153
best_error: 2.68432496802413
best_error: 2.684324962481553
best_error: 2.6843249622870444
best_error: 2.6792663351888266
best_error: 2.6792663299579584
best_error: 2.679266329368515
best_error: 2.678030342356339
best_error: 2.678030336348681
best_error: 2.6557428158522645
best_error: 2.6557426563641133
best_error: 2.6557425356985305
best_error: 2.639563323981173
best_error: 2.639563280728239
best_error: 2.582410400628612
best_error: 2.582410064573077
best_error: 2.31448860892869
best_error: 2.314488604345039
best_error: 2.3144885984732344
best_error: 2.3069614453899763
best_error: 2.306961376475924
best_error: 2.3044168630957373
best_error: 2.304416854080662
best_error: 2.304416848964354
best_error: 2.303695843785294
best_error: 2.3036958282280597
best_error: 2.2983281541433818
best_error: 2.298328148032625
best_error: 2.2983281403368783
best_error: 2.2353293337926736
best_error: 2.2353292267551397
best_error: 2.2353260632383516
best_error: 2.1859618195797825
best_error: 2.185961673797056
best_error: 2.185955960267482
best_error: 2.1178495116298843
best_error: 2.1178493406285916
best_error: 2.11784613207831
best_error: 2.057447914915146
best_error: 2.0574479091702234
best_error: 2.0574479069856433
best_error: 2.00338779570278
best_error: 2.003387789610501
best_error: 2.0033877887523515
best_error: 1.877078092235245
best_error: 1.8770777997004608
best_error: 1.8660059969334626
best_error: 1.8660055663377344
best_error: 1.8315093848097899
best_error: 1.8315092949066416
best_error: 1.7660717726702697
best_error: 1.7660717626387947
best_error: 1.7619586003607326
best_error: 1.7619585670675009
best_error: 1.7439022942964828
best_error: 1.7439021308841598
best_error: 1.738830397674609
best_error: 1.7388303821972497
best_error: 1.7316914512632398
best_error: 1.7316914051701857
best_error: 1.726405305095348
best_error: 1.7264052836353978
best_error: 1.726400485537488
best_error: 1.7264004640859292
best_error: 1.721264604407071
best_error: 1.721264587422449
best_error: 1.7143757793476195
best_error: 1.714375758613053
best_error: 1.7143757520847875
best_error: 1.7023376193424924
best_error: 1.7023375461612604
best_error: 1.6982613428056894
best_error: 1.698261283299173
best_error: 1.6969547215573464
best_error: 1.696954597449608
best_error: 1.690661771755993
best_error: 1.690661771522833
best_error: 1.6906617537873216
best_error: 1.685302493631096
best_error: 1.6853024635454636
best_error: 1.6674479700535412
best_error: 1.6674479337755868
best_error: 1.6419674000710904
best_error: 1.6419672170498305
best_error: 1.641964521264965
best_error: 1.6419634668354803
best_error: 1.6287678039853797
best_error: 1.6287677524444328
best_error: 1.625683937577452
best_error: 1.625683920658635
best_error: 1.6209476545647967
best_error: 1.620947639130121
best_error: 1.617979610895976
best_error: 1.6179769640219623
best_error: 1.617432772806521
best_error: 1.6174327694260113
best_error: 1.6174327686588625
best_error: 1.6143347121199563
best_error: 1.6143347092567433
best_error: 1.6143345467680807
best_error: 1.5980105091141024
best_error: 1.5980092537490722
best_error: 1.5956436393330755
best_error: 1.5956435266427025
best_error: 1.5956434544630156
best_error: 1.5956416338084969
best_error: 1.5924464148326896
best_error: 1.592446394403817
best_error: 1.590257869622218
best_error: 1.5902578448778175
best_error: 1.589145255932116
best_error: 1.5891452401769837
best_error: 1.587713051989695
best_error: 1.5877130469511314
best_error: 1.5877130417339498
best_error: 1.587514339639205
best_error: 1.5875143389644375
best_error: 1.587514327714663
best_error: 1.587352437016327
best_error: 1.5873524233880003
best_error: 1.5869422877632366
best_error: 1.5869422685814343
best_error: 1.5860517975600916
best_error: 1.586050373942951
best_error: 1.585342969834804
best_error: 1.585341479984311
best_error: 1.5843737118037549
best_error: 1.584373679548707
best_error: 1.584373665016112
best_error: 1.5828487948576835
best_error: 1.5828487578211416
best_error: 1.579548841987726
best_error: 1.579548810064715
best_error: 1.5789786426116772
best_error: 1.5789786401631878
best_error: 1.5788698257287237
best_error: 1.5788698253881153
best_error: 1.5788698253515523
best_error: 1.5788698253423092
best_error: 1.5788698245013149
best_error: 1.5785758201290536
best_error: 1.5785758193571444
best_error: 1.5785758190266719
best_error: 1.5784837277575234
best_error: 1.578483727197212
best_error: 1.5784837268816319
best_error: 1.578416098120579
best_error: 1.578416097686803
best_error: 1.5784160973268562
best_error: 1.5783874158426547
best_error: 1.5783874148598553
best_error: 1.5783608233957074
best_error: 1.578360822107536
best_error: 1.5782774690206978
best_error: 1.5782774666240902
best_error: 1.578229198264846
best_error: 1.5782291928870344
best_error: 1.5781629185992982
best_error: 1.578162916169903
best_error: 1.5781519258976402
best_error: 1.57815192470575
best_error: 1.5781455729685177
best_error: 1.578145571646317
best_error: 1.5781369847622044
best_error: 1.5781369830726206
best_error: 1.5781238601791703
best_error: 1.5781238588671735
best_error: 1.578045860784636
best_error: 1.5780458601131298
best_error: 1.5780458600575804
best_error: 1.577981099392513
best_error: 1.5779810986613456
best_error: 1.5779810986125569
best_error: 1.5778806147039077
best_error: 1.5778806047201397
best_error: 1.5777899046633608
best_error: 1.5777898951302864
best_error: 1.5774280290255327
best_error: 1.577428025159643
best_error: 1.5774279673290355
best_error: 1.5771762052928813
best_error: 1.577176193289236
best_error: 1.5762332886631558
best_error: 1.5762332831126762
best_error: 1.5739752494869617
best_error: 1.5739752407338075
best_error: 1.5739735797993237
best_error: 1.5719742375918981
best_error: 1.5719740009335406
best_error: 1.5702714676909972
best_error: 1.5702714333321375
best_error: 1.570270719960543
best_error: 1.569727256857567
best_error: 1.569727245761985
best_error: 1.5697272047660735
best_error: 1.569503804950097
best_error: 1.5695037905116316
best_error: 1.5695037637642923
best_error: 1.5691990106813634
best_error: 1.5691989825481036
best_error: 1.5685939255994288
best_error: 1.5685938926855842
best_error: 1.5681564243331332
best_error: 1.5681563797066587
best_error: 1.5668633262077134
best_error: 1.5668632896430763
best_error: 1.5647187186505551
best_error: 1.5647187021929556
best_error: 1.5629891508013645
best_error: 1.5629891436648504
best_error: 1.5629891375373384
best_error: 1.5616765642778867
best_error: 1.5616765638267587
best_error: 1.5616765485101007
best_error: 1.5604391282787946
best_error: 1.5604391201385672
best_error: 1.5604391166854894
best_error: 1.5596983190776177
best_error: 1.5596983101766961
best_error: 1.5596983070977324
best_error: 1.5569834304730152
best_error: 1.556983423364542
best_error: 1.5569834172942023
best_error: 1.5569791678321865
best_error: 1.5569791607351895
best_error: 1.5569791546470122
best_error: 1.5564769333556985
best_error: 1.55647690668451
best_error: 1.5502195034285762
best_error: 1.550219473552548
best_error: 1.5502193424298703
best_error: 1.5502193125541652
best_error: 1.5502187039410606
best_error: 1.550218674212144
best_error: 1.5502059509512356
best_error: 1.55020592114767
best_error: 1.550203715568125
best_error: 1.5502036857816932
best_error: 1.5501948010695086
best_error: 1.550194771456352
best_error: 1.5501597567817438
best_error: 1.5501597277104606
best_error: 1.5500285795631192
best_error: 1.5500285526545432
best_error: 1.5499659681392048
best_error: 1.5499659422702232
best_error: 1.549743895967203
best_error: 1.5497438731616144
best_error: 1.5420246662963886
best_error: 1.5420246545707301
best_error: 1.5420212842765375
best_error: 1.540876625605425
best_error: 1.5408766231384032
best_error: 1.5408766220754404
best_error: 1.5408766208499358
best_error: 1.5406838606154625
best_error: 1.5406838562182192
best_error: 1.5406838561336478
best_error: 1.5391354545675677
best_error: 1.5391354502022865
best_error: 1.5388497118102016
best_error: 1.5388496976846262
