ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 92
days_switch 35
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 98.89336397215516
best_error: 98.89336384931805
best_error: 98.89336380300567
best_error: 15.607926117927935
best_error: 15.607926107982792
best_error: 15.59872405091646
best_error: 15.598724048236114
best_error: 15.595198133682914
best_error: 15.595198131855591
best_error: 15.574181001565027
best_error: 15.57418100155672
best_error: 15.574181001374406
best_error: 15.574181001027434
best_error: 15.56443308905596
best_error: 15.564433089046258
best_error: 15.56443308885521
best_error: 15.564433088544252
best_error: 15.52072976126469
best_error: 15.52072976124677
best_error: 15.520729761009846
best_error: 15.520729760987265
best_error: 15.148676939131182
best_error: 15.148676939127698
best_error: 15.148676939115724
best_error: 15.14867693900202
best_error: 15.148676938334727
best_error: 14.696806140582375
best_error: 14.696806140571589
best_error: 14.6968061322541
best_error: 14.696806119571459
best_error: 14.526909984727094
best_error: 14.526909984665298
best_error: 14.526909984659975
best_error: 14.52690998434263
best_error: 14.516911774918682
best_error: 14.516911774905427
best_error: 14.516911773197652
best_error: 13.806830663918118
best_error: 13.806830663899095
best_error: 13.806830663895576
best_error: 13.806830663856935
best_error: 13.806830663822996
best_error: 13.80683066367368
best_error: 13.761518242966403
best_error: 13.761518242955736
best_error: 13.761518240766296
best_error: 13.760768866124033
best_error: 13.76076886611235
best_error: 13.760768866109636
best_error: 13.760768866078156
best_error: 13.760768865990018
best_error: 13.76076886550137
best_error: 13.760622676437285
best_error: 13.760622676425529
best_error: 13.760622676422733
best_error: 13.760622676391392
best_error: 13.76062267630371
best_error: 13.760622675814862
best_error: 13.76008125000642
best_error: 13.760081249994816
best_error: 13.760081249383596
best_error: 13.760081249369868
best_error: 13.751924210144058
best_error: 13.751924210127854
best_error: 13.75192420911279
best_error: 13.704691798822466
best_error: 13.704691798253007
best_error: 13.704691797274522
best_error: 13.687770957488887
best_error: 13.687770956258204
best_error: 13.687770954369611
best_error: 13.6500318827174
best_error: 13.650031879951127
best_error: 13.650031876616948
best_error: 13.627449504264018
best_error: 13.627449501832086
best_error: 13.627449499142992
best_error: 13.509457111374344
best_error: 13.5094571100235
best_error: 13.509457104648792
best_error: 13.390811748398107
best_error: 13.390811746869632
best_error: 13.390811737635861
best_error: 13.299239377505101
best_error: 13.299239377202092
best_error: 13.299239368332385
best_error: 13.299239363289264
best_error: 13.2883402824949
best_error: 13.288340282334662
best_error: 13.288340282231397
best_error: 13.288340280918963
best_error: 13.288340274450398
best_error: 13.288103378184635
best_error: 13.288103377902043
best_error: 13.288103367617143
best_error: 13.273110073570042
best_error: 13.273110073531091
best_error: 13.273110064390464
best_error: 13.22193044895624
best_error: 13.221930448881533
best_error: 13.221930441373456
best_error: 13.195272650429025
best_error: 13.195272650429015
best_error: 13.195272650425238
best_error: 13.195272649323972
best_error: 13.193113279588307
best_error: 13.193113278789548
best_error: 13.192122661476702
best_error: 13.192122660375015
best_error: 13.188249827495198
best_error: 13.188249825266784
best_error: 13.13793303181778
best_error: 13.137933027902529
best_error: 13.137932984097281
best_error: 13.137932983460756
best_error: 13.093968225556518
best_error: 13.093968172369276
best_error: 13.093968167022652
best_error: 13.04823514405477
best_error: 13.048235124953548
best_error: 13.04823511979782
best_error: 13.04064012071782
best_error: 13.04064011970433
best_error: 13.037357206256274
best_error: 13.037357192653186
best_error: 13.025115657003496
best_error: 13.025115641346972
best_error: 12.979708447253717
best_error: 12.979708441461007
best_error: 12.979708441162908
best_error: 12.962841713836871
best_error: 12.962841707714777
best_error: 12.9628417022724
best_error: 12.881545424795169
best_error: 12.881545367139704
best_error: 12.79781079464217
best_error: 12.79781079458948
best_error: 12.797810785014695
best_error: 12.79759059245523
best_error: 12.797590591738766
best_error: 12.79759058958333
best_error: 12.79759058524543
best_error: 12.707916204296215
best_error: 12.707916203509157
best_error: 12.707916197524362
best_error: 12.707916197185874
best_error: 12.677934310640573
best_error: 12.677934308396022
best_error: 12.677934303199933
best_error: 12.661937364414754
best_error: 12.661937355603188
best_error: 12.619837983994046
best_error: 12.619837962564265
best_error: 12.426306591498708
best_error: 12.426306591204966
best_error: 12.426306563282118
best_error: 12.420478381743534
best_error: 12.420478377351847
best_error: 12.420478315658643
best_error: 12.403641949830027
best_error: 12.403641944910955
best_error: 12.397936268974444
best_error: 12.397936268497872
best_error: 12.397936267717872
best_error: 12.38820371674679
best_error: 12.388203716744592
best_error: 12.388203703200592
best_error: 12.386720033758019
best_error: 12.38672003182093
best_error: 12.386720000819137
best_error: 12.386719999073598
best_error: 12.385778928448493
best_error: 12.385778917412503
best_error: 12.385029562177545
best_error: 12.385029557689556
best_error: 12.383543074163438
best_error: 12.383543071667939
best_error: 12.382180859808166
best_error: 12.382180858040357
best_error: 12.381999395280376
best_error: 12.381999393920795
best_error: 12.381986608980727
best_error: 12.381986608640073
best_error: 12.381986608266931
best_error: 12.381657559728357
best_error: 12.381657559726012
best_error: 12.381657559609554
best_error: 12.381657559579075
best_error: 12.381606571427575
best_error: 12.381606571040457
best_error: 12.38160657076381
best_error: 12.381603212876666
best_error: 12.38160321284745
best_error: 12.381603203817498
best_error: 12.381603200886348
best_error: 12.380881595554845
best_error: 12.380881595485086
best_error: 12.380881585618333
best_error: 12.380881583075299
best_error: 12.379532360919184
best_error: 12.379532351354136
best_error: 12.378850747073335
best_error: 12.37885074353983
best_error: 12.378850697297917
best_error: 12.378850694534991
