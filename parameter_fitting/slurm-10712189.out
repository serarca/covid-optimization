ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.386090631465915
best_error: 11.386090610472694
best_error: 11.386090597393428
best_error: 10.837112398701372
best_error: 10.837112360599388
best_error: 10.837112346342769
best_error: 9.57039146984147
best_error: 9.570391389189673
best_error: 9.454753684717826
best_error: 9.454753594752104
best_error: 8.902591127196107
best_error: 8.902591016615096
best_error: 8.517647270061811
best_error: 8.517647230395747
best_error: 8.517647199561537
best_error: 6.704596796771121
best_error: 6.70459677366651
best_error: 6.70459672813497
best_error: 6.522939457513883
best_error: 6.5229394337958135
best_error: 6.522939389918079
best_error: 5.781632953368948
best_error: 5.781632952970421
best_error: 3.9476105588524546
best_error: 3.947610558588788
best_error: 3.923795767575487
best_error: 3.9237952785553256
best_error: 3.7585651302482455
best_error: 3.7585647456675924
best_error: 3.711582978946059
best_error: 3.7115826344298757
best_error: 3.6940735787447045
best_error: 3.6940732760907324
best_error: 3.6836102078460993
best_error: 3.683610207537879
best_error: 3.671760986718798
best_error: 3.6717606830024963
best_error: 3.651738303679386
best_error: 3.651737997357741
best_error: 3.648264407260765
best_error: 3.648264100560715
best_error: 3.6462047726585483
best_error: 3.646204772352193
best_error: 3.646071562152352
best_error: 3.6460712552097325
best_error: 3.6448456580231934
best_error: 3.6448453473549955
best_error: 3.6348735645274735
best_error: 3.6348735642246033
best_error: 3.615422991642894
best_error: 3.6154229913427485
best_error: 3.438588662758862
best_error: 3.4385886624476836
best_error: 3.318790647012162
best_error: 3.3187901938060875
best_error: 3.315958456034423
best_error: 3.315958002141067
best_error: 3.314362699790612
best_error: 3.314362242474851
best_error: 3.313545431503705
best_error: 3.3135449739861644
best_error: 3.313164998289924
best_error: 3.313164540678275
best_error: 3.313045424779941
best_error: 3.313044967142417
best_error: 3.3129693576877655
best_error: 3.312968900033809
best_error: 3.3129218997833476
best_error: 3.3129214421191047
best_error: 3.312894407647269
best_error: 3.312893949977095
best_error: 3.31287965602995
best_error: 3.3128791983565726
best_error: 3.312870772011788
best_error: 3.3128703143367533
best_error: 3.3128659106329157
best_error: 3.3128654529569834
best_error: 3.3128632812828354
best_error: 3.3128628236064106
best_error: 3.312862793302556
best_error: 3.312862744157191
best_error: 3.3128627281810457
best_error: 3.3128626781196795
best_error: 3.312862599984168
best_error: 3.3128169379878143
best_error: 3.312816937687344
best_error: 3.3128169376763417
best_error: 3.312816850937703
best_error: 3.312808657107288
best_error: 3.3128081994345635
best_error: 3.254979008287935
best_error: 3.25497863377712
best_error: 3.2546491605517316
best_error: 3.2546487767032106
best_error: 3.2545215280091657
best_error: 3.254521150636749
best_error: 3.25429599280786
best_error: 3.2542956148013373
best_error: 3.25328350090094
best_error: 3.253283119225628
best_error: 3.2523559775975954
best_error: 3.2523555952735492
best_error: 3.2523415816008083
best_error: 3.252341198884584
best_error: 3.2523163840572504
best_error: 3.2523159991407757
best_error: 3.252307475918136
best_error: 3.25230709267187
best_error: 3.252295094501349
best_error: 3.252294711238797
best_error: 3.252260924813057
best_error: 3.252260539881971
best_error: 3.2520653609440298
best_error: 3.2520649726515654
best_error: 3.2513818034974737
best_error: 3.2513814142125
best_error: 3.2488071125428752
best_error: 3.2488071122195223
best_error: 3.248807026493717
best_error: 3.247821160032694
best_error: 3.2478207613556664
best_error: 3.2475896957371915
best_error: 3.2475892970366305
best_error: 3.2475042796149673
best_error: 3.247503880905737
best_error: 3.2474656533155484
best_error: 3.247465652989908
best_error: 3.2474655673074877
best_error: 3.2440828945483284
best_error: 3.2440825206146484
best_error: 3.243395790807507
best_error: 3.2433954192885652
best_error: 3.2404863286669836
best_error: 3.240485962350202
best_error: 3.239895924683384
best_error: 3.2398955583870745
best_error: 3.2396623492756067
best_error: 3.239661982987493
best_error: 3.239647379305442
best_error: 3.239647378931673
best_error: 3.239647293811291
best_error: 3.2396225458648584
best_error: 3.239622179578147
best_error: 3.239599147155156
best_error: 3.239598780868784
best_error: 3.2395966268525385
best_error: 3.239596260566193
best_error: 3.239595633283488
best_error: 3.239595266997159
best_error: 3.2395951913677425
best_error: 3.2395951238412457
best_error: 3.2395951234677725
best_error: 3.2395950856173297
best_error: 3.2395950180908457
best_error: 3.239595017717363
best_error: 3.239595016630859
best_error: 3.239595014602646
best_error: 3.2395950117937655
best_error: 3.2395950097655426
best_error: 3.2395950072950948
best_error: 3.2395950065584493
