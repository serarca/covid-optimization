ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 0
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.6631067338448
best_error: 97.66310665328062
best_error: 97.66310657098917
best_error: 18.074465827630384
best_error: 18.074465827624707
best_error: 18.074465820636618
best_error: 18.046910957253143
best_error: 18.046910949794313
best_error: 17.92193619606917
best_error: 17.921936185844984
best_error: 15.640284501695664
best_error: 15.640284265057288
best_error: 13.515895887136374
best_error: 13.515895547347128
best_error: 11.73877802007632
best_error: 11.738778016769047
best_error: 11.73877767739844
best_error: 11.729163478516794
best_error: 11.729163473491127
best_error: 11.729163469783321
best_error: 11.552361684036555
best_error: 11.552361676186608
best_error: 10.922428236110997
best_error: 10.92242822747814
best_error: 10.69251671989312
best_error: 10.692516711500776
best_error: 10.493951737633473
best_error: 10.493951712876338
best_error: 10.231419488839672
best_error: 10.23141948443371
best_error: 10.231419482365137
best_error: 9.857200054010205
best_error: 9.857200050786608
best_error: 9.857200049261305
best_error: 9.67221237697985
best_error: 9.672212329216833
best_error: 9.650507973842188
best_error: 9.650507965169087
best_error: 9.409170176453943
best_error: 9.409170136442539
best_error: 9.316363274896576
best_error: 9.316363144640347
best_error: 9.23476967591194
best_error: 9.234769619897108
best_error: 9.164216055236244
best_error: 9.164216054546735
best_error: 9.16421603349346
best_error: 9.156112092724802
best_error: 9.156112061858408
best_error: 9.146867480539267
best_error: 9.14686747888308
best_error: 9.146867468043428
best_error: 9.140624989545636
best_error: 9.140624959684335
best_error: 9.13918713925828
best_error: 9.139187137678062
best_error: 9.139187126116022
best_error: 9.139160022791746
best_error: 9.139159992957602
best_error: 9.139146511888272
best_error: 9.139146510308525
best_error: 9.139146498742557
best_error: 9.139137568512169
best_error: 9.139137538678469
best_error: 9.139136359023123
best_error: 9.139136357443494
best_error: 9.139136345876542
best_error: 9.139131958659926
best_error: 9.139131928826323
best_error: 9.11847083120394
best_error: 9.118470803085684
best_error: 9.099524948250023
best_error: 9.099524922202596
best_error: 9.091625050466913
best_error: 9.091625024779486
best_error: 9.069120230516571
best_error: 9.069120205040873
best_error: 9.015493063783351
best_error: 9.015493036419246
best_error: 8.984012378418411
best_error: 8.984012347365798
best_error: 8.96204996476336
best_error: 8.962049932560088
best_error: 8.939383439704962
best_error: 8.939383407771569
best_error: 8.833672792705642
best_error: 8.833672762762578
best_error: 8.751804651451367
best_error: 8.75180461786682
best_error: 8.525438276923644
best_error: 8.525438243818467
best_error: 8.305308618633088
best_error: 8.305308251271217
best_error: 8.181700432625576
best_error: 8.18170041607567
best_error: 8.18170041430955
best_error: 8.026685269298689
best_error: 8.026685247328423
best_error: 8.02668522621331
best_error: 8.026685216642596
best_error: 7.901816940743277
best_error: 7.901816921480382
best_error: 7.901816910312664
best_error: 7.697625489306468
best_error: 7.697625466218311
best_error: 7.527429334893041
best_error: 7.527429311066648
best_error: 7.527429310576283
best_error: 7.324586922143501
best_error: 7.324586905749871
best_error: 7.3245869039182665
best_error: 7.32458688797113
best_error: 7.113507692274762
best_error: 7.113507683379618
best_error: 7.1135076629594725
best_error: 7.0975089314768445
best_error: 7.097508736434201
best_error: 7.085247181303073
best_error: 7.085246956604996
best_error: 7.0174068735816695
best_error: 7.017406517967103
best_error: 6.958946890976176
best_error: 6.9589468826909116
best_error: 6.958946878548656
best_error: 6.956316344219429
best_error: 6.956316336136084
best_error: 6.954725204518102
best_error: 6.954725196641315
best_error: 6.9542293775230455
best_error: 6.954229369910383
best_error: 6.954229369632971
best_error: 6.95402901916469
best_error: 6.954029011555201
best_error: 6.954029011277733
best_error: 6.953965111567296
best_error: 6.953964867713266
best_error: 6.950345745155244
best_error: 6.950345735313159
best_error: 6.949777273966586
best_error: 6.949777092533747
best_error: 6.949471945608268
best_error: 6.949471936393883
best_error: 6.949420970121764
best_error: 6.949420960908828
best_error: 6.949389074045586
best_error: 6.949389064833554
best_error: 6.949368947962372
best_error: 6.949368938750909
best_error: 6.949356093840018
best_error: 6.949356084628933
best_error: 6.949347740845509
best_error: 6.949347731634652
best_error: 6.949342178116776
best_error: 6.949342168906084
best_error: 6.949338320350115
best_error: 6.949338311139519
best_error: 6.949335467795756
best_error: 6.949335458585248
best_error: 6.949333056251405
best_error: 6.949333047040978
best_error: 6.949331577885932
best_error: 6.949331568675569
best_error: 6.949330678660451
best_error: 6.949330669450112
best_error: 6.949330137205656
best_error: 6.9493301279953545
best_error: 6.949330120722795
best_error: 6.949329939864093
best_error: 6.945231524326136
best_error: 6.945231515419003
best_error: 6.945104643509203
best_error: 6.945104634844975
best_error: 6.945097958905109
best_error: 6.945097949226645
best_error: 6.945097781981687
best_error: 6.945089844754732
best_error: 6.94508983609074
best_error: 6.945079374294014
best_error: 6.945079365630187
best_error: 6.945076101572881
best_error: 6.945076092909102
best_error: 6.945075841056466
best_error: 6.9450758323926856
best_error: 6.945075732522383
best_error: 6.945075731499111
best_error: 6.94507572660208
best_error: 6.9450757258112965
