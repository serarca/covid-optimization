ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.162400360102279
best_error: 11.16240035334938
best_error: 11.155065044724719
best_error: 11.155065037448603
best_error: 8.511765041473556
best_error: 8.511764704825548
best_error: 7.7362250534691155
best_error: 7.736224619902032
best_error: 6.707855047584104
best_error: 6.707854490570422
best_error: 5.497921045280749
best_error: 5.497920808691025
best_error: 5.398543873912316
best_error: 5.398543873864319
best_error: 5.398543856546064
best_error: 5.398278409335158
best_error: 5.398278409287333
best_error: 5.398278392132663
best_error: 5.388604161019358
best_error: 5.388604052427491
best_error: 5.37190915968115
best_error: 5.371909051478191
best_error: 5.302532507649742
best_error: 5.302532403318134
best_error: 4.999854117868766
best_error: 4.999854117760554
best_error: 4.99985410220936
best_error: 4.395885520568975
best_error: 4.395885481752762
best_error: 4.3370920448771155
best_error: 4.337092028732193
best_error: 4.334990044698313
best_error: 4.334990036720424
best_error: 4.317725674847665
best_error: 4.317725668596653
best_error: 4.317725668526239
best_error: 4.308740712456596
best_error: 4.3087407063523475
best_error: 4.308740706065061
best_error: 4.306254894201104
best_error: 4.306254816134389
best_error: 4.304052401848535
best_error: 4.304052397428248
best_error: 4.304052395391336
best_error: 4.27142542170286
best_error: 4.271425421542618
best_error: 4.271425414774157
best_error: 4.143149045406967
best_error: 4.143149035563278
best_error: 4.110928126684773
best_error: 4.110928036444653
best_error: 4.087542451589372
best_error: 4.087542389898627
best_error: 4.058622110795068
best_error: 4.058622006458193
best_error: 4.0390546264049165
best_error: 4.039054521830786
best_error: 3.9803808490321693
best_error: 3.9803807201257784
best_error: 3.8993982121306594
best_error: 3.899398171257289
best_error: 3.8332168405943228
best_error: 3.8332168351819504
best_error: 3.8322307902309483
best_error: 3.832230638559577
best_error: 3.8296947162446537
best_error: 3.829694689102605
best_error: 3.828248161673632
best_error: 3.828248139956964
best_error: 3.8237224651333426
best_error: 3.8237223358180366
best_error: 3.816663426043802
best_error: 3.816663416598277
best_error: 3.7938342027904
best_error: 3.793834187038013
best_error: 3.7778799835122734
best_error: 3.7778799151014555
best_error: 3.764599528312128
best_error: 3.7645995106005814
best_error: 3.751479947071239
best_error: 3.751479943698077
best_error: 3.7434502004273362
best_error: 3.7434501896055608
best_error: 3.7431724157738993
best_error: 3.743172414597642
best_error: 3.7431724133821547
best_error: 3.7431375571489576
best_error: 3.743137554798964
best_error: 3.7431369883832266
best_error: 3.7431369859084227
best_error: 3.7425970068421206
best_error: 3.7425970051278847
best_error: 3.7422734007460776
best_error: 3.7422733955122416
best_error: 3.7419979977006244
best_error: 3.74199799391801
best_error: 3.741995154044827
best_error: 3.7419951502563364
best_error: 3.7419924057032716
best_error: 3.741992402013608
best_error: 3.7419898445243605
best_error: 3.741989840829354
best_error: 3.741987424722423
best_error: 3.7419874210223716
best_error: 3.741985495356168
best_error: 3.741985491652103
best_error: 3.7419837176440027
best_error: 3.74198371393624
best_error: 3.7419789812492454
best_error: 3.7419789775316437
best_error: 3.741975694811842
best_error: 3.7419756910874207
best_error: 3.741962524965397
best_error: 3.7419625212137584
best_error: 3.74196233010127
best_error: 3.741962326349224
best_error: 3.7419621426103946
best_error: 3.7419621388579585
best_error: 3.741962036208039
best_error: 3.7419620324553877
best_error: 3.741961934458901
best_error: 3.7419619307060463
best_error: 3.741961865913866
best_error: 3.7419618621608635
best_error: 3.741961803859757
best_error: 3.741961800106627
best_error: 3.741961564163426
best_error: 3.741961560409788
best_error: 3.7419614183919747
best_error: 3.741961414638032
best_error: 3.741961365085224
best_error: 3.7419613613311737
best_error: 3.741961057681936
best_error: 3.7419610539272328
best_error: 3.7419610535054453
best_error: 3.7419610497507336
best_error: 3.7419610494727467
best_error: 3.7419610457180275
best_error: 3.741961043622459
best_error: 3.7419610427928305
best_error: 3.7419610420409497
best_error: 3.7419610391849396
best_error: 3.7419610379134105
best_error: 3.741961035825368
best_error: 3.7419610354470514
best_error: 3.7419610349764127
