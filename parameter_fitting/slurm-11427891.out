ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 18.48825554148708
best_error: 18.488255160968876
best_error: 4.184243324681785
best_error: 4.184243322455873
best_error: 4.182828727302745
best_error: 4.182828727284898
best_error: 4.182828727123536
best_error: 4.177094672793256
best_error: 4.177094672774675
best_error: 4.177094672612326
best_error: 4.152892650947475
best_error: 4.15289265092547
best_error: 4.152892650759145
best_error: 4.028070926722907
best_error: 4.0280709266712655
best_error: 4.028070926492061
best_error: 3.8333310328662833
best_error: 3.8333310326898817
best_error: 3.833331032548547
best_error: 3.4868307581228413
best_error: 3.4868307568614862
best_error: 3.4227261229642085
best_error: 3.4227261212383855
best_error: 3.3627839422311023
best_error: 3.3627839399844
best_error: 3.238924063409812
best_error: 3.2389240598624345
best_error: 3.186147387312789
best_error: 3.186147383610515
best_error: 3.182614818102221
best_error: 3.1826148163282766
best_error: 3.1826148141068726
best_error: 3.177560820609391
best_error: 3.1775608158815367
best_error: 3.1673355882689225
best_error: 3.167335558011453
best_error: 2.5155160716248606
best_error: 2.5155160554332525
best_error: 2.515515949611486
best_error: 2.3143815763771403
best_error: 2.3143815703589388
best_error: 2.3143814216103045
best_error: 2.252923661152315
best_error: 2.2529235865083255
best_error: 2.252599747114173
best_error: 2.2525996647268034
best_error: 2.0461031850220097
best_error: 2.046102995331077
best_error: 1.8124954593184222
best_error: 1.8124952761369593
best_error: 1.7709465014030759
best_error: 1.770946434157369
best_error: 1.7278820721843144
best_error: 1.7278819839004873
best_error: 1.714230292070401
best_error: 1.7142301947043848
best_error: 1.6967863562413257
best_error: 1.6967863414181936
best_error: 1.695503788439147
best_error: 1.6955037752427953
best_error: 1.6904684235454512
best_error: 1.6904684135702381
best_error: 1.6718402806745294
best_error: 1.6718402806268846
best_error: 1.6718402774576728
best_error: 1.4415652672367374
best_error: 1.441565230512336
best_error: 1.4342543644851091
best_error: 1.4342543265537409
best_error: 1.4229077288784346
best_error: 1.4229077258594407
best_error: 1.3624929471283664
best_error: 1.3624929117611482
best_error: 1.3575395525302776
best_error: 1.3575395440566291
best_error: 1.3554373981856112
best_error: 1.3554373860065427
best_error: 1.3429621212482816
best_error: 1.3429621065448658
best_error: 1.3337778040886032
best_error: 1.3337777805975248
best_error: 1.3174482238891903
best_error: 1.3174481693374647
best_error: 1.2972708104254806
best_error: 1.2972707091530689
best_error: 1.2783653677833609
best_error: 1.2783652881783214
best_error: 1.2475825483072271
best_error: 1.2475825009436596
best_error: 1.2375223634506674
best_error: 1.2375223618626907
best_error: 1.2375223540582931
best_error: 1.2351629555298616
best_error: 1.235162915311925
best_error: 1.2324690228576056
best_error: 1.2324689943682257
best_error: 1.2275792514452408
best_error: 1.2275792406062391
best_error: 1.2255668584154906
best_error: 1.2255668508073978
best_error: 1.2251046663036411
best_error: 1.2251046445095144
best_error: 1.2240246939387722
best_error: 1.2240246560678347
best_error: 1.2215202374049499
best_error: 1.2215202020429226
best_error: 1.2200007589384991
best_error: 1.2200007245119233
best_error: 1.2192193587164717
best_error: 1.219219352496502
best_error: 1.2189743762253826
best_error: 1.2189743744219617
best_error: 1.2186382983485131
best_error: 1.2186382898198258
best_error: 1.2179099460584144
best_error: 1.2179099294873266
best_error: 1.2148116312403436
best_error: 1.2148115813581954
best_error: 1.2065116878658904
best_error: 1.2065116331246546
best_error: 1.203773110890216
best_error: 1.2037731084670116
best_error: 1.203773107805536
best_error: 1.2037696978010617
best_error: 1.2037696940530105
best_error: 1.2037152179391744
best_error: 1.203715216058085
best_error: 1.2037152138406062
best_error: 1.2037117396236912
best_error: 1.2037117363458458
best_error: 1.2037116014521354
best_error: 1.2037115974379138
best_error: 1.203627812453827
best_error: 1.203627804023224
best_error: 1.2036075738624499
best_error: 1.2036075707778586
best_error: 1.2036075702854319
best_error: 1.2036075670467683
best_error: 1.2036075656530791
best_error: 1.2036054619178713
best_error: 1.203605457832532
best_error: 1.2034764245819858
best_error: 1.2034764154132163
best_error: 1.2024858436126593
best_error: 1.2024858249546484
best_error: 1.2011945155892019
best_error: 1.2011945052273743
best_error: 1.2009348210927975
best_error: 1.2009348210325717
best_error: 1.2009348208113049
best_error: 1.2009348202455152
best_error: 1.2007247670521435
best_error: 1.2007247640665784
best_error: 1.2005115292654727
best_error: 1.2005115174197019
best_error: 1.200205517586498
best_error: 1.2002055069466193
best_error: 1.1993299750546156
best_error: 1.199329975028463
best_error: 1.1993299746708437
best_error: 1.199321867991619
best_error: 1.1993218679207112
best_error: 1.1993218676007043
best_error: 1.1993021283451641
best_error: 1.1993021276067908
best_error: 1.1991137059449266
best_error: 1.1991137054611136
best_error: 1.1991137026907368
best_error: 1.198710578113354
best_error: 1.1987105640674263
best_error: 1.1978358286507824
best_error: 1.1978358018743056
best_error: 1.1963569978851012
best_error: 1.1963569680066188
best_error: 1.1952125937585476
best_error: 1.1952125740488488
best_error: 1.1948319615857408
best_error: 1.194831956007328
best_error: 1.1947908924533235
best_error: 1.1947908915732928
best_error: 1.194785903941904
best_error: 1.1947859034009813
best_error: 1.1947859033717945
best_error: 1.1947815569436542
best_error: 1.1947815568116773
best_error: 1.1947815564562885
best_error: 1.1947815563806778
best_error: 1.194772814354937
best_error: 1.1947728143208025
best_error: 1.1947728138670966
best_error: 1.1947728137516769
best_error: 1.1947144670862222
best_error: 1.1947144670585739
best_error: 1.1947144666201075
best_error: 1.1947144664772966
best_error: 1.194432074863191
best_error: 1.1944320745315917
best_error: 1.1944320744156165
best_error: 1.1944320742253514
best_error: 1.1938850020135936
best_error: 1.1938850018735878
best_error: 1.1938850017123834
best_error: 1.1938850011761923
best_error: 1.1927274901331493
best_error: 1.1927274900852973
best_error: 1.1927274899306315
best_error: 1.1927274891952733
best_error: 1.1910880842547982
best_error: 1.191088074796846
best_error: 1.18951396760989
best_error: 1.1895139600206852
best_error: 1.1888852172408262
best_error: 1.188885214663641
best_error: 1.1887615872643469
best_error: 1.1887615825144338
best_error: 1.1887326850829745
best_error: 1.1887326834778105
best_error: 1.1887100958611103
best_error: 1.1887100955242773
best_error: 1.1887044983036685
best_error: 1.1887044982249966
best_error: 1.1887044981999095
best_error: 1.1887044980644637
best_error: 1.18870449801934
best_error: 1.188612572372354
best_error: 1.1886125701354264
best_error: 1.1874830732094077
best_error: 1.187483053255002
best_error: 1.1839596934027103
best_error: 1.1839596548208295
best_error: 1.182871321827103
best_error: 1.1828712977560163
best_error: 1.1819652374721203
best_error: 1.1819651873670047
best_error: 1.180028952834938
best_error: 1.1800289459435884
best_error: 1.1799587419250945
best_error: 1.1799587400211582
best_error: 1.1799153091711372
best_error: 1.1799153076510835
best_error: 1.1798718760410247
best_error: 1.1798718758226685
best_error: 1.1798447594984383
best_error: 1.1798447587476013
best_error: 1.1798349527330323
best_error: 1.179834951265477
best_error: 1.1798265767188767
best_error: 1.1798265740421299
best_error: 1.179795461019927
best_error: 1.1797954542617175
best_error: 1.179772898467361
best_error: 1.1797728936908611
best_error: 1.1797430780075069
best_error: 1.1797430763348746
best_error: 1.1797357231387129
best_error: 1.1797357213794706
best_error: 1.179686386637742
best_error: 1.1796863809570572
best_error: 1.1796147946659425
best_error: 1.1796147915000958
best_error: 1.179455404662907
best_error: 1.1794554040165801
best_error: 1.178758955286432
best_error: 1.1787589423245404
