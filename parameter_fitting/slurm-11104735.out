ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 90
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.70023521229439
best_error: 97.70023511149597
best_error: 97.70023506523567
best_error: 97.70023503247847
best_error: 17.163108502770825
best_error: 17.163108206582514
best_error: 17.16310614377854
best_error: 13.918412005085386
best_error: 13.918412004674968
best_error: 13.918411971632802
best_error: 13.84954528930306
best_error: 13.849545288859431
best_error: 13.849545252981438
best_error: 13.531691359062492
best_error: 13.531691358526494
best_error: 13.53169131235497
best_error: 9.55629101705552
best_error: 9.556290804655552
best_error: 9.362315115268359
best_error: 9.362315112988362
best_error: 9.362315110657509
best_error: 9.36231510139545
best_error: 9.35668369230607
best_error: 9.35668367280533
best_error: 9.311179068812658
best_error: 9.311179060051822
best_error: 9.311179058540466
best_error: 9.130669860030054
best_error: 9.130669859353807
best_error: 9.130669852735085
best_error: 9.130669845810077
best_error: 8.815176558588096
best_error: 8.81517655595129
best_error: 8.815176545171507
best_error: 8.815176539325762
best_error: 8.667200993339371
best_error: 8.66720098735505
best_error: 8.667200977681436
best_error: 8.667200970514132
best_error: 8.62320968422057
best_error: 8.623209676827505
best_error: 8.623209670562382
best_error: 8.623209669627483
best_error: 8.623209659124873
best_error: 8.620948299074403
best_error: 8.620948290962819
best_error: 8.62094828495676
best_error: 8.620948284521754
best_error: 8.620948273368043
best_error: 8.590047323605088
best_error: 8.590047305340432
best_error: 8.59004730292532
best_error: 8.590047298025574
best_error: 8.259147588228974
best_error: 8.259147575375653
best_error: 8.259147571809363
best_error: 8.259147569823647
best_error: 8.040464968332788
best_error: 8.040464931094542
best_error: 7.653680209742916
best_error: 7.653680183846375
best_error: 7.58653974437137
best_error: 7.586539419111522
best_error: 7.264044019111684
best_error: 7.264043783956397
best_error: 7.132620477652608
best_error: 7.132620458646278
best_error: 7.006018748937848
best_error: 7.006018732196349
best_error: 6.987122480424673
best_error: 6.98712231692662
best_error: 6.8448189927445515
best_error: 6.844818846470508
best_error: 6.79623669879759
best_error: 6.7962366912391605
best_error: 6.796236683220575
best_error: 6.7912198004795306
best_error: 6.791219789445853
best_error: 6.781699708386411
best_error: 6.781699700895856
best_error: 6.781699696812949
best_error: 6.759485224334632
best_error: 6.75948521696877
best_error: 6.759485212352304
best_error: 6.758240636949496
best_error: 6.758240321615315
best_error: 6.755882412228161
best_error: 6.7558824048822474
best_error: 6.755882399412489
best_error: 6.753770979908466
best_error: 6.753770972552541
best_error: 6.7537709670259884
best_error: 6.7536787531224505
best_error: 6.753678745778434
best_error: 6.753678739998391
best_error: 6.753666374044124
best_error: 6.753666065738742
best_error: 6.72663769179373
best_error: 6.726637330354851
best_error: 6.720127144678441
best_error: 6.720126807705459
best_error: 6.707851139310351
best_error: 6.707851132755991
best_error: 6.705982311996213
best_error: 6.7059823053582255
best_error: 6.705357378400961
best_error: 6.705357371839047
best_error: 6.704859097513359
best_error: 6.70485909219157
best_error: 6.704859087098363
best_error: 6.7046236430237025
best_error: 6.704623637665199
best_error: 6.704623632602968
best_error: 6.704487301408061
best_error: 6.704487295719613
best_error: 6.704487290984341
best_error: 6.704313383997918
best_error: 6.704313141340917
best_error: 6.704279431904368
best_error: 6.704279425037321
best_error: 6.704248724982269
best_error: 6.704248718116042
best_error: 6.704230238549007
best_error: 6.704230231683271
best_error: 6.704219154777888
best_error: 6.704219147912455
best_error: 6.704212561020152
best_error: 6.704212554154901
best_error: 6.704208683707087
best_error: 6.704208676841928
best_error: 6.704208351721752
best_error: 6.704208344856597
best_error: 6.7042080614859625
best_error: 6.7042080549782135
best_error: 6.704207853934642
best_error: 6.704207848252302
best_error: 6.7042076361309055
best_error: 6.704207630448562
best_error: 6.704207541457973
best_error: 6.704207534592802
best_error: 6.70420733591656
best_error: 6.7042073290513935
best_error: 6.704207211824997
best_error: 6.704207204959835
best_error: 6.704207154337561
best_error: 6.704207147472391
best_error: 6.70420711990684
best_error: 6.704207113041666
best_error: 6.704207096562869
best_error: 6.704207096423973
best_error: 6.704207085344896
best_error: 6.7042070834675
