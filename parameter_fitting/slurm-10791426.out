ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.346728981751081
best_error: 10.346728977600957
best_error: 8.812301937428973
best_error: 8.812301653251641
best_error: 4.878823768286984
best_error: 4.878823259582978
best_error: 3.8318505883328564
best_error: 3.83185054309551
best_error: 3.7931734879773202
best_error: 3.7931734878006447
best_error: 3.7931734716021537
best_error: 3.788631577490496
best_error: 3.788631577315937
best_error: 3.788631560361946
best_error: 3.788595667723989
best_error: 3.7885956425964045
best_error: 3.783884159588964
best_error: 3.7838841351923813
best_error: 3.7838841348236594
best_error: 3.766107610887947
best_error: 3.76610761070594
best_error: 3.7661075939962885
best_error: 3.69922500027223
best_error: 3.699225000062119
best_error: 3.699224986042838
best_error: 3.4561174919929876
best_error: 3.4561174883078474
best_error: 3.4561174127742342
best_error: 3.2982307423571875
best_error: 3.2982307421193306
best_error: 3.2982307400048647
best_error: 3.2982307358460448
best_error: 3.2667073716102153
best_error: 3.266707234028486
best_error: 3.254114774928702
best_error: 3.254114627158708
best_error: 3.24607139779799
best_error: 3.2460713974997075
best_error: 3.24607139148682
best_error: 3.2292904593899
best_error: 3.229290401223447
best_error: 3.0487461151450943
best_error: 3.048745987434356
best_error: 2.967263974025375
best_error: 2.96726386361933
best_error: 2.8955964541052652
best_error: 2.8955964372684777
best_error: 2.895596363732512
best_error: 2.783997816212261
best_error: 2.7839977085179504
best_error: 2.393971804113748
best_error: 2.3939717822760245
best_error: 2.344223820973599
best_error: 2.3442237967377695
best_error: 2.3356155907751184
best_error: 2.335615566551716
best_error: 2.325346245687143
best_error: 2.325346223207317
best_error: 2.300274262932047
best_error: 2.300274251281288
best_error: 2.300274143780288
best_error: 2.2897967872050335
best_error: 2.2897967761874454
best_error: 2.285936813712027
best_error: 2.2859368060213248
best_error: 2.284148553162665
best_error: 2.28414842001303
best_error: 2.2835439667723834
best_error: 2.2835439651804386
best_error: 2.2835439646648092
best_error: 2.283325160277184
best_error: 2.2833251587147614
best_error: 2.283325158168875
best_error: 2.2832071955048336
best_error: 2.2832071939462217
best_error: 2.2832071933965574
best_error: 2.28314583157311
best_error: 2.2831458300164957
best_error: 2.283145829464868
best_error: 2.2831275904242325
best_error: 2.2831275512334477
best_error: 2.283120105318101
best_error: 2.2831200736275354
best_error: 2.2831050738898435
best_error: 2.2831050354496716
best_error: 2.283101040147882
best_error: 2.283101001451657
best_error: 2.2830437183751036
best_error: 2.283043716407214
best_error: 2.283043716244182
best_error: 2.2822038171004335
best_error: 2.2822038152919064
best_error: 2.2822038147609716
best_error: 2.2789096575263756
best_error: 2.27890951812611
best_error: 2.278670935588238
best_error: 2.278670935428477
best_error: 2.2786709323716425
best_error: 2.275469446979746
best_error: 2.274865978362801
best_error: 2.2748659770561876
best_error: 2.2747180715379214
best_error: 2.2747180701090732
best_error: 2.27464791882894
best_error: 2.2746479172791525
best_error: 2.2746374566225427
best_error: 2.2746374181528717
best_error: 2.2746282901768895
best_error: 2.2746282885629636
best_error: 2.274625498595202
best_error: 2.274625496981383
best_error: 2.2746250076151546
best_error: 2.274624969253325
best_error: 2.2746218545427457
best_error: 2.2746218165512806
best_error: 2.274607499928512
best_error: 2.274607461914817
best_error: 2.274559328259363
best_error: 2.2745593264949524
best_error: 2.274321767331257
best_error: 2.2743217658130592
best_error: 2.2739863092493025
best_error: 2.273986307714324
best_error: 2.2739621003675947
best_error: 2.2739620986059683
best_error: 2.2739485793108867
best_error: 2.2739485771396453
best_error: 2.2739306654922737
best_error: 2.2739306633169254
best_error: 2.2738613580173648
best_error: 2.2738613559831533
best_error: 2.273757024508032
best_error: 2.2737569862105635
best_error: 2.2737477775589827
best_error: 2.273747775746755
best_error: 2.2736700216822725
best_error: 2.2736699836438556
best_error: 2.27366076082245
best_error: 2.2736607227855594
best_error: 2.2735285666157763
best_error: 2.2735285651236836
best_error: 2.273441382472705
best_error: 2.2734413811847536
best_error: 2.2733220658005218
best_error: 2.2733220277510418
best_error: 2.273306246973923
best_error: 2.2733062452019994
best_error: 2.2732682775708213
best_error: 2.2732682756786096
best_error: 2.273250020067633
best_error: 2.2732499821851624
best_error: 2.2732454292988775
best_error: 2.2732454275533547
best_error: 2.2732272753523057
best_error: 2.2732272371486
best_error: 2.273224779515045
best_error: 2.273224741408406
best_error: 2.2732236772892036
best_error: 2.2732236391920226
