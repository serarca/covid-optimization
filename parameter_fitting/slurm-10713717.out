ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 13.398942255076522
best_error: 13.398942237867379
best_error: 13.398942230997331
best_error: 13.365347367783876
best_error: 13.365347348168358
best_error: 13.365347341095381
best_error: 12.865295998537327
best_error: 12.865295935503628
best_error: 12.86529593040753
best_error: 11.83489861611351
best_error: 11.834898445948122
best_error: 10.338462562126814
best_error: 10.338462228961728
best_error: 7.991497375000593
best_error: 7.9914970052064875
best_error: 6.454248708779048
best_error: 6.454248428979945
best_error: 5.9801543440893825
best_error: 5.980153860709039
best_error: 5.305984734493183
best_error: 5.305984310298273
best_error: 5.1738850176442845
best_error: 5.1738845864038625
best_error: 5.11258279856866
best_error: 5.112582360146092
best_error: 5.087937277921707
best_error: 5.087936836188023
best_error: 5.081743794927273
best_error: 5.0817435165812475
best_error: 5.080685951357507
best_error: 5.080685509801157
best_error: 5.080364819438438
best_error: 5.080364541149243
best_error: 5.054668496009202
best_error: 5.054667961177837
best_error: 5.037971869532349
best_error: 5.037971400493554
best_error: 5.031653783493255
best_error: 5.031653306503392
best_error: 5.0291155959175935
best_error: 5.029115086914582
best_error: 5.026775696708498
best_error: 5.026775187359105
best_error: 5.026254243769769
best_error: 5.02625373434322
best_error: 5.026224293959555
best_error: 5.0262240554813005
best_error: 5.025991059923828
best_error: 5.025990559111169
best_error: 5.025177224785816
best_error: 5.025176746804801
best_error: 5.0230832304971464
best_error: 5.023082743514205
best_error: 5.022733688295717
best_error: 5.022733438679111
best_error: 5.02175856786195
best_error: 5.021758318266683
best_error: 5.018449873657925
best_error: 5.01844937937371
best_error: 5.005240357461842
best_error: 5.005240115603501
best_error: 4.9996554117356595
best_error: 4.999655174589477
best_error: 4.9908886802360986
best_error: 4.9908884478467
best_error: 4.987613872895304
best_error: 4.987613640204645
best_error: 4.9862772953383985
best_error: 4.986277062855372
best_error: 4.985693592353707
best_error: 4.985693062233743
best_error: 4.981602539440514
best_error: 4.981602305342175
best_error: 4.971180578498153
best_error: 4.971180342145004
best_error: 4.9616196318322645
best_error: 4.961619105094167
best_error: 4.938345763289747
best_error: 4.938345502710732
best_error: 4.929038228384175
best_error: 4.9290379681938195
best_error: 4.916279221129281
best_error: 4.916278961477217
best_error: 4.915212476660986
best_error: 4.9152122170542345
best_error: 4.915190410593212
best_error: 4.9151898929225455
best_error: 4.910937064848046
best_error: 4.9109368274707155
best_error: 4.894898551131924
best_error: 4.894898298590832
best_error: 4.893799489466252
best_error: 4.893799235766151
best_error: 4.892000946080644
best_error: 4.892000690598202
best_error: 4.8916734235586965
best_error: 4.891673171962018
best_error: 4.891375706050635
best_error: 4.891375454183539
best_error: 4.890962317458702
best_error: 4.890962063460112
best_error: 4.890593609697098
best_error: 4.890593353508477
best_error: 4.889742001603627
best_error: 4.889741746104323
best_error: 4.88747003522013
best_error: 4.887469780044952
best_error: 4.8860919253586275
best_error: 4.886091679530639
best_error: 4.876567801935417
best_error: 4.876567243000853
best_error: 4.8512765729346095
best_error: 4.851276320670593
best_error: 4.840753075293386
best_error: 4.840752815800483
best_error: 4.828638803737388
best_error: 4.828638546773497
best_error: 4.792498881342386
best_error: 4.792498328954055
best_error: 4.789976905184281
best_error: 4.789976636414471
best_error: 4.7656079640522995
best_error: 4.7656076984908
best_error: 4.760325315125377
best_error: 4.760325048156307
best_error: 4.742576583553093
best_error: 4.74257631802312
best_error: 4.728722183082199
best_error: 4.728721953006323
best_error: 4.718614560835233
best_error: 4.718614303546646
best_error: 4.690242610716367
best_error: 4.690242349030093
best_error: 4.68632544920785
best_error: 4.686325185066906
best_error: 4.686289371091355
best_error: 4.6862887796624495
best_error: 4.6448383606453625
best_error: 4.6448380952546895
