ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.285728833675131
best_error: 9.285728400928642
best_error: 7.496294203126604
best_error: 7.496294014224868
best_error: 7.152075559268013
best_error: 7.152075377627175
best_error: 6.985673436281083
best_error: 6.98567325043363
best_error: 6.89947142474028
best_error: 6.899471240075828
best_error: 6.85728798177068
best_error: 6.857287792968218
best_error: 6.829260299127771
best_error: 6.829260106594992
best_error: 6.817235986555559
best_error: 6.817235792469742
best_error: 6.8144953322600115
best_error: 6.814495137818643
best_error: 6.813478313952032
best_error: 6.81347811937877
best_error: 6.8128157978690425
best_error: 6.812815604620937
best_error: 6.812534436177893
best_error: 6.812534242893317
best_error: 6.8125108047075855
best_error: 6.812510566765987
best_error: 6.090657978982493
best_error: 6.090657175629673
best_error: 5.655122631547427
best_error: 5.655122230547095
best_error: 5.632658252693229
best_error: 5.632657817037792
best_error: 5.628460128180453
best_error: 5.628459672488232
best_error: 5.6253503406186045
best_error: 5.625349881226476
best_error: 5.614428944206958
best_error: 5.614428472433931
best_error: 5.511863602450936
best_error: 5.511863033547468
best_error: 5.355973107967426
best_error: 5.355972282956479
best_error: 5.214337066832329
best_error: 5.214336298229465
best_error: 5.1157409430334395
best_error: 5.115740742793962
best_error: 5.046159172257881
best_error: 5.046158604929132
best_error: 5.035294328726193
best_error: 5.035293767814096
best_error: 5.025748200469872
best_error: 5.025747671552507
best_error: 5.002743738495882
best_error: 5.00274354581741
best_error: 4.997381979030674
best_error: 4.9973814464077595
best_error: 4.995717673129342
best_error: 4.995717480638952
best_error: 4.9954548788518345
best_error: 4.995454345706241
best_error: 4.931885741479002
best_error: 4.931885137018406
best_error: 4.9306945151458415
best_error: 4.9306939137261345
best_error: 4.926186273380485
best_error: 4.92618568112985
best_error: 4.907227255578379
best_error: 4.907226671497902
best_error: 4.904701664054188
best_error: 4.904701481185864
best_error: 4.9046251697533965
best_error: 4.90462458751122
best_error: 4.891341936671829
best_error: 4.891341752844766
best_error: 4.875732769483365
best_error: 4.875732593564912
best_error: 4.860923776774321
best_error: 4.8609231731023215
best_error: 4.841961352324147
best_error: 4.841961182806883
best_error: 4.831346329863678
best_error: 4.831346160065689
best_error: 4.829350232722794
best_error: 4.829349617542816
best_error: 4.786214911818591
best_error: 4.786214738868947
best_error: 4.771402147270267
best_error: 4.771401972914035
best_error: 4.768423934093407
best_error: 4.768423336249458
best_error: 4.757417033158384
best_error: 4.757416848582206
best_error: 4.750826772603024
best_error: 4.750826589565616
best_error: 4.7445865102367755
best_error: 4.744586339573786
best_error: 4.7311110447977
best_error: 4.731110438183103
best_error: 4.722053167304814
best_error: 4.7220529836487986
best_error: 4.706407400084627
best_error: 4.7064072199018785
best_error: 4.704999044915855
best_error: 4.704998470624
best_error: 4.669416073873798
best_error: 4.669415898231287
best_error: 4.659176371091354
best_error: 4.659176209137517
best_error: 4.657938320456443
best_error: 4.657937713595274
best_error: 4.654908977016394
best_error: 4.654908811246066
best_error: 4.653905074913708
best_error: 4.653904469679114
best_error: 4.651471410349208
best_error: 4.651470804997355
best_error: 4.651114483325101
best_error: 4.651113877956132
best_error: 4.65109025130149
best_error: 4.65109008850413
best_error: 4.6440171716889465
best_error: 4.644016577596679
best_error: 4.6423028400548905
best_error: 4.64230224646073
best_error: 4.641792769460764
best_error: 4.641792175830197
best_error: 4.641577399219262
best_error: 4.641576805573331
best_error: 4.6414800942178704
best_error: 4.641479500565001
best_error: 4.641478590104835
best_error: 4.641478421999004
best_error: 4.64147823803799
best_error: 4.641478189462434
best_error: 4.641478179384591
best_error: 4.6414779437691465
best_error: 4.6414779435284075
best_error: 4.6414779414840135
best_error: 4.641477938500786
