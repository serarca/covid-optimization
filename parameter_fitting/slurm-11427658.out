ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.95930958306313
best_error: 25.959309220024288
best_error: 5.095998435881345
best_error: 5.0959984357959405
best_error: 5.095998435739755
best_error: 5.095987157189281
best_error: 5.095987157141647
best_error: 5.0959871570476665
best_error: 5.095942006386186
best_error: 5.095942006338394
best_error: 5.095942006244482
best_error: 5.095760824672988
best_error: 5.095760824624556
best_error: 5.09576082453092
best_error: 5.09502671556742
best_error: 5.095026715516372
best_error: 5.095026715423879
best_error: 5.0919315772307465
best_error: 5.091931577168337
best_error: 5.091931577081004
best_error: 5.076288491343447
best_error: 5.0762884912136625
best_error: 5.07628849116248
best_error: 5.029090628266741
best_error: 5.029090627050345
best_error: 5.028701222665405
best_error: 5.028701221401989
best_error: 5.0270180322674385
best_error: 5.027018030787016
best_error: 5.017202179126813
best_error: 5.017202176040083
best_error: 4.4564782518125305
best_error: 4.45647810826981
best_error: 3.710426355626799
best_error: 3.710426339480313
best_error: 3.7088078721996487
best_error: 3.708807864825194
best_error: 3.708539912669721
best_error: 3.7085399078356285
best_error: 3.708413502462097
best_error: 3.708413502074423
best_error: 3.708413501549119
best_error: 3.708267194156748
best_error: 3.7082671940199448
best_error: 3.7082671931605584
best_error: 3.7079954612573056
best_error: 3.7079954571273532
best_error: 3.707070984826222
best_error: 3.7070709758883087
best_error: 3.70230011506119
best_error: 3.7023000924861322
best_error: 3.693246631457652
best_error: 3.6932465833418724
best_error: 3.679388918581297
best_error: 3.6793888474519036
best_error: 3.6565416275902414
best_error: 3.6565415253538753
best_error: 3.64479597491121
best_error: 3.644795813653748
best_error: 3.5837597438854045
best_error: 3.5837595852407658
best_error: 3.3591360466047564
best_error: 3.3591359031938173
best_error: 3.233417679150423
best_error: 3.233417641445115
best_error: 3.221054615284595
best_error: 3.2210546135268485
best_error: 3.2210546077972277
best_error: 3.2184402539820063
best_error: 3.2184402521564697
best_error: 3.218440246315648
best_error: 3.215782229270236
best_error: 3.2157822273988588
best_error: 3.215782221477137
best_error: 3.2050613840990367
best_error: 3.2050613821077896
best_error: 3.2050613757762165
best_error: 3.158187067886924
best_error: 3.158187046558362
best_error: 3.085964115566333
best_error: 3.085964014224438
best_error: 3.0859639055196966
best_error: 3.084192834593072
best_error: 3.0841928112738257
best_error: 3.081021335722241
best_error: 3.081021319004929
best_error: 3.073121699630931
best_error: 3.0731216501734804
best_error: 3.069324740320143
best_error: 3.0693247034527986
best_error: 3.042811473110415
best_error: 3.042811433256211
best_error: 3.015929162885538
best_error: 3.015928818001031
best_error: 2.94054855417055
best_error: 2.940548334850449
best_error: 2.9231669636334816
best_error: 2.923166822528864
best_error: 2.80199480369787
best_error: 2.8019947163394097
best_error: 2.8019914354681084
best_error: 2.746577985046153
best_error: 2.746577806091985
best_error: 2.7465532396593697
best_error: 2.720255150126151
best_error: 2.7202549435799495
best_error: 2.7195550394062424
best_error: 2.71955483282291
best_error: 2.672958881460394
best_error: 2.672958837665423
best_error: 2.644327127637391
best_error: 2.6443270694770797
best_error: 2.6442695073610696
best_error: 2.6442694514139125
best_error: 2.6433119286646214
best_error: 2.643311925330127
best_error: 2.6433119244807437
best_error: 2.632285716447307
best_error: 2.632285713003116
best_error: 2.632285712478815
best_error: 2.6203965098592796
best_error: 2.620396505798942
best_error: 2.6203866401861937
best_error: 2.620386637568749
best_error: 2.6203866365372495
best_error: 2.6203093988714903
best_error: 2.6203093960014696
best_error: 2.6203093955943433
best_error: 2.6178689955518957
best_error: 2.617868992102395
best_error: 2.613942170352419
best_error: 2.6139421669290637
best_error: 2.613668216754418
best_error: 2.613668214579735
best_error: 2.6135818896938288
best_error: 2.6135818896056735
best_error: 2.6135818877647172
best_error: 2.613531762532921
best_error: 2.6135317564636837
best_error: 2.6134977993699358
best_error: 2.6134977980522787
best_error: 2.6134977975084563
best_error: 2.6133756416961735
best_error: 2.613375639633928
best_error: 2.6127826370111573
best_error: 2.6127826341760914
best_error: 2.6119957617885485
best_error: 2.6119957126525453
best_error: 2.61122828493192
best_error: 2.6112282703957495
best_error: 2.6105741382939436
best_error: 2.6105741354826932
best_error: 2.6103892490782425
best_error: 2.61038924673243
best_error: 2.610372614652779
best_error: 2.610372612965639
best_error: 2.61037261282706
best_error: 2.610366750310852
best_error: 2.610366748164596
best_error: 2.610364698730609
best_error: 2.610364696621595
best_error: 2.61036338420136
best_error: 2.610363382255337
best_error: 2.6103617506161534
best_error: 2.610361748625747
best_error: 2.610358029281567
best_error: 2.6103580272957405
best_error: 2.610356760299957
best_error: 2.610356759450602
best_error: 2.6103567584305494
best_error: 2.610355491170101
best_error: 2.610355490136376
best_error: 2.610355489310235
best_error: 2.6103548037160578
best_error: 2.6103548026798187
best_error: 2.6103548018561717
best_error: 2.610354271700363
best_error: 2.610354269502852
best_error: 2.6103532710813884
best_error: 2.6103532683805484
best_error: 2.6103493120795984
best_error: 2.6103493077350572
best_error: 2.610344051065064
best_error: 2.6103440447519506
best_error: 2.6103306143835194
best_error: 2.610330606318949
best_error: 2.610279793239498
best_error: 2.6102797786763126
best_error: 2.610200317785056
best_error: 2.610200299388565
best_error: 2.609958630951673
best_error: 2.609958602932802
best_error: 2.609479173274199
best_error: 2.609479142153615
best_error: 2.606179403801203
best_error: 2.6061793745670525
best_error: 2.600768210411135
best_error: 2.6007682076163015
best_error: 2.600768207200417
best_error: 2.6007682070131093
best_error: 2.595596766515316
best_error: 2.5955967431999754
best_error: 2.538494872808862
best_error: 2.538494700713899
best_error: 2.537027154109992
best_error: 2.5370269862963313
best_error: 2.531466172720379
best_error: 2.5314660244031693
best_error: 2.5030544422064747
best_error: 2.5030544389831615
best_error: 2.5030496851523627
best_error: 2.503030391755181
best_error: 2.503030388643703
best_error: 2.503030371749272
best_error: 2.5027327783739812
best_error: 2.50273274388788
best_error: 2.502732595084042
best_error: 2.494743665264452
best_error: 2.4947436622575387
best_error: 2.494743661585842
best_error: 2.494333711845224
best_error: 2.494333686558794
best_error: 2.494324397307303
best_error: 2.494324368021612
best_error: 2.494324349238944
best_error: 2.494324322906005
best_error: 2.4937335327988084
best_error: 2.4937334020859527
best_error: 2.4840898561099296
best_error: 2.484089756903933
best_error: 2.420570637705708
best_error: 2.4205705986583324
best_error: 2.4205445898124505
best_error: 2.4205153466127016
best_error: 2.420515283897646
best_error: 2.4205148222787485
best_error: 2.4176161228556983
best_error: 2.417616107826942
best_error: 2.417615857936929
best_error: 2.412073557598887
best_error: 2.4120735243518157
best_error: 2.4105373792154547
best_error: 2.4105373451304164
best_error: 2.4086200630494927
best_error: 2.4086200364310657
best_error: 2.4015095348607236
best_error: 2.4015095325573634
best_error: 2.377694728229033
best_error: 2.3776946837924355
best_error: 2.3726610315319263
best_error: 2.372660955440363
best_error: 2.372660755496829
best_error: 2.372660287113891
best_error: 2.370702851222578
best_error: 2.370702757466773
best_error: 2.3666865262236727
best_error: 2.366686522072014
best_error: 2.3666865220399207
best_error: 2.3662805598299226
best_error: 2.366280558090506
best_error: 2.366280555727302
best_error: 2.3647365985486974
best_error: 2.3647365984177013
best_error: 2.3647365947899788
best_error: 2.361689997700551
best_error: 2.3616829260812273
best_error: 2.3616681679808957
best_error: 2.3616680652188045
best_error: 2.3616675744834374
best_error: 2.3616538986480524
best_error: 2.3609513674522926
best_error: 2.3609511385830775
best_error: 2.3609496317886833
best_error: 2.3608743424813654
best_error: 2.3488853489612125
best_error: 2.3488852178910093
best_error: 2.348830337029212
best_error: 2.3463801305271805
best_error: 2.346380081006956
best_error: 2.3430075350832
best_error: 2.3430074928116147
best_error: 2.3387836576327334
best_error: 2.3387836522772756
best_error: 2.3387833496084345
best_error: 2.334156528397503
best_error: 2.3341564490023052
best_error: 2.334155540321464
best_error: 2.3186403716137374
best_error: 2.318640313059693
best_error: 2.3110475432781112
best_error: 2.3110474867694273
best_error: 2.311046649710421
