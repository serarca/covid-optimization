ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 25.074558632802784
best_error: 25.074558525305854
best_error: 11.498022145653888
best_error: 11.498022139002611
best_error: 11.484106244460694
best_error: 11.484106237064381
best_error: 11.415272596980902
best_error: 11.41527258660964
best_error: 10.574998596788255
best_error: 10.574998512174137
best_error: 10.440969269489639
best_error: 10.440969168032243
best_error: 10.266510017602352
best_error: 10.266509900797795
best_error: 9.990592369909841
best_error: 9.990592238116538
best_error: 9.735618162125217
best_error: 9.735618009320815
best_error: 8.921477923660483
best_error: 8.92147786733541
best_error: 8.921477807711497
best_error: 8.898600467026787
best_error: 8.898600415397716
best_error: 8.8986003487387
best_error: 8.870473725502316
best_error: 8.870473678037385
best_error: 8.870473603982845
best_error: 8.78818306892612
best_error: 8.788183038602947
best_error: 8.788182940517682
best_error: 8.758825533547657
best_error: 8.758825532493608
best_error: 8.653401304547916
best_error: 8.653401167428303
best_error: 8.550892107485218
best_error: 8.550892088302179
best_error: 8.521182444755507
best_error: 8.521182425066847
best_error: 8.493915826354
best_error: 8.493915806339082
best_error: 8.418190422134222
best_error: 8.418190422133614
best_error: 8.406292588741303
best_error: 8.406292566923451
best_error: 8.391098740564622
best_error: 8.391098718412536
best_error: 8.3898342026767
best_error: 8.389834180487394
best_error: 8.388677577565327
best_error: 8.388677555342015
best_error: 8.388119607704104
best_error: 8.388119585464402
best_error: 8.387938078460646
best_error: 8.387938056215614
best_error: 8.387893956627861
best_error: 8.38789393438151
best_error: 8.387854504471989
best_error: 8.387854482224462
best_error: 8.387832320702433
best_error: 8.387832298454239
best_error: 8.387812737563173
best_error: 8.387812715314396
best_error: 8.387800544326714
best_error: 8.387800522077573
best_error: 8.387790124871703
best_error: 8.387790102622242
best_error: 8.38778155788437
best_error: 8.387781535634662
best_error: 8.387775082649217
best_error: 8.387775060399312
best_error: 8.387764226182608
best_error: 8.387764203932381
best_error: 8.387759218965567
best_error: 8.387759196715185
best_error: 8.387756486577798
best_error: 8.387756464327335
best_error: 8.387754638304386
best_error: 8.387754616053874
best_error: 8.387753080687116
best_error: 8.387753058436557
best_error: 8.38775162225478
best_error: 8.387751600004172
best_error: 8.387750602871996
best_error: 8.387750580621361
best_error: 8.387748628731257
best_error: 8.387748606480564
best_error: 8.387747821312576
best_error: 8.38774779906186
best_error: 8.387747476080994
best_error: 8.387747453830265
best_error: 8.387746772018616
best_error: 8.387746749767864
best_error: 8.387746648962963
best_error: 8.387746626712207
best_error: 8.387746570370183
best_error: 8.387746548119425
best_error: 8.387746409999583
best_error: 8.38774638774882
best_error: 8.387746342803489
best_error: 8.387746320552726
best_error: 8.38774607406264
best_error: 8.387746051811877
best_error: 8.387746026163525
best_error: 8.387746026162917
best_error: 8.387745998183517
best_error: 8.387745975932749
best_error: 8.387745954152797
best_error: 8.38774216112767
best_error: 8.387742161127074
best_error: 8.387734487596862
best_error: 8.387734465345973
best_error: 8.387704686860744
best_error: 8.387704664609545
best_error: 8.387293420699923
best_error: 8.38729339844444
best_error: 8.385647955985604
best_error: 8.385647933712978
best_error: 8.379059686175893
best_error: 8.379059663834585
best_error: 8.352603571436525
best_error: 8.352603548818859
best_error: 8.24514124620245
best_error: 8.245141242277011
best_error: 8.245141222421026
best_error: 8.08845644330904
best_error: 8.088456443109907
best_error: 8.088456408519304
best_error: 8.084319260393245
best_error: 8.084319233830495
best_error: 8.084203715101289
best_error: 8.084203688507712
best_error: 8.08374020960477
best_error: 8.08374018288863
best_error: 8.081880962793992
best_error: 8.0818809379615
best_error: 8.081240553596576
best_error: 8.08124052859819
best_error: 8.08079182713648
best_error: 8.08079180202424
best_error: 8.079410237168798
best_error: 8.07941021171818
best_error: 8.079399764586329
best_error: 8.079399739133216
best_error: 8.079389505705834
best_error: 8.079389480250262
best_error: 8.079380094708544
best_error: 8.079380069250737
best_error: 8.079371107103182
best_error: 8.079371081643236
best_error: 8.079359733963692
best_error: 8.07935970850104
best_error: 8.079348874807662
best_error: 8.079348849342423
best_error: 8.0790990389919
best_error: 8.07909901346752
best_error: 8.079098999689908
best_error: 8.079098986094376
best_error: 8.07909897917593
best_error: 8.079098974542713
best_error: 8.079098969973334
best_error: 8.079098967560897
best_error: 8.079098965183835
best_error: 8.079098963851731
best_error: 8.079098962542005
best_error: 8.079098961685558
