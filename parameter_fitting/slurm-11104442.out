ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 66
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.07616409741823
best_error: 102.07616392440278
best_error: 102.07616389661487
best_error: 20.564390365931548
best_error: 20.564390365930727
best_error: 20.564390364458795
best_error: 20.564214276756687
best_error: 20.564214275278914
best_error: 20.56350388934328
best_error: 20.563503887845165
best_error: 20.56056205494781
best_error: 20.560562053363697
best_error: 20.54690756399818
best_error: 20.54690756197992
best_error: 20.422999860978514
best_error: 20.422999853056695
best_error: 20.42028042247915
best_error: 20.42028041439345
best_error: 20.07118723446346
best_error: 20.07118719556678
best_error: 15.835300445485863
best_error: 15.835299866935156
best_error: 14.234714484630668
best_error: 14.234714476443177
best_error: 14.234714473831346
best_error: 14.234041063018077
best_error: 14.234041055244168
best_error: 14.23404105149513
best_error: 14.231757420858356
best_error: 14.231757415143559
best_error: 14.231757405904295
best_error: 14.22642069483792
best_error: 14.226420689816543
best_error: 14.226420668220108
best_error: 14.212752103448155
best_error: 14.212752101919989
best_error: 14.212752022923652
best_error: 14.199203231958826
best_error: 14.199203231536398
best_error: 14.199203137074406
best_error: 14.189706045740223
best_error: 14.18970565769466
best_error: 14.184942192339212
best_error: 14.18494219062655
best_error: 14.184942128439088
best_error: 14.131889272388324
best_error: 14.131889247145105
best_error: 14.131819411293028
best_error: 14.131819406986782
best_error: 14.131819377932125
best_error: 14.128400073730319
best_error: 14.12840006996899
best_error: 14.128400032477824
best_error: 14.127670787531697
best_error: 14.127670783846323
best_error: 14.127670745166174
best_error: 14.127424741597128
best_error: 14.127424737915518
best_error: 14.12742469919453
best_error: 14.127324121869199
best_error: 14.127324118189119
best_error: 14.127324079451427
best_error: 14.127280436678749
best_error: 14.127280432999337
best_error: 14.127280394254392
best_error: 14.127257333627082
best_error: 14.12725732994801
best_error: 14.127257291199275
best_error: 14.127244748379127
best_error: 14.12724474470025
best_error: 14.127244705949447
best_error: 14.127243858542549
best_error: 14.127243854863682
best_error: 14.127243816112735
best_error: 14.12724315465362
best_error: 14.127243150974762
best_error: 14.127243112223702
best_error: 14.127242774984392
best_error: 14.127242771305541
best_error: 14.127242732554418
best_error: 14.127242637068651
best_error: 14.127242530244157
best_error: 14.127155224011354
best_error: 14.127155199362527
best_error: 14.12635916648363
best_error: 14.126359141754312
best_error: 14.119065485721437
best_error: 14.11906547765368
best_error: 14.119065477170668
best_error: 14.118287247734468
best_error: 14.118287240090066
best_error: 14.11828723924812
best_error: 14.115515437031583
best_error: 14.11551541021601
best_error: 14.09980016685902
best_error: 14.099800140536464
best_error: 14.038783549179007
best_error: 14.038783523471759
best_error: 13.944035543961622
best_error: 13.944035413179169
best_error: 13.123878704389208
best_error: 13.123878576263458
best_error: 13.096736597992436
best_error: 13.09673659662918
best_error: 13.096736498844686
best_error: 13.09552041839765
best_error: 13.095520396625693
best_error: 13.0955203965264
best_error: 13.007749050546092
best_error: 13.007749026426241
best_error: 13.007626106045024
best_error: 13.007626081713411
best_error: 12.997154930618056
best_error: 12.997154930618054
best_error: 12.997154925015156
best_error: 12.997154922774062
best_error: 12.932768975367864
best_error: 12.932768970811173
best_error: 12.932768968329272
best_error: 12.928265896321214
best_error: 12.928265782180818
best_error: 12.925168226005688
best_error: 12.925168113929406
best_error: 12.923646591175297
best_error: 12.923646479121407
best_error: 12.92291447935942
best_error: 12.92291437265656
best_error: 12.922762951182634
best_error: 12.92276284447355
best_error: 12.9226257401028
best_error: 12.922625633388083
best_error: 12.922560954049683
best_error: 12.922560847332303
best_error: 12.922557927783464
best_error: 12.922557821065965
best_error: 12.922555310699583
best_error: 12.922555203981979
best_error: 12.922550604974582
best_error: 12.922550498256784
best_error: 12.92254953284731
best_error: 12.922549528504291
best_error: 12.922549525892912
best_error: 12.922547608155643
best_error: 12.922547501437723
best_error: 12.922547108788432
best_error: 12.922547002070493
best_error: 12.922546949445866
best_error: 12.922546842727922
best_error: 12.92254680513939
best_error: 12.922546698421439
