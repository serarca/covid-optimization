ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 70
days_switch 25
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.531348121454357
best_error: 24.531348111197048
best_error: 24.531348103341806
best_error: 24.531348055581333
best_error: 4.92221932998887
best_error: 4.922219329564348
best_error: 4.922219329337036
best_error: 4.920774348363163
best_error: 4.920774348219703
best_error: 4.920774347708835
best_error: 4.914852810371967
best_error: 4.914852810214051
best_error: 4.914852809707276
best_error: 4.8884995059431695
best_error: 4.888499505712944
best_error: 4.888499505229776
best_error: 4.649983512504115
best_error: 4.649983503784503
best_error: 4.632079893959102
best_error: 4.632079882936072
best_error: 4.606013291204733
best_error: 4.606013276365131
best_error: 3.3729879748833445
best_error: 3.3729876690977534
best_error: 3.018828708278397
best_error: 3.018828318757924
best_error: 2.907271260128166
best_error: 2.9072711775957343
best_error: 2.870945488916642
best_error: 2.8709454807340826
best_error: 2.869597602426716
best_error: 2.8695975983384603
best_error: 2.8681012502382988
best_error: 2.868101245256089
best_error: 2.8622489043789927
best_error: 2.8622488914452937
best_error: 2.8412967787209986
best_error: 2.8412967399653235
best_error: 2.5090188640985174
best_error: 2.509018764182216
best_error: 2.4659669156377344
best_error: 2.465966821506246
best_error: 2.419825581158262
best_error: 2.4198251763753484
best_error: 2.4048788719109537
best_error: 2.404878796796338
best_error: 2.3725951050540104
best_error: 2.3725951018556732
best_error: 2.3712104720574136
best_error: 2.3712104083343037
best_error: 2.3653440110577826
best_error: 2.365343939450365
best_error: 2.3414211082818484
best_error: 2.341421008144759
best_error: 2.2378295777738892
best_error: 2.237829418817008
best_error: 2.120375869791983
best_error: 2.120375733483111
best_error: 2.0539317590566974
best_error: 2.053931519278658
best_error: 1.9742301297082807
best_error: 1.974229890682281
best_error: 1.9622062860962866
best_error: 1.9622060605744311
best_error: 1.949018772436939
best_error: 1.949018723233539
best_error: 1.9406397938397129
best_error: 1.940639782719505
best_error: 1.9149754935163614
best_error: 1.9149754817134712
best_error: 1.8146830046466482
best_error: 1.8146829798188366
best_error: 1.7784254479147146
best_error: 1.7784252427663416
best_error: 1.7538298351360817
best_error: 1.7538295235993848
best_error: 1.7347485133574665
best_error: 1.7347484019325905
best_error: 1.6716635248446008
best_error: 1.6716634165627773
best_error: 1.6061107297623607
best_error: 1.6061106925343598
best_error: 1.5886928388758905
best_error: 1.5886927774861368
best_error: 1.5530464515157658
best_error: 1.5530463852565048
best_error: 1.5530420449681133
best_error: 1.5530419787132812
best_error: 1.5456697744150525
best_error: 1.5456697530838002
best_error: 1.545669752221315
best_error: 1.4796960494113895
best_error: 1.4796958303974532
best_error: 1.4796539819149352
best_error: 1.4765236235787327
best_error: 1.4765234976473338
best_error: 1.460631420188034
best_error: 1.4606313907638064
best_error: 1.4606313857175537
best_error: 1.4579969386992813
best_error: 1.4579968764536264
best_error: 1.4328657169875134
best_error: 1.432865676363088
best_error: 1.403717790917505
best_error: 1.4037177517824084
best_error: 1.3042955578911333
best_error: 1.3042955565319923
best_error: 1.3042955494338626
best_error: 1.3042955465761548
best_error: 1.2792541926816368
best_error: 1.2792541560544226
best_error: 1.2594141232332772
best_error: 1.2594138055788187
best_error: 1.2593939762466322
best_error: 1.2561559463660004
best_error: 1.256155813376927
best_error: 1.166145221656248
best_error: 1.1661451659933313
best_error: 1.1626406903016493
best_error: 1.1626406472310822
best_error: 1.156575824465603
best_error: 1.1565757966633925
best_error: 1.1485509727824335
best_error: 1.148550943510542
best_error: 1.140450718164025
best_error: 1.1404507087332596
best_error: 1.1373435824575966
best_error: 1.1373434857769966
best_error: 1.1373424004324688
best_error: 1.1323919538360532
best_error: 1.1323919253248844
best_error: 1.1321333102839766
best_error: 1.1321333043403263
best_error: 1.1320020890896643
best_error: 1.132002084075505
best_error: 1.1319771028643582
best_error: 1.1319770983931319
best_error: 1.1319554363343163
best_error: 1.131955431463376
best_error: 1.1319203908202846
best_error: 1.1319203889329454
best_error: 1.1319203886582923
best_error: 1.1318872526064854
best_error: 1.13188724938753
best_error: 1.1318628077559978
best_error: 1.1318628072409203
best_error: 1.1318628055431066
best_error: 1.1318533911525503
best_error: 1.1318533890103155
best_error: 1.131853388850943
best_error: 1.1318363246421272
best_error: 1.131836320963416
best_error: 1.1316518412376422
best_error: 1.1316518357949001
best_error: 1.1313103305130514
best_error: 1.1313103168947596
best_error: 1.130725672680245
best_error: 1.1307256524839353
best_error: 1.129218474401995
best_error: 1.129218458061724
best_error: 1.127583600029266
best_error: 1.127583583235448
best_error: 1.126594445126568
best_error: 1.1265944224594013
best_error: 1.126082545836401
best_error: 1.1260825159114323
best_error: 1.1257109019474918
best_error: 1.1257108678918768
best_error: 1.1251345037992027
best_error: 1.1251344615108128
best_error: 1.1245953757143268
best_error: 1.1245953283286667
best_error: 1.1239957413800916
best_error: 1.1239956953403192
best_error: 1.1237964381286814
best_error: 1.1237964019704412
best_error: 1.1236679537015848
best_error: 1.1236679446099966
best_error: 1.123448747712816
best_error: 1.1234487336459622
best_error: 1.122567036778384
best_error: 1.1225670058034007
best_error: 1.1217227434254042
best_error: 1.1217227141134334
best_error: 1.121506280173193
best_error: 1.1215062737315113
best_error: 1.1215061658840604
best_error: 1.1215061594252853
best_error: 1.1215060428626407
best_error: 1.1215060363604075
best_error: 1.1215059860829082
best_error: 1.1215059795355
best_error: 1.1215059552171998
best_error: 1.121505948632436
best_error: 1.1215059326978916
best_error: 1.121505926077028
best_error: 1.1215059195180606
best_error: 1.121505912881169
best_error: 1.1215059074190514
best_error: 1.1215059007670276
best_error: 1.1215058971392609
best_error: 1.1215058931546837
best_error: 1.1214654180829797
best_error: 1.1214654166858573
best_error: 1.1214654157048485
best_error: 1.1214653252449993
best_error: 1.121465323830336
best_error: 1.1214653228662592
best_error: 1.121465229276903
best_error: 1.1214652277960848
best_error: 1.1214652268981287
best_error: 1.1214435747962626
best_error: 1.12144357297246
best_error: 1.1214340648154133
best_error: 1.1214340626523522
best_error: 1.12143060792632
best_error: 1.1214306058413848
best_error: 1.121423100385062
best_error: 1.1214230984838143
best_error: 1.1214049732677893
best_error: 1.121404971405155
best_error: 1.1213426564501519
best_error: 1.1213426547152068
best_error: 1.1211608834155549
best_error: 1.12116086789022
best_error: 1.1210010075351982
best_error: 1.1210009923866595
best_error: 1.1203760055932148
best_error: 1.1203759937502757
best_error: 1.118096754215938
best_error: 1.1180967497259966
best_error: 1.1134529288821498
best_error: 1.113452890412076
best_error: 1.1130842388077928
best_error: 1.1130842234740472
best_error: 1.1130560568190329
best_error: 1.1130560538984944
best_error: 1.1130515024158694
best_error: 1.1130515018179183
best_error: 1.1130515014442535
best_error: 1.1130515004497734
best_error: 1.113051278416825
best_error: 1.1130512778206663
best_error: 1.1130512775288626
best_error: 1.1130512764400962
best_error: 1.113029729398704
best_error: 1.1130297290782476
best_error: 1.1130297279880457
best_error: 1.113029727435077
best_error: 1.1129449149244837
best_error: 1.1129449144931165
best_error: 1.1129449141271133
best_error: 1.1129449129552325
best_error: 1.112628776387064
best_error: 1.1126287743223626
best_error: 1.1072287018583653
best_error: 1.1072286914963976
best_error: 1.0943517858889147
best_error: 1.0943517849627589
best_error: 1.0691847605644302
best_error: 1.0691847395155931
best_error: 1.0691843021414378
best_error: 1.0674754873369943
best_error: 1.0674752592660102
best_error: 1.0674743082122131
best_error: 1.0674740298732839
best_error: 1.0667641163236872
best_error: 1.0667640087640224
best_error: 1.0667637888248536
best_error: 1.0580599224795098
best_error: 1.0580598037984983
best_error: 1.058059383439179
best_error: 1.052967393485792
best_error: 1.0529673673750917
best_error: 1.0499448364781967
best_error: 1.0499448263547122
best_error: 1.0482781331905835
best_error: 1.0482780469661184
best_error: 1.048278017270636
best_error: 1.0450443610986877
best_error: 1.0450443282166608
best_error: 1.045044225539858
best_error: 1.0426858584966676
best_error: 1.0426858349230974
best_error: 1.0413427902708499
best_error: 1.0413427712918537
best_error: 1.0405311454671604
best_error: 1.0405311387753056
best_error: 1.039981560425268
best_error: 1.0399815470084814
best_error: 1.039869916837561
best_error: 1.0398699146111094
best_error: 1.0398098825866418
best_error: 1.039809880516082
best_error: 1.0397969974680086
best_error: 1.0397969948176877
best_error: 1.039788298756599
best_error: 1.039788298500744
