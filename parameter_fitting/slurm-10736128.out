ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.167066221838487
best_error: 10.167066159867002
best_error: 10.093270151398311
best_error: 10.093270080970836
best_error: 7.9218947373675785
best_error: 7.92189439489799
best_error: 4.772768421072618
best_error: 4.77276808158747
best_error: 4.600626039627035
best_error: 4.600626039612848
best_error: 4.526592631487324
best_error: 4.526592477926818
best_error: 4.522182661812063
best_error: 4.522182661795859
best_error: 4.49547188565703
best_error: 4.495471866200255
best_error: 4.493829368018092
best_error: 4.493829353633643
best_error: 4.491299790059655
best_error: 4.49129978487915
best_error: 4.491299782138661
best_error: 4.490170461580995
best_error: 4.490170459279997
best_error: 4.490170453644099
best_error: 4.489678520289667
best_error: 4.489678519464832
best_error: 4.489678519049468
best_error: 4.489678512347356
best_error: 4.489333176473182
best_error: 4.489333175977019
best_error: 4.4893331753424865
best_error: 4.489333168505555
best_error: 4.489156747858491
best_error: 4.489156747839566
best_error: 4.489156747755492
best_error: 4.488724349323202
best_error: 4.488724347913869
best_error: 4.48872434134859
best_error: 4.4869031234198165
best_error: 4.486903121163978
best_error: 4.486903115364396
best_error: 4.479540077994509
best_error: 4.4795400749843335
best_error: 4.4795400696514776
best_error: 4.448803513517483
best_error: 4.448803502226484
best_error: 4.3147802087163125
best_error: 4.314780208699801
best_error: 4.314780206568068
best_error: 4.3082016158119645
best_error: 4.308201615791259
best_error: 4.308201587022629
best_error: 4.302138387566315
best_error: 4.302138387549943
best_error: 4.302138385119681
best_error: 4.2881556853411285
best_error: 4.288155512000184
best_error: 4.287621715755232
best_error: 4.2876217157383865
best_error: 4.28762171287996
best_error: 4.282123806521283
best_error: 4.282123756411944
best_error: 4.277342935202579
best_error: 4.277342888487043
best_error: 4.276855480543636
best_error: 4.276855434039765
best_error: 4.276815553719656
best_error: 4.276815507206161
best_error: 4.276809790958637
best_error: 4.276809790942173
best_error: 4.276806591079512
best_error: 4.276806544563842
best_error: 4.276755729380513
best_error: 4.276755682716413
best_error: 4.276599163868797
best_error: 4.276599115345048
best_error: 4.276485784603947
best_error: 4.27648573206392
best_error: 4.276484285258716
best_error: 4.276484232148841
best_error: 4.276483493065331
best_error: 4.2764834398708285
best_error: 4.276483401596574
best_error: 4.276483348400085
best_error: 4.276483056181081
best_error: 4.276483002976645
best_error: 4.276482812620949
best_error: 4.276482759301329
best_error: 4.276482435033544
best_error: 4.276482381750709
best_error: 4.276474183633132
best_error: 4.276474130433396
best_error: 4.2764470277577376
best_error: 4.276446976076647
best_error: 4.276425575204927
best_error: 4.2764255269638385
best_error: 4.2763524949296094
best_error: 4.276352446680498
best_error: 4.276269131449051
best_error: 4.2762267985307885
best_error: 4.276226798448557
best_error: 4.275635934636039
best_error: 4.275635875610517
best_error: 4.275532938674408
best_error: 4.275532879074444
best_error: 4.275173401635138
best_error: 4.275173340357448
best_error: 4.2746557192145085
best_error: 4.274655656748654
best_error: 4.274546165302433
best_error: 4.274546102631169
best_error: 4.274520496805725
best_error: 4.274520496586632
best_error: 4.274518225156936
best_error: 4.274518162661379
best_error: 4.27444026828609
best_error: 4.274440208030466
best_error: 4.274435895510163
best_error: 4.2744275867188
best_error: 4.27440257136477
best_error: 4.274402510989579
best_error: 4.27436625613184
best_error: 4.274357028189333
best_error: 4.274349950515798
best_error: 4.274342022205759
best_error: 4.274339408601328
best_error: 4.274339348211003
best_error: 4.274339062581769
best_error: 4.2743388666334035
best_error: 4.2743387616177895
best_error: 4.274338705268002
best_error: 4.274338667288406
best_error: 4.274338651163475
best_error: 4.27433865014049
best_error: 4.27433864691964
