ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.644866746833122
best_error: 8.644866728006594
best_error: 8.398788833788052
best_error: 8.398788143453958
best_error: 6.780947415855826
best_error: 6.780947259793949
best_error: 4.866191397978225
best_error: 4.866191299978981
best_error: 4.8473158678540775
best_error: 4.847315780954416
best_error: 4.025461464028282
best_error: 4.025461457314918
best_error: 4.025461451101032
best_error: 2.8641829324820605
best_error: 2.8641829214217336
best_error: 2.7237120838740685
best_error: 2.723712083859855
best_error: 2.7237120773746266
best_error: 2.6477266308250322
best_error: 2.647726488330587
best_error: 2.5484299315012704
best_error: 2.548429931031119
best_error: 2.5271945858703937
best_error: 2.527194534582819
best_error: 2.5257163384740506
best_error: 2.5257162649500975
best_error: 2.513619836917269
best_error: 2.5136197756614633
best_error: 2.507788290482008
best_error: 2.5077882362679733
best_error: 2.5064468921751826
best_error: 2.5064468912099795
best_error: 2.505902485048581
best_error: 2.5059024338261717
best_error: 2.500438530899057
best_error: 2.5004384873089434
best_error: 2.49637469086153
best_error: 2.496374659514721
best_error: 2.495660752702274
best_error: 2.4956607255142176
best_error: 2.495519609528049
best_error: 2.495519587845543
best_error: 2.4954563490760586
best_error: 2.495456325281522
best_error: 2.495411648662255
best_error: 2.495411624708341
best_error: 2.4953428915705644
best_error: 2.495342867154547
best_error: 2.495312571776858
best_error: 2.4953125473505
best_error: 2.4953071327592764
best_error: 2.495307108331068
best_error: 2.49530412103629
best_error: 2.4953040966070583
best_error: 2.495302455365021
best_error: 2.4953024309352183
best_error: 2.4953014234076694
best_error: 2.4953013989775106
best_error: 2.4953008991203385
best_error: 2.4953008746900074
best_error: 2.495300548486369
best_error: 2.4953005240559203
best_error: 2.495300380743359
best_error: 2.495300356312852
best_error: 2.495300258054951
best_error: 2.495300233624401
best_error: 2.4953002048227573
best_error: 2.4953001915137403
best_error: 2.495300159053302
best_error: 2.495290157839043
best_error: 2.495290133758371
best_error: 2.4952866398279854
best_error: 2.4952866159437863
best_error: 2.495282263671645
best_error: 2.495282240423185
best_error: 2.4952694000895073
best_error: 2.495269376845955
best_error: 2.495222126321844
best_error: 2.4952221031383663
best_error: 2.494964088227762
best_error: 2.4949640651419225
best_error: 2.4948400762273653
best_error: 2.494840050639439
best_error: 2.494758106564471
best_error: 2.4947580816879342
best_error: 2.494694864853451
best_error: 2.4946746373915736
best_error: 2.494674614717601
best_error: 2.494664418830848
best_error: 2.4946604410111073
best_error: 2.494660417365252
best_error: 2.494652769425005
best_error: 2.4946527459259817
best_error: 2.494649714632927
best_error: 2.4946496911315017
best_error: 2.4946480759888994
best_error: 2.4946480527652013
best_error: 2.4946422056462003
best_error: 2.4946399023258747
best_error: 2.4946365637750967
best_error: 2.494636540003925
best_error: 2.494636400147184
best_error: 2.494636309390164
best_error: 2.494635664146608
best_error: 2.4946356403753156
best_error: 2.4946355346280726
best_error: 2.4946342991885335
best_error: 2.4946342754149446
best_error: 2.4946341401350107
best_error: 2.4946341163617607
best_error: 2.4946340994448977
best_error: 2.494634099376056
best_error: 2.4946340908763873
best_error: 2.4946340908075313
best_error: 2.4946340890696415
best_error: 2.4946340890007956
best_error: 2.4946340885650646
best_error: 2.4946340884962117
best_error: 2.494634088294601
best_error: 2.494634088281395
best_error: 2.4946339484321847
best_error: 2.494633924659194
best_error: 2.4946336535464333
best_error: 2.4946336297736935
best_error: 2.494633583012853
best_error: 2.4946330317092644
best_error: 2.4946330080593517
best_error: 2.494632632657731
best_error: 2.4946326090114224
best_error: 2.4946325736486363
best_error: 2.4946325500984097
best_error: 2.4946325422233135
best_error: 2.4946325186951888
