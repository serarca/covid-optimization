ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 74
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 107.0894458319721
best_error: 107.0894457459933
best_error: 107.08944564790484
best_error: 19.677509936803848
best_error: 19.677509936801677
best_error: 19.677509931901994
best_error: 19.67173378247553
best_error: 19.671733782473318
best_error: 19.671733777349456
best_error: 19.645649612094736
best_error: 19.645649612092104
best_error: 19.645649605831025
best_error: 19.428412966201847
best_error: 19.428412966156227
best_error: 19.42841294400823
best_error: 19.40203801314374
best_error: 19.40203801308629
best_error: 19.40203798850387
best_error: 19.37119536837035
best_error: 19.371195368297172
best_error: 19.37119534078512
best_error: 16.886377499910903
best_error: 16.88637749917462
best_error: 16.88637626948592
best_error: 16.076987465107706
best_error: 16.076987456975957
best_error: 16.07698734146723
best_error: 15.933253275717401
best_error: 15.933253267917292
best_error: 15.933253262152501
best_error: 15.933253058148114
best_error: 15.92120188240246
best_error: 15.921201875401135
best_error: 15.921201869049444
best_error: 15.299270252918731
best_error: 15.299270232807665
best_error: 15.007490756686334
best_error: 15.007490738094631
best_error: 14.929227319237182
best_error: 14.929227307604862
best_error: 14.929227301344863
best_error: 14.214279780705887
best_error: 14.21427977048221
best_error: 14.21427976290466
best_error: 13.584128852364758
best_error: 13.58412884782409
best_error: 13.584128836393166
best_error: 13.257268365963977
best_error: 13.257268340134281
best_error: 12.700442673570553
best_error: 12.700442533742107
best_error: 12.555046076530656
best_error: 12.555046069049311
best_error: 12.55504606595515
best_error: 12.544072518074532
best_error: 12.544072516137678
best_error: 12.544072516061135
best_error: 12.544072513272805
best_error: 12.544072502897341
best_error: 12.540999289876154
best_error: 12.540999287815513
best_error: 12.540999286647278
best_error: 12.540999275488378
best_error: 12.533367758585314
best_error: 12.533367754878265
best_error: 12.533367750447777
best_error: 12.533367748354049
best_error: 12.532438449649131
best_error: 12.53243844601944
best_error: 12.532438441528772
best_error: 12.53243843943202
best_error: 12.531439543521188
best_error: 12.531439539975091
best_error: 12.531439535416819
best_error: 12.531439533319373
best_error: 12.530372715941686
best_error: 12.530372712481089
best_error: 12.530372707906686
best_error: 12.530372705756537
best_error: 12.529600394659425
best_error: 12.529600391215801
best_error: 12.529600386673682
best_error: 12.529600384486564
best_error: 12.529136341093924
best_error: 12.529136337660544
best_error: 12.529136333137936
best_error: 12.529136330928463
best_error: 12.529122955104839
best_error: 12.529122951671672
best_error: 12.52912294714928
best_error: 12.529122944939573
best_error: 12.529114805297954
best_error: 12.529114801864912
best_error: 12.529114797342661
best_error: 12.529114795132804
best_error: 12.529109849726382
best_error: 12.52910984629342
best_error: 12.529109841771248
best_error: 12.529109839561306
best_error: 12.529106841922474
best_error: 12.529106838489561
best_error: 12.52910683396744
best_error: 12.529106831757444
best_error: 12.52910502100602
best_error: 12.529105017573134
best_error: 12.529105013051042
best_error: 12.529105010841015
best_error: 12.529103922573874
best_error: 12.529103919141008
best_error: 12.529103914618933
best_error: 12.529103912408884
best_error: 12.529103263249924
best_error: 12.529103259817067
best_error: 12.529103255295002
best_error: 12.529103253084948
best_error: 12.52910287018725
best_error: 12.529102866754398
best_error: 12.52910286223234
best_error: 12.529102860022274
best_error: 12.52910241315083
best_error: 12.529102409717987
best_error: 12.529102405195932
best_error: 12.529102402985863
best_error: 12.529102364505533
best_error: 12.529102345357293
best_error: 12.529102341924448
best_error: 12.529102337402396
best_error: 12.529102335192325
best_error: 12.529102263321555
best_error: 12.529102262201333
best_error: 12.529102249583968
best_error: 12.529102245583527
best_error: 12.529102239419
best_error: 12.52910223939728
best_error: 12.529102239369806
best_error: 12.529102239360107
best_error: 12.529102239359464
best_error: 12.529102239358672
best_error: 12.52910223935346
