ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 62
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 19.52613424657041
best_error: 19.526133387120254
best_error: 5.060960517998693
best_error: 5.060960517791463
best_error: 5.060955824627283
best_error: 5.060955824625492
best_error: 5.060955824624477
best_error: 5.060937042356426
best_error: 5.060937042354632
best_error: 5.060937042353618
best_error: 5.060861772376
best_error: 5.060861772374191
best_error: 5.060861772373186
best_error: 5.060558416505152
best_error: 5.060558416503281
best_error: 5.060558416502314
best_error: 5.059307128772884
best_error: 5.059307128770731
best_error: 5.059307128769941
best_error: 5.0535819492789065
best_error: 5.053581949274759
best_error: 4.975829084018352
best_error: 4.975829082769362
best_error: 4.973367467704277
best_error: 4.973367466355017
best_error: 4.970707345208984
best_error: 4.970707343747457
best_error: 4.3982688697253565
best_error: 4.398268741225646
best_error: 4.390611904071614
best_error: 4.390611851963622
best_error: 3.8740065182113717
best_error: 3.8740063653043793
best_error: 3.864837162631045
best_error: 3.864837002543912
best_error: 3.830126704388835
best_error: 3.8301266566349237
best_error: 3.82051860364721
best_error: 3.820518597401382
best_error: 3.8205185527291268
best_error: 3.665279886234214
best_error: 3.6652797339377927
best_error: 3.569820496551792
best_error: 3.569820372282336
best_error: 3.549935516411984
best_error: 3.549935496284683
best_error: 3.5455216261688944
best_error: 3.5455216019926405
best_error: 3.539617596871516
best_error: 3.539617577961016
best_error: 3.535325847168761
best_error: 3.535325833351792
best_error: 3.519423874576907
best_error: 3.5194238280283527
best_error: 3.4869792522089966
best_error: 3.4869791721427803
best_error: 3.2954384054258092
best_error: 3.295438361580541
best_error: 3.132995399361859
best_error: 3.1329953493231426
best_error: 3.132171560757462
best_error: 3.1321714918939483
best_error: 3.120549703096943
best_error: 3.12054957400484
best_error: 3.0837029105191407
best_error: 3.0837029096021884
best_error: 3.08370290933168
best_error: 3.0296051599946834
best_error: 3.0296050240266648
best_error: 2.8861876604531664
best_error: 2.8861875328226825
best_error: 2.847654063955756
best_error: 2.847654032151724
best_error: 2.6375414942121798
best_error: 2.637541398574258
best_error: 2.6085791068174835
best_error: 2.608579090464813
best_error: 2.5354994102185526
best_error: 2.5354994085877633
best_error: 2.535499405904025
best_error: 2.499720407532809
best_error: 2.4997204038744614
best_error: 2.499720401689034
best_error: 2.4898258660801282
best_error: 2.4898258302357372
best_error: 2.4825249775975364
best_error: 2.4825249423438733
best_error: 2.4764946433853647
best_error: 2.4764946070450464
best_error: 2.469798199365993
best_error: 2.4697981805432825
best_error: 2.465600706679157
best_error: 2.465600698054233
best_error: 2.461250690547695
best_error: 2.461250603850801
best_error: 2.4521037949085147
best_error: 2.4521037597214494
best_error: 2.4480758017023
best_error: 2.448075801551797
best_error: 2.448075801450262
best_error: 2.4480758011822137
best_error: 2.4480757979794707
best_error: 2.4480757972249165
best_error: 2.4471578395023363
best_error: 2.4471578392055178
best_error: 2.4471578390194995
best_error: 2.447157838976408
best_error: 2.447157835798688
best_error: 2.4471578348739933
best_error: 2.399903972293822
best_error: 2.3999039643104116
best_error: 2.315949372687748
best_error: 2.315949298239047
best_error: 2.2378229396529132
best_error: 2.237822906744375
best_error: 2.21599971616001
best_error: 2.2159996772033743
best_error: 2.212924639353263
best_error: 2.212924595040811
best_error: 2.2126598140278713
best_error: 2.2126598058105404
best_error: 2.212276820125228
best_error: 2.2122768117977323
best_error: 2.2121927743559575
best_error: 2.2121927608455776
best_error: 2.2118123466099515
best_error: 2.211812321743722
best_error: 2.211725833264581
best_error: 2.211725798161076
best_error: 2.21153134227905
best_error: 2.211531313666411
best_error: 2.2113718790042105
best_error: 2.2113718479566358
best_error: 2.211185724844647
best_error: 2.2111857015405363
best_error: 2.2106076346678694
best_error: 2.2106076260985876
best_error: 2.2103427563577696
best_error: 2.210342752671153
best_error: 2.2102724364485393
best_error: 2.2102724360681103
best_error: 2.210272435845805
best_error: 2.21017101946517
best_error: 2.210171018374005
best_error: 2.209832182251892
best_error: 2.209832181444264
best_error: 2.209832181424976
best_error: 2.2081746044948303
best_error: 2.2081745991657327
best_error: 2.2078101455708214
best_error: 2.2078101413021254
best_error: 2.207563518969927
best_error: 2.20756351738427
best_error: 2.206324278967455
best_error: 2.206324268495143
best_error: 2.2062581429358255
best_error: 2.2062581204732448
best_error: 2.206248996682633
best_error: 2.2062489707445083
best_error: 2.2046981841039983
best_error: 2.2046981551223284
best_error: 2.2041152230324377
best_error: 2.2041151771018126
best_error: 2.20356877543268
best_error: 2.2035687660587167
best_error: 2.2033396733211768
best_error: 2.2033396338054727
best_error: 2.2020318472245264
best_error: 2.2020318317261585
best_error: 2.2013991446958268
best_error: 2.2013991436563427
best_error: 2.2012397516774467
best_error: 2.201239751366772
best_error: 2.201079023936953
best_error: 2.201079023646482
best_error: 2.1994820962337935
best_error: 2.1994820959829764
best_error: 2.1994820957668755
best_error: 2.1994380512977343
best_error: 2.199438046107155
best_error: 2.1993986822528715
best_error: 2.1993986675703003
best_error: 2.199396488495708
best_error: 2.1993964716012573
best_error: 2.1974077236054357
best_error: 2.1974077103246095
best_error: 2.197000236184354
best_error: 2.1970002358724448
best_error: 2.197000235231889
best_error: 2.196607198468099
best_error: 2.1966071925137
best_error: 2.1965973975660305
best_error: 2.1965973942485686
best_error: 2.196590298496781
best_error: 2.196590295878047
best_error: 2.1964803766244834
best_error: 2.1964803745476567
best_error: 2.19632433011869
best_error: 2.196324327020194
best_error: 2.1959573077876424
best_error: 2.195957307074573
best_error: 2.19595730058984
best_error: 2.1957725507305037
best_error: 2.1957725236898233
best_error: 2.195422042592183
best_error: 2.195422038353421
best_error: 2.195406664998738
best_error: 2.1954066649143993
best_error: 2.1954031554226323
best_error: 2.195403155324965
best_error: 2.1953812077020998
best_error: 2.1953812076045898
best_error: 2.1953030508720106
best_error: 2.19530305077839
best_error: 2.1945640596742724
best_error: 2.194564059330481
best_error: 2.1929649412751924
best_error: 2.1929649274835015
best_error: 2.192964605973034
best_error: 2.192964591432247
best_error: 2.192810471251999
best_error: 2.1928104472386227
best_error: 2.192329293878195
best_error: 2.1923292656643163
best_error: 2.1919076721181647
best_error: 2.191907663530461
best_error: 2.1912674766095894
best_error: 2.191267446448326
best_error: 2.1910534537719166
best_error: 2.1910534279461453
best_error: 2.1907168228192693
best_error: 2.1907168035569224
best_error: 2.1903477055306486
best_error: 2.1903477013626143
best_error: 2.1901872379472964
best_error: 2.190187234096458
best_error: 2.190124914959034
best_error: 2.1901249110638417
best_error: 2.190115195859933
best_error: 2.19011519334077
best_error: 2.1901086929695617
best_error: 2.1901086922462367
best_error: 2.190096656181385
best_error: 2.1900966559001365
best_error: 2.1900818215945455
best_error: 2.1900818189048583
best_error: 2.1900657133987367
best_error: 2.1900657099242244
best_error: 2.19003196297086
best_error: 2.190031961699143
best_error: 2.190023854015314
best_error: 2.190023853548404
best_error: 2.1900143970090995
best_error: 2.190014396163414
best_error: 2.190000617120167
best_error: 2.190000615351408
best_error: 2.1899506981569967
best_error: 2.18995069722955
best_error: 2.189950580166163
best_error: 2.189950578967622
best_error: 2.18995057158862
best_error: 2.1899505700055455
best_error: 2.1899315289286476
best_error: 2.189931525998864
best_error: 2.1899167326588342
best_error: 2.189916728545413
