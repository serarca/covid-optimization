ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.512837395713833
best_error: 12.512837390687718
best_error: 12.51283737526991
best_error: 12.459963099583756
best_error: 12.459963093635661
best_error: 12.459963075966579
best_error: 10.608457386515187
best_error: 10.6084573498256
best_error: 10.608457336828236
best_error: 9.815109708043327
best_error: 9.815109628542181
best_error: 9.75493303972861
best_error: 9.75493295989232
best_error: 9.743544107998291
best_error: 9.743544028244003
best_error: 7.989893691493053
best_error: 7.989893543049322
best_error: 7.291869186277878
best_error: 7.291869086942554
best_error: 6.153768307900863
best_error: 6.1537675567255095
best_error: 5.390044518015674
best_error: 5.390044153511185
best_error: 5.242843491015298
best_error: 5.242843140317685
best_error: 3.7727507719676345
best_error: 3.7727507586746674
best_error: 3.7727506700818236
best_error: 3.6832048106417288
best_error: 3.6832047848338356
best_error: 3.6832047627801505
best_error: 3.673698815711588
best_error: 3.6736987887429997
best_error: 3.6736987756173933
best_error: 3.6509967190720394
best_error: 3.650996692037716
best_error: 3.650996691623093
best_error: 3.650808008195156
best_error: 3.6508079811619476
best_error: 3.6508079807381137
best_error: 3.650665677556699
best_error: 3.6506656505242696
best_error: 3.650665650093549
best_error: 3.650542530689889
best_error: 3.6505425036581487
best_error: 3.6505425032214607
best_error: 3.6504184205978842
best_error: 3.6504183935668495
best_error: 3.6504183931241254
best_error: 3.65029582900402
best_error: 3.6502958019736833
best_error: 3.650295801525001
best_error: 3.650216627740525
best_error: 3.6502166007106447
best_error: 3.6502166002581014
best_error: 3.6501869316612616
best_error: 3.650186904631558
best_error: 3.6501869041775064
best_error: 3.6501748465320025
best_error: 3.650174147263239
best_error: 3.650172371130192
best_error: 3.6501723441005955
best_error: 3.6501723436457842
best_error: 3.6501695750452763
best_error: 3.6501695480156924
best_error: 3.6501695475607416
best_error: 3.650169322754031
best_error: 3.650169295724451
best_error: 3.6501692952694884
best_error: 3.6501691103678864
best_error: 3.6501690833383
best_error: 3.650169082883332
best_error: 3.6501689657918535
best_error: 3.650168938762274
best_error: 3.6501689383072935
best_error: 3.6501687809886807
best_error: 3.6501687539591097
best_error: 3.6501687535041163
best_error: 3.6501686471860033
best_error: 3.6501686277141623
best_error: 3.650168600684595
best_error: 3.650168600229587
best_error: 3.650168578240164
best_error: 3.650168577785165
best_error: 3.6501685255336405
best_error: 3.6501684985040512
best_error: 3.650168498049063
best_error: 3.6501684917599526
best_error: 3.650168487349744
best_error: 3.6501684642753705
best_error: 3.6501684623352246
best_error: 3.650168462334803
best_error: 3.650166775707994
best_error: 3.650166748678739
best_error: 3.6501667482234934
best_error: 3.6501597258460556
best_error: 3.650159698817389
best_error: 3.6501596983616094
best_error: 3.6501315450675214
best_error: 3.650131518041107
best_error: 3.650131517583322
best_error: 3.650019120165194
best_error: 3.650019093147855
best_error: 3.6500190926819625
best_error: 3.649574160424367
best_error: 3.6495741334431395
best_error: 3.6495741329450317
best_error: 3.647879369494915
best_error: 3.6478793427790674
best_error: 3.6478793420313966
best_error: 3.642542437789922
best_error: 3.6425424125942056
best_error: 3.642542408362967
best_error: 3.6373752605997707
best_error: 3.6373752396507566
best_error: 3.6373752165464364
best_error: 3.6365246896071204
best_error: 3.6365246692616333
best_error: 3.636524642765615
best_error: 3.636041550131696
best_error: 3.6360415301659774
best_error: 3.63604150083562
best_error: 3.6359634394350255
best_error: 3.635963419632988
best_error: 3.635963389774707
best_error: 3.635893355251681
best_error: 3.635893335631048
best_error: 3.6358933047682775
best_error: 3.6356382366014435
best_error: 3.6356382173064827
best_error: 3.6356381845590935
best_error: 3.6092711254433394
best_error: 3.609271086105282
best_error: 3.56106945458233
best_error: 3.5610693947400587
best_error: 3.514357986023762
best_error: 3.514357857554978
best_error: 3.2331709457493227
best_error: 3.2331707223369412
best_error: 3.227061190766511
best_error: 3.2270609684266613
best_error: 3.2267264996811678
best_error: 3.226725901160625
best_error: 3.2266990952229335
best_error: 3.2266988729020936
best_error: 3.224649962474998
best_error: 3.2246493734547648
best_error: 3.2245973854485723
best_error: 3.22459716171488
best_error: 3.223335467465396
best_error: 3.2233348792252077
best_error: 3.2217135436774162
best_error: 3.2217131588647017
best_error: 3.21795622480336
best_error: 3.2179562248029674
best_error: 3.216506077069454
best_error: 3.2165060770690888
best_error: 3.2145478475707994
best_error: 3.214547847570417
best_error: 3.2115433779127205
best_error: 3.2115429988717077
best_error: 3.2078276369288403
best_error: 3.2078276369284637
best_error: 3.2068005167607403
best_error: 3.206800139118501
best_error: 3.2014484321153374
best_error: 3.201448051272469
best_error: 3.196238406734046
best_error: 3.196238406733683
best_error: 3.196238251500117
best_error: 3.1961567218961635
best_error: 3.196156350371523
best_error: 3.193692880606937
best_error: 3.1936928806065534
best_error: 3.1936927254133023
best_error: 3.193588447414138
best_error: 3.1935880776682986
best_error: 3.1856527242100077
best_error: 3.185652351528973
best_error: 3.185201396000568
best_error: 3.1852010304854534
best_error: 3.1819277132559574
best_error: 3.1819273444678946
best_error: 3.1816086153614958
best_error: 3.1816086153611005
best_error: 3.181608459755232
best_error: 3.1814922791099844
best_error: 3.181491910234372
best_error: 3.181191853194279
best_error: 3.181191484258475
best_error: 3.181133812302387
best_error: 3.1811334433581786
best_error: 3.1811325894339744
best_error: 3.181132220489596
best_error: 3.181132034090925
best_error: 3.181132030684849
best_error: 3.181132026405149
best_error: 3.1811320264030556
best_error: 3.1798872620252636
best_error: 3.179886892594762
best_error: 3.1773791715046795
best_error: 3.177378793118412
best_error: 3.1773787511500196
best_error: 3.1773783727586746
best_error: 3.177378116717815
best_error: 3.1773779520102705
best_error: 3.1773778393333982
best_error: 3.1773777560805905
best_error: 3.177377693464967
best_error: 3.1773776503905906
