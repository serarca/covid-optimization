ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 8.515706889205472
best_error: 8.515706856763696
best_error: 7.907868548696015
best_error: 7.907868460543648
best_error: 3.6125829416463127
best_error: 3.6125829385215638
best_error: 3.6062424494822176
best_error: 3.6062424494822154
best_error: 3.6062424462909584
best_error: 3.6047921952133435
best_error: 3.6047921952133413
best_error: 3.6047921919941777
best_error: 3.604165617078185
best_error: 3.6041656138204656
best_error: 3.6033862430056764
best_error: 3.603386158403603
best_error: 3.6033166162068797
best_error: 3.603316612927324
best_error: 3.6030288408958784
best_error: 3.6030288376120496
best_error: 3.602672647464155
best_error: 3.6026726441803367
best_error: 3.602575614741137
best_error: 3.602575611455147
best_error: 3.602521472911819
best_error: 3.602521469625006
best_error: 3.6024915233586183
best_error: 3.6024915200659855
best_error: 3.6024590725720125
best_error: 3.6024589883084026
best_error: 3.602455378300448
best_error: 3.602455375008012
best_error: 3.6024547991822353
best_error: 3.6024547958898028
best_error: 3.602454511606166
best_error: 3.6024545116061644
best_error: 3.602454508313734
best_error: 3.6024545063254387
best_error: 3.602454505252493
best_error: 3.6022350545431556
best_error: 3.602234968206132
best_error: 3.6021418192006784
best_error: 3.6021417328510124
best_error: 3.601773507541359
best_error: 3.6017734210558148
best_error: 3.601258814252649
best_error: 3.6012586285783383
best_error: 3.6000498242098713
best_error: 3.6000496386540073
best_error: 3.597823167470196
best_error: 3.597823080358443
best_error: 3.5913400418440915
best_error: 3.5913400418440893
best_error: 3.5913400384426395
best_error: 3.573396670826887
best_error: 3.5733966708268845
best_error: 3.5733966671567168
best_error: 3.561174468077012
best_error: 3.5611744653473965
best_error: 3.561174464050307
best_error: 3.5514274289210683
best_error: 3.5514274229847658
best_error: 3.5352030866076527
best_error: 3.5352030819200664
best_error: 3.5352030810314745
best_error: 3.512169652741869
best_error: 3.51216964965558
best_error: 3.512169645402447
best_error: 3.511913485883208
best_error: 3.5119134825374516
best_error: 3.511913478525463
best_error: 3.510929218550145
best_error: 3.5109292128018637
best_error: 3.5109292110579995
best_error: 3.5074997890009776
best_error: 3.507499776301316
best_error: 3.5017693094779028
best_error: 3.501769268798031
best_error: 3.501744755463271
best_error: 3.501744714594904
best_error: 3.5017249816275635
best_error: 3.5017249390009466
best_error: 3.4659132261868684
best_error: 3.465913160510985
best_error: 3.4244080830126244
best_error: 3.4244080830126125
best_error: 3.4244080830125454
best_error: 3.4244080780431387
best_error: 3.423068588290331
best_error: 3.4230685882903216
best_error: 3.4230685882902514
best_error: 3.4218660215097727
best_error: 3.421866021509758
best_error: 3.4218660215096968
best_error: 3.4212032593385673
best_error: 3.42120325933856
best_error: 3.421203259338495
best_error: 3.4208186980758386
best_error: 3.4208186980758257
best_error: 3.4208186980757644
best_error: 3.420591680066143
best_error: 3.4205916800661385
best_error: 3.4205916800660683
best_error: 3.42045856932281
best_error: 3.4204585693228013
best_error: 3.4204585693227343
best_error: 3.4203801428182437
best_error: 3.420380142818233
best_error: 3.4203801428181664
best_error: 3.420377041510845
best_error: 3.4203770415108337
best_error: 3.420377041510771
best_error: 3.420375079871208
best_error: 3.420375079871196
best_error: 3.4203750798711363
best_error: 3.42037383162088
best_error: 3.420373831620868
best_error: 3.420373831620806
best_error: 3.420373032462676
best_error: 3.4203730324626647
best_error: 3.4203730324625994
best_error: 3.4203725140230192
best_error: 3.4203725140230077
best_error: 3.4203725140229446
best_error: 3.4203721711202455
best_error: 3.4203721711202326
best_error: 3.4203721711201696
best_error: 3.4203719371987362
best_error: 3.4203719371987242
best_error: 3.4203719371986643
best_error: 3.420371769154444
best_error: 3.4203717691544306
best_error: 3.420371769154367
best_error: 3.420371636829543
best_error: 3.420371636829531
best_error: 3.420371636829471
best_error: 3.420371595502483
best_error: 3.4203715955024725
best_error: 3.420371595502408
best_error: 3.420371366977345
best_error: 3.4203713669773337
best_error: 3.4203713669772697
best_error: 3.420371171772461
best_error: 3.4203711717724503
best_error: 3.4203711717723886
best_error: 3.4203710775878653
best_error: 3.4203710775878546
best_error: 3.4203710775877902
best_error: 3.420371020259707
best_error: 3.420371020259696
best_error: 3.420371020259639
best_error: 3.42037097032467
best_error: 3.4203709703246603
best_error: 3.420370970324594
