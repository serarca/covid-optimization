ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.534036440016134
best_error: 10.534036392540193
best_error: 10.53403636706395
best_error: 9.972220448581826
best_error: 9.972220378071167
best_error: 9.972220363341659
best_error: 9.207811262738733
best_error: 9.20781116648818
best_error: 9.007429096296132
best_error: 9.00742899143918
best_error: 8.36581999997487
best_error: 8.3658198948891
best_error: 7.598315295840402
best_error: 7.598315242051338
best_error: 7.598315192258129
best_error: 3.9079644240110625
best_error: 3.9079643932631196
best_error: 3.454048171319358
best_error: 3.454047904816417
best_error: 3.156156642204735
best_error: 3.156156212813647
best_error: 2.7707506504917907
best_error: 2.770750256618087
best_error: 2.7699112028490775
best_error: 2.769911202830504
best_error: 2.6549515416526592
best_error: 2.6549511544244058
best_error: 2.6532831452150996
best_error: 2.653283145197186
best_error: 2.653266923662195
best_error: 2.6532665363194656
best_error: 2.65317465988168
best_error: 2.653174272532663
best_error: 2.6531673244795284
best_error: 2.653166937130002
best_error: 2.6531658572955585
best_error: 2.6531658572776533
best_error: 2.6531653890965448
best_error: 2.653165388328654
best_error: 2.343131877809605
best_error: 2.343131520456783
best_error: 2.336370445217615
best_error: 2.33637044519725
best_error: 1.9729434040595133
best_error: 1.9729430683729952
best_error: 1.9033186753228528
best_error: 1.9033186753001485
best_error: 1.6740553050062368
best_error: 1.6740549855655766
best_error: 1.6562658449172727
best_error: 1.656265530692011
best_error: 1.6287242346222404
best_error: 1.6287239127717204
best_error: 1.5859419685883958
best_error: 1.5859419685655904
best_error: 1.5853589706485864
best_error: 1.5853586405596438
best_error: 1.5678375012000259
best_error: 1.5678371698239388
best_error: 1.5609535476744703
best_error: 1.560953547651751
best_error: 1.558764893577804
best_error: 1.558764561903991
best_error: 1.5584028980577314
best_error: 1.55840256634472
best_error: 1.5582886484054848
best_error: 1.5582883166800823
best_error: 1.5582637203480343
best_error: 1.5582637203253478
best_error: 1.5582621900959213
best_error: 1.5582618583676777
best_error: 1.5582440074638089
best_error: 1.5582436757335942
best_error: 1.5582333132572295
best_error: 1.5582329815258478
best_error: 1.5582327522552175
best_error: 1.5582326808633318
best_error: 1.5582325850199847
best_error: 1.5582325485014517
best_error: 1.5582325261993393
best_error: 1.546625748488219
best_error: 1.5466257484656099
best_error: 1.545965623298017
best_error: 1.5459656232754344
best_error: 1.5434393003604918
best_error: 1.543439300337933
best_error: 1.5354477283389163
best_error: 1.5354477283163939
best_error: 1.5242672554215684
best_error: 1.5242672553989944
best_error: 1.5168507295764553
best_error: 1.5168507295536497
best_error: 1.5133806419901992
best_error: 1.5133806419668763
best_error: 1.513220957006987
best_error: 1.5132209569835713
best_error: 1.5130994291334408
best_error: 1.5130994291100077
best_error: 1.512933857134679
best_error: 1.5129338571111692
best_error: 1.512848566675858
best_error: 1.5128485666522593
best_error: 1.5128088598248692
best_error: 1.5128085025984788
best_error: 1.5127975887497782
best_error: 1.5127975887261647
best_error: 1.512727995199599
best_error: 1.5127279951759434
best_error: 1.5127201572919242
best_error: 1.5127201572682776
best_error: 1.5127163244756776
best_error: 1.5127163244520188
best_error: 1.5127110125243548
best_error: 1.5127106552888825
best_error: 1.4987899957828235
best_error: 1.4987899957613031
best_error: 1.496286790339351
best_error: 1.4962867903171286
best_error: 1.478217357229148
best_error: 1.478216996361771
best_error: 1.434833521962576
best_error: 1.4348335219420245
best_error: 1.4186642854963591
best_error: 1.4186642854758569
best_error: 1.4125088254953269
best_error: 1.4125088254761187
best_error: 1.4058594037564671
best_error: 1.4058594037369487
best_error: 1.4044524247054402
best_error: 1.4044520399807237
best_error: 1.4043933638936097
best_error: 1.4043933638740271
best_error: 1.4025663425763035
best_error: 1.4025663425565857
best_error: 1.4023977055435506
best_error: 1.4023977055237755
best_error: 1.4023077923617076
best_error: 1.4023077923420009
best_error: 1.4022438719374906
best_error: 1.4022438719177093
best_error: 1.4022405893959364
best_error: 1.4022405893761931
best_error: 1.4022403772780139
best_error: 1.4022403772583196
best_error: 1.4022402594042738
best_error: 1.4022402593845253
best_error: 1.4022402066869823
best_error: 1.402240206667248
best_error: 1.402240202139462
