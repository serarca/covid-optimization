ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 88
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.12306910675396
best_error: 96.12306895586082
best_error: 96.1230688761749
best_error: 14.686966252853278
best_error: 14.686966252840891
best_error: 14.686966231028507
best_error: 14.653295562296101
best_error: 14.653295539775657
best_error: 14.505835828115153
best_error: 14.505835802121052
best_error: 13.651116427759135
best_error: 13.651116388687734
best_error: 13.479534029974737
best_error: 13.479533992971334
best_error: 13.029766194907682
best_error: 13.029766163805842
best_error: 12.560272807359896
best_error: 12.560272751197786
best_error: 12.04839817359393
best_error: 12.048398074763783
best_error: 11.72604077275274
best_error: 11.726040661376565
best_error: 11.546749656080358
best_error: 11.546749595425744
best_error: 11.259053971353778
best_error: 11.25905394140991
best_error: 11.24476778613416
best_error: 11.244767755478327
best_error: 11.231814670542125
best_error: 11.231814639510777
best_error: 11.224254604194835
best_error: 11.224254572896578
best_error: 11.1999088658768
best_error: 11.199908833988571
best_error: 11.187463919717914
best_error: 11.187463891024354
best_error: 10.912299052400279
best_error: 10.912299027141037
best_error: 10.67177430078905
best_error: 10.671774276003532
best_error: 10.269259206803484
best_error: 10.269259188994699
best_error: 10.26925918194054
best_error: 10.200923739645527
best_error: 10.200923722410812
best_error: 10.200923714576312
best_error: 10.11888864060822
best_error: 10.118888631069671
best_error: 10.118888614361666
best_error: 9.840607299256082
best_error: 9.840607299256021
best_error: 9.840607296163489
best_error: 9.840607270535896
best_error: 9.080653040230732
best_error: 9.08065299562116
best_error: 8.49815620735107
best_error: 8.498156028542603
best_error: 8.320920244098858
best_error: 8.32092009871272
best_error: 8.210084773115472
best_error: 8.210084702416353
best_error: 8.08794025643559
best_error: 8.087940256435115
best_error: 8.08794025046804
best_error: 8.087940233647947
best_error: 8.080001325248274
best_error: 8.080001325247919
best_error: 8.080001319428753
best_error: 8.080001302346812
best_error: 8.048939717779517
best_error: 8.048939686188284
best_error: 8.04893968598251
best_error: 7.673580564372333
best_error: 7.673580532475029
best_error: 7.628284356613433
best_error: 7.628284292712178
best_error: 7.132708673148727
best_error: 7.132708631297485
best_error: 6.804112909856969
best_error: 6.80411290297586
best_error: 6.8041128985571016
best_error: 6.777900577410669
best_error: 6.777900573560657
best_error: 6.777900566484508
best_error: 6.767835537117568
best_error: 6.767835533912979
best_error: 6.767835533738419
best_error: 6.767835526345074
best_error: 6.7612057657971505
best_error: 6.761205762851623
best_error: 6.761205762488867
best_error: 6.761205755112232
best_error: 6.7607966828271095
best_error: 6.760796312572603
best_error: 6.7318864122742985
best_error: 6.7318863607211945
best_error: 6.723277295196455
best_error: 6.723277213632041
best_error: 6.718867840387208
best_error: 6.7188677310053855
best_error: 6.713381841516277
best_error: 6.713381299301352
best_error: 6.6679003347490395
best_error: 6.667899761620685
best_error: 6.531036845811934
best_error: 6.531036160339667
best_error: 6.3304460667053855
best_error: 6.330445566103526
best_error: 6.232483367751577
best_error: 6.232483362857072
best_error: 6.232483362260509
best_error: 6.232483357376396
best_error: 6.203460683021766
best_error: 6.203460679640646
best_error: 6.20346067807017
best_error: 6.203460672872074
best_error: 6.194620402139451
best_error: 6.194620399178277
best_error: 6.194620397421598
best_error: 6.194620392072081
best_error: 6.194403103099259
best_error: 6.194403100145325
best_error: 6.194403098389364
best_error: 6.1944030930411715
best_error: 6.19422425482529
best_error: 6.1942242519274675
best_error: 6.194224250184665
best_error: 6.194224244774969
best_error: 6.1940336721825995
best_error: 6.194033669291372
best_error: 6.194033667549254
best_error: 6.194033662140819
best_error: 6.1937210531953175
best_error: 6.193721050317667
best_error: 6.193721048616309
best_error: 6.193721043167714
best_error: 6.193386093129614
best_error: 6.193386090263788
best_error: 6.193386088563617
best_error: 6.193386083117327
best_error: 6.193190891783939
best_error: 6.193190888925011
best_error: 6.193190887225528
best_error: 6.193190881780577
best_error: 6.193185277681531
best_error: 6.193185274822787
best_error: 6.1931852731233255
best_error: 6.193185267678412
best_error: 6.193179021161897
best_error: 6.193179018303368
best_error: 6.193179016603922
best_error: 6.193179011159044
best_error: 6.19316910286661
best_error: 6.193169100008405
best_error: 6.193169098308998
best_error: 6.1931690928641805
best_error: 6.19315867247164
best_error: 6.19315866961378
best_error: 6.193158667914407
best_error: 6.193158662469655
best_error: 6.193152243446329
best_error: 6.193152240588684
best_error: 6.193152238889327
best_error: 6.193152233444619
best_error: 6.193152099633036
best_error: 6.193152096775394
best_error: 6.193152095076041
best_error: 6.193152089631334
best_error: 6.193151969220115
best_error: 6.193151966362481
best_error: 6.193151964663121
best_error: 6.193151959218418
best_error: 6.193151805366227
best_error: 6.193151802508595
best_error: 6.19315180080924
best_error: 6.193151795364539
best_error: 6.19315153945749
best_error: 6.193151536599871
best_error: 6.19315153490051
best_error: 6.193151529455811
best_error: 6.19315140691907
best_error: 6.193151404061451
best_error: 6.193151402362095
best_error: 6.1931513969174
best_error: 6.1931513173603445
best_error: 6.193151315671564
best_error: 6.193151313972203
best_error: 6.19315130852751
best_error: 6.1931512732223855
best_error: 6.193151270364778
best_error: 6.1931512686654155
best_error: 6.19315126322072
best_error: 6.193151215092288
best_error: 6.193151212234679
best_error: 6.193151210535319
best_error: 6.193151205090626
best_error: 6.19315118076425
best_error: 6.193151177906647
best_error: 6.193151176207283
best_error: 6.193151170762591
best_error: 6.193151159158736
best_error: 6.193151159146335
best_error: 6.19315115909629
best_error: 6.193151155031611
best_error: 6.1931511491334
best_error: 6.193151144279387
