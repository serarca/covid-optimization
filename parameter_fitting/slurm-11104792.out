ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 94
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.15024190015609
best_error: 100.15024170926111
best_error: 20.08536987880568
best_error: 20.085369878797252
best_error: 20.085369878704505
best_error: 20.085369877530127
best_error: 20.085184900637728
best_error: 20.0851849006293
best_error: 20.084442344754073
best_error: 20.084442344745625
best_error: 20.0814291423383
best_error: 20.08142914232975
best_error: 20.068646651011907
best_error: 20.068646651011903
best_error: 20.068646651002947
best_error: 20.00177399219376
best_error: 20.00177399219375
best_error: 20.00177399218253
best_error: 19.328495721446682
best_error: 19.32849572144309
best_error: 19.328495721412757
best_error: 19.328493800779363
best_error: 19.32849380077576
best_error: 19.32849380074544
best_error: 19.32848611581617
best_error: 19.32848611581257
best_error: 19.328486115782244
best_error: 19.328455339200826
best_error: 19.3284553391972
best_error: 19.328455339166904
best_error: 19.32833164060553
best_error: 19.328331640601856
best_error: 19.328331640571616
best_error: 19.327827113043
best_error: 19.327827113039085
best_error: 19.327827113009082
best_error: 19.325634555731362
best_error: 19.325634555726467
best_error: 19.325634555697466
best_error: 19.311862217915674
best_error: 19.311862217905635
best_error: 19.311862217881977
best_error: 19.277312386636613
best_error: 19.27731238661957
best_error: 19.27731238660373
best_error: 19.277312237709424
best_error: 19.27731223769237
best_error: 19.277312237676536
best_error: 19.277311641935416
best_error: 19.27731164191835
best_error: 19.277311641902525
best_error: 19.27730925779402
best_error: 19.277309257776903
best_error: 19.27730925776113
best_error: 19.277299704430323
best_error: 19.27729970441295
best_error: 19.27729970439743
best_error: 19.27726121752333
best_error: 19.277261217504975
best_error: 19.277261217490405
best_error: 19.277102580959774
best_error: 19.277102580937054
best_error: 19.277102580926723
best_error: 19.27636880009045
best_error: 19.27636880004187
best_error: 19.26808274030183
best_error: 19.268082739707936
best_error: 19.263766426910035
best_error: 19.263766425958742
best_error: 19.263685722990587
best_error: 19.263685722031767
best_error: 19.26335647322591
best_error: 19.26335647223636
best_error: 19.261929588694684
best_error: 19.26192958757016
best_error: 19.253888216982393
best_error: 19.253888215045947
best_error: 19.008915082488894
best_error: 19.008915042606304
best_error: 19.00891504114666
best_error: 18.9587660249291
best_error: 18.95876597586009
best_error: 18.958765974156567
best_error: 18.88135434406805
best_error: 18.881354280626294
best_error: 18.88135427831003
best_error: 18.307277379751632
best_error: 18.30727734148417
best_error: 18.307277328273667
best_error: 18.280937635348003
best_error: 18.280937634381033
best_error: 18.28093763435318
best_error: 18.280083436565
best_error: 18.280083434664597
best_error: 18.280070487358337
best_error: 18.280070487358334
best_error: 18.280070487358167
best_error: 18.28006725999301
best_error: 18.28006725809044
best_error: 18.280067148205852
best_error: 18.280067148205685
best_error: 18.28006492861489
best_error: 18.280064928614724
best_error: 18.28005605011099
best_error: 18.280056050110826
best_error: 18.280022273918714
best_error: 18.280022272006647
best_error: 18.279888898170196
best_error: 18.279888896229743
best_error: 18.279354857694617
best_error: 18.27935485768626
best_error: 18.279354855640417
best_error: 18.277511228809917
best_error: 18.277511227901545
best_error: 18.27751121527372
best_error: 18.271158602840476
best_error: 18.271158601245823
best_error: 18.271158594097603
best_error: 18.27115858068953
best_error: 18.253920778058202
best_error: 18.25392077349479
best_error: 18.253920734486854
best_error: 18.253920719838423
best_error: 18.238948244789665
best_error: 18.238948187817222
best_error: 18.238948172272092
best_error: 18.02276348320176
best_error: 18.02276338687105
best_error: 18.02276336356663
best_error: 17.931293065112246
best_error: 17.93129305203628
best_error: 17.931293048778777
best_error: 17.846600528334896
best_error: 17.846600506245146
best_error: 17.84660048349992
best_error: 17.837088588175217
best_error: 17.837088586718455
best_error: 17.837088585453703
best_error: 17.836465711629348
best_error: 17.836465710745994
best_error: 17.83646569957963
best_error: 17.83640336704681
best_error: 17.836403366452934
best_error: 17.836403357818313
best_error: 17.83636220078877
best_error: 17.836362200626805
best_error: 17.836362199169137
best_error: 17.836357957095128
best_error: 17.83635795693344
best_error: 17.83635795547475
best_error: 17.83635758523878
best_error: 17.836357585107947
best_error: 17.83635758260467
best_error: 17.836357543381474
best_error: 17.836357543250656
best_error: 17.836357540747333
best_error: 17.836357526193794
best_error: 17.83635752606294
best_error: 17.836357525461008
best_error: 17.83635592279994
best_error: 17.836355922669448
best_error: 17.836355920166845
best_error: 17.836352623720416
best_error: 17.83635262366421
best_error: 17.836352623590656
best_error: 17.836352621089514
best_error: 17.836174899112766
best_error: 17.836174899066584
best_error: 17.836174890017492
best_error: 17.836173759341097
best_error: 17.83617375929643
best_error: 17.836173750252165
best_error: 17.836173173373297
best_error: 17.836173173329442
best_error: 17.83617316428774
best_error: 17.836172862130887
best_error: 17.83617286208749
best_error: 17.836172853047174
best_error: 17.836172700977787
best_error: 17.83617270093461
best_error: 17.83617269189502
best_error: 17.836172617580615
best_error: 17.83617261753755
best_error: 17.836172608498337
best_error: 17.8361466522162
best_error: 17.83614665219699
best_error: 17.8361466431804
best_error: 17.836130134693793
best_error: 17.83613013469219
best_error: 17.836130125669627
best_error: 17.83612860940461
best_error: 17.836128609403392
best_error: 17.836128600377304
best_error: 17.836127796791367
best_error: 17.83612779679034
best_error: 17.836127787762408
best_error: 17.836127234391714
best_error: 17.836127234390812
best_error: 17.836127225361587
best_error: 17.8361269709945
best_error: 17.83612697099366
best_error: 17.83612696196384
best_error: 17.8361267734035
best_error: 17.83612677340272
best_error: 17.836126764372448
best_error: 17.836126724211926
best_error: 17.83612672415763
best_error: 17.836126721433953
best_error: 17.836126715857425
best_error: 17.836126715856672
best_error: 17.836126706826303
