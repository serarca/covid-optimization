ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 64
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 107.73123087574092
best_error: 107.73123067674157
best_error: 107.73123067001411
best_error: 20.663395986624483
best_error: 20.663395986623826
best_error: 20.663395985445877
best_error: 20.663305078792348
best_error: 20.663305077611213
best_error: 20.662939487059987
best_error: 20.66293948586863
best_error: 20.66144497527703
best_error: 20.66144497404335
best_error: 20.65489725608565
best_error: 20.654897254655836
best_error: 20.61372912184739
best_error: 20.613729118784754
best_error: 20.495992951112875
best_error: 20.495992940371284
best_error: 19.376604072803218
best_error: 19.37660393130408
best_error: 18.683812356587858
best_error: 18.683812127856434
best_error: 17.779963007711828
best_error: 17.779962660382797
best_error: 15.062033580184341
best_error: 15.062033003364025
best_error: 14.700296675779592
best_error: 14.700296637897313
best_error: 14.444388812841979
best_error: 14.44438842190991
best_error: 14.401000713032232
best_error: 14.401000708642584
best_error: 14.401000706551436
best_error: 14.398617194534406
best_error: 14.398617191056996
best_error: 14.398617188089403
best_error: 14.39799206497334
best_error: 14.39799203981595
best_error: 14.396771635494943
best_error: 14.396771622299282
best_error: 14.396573478232822
best_error: 14.39657347595749
best_error: 14.396573473890244
best_error: 14.396573471817257
best_error: 14.395885137841727
best_error: 14.39588513653635
best_error: 14.39588513241366
best_error: 14.39588513144722
best_error: 14.39490823844754
best_error: 14.394908238358262
best_error: 14.394908230462548
best_error: 14.392217639551282
best_error: 14.39221762508005
best_error: 14.388531546703653
best_error: 14.38853153075872
best_error: 14.388309505257858
best_error: 14.38830948927624
best_error: 14.388177357681624
best_error: 14.388177341678169
best_error: 14.388097190154443
best_error: 14.388097174137737
best_error: 14.38804314842462
best_error: 14.388043132399012
best_error: 14.388010920358749
best_error: 14.388010904327832
best_error: 14.387991617613707
best_error: 14.387991601579612
best_error: 14.387980024221422
best_error: 14.38798000818542
best_error: 14.387973013413443
best_error: 14.38797299737628
best_error: 14.387968748322187
best_error: 14.387968732284325
best_error: 14.387966140633441
best_error: 14.38796612459515
best_error: 14.387963337196645
best_error: 14.387963023160248
best_error: 14.387962734438384
best_error: 14.387962718399534
best_error: 14.38796240596994
best_error: 14.387962389931037
best_error: 14.387962271769052
best_error: 14.387962266346506
best_error: 14.387962124735147
best_error: 14.3875664734455
best_error: 14.38756646354426
best_error: 14.387276683788262
best_error: 14.387276683255259
best_error: 14.387276679814565
best_error: 14.387276677466122
best_error: 14.386996136906355
best_error: 14.386996135666623
best_error: 14.38699613416431
best_error: 14.386996130574214
best_error: 14.386322814479195
best_error: 14.38632281318603
best_error: 14.386322811849938
best_error: 14.38632280813944
best_error: 14.386286040764316
best_error: 14.386286039465798
best_error: 14.386286038152013
best_error: 14.38628603442414
best_error: 14.381153402168945
best_error: 14.381153398173911
best_error: 14.381153395781174
best_error: 14.37904584511993
best_error: 14.379045841006285
best_error: 14.379045838726881
best_error: 14.378071411988788
best_error: 14.378071407887134
best_error: 14.378071405593204
best_error: 14.377765078044266
best_error: 14.377765073927728
best_error: 14.377765071647888
best_error: 14.377557518166794
best_error: 14.37755751405281
best_error: 14.377557511769874
best_error: 14.377451596822368
best_error: 14.377451592709695
best_error: 14.377451590425174
best_error: 14.377327977507054
best_error: 14.377327973395834
best_error: 14.377327971109686
best_error: 14.377292790675481
best_error: 14.37729278656467
best_error: 14.377292784278067
best_error: 14.377271634386375
best_error: 14.377271630275812
best_error: 14.377271627988934
best_error: 14.377259832846761
best_error: 14.377259828736339
best_error: 14.377259826449304
best_error: 14.377252250551123
best_error: 14.37725224644079
best_error: 14.377252244153652
best_error: 14.377248265819993
best_error: 14.377248261709713
best_error: 14.377248259422519
best_error: 14.377245527128483
best_error: 14.37724552301823
best_error: 14.377245520731002
best_error: 14.377243689222356
best_error: 14.377243685112123
best_error: 14.377243682824876
best_error: 14.377243166146997
best_error: 14.377243139928058
best_error: 14.377242622513275
best_error: 14.377242618403058
best_error: 14.377242616115796
best_error: 14.377242524979437
best_error: 14.377242520869219
best_error: 14.377242518581953
best_error: 14.377242480333361
best_error: 14.377242454114441
best_error: 14.376709150257042
best_error: 14.376709146934843
best_error: 14.376709143860179
best_error: 14.374726984583395
best_error: 14.374726981330264
best_error: 14.374726978193557
best_error: 14.368621548726821
best_error: 14.368621545653795
best_error: 14.368621542349219
best_error: 14.360581405823407
best_error: 14.36058140288548
best_error: 14.36058139946198
best_error: 14.338375936330872
best_error: 14.338375935043914
best_error: 14.338375934583913
best_error: 14.338375929987807
best_error: 14.292029844835824
best_error: 14.292029501072399
best_error: 14.220041248947807
best_error: 14.220041244385161
best_error: 14.220041242507296
best_error: 14.219524540572351
best_error: 14.219524535537879
best_error: 14.219524533992015
best_error: 14.217917541339409
best_error: 14.217917531324144
best_error: 14.217917524709701
best_error: 14.126078923422902
best_error: 14.12607891792807
best_error: 14.126078917699573
best_error: 14.12607891111534
best_error: 13.593766166988171
best_error: 13.593766142393818
best_error: 13.593765777291365
best_error: 13.52599950210049
best_error: 13.525999500787028
best_error: 13.525999453623713
best_error: 13.495289031289943
best_error: 13.495288959358874
best_error: 13.449996868134328
best_error: 13.449996777854533
best_error: 13.447821733305286
best_error: 13.447821654932195
best_error: 13.445210157885075
best_error: 13.445210136675104
best_error: 13.445210129358323
best_error: 13.444756264705005
best_error: 13.444756216222121
best_error: 13.443156825011144
best_error: 13.443156789445439
best_error: 13.442190059313525
best_error: 13.442190024328085
best_error: 13.44181727043998
best_error: 13.441817270044883
best_error: 13.441817245502875
best_error: 13.441560552139212
best_error: 13.441560551722148
best_error: 13.441560527521505
best_error: 13.441477848326556
best_error: 13.4414778274847
best_error: 13.441477820752318
best_error: 13.441471336024554
best_error: 13.441471335607368
best_error: 13.441471311399154
best_error: 13.441468921151476
best_error: 13.441468920734286
best_error: 13.441468896525858
best_error: 13.44146678629632
best_error: 13.441466785879125
best_error: 13.441466761670515
best_error: 13.441465558341497
best_error: 13.441465557924301
best_error: 13.44146553371558
best_error: 13.441464491429652
best_error: 13.441464491012457
best_error: 13.441464466803641
best_error: 13.44146379302001
best_error: 13.44146379260281
best_error: 13.441463768393934
best_error: 13.441463214065994
best_error: 13.441463213648797
best_error: 13.441463189439869
best_error: 13.441462661375319
best_error: 13.441462660958123
best_error: 13.441462636749142
best_error: 13.441462290252469
best_error: 13.441462289835272
best_error: 13.441462265626264
best_error: 13.441461602809275
best_error: 13.441461602392073
best_error: 13.441461578183006
best_error: 13.441461331546321
best_error: 13.441461331129124
best_error: 13.44146130692003
best_error: 13.44146123323995
best_error: 13.441461232822753
best_error: 13.44146120861365
best_error: 13.441461150307969
best_error: 13.44146114989077
best_error: 13.441461125681661
best_error: 13.441461081811251
best_error: 13.441461081394053
best_error: 13.441461057184938
best_error: 13.44146103118526
best_error: 13.44146103076806
best_error: 13.441461006558942
best_error: 13.441460949640188
best_error: 13.441460949222988
best_error: 13.441460925013859
best_error: 13.441460912875435
best_error: 13.441460912458236
best_error: 13.441460888249106
best_error: 13.441460872885262
best_error: 13.441460872468063
best_error: 13.44146084825893
best_error: 13.44146084100285
best_error: 13.441460840585648
best_error: 13.441118043468157
best_error: 13.44111804336664
best_error: 13.441118008283865
best_error: 13.441096047109191
best_error: 13.441096047006983
best_error: 13.441096011918724
best_error: 13.441074470065281
best_error: 13.441074444701144
best_error: 13.44105284597363
best_error: 13.44105282059686
best_error: 13.441048547036996
best_error: 13.441048516210284
best_error: 13.441047161534096
best_error: 13.441047130706307
best_error: 13.441046130076995
best_error: 13.441046099248398
best_error: 13.44103834365147
best_error: 13.441038312816815
best_error: 13.44103829279619
best_error: 13.4410382729214
best_error: 13.441038244222991
best_error: 13.441038213502072
best_error: 13.441036332529084
best_error: 13.441036301692874
best_error: 13.441036298447445
best_error: 13.44103629521611
best_error: 13.441036267516909
best_error: 13.441036239922799
best_error: 13.441036226080328
best_error: 13.441036212290541
best_error: 13.44103620535681
best_error: 13.44103620075904
best_error: 13.441036196179073
best_error: 13.441036193850376
best_error: 13.441036192705287
best_error: 13.441036191564955
best_error: 13.441036190946893
best_error: 13.441036190634655
best_error: 13.441035923499214
best_error: 13.441035892662953
best_error: 13.44103559758937
best_error: 13.441035566753074
best_error: 13.441035087148922
best_error: 13.441035056312582
best_error: 13.44103480573072
best_error: 13.441034774894348
best_error: 13.441034463295969
best_error: 13.44103443618016
best_error: 13.441034132330843
best_error: 13.441034101494404
best_error: 13.44103398684874
best_error: 13.441033956012289
best_error: 13.441033942708959
best_error: 13.441033932632653
best_error: 13.441033925652949
