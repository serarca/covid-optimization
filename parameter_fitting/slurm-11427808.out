ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 74
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.133050517647245
best_error: 24.13305031923837
best_error: 4.734075162680982
best_error: 4.734075161617686
best_error: 4.733442460149288
best_error: 4.733442460137007
best_error: 4.733442460043159
best_error: 4.7308848532835865
best_error: 4.7308848532708705
best_error: 4.730884853176463
best_error: 4.720199294743367
best_error: 4.720199294728663
best_error: 4.720199294631999
best_error: 4.667657266465537
best_error: 4.667657266435
best_error: 4.667657266330635
best_error: 4.550016962885142
best_error: 4.550016962723738
best_error: 4.550016962674867
best_error: 3.81678690439471
best_error: 3.8167868857113003
best_error: 3.111482789391654
best_error: 3.111482751369804
best_error: 2.9759302899754916
best_error: 2.9759302519557003
best_error: 2.957960859180567
best_error: 2.957960795524307
best_error: 2.9520968405091255
best_error: 2.9520968071634974
best_error: 2.89207027261227
best_error: 2.8920702355633754
best_error: 2.501391198789714
best_error: 2.501391078902379
best_error: 2.488897695726994
best_error: 2.4888975848424963
best_error: 2.3053221755720132
best_error: 2.3053221300123217
best_error: 2.3053220972341375
best_error: 2.2729025895009975
best_error: 2.272902363865489
best_error: 2.2497461444435
best_error: 2.2497461013557376
best_error: 2.2069765538096133
best_error: 2.2069765490861526
best_error: 2.206976543422022
best_error: 2.184363337268812
best_error: 2.184363291232064
best_error: 2.1793932822339595
best_error: 2.179393236764115
best_error: 2.1763045802892704
best_error: 2.1763045353477284
best_error: 2.1744160079007657
best_error: 2.174415963882764
best_error: 2.173329830476379
best_error: 2.173329792423623
best_error: 2.1724701808039777
best_error: 2.172470158292164
best_error: 2.163994636858252
best_error: 2.1639946148684763
best_error: 2.141250527863475
best_error: 2.141250487987712
best_error: 2.1277482896731326
best_error: 2.1277482305847455
best_error: 1.8748184202820073
best_error: 1.8748183343310947
best_error: 1.6897515392677351
best_error: 1.6897513794633512
best_error: 1.5092624701746709
best_error: 1.509262376935974
best_error: 1.4861706513132331
best_error: 1.4861704536474623
best_error: 1.4468649033251397
best_error: 1.44686487003459
best_error: 1.4385603627706187
best_error: 1.4385602880240542
best_error: 1.4289516705275775
best_error: 1.428951646891515
best_error: 1.4237329145141338
best_error: 1.423732893359995
best_error: 1.4190544150675097
best_error: 1.4190544090933435
best_error: 1.4172592695760593
best_error: 1.4172592674776618
best_error: 1.4171437137829213
best_error: 1.4171437074076123
best_error: 1.4169852600451247
best_error: 1.4169852530628873
best_error: 1.4164108114957972
best_error: 1.4164107700311832
best_error: 1.4152630321818045
best_error: 1.4152630024131327
best_error: 1.405198710965836
best_error: 1.4051986949250466
best_error: 1.3907746739734825
best_error: 1.390774643644378
best_error: 1.3790602776937937
best_error: 1.3790602405211034
best_error: 1.3636317147453727
best_error: 1.3636316976946694
best_error: 1.3616384535966832
best_error: 1.3616384192977982
best_error: 1.3582279368553876
best_error: 1.358227917003378
best_error: 1.356188643239749
best_error: 1.3561886411704045
best_error: 1.3561886408725519
best_error: 1.3557060084101562
best_error: 1.355705977102967
best_error: 1.3553915565880112
best_error: 1.3553915544782629
best_error: 1.3553524940318393
best_error: 1.3553524904425922
best_error: 1.355277120355249
best_error: 1.3552771197622122
best_error: 1.3552771194857087
best_error: 1.3552771192585948
best_error: 1.3551096637673483
best_error: 1.3551096617217249
best_error: 1.3545369042677367
best_error: 1.3545368996486307
best_error: 1.3524641764172376
best_error: 1.3524641639230444
best_error: 1.3326745299848342
best_error: 1.3326744966183635
best_error: 1.3323341935070323
best_error: 1.332334150057683
best_error: 1.331973533364101
best_error: 1.331973478993454
best_error: 1.3107132272553221
best_error: 1.3107131845450213
best_error: 1.3071775618019745
best_error: 1.3071775450975602
best_error: 1.3037210155640588
best_error: 1.303721002607889
best_error: 1.3008756131803003
best_error: 1.3008755889894843
best_error: 1.2885107585452003
best_error: 1.2885107223574068
best_error: 1.2852426691692351
best_error: 1.285242635543716
best_error: 1.276495365823918
best_error: 1.276495358517334
best_error: 1.274339321702578
best_error: 1.2743392706556007
best_error: 1.2742531179400842
best_error: 1.2742530930728657
best_error: 1.2722230316913903
best_error: 1.2722230235599836
best_error: 1.2721904619359115
best_error: 1.272190452374674
best_error: 1.2718973156752957
best_error: 1.2718973127012525
best_error: 1.2718721479427466
best_error: 1.2718721442181502
best_error: 1.271860084698435
best_error: 1.2718600845207968
best_error: 1.2718600843748584
best_error: 1.2718522549454605
best_error: 1.2718522540690578
best_error: 1.2718346957049607
best_error: 1.271834694523741
best_error: 1.27182543626637
best_error: 1.2718254358925976
best_error: 1.27182543532902
best_error: 1.2718241902987522
best_error: 1.2718241889110635
best_error: 1.2718217624996928
best_error: 1.271821761969765
best_error: 1.271819504955297
best_error: 1.2718195047486434
best_error: 1.271818528525187
best_error: 1.2718185284533916
best_error: 1.2718185283850634
best_error: 1.2718155728965723
best_error: 1.2718155720591304
best_error: 1.2718052123389418
best_error: 1.2718052096572081
best_error: 1.2717895584088046
best_error: 1.2717895537548924
best_error: 1.2717651009757638
best_error: 1.271765094078655
best_error: 1.271721698840397
best_error: 1.2717216893466339
best_error: 1.2715767266474671
best_error: 1.2715767150833917
best_error: 1.2715019536978525
best_error: 1.271501948834579
best_error: 1.2711723438605953
best_error: 1.2711723371535126
best_error: 1.2702704464641252
best_error: 1.270270444784532
best_error: 1.2694441687392815
best_error: 1.2694441587851297
best_error: 1.2677575111258084
best_error: 1.267757511067471
best_error: 1.2677575079849273
best_error: 1.2676272251283374
best_error: 1.267627088364044
best_error: 1.2655752844727486
best_error: 1.2655752363513857
best_error: 1.262909294076204
best_error: 1.2629092401894284
best_error: 1.2620374121155478
best_error: 1.262037358751539
best_error: 1.2608776094283254
best_error: 1.2608775884002263
best_error: 1.2601587690987548
best_error: 1.2601587616910208
best_error: 1.2595781039272587
best_error: 1.2595781038486533
best_error: 1.2593383120279527
best_error: 1.2593383105056857
best_error: 1.2592208541060341
best_error: 1.2592208500162148
best_error: 1.2588000369695604
best_error: 1.258800019472377
best_error: 1.2586142674386962
best_error: 1.2586142672199145
best_error: 1.2586142659110608
best_error: 1.2585019619252098
best_error: 1.2585019599150504
best_error: 1.2584712714877817
best_error: 1.258471266057648
best_error: 1.258445428760889
best_error: 1.2584454241268155
best_error: 1.2584391642461263
best_error: 1.258439163585975
best_error: 1.2584368914597979
best_error: 1.258436891459481
best_error: 1.2584368914388437
best_error: 1.2584367469839493
best_error: 1.258436746468043
best_error: 1.2584365605176921
best_error: 1.2584365598413496
best_error: 1.258436487697196
best_error: 1.2584364873575382
best_error: 1.2584364175453526
best_error: 1.2584364172957718
best_error: 1.258436353593475
best_error: 1.2584363535384429
best_error: 1.2584363346235508
best_error: 1.258436334604406
best_error: 1.2584363277343764
best_error: 1.2584363277149375
best_error: 1.2584363253545903
best_error: 1.2584363253131419
best_error: 1.2584363220445525
best_error: 1.2584363219896395
best_error: 1.2584363211817782
best_error: 1.2584363211262997
best_error: 1.2584363209821827
best_error: 1.2584363208830103
