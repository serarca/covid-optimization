ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 22.01228187181033
best_error: 22.012281708226617
best_error: 11.929396213900437
best_error: 11.929396205384815
best_error: 11.929396179788636
best_error: 11.628599370208626
best_error: 11.628599360851716
best_error: 11.412077380270315
best_error: 11.41207737117064
best_error: 11.353251197268355
best_error: 11.35325118825532
best_error: 11.353251188023108
best_error: 11.299363895682754
best_error: 11.299363873304682
best_error: 11.299363844815364
best_error: 11.183299600099417
best_error: 11.183299566387351
best_error: 11.183299540556515
best_error: 11.176019168596223
best_error: 11.176019134138375
best_error: 11.1760191071508
best_error: 10.9729753677546
best_error: 10.972975303820842
best_error: 10.972975271824744
best_error: 10.731435300604389
best_error: 10.73143522344151
best_error: 10.731435154389443
best_error: 10.714747974060238
best_error: 10.7147479278384
best_error: 10.714747821725949
best_error: 10.709467475221185
best_error: 10.709467441447696
best_error: 10.709467321069026
best_error: 9.967966276193868
best_error: 9.967966233737428
best_error: 9.967966130354714
best_error: 7.215812240086817
best_error: 7.2158121095972145
best_error: 7.040428462829434
best_error: 7.040428361392047
best_error: 7.040428346537722
best_error: 6.890929530235439
best_error: 6.890929432573011
best_error: 6.890929413093039
best_error: 6.81752836199308
best_error: 6.817528260981917
best_error: 6.817528245324142
best_error: 6.811677834911642
best_error: 6.811677733237042
best_error: 6.811677718150863
best_error: 6.807203873724378
best_error: 6.807203771543472
best_error: 6.807203756893479
best_error: 6.804987919921327
best_error: 6.804987817489976
best_error: 6.804987803055738
best_error: 6.803800886488192
best_error: 6.8038007839217345
best_error: 6.803800769602368
best_error: 6.803162024223965
best_error: 6.80316192158482
best_error: 6.80316190732724
best_error: 6.802628806152244
best_error: 6.802628703452446
best_error: 6.802628689246433
best_error: 6.802388739675569
best_error: 6.8023886369484625
best_error: 6.802388622765652
best_error: 6.802176006254463
best_error: 6.80217590350316
best_error: 6.802175889340928
best_error: 6.802090621960637
best_error: 6.802090519199629
best_error: 6.802090505045649
best_error: 6.802036472483856
best_error: 6.802036369716689
best_error: 6.802036355567941
best_error: 6.802000628308716
best_error: 6.802000525537467
best_error: 6.802000511392177
best_error: 6.8019737957150035
best_error: 6.801973692940715
best_error: 6.801973678798005
best_error: 6.801959649217169
best_error: 6.801959546441267
best_error: 6.801959532299939
best_error: 6.801948871891914
best_error: 6.80194876911479
best_error: 6.801948754974504
best_error: 6.8019433920063115
best_error: 6.80194328922856
best_error: 6.801943275088817
best_error: 6.801939111573427
best_error: 6.801939008795188
best_error: 6.8019389946558375
best_error: 6.801937048146952
best_error: 6.801936945368482
best_error: 6.801936931229327
best_error: 6.801935381127564
best_error: 6.801935278348905
best_error: 6.801935264209916
best_error: 6.801934635738028
best_error: 6.801934518820388
best_error: 5.727593185769898
best_error: 5.727592974503522
best_error: 5.715646427353844
best_error: 5.715646214331784
best_error: 5.6667622745601545
best_error: 5.666762056953869
best_error: 5.621496289782732
best_error: 5.621496069586099
best_error: 5.6067851750869035
best_error: 5.606785175039529
best_error: 5.602664212712483
best_error: 5.6026639897610915
best_error: 5.602285802306097
best_error: 5.602285579299452
best_error: 5.602215789255252
best_error: 5.602215566238389
best_error: 5.602209508592409
best_error: 5.602209508546662
best_error: 5.602205837390402
best_error: 5.602205614372117
best_error: 5.60201022306558
best_error: 5.602010000019291
best_error: 5.6012436658527145
best_error: 5.601243665806576
best_error: 5.598260292415178
best_error: 5.598260292367719
best_error: 5.586478048319091
best_error: 5.586478048266384
best_error: 5.541851475991994
best_error: 5.541851475917211
best_error: 5.273109789647788
best_error: 5.2731095074177645
best_error: 5.266199012174507
best_error: 5.266198728878797
best_error: 5.238324330791508
best_error: 5.238324043237636
best_error: 5.237079361592277
best_error: 5.237079361306755
best_error: 5.237079316458373
best_error: 5.234142305431628
best_error: 5.234142017244438
best_error: 5.233700633638277
best_error: 5.233700345384298
best_error: 5.233326826428071
best_error: 5.23332653811755
best_error: 5.233305362640279
best_error: 5.233305074326534
best_error: 5.233291428526186
best_error: 5.233291140210326
best_error: 5.233270546928257
best_error: 5.233270258609237
best_error: 5.233265307064184
best_error: 5.233265018744385
best_error: 5.233263386287467
best_error: 5.233263097967356
best_error: 5.2332622466763
best_error: 5.233261958356023
best_error: 5.23326117256976
best_error: 5.233260884249328
best_error: 5.2332606859403406
best_error: 5.233260397619823
best_error: 5.233259696967514
best_error: 5.233259696925959
