ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.145007424647206
best_error: 10.145007380618992
best_error: 9.333728208834117
best_error: 9.333728104055709
best_error: 7.83944980365313
best_error: 7.839449570532059
best_error: 6.161672044225172
best_error: 6.161671727870709
best_error: 5.609073448263635
best_error: 5.609073409291358
best_error: 5.60907325040091
best_error: 5.576804673519339
best_error: 5.576804609332286
best_error: 5.576804526360376
best_error: 4.775474178858761
best_error: 4.775474116485385
best_error: 4.648147281719519
best_error: 4.648147179777896
best_error: 4.184738117382936
best_error: 4.184738093293175
best_error: 4.118784165184389
best_error: 4.118784059577473
best_error: 4.101220952694248
best_error: 4.1012209002813185
best_error: 4.0987320482198175
best_error: 4.0987320405181755
best_error: 4.096225631529865
best_error: 4.096225628313352
best_error: 4.09622562427882
best_error: 4.093377197803939
best_error: 4.0933771959667755
best_error: 4.093377190530393
best_error: 4.092226722133239
best_error: 4.0922267184388295
best_error: 4.092226714826571
best_error: 4.086975252457066
best_error: 4.086975246080009
best_error: 4.086975245068132
best_error: 4.043408183137824
best_error: 4.0434081673783755
best_error: 3.984441973317697
best_error: 3.984441910384887
best_error: 3.916006492576055
best_error: 3.916006444070198
best_error: 3.825536030027292
best_error: 3.825535975821734
best_error: 3.7888929519946055
best_error: 3.7888929049004103
best_error: 3.7395243345623905
best_error: 3.739524195326252
best_error: 3.7356070148076483
best_error: 3.735606999977391
best_error: 3.735049621125602
best_error: 3.735049611654902
best_error: 3.7347430532782333
best_error: 3.7347430451893495
best_error: 3.734735264706407
best_error: 3.7347352515494086
best_error: 3.7325923367036054
best_error: 3.732592335618878
best_error: 3.732592332231293
best_error: 3.726977778153028
best_error: 3.7269777576891996
best_error: 3.722857029166657
best_error: 3.7228570082333605
best_error: 3.709764730311907
best_error: 3.7097647128456925
best_error: 3.706164499282302
best_error: 3.7061644841550754
best_error: 3.7053497298092517
best_error: 3.7053497164323232
best_error: 3.7052721692318817
best_error: 3.7052721554759565
best_error: 3.705244720587744
best_error: 3.705244707219085
best_error: 3.7051952621869724
best_error: 3.7051952488650164
best_error: 3.7046494601082074
best_error: 3.704649447511861
best_error: 3.697358377348825
best_error: 3.697358363613111
best_error: 3.695377818121579
best_error: 3.695377806434179
best_error: 3.694699214068651
best_error: 3.694699206807807
best_error: 3.6946049718390563
best_error: 3.6946049650636446
best_error: 3.6945401329218135
best_error: 3.6945401267186866
best_error: 3.6945381725496915
best_error: 3.6945381664666903
best_error: 3.694534160151952
best_error: 3.694534154062886
best_error: 3.6945319789436675
best_error: 3.694531972851299
best_error: 3.6945310046989865
best_error: 3.6945309986051518
best_error: 3.694526479474073
best_error: 3.6945264659033925
best_error: 3.6945264245481924
best_error: 3.694526418447441
best_error: 3.6945263559766195
best_error: 3.6945263498757597
best_error: 3.6945263039350196
best_error: 3.6945262978340723
best_error: 3.6945261298233776
best_error: 3.6945261237221496
best_error: 3.694526033281303
best_error: 3.694526027179921
best_error: 3.6945260221310527
best_error: 3.6945260160296565
best_error: 3.694526015509859
best_error: 3.6945260094084498
best_error: 3.694526006202737
best_error: 3.6945259926320544
best_error: 3.6945081193012514
best_error: 3.6945081124882058
best_error: 3.6945027421349215
best_error: 3.694502734978171
best_error: 3.694502387958292
best_error: 3.694502379672212
best_error: 3.694500771481419
best_error: 3.694500763462537
best_error: 3.6944999209850353
best_error: 3.6944999135403167
best_error: 3.69449336486705
best_error: 3.694493357428017
best_error: 3.694479899095208
best_error: 3.6944798859601335
best_error: 3.6944683805201386
best_error: 3.6944683673883754
best_error: 3.6943024825571613
best_error: 3.694302469271938
best_error: 3.6942881699137837
best_error: 3.6942881566074233
best_error: 3.6942252073040605
best_error: 3.6942252002211653
best_error: 3.6942249353687373
best_error: 3.6942249222397416
best_error: 3.6942247784646547
best_error: 3.694224771380289
best_error: 3.6942247118048215
best_error: 3.6942247047202263
best_error: 3.6942246921813817
best_error: 3.6942246850967138
best_error: 3.6942246845118647
