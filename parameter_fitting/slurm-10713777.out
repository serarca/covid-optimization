ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.151344556852735
best_error: 12.151344495799332
best_error: 12.151344491190812
best_error: 11.771255181265836
best_error: 11.771255091377174
best_error: 10.441946808596406
best_error: 10.441946610808445
best_error: 9.02196512223366
best_error: 9.021964841448922
best_error: 8.423855843268383
best_error: 8.423855573603223
best_error: 8.404861040093827
best_error: 8.404860818119555
best_error: 7.3281283755749005
best_error: 7.328128164028656
best_error: 6.358058986624625
best_error: 6.35805877136519
best_error: 5.9703344986759275
best_error: 5.970334283632788
best_error: 5.789819263411921
best_error: 5.7898190527028905
best_error: 5.702534806804498
best_error: 5.702534589725996
best_error: 5.644140930095393
best_error: 5.644140708854357
best_error: 5.6370359099154115
best_error: 5.637035687890383
best_error: 5.636339414285998
best_error: 5.636339192184121
best_error: 5.636121739668679
best_error: 5.636121517542797
best_error: 5.636068552606412
best_error: 5.636068330474656
best_error: 5.636048105108252
best_error: 5.636047849857558
best_error: 4.7750098776380945
best_error: 4.775009373137118
best_error: 4.708725820502009
best_error: 4.708725396047353
best_error: 4.5713579588967885
best_error: 4.571357516005417
best_error: 4.563674562668961
best_error: 4.5636743570546
best_error: 4.535329170940063
best_error: 4.5353287231547
best_error: 4.528337488387785
best_error: 4.528337284788241
best_error: 4.447218576405547
best_error: 4.447218379551511
best_error: 4.4286767110434155
best_error: 4.428676538211538
best_error: 4.427249073574307
best_error: 4.427248531581707
best_error: 4.426937028809737
best_error: 4.426936863382913
best_error: 4.426853090284977
best_error: 4.426852543711735
best_error: 4.42660883870936
best_error: 4.426608289944005
best_error: 4.425808427346991
best_error: 4.425808265138517
best_error: 4.422164470734831
best_error: 4.4221643152217
best_error: 4.216925800105712
best_error: 4.2169251970723005
best_error: 4.150221071021987
best_error: 4.150220904315711
best_error: 4.136086604809195
best_error: 4.136086030729598
best_error: 4.087876083768793
best_error: 4.087875915526923
best_error: 4.086216740353221
best_error: 4.086216216716792
best_error: 4.077272677319538
best_error: 4.077272164919265
best_error: 3.9920098846941667
best_error: 3.992009372648463
best_error: 3.91547946234031
best_error: 3.915478991135389
best_error: 3.9098526239005627
best_error: 3.9098521883755515
best_error: 3.876579622703785
best_error: 3.876579211284891
best_error: 3.7163387941199675
best_error: 3.7163384010838643
best_error: 3.700357325567648
best_error: 3.7003572185728237
best_error: 3.700357186875694
best_error: 3.697319873682197
best_error: 3.6973194828227003
best_error: 3.6730779238953577
best_error: 3.6730778143446563
best_error: 3.67307778567608
best_error: 3.6729635562450804
best_error: 3.6729631657620363
best_error: 3.6728133756912853
best_error: 3.6728132662313846
best_error: 3.6728132374653093
best_error: 3.6541029844287767
best_error: 3.6541029119059254
best_error: 3.6541028402800437
best_error: 3.51515176944069
best_error: 3.5151513802305008
best_error: 3.4130835000093946
best_error: 3.413083055180547
best_error: 3.398055834397047
best_error: 3.39805579702758
best_error: 3.3980556922847605
best_error: 3.380839520774047
best_error: 3.3808390752932054
best_error: 3.379576448305538
best_error: 3.3795764121243597
best_error: 3.379576306776299
best_error: 3.3784095785971866
best_error: 3.378409132902925
best_error: 3.3779684509634635
best_error: 3.3779684147133766
best_error: 3.377968309479642
best_error: 3.377482431151757
best_error: 3.377481985376229
best_error: 3.3774253175370377
best_error: 3.3774248717564834
best_error: 3.3774128534372583
best_error: 3.3774124076556222
best_error: 3.377409759254417
best_error: 3.3774093134725094
best_error: 3.3774089131148344
best_error: 3.3774084673328533
best_error: 3.3774083713182446
best_error: 3.3774083383236055
best_error: 3.3774083340030447
best_error: 3.3774083084595925
best_error: 3.3774083084366486
best_error: 3.3774082765218427
