ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 15
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 97.05834947627451
best_error: 97.05834940224099
best_error: 97.0583493826326
best_error: 97.05834933877061
best_error: 97.05834930639338
best_error: 18.276975040400995
best_error: 18.276974791761923
best_error: 18.276973058096537
best_error: 15.915166158893351
best_error: 15.91516615845915
best_error: 15.91516613172652
best_error: 15.855367859548055
best_error: 15.855367859071897
best_error: 15.855367829567598
best_error: 15.559448885545022
best_error: 15.5594488849469
best_error: 15.559448839489892
best_error: 9.770140528546838
best_error: 9.770140295085506
best_error: 9.535265814395867
best_error: 9.535265720243322
best_error: 9.492952949250325
best_error: 9.492952877524672
best_error: 9.43685627446798
best_error: 9.43685625350306
best_error: 9.436856245750697
best_error: 9.429088336161984
best_error: 9.429088266858328
best_error: 9.42776510482628
best_error: 9.42776503566476
best_error: 9.427613468283452
best_error: 9.427613447507312
best_error: 9.427613439749877
best_error: 9.427554472232693
best_error: 9.4275544030492
best_error: 9.427445781467634
best_error: 9.427445760694733
best_error: 9.427445752936766
best_error: 9.323671171001902
best_error: 9.323671150008092
best_error: 9.323671143752112
best_error: 8.872774220604118
best_error: 8.87277419849521
best_error: 8.872774195591997
best_error: 8.606543298291728
best_error: 8.606543263833334
best_error: 8.454411211388978
best_error: 8.45441116987524
best_error: 7.998916483728161
best_error: 7.998916427797402
best_error: 7.7525703564482225
best_error: 7.7525703095487035
best_error: 7.603580869330406
best_error: 7.603580832507165
best_error: 7.6026548230069295
best_error: 7.602654786229786
best_error: 7.602467760290307
best_error: 7.602467723522518
best_error: 7.602391128136272
best_error: 7.602391091372313
best_error: 7.602356180879392
best_error: 7.602356144117188
best_error: 7.602315540368237
best_error: 7.6023155389387345
best_error: 7.6023155313528115
best_error: 7.499012816208685
best_error: 7.4990127859890405
best_error: 7.433917134296498
best_error: 7.433917045052733
best_error: 7.430048610390217
best_error: 7.430048519667757
best_error: 7.416231316394446
best_error: 7.41623120873732
best_error: 7.4073798841207985
best_error: 7.407379865846004
best_error: 7.401101859827028
best_error: 7.40110184200743
best_error: 7.397333839005063
best_error: 7.397333821550012
best_error: 7.381424485429797
best_error: 7.381424467933229
best_error: 7.327176848440351
best_error: 7.327176832049094
best_error: 7.315445090502246
best_error: 7.315445074284873
best_error: 7.29401112991872
best_error: 7.294011114186597
best_error: 7.266648095207454
best_error: 7.2666480806776015
best_error: 7.261408914062656
best_error: 7.26140889963065
best_error: 7.258827208847146
best_error: 7.258827194497045
best_error: 7.257241135820765
best_error: 7.257241121326816
best_error: 7.256266826097573
best_error: 7.2562668118316545
best_error: 7.256234117253158
best_error: 7.25623410275535
best_error: 7.178833445245659
best_error: 7.17883343187645
best_error: 7.178182625405906
best_error: 7.1781824598201975
best_error: 7.178060033225023
best_error: 7.178060019936772
best_error: 7.177509235608052
best_error: 7.177509222407835
best_error: 7.177446385239108
best_error: 7.1774463720397925
best_error: 7.17744139587499
best_error: 7.1774412302035016
best_error: 7.152217764245275
best_error: 7.152217762754788
best_error: 7.1522177362556025
best_error: 7.1468951417317275
best_error: 7.146895141653379
best_error: 7.1468951006298065
best_error: 7.132862041784552
best_error: 7.132862040207918
best_error: 7.132862011054733
best_error: 7.111182608707482
best_error: 7.111182512981373
best_error: 7.102164065308654
best_error: 7.102164052677838
best_error: 7.089785751487129
best_error: 7.089785740832121
best_error: 7.059688789950243
best_error: 7.059688777914794
best_error: 7.046201336489931
best_error: 7.046201325084911
best_error: 7.045556616784142
best_error: 7.045556605217191
best_error: 7.019804478482632
best_error: 7.019804473430931
best_error: 7.019804419801028
best_error: 6.963973994192715
best_error: 6.963973977312024
best_error: 6.828754479748506
best_error: 6.828754464212989
best_error: 6.7215855929795625
best_error: 6.7215852759781605
best_error: 6.687979663097746
best_error: 6.687979639293387
best_error: 6.6421366089397935
best_error: 6.64213659015012
best_error: 6.532959712900075
best_error: 6.532959712705074
best_error: 6.532959702107273
best_error: 6.500489906704045
best_error: 6.500489905628495
best_error: 6.500489894137777
best_error: 6.50048988986383
best_error: 6.370215751719861
best_error: 6.370215751719858
best_error: 6.370215731522935
best_error: 6.0459650080078715
best_error: 6.045964983705638
best_error: 6.020253851453554
best_error: 6.020253820090796
best_error: 5.930035914158705
best_error: 5.930035906883049
best_error: 5.930035900204883
best_error: 5.930035894452868
best_error: 5.8778188587610956
best_error: 5.877818837862048
best_error: 5.820766681165322
best_error: 5.82076666119527
