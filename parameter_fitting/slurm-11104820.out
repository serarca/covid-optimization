ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 96
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 89.71470102064248
best_error: 89.71470061566757
best_error: 27.291570380620758
best_error: 27.29157038060829
best_error: 27.29157038046046
best_error: 27.291570379059227
best_error: 27.291469934649346
best_error: 27.29146993463687
best_error: 27.291067505788003
best_error: 27.291067505775512
best_error: 27.289447396145757
best_error: 27.289447396133202
best_error: 27.282795737211586
best_error: 27.28279573719876
best_error: 27.25309498024988
best_error: 27.253094980235826
best_error: 27.044383492234694
best_error: 27.044383492211892
best_error: 26.31336204662087
best_error: 26.313362046567693
best_error: 26.3133601928909
best_error: 26.313360192890897
best_error: 26.313360192837724
best_error: 26.31335277661346
best_error: 26.313352776560286
best_error: 26.313323089760846
best_error: 26.313323089707673
best_error: 26.313203993043995
best_error: 26.31320399299082
best_error: 26.312721924734053
best_error: 26.31272192468089
best_error: 26.310696381026418
best_error: 26.3106963809733
best_error: 26.300471861009534
best_error: 26.300471860956648
best_error: 26.232687309251094
best_error: 26.23268730925053
best_error: 26.232687309200042
best_error: 26.232687206305393
best_error: 26.232687206304817
best_error: 26.23268720625434
best_error: 26.232686794522444
best_error: 26.232686794521857
best_error: 26.232686794471388
best_error: 26.232685147389464
best_error: 26.23268514738889
best_error: 26.23268514733841
best_error: 26.232678558838746
best_error: 26.23267855883816
best_error: 26.232678558787693
best_error: 26.23265220433446
best_error: 26.232652204333846
best_error: 26.232652204283408
best_error: 26.232546781481417
best_error: 26.232546781480703
best_error: 26.23254678143036
best_error: 26.23212501187659
best_error: 26.232125011875432
best_error: 26.232125011825524
best_error: 26.23043662855649
best_error: 26.230436628553438
best_error: 26.230436628505394
best_error: 26.227844979268216
best_error: 26.227844979261832
best_error: 26.22784497808301
best_error: 26.22784497807663
best_error: 26.227844973341767
best_error: 26.227844973335387
best_error: 26.227844954369232
best_error: 26.227844954362833
best_error: 26.2278448783586
best_error: 26.227844878352197
best_error: 26.22784457238452
best_error: 26.227844572378054
best_error: 26.227843317330375
best_error: 26.227843317323636
best_error: 26.227837782112715
best_error: 26.22783778210488
best_error: 26.227806259533537
best_error: 26.2278062595204
best_error: 26.227428603939885
best_error: 26.22742860388373
best_error: 26.169897848460053
best_error: 26.16989784166841
best_error: 26.105774311604698
best_error: 26.10577431094097
best_error: 26.105774294837243
best_error: 25.967264586029216
best_error: 25.967264561016176
best_error: 25.967264544429828
best_error: 25.62403359894982
best_error: 25.624033581268712
best_error: 25.408232738118187
best_error: 25.408232738030417
best_error: 25.40823273518029
best_error: 25.408087404848196
best_error: 25.408087404529912
best_error: 25.408048774820717
best_error: 25.40804877450391
best_error: 25.408048487601803
best_error: 25.4080484855078
best_error: 25.40804825206702
best_error: 25.40804825175023
best_error: 25.40804818325468
best_error: 25.408048181160606
best_error: 25.408047719270535
best_error: 25.408047718953746
best_error: 25.408039182925844
best_error: 25.40803918260921
best_error: 25.408030643711058
best_error: 25.408030643394564
best_error: 25.407996472666017
best_error: 25.407996472350078
best_error: 25.407859561303724
best_error: 25.407859560989937
best_error: 25.407308267555724
best_error: 25.407308267250688
best_error: 25.40504663312933
best_error: 25.40504663284416
best_error: 25.39532366523605
best_error: 25.39532366469565
best_error: 25.335065806902513
best_error: 25.335065803868982
best_error: 25.187197118291444
best_error: 25.187197031743302
best_error: 25.18719699134826
best_error: 24.930246458487957
best_error: 24.93024645253243
best_error: 24.929221636494006
best_error: 24.929221632413295
best_error: 24.928995348742397
best_error: 24.928995347937885
best_error: 24.928995344411906
best_error: 24.928757125775753
best_error: 24.928757125664045
best_error: 24.928757124245045
best_error: 24.928757122421366
best_error: 24.927571622933414
best_error: 24.92757162146161
best_error: 24.927571619477398
best_error: 24.92263629132453
best_error: 24.922636291095262
best_error: 24.92263628657098
best_error: 24.899496035153085
best_error: 24.899496033090305
best_error: 24.89949601300201
best_error: 24.80697505870967
best_error: 24.806975058708947
best_error: 24.80697505607379
best_error: 24.80140551091976
best_error: 24.80140551052999
best_error: 24.80140550252007
best_error: 24.801321090952587
best_error: 24.80132109095187
best_error: 24.801321089710132
best_error: 24.796902311626585
best_error: 24.79690231162588
best_error: 24.796902310245613
best_error: 24.793391645965173
best_error: 24.79339164529605
best_error: 24.793391634906467
best_error: 24.791364019494328
best_error: 24.791364017826368
best_error: 24.791363999485345
best_error: 24.790568131176034
best_error: 24.79056812944967
best_error: 24.790568110632357
best_error: 24.79050525011522
best_error: 24.790505250114535
best_error: 24.7905052499128
best_error: 24.79049804162224
best_error: 24.79049804162155
best_error: 24.79049804141344
best_error: 24.790496348853935
best_error: 24.790496348853246
best_error: 24.79049634864367
best_error: 24.790495289091595
best_error: 24.79049528909159
best_error: 24.790495289090906
best_error: 24.790495288880415
best_error: 24.790494864645897
best_error: 24.790494864645893
best_error: 24.790494864645208
best_error: 24.790494864434347
best_error: 24.790494847527302
best_error: 24.790494847526617
best_error: 24.790494847315745
best_error: 24.79049483662917
best_error: 24.79049483662848
