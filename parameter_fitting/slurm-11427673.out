ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 90
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 18.895294743835894
best_error: 18.89529387875677
best_error: 5.078735467826112
best_error: 5.078735467676559
best_error: 5.078733042654358
best_error: 5.078733042652932
best_error: 5.07873304265168
best_error: 5.078723338737945
best_error: 5.07872333873652
best_error: 5.0787233387352675
best_error: 5.078684471315446
best_error: 5.078684471314011
best_error: 5.078684471312765
best_error: 5.078528167926343
best_error: 5.078528167924876
best_error: 5.078528167923647
best_error: 5.0778892454833615
best_error: 5.077889245481755
best_error: 5.0778892454806
best_error: 5.075086981311013
best_error: 5.075086981308596
best_error: 5.075086981307942
best_error: 5.055995800302009
best_error: 5.055995800264033
best_error: 5.055823765824032
best_error: 5.05582376578521
best_error: 5.0555980945166565
best_error: 5.055598094476702
best_error: 4.786991777935894
best_error: 4.786991756657647
best_error: 4.724312102198052
best_error: 4.72431207373232
best_error: 4.628046672072341
best_error: 4.628046633356039
best_error: 4.329787058387704
best_error: 4.329786986081604
best_error: 4.097554546256622
best_error: 4.0975544211548245
best_error: 3.9345499206682812
best_error: 3.9345497614705365
best_error: 3.8297837284052485
best_error: 3.829783633714797
best_error: 3.827536999009939
best_error: 3.827536952534121
best_error: 3.819722584479521
best_error: 3.819722572731091
best_error: 3.819722542809958
best_error: 3.7063326238499825
best_error: 3.7063325054977425
best_error: 3.587040850474892
best_error: 3.5870407972951206
best_error: 3.5799875369593286
best_error: 3.5799874031538135
best_error: 3.5713315405579937
best_error: 3.5713315338127867
best_error: 3.5702471826711837
best_error: 3.5702471697260045
best_error: 3.569863335395247
best_error: 3.569863334806957
best_error: 3.569863333469334
best_error: 3.5696603795336914
best_error: 3.569660370001644
best_error: 3.569129320189729
best_error: 3.569129298740177
best_error: 3.5670310226062374
best_error: 3.5670309715765383
best_error: 3.5627823816077346
best_error: 3.5627823002166092
best_error: 3.5492004347124526
best_error: 3.549200312074813
best_error: 3.4718087968777973
best_error: 3.471808635986178
best_error: 3.3995404417955966
best_error: 3.3995403578414947
best_error: 2.959926878783319
best_error: 2.9599266381906286
best_error: 2.929848609731173
best_error: 2.929848376013723
best_error: 2.8867085839212847
best_error: 2.886708336551529
best_error: 2.8697628774377226
best_error: 2.8697626209750253
best_error: 2.788762369235381
best_error: 2.7887623299859343
best_error: 2.6799679498455355
best_error: 2.679967940075341
best_error: 2.549587216917586
best_error: 2.5495871899664193
best_error: 2.535172008589366
best_error: 2.5351720078816182
best_error: 2.535172007069548
best_error: 2.5351720030364806
best_error: 2.5302937915289725
best_error: 2.5302937785972155
best_error: 2.5291607370724063
best_error: 2.529160712640262
best_error: 2.528252748649483
best_error: 2.5282527453892674
best_error: 2.528252744988811
best_error: 2.5263552965807796
best_error: 2.5263552845764417
best_error: 2.521838679607539
best_error: 2.5218386566667226
best_error: 2.516500290965272
best_error: 2.5165002449307066
best_error: 2.5112490448370735
best_error: 2.5112489904999324
best_error: 2.4919409176217386
best_error: 2.4919408409064467
best_error: 2.486813603953222
best_error: 2.4868135230405866
best_error: 2.4822164016251924
best_error: 2.482216318317404
best_error: 2.477753153694134
best_error: 2.477753070527443
best_error: 2.475166763778427
best_error: 2.4751666679368
best_error: 2.4724924577906826
best_error: 2.4724922745127933
best_error: 2.3447630291538557
best_error: 2.3447629955032387
best_error: 2.3157739967990394
best_error: 2.3157739312344376
best_error: 2.304854908148315
best_error: 2.304854904550722
best_error: 2.304854904382644
best_error: 2.285785054522394
best_error: 2.285785052415171
best_error: 2.285785050374133
best_error: 2.267704572829714
best_error: 2.2677045411821593
best_error: 2.264453303490804
best_error: 2.2644532160683726
best_error: 2.2419521750051814
best_error: 2.2419521080821814
best_error: 2.2341155012737874
best_error: 2.234115478071823
best_error: 2.2336291753338475
best_error: 2.2336291704327342
best_error: 2.232934593454491
best_error: 2.2329345730907026
best_error: 2.2323182864992694
best_error: 2.232318263534848
best_error: 2.230202070205205
best_error: 2.2302020580680804
best_error: 2.228435587582704
best_error: 2.228435579043154
best_error: 2.2257062643272714
best_error: 2.2257062631048004
best_error: 2.225597209775234
best_error: 2.2255972092649
best_error: 2.2254537509531787
best_error: 2.2254537500080316
best_error: 2.225361424719683
best_error: 2.2253614237680255
best_error: 2.225330507595478
best_error: 2.2253305059865087
best_error: 2.2252917699591883
best_error: 2.2252917682876476
best_error: 2.225220332413892
best_error: 2.2252203292690877
best_error: 2.225087804335689
best_error: 2.2250878018915796
best_error: 2.224782787121862
best_error: 2.224782783900545
best_error: 2.2243921789620114
best_error: 2.224392178557876
best_error: 2.2243921785473075
best_error: 2.2241989387476395
best_error: 2.2241989381165657
best_error: 2.223997487249689
best_error: 2.2239974856477196
best_error: 2.2238970414294035
best_error: 2.223897025878656
best_error: 2.22293405721949
best_error: 2.222934036981695
best_error: 2.2210782858049494
best_error: 2.2210782589561613
best_error: 2.2146539438181967
best_error: 2.214653926792409
best_error: 2.2146539214055623
best_error: 2.2107842392548025
best_error: 2.210784224904356
best_error: 2.206105455681614
best_error: 2.2061054483928233
best_error: 2.2058851040521423
best_error: 2.2058850975236624
best_error: 2.2058234428172216
best_error: 2.2058234412557125
best_error: 2.2058153323203085
best_error: 2.205815330284952
best_error: 2.2057861626264725
best_error: 2.205786158884716
best_error: 2.2055707675262743
best_error: 2.2055707579137636
best_error: 2.2050312010079964
best_error: 2.205031181095549
best_error: 2.203476731475509
best_error: 2.2034767191433047
best_error: 2.2030257829929307
best_error: 2.2030257693411768
best_error: 2.2023581957955423
best_error: 2.202358188462984
best_error: 2.202076821964641
best_error: 2.202076803455491
best_error: 2.2016370243020087
best_error: 2.2016370121430815
best_error: 2.2005790369913143
best_error: 2.2005790239154837
best_error: 2.2005761897377636
best_error: 2.2005761871854674
best_error: 2.2005761803619626
best_error: 2.2005554766074624
best_error: 2.2005554731251533
best_error: 2.200555468809014
best_error: 2.200514295237713
best_error: 2.200514284330134
best_error: 2.200420755790791
best_error: 2.2004207340698083
best_error: 2.199832536108562
best_error: 2.1998325199860425
best_error: 2.199345553318126
best_error: 2.199345529077176
best_error: 2.1991007801784948
best_error: 2.1991007734602537
best_error: 2.1989462559554416
best_error: 2.198946253390881
best_error: 2.198833580041217
best_error: 2.1988335727379265
best_error: 2.1987402455275373
best_error: 2.1987402407972074
best_error: 2.198708682384698
best_error: 2.198708681369009
best_error: 2.1987050709314904
best_error: 2.198705070095893
best_error: 2.1987038944068984
best_error: 2.1987038924815594
best_error: 2.1987012126885896
best_error: 2.1987012090575577
best_error: 2.198696869000772
best_error: 2.198696864850223
best_error: 2.198690595149967
best_error: 2.1986905918180732
best_error: 2.1986756786654853
best_error: 2.1986756779598373
best_error: 2.198653196373334
best_error: 2.19865319596901
best_error: 2.1986383433490455
best_error: 2.1986383383255297
best_error: 2.1986308598881417
best_error: 2.1986308575230153
best_error: 2.1986071429564236
best_error: 2.198607142718805
best_error: 2.198599909080981
best_error: 2.1985999088809955
best_error: 2.198599908646894
best_error: 2.1985933280049292
best_error: 2.1985933278066914
best_error: 2.1985933271091067
best_error: 2.198581129555336
best_error: 2.1985811284631382
best_error: 2.1983841456467115
best_error: 2.1983841413383507
best_error: 2.198361322666177
best_error: 2.1983613226079965
best_error: 2.198361322425056
best_error: 2.198361322413682
best_error: 2.1983519252443138
best_error: 2.1983519218150924
best_error: 2.1983166461185464
best_error: 2.1983166460503956
best_error: 2.1983166458493115
best_error: 2.1983166458103
