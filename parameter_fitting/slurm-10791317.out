ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.3964672187825
best_error: 9.396467119477341
best_error: 7.9381006807148164
best_error: 7.938100467884811
best_error: 7.028458522393493
best_error: 7.028458250427231
best_error: 6.472737222969189
best_error: 6.472737153843552
best_error: 6.472737090515044
best_error: 6.361846176682891
best_error: 6.361846100066948
best_error: 6.361846062813297
best_error: 5.923243400353324
best_error: 5.923243318854658
best_error: 4.658954097443349
best_error: 4.658954066457213
best_error: 4.443986410458289
best_error: 4.443986402461714
best_error: 4.434960228822166
best_error: 4.434960147425808
best_error: 4.41332575429862
best_error: 4.413325754293563
best_error: 4.413325745583834
best_error: 4.374946122654808
best_error: 4.374946113243865
best_error: 4.374946111795478
best_error: 4.3638687513788
best_error: 4.363868739005551
best_error: 4.306683499794112
best_error: 4.3066834889112995
best_error: 4.217003302676658
best_error: 4.2170032942345035
best_error: 4.217003289052064
best_error: 4.2105615609305405
best_error: 4.210561364532341
best_error: 4.169546085104793
best_error: 4.169545927336052
best_error: 4.152708694448322
best_error: 4.1527086672487545
best_error: 4.152226378613131
best_error: 4.1522263523474
best_error: 4.152215759896259
best_error: 4.152215733625434
best_error: 4.1522077784795695
best_error: 4.152207752204903
best_error: 4.152203795009104
best_error: 4.152203768728099
best_error: 4.152201148497721
best_error: 4.15220112221545
best_error: 4.152199553202872
best_error: 4.152199526919835
best_error: 4.15219844432471
best_error: 4.152198418041147
best_error: 4.15219782157802
best_error: 4.152197795294159
best_error: 4.152197356620894
best_error: 4.152197330336803
best_error: 4.152197121002915
best_error: 4.15219709471872
best_error: 4.152196948383624
best_error: 4.152196922099359
best_error: 4.152196816465924
best_error: 4.152196790181599
best_error: 4.15219675408353
best_error: 4.152196727799175
best_error: 4.152196704227085
best_error: 4.152196704223199
best_error: 4.152196681040009
best_error: 4.152196681036118
best_error: 4.152196675929614
best_error: 4.152196675925728
best_error: 4.152196675764679
best_error: 4.152196675637702
best_error: 4.151995848059098
best_error: 4.151995839161822
best_error: 4.151898752019142
best_error: 4.151898742950726
best_error: 4.151534703374648
best_error: 4.151534694255972
best_error: 4.149790663198486
best_error: 4.149790652794213
best_error: 4.1497708774184
best_error: 4.14977086695622
best_error: 4.149697065631701
best_error: 4.149697055031979
best_error: 4.149515366381214
best_error: 4.14951535557916
best_error: 4.149082530335706
best_error: 4.149082519363057
best_error: 4.14871591919301
best_error: 4.148715896070891
best_error: 4.1448667749680315
best_error: 4.144866766196097
best_error: 4.14272858584351
best_error: 4.142728579548125
best_error: 4.142460802218139
best_error: 4.142460780508423
best_error: 4.142218534015034
best_error: 4.142218525935528
best_error: 4.138699033493942
best_error: 4.138699010795781
best_error: 4.133721593540173
best_error: 4.133721583139627
best_error: 4.131375148124319
best_error: 4.131375137745459
best_error: 4.125246725520152
best_error: 4.125246715077439
best_error: 4.123869519031103
best_error: 4.1238694973052
best_error: 4.123820626309394
best_error: 4.123820604527742
best_error: 4.123800811583833
best_error: 4.123800789752347
best_error: 4.123799462104291
best_error: 4.123799440272041
best_error: 4.123798458239944
best_error: 4.123798436407151
best_error: 4.123798387025877
best_error: 4.123798365193042
best_error: 4.1237983310124795
best_error: 4.123798309179624
best_error: 4.123798305012022
best_error: 4.123798301756947
best_error: 4.123798299459734
best_error: 4.123798299456217
best_error: 4.1237982943871305
best_error: 4.123798294383616
best_error: 4.1237982933879325
best_error: 4.123798293331625
best_error: 4.12379829332811
best_error: 4.123798293176624
best_error: 4.123798293173109
best_error: 4.123798292780092
best_error: 4.1237982927765895
best_error: 4.123798292424558
best_error: 4.123798292421056
best_error: 4.123798292419105
best_error: 4.123798292415609
best_error: 4.1237982924140315
best_error: 4.123798292410525
