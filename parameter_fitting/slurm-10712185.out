ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.56800741246487
best_error: 10.568007379712999
best_error: 10.113513537248817
best_error: 10.113513486333835
best_error: 9.902886376455989
best_error: 9.902886314693578
best_error: 9.517684490230492
best_error: 9.51768440159464
best_error: 9.256534207336962
best_error: 9.256534113786188
best_error: 9.044264962607832
best_error: 9.044264866716643
best_error: 8.9273702229478
best_error: 8.92737016976061
best_error: 8.927370165146142
best_error: 8.182530952932469
best_error: 8.182530913873086
best_error: 8.182530897754248
best_error: 6.931817493675447
best_error: 6.931817459661531
best_error: 6.931817437959267
best_error: 6.633323479708167
best_error: 6.633323450825149
best_error: 6.633323424109254
best_error: 6.46801301190545
best_error: 6.468012985558103
best_error: 6.468012956671686
best_error: 6.375733970701247
best_error: 6.375733946324406
best_error: 6.375733915145055
best_error: 6.324409334783664
best_error: 6.324409307716907
best_error: 6.324409278252524
best_error: 6.204843671822831
best_error: 6.204843667414175
best_error: 5.770462218170667
best_error: 5.770462037892361
best_error: 5.758789516940138
best_error: 5.758789326227723
best_error: 5.133488661861646
best_error: 5.133488471247807
best_error: 4.738101245286918
best_error: 4.738101081853354
best_error: 4.4558570509641715
best_error: 4.4558568884402385
best_error: 4.350727770946365
best_error: 4.350727608743998
best_error: 4.280350569660464
best_error: 4.280350401969242
best_error: 4.25427484410299
best_error: 4.254274839734917
best_error: 4.243710305146601
best_error: 4.243710134678279
best_error: 4.242339715355628
best_error: 4.242339544762144
best_error: 4.241877330042714
best_error: 4.241877159407008
best_error: 4.241749490493377
best_error: 4.241749486129692
best_error: 3.812087799782156
best_error: 3.8120875439267348
best_error: 3.7758738896460025
best_error: 3.7758735968576405
best_error: 3.7352849504020558
best_error: 3.7352846519076803
best_error: 3.606889787553839
best_error: 3.6068894410816053
best_error: 3.4314742842646653
best_error: 3.4314738562601113
best_error: 3.3530608000986932
best_error: 3.3530604060081677
best_error: 3.3085681338722623
best_error: 3.3085677881048174
best_error: 3.304751403900125
best_error: 3.304751401128069
best_error: 3.304751341432312
best_error: 3.3013399492752056
best_error: 3.301339608709402
best_error: 3.3009840465908504
best_error: 3.30098370602391
best_error: 3.3007404448085698
best_error: 3.3007401042412163
best_error: 3.300494171775953
best_error: 3.3004938317109365
best_error: 3.3001931633129344
best_error: 3.3001928245442005
best_error: 3.2999938294533346
best_error: 3.299993490678162
best_error: 3.299872439396389
best_error: 3.299872100617388
best_error: 3.2998439046169454
best_error: 3.29984356607556
best_error: 3.299823567440371
best_error: 3.2998235646780953
best_error: 3.2998235050225992
best_error: 3.299819517385566
best_error: 3.2998191788437667
best_error: 3.2995743953116046
best_error: 3.2995740613024416
best_error: 3.2906135288457903
best_error: 3.290613188247006
best_error: 3.2868886743386594
best_error: 3.286888323767361
best_error: 3.2864637766206646
best_error: 3.286463424038813
best_error: 3.286392327150713
best_error: 3.286391970684604
best_error: 3.2863478433903435
best_error: 3.286347486705192
best_error: 3.2863024236166605
best_error: 3.286302066889887
best_error: 3.286174905883732
best_error: 3.2861745509587172
best_error: 3.2853473641861735
best_error: 3.285347011443632
best_error: 3.28488518687739
best_error: 3.284884834767444
best_error: 3.2845328141711088
best_error: 3.284532462047689
best_error: 3.2841533073957803
best_error: 3.2841529583353823
best_error: 3.283980720639432
best_error: 3.283980373801929
best_error: 3.2838318220297777
best_error: 3.2838314751874202
best_error: 3.283775390222159
best_error: 3.283775043827206
best_error: 3.2837279353096958
best_error: 3.2837275889136226
best_error: 3.2837069767121134
best_error: 3.2837066303155726
best_error: 3.2836941809074287
best_error: 3.283693834510632
best_error: 3.2836789271779967
best_error: 3.283678580780894
best_error: 3.2836726690607305
best_error: 3.2836723228662836
best_error: 3.2836657413982078
best_error: 3.283665395203513
best_error: 3.283660233380666
best_error: 3.2836598871857765
best_error: 3.2836576402092947
best_error: 3.2836572940143105
best_error: 3.2836555051700365
best_error: 3.2836551589749794
best_error: 3.2836551240051177
best_error: 3.283655119695302
best_error: 3.283655115240088
best_error: 3.283655057303901
best_error: 3.2836550516061846
best_error: 3.2836550471509307
best_error: 3.2836550257432826
best_error: 3.2836550247845855
best_error: 3.2836550240188753
