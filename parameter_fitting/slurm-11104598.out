ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 78
days_switch 75
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 106.50125875553773
best_error: 106.5012586544564
best_error: 106.50125858262903
best_error: 18.758129651496738
best_error: 18.758129651492517
best_error: 18.758129643951648
best_error: 18.748179185964798
best_error: 18.748179185960442
best_error: 18.74817917814951
best_error: 18.704550537239907
best_error: 18.704550537234788
best_error: 18.704550528171037
best_error: 18.429931453683075
best_error: 18.42993145366026
best_error: 18.429931434310838
best_error: 18.23156745658452
best_error: 18.23156745652254
best_error: 18.23156742759673
best_error: 17.946275683885553
best_error: 17.946275683702595
best_error: 17.9462756386113
best_error: 13.4200561830197
best_error: 13.420056161093656
best_error: 13.420055892679779
best_error: 12.92548750493501
best_error: 12.925487484984101
best_error: 12.92548734717437
best_error: 12.707252921093795
best_error: 12.707252905543623
best_error: 12.7072528832202
best_error: 12.702169043757582
best_error: 12.702169029763807
best_error: 12.70216902943902
best_error: 12.702169014245754
best_error: 12.701728101278333
best_error: 12.701728087570823
best_error: 12.70172808725573
best_error: 12.701728072328644
best_error: 12.700957132087643
best_error: 12.700957107031208
best_error: 12.70076688084817
best_error: 12.700766852585552
best_error: 12.196322597651662
best_error: 12.196322584037691
best_error: 11.58943244788645
best_error: 11.589432439424858
best_error: 11.589432437605106
best_error: 11.526671360602439
best_error: 11.52667134089131
best_error: 11.526671340680794
best_error: 11.516418220096284
best_error: 11.516418198647365
best_error: 11.495828567130065
best_error: 11.495828250492586
best_error: 11.405557889748245
best_error: 11.405557540460679
best_error: 11.324712576528075
best_error: 11.324712551322243
best_error: 11.297986099314066
best_error: 11.297986091670731
best_error: 11.297986091497348
best_error: 11.283649068588083
best_error: 11.283649059742947
best_error: 11.255444631973186
best_error: 11.255444423259192
best_error: 11.255374930820043
best_error: 11.255374920897475
best_error: 11.252907518754004
best_error: 11.252907510039865
best_error: 11.252478220479897
best_error: 11.252478211759584
best_error: 11.25212679704653
best_error: 11.252126788349393
best_error: 11.250143432171294
best_error: 11.250143423482449
best_error: 11.248802385393606
best_error: 11.248802376717656
best_error: 11.247860118600098
best_error: 11.247860109924641
best_error: 11.247260556647866
best_error: 11.24726054797269
best_error: 11.24689952365258
best_error: 11.246899515014544
best_error: 11.246515986005825
best_error: 11.24651594418139
best_error: 11.246499921616897
best_error: 11.246499912979452
best_error: 11.246484435451187
best_error: 11.246484393627568
best_error: 11.246483646413798
best_error: 11.246483637776384
best_error: 11.24648267831551
best_error: 11.246482669678104
best_error: 11.246263292457716
best_error: 11.246263027389908
best_error: 11.24147609186768
best_error: 11.241475820114816
best_error: 11.24124246099081
best_error: 11.241242455641768
best_error: 11.241242453497485
best_error: 11.240578564682336
best_error: 11.240578292709525
best_error: 11.240287564773016
best_error: 11.240287559446593
best_error: 11.240287557275174
best_error: 11.180228623252766
best_error: 11.180228618944543
best_error: 11.180228615861928
best_error: 11.107242664960554
best_error: 11.107242618842426
best_error: 11.032473052789317
best_error: 11.032473003924617
best_error: 10.968676080878282
best_error: 10.968676034626117
best_error: 10.968676031159806
best_error: 10.95693191224299
best_error: 10.956931843295491
best_error: 10.956931819018743
best_error: 10.740506769286906
best_error: 10.74050672493157
best_error: 10.740506717509152
best_error: 10.463448487221616
best_error: 10.463448466256455
best_error: 10.412496907212644
best_error: 10.412496853743043
best_error: 10.411486300317973
best_error: 10.411486228934027
best_error: 10.405862930379344
best_error: 10.40586291380601
best_error: 10.403266828721062
best_error: 10.403266655667466
best_error: 10.403138793223995
best_error: 10.403138776754352
best_error: 10.400846132524116
best_error: 10.400846116128971
best_error: 10.400645948214843
best_error: 10.40064593182121
best_error: 10.400555215265731
best_error: 10.400555198872793
best_error: 10.400535075879306
best_error: 10.400534908504836
best_error: 10.39834673465009
best_error: 10.398346718198013
best_error: 10.397984071845709
best_error: 10.397984054879839
best_error: 10.397305512549613
best_error: 10.397305497847494
best_error: 10.396947417685109
best_error: 10.396947402285628
best_error: 10.396602797419822
best_error: 10.396602781629307
best_error: 10.395929624887168
best_error: 10.395929608169547
best_error: 10.39576634018561
best_error: 10.395766323277634
best_error: 10.395121628531598
best_error: 10.395121611654464
best_error: 10.39298581067538
best_error: 10.392985794355432
best_error: 10.392903597383448
best_error: 10.392903581064225
best_error: 10.39289768368646
best_error: 10.392897667367292
best_error: 10.392894281737718
best_error: 10.392894265418576
best_error: 10.39289232340332
best_error: 10.392892307084198
best_error: 10.392892188357834
best_error: 10.392892172038717
best_error: 10.392892068027162
best_error: 10.39289205170805
best_error: 10.392891964367607
best_error: 10.3928919480485
best_error: 10.392891881488934
best_error: 10.392891865169826
best_error: 10.392891692505781
best_error: 10.392891676186684
best_error: 10.392891620969518
best_error: 10.392891469738316
best_error: 10.392891453419224
best_error: 10.392891398953708
best_error: 10.392891382634632
best_error: 10.392891375459651
