ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 24.99953242449429
best_error: 24.99953239770863
best_error: 24.999532356410437
best_error: 4.988929882825229
best_error: 4.988929882520495
best_error: 4.988929882262526
best_error: 4.988109361594644
best_error: 4.988109361437515
best_error: 4.988109361030619
best_error: 4.984780282982343
best_error: 4.984780282814827
best_error: 4.984780282412914
best_error: 4.970657007736968
best_error: 4.97065700752266
best_error: 4.970657007143835
best_error: 4.894878122294706
best_error: 4.894878121681421
best_error: 4.894878121556362
best_error: 4.264422279443905
best_error: 4.264422159665593
best_error: 3.6407596775417965
best_error: 3.6407593961983276
best_error: 3.1469022210462443
best_error: 3.14690220383701
best_error: 3.1448641500495707
best_error: 3.1448641471264294
best_error: 3.1443841553535274
best_error: 3.1443841542732116
best_error: 3.1441760939128955
best_error: 3.144176090216963
best_error: 3.1438274771657246
best_error: 3.1438274686985808
best_error: 3.1407405652061646
best_error: 3.1407405203620176
best_error: 3.1361820554328754
best_error: 3.136181969797274
best_error: 3.108840171176151
best_error: 3.108839976039331
best_error: 2.9375775498488883
best_error: 2.9375770968235653
best_error: 2.136499090780593
best_error: 2.136498836097796
best_error: 2.128662254869123
best_error: 2.128661943998198
best_error: 1.9467140669275589
best_error: 1.9467140231957294
best_error: 1.9456553830472214
best_error: 1.9456553300132362
best_error: 1.9197110054886268
best_error: 1.9197109931735385
best_error: 1.9159986179216884
best_error: 1.9159985998806248
best_error: 1.9142690078550557
best_error: 1.9142690051923785
best_error: 1.914269003128222
best_error: 1.913899908946208
best_error: 1.9138998650049295
best_error: 1.9103315683054014
best_error: 1.9103315446136278
best_error: 1.9029165001043833
best_error: 1.902916470375658
best_error: 1.8819406426636482
best_error: 1.8819406001532974
best_error: 1.865098209104409
best_error: 1.8650978936244094
best_error: 1.8300982655906477
best_error: 1.8300979830607886
best_error: 1.7415619000993778
best_error: 1.741561695155271
best_error: 1.7317358089129817
best_error: 1.7317358032388166
best_error: 1.7317357955646069
best_error: 1.7128463059015837
best_error: 1.7128462384856997
best_error: 1.698919785294582
best_error: 1.6989197806836993
best_error: 1.698919778373968
best_error: 1.6963735738713313
best_error: 1.6963735164458655
best_error: 1.693920238703405
best_error: 1.6939202264188609
best_error: 1.6931463539500984
best_error: 1.6931463525622912
best_error: 1.6931463516662502
best_error: 1.692948341607541
best_error: 1.6929483400914913
best_error: 1.6929483399697052
best_error: 1.6902778005336954
best_error: 1.6902777702294254
best_error: 1.6784909819293512
best_error: 1.6784909419815106
best_error: 1.6089268514363173
best_error: 1.608926815175964
best_error: 1.5998987394037192
best_error: 1.5998987208691187
best_error: 1.5998983128240203
best_error: 1.5991654676295604
best_error: 1.5991654018881436
best_error: 1.5991420592625751
best_error: 1.5991419940367106
best_error: 1.5535772592968877
best_error: 1.5535772243864514
best_error: 1.5531329293513279
best_error: 1.5531329272570085
best_error: 1.5530806162869224
best_error: 1.5530806096700918
best_error: 1.5529831294917642
best_error: 1.5529831186906917
best_error: 1.55277999836451
best_error: 1.5527799855861826
best_error: 1.5524607013026774
best_error: 1.552460693748627
best_error: 1.5523084610987274
best_error: 1.5523084579276851
best_error: 1.551960824453632
best_error: 1.5519608223510735
best_error: 1.5509544181346056
best_error: 1.550954405579548
best_error: 1.545664285395621
best_error: 1.5456642657202493
best_error: 1.529966018004952
best_error: 1.5299659866357342
best_error: 1.529952540829708
best_error: 1.526650069243032
best_error: 1.5266500583508955
best_error: 1.5266491276977325
best_error: 1.5256230987336434
best_error: 1.5256230939731257
best_error: 1.5256230338443897
best_error: 1.5243704396505264
best_error: 1.5243704359556667
best_error: 1.5243703460547897
best_error: 1.5240839876648489
best_error: 1.524083968203702
best_error: 1.5240839517444371
best_error: 1.523936133479713
best_error: 1.5239359853431682
best_error: 1.52392346320294
best_error: 1.5186615042454361
best_error: 1.5186614964738385
best_error: 1.5186613606275563
best_error: 1.5174455775138762
best_error: 1.5174453550616707
best_error: 1.5158116184511479
best_error: 1.515805522913825
best_error: 1.5146867438644014
best_error: 1.5146864088052399
best_error: 1.5139451657234857
best_error: 1.5139451612122259
best_error: 1.513944977119439
best_error: 1.512308150274376
best_error: 1.5123078921117707
best_error: 1.5122835033961046
best_error: 1.504584582462362
best_error: 1.5045845186675522
best_error: 1.5045699560927432
best_error: 1.5045698927563942
best_error: 1.5037154510826638
best_error: 1.503715423673572
best_error: 1.494954040747947
best_error: 1.4949539141128179
best_error: 1.4949419575847296
best_error: 1.493565541406438
best_error: 1.4935654982386735
best_error: 1.4927614344391693
best_error: 1.4927613939171605
best_error: 1.4927613680676401
best_error: 1.4845790076784553
best_error: 1.4845789774558436
best_error: 1.482777068322791
best_error: 1.482777042127429
best_error: 1.4805111762060152
best_error: 1.4805111589138664
best_error: 1.4799041741256878
best_error: 1.4799041024822597
best_error: 1.478072998607951
best_error: 1.4780729890210227
best_error: 1.4780729614472758
best_error: 1.4744802183634476
best_error: 1.4744801875801365
best_error: 1.468227237611732
best_error: 1.4682272079847893
best_error: 1.4675728255073508
best_error: 1.467572806434991
best_error: 1.4670431481631792
best_error: 1.4670430873924463
best_error: 1.4656941169366167
best_error: 1.4656941155168761
best_error: 1.4656940849724505
best_error: 1.4615526049175205
best_error: 1.4615525925785742
best_error: 1.4615525924912396
best_error: 1.457162041880148
best_error: 1.457162002189399
best_error: 1.452008591870291
best_error: 1.452008539841277
best_error: 1.4505042318102954
best_error: 1.4505041998720043
best_error: 1.4497394992637778
best_error: 1.4497394469187135
best_error: 1.4489783257095836
best_error: 1.4489782871094246
best_error: 1.4477765369889735
best_error: 1.4477765053099094
best_error: 1.4469478375412812
best_error: 1.4469478121897337
best_error: 1.4465710351966714
best_error: 1.4465710249545398
best_error: 1.4465710219450247
best_error: 1.4465394317962688
best_error: 1.446539421056417
best_error: 1.4465394179979025
best_error: 1.4465142517749014
best_error: 1.44651423943934
best_error: 1.4465142383590608
best_error: 1.4464637081836564
best_error: 1.446463695609383
best_error: 1.446463694939901
best_error: 1.446376233146087
best_error: 1.4463762239515965
best_error: 1.446376217745407
best_error: 1.4462750878941124
best_error: 1.4462750832976006
best_error: 1.446275071792911
best_error: 1.4462155756518411
best_error: 1.446215556439268
best_error: 1.446208541949612
best_error: 1.4462085231361237
best_error: 1.446206731445724
best_error: 1.446206712515607
best_error: 1.4462036958757336
best_error: 1.446203677091613
best_error: 1.4461912767860219
best_error: 1.4461912586227184
best_error: 1.4461736125750153
best_error: 1.4461735959991722
best_error: 1.4461235359714006
best_error: 1.4461235220059894
best_error: 1.446063532974931
best_error: 1.446063520769947
best_error: 1.4459065421113153
best_error: 1.445906532135739
best_error: 1.4455071305599492
best_error: 1.4455071218975744
best_error: 1.4451753575897863
best_error: 1.4451753492483792
best_error: 1.4450393016821637
best_error: 1.4450392937878513
best_error: 1.444686058347702
best_error: 1.4446860537266732
best_error: 1.4443993669118165
best_error: 1.4443993634712795
best_error: 1.443080413224549
best_error: 1.4430804105432211
best_error: 1.442211059923376
best_error: 1.4422110567759834
best_error: 1.441741815851082
best_error: 1.4417418134324556
best_error: 1.4409830358112097
best_error: 1.4409830342977044
best_error: 1.4403364964510847
best_error: 1.4403364954088311
best_error: 1.4403364948613169
best_error: 1.439794682348386
best_error: 1.4397946818271792
best_error: 1.4397946808208977
best_error: 1.4394174722035897
best_error: 1.4394174718795612
best_error: 1.4394174716649255
best_error: 1.4394174707272631
