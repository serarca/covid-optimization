ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.38603794320387
best_error: 11.38603794083431
best_error: 11.190896112656668
best_error: 11.190896090084001
best_error: 7.302166287371152
best_error: 7.302166287371151
best_error: 7.302166277419556
best_error: 7.302166263882283
best_error: 7.264363228643918
best_error: 7.2643632286439175
best_error: 7.264363216453956
best_error: 7.2643632031699354
best_error: 7.150221168519501
best_error: 7.150221112876615
best_error: 7.1493444255361585
best_error: 7.14934441653948
best_error: 7.1486006263540105
best_error: 7.14860057218055
best_error: 7.148542554518284
best_error: 7.14854250044924
best_error: 7.148532468178603
best_error: 7.148532422725272
best_error: 7.148507908941598
best_error: 7.1485079067501305
best_error: 7.1485019476404235
best_error: 7.148501945449036
best_error: 7.148501392950349
best_error: 7.148501347494488
best_error: 7.144086756203132
best_error: 7.144086753699087
best_error: 7.124462314686896
best_error: 7.124462310787668
best_error: 7.113165279947198
best_error: 7.1131652799471965
best_error: 7.11316527549684
best_error: 7.109577834073114
best_error: 7.109577834073113
best_error: 7.109577829548061
best_error: 7.108852171912773
best_error: 7.1088521675040095
best_error: 7.108446496469196
best_error: 7.108446492092521
best_error: 7.108202231176674
best_error: 7.108202231176672
best_error: 7.108202226748316
best_error: 7.108029432890217
best_error: 7.108029432890213
best_error: 7.1080294284251
best_error: 7.107942565446973
best_error: 7.107942561085804
best_error: 7.107892325974807
best_error: 7.107892325974805
best_error: 7.107892321602863
best_error: 7.107854962304245
best_error: 7.1078549579242605
best_error: 7.107838043736578
best_error: 7.107838043736576
best_error: 7.10783803945707
best_error: 7.107824875589541
best_error: 7.10782487558954
best_error: 7.107824871307537
best_error: 7.107823272848388
best_error: 7.107823268566095
best_error: 7.1078222968104665
best_error: 7.1078222925279775
best_error: 7.107821856469822
best_error: 7.10782185218726
best_error: 7.107821542078192
best_error: 7.107821537795571
best_error: 7.107821468319339
best_error: 7.106714088527947
best_error: 7.102397528991821
best_error: 7.065777879492286
best_error: 7.065777879492285
best_error: 7.052793780504932
best_error: 7.048695865564584
best_error: 7.048628230150149
best_error: 7.048614085909844
best_error: 7.0486113347096175
best_error: 7.048600208536088
best_error: 7.048523958201014
best_error: 7.048515132272333
best_error: 6.930060163411667
best_error: 6.930059906050362
best_error: 6.096131787474864
best_error: 6.0961314798479975
best_error: 5.946202345266339
best_error: 5.531432371590749
best_error: 5.53143229450144
best_error: 5.531432167852646
best_error: 5.442519147280775
best_error: 5.442519080365965
best_error: 5.3677674701008335
best_error: 5.367767431257608
best_error: 5.352904734334155
best_error: 5.352904698226567
best_error: 5.338312248232168
best_error: 5.338312213403549
best_error: 5.3340630861209135
best_error: 5.334063086120913
best_error: 5.332529771073436
best_error: 5.3325297354100085
best_error: 5.317929579153282
best_error: 5.317929579153281
best_error: 5.316464408860639
best_error: 5.316464408860638
best_error: 5.316464408860634
best_error: 5.314588503557142
best_error: 5.3145885035571405
best_error: 5.31458850355714
best_error: 5.3141323456149205
best_error: 5.31413234561492
best_error: 5.314132345614919
best_error: 5.3126220186439435
best_error: 5.312622018643943
best_error: 5.312622018643941
best_error: 5.3121853033681266
best_error: 5.312185303368126
best_error: 5.311941331094861
best_error: 5.311941331094859
best_error: 5.311821594749768
best_error: 5.311759395947021
best_error: 5.311715278517616
best_error: 5.311681102943508
best_error: 5.311681102943506
best_error: 5.311650494964314
best_error: 5.311650494964313
best_error: 5.311586055352151
best_error: 5.31158605535215
best_error: 5.311583764244658
best_error: 5.311583764244657
best_error: 5.311583764244656
best_error: 5.311582384683309
best_error: 5.311582384683308
best_error: 5.311582384683306
best_error: 5.3115815614029085
best_error: 5.3115810760226285
best_error: 5.311581076022628
best_error: 5.3115810094081155
best_error: 5.311581009408114
best_error: 5.311581009408113
best_error: 5.311580959240897
best_error: 5.311580925312322
best_error: 5.311580902455629
best_error: 5.311580896416615
best_error: 5.311580895463883
best_error: 5.311580895463882
best_error: 5.311580895463881
best_error: 5.311580893007434
best_error: 5.311580893007433
best_error: 5.311580891089482
best_error: 5.3115808901499335
best_error: 5.311580890149932
best_error: 5.311580889393229
best_error: 5.311580889393227
best_error: 5.31158088924608
best_error: 5.311580889065537
best_error: 5.311580888896649
best_error: 5.311580888896648
best_error: 5.311580888747301
best_error: 5.311580888747299
