ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 76
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.26676358253571
best_error: 22.266763105856676
best_error: 4.610930597492873
best_error: 4.6109305961377824
best_error: 4.610528252737594
best_error: 4.610528252729159
best_error: 4.61052825271312
best_error: 4.6089095488637
best_error: 4.608909548855033
best_error: 4.608909548839065
best_error: 4.602281442952121
best_error: 4.60228144294243
best_error: 4.602281442926816
best_error: 4.573083631419052
best_error: 4.5730836314030725
best_error: 4.5730836313903955
best_error: 4.33918490452666
best_error: 4.3391849040372
best_error: 4.256962630899922
best_error: 4.2569626298024055
best_error: 4.146491592782226
best_error: 4.146491590285851
best_error: 3.5919725556426534
best_error: 3.5919725425626257
best_error: 3.282963208304965
best_error: 3.2829631897076927
best_error: 3.194407610207581
best_error: 3.1944075866651627
best_error: 3.181053798231106
best_error: 3.1810537796943925
best_error: 3.172628304876873
best_error: 3.1726282814584694
best_error: 3.076016235284326
best_error: 3.076016170433746
best_error: 2.9790898466891607
best_error: 2.9790897808160186
best_error: 2.645821784887628
best_error: 2.6458217118302416
best_error: 2.645821703228705
best_error: 2.5568156483466793
best_error: 2.5568155410768316
best_error: 2.5456449848907776
best_error: 2.5456448576932416
best_error: 2.355860559819908
best_error: 2.3558604745466916
best_error: 2.252914477751977
best_error: 2.252914415604136
best_error: 2.239881945807339
best_error: 2.239881918319583
best_error: 2.234081090451268
best_error: 2.2340810871659
best_error: 2.234081083366925
best_error: 2.2319419757988714
best_error: 2.2319419757985144
best_error: 2.2319419754024823
best_error: 2.231941968323648
best_error: 2.208339866081879
best_error: 2.2083398405599346
best_error: 2.1525111775154233
best_error: 2.1525111414864906
best_error: 1.9349754509480674
best_error: 1.9349753987662806
best_error: 1.902962589164677
best_error: 1.9029625617225656
best_error: 1.811433841201852
best_error: 1.8114336168196248
best_error: 1.6810995617470876
best_error: 1.6810993364253295
best_error: 1.6144895060697755
best_error: 1.614489506068506
best_error: 1.614489502086598
best_error: 1.5415568188680318
best_error: 1.5415568075388373
best_error: 1.52067620265448
best_error: 1.520676202337063
best_error: 1.5206762017121465
best_error: 1.5206762013683428
best_error: 1.5184870823168037
best_error: 1.518487075337616
best_error: 1.5167952889836487
best_error: 1.5167952856978433
best_error: 1.5167261555186553
best_error: 1.5167261508870096
best_error: 1.5167052695624674
best_error: 1.516705269432122
best_error: 1.5167052691992915
best_error: 1.5167052690990437
best_error: 1.5167052689627383
best_error: 1.5166608165443463
best_error: 1.5166608154245251
best_error: 1.516536010684955
best_error: 1.5165360082989643
best_error: 1.51608643675702
best_error: 1.5160864296103174
best_error: 1.5131654896956745
best_error: 1.5131654640280123
best_error: 1.5095030428778853
best_error: 1.5095030039294468
best_error: 1.5018388568305638
best_error: 1.50183881198832
best_error: 1.4979468163940262
best_error: 1.4979467866990601
best_error: 1.4957961529387027
best_error: 1.4957961460688791
best_error: 1.4956295195732068
best_error: 1.4956295180269061
best_error: 1.495625063545733
best_error: 1.4956250629701555
best_error: 1.4956214141486746
best_error: 1.4956214138569088
best_error: 1.4956214137473482
best_error: 1.495571132565785
best_error: 1.4955711309171944
best_error: 1.4954077424534986
best_error: 1.4954077387533993
best_error: 1.4951704130767678
best_error: 1.4951704084395425
best_error: 1.4940382376125163
best_error: 1.4940382286630918
best_error: 1.493157619140978
best_error: 1.4931576135620463
best_error: 1.4921965688425167
best_error: 1.492196567729522
best_error: 1.4921631305888265
best_error: 1.4921631304190592
best_error: 1.492163129915358
best_error: 1.492145517569201
best_error: 1.4921455164903399
best_error: 1.4920359173777131
best_error: 1.4920359112510855
best_error: 1.4918704177304785
best_error: 1.4918704081717806
best_error: 1.4910507307172989
best_error: 1.4910507101316208
best_error: 1.4897978574347277
best_error: 1.48979782876486
best_error: 1.4857442349988508
best_error: 1.485744184422376
best_error: 1.481360561441566
best_error: 1.4813605064100037
best_error: 1.4709387587621297
best_error: 1.4709387554359767
best_error: 1.4709387376365186
best_error: 1.4709339168912043
best_error: 1.4709339148844989
best_error: 1.470933893227829
best_error: 1.4666241026051297
best_error: 1.4666240959531849
best_error: 1.466624085016284
best_error: 1.4649590318539416
best_error: 1.464959028116958
best_error: 1.4649590271287332
best_error: 1.4644574092715918
best_error: 1.464457406963546
best_error: 1.4639972849366933
best_error: 1.463997283545407
best_error: 1.4620176312956865
best_error: 1.4620176312955684
best_error: 1.4620176307014014
best_error: 1.4620176303805221
best_error: 1.4620176301847843
best_error: 1.4606653773172524
best_error: 1.4606653773169649
best_error: 1.46066537728138
best_error: 1.460665376904811
best_error: 1.4606653765227873
best_error: 1.460147857722425
best_error: 1.4601478566809198
best_error: 1.4600534865257098
best_error: 1.4600534860469845
best_error: 1.4600183250583234
best_error: 1.4600183242765745
best_error: 1.4600168693286009
best_error: 1.4600168692642628
best_error: 1.4600166020434993
best_error: 1.4600166019415155
best_error: 1.4600163954102123
best_error: 1.4600163953297776
best_error: 1.4600162477671312
best_error: 1.4600162476808562
best_error: 1.460016241067344
best_error: 1.4600162409763393
best_error: 1.4600161319635907
best_error: 1.4600161319082314
best_error: 1.460016048783946
best_error: 1.460016048735621
best_error: 1.4600160236893718
best_error: 1.4600160235732553
best_error: 1.4600159446762655
best_error: 1.460015944540875
best_error: 1.4600157946572374
best_error: 1.4600157944599021
best_error: 1.46001570805759
best_error: 1.4600157069629285
best_error: 1.4600151627779303
best_error: 1.460015161691123
best_error: 1.4600136877389238
best_error: 1.460013686614306
best_error: 1.4600109623159891
best_error: 1.4600109612886565
best_error: 1.460004157918062
best_error: 1.4600041578724896
best_error: 1.460004157824262
best_error: 1.4600041578215919
best_error: 1.4599971069735163
best_error: 1.4599971069381887
best_error: 1.459997106906327
best_error: 1.4599971068620508
best_error: 1.45991345022411
best_error: 1.4599134475808773
best_error: 1.4598576571814517
best_error: 1.4598576551143196
best_error: 1.459641177932322
best_error: 1.4596411728473582
best_error: 1.459328303054215
best_error: 1.459328295077517
best_error: 1.45885591712975
best_error: 1.4588559079945704
best_error: 1.458686455818792
best_error: 1.4586864531127353
best_error: 1.4584824551220847
best_error: 1.458482452875838
best_error: 1.4584727640680282
best_error: 1.458472762009687
best_error: 1.4584700085000708
best_error: 1.4584700079759678
best_error: 1.4584691507794096
best_error: 1.4584691505088905
best_error: 1.4584690655155093
best_error: 1.4584690655019552
best_error: 1.4584690652803878
best_error: 1.4584690498009854
best_error: 1.458469049648746
best_error: 1.4584689908707618
best_error: 1.4584689908485788
best_error: 1.4584689751920175
best_error: 1.4584689750685478
best_error: 1.4584689501410144
best_error: 1.4584689500631491
best_error: 1.4584689331679297
best_error: 1.4584689329533922
best_error: 1.458468911173539
best_error: 1.4584689109803926
best_error: 1.4584688102182164
best_error: 1.458468810206068
best_error: 1.4584688100391727
best_error: 1.4584684130949064
best_error: 1.4584684123996976
best_error: 1.4584670979065937
best_error: 1.458467097889256
best_error: 1.4584670971578904
best_error: 1.4584664317464384
best_error: 1.4584664316564908
best_error: 1.4584664314465723
best_error: 1.4584661998762227
best_error: 1.458466199320894
best_error: 1.4584660354055348
best_error: 1.4584660353587062
best_error: 1.4584660352800483
best_error: 1.4584658328126463
best_error: 1.458465832702623
best_error: 1.4584657224680582
best_error: 1.4584657223889819
