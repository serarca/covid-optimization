ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.708715514853417
best_error: 25.708715212998094
best_error: 5.013718467260957
best_error: 5.013718466912416
best_error: 5.013667715508445
best_error: 5.013667715497035
best_error: 5.013667715405378
best_error: 5.01346422177831
best_error: 5.013464221766829
best_error: 5.013464221675044
best_error: 5.012642368192604
best_error: 5.012642368180832
best_error: 5.012642368088524
best_error: 5.0092227316412945
best_error: 5.009222731628278
best_error: 5.009222731533797
best_error: 4.99292408824936
best_error: 4.992924088229176
best_error: 4.9929240881245835
best_error: 4.462695276618632
best_error: 4.46269524798746
best_error: 3.884706683032498
best_error: 3.884706568966642
best_error: 3.073727591766931
best_error: 3.073727416338153
best_error: 3.0737269733691295
best_error: 2.7216911161288664
best_error: 2.7216909041760884
best_error: 2.7216900212050894
best_error: 2.721689241590854
best_error: 2.4505899219901264
best_error: 2.4505898977260405
best_error: 2.450589774075877
best_error: 2.4465655966562685
best_error: 2.446565520735644
best_error: 2.444593408702753
best_error: 2.4445933685407
best_error: 2.4445932889272846
best_error: 2.413087982430078
best_error: 2.41308789264346
best_error: 2.388921430321796
best_error: 2.3889213608740545
best_error: 2.3889208503448716
best_error: 2.3716067558055847
best_error: 2.371606697047639
best_error: 2.3653771045833993
best_error: 2.3653770564699075
best_error: 2.364384396658786
best_error: 2.3643843652144407
best_error: 2.3633553192144734
best_error: 2.3633553126966977
best_error: 2.3633553106096836
best_error: 2.362671590241938
best_error: 2.3626715711069237
best_error: 2.3623314524557055
best_error: 2.3623314400785533
best_error: 2.3600126710953497
best_error: 2.360012640214033
best_error: 2.3594876066762223
best_error: 2.359487564369672
best_error: 2.358444585526733
best_error: 2.358444550703585
best_error: 2.3546665057258496
best_error: 2.3546664857884867
best_error: 2.3546658957796036
best_error: 2.3523023718324962
best_error: 2.352302371118461
best_error: 2.352302362240104
best_error: 2.348955226462756
best_error: 2.348955222049833
best_error: 2.3489552166777354
best_error: 2.337245839877918
best_error: 2.337245790188411
best_error: 2.201835276813183
best_error: 2.201835191235684
best_error: 2.192108497228299
best_error: 2.1921084356742653
best_error: 2.186282659385896
best_error: 2.1862826312265886
best_error: 2.1821733140479678
best_error: 2.182173255951542
best_error: 2.1821729441575264
best_error: 2.1805625400208357
best_error: 2.1805625394857597
best_error: 2.180562532350761
best_error: 2.180296545832623
best_error: 2.180296410476655
best_error: 2.1802947095708958
best_error: 2.1802946918276134
best_error: 2.180253037032495
best_error: 2.1802530203007393
best_error: 2.1789244277604225
best_error: 2.178924407376851
best_error: 2.1780941514885934
best_error: 2.1780941506000127
best_error: 2.1780940211942967
best_error: 2.103673958738375
best_error: 2.103673882514221
best_error: 2.10367362319359
best_error: 2.0992980704057027
best_error: 2.099298056210706
best_error: 1.786975450892679
best_error: 1.7869751527919175
best_error: 1.7869749706763816
best_error: 1.7143326535596812
best_error: 1.7143326267541852
best_error: 1.6852860412270596
best_error: 1.685285989478694
best_error: 1.6730149686229359
best_error: 1.673014953912322
best_error: 1.6705981352373847
best_error: 1.6705980674751206
best_error: 1.6698277359255809
best_error: 1.669827733426448
best_error: 1.6696853051548495
best_error: 1.6696853037091686
best_error: 1.6696462290593703
best_error: 1.669646226799806
best_error: 1.6691078910324497
best_error: 1.6691078793130836
best_error: 1.668992711611623
best_error: 1.6689927112814482
best_error: 1.6689927111937737
best_error: 1.6689927108752836
best_error: 1.6689676792920483
best_error: 1.6689676788037422
best_error: 1.6689676785767853
best_error: 1.668785794484372
best_error: 1.6687857879397496
best_error: 1.6684199804510884
best_error: 1.6684199664822814
best_error: 1.6676747155094658
best_error: 1.6676746919371823
best_error: 1.6638239494333538
best_error: 1.6638239318984736
best_error: 1.6619534871396138
best_error: 1.6619534279197312
best_error: 1.6611502101210336
best_error: 1.6611501468802854
best_error: 1.657694893628749
best_error: 1.6576948404202003
best_error: 1.6526491322188175
best_error: 1.652649058648945
best_error: 1.6332080473301573
best_error: 1.6332079368422419
best_error: 1.6322627518553634
best_error: 1.632262708098551
best_error: 1.5974624698264137
best_error: 1.597462168369267
best_error: 1.5974610107372762
best_error: 1.5913205861212625
best_error: 1.5913203285612068
best_error: 1.5637329185998003
best_error: 1.5637327072301568
best_error: 1.5506200631633802
best_error: 1.5506200162949515
best_error: 1.539794635494309
best_error: 1.5397946070579036
best_error: 1.535617428796547
best_error: 1.5356173993582953
best_error: 1.5351810233789296
best_error: 1.5351810001031492
best_error: 1.5344431367057796
best_error: 1.5344431233767997
best_error: 1.5342465937735799
best_error: 1.534246589992561
best_error: 1.533930513322521
best_error: 1.5339305076700638
best_error: 1.5336981633270184
best_error: 1.5336981547040447
best_error: 1.5336728820324195
best_error: 1.5336728712856433
best_error: 1.5332915389182509
best_error: 1.5332915324268044
best_error: 1.5325094272722541
best_error: 1.5325094270474644
best_error: 1.5325094265350712
best_error: 1.5325094264890127
best_error: 1.5320092109710943
best_error: 1.532009210202963
best_error: 1.5317000946487027
best_error: 1.5317000938771628
best_error: 1.5304937404112864
best_error: 1.5304937396510159
best_error: 1.5304937396234632
best_error: 1.5261630843963636
best_error: 1.5261630832508675
best_error: 1.5210796685457786
best_error: 1.5210796306112684
best_error: 1.5177659837697184
best_error: 1.5177659343825718
best_error: 1.5088413957521
best_error: 1.5088413326333168
best_error: 1.5056697286829857
best_error: 1.5056697148628444
best_error: 1.5027045940063308
best_error: 1.5027044891409078
best_error: 1.5018707034756267
best_error: 1.5018706634009233
best_error: 1.50161785430965
best_error: 1.501617685280683
best_error: 1.501617672043599
best_error: 1.4999874936376838
best_error: 1.4999873948617395
best_error: 1.4994304162555676
best_error: 1.499430355029468
best_error: 1.494656911564264
best_error: 1.4946568380378287
best_error: 1.4946567505762212
best_error: 1.4926000496980205
best_error: 1.4926000102044548
best_error: 1.4919679293955215
best_error: 1.4919679286085807
best_error: 1.4917859572694179
best_error: 1.4917859555148798
best_error: 1.4916813618593514
best_error: 1.491681359922461
best_error: 1.4915626239916955
best_error: 1.491562623161277
best_error: 1.4913989773050518
best_error: 1.4913989761240447
best_error: 1.4912510718293703
best_error: 1.4912510698552317
best_error: 1.4911611578446906
best_error: 1.4911611527718043
best_error: 1.491148349771606
best_error: 1.4911483483516603
best_error: 1.491142356368011
best_error: 1.4911423561685568
best_error: 1.491142355503171
best_error: 1.491136851675826
best_error: 1.4911368472466209
best_error: 1.4911240338375022
best_error: 1.491124030962597
best_error: 1.4910851888086116
best_error: 1.491085187949027
best_error: 1.4909551202633593
best_error: 1.4909551014390092
best_error: 1.4909091391529339
best_error: 1.4909091361567972
best_error: 1.4909036863405347
best_error: 1.4909036858991782
best_error: 1.4909036854802977
best_error: 1.490903292449581
best_error: 1.4909032922272676
best_error: 1.4909032915885942
best_error: 1.4909022985961962
best_error: 1.4909022961317058
best_error: 1.4909017356722634
best_error: 1.4909017344957838
best_error: 1.4908990986972859
best_error: 1.4908990984843848
best_error: 1.4908990978417684
best_error: 1.4908851349690264
best_error: 1.4908851339605624
best_error: 1.4908613593902231
best_error: 1.4908613554888979
best_error: 1.4908404615553632
best_error: 1.490840455786029
best_error: 1.490673241731424
best_error: 1.4906732309621091
best_error: 1.490108732942221
best_error: 1.4901087075515451
best_error: 1.489322598499422
best_error: 1.4893225627673226
best_error: 1.4868684056473296
best_error: 1.4868683526444582
