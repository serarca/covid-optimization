ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 11.654987612021138
best_error: 11.654987578520329
best_error: 11.654987549542424
best_error: 11.438591101707066
best_error: 11.438591057894124
best_error: 11.438591024476908
best_error: 10.33101036039034
best_error: 10.331010256943205
best_error: 10.331010221453548
best_error: 9.424971743360109
best_error: 9.42497160234706
best_error: 9.157041869944265
best_error: 9.157041724648769
best_error: 9.108089448100374
best_error: 9.108089306176879
best_error: 7.850215363421134
best_error: 7.850215232165896
best_error: 6.178033633782499
best_error: 6.178033458048469
best_error: 4.9702861851875815
best_error: 4.97028599608845
best_error: 4.686331460276873
best_error: 4.686331268322645
best_error: 4.636190707500724
best_error: 4.636190511252735
best_error: 4.615437375153963
best_error: 4.615437177160899
best_error: 4.614421896527297
best_error: 4.614421726325922
best_error: 4.612601453475453
best_error: 4.612601255240694
best_error: 4.610869956018596
best_error: 4.610869757636288
best_error: 4.6106197253010945
best_error: 4.610619526897455
best_error: 4.610603826931422
best_error: 4.61060362852643
best_error: 4.610597630420754
best_error: 4.6105974320152345
best_error: 4.61059643022247
best_error: 4.61059625968422
best_error: 3.926527702214898
best_error: 3.92652756935162
best_error: 3.268660244936604
best_error: 3.268659921831372
best_error: 2.9326649474205078
best_error: 2.9326645609430133
best_error: 2.383232558315691
best_error: 2.058106219174717
best_error: 2.0363372942522626
best_error: 2.0363369574488415
best_error: 2.023258637230854
best_error: 2.0113251256766453
best_error: 2.0113247860582133
best_error: 2.007933244586451
best_error: 2.007932904613784
best_error: 1.9717408791920754
best_error: 1.9334525070255375
best_error: 1.7583571782745633
best_error: 1.7583567496116066
best_error: 1.7420637156145142
best_error: 1.742063270499996
best_error: 1.7349085333222432
best_error: 1.7349083666052378
best_error: 1.7308538100678423
best_error: 1.730853363886458
best_error: 1.7306431558245472
best_error: 1.7306427096231634
best_error: 1.7306097646753948
best_error: 1.7306093184707965
best_error: 1.7305997164269116
best_error: 1.730599270221342
best_error: 1.7305983586344333
best_error: 1.7305983474951776
best_error: 1.7287008431365423
best_error: 1.728700391993398
best_error: 1.7283446351288887
best_error: 1.7283441830108013
best_error: 1.727368363206661
best_error: 1.727367911224204
best_error: 1.7244339995799742
best_error: 1.7244335481966373
best_error: 1.7153177820498398
best_error: 1.7153173310670162
best_error: 1.7080423613644675
best_error: 1.7080419097442947
best_error: 1.701368004976312
best_error: 1.701367545806599
best_error: 1.6991087746793276
best_error: 1.6991083149672248
best_error: 1.6975690022786867
best_error: 1.6975685375507226
best_error: 1.6966417734517665
best_error: 1.6966413121794126
best_error: 1.6892395199433508
best_error: 1.6892390601033318
best_error: 1.6879382478646048
best_error: 1.687937787881669
best_error: 1.687243684592145
best_error: 1.6872432245328186
best_error: 1.687199871519574
best_error: 1.6871994114557074
best_error: 1.6871777175352727
best_error: 1.6871772574690942
best_error: 1.6871745839489596
best_error: 1.6871741238824773
best_error: 1.6871739095858633
best_error: 1.687173861098079
best_error: 1.6871737894056356
best_error: 1.6871736802819806
best_error: 1.6871736722293433
best_error: 1.6871736428582707
best_error: 1.6871736015506675
best_error: 1.6871525708061295
best_error: 1.6871521107347764
best_error: 1.6871514480517193
best_error: 1.687151280463387
best_error: 1.687102853199478
best_error: 1.687102565331564
best_error: 1.6871023977397044
best_error: 1.6871022729656195
best_error: 1.6871019414612314
best_error: 1.6871017738693888
best_error: 1.6870999450762947
best_error: 1.6870997774845087
best_error: 1.6870919595410825
best_error: 1.6870917919495168
best_error: 1.6870866508983
best_error: 1.6870861908037202
best_error: 1.6870752407744616
best_error: 1.6870750308979061
best_error: 1.687074835610244
best_error: 1.687074821446343
