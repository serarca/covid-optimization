ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.42315630323875
best_error: 25.42315580053883
best_error: 5.087541422443109
best_error: 5.087541422327969
best_error: 5.087535734208715
best_error: 5.087535734195135
best_error: 5.08753573412765
best_error: 5.087512968345451
best_error: 5.087512968331845
best_error: 5.087512968264348
best_error: 5.0874216975306465
best_error: 5.087421697516937
best_error: 5.087421697449391
best_error: 5.087053260807928
best_error: 5.087053260793799
best_error: 5.087053260726059
best_error: 5.085523459364283
best_error: 5.085523459348381
best_error: 5.08552345927985
best_error: 5.078316483541016
best_error: 5.078316483515854
best_error: 5.078316483444144
best_error: 4.894306393673071
best_error: 4.894306372611413
best_error: 4.7965052609742935
best_error: 4.796505214863232
best_error: 3.597347046335812
best_error: 3.5973466456019048
best_error: 3.387506974490036
best_error: 3.387506909221888
best_error: 3.3753197366775836
best_error: 3.375319735719929
best_error: 3.375319735105159
best_error: 3.3635828772490135
best_error: 3.363582755863321
best_error: 3.362203764048074
best_error: 3.362203650479464
best_error: 3.3436784197636285
best_error: 3.343678351444637
best_error: 2.7464042516016205
best_error: 2.7464037811543984
best_error: 2.7333981883712593
best_error: 2.7333977237716987
best_error: 2.649178046627223
best_error: 2.6491779655216017
best_error: 2.6404182083613987
best_error: 2.6404181296378413
best_error: 2.613108373580425
best_error: 2.6131083362931107
best_error: 2.597428183637858
best_error: 2.597428139593967
best_error: 2.5974273972451476
best_error: 2.573696304967338
best_error: 2.5736963010100493
best_error: 2.573696297544148
best_error: 2.549150239077463
best_error: 2.5491502355333497
best_error: 2.5491502310175935
best_error: 2.4402293533445385
best_error: 2.440229349877748
best_error: 2.4402293439196243
best_error: 2.3397310056493006
best_error: 2.3397307967234404
best_error: 2.247105884352468
best_error: 2.247105817530356
best_error: 2.2427675632223263
best_error: 2.2427675598171333
best_error: 2.2423650458812157
best_error: 2.2423650425908512
best_error: 2.242008682192632
best_error: 2.2420086791517697
best_error: 2.2419180242700816
best_error: 2.241918021363685
best_error: 2.2419180213427965
best_error: 2.2418915455560273
best_error: 2.2418915426728487
best_error: 2.2418883936795964
best_error: 2.2418883906865443
best_error: 2.24188604565162
best_error: 2.2418860427240417
best_error: 2.241885969909612
best_error: 2.2418859669704574
best_error: 2.241885854621989
best_error: 2.2418858516866846
best_error: 2.2418856954295974
best_error: 2.241885692502036
best_error: 2.2418853556282587
best_error: 2.2418853526917673
best_error: 2.2418842839635142
best_error: 2.2418842810355057
best_error: 2.2418785071820575
best_error: 2.241878504265647
best_error: 2.2418634695957467
best_error: 2.241863466698874
best_error: 2.241850921204989
best_error: 2.241850919854501
best_error: 2.2418509183604654
best_error: 2.241850918262143
best_error: 2.241775534180558
best_error: 2.241775529887116
best_error: 2.241359723403456
best_error: 2.241359703395041
best_error: 2.240827558908106
best_error: 2.2408275254788412
best_error: 2.238264857327882
best_error: 2.2382648029349044
best_error: 2.218505200974416
best_error: 2.218505123074098
best_error: 2.2124188148201474
best_error: 2.212418736264783
best_error: 2.2107485805279476
best_error: 2.210748505226231
best_error: 2.2043780093496785
best_error: 2.204377940481321
best_error: 2.1919089792895097
best_error: 2.1919089756123937
best_error: 2.1887074386776004
best_error: 2.1887074359389693
best_error: 2.188139736775743
best_error: 2.1881397342837046
best_error: 2.184731601064827
best_error: 2.1847315991021685
best_error: 2.1847315987004827
best_error: 2.184311944750333
best_error: 2.184311942883509
best_error: 2.18431194136745
best_error: 2.1842780564613866
best_error: 2.1842780542796176
best_error: 2.1842780530850536
best_error: 2.184272302250598
best_error: 2.18427230012877
best_error: 2.184272298909444
best_error: 2.1842718257122744
best_error: 2.1842718236123186
best_error: 2.1842718223375504
best_error: 2.184271659085437
best_error: 2.1842716569785554
best_error: 2.1842716557445363
best_error: 2.184271372005447
best_error: 2.184271369905436
best_error: 2.1842713686646325
best_error: 2.1842703750329804
best_error: 2.184270372940011
best_error: 2.184270371703816
best_error: 2.1842683270247996
best_error: 2.1842683249101653
best_error: 2.1842683239570944
best_error: 2.1842589150967218
best_error: 2.184258912982317
best_error: 2.184258911892602
best_error: 2.1842481282023503
best_error: 2.1842481260879714
best_error: 2.1842481249186916
best_error: 2.184184079895222
best_error: 2.1841840794295697
best_error: 2.184184077773893
best_error: 2.184184076440094
best_error: 2.184010958885172
best_error: 2.184010947507544
best_error: 2.183807772840469
best_error: 2.183807754669743
best_error: 2.182775110382719
best_error: 2.1827750744467087
best_error: 2.1799606149996906
best_error: 2.179960566575157
best_error: 2.169803872657519
best_error: 2.1698037497160594
best_error: 2.1600133492893105
best_error: 2.1600132314343075
best_error: 2.1507719953244426
best_error: 2.1507718837262995
best_error: 2.14605483877594
best_error: 2.146054727590717
best_error: 2.1272455650180775
best_error: 2.1272454577985034
best_error: 2.0945381797884717
best_error: 2.0945381753200722
best_error: 2.0939136476044133
best_error: 2.093913643214533
best_error: 2.0935218842256598
best_error: 2.0935218799368256
best_error: 2.093345269980789
best_error: 2.0933452657341274
best_error: 2.0933389195777368
best_error: 2.0933389153840753
best_error: 2.093230972622565
best_error: 2.093230968398873
best_error: 2.093152880920667
best_error: 2.093152876696773
best_error: 2.0923040880192945
best_error: 2.09230408082841
best_error: 2.091001711689335
best_error: 2.091001703938494
best_error: 2.089220310390093
best_error: 2.089220292268042
best_error: 2.0890261198029525
best_error: 2.0890261003849195
best_error: 2.0888926479407757
best_error: 2.0888926432302295
best_error: 2.0888926423635987
best_error: 2.0888739453666556
best_error: 2.088873939872306
best_error: 2.08887393977747
best_error: 2.0888499305886437
best_error: 2.0888499125006934
best_error: 2.0888290824453972
best_error: 2.088829072934079
best_error: 2.088778989553351
best_error: 2.088778976947065
best_error: 2.088520280679548
best_error: 2.088520259522042
best_error: 2.0875653554977576
best_error: 2.0875653170324444
best_error: 2.0843865184175363
best_error: 2.0843864614525027
best_error: 2.072763577085712
best_error: 2.072763415642565
best_error: 2.066463637906501
best_error: 2.066463540017984
best_error: 2.055881856955503
best_error: 2.0558817678872985
best_error: 2.018304590199169
best_error: 2.018304552061275
best_error: 1.9768743681455307
best_error: 1.9768742904370262
best_error: 1.9768572502758721
best_error: 1.9233434987960072
best_error: 1.9233434601856825
best_error: 1.9181178959529919
best_error: 1.9181178528575693
best_error: 1.9163104639283162
best_error: 1.9163104457244842
best_error: 1.9150493457504927
best_error: 1.915049345738308
best_error: 1.9150493456188544
best_error: 1.9150493454334174
best_error: 1.9145267722683639
best_error: 1.914526772190523
best_error: 1.9145267720745127
best_error: 1.914475432389053
best_error: 1.9144754323092394
best_error: 1.9144754322989772
best_error: 1.914471409184955
best_error: 1.914471407496055
best_error: 1.914470094468344
best_error: 1.9144700944052502
best_error: 1.9144700943529591
best_error: 1.9144700824659433
best_error: 1.9144700822557723
best_error: 1.9144700255527212
best_error: 1.9144700254900624
best_error: 1.9144700254600542
best_error: 1.9144700094184057
best_error: 1.9144700093568676
best_error: 1.9144700093240872
best_error: 1.914470006499436
best_error: 1.9144700064378952
best_error: 1.9144700064051186
best_error: 1.9144700055176957
best_error: 1.9144700054561545
best_error: 1.9144700054233792
best_error: 1.9144700051137915
best_error: 1.9144700051116854
best_error: 1.914470005052288
best_error: 1.914470005020179
best_error: 1.9144700049998704
best_error: 1.9144700049853887
best_error: 1.9144700049692784
