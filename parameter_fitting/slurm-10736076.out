ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.369645790836753
best_error: 10.369645709091731
best_error: 10.264752539685016
best_error: 10.264752444408249
best_error: 8.707116777048963
best_error: 8.707116470284532
best_error: 6.129846434663646
best_error: 6.129845831564654
best_error: 5.023427632267432
best_error: 5.02342722673671
best_error: 4.886924288918638
best_error: 4.886924288883731
best_error: 4.798988094674108
best_error: 4.7989880268010445
best_error: 4.796384078153599
best_error: 4.796384078090213
best_error: 4.796384069264478
best_error: 4.794834332440327
best_error: 4.794834332375723
best_error: 4.794834323049031
best_error: 4.794662077702538
best_error: 4.794662077637924
best_error: 4.794662068301323
best_error: 4.794602737970207
best_error: 4.79460273790557
best_error: 4.79460272855831
best_error: 4.794594929182566
best_error: 4.794594866458264
best_error: 4.794593750329566
best_error: 4.79459375026494
best_error: 4.794593740917617
best_error: 4.794590031397247
best_error: 4.794589968672186
best_error: 4.794589645789687
best_error: 4.79458964572505
best_error: 4.794589636377699
best_error: 4.794589596661387
best_error: 4.794589596587017
best_error: 4.7945895822613025
best_error: 4.791759339980645
best_error: 4.791759275549364
best_error: 4.790964161646512
best_error: 4.7909640967673335
best_error: 4.787765423419193
best_error: 4.787765356501021
best_error: 4.785421437629022
best_error: 4.785421370847918
best_error: 4.784260019519716
best_error: 4.784259952169925
best_error: 4.783650602238863
best_error: 4.7836505347170775
best_error: 4.783335535030379
best_error: 4.783335467144472
best_error: 4.783147887303118
best_error: 4.783147819764017
best_error: 4.783122703182597
best_error: 4.783122635895301
best_error: 4.7831153508190685
best_error: 4.783115283539443
best_error: 4.783108786079945
best_error: 4.783108718807142
best_error: 4.783104420287304
best_error: 4.783104353019031
best_error: 4.7831006972107115
best_error: 4.783100629946303
best_error: 4.783096788497535
best_error: 4.78309672123717
best_error: 4.7830941514640095
best_error: 4.7830940842063745
best_error: 4.783088367644393
best_error: 4.783088300392739
best_error: 4.783085805806494
best_error: 4.783085738557484
best_error: 4.783085018282707
best_error: 4.78308495103451
best_error: 4.783084303136745
best_error: 4.783084235889291
best_error: 4.783083912933473
best_error: 4.783083845686429
best_error: 4.783083561379957
best_error: 4.78308349413327
best_error: 4.783083355744198
best_error: 4.783083288497724
best_error: 4.783083173835614
best_error: 4.783083106589329
best_error: 4.783083047536041
best_error: 4.783082980289892
best_error: 4.783082941843935
best_error: 4.783082874597891
best_error: 4.78308281786651
best_error: 4.783082750620597
best_error: 4.783082737373904
best_error: 4.783082670128073
best_error: 4.783082557515355
best_error: 4.783082490269715
best_error: 4.7830824646288805
best_error: 4.783082441919862
best_error: 4.783082426246319
best_error: 4.783082413090238
best_error: 4.783082397864896
best_error: 4.783082387906246
best_error: 4.78308233903402
best_error: 4.78308233682762
best_error: 4.77055703160387
best_error: 4.770557031564353
best_error: 4.766608364294793
best_error: 4.766608316539399
best_error: 4.763465198849635
best_error: 4.763465156113316
best_error: 4.761035454195271
best_error: 4.76103541388614
best_error: 4.75993689828227
best_error: 4.759936860389189
best_error: 4.759934502762065
best_error: 4.759934502711389
best_error: 4.759934499168082
best_error: 4.759921045455964
best_error: 4.75992100743198
best_error: 4.759558332240391
best_error: 4.759558294535301
best_error: 4.7583192340954055
best_error: 4.758319234045434
best_error: 4.758319230812105
best_error: 4.749427125684173
best_error: 4.749427125636367
best_error: 4.749427123463446
best_error: 4.7198434298159295
best_error: 4.719843429782114
best_error: 4.719843429286864
best_error: 4.702766632519011
best_error: 4.702766632501603
best_error: 4.701000015559286
best_error: 4.701000015553033
best_error: 4.698989919012616
best_error: 4.698989918999037
best_error: 4.686030060801682
best_error: 4.686030060789104
best_error: 4.641876105412869
best_error: 4.641876105406722
best_error: 4.62044579107275
best_error: 4.620445626836079
best_error: 4.559592757493928
best_error: 4.5595927294001095
best_error: 4.557874695854446
best_error: 4.557874667626594
best_error: 4.557248346772637
best_error: 4.557248346760206
best_error: 4.55465700676708
best_error: 4.554656974505744
best_error: 4.547925156074458
best_error: 4.547925102752673
best_error: 4.547235065007909
best_error: 4.5472350649729165
best_error: 4.547124391093836
best_error: 4.54712433219078
best_error: 4.5471240177987475
best_error: 4.547124017758533
best_error: 4.547124014056964
best_error: 4.54712400794204
best_error: 4.547124007901826
