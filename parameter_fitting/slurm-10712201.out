ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 12.740772089190198
best_error: 12.740772073125179
best_error: 12.740772062200906
best_error: 10.584173049589252
best_error: 10.58417294381542
best_error: 9.320712009165467
best_error: 9.320711865507448
best_error: 9.135382746343208
best_error: 9.135382653103203
best_error: 9.035014373940307
best_error: 9.03501432335435
best_error: 6.186764049805674
best_error: 6.186763935641082
best_error: 5.739689012972656
best_error: 5.739689010169613
best_error: 5.644562909039593
best_error: 5.64456276851266
best_error: 5.215097897649903
best_error: 5.215097895983783
best_error: 4.924839690257867
best_error: 4.924839290143861
best_error: 4.879210092592241
best_error: 4.879209734456616
best_error: 4.8604262429328156
best_error: 4.8604258890449366
best_error: 4.857757770660217
best_error: 4.857757417376943
best_error: 4.857647228970322
best_error: 4.857646875683589
best_error: 4.857634412486682
best_error: 4.8576340591995475
best_error: 4.8576303001605385
best_error: 4.85762994687327
best_error: 4.844140340063724
best_error: 4.844140016224651
best_error: 4.843503468938415
best_error: 4.843503145477056
best_error: 4.841261210669871
best_error: 4.841260890070008
best_error: 4.838461870781915
best_error: 4.838461581425319
best_error: 4.83626228229508
best_error: 4.836261978542591
best_error: 4.81830826992744
best_error: 4.8183079601025955
best_error: 4.734297524197679
best_error: 4.7342971838790024
best_error: 4.705100212890507
best_error: 4.705099866444979
best_error: 4.680121985066337
best_error: 4.680121630725053
best_error: 4.6691724461827295
best_error: 4.669172087665954
best_error: 4.659718994787593
best_error: 4.659718637797725
best_error: 4.6590674822152645
best_error: 4.659067125115383
best_error: 4.658811976273318
best_error: 4.65881197517251
best_error: 4.658811927207576
best_error: 4.658791092789492
best_error: 4.658790735642809
best_error: 4.658755522892605
best_error: 4.6587551657426465
best_error: 4.658747152675351
best_error: 4.6587467955245945
best_error: 4.658745656096837
best_error: 4.658745298945939
best_error: 4.65874495538492
best_error: 4.658744954284364
best_error: 4.658744906320095
best_error: 4.658744854818099
best_error: 4.65874461883811
best_error: 4.658744597810342
best_error: 4.658744563570766
best_error: 4.6587445481298735
best_error: 4.658744543736386
best_error: 4.65874454263588
best_error: 4.658733696549541
best_error: 4.658733339401351
best_error: 4.658577433454901
best_error: 4.658577076344474
best_error: 4.657947546049986
best_error: 4.657947544720534
best_error: 4.657947497000727
best_error: 4.656087207047023
best_error: 4.656087204948543
best_error: 4.65608715804147
best_error: 4.655519639953955
best_error: 4.655519636443678
best_error: 4.653895899297064
best_error: 4.653895552372424
best_error: 4.651936310423517
best_error: 4.6519363057822805
best_error: 4.650638525866755
best_error: 4.650638520607423
best_error: 4.650297960453125
best_error: 4.650297620484943
best_error: 4.6500784816704215
best_error: 4.650078144199166
best_error: 4.647679748500785
best_error: 4.647679425715971
best_error: 4.64637884448778
best_error: 4.646378519114185
best_error: 4.645760139926688
best_error: 4.64575981366568
best_error: 4.645574074459305
best_error: 4.645573745639647
best_error: 4.6454644425223774
best_error: 4.6454641136470975
best_error: 4.645425355480344
best_error: 4.6454250265851496
best_error: 4.64541118285058
best_error: 4.645410852097123
best_error: 4.645405675376039
best_error: 4.645405344621492
best_error: 4.6454025075200445
best_error: 4.645402176764884
best_error: 4.645400693854307
best_error: 4.645400363098791
best_error: 4.645399663616338
best_error: 4.645399332860622
best_error: 4.645399085042921
best_error: 4.645398754287096
best_error: 4.645398434136593
best_error: 4.64539841458412
best_error: 4.645398393350199
best_error: 4.645398370848584
best_error: 4.645398364822146
best_error: 4.64539836268861
best_error: 4.645398362042336
best_error: 4.645398361997923
