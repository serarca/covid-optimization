ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 86
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 96.95937007635351
best_error: 96.95937000509348
best_error: 96.95936998229497
best_error: 96.95936993834346
best_error: 96.95936991766388
best_error: 18.235741667223216
best_error: 18.23574141776143
best_error: 18.235739678328684
best_error: 15.85909891483037
best_error: 15.85909891420557
best_error: 15.85909888429656
best_error: 15.795729258324046
best_error: 15.795729257631638
best_error: 15.795729224360166
best_error: 15.473423889593583
best_error: 15.473423888671404
best_error: 15.473423835183187
best_error: 9.863400200577132
best_error: 9.863400177438287
best_error: 9.863400165560316
best_error: 9.689724953834839
best_error: 9.689724905357407
best_error: 9.665711198225619
best_error: 9.665711156630032
best_error: 9.64573685380567
best_error: 9.64573681759063
best_error: 9.63235735527891
best_error: 9.632357319491753
best_error: 9.629282597744744
best_error: 9.62928256164248
best_error: 9.62773320427909
best_error: 9.627733168548477
best_error: 9.627147447770932
best_error: 9.62714741198063
best_error: 9.627140013209823
best_error: 9.62713997741876
best_error: 9.627136830173356
best_error: 9.627136794381972
best_error: 9.62713636947781
best_error: 9.62713634959827
best_error: 9.627136338372875
best_error: 9.627136087940979
best_error: 9.627136052149519
best_error: 9.627135462465946
best_error: 9.627135426674425
best_error: 9.62713535264508
best_error: 9.627135352644121
best_error: 9.627135343793423
best_error: 9.627135332160496
best_error: 9.532069126936754
best_error: 9.532069074892188
best_error: 9.215752100432232
best_error: 9.215751811235734
best_error: 9.152987168557342
best_error: 9.152986849560456
best_error: 8.870661226517791
best_error: 8.87066092771278
best_error: 8.522914024863022
best_error: 8.522914010298978
best_error: 8.522914007517613
best_error: 8.405372030440365
best_error: 8.405372014464497
best_error: 8.405372009752993
best_error: 8.38398463844383
best_error: 8.38398460416614
best_error: 8.015549613810533
best_error: 8.015549529092432
best_error: 7.9596662374722325
best_error: 7.959666201261135
best_error: 7.896617428488254
best_error: 7.896616954335179
best_error: 7.571482412047489
best_error: 7.571482400417068
best_error: 7.57148239898741
best_error: 7.558551406437062
best_error: 7.55855121693555
best_error: 7.523953195513336
best_error: 7.523952976506022
best_error: 7.523499899389112
best_error: 7.523499882649363
best_error: 7.519806477935456
best_error: 7.51980645803143
best_error: 7.512405806721808
best_error: 7.512405787261918
best_error: 7.502318487097547
best_error: 7.502318465207008
best_error: 7.4840525533983335
best_error: 7.484052530046244
best_error: 7.438650366832749
best_error: 7.438650341900762
best_error: 7.425204992934812
best_error: 7.425204858147477
best_error: 7.416161234575835
best_error: 7.416161123773177
best_error: 7.415822345877763
best_error: 7.415822319171498
best_error: 7.413232298804868
best_error: 7.413232197898728
best_error: 7.413122960250161
best_error: 7.413122934354533
best_error: 7.412632227174089
best_error: 7.412632136829918
best_error: 7.412629002931009
best_error: 7.412628977054886
best_error: 7.41245466863955
best_error: 7.412454578269956
best_error: 7.412438136093236
best_error: 7.4124381102616566
best_error: 7.412411120387398
best_error: 7.412411030011574
best_error: 7.4123917613003965
best_error: 7.412391735470177
best_error: 7.409839475877359
best_error: 7.409839385319115
best_error: 7.4003637962347115
best_error: 7.400363769742632
best_error: 7.377228772494302
best_error: 7.377228741870743
best_error: 7.355273877704072
best_error: 7.355273841218792
best_error: 7.322092501073947
best_error: 7.322092467678962
best_error: 7.299001697153836
best_error: 7.299001686624096
best_error: 7.299001678759126
best_error: 7.284887627975805
best_error: 7.284887610466168
best_error: 7.279148793668248
best_error: 7.279148770945108
best_error: 7.276860552655555
best_error: 7.276860531939234
best_error: 7.273866958590386
best_error: 7.27386693851327
best_error: 7.268136637175757
best_error: 7.268136614251343
best_error: 7.185534879267873
best_error: 7.185534866263114
best_error: 7.159064255855096
best_error: 7.159064209653503
best_error: 7.129180866992276
best_error: 7.129180641682595
best_error: 7.082157680295992
best_error: 7.08215764405776
best_error: 7.082069193332513
best_error: 7.082069192126356
best_error: 7.082069183576209
best_error: 7.082005158354336
best_error: 7.082005122108365
best_error: 7.077828978270347
best_error: 7.077828977069403
best_error: 7.077828965765489
best_error: 7.076843328101184
best_error: 7.0768432920720805
best_error: 7.076731279055883
best_error: 7.076731243029476
best_error: 7.076709070267777
best_error: 7.076709034241942
best_error: 7.076706521793261
best_error: 7.0767064857674535
best_error: 7.076706304064608
best_error: 7.076706302885593
best_error: 7.076706291368105
best_error: 7.076706133856089
best_error: 7.0767060978302965
best_error: 7.076706038941068
best_error: 7.076706037762061
best_error: 7.076706036316415
best_error: 7.0766813979592085
best_error: 7.076681396780803
best_error: 7.076681385258492
best_error: 7.076677558294417
best_error: 7.07667755711607
best_error: 7.076677545593166
best_error: 7.07667583624035
best_error: 7.076675835062032
best_error: 7.076675823538866
best_error: 7.076675008644699
best_error: 7.076675007466392
best_error: 7.076674995943101
best_error: 7.07667459862302
best_error: 7.07667459744472
best_error: 7.076674585921365
best_error: 7.0766743919173125
best_error: 7.076674390739016
best_error: 7.076674379215628
best_error: 7.0766741717395725
best_error: 7.076674170561278
best_error: 7.076674159037857
best_error: 7.076674094633057
best_error: 7.0766740934547645
best_error: 7.076674081931335
best_error: 7.076674035574667
