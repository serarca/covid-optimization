ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 23.120610575639112
best_error: 23.12061057563762
best_error: 23.12061057563376
best_error: 23.042195553731347
best_error: 23.042195553729037
best_error: 23.04219555372351
best_error: 23.04219488659398
best_error: 23.042194886591673
best_error: 23.04219488658615
best_error: 23.042192224150106
best_error: 23.0421922241478
best_error: 23.04219222414231
best_error: 23.042181670250944
best_error: 23.042181670248624
best_error: 23.04218167024327
best_error: 23.042140882027088
best_error: 23.042140882024718
best_error: 23.04214088201986
best_error: 23.041995480125745
best_error: 23.041995480123195
best_error: 23.041995480119812
best_error: 23.04178355570938
best_error: 23.04178355570596
best_error: 23.04178355570595
best_error: 23.04178355570594
best_error: 23.041783555705873
best_error: 23.041783555705628
best_error: 23.041783555704626
best_error: 23.041783555704058
best_error: 23.04178355570063
best_error: 23.041783555688077
best_error: 23.041783555684653
best_error: 23.04178355562417
best_error: 23.041783555620746
best_error: 23.041783555368546
best_error: 23.04178355536512
best_error: 23.04178355434604
best_error: 23.04178355434262
best_error: 23.041783550255982
best_error: 23.041783550252564
best_error: 23.04178353389527
best_error: 23.041783533891845
best_error: 23.041783468444496
best_error: 23.041783468441068
best_error: 23.041783206514708
best_error: 23.041783206511283
best_error: 23.041782156764615
best_error: 23.041782156761176
best_error: 23.041777925004094
best_error: 23.04177792500061
best_error: 23.041773661764726
best_error: 23.0417736617612
best_error: 23.041773661761194
best_error: 23.041773661761177
best_error: 23.041773661761113
best_error: 23.04177366176085
best_error: 23.041773661759787
best_error: 23.041773661759077
best_error: 23.041773661755553
best_error: 23.041773661742134
best_error: 23.041773661738606
best_error: 23.041773661674362
best_error: 23.041773661670838
best_error: 23.04177366140326
best_error: 23.041773661399738
best_error: 23.041773660318867
best_error: 23.041773660315343
best_error: 23.04177365598125
best_error: 23.041773655977728
best_error: 23.04177363863024
best_error: 23.041773638626715
best_error: 23.041773569217423
best_error: 23.041773569213895
best_error: 23.04177329142572
best_error: 23.041773291422196
best_error: 23.04177217800733
best_error: 23.04177217800379
best_error: 23.04176768800064
best_error: 23.041767687997055
best_error: 23.041763162021304
best_error: 23.041763162017666
best_error: 23.041763162017645
best_error: 23.041763162017578
best_error: 23.041763162017297
best_error: 23.041763162016167
best_error: 23.041763162015293
best_error: 23.04176316201166
best_error: 23.04176316199726
best_error: 23.04176316199363
best_error: 23.041763161925143
best_error: 23.041763161921512
best_error: 23.041763161636663
best_error: 23.041763161633035
best_error: 23.041763160482745
best_error: 23.041763160479114
best_error: 23.04176315586703
best_error: 23.0417631558634
best_error: 23.04176313740357
best_error: 23.041763137399933
best_error: 23.041763063539932
best_error: 23.041763063536294
best_error: 23.04176276792877
best_error: 23.041762767925135
best_error: 23.041761582972732
best_error: 23.041761582969087
best_error: 23.04175680260624
best_error: 23.041756802602542
best_error: 23.04175198089647
best_error: 23.041751980892723
best_error: 23.04175198089272
best_error: 23.041751980892702
best_error: 23.041751980892624
best_error: 23.04175198089233
best_error: 23.041751980891128
best_error: 23.04175198089008
best_error: 23.041751980886332
best_error: 23.041751980870906
best_error: 23.041751980867154
best_error: 23.041751980794192
best_error: 23.04175198079044
best_error: 23.04175198048734
best_error: 23.04175198048359
best_error: 23.041751979259935
best_error: 23.041751979256183
best_error: 23.041751974350262
best_error: 23.041751974346514
best_error: 23.0417519547109
best_error: 23.041751954707152
best_error: 23.041751876142555
best_error: 23.041751876138807
best_error: 23.04175156169476
best_error: 23.041751561691008
best_error: 23.04175030110627
best_error: 23.041750301102503
best_error: 23.04174521357455
best_error: 23.041745213570728
best_error: 23.041740078714025
best_error: 23.04174007871015
best_error: 23.041740078710145
best_error: 23.04174007871014
best_error: 23.04174007871012
best_error: 23.041740078710042
best_error: 23.04174007870972
best_error: 23.041740078708436
best_error: 23.04174007870719
best_error: 23.04174007870331
best_error: 23.041740078686683
best_error: 23.041740078682803
best_error: 23.041740078604658
best_error: 23.041740078600778
best_error: 23.041740078276554
best_error: 23.041740078272674
best_error: 23.041740076964143
best_error: 23.04174007696026
best_error: 23.041740071714436
best_error: 23.041740071710556
best_error: 23.041740050714857
best_error: 23.04174005071098
best_error: 23.041739966704288
best_error: 23.041739966700412
best_error: 23.041739630465827
best_error: 23.041739630461944
best_error: 23.041738282365333
best_error: 23.04173828236144
best_error: 23.04173432226076
best_error: 23.041734322260616
best_error: 23.041734322260613
best_error: 23.041734322260602
best_error: 23.041734322260574
best_error: 23.041734322260474
best_error: 23.041734322260204
best_error: 23.041734322260055
best_error: 23.04173432225854
best_error: 23.041734322258396
best_error: 23.04173432225189
best_error: 23.04173432225175
best_error: 23.0417343222253
best_error: 23.041734322225153
best_error: 23.041734322118934
best_error: 23.04173432211878
best_error: 23.041734321693507
best_error: 23.04173432169336
best_error: 23.041734319992578
best_error: 23.041734319992436
best_error: 23.041734313201104
best_error: 23.04173431320096
best_error: 23.041734306463123
best_error: 23.041734306462978
