ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 70
days_switch 20
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 102.03292016251795
best_error: 102.03292007693857
best_error: 102.03291997068627
best_error: 20.269113630893894
best_error: 20.26911363089257
best_error: 20.269113628147732
best_error: 20.267257742910395
best_error: 20.267257740110708
best_error: 20.2594579822742
best_error: 20.259457979239045
best_error: 20.219908400049043
best_error: 20.219908395461
best_error: 16.719764271128405
best_error: 16.719763870269304
best_error: 15.978250313357005
best_error: 15.978250303698129
best_error: 15.978249240444633
best_error: 15.397746533015662
best_error: 15.3977463555484
best_error: 15.14959604629905
best_error: 15.149595958117724
best_error: 15.016234165180457
best_error: 15.016234157797564
best_error: 15.016234153655418
best_error: 15.016234145064619
best_error: 14.645431972096734
best_error: 14.645431966097314
best_error: 14.645431960590916
best_error: 14.645431951618505
best_error: 14.082750182193129
best_error: 14.082750150021582
best_error: 14.02132907132157
best_error: 14.021328963722617
best_error: 13.872860061285772
best_error: 13.87285998373058
best_error: 13.761648978800604
best_error: 13.761648972698573
best_error: 13.761648970806563
best_error: 13.761648961152854
best_error: 13.731468156938128
best_error: 13.731468132321973
best_error: 13.715576454202136
best_error: 13.715576452648579
best_error: 13.7155764481708
best_error: 13.71557644765976
best_error: 13.715576436563019
best_error: 13.711825298322163
best_error: 13.71182527519862
best_error: 13.68003288244989
best_error: 13.680032828220357
best_error: 13.619959177608173
best_error: 13.61995909653969
best_error: 13.604107856181026
best_error: 13.604107840204524
best_error: 13.588912806102286
best_error: 13.588912790475238
best_error: 13.544904932380092
best_error: 13.544904745986674
best_error: 13.54438748218764
best_error: 13.544387471620716
best_error: 13.544387468090367
best_error: 13.542092319968908
best_error: 13.542092310553949
best_error: 13.54209230609339
best_error: 13.537342128083147
best_error: 13.537342119526821
best_error: 13.537342114369789
best_error: 13.513269776689945
best_error: 13.513269519412358
best_error: 13.491464307717997
best_error: 13.491464305353535
best_error: 13.491464266944815
best_error: 13.491464256228843
best_error: 13.380472431108139
best_error: 13.380472315829335
best_error: 13.147790908218937
best_error: 13.147790694266838
best_error: 12.857280788284292
best_error: 12.857280486312076
best_error: 12.856451811623595
best_error: 12.856451509899246
best_error: 12.71293461117424
best_error: 12.712934599607657
best_error: 12.712934581137274
best_error: 12.707101485934164
best_error: 12.707101276616353
best_error: 12.702945640587448
best_error: 12.702945436461745
best_error: 12.687051625466424
best_error: 12.68705142857927
best_error: 12.672765195693554
best_error: 12.672765180575656
best_error: 12.672765171192557
best_error: 12.654108971778923
best_error: 12.654108970305534
best_error: 12.654108894550209
best_error: 12.429400941804605
best_error: 12.429400933568932
best_error: 12.429400913753847
best_error: 12.394943496224474
best_error: 12.39494347007434
best_error: 12.319013329116629
best_error: 12.31901331309824
best_error: 12.284678391807427
best_error: 12.284678377763594
best_error: 12.256945079911551
best_error: 12.25694490563054
best_error: 12.231185180889593
best_error: 12.231185037592109
best_error: 12.22840085233416
best_error: 12.228400835649675
best_error: 12.227518226561209
best_error: 12.22751821037085
best_error: 12.227468578117724
best_error: 12.227468440735468
best_error: 12.227459892251415
best_error: 12.227459876090816
best_error: 12.227307141455823
best_error: 12.227307004077845
best_error: 12.227304220355245
best_error: 12.227304204192212
best_error: 12.226375646363502
best_error: 12.226375630696099
best_error: 12.223482360614492
best_error: 12.223482345521258
best_error: 12.221436652736969
best_error: 12.22143663683945
best_error: 12.214185667441143
best_error: 12.214185652037473
best_error: 12.194913607570918
best_error: 12.194913592236095
best_error: 12.175876493569245
best_error: 12.17587647849799
best_error: 12.128003021217856
best_error: 12.12800302043109
best_error: 12.128002938868567
best_error: 12.118086055941859
best_error: 12.118086038724904
best_error: 12.115893562496922
best_error: 12.115893545561796
best_error: 12.11300566113782
best_error: 12.113005643547151
best_error: 12.112413588128904
best_error: 12.11241357051088
best_error: 12.112100431878208
best_error: 12.112100414349104
best_error: 12.108833095928945
best_error: 12.10883309304316
best_error: 12.108833043268326
