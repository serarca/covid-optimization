ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 84
days_switch 40
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 17.31133953668597
best_error: 17.31133923872956
best_error: 4.167691974747329
best_error: 4.16769197275395
best_error: 4.167691972648065
best_error: 4.16380655278676
best_error: 4.163806552623276
best_error: 4.163806550680656
best_error: 4.148005510453089
best_error: 4.148005510277818
best_error: 4.148005508319093
best_error: 4.080039087462922
best_error: 4.08003908723547
best_error: 4.080039085207764
best_error: 3.7250418179824196
best_error: 3.7250418173494726
best_error: 3.7250418149766915
best_error: 3.5689311062021805
best_error: 3.5689311052970716
best_error: 3.5689311031443474
best_error: 3.521469056383059
best_error: 3.521469055569439
best_error: 3.521469055274224
best_error: 3.515101830259888
best_error: 3.5151018277517814
best_error: 3.4118541453198983
best_error: 3.411854136595124
best_error: 3.393921770067402
best_error: 3.393921759973602
best_error: 3.356641318936295
best_error: 3.356641318330681
best_error: 3.3566413182303574
best_error: 3.3566413175778704
best_error: 3.355669255954106
best_error: 3.3556692554381926
best_error: 3.3556692536769464
best_error: 3.3179902142112256
best_error: 3.3179902136817976
best_error: 3.3179902134991206
best_error: 3.3179902119893736
best_error: 3.1281197837433963
best_error: 3.1281197826635547
best_error: 3.1281197812002906
best_error: 3.1121083707845076
best_error: 3.112108369692402
best_error: 3.1121083674855914
best_error: 3.089703105585913
best_error: 3.089703104973274
best_error: 3.089703100121513
best_error: 3.0868571353448595
best_error: 3.0868571350085845
best_error: 3.0868571295156726
best_error: 2.9173361091480308
best_error: 2.9173360780224873
best_error: 2.100414727244832
best_error: 2.1004145901670936
best_error: 1.731363398356727
best_error: 1.7313632215173158
best_error: 1.5127942454624144
best_error: 1.5127942417605091
best_error: 1.5125383185327568
best_error: 1.5125383099722365
best_error: 1.4810073114120135
best_error: 1.4810073082505386
best_error: 1.4646641159311946
best_error: 1.4646640938471231
best_error: 1.4554259396096956
best_error: 1.455425938019271
best_error: 1.4525658189288548
best_error: 1.4525658066709122
best_error: 1.448701601051609
best_error: 1.4487015768421347
best_error: 1.4221448421085936
best_error: 1.4221448091600937
best_error: 1.4084542406011216
best_error: 1.4084542196299727
best_error: 1.4067953851465453
best_error: 1.4067953830097517
best_error: 1.405102333008155
best_error: 1.4051023223646384
best_error: 1.4043975507226114
best_error: 1.4043975488343607
best_error: 1.4043059436770655
best_error: 1.4043059420077122
best_error: 1.4017276811590904
best_error: 1.4017276802297898
best_error: 1.399521485338241
best_error: 1.3995214839881591
best_error: 1.3905389990981547
best_error: 1.3905389957597847
best_error: 1.3829104787701771
best_error: 1.382910469096862
best_error: 1.3822161322909148
best_error: 1.3822161244498994
best_error: 1.3782369786481095
best_error: 1.3782369695851642
best_error: 1.3767108251131128
best_error: 1.376710815366005
best_error: 1.375979061201265
best_error: 1.3759790588821994
best_error: 1.3755737790865348
best_error: 1.3755737780640411
best_error: 1.3751759134817352
best_error: 1.3751759111968114
best_error: 1.3751211176059221
best_error: 1.3751211162209283
best_error: 1.3750949960854977
best_error: 1.3750949954159466
best_error: 1.3750827354746342
best_error: 1.375082735131993
best_error: 1.3750758413915596
best_error: 1.375075841046449
best_error: 1.3750707361347918
best_error: 1.3750707359574184
best_error: 1.3750656902094025
best_error: 1.3750656898802678
best_error: 1.3750472795168525
best_error: 1.3750472791399024
best_error: 1.3750434320766478
best_error: 1.3750434308721615
best_error: 1.3749847192469844
best_error: 1.3749847185333024
best_error: 1.374523054359584
best_error: 1.3745230513084663
best_error: 1.3743992551765973
best_error: 1.3743992497869768
best_error: 1.3743207578475298
best_error: 1.3743207508927902
best_error: 1.373774014947671
best_error: 1.3737740064053263
best_error: 1.3734687634343266
best_error: 1.373468739355014
best_error: 1.3724042592776449
best_error: 1.3724042491422594
best_error: 1.3723349328085905
best_error: 1.3723349037679333
best_error: 1.3704598824511622
best_error: 1.370459869941129
best_error: 1.3682923797181923
best_error: 1.3682923541656056
best_error: 1.3667980411631577
best_error: 1.366798027692931
best_error: 1.3655952966646359
best_error: 1.3655952802171476
best_error: 1.3623682956403877
best_error: 1.3623682849798533
best_error: 1.3612284874846594
best_error: 1.3612284860970902
best_error: 1.3599638135548913
best_error: 1.359963810992941
best_error: 1.359795482042564
best_error: 1.359795467834693
best_error: 1.3586458133365045
best_error: 1.3586458082443644
best_error: 1.3577823378336213
best_error: 1.357782331637463
best_error: 1.3569316789555927
best_error: 1.3569316766860755
best_error: 1.356106251236842
best_error: 1.3561062479790627
best_error: 1.3548494037761047
best_error: 1.3548494009106051
best_error: 1.3548421691497705
best_error: 1.3548421680828242
best_error: 1.3548419538477894
best_error: 1.3548419525685398
best_error: 1.354838015589012
best_error: 1.3548380139924046
best_error: 1.3548222866352488
best_error: 1.3548222838157367
best_error: 1.3548129923054262
best_error: 1.354812988932598
best_error: 1.3535671485210403
best_error: 1.3535671458727863
best_error: 1.353488466748575
best_error: 1.3534884665539209
best_error: 1.3534884648128327
best_error: 1.3534775755203565
best_error: 1.3534775749338235
best_error: 1.3534775747104737
best_error: 1.3534775746685022
best_error: 1.353470003132941
best_error: 1.3534700019036898
best_error: 1.353391053046323
best_error: 1.3533910527886481
best_error: 1.3533910521968944
best_error: 1.3531775568875535
best_error: 1.353177556700392
best_error: 1.3531775560186716
best_error: 1.353002726418176
best_error: 1.3530027257479333
best_error: 1.3530027254816446
best_error: 1.3522496069636412
best_error: 1.3522495970516337
best_error: 1.3522495779396329
best_error: 1.3492433281263068
best_error: 1.349243325275413
best_error: 1.3492433179695953
best_error: 1.3489284415607126
best_error: 1.348928440142358
best_error: 1.34863173018667
best_error: 1.3486317291149528
best_error: 1.3486317259208676
best_error: 1.348601135771855
best_error: 1.3486011340120663
best_error: 1.3482772304531212
best_error: 1.348277230325189
best_error: 1.3482772285340787
best_error: 1.3482757168879227
best_error: 1.3482757161082162
best_error: 1.348275715169454
best_error: 1.3482341712805157
best_error: 1.3482341700366407
best_error: 1.3482341695308688
best_error: 1.3480883398172074
best_error: 1.3480883397561454
best_error: 1.3480883381818294
best_error: 1.3480883380641373
best_error: 1.348083420293678
best_error: 1.3480834202367402
best_error: 1.3480834186414326
best_error: 1.3472054764968378
best_error: 1.3472054760838423
best_error: 1.3472054741187622
best_error: 1.346106490439497
best_error: 1.346106489697961
best_error: 1.3453123117240013
best_error: 1.3453123116960493
best_error: 1.3453123109252416
best_error: 1.3450738917752139
best_error: 1.345073891013246
best_error: 1.345073890910347
best_error: 1.3450302387607453
best_error: 1.3450302383621129
best_error: 1.345030237914315
best_error: 1.344880443749154
best_error: 1.3448804435113138
best_error: 1.3448804430064236
best_error: 1.3445177727324293
best_error: 1.3445177726860877
best_error: 1.344517772598525
best_error: 1.3444916721320155
best_error: 1.3444916720646947
best_error: 1.3444895114411743
best_error: 1.3444895112478943
best_error: 1.344489378208805
best_error: 1.3444893780163119
best_error: 1.3444893149826
best_error: 1.3444893149813018
best_error: 1.344489314979005
best_error: 1.3444892547191836
best_error: 1.344489254715588
best_error: 1.344489241604806
best_error: 1.3444892415905239
best_error: 1.3444892280186473
best_error: 1.3444892280150365
best_error: 1.3444892185691137
best_error: 1.3444892185654975
best_error: 1.3444892175534044
best_error: 1.3444892175497858
best_error: 1.3444892173459257
best_error: 1.3444892173423073
best_error: 1.3444892173239313
best_error: 1.344489217320316
