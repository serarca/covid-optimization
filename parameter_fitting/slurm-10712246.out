ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 24.376186898512895
best_error: 24.376186898503615
best_error: 24.37618688692499
best_error: 23.48963713013201
best_error: 23.489637130099567
best_error: 23.489637130074875
best_error: 23.46057503929487
best_error: 23.46057503926224
best_error: 23.460575039237934
best_error: 23.427538150518046
best_error: 23.42753815048539
best_error: 23.427538150460546
best_error: 23.427494479003684
best_error: 23.427494478970843
best_error: 23.4274944789465
best_error: 23.42732090671471
best_error: 23.427320906681118
best_error: 23.427320906658693
best_error: 23.426640868394855
best_error: 23.42664086835808
best_error: 23.42664086834281
best_error: 23.424007309292453
best_error: 23.424007309238817
best_error: 23.424007309238768
best_error: 23.42400730923856
best_error: 23.42400730923773
best_error: 23.42400730923442
best_error: 23.424007309221153
best_error: 23.424007309168108
best_error: 23.42400730900956
best_error: 23.424007308955925
best_error: 23.42400730816083
best_error: 23.424007308107196
best_error: 23.424007304765908
best_error: 23.424007304712276
best_error: 23.42400729118618
best_error: 23.424007291132543
best_error: 23.4240072368667
best_error: 23.42400723681306
best_error: 23.42400701957978
best_error: 23.42400701952614
best_error: 23.424006150287997
best_error: 23.424006150234348
best_error: 23.424002670813643
best_error: 23.42400267075993
best_error: 23.423988715896648
best_error: 23.42398871584271
best_error: 23.423932297185665
best_error: 23.423932297130797
best_error: 23.423696585803516
best_error: 23.423696585744676
best_error: 23.42344478580985
best_error: 23.423444785746614
best_error: 23.42344478574654
best_error: 23.423444785746252
best_error: 23.4234447857451
best_error: 23.423444785740493
best_error: 23.423444785722047
best_error: 23.423444785711514
best_error: 23.42344478564828
best_error: 23.423444785416436
best_error: 23.423444785353198
best_error: 23.423444784236114
best_error: 23.42344478417288
best_error: 23.42344477951484
best_error: 23.4234447794516
best_error: 23.423444760629664
best_error: 23.42344476056643
best_error: 23.42344468508797
best_error: 23.423444685024727
best_error: 23.42344438290509
best_error: 23.423444382841847
best_error: 23.423443173916077
best_error: 23.423443173852817
best_error: 23.423438333836245
best_error: 23.423438333772893
best_error: 23.423418907295915
best_error: 23.423418907232215
best_error: 23.423340125974576
best_error: 23.42334012590946
best_error: 23.423006734530787
best_error: 23.4230067344595
best_error: 23.42264279004029
best_error: 23.422642789961927
best_error: 23.422642789961817
best_error: 23.42264278996138
best_error: 23.422642789959607
best_error: 23.42264278995252
best_error: 23.422642789924176
best_error: 23.422642789889178
best_error: 23.422642789810816
best_error: 23.42264278943573
best_error: 23.422642789357372
best_error: 23.42264278762195
best_error: 23.422642787543587
best_error: 23.422642780366814
best_error: 23.422642780288456
best_error: 23.42264275134614
best_error: 23.42264275126778
best_error: 23.422642635261287
best_error: 23.422642635182925
best_error: 23.422642170887556
best_error: 23.422642170809183
best_error: 23.422640312843313
best_error: 23.422640312764905
best_error: 23.422632871866114
best_error: 23.422632871787556
best_error: 23.4226029664399
best_error: 23.422602966360742
best_error: 23.422593743302155
best_error: 23.42259374329806
best_error: 23.42259374329804
best_error: 23.42259374329798
best_error: 23.42259374329775
best_error: 23.422593743296815
best_error: 23.422593743293078
best_error: 23.42259374328222
best_error: 23.422593743278128
best_error: 23.422593743222425
best_error: 23.42259374321833
best_error: 23.422593742983235
best_error: 23.42259374297914
best_error: 23.422593742026486
best_error: 23.422593742022393
best_error: 23.422593738199595
best_error: 23.4225937381955
best_error: 23.422593722893808
best_error: 23.422593722889715
best_error: 23.42259366169896
best_error: 23.422593661694876
best_error: 23.422593417370862
best_error: 23.422593417366787
best_error: 23.422592447173884
best_error: 23.42259244716985
best_error: 23.422591492876638
best_error: 23.42259149287265
best_error: 23.422563469493966
best_error: 23.42256346949395
