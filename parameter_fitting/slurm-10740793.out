ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.673018659877863
best_error: 10.673018652252562
best_error: 10.328383339878346
best_error: 10.328383296621903
best_error: 6.717298975033692
best_error: 6.717298535032107
best_error: 5.497426714474695
best_error: 5.497426433298193
best_error: 5.3955593395487655
best_error: 5.395559339548676
best_error: 5.395559335578954
best_error: 5.386330750021277
best_error: 5.3863307500211794
best_error: 5.386330742121311
best_error: 5.385969784060816
best_error: 5.385969784060717
best_error: 5.3859697760912875
best_error: 5.38466990194353
best_error: 5.384669901943429
best_error: 5.384669893674567
best_error: 5.383623002520889
best_error: 5.383622981054888
best_error: 5.3810106172404835
best_error: 5.381010574937056
best_error: 5.371229665119085
best_error: 5.371229600918253
best_error: 5.233646686274165
best_error: 5.23364661821246
best_error: 5.053232247800142
best_error: 5.053232247800042
best_error: 5.008159573029265
best_error: 5.008159573029172
best_error: 5.006681558002672
best_error: 5.006681558002576
best_error: 4.949400102505643
best_error: 4.94940010250555
best_error: 4.797826304530492
best_error: 4.797826304530395
best_error: 4.580783551524707
best_error: 4.58078355152463
best_error: 4.401950577709679
best_error: 4.401950577709601
best_error: 4.401950564384027
best_error: 4.371816221234919
best_error: 4.371816171035711
best_error: 4.3628432171707185
best_error: 4.3628432171706635
best_error: 4.36284321005263
best_error: 4.361887363006517
best_error: 4.361887363006465
best_error: 4.361887361607044
best_error: 4.361526005085556
best_error: 4.361526005085503
best_error: 4.361526003689714
best_error: 4.361309535197977
best_error: 4.361309535197925
best_error: 4.361309533801066
best_error: 4.361129490329973
best_error: 4.361129490329924
best_error: 4.361129488928491
best_error: 4.361103844600638
best_error: 4.361103844600591
best_error: 4.361103843198269
best_error: 4.361101144716304
best_error: 4.361101134074324
best_error: 4.3611009794783175
best_error: 4.36110097947827
best_error: 4.3611009780759336
best_error: 4.36104857179174
best_error: 4.36104857179169
best_error: 4.361048570384569
best_error: 4.360955288365559
best_error: 4.3609552756675125
best_error: 4.3606638526949055
best_error: 4.360663838492667
best_error: 4.360020100905525
best_error: 4.360020098215442
best_error: 4.360020090552395
best_error: 4.359278617588752
best_error: 4.359278614493863
best_error: 4.359278606878944
best_error: 4.356024567173739
best_error: 4.356024563142704
best_error: 4.356024555856504
best_error: 4.337669723087476
best_error: 4.337669723087411
best_error: 4.337669712338314
best_error: 4.3182699952140915
best_error: 4.318269995214025
best_error: 4.318269991246019
best_error: 4.315618089977626
best_error: 4.315618089977557
best_error: 4.315556177684201
best_error: 4.3155561776841225
best_error: 4.312351310373649
best_error: 4.31235131037359
best_error: 4.310928132987377
best_error: 4.310928132987312
best_error: 4.310920152633907
best_error: 4.310920152633846
best_error: 4.310670432445668
best_error: 4.310670432445612
best_error: 4.309815801881406
best_error: 4.309815801881347
best_error: 4.255626040225511
best_error: 4.255626040225441
best_error: 4.24662553788979
best_error: 4.246625537889715
best_error: 4.233767890375739
best_error: 4.233767890375655
best_error: 4.210276281170567
best_error: 4.210276281170474
best_error: 4.162563410620424
best_error: 4.162563361139684
best_error: 4.162563351279219
best_error: 4.103448644777801
best_error: 4.103448528715123
best_error: 4.07202433164706
best_error: 4.0720242809820535
best_error: 4.059633818557773
best_error: 4.059633784819337
best_error: 4.059033347507605
best_error: 4.05903334750755
best_error: 4.05866175574788
best_error: 4.058661755627683
best_error: 4.058661754668206
best_error: 4.058650445351983
best_error: 4.058650445351935
best_error: 4.058650445218212
best_error: 4.0586502032778595
best_error: 4.058650203277809
best_error: 4.0586496267338
best_error: 4.058649626733751
best_error: 4.058649515453084
best_error: 4.058649515453035
best_error: 4.058649229358856
best_error: 4.058649229358813
best_error: 4.058649152509389
best_error: 4.058649152509336
best_error: 4.058649079251449
best_error: 4.058649079251398
best_error: 4.05864903421205
best_error: 4.058649034211999
best_error: 4.058648991014657
best_error: 4.058648991014611
best_error: 4.058648949572643
best_error: 4.058648949572596
best_error: 4.058648912002581
best_error: 4.05864891200253
best_error: 4.0586486969573725
best_error: 4.058648696957323
best_error: 4.0586484041596425
best_error: 4.05864840415959
best_error: 4.058648401388843
best_error: 4.058648401388794
best_error: 4.058648398850307
best_error: 4.058648398850257
best_error: 4.058648367820288
best_error: 4.058648367820235
best_error: 4.058648367744627
best_error: 4.058648367744582
best_error: 4.058648367654026
best_error: 4.058648367653501
