ParameterFittingRandomToPython.py:117: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:130: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:136: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:139: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:142: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:206: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 9.634259229486947
best_error: 9.63425922279414
best_error: 7.866454873183679
best_error: 7.866454797343591
best_error: 6.472767470651748
best_error: 6.472767445723906
best_error: 6.472767283177919
best_error: 6.3122664791283825
best_error: 6.312266397997133
best_error: 6.312266270960952
best_error: 6.1107413317704795
best_error: 6.110741212181777
best_error: 6.110741133779101
best_error: 4.431020042475312
best_error: 4.431019925783457
best_error: 4.431019914836234
best_error: 4.3933274024622
best_error: 4.3933274024614395
best_error: 4.393327386880683
best_error: 4.3471280757306205
best_error: 4.347128073906094
best_error: 4.347127932767128
best_error: 2.9914638409895717
best_error: 2.9914637145492278
best_error: 2.827859970051274
best_error: 2.827859665455208
best_error: 2.770712719653725
best_error: 2.7707124182827316
best_error: 2.596983191537422
best_error: 2.5969829567241285
best_error: 2.436097329639394
best_error: 2.4360972770997025
best_error: 2.43315340913657
best_error: 2.4331534090769225
best_error: 2.433153402323171
best_error: 2.4199054513624088
best_error: 2.4199053970165165
best_error: 2.311968498337492
best_error: 2.3119684779250753
best_error: 2.31196841091177
best_error: 2.3102059904960544
best_error: 2.3102059721576684
best_error: 2.31020589523824
best_error: 2.2692867946468835
best_error: 2.269286782417855
best_error: 2.2692867765712377
best_error: 2.2581195864559214
best_error: 2.2581195850211158
best_error: 2.2581195473892266
best_error: 2.2537816124384547
best_error: 2.253781611471865
best_error: 2.2537815765099696
best_error: 2.2530678277442258
best_error: 2.2530678268261912
best_error: 2.2530677924447695
best_error: 2.2526975915540253
best_error: 2.252697591027505
best_error: 2.252697588755604
best_error: 2.2524275321186646
best_error: 2.2524275304766883
best_error: 2.2524274991268394
best_error: 2.251828069591685
best_error: 2.251828065643506
best_error: 2.251828043021656
best_error: 2.250418040653512
best_error: 2.250418037201306
best_error: 2.231821675214168
best_error: 2.2318216713021863
best_error: 2.2289549509420064
best_error: 2.2289549415585985
best_error: 2.2275588083777693
best_error: 2.227558795119733
best_error: 2.227454952264355
best_error: 2.2274549516925424
best_error: 2.2274549428227535
best_error: 2.2274288291789217
best_error: 2.227428829068299
best_error: 2.227428818684713
best_error: 2.2274266983150777
best_error: 2.227426687332779
best_error: 2.2274158925851486
best_error: 2.2274158816049683
best_error: 2.227378374843462
best_error: 2.2273783639164177
best_error: 2.2273607627173226
best_error: 2.2273607519789627
best_error: 2.227337248283725
best_error: 2.2273372376418
best_error: 2.2273298271956192
best_error: 2.2273298165507702
best_error: 2.227324482973083
best_error: 2.227324472315748
best_error: 2.22731588884114
best_error: 2.2273158781804137
best_error: 2.227312185375136
best_error: 2.2273121747994615
best_error: 2.2273083085546093
best_error: 2.2273082979773955
best_error: 2.227306725916151
best_error: 2.2273067153383113
best_error: 2.227305192354518
best_error: 2.22730518177603
best_error: 2.2273038003856906
best_error: 2.2273037898066126
best_error: 2.2273037672595644
best_error: 2.227303767024048
best_error: 2.227303718674059
best_error: 2.2273037080949387
best_error: 2.2273033584074917
best_error: 2.2273033478282174
best_error: 2.227303307732069
best_error: 2.227303297152771
best_error: 2.2273032757294824
best_error: 2.2273032651501703
best_error: 2.2273032467524425
best_error: 2.2273032361731206
best_error: 2.227303232990491
best_error: 2.227303232812153
best_error: 2.227303232357344
best_error: 2.227303227744133
best_error: 2.2273032275657934
best_error: 2.2273032249778977
best_error: 2.2273032247995594
best_error: 2.227303223288323
best_error: 2.22730322310999
best_error: 2.2273032223357196
best_error: 2.227303222157383
best_error: 2.2273032217955846
best_error: 2.2273032216172473
best_error: 2.2273032214655877
best_error: 2.22730322128725
best_error: 2.2273032211402635
best_error: 2.2273032211223343
