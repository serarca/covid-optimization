ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 94
days_switch 65
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 99.90106396192041
best_error: 99.90106376849032
best_error: 20.04700874567047
best_error: 20.047008745665224
best_error: 20.047008745595
best_error: 20.04700874458696
best_error: 20.046880016832908
best_error: 20.046880016827654
best_error: 20.04636361993348
best_error: 20.04636361992821
best_error: 20.04427401774593
best_error: 20.044274017745927
best_error: 20.044274017740612
best_error: 20.03551048453617
best_error: 20.035510484530636
best_error: 19.99229934590027
best_error: 19.992299345893695
best_error: 19.434282127269068
best_error: 19.434282127263764
best_error: 19.434282127248974
best_error: 19.43428114673967
best_error: 19.43428114673435
best_error: 19.43428114671957
best_error: 19.434280166020077
best_error: 19.434280166014748
best_error: 19.43428016599998
best_error: 19.43427624229318
best_error: 19.434276242287872
best_error: 19.434276242273086
best_error: 19.434260533794674
best_error: 19.434260533789338
best_error: 19.434260533774577
best_error: 19.434197481330592
best_error: 19.434197481325203
best_error: 19.4341974813105
best_error: 19.433941709741205
best_error: 19.433941709735578
best_error: 19.43394170972111
best_error: 19.4328570308982
best_error: 19.43285703089157
best_error: 19.4328570308781
best_error: 19.427099320501036
best_error: 19.427099320489432
best_error: 19.427099320480934
best_error: 19.39660941185932
best_error: 19.396609411832603
best_error: 19.39660930577164
best_error: 19.396609305744903
best_error: 19.396608881248337
best_error: 19.39660888122159
best_error: 19.396607180390603
best_error: 19.396607180363713
best_error: 19.396600332473657
best_error: 19.396600332446326
best_error: 19.39657221256077
best_error: 19.39657221253151
best_error: 19.39644696005188
best_error: 19.39644696001385
best_error: 19.395648784166482
best_error: 19.395648784069454
best_error: 19.360010802748892
best_error: 19.36001079908264
best_error: 19.301513634154993
best_error: 19.301513626994595
best_error: 19.301513622405558
best_error: 19.058727470708327
best_error: 19.058727420521762
best_error: 19.058727416233303
best_error: 18.987036373827348
best_error: 18.98703631036702
best_error: 18.987036305462976
best_error: 18.889800454547192
best_error: 18.889800421578478
best_error: 18.849628992844753
best_error: 18.849628903536363
best_error: 18.849628896964578
best_error: 18.286466969661866
best_error: 18.2864669682527
best_error: 18.284552853279475
best_error: 18.284552853138425
best_error: 18.284552842929216
best_error: 18.28426108533261
best_error: 18.284261084929547
best_error: 18.28415435360248
best_error: 18.284154353602304
best_error: 18.28411408449411
best_error: 18.28411408437023
best_error: 18.28411408073913
best_error: 18.28410668267518
best_error: 18.284106682675006
best_error: 18.284092208692883
best_error: 18.284092208595958
best_error: 18.284092205276114
best_error: 18.28408699970607
best_error: 18.28408699970589
best_error: 18.284050660875323
best_error: 18.28405066087532
best_error: 18.284050660875142
best_error: 18.284014273015977
best_error: 18.2840142730158
best_error: 18.283868637834505
best_error: 18.283868637834328
best_error: 18.283284195514206
best_error: 18.2832841955142
best_error: 18.283284195514028
best_error: 18.28088886370974
best_error: 18.280888863709556
best_error: 18.271301963954656
best_error: 18.271301963954652
best_error: 18.271301963954457
best_error: 18.21300442572888
best_error: 18.21300442572862
best_error: 18.04306270441735
best_error: 18.043062699053266
best_error: 18.04306266761886
best_error: 18.04306264654882
best_error: 18.042268400507375
best_error: 18.042268395651522
best_error: 18.042268368741112
best_error: 18.042268347876742
best_error: 18.03917585470449
best_error: 18.03917584986237
best_error: 18.039175823133913
best_error: 18.039175802261674
best_error: 18.02939008996164
best_error: 18.029390086827753
best_error: 18.029390075258277
best_error: 18.02939005505347
best_error: 18.015498434254162
best_error: 18.015498433099086
best_error: 18.015498419008285
best_error: 18.01409628492547
best_error: 18.01409628456205
best_error: 18.01409627746814
best_error: 18.013927892685288
best_error: 18.01392789268484
best_error: 18.013925475859747
best_error: 18.0139254758593
best_error: 18.013917251139805
best_error: 18.0139172511398
best_error: 18.013917251139357
best_error: 18.013915678882018
best_error: 18.013915678881574
best_error: 18.013914281261727
best_error: 18.013914281261723
best_error: 18.013914281261282
best_error: 18.013913091507444
best_error: 18.01391309150744
best_error: 18.013913091507
best_error: 18.013912143043907
best_error: 18.013912143043466
best_error: 18.013910544996776
best_error: 18.01391054499633
best_error: 18.013909719152974
best_error: 18.013909719152533
best_error: 18.013908837754265
best_error: 18.0139088375318
best_error: 18.01390883168903
best_error: 18.013908828175833
best_error: 18.013908828078062
best_error: 18.013908231997394
best_error: 18.013908231900547
best_error: 18.013907799648894
best_error: 18.01390779955271
best_error: 18.013907485178443
best_error: 18.01390748508274
best_error: 18.013907170524956
best_error: 18.013907170429736
best_error: 18.01390700105385
best_error: 18.01390700095889
best_error: 18.01390676992437
best_error: 18.013906769829774
best_error: 18.013906691907906
best_error: 18.013906691813453
best_error: 18.01390665167027
best_error: 18.013906651575873
best_error: 18.013906623028706
best_error: 18.01390662293434
best_error: 18.01390660279614
best_error: 18.013906602701816
best_error: 18.01390658690127
best_error: 18.013906586806954
best_error: 18.01390657538329
best_error: 18.013906575289006
best_error: 18.013906567245314
best_error: 18.013906567151043
best_error: 18.01390655885031
best_error: 18.01390655875606
best_error: 18.013906554521157
best_error: 18.013906554426896
best_error: 18.01390654843151
best_error: 18.01390654833726
best_error: 18.01390654709659
best_error: 18.013906547002343
best_error: 18.01390654603822
best_error: 18.01390654594397
best_error: 18.013906545300664
best_error: 18.013906545206442
best_error: 18.013906544764932
best_error: 18.0139065446707
best_error: 18.013906544242516
best_error: 18.0139065441483
best_error: 18.013906543959525
best_error: 18.013906543865286
best_error: 18.013906542734304
