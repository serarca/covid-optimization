ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 80
days_switch 55
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 101.83916242000544
best_error: 101.8391622773637
best_error: 101.8391622541693
best_error: 18.161911112894753
best_error: 18.161911112889495
best_error: 18.16191110348378
best_error: 18.154934660507585
best_error: 18.154934650905773
best_error: 18.12555921652753
best_error: 18.12555920609783
best_error: 17.978042476290877
best_error: 17.978042461156058
best_error: 15.72525598044058
best_error: 15.725255864554821
best_error: 15.193828359491476
best_error: 15.193828198941336
best_error: 14.283555612309055
best_error: 14.283555367374975
best_error: 13.231762691904724
best_error: 13.231762356330208
best_error: 12.001745345675069
best_error: 12.001745057992384
best_error: 11.52455007582583
best_error: 11.524549971183207
best_error: 11.45123482756129
best_error: 11.451234817256086
best_error: 11.451234803583375
best_error: 11.450065730010184
best_error: 11.450065677760822
best_error: 11.445906704582997
best_error: 11.445906689352618
best_error: 11.4459066767824
best_error: 11.215906956067272
best_error: 11.215906897919018
best_error: 10.840361846187996
best_error: 10.840361823600812
best_error: 10.74159133586488
best_error: 10.741591321411583
best_error: 10.741591321091377
best_error: 10.741591319447362
best_error: 10.340593802351709
best_error: 10.340593799880706
best_error: 10.34059378798701
best_error: 10.315651659695584
best_error: 10.315651650523362
best_error: 10.315651646477
best_error: 10.299131338050843
best_error: 10.2991313218949
best_error: 10.272798945154245
best_error: 10.272798931159254
best_error: 10.186884170785893
best_error: 10.186884156306379
best_error: 9.89205126402165
best_error: 9.892051258830527
best_error: 9.892051254975982
best_error: 9.892051254580132
best_error: 9.89205125214205
best_error: 9.851507994352428
best_error: 9.851507984419918
best_error: 9.851507981943122
best_error: 9.778779059965514
best_error: 9.77877905012296
best_error: 9.7787790472113
best_error: 9.775032968446107
best_error: 9.775032959082854
best_error: 9.775032955704114
best_error: 9.774249652548551
best_error: 9.774249428577
best_error: 9.77394781594405
best_error: 9.773947806594741
best_error: 9.773947803205758
best_error: 9.773942724389546
best_error: 9.773942500372742
best_error: 9.773942497005326
best_error: 9.773942493616273
best_error: 9.773939791081325
best_error: 9.773939781732114
best_error: 9.773939778343031
best_error: 9.76179987793148
best_error: 9.761799734142398
best_error: 9.75813625188363
best_error: 9.758136239043626
best_error: 9.75813623871928
best_error: 9.756809529160464
best_error: 9.75680951636356
best_error: 9.756809516010192
best_error: 9.753209615037939
best_error: 9.753209440830458
best_error: 9.743249596836376
best_error: 9.743249471737217
best_error: 9.73990912070639
best_error: 9.73990910968242
best_error: 9.739909107818981
best_error: 9.732815075002069
best_error: 9.732815063407468
best_error: 9.732815062093728
best_error: 9.712772989574681
best_error: 9.71277280741513
best_error: 9.568885907523498
best_error: 9.56888588836609
best_error: 9.50189440024516
best_error: 9.501894336295376
best_error: 9.454618186920422
best_error: 9.454618016145062
best_error: 9.447654870277464
best_error: 9.4476546973942
best_error: 9.435887387937047
best_error: 9.435887265980949
best_error: 9.435847413343353
best_error: 9.435847298329964
best_error: 9.433069422140681
best_error: 9.43306932441537
best_error: 9.430374947195833
best_error: 9.430374933864577
best_error: 9.430374933305883
best_error: 9.430126076052138
best_error: 9.4301259400647
best_error: 9.42745716131042
best_error: 9.427457025759653
best_error: 9.424053069678228
best_error: 9.424052933730275
best_error: 9.423814672221154
best_error: 9.42381466011708
best_error: 9.423814660061108
best_error: 9.423192910928377
best_error: 9.423192898477877
best_error: 9.42319289838424
best_error: 9.421074812306696
best_error: 9.421074799957411
best_error: 9.421074799713848
best_error: 9.41419849358814
best_error: 9.414198481475907
best_error: 9.414198480645831
best_error: 9.396947251295872
best_error: 9.396947240853008
best_error: 9.396947238595939
best_error: 9.391790362736906
best_error: 9.391790353508863
best_error: 9.391790351098608
best_error: 9.38771898591598
best_error: 9.387718977000597
best_error: 9.387718974450335
best_error: 9.382691619415095
best_error: 9.382691608108184
best_error: 9.371268745249496
best_error: 9.371268734142113
best_error: 9.338325277230796
best_error: 9.338325266909287
best_error: 9.325458180052784
best_error: 9.32545816904995
best_error: 9.315809429465297
best_error: 9.31580942019212
best_error: 9.31327097845993
best_error: 9.313270968018337
best_error: 9.244906623467763
best_error: 9.244906610112727
best_error: 9.24490640959465
best_error: 9.229705268437131
best_error: 9.22970525612404
best_error: 9.229705083347133
best_error: 9.228782521697493
best_error: 9.22878251245002
best_error: 9.22854650335848
best_error: 9.228546493944581
best_error: 9.209267047462175
best_error: 9.209267036969703
best_error: 9.201696687558732
best_error: 9.201696677597074
