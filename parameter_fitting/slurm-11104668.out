ParameterFittingRandomToPython.py:119: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:146: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:208: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:210: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
days_ahead 84
days_switch 60
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 100.3168102050325
best_error: 100.31681013986454
best_error: 100.31681010800591
best_error: 100.31681005339412
best_error: 18.875899324740434
best_error: 18.875899109030893
best_error: 18.875897610326987
best_error: 16.489425471913822
best_error: 16.48942547116974
best_error: 16.48942543994147
best_error: 16.435110254972567
best_error: 16.435110254141474
best_error: 16.435110219092252
best_error: 16.1470581909413
best_error: 16.147058189777372
best_error: 16.147058131624227
best_error: 11.253786589171138
best_error: 11.253786566064479
best_error: 11.253786549475116
best_error: 10.880991501820079
best_error: 10.880991467847723
best_error: 10.859048976066845
best_error: 10.859048975864713
best_error: 10.85904896828832
best_error: 10.859048953859833
best_error: 10.69726694753923
best_error: 10.697266927990139
best_error: 10.697266914117362
best_error: 10.337247725462792
best_error: 10.337247672077169
best_error: 10.15856567295042
best_error: 10.158565647988963
best_error: 10.158565642889172
best_error: 10.064050432033017
best_error: 10.064050407798938
best_error: 10.064050402908558
best_error: 9.714024623282013
best_error: 9.71402432008636
best_error: 9.425271814683265
best_error: 9.425271799297004
best_error: 9.425271790979469
best_error: 9.325914512721189
best_error: 9.325914499750589
best_error: 9.325914490171753
best_error: 9.009215419842743
best_error: 9.009215354029273
best_error: 8.986456761014871
best_error: 8.986456657836936
best_error: 8.75941389202066
best_error: 8.759413784661653
best_error: 8.723190455585147
best_error: 8.723190102161817
best_error: 8.696536641564702
best_error: 8.696536629805498
best_error: 8.679363886360804
best_error: 8.679363874782128
best_error: 8.612754518195274
best_error: 8.612754503568397
best_error: 8.594888401315874
best_error: 8.594888370108752
best_error: 8.499975166124807
best_error: 8.499975162773506
best_error: 8.49997515972556
best_error: 8.499975156570994
best_error: 8.488790536356891
best_error: 8.48879052957428
best_error: 8.488790526875011
best_error: 8.455559756657209
best_error: 8.4555597364369
best_error: 8.381848848757189
best_error: 8.381848648630783
best_error: 8.34595579069739
best_error: 8.345955637681348
best_error: 8.336359598853758
best_error: 8.336359451780622
best_error: 8.326162272790253
best_error: 8.326162130861352
best_error: 8.325104953438839
best_error: 8.325104811716946
best_error: 8.325002431500028
best_error: 8.325002289761054
best_error: 8.324987032762131
best_error: 8.324986891020593
best_error: 8.324979394642789
best_error: 8.324979252899983
best_error: 8.324976448285957
best_error: 8.324976306542663
best_error: 8.324976186290513
best_error: 8.324976044547167
best_error: 8.324976004552449
best_error: 8.324975981837168
best_error: 8.324975954308327
best_error: 8.324975941994737
best_error: 8.324975940417518
best_error: 8.324975916736815
best_error: 8.323605645655444
best_error: 8.323605620041931
best_error: 8.317410247534953
best_error: 8.317410173344665
best_error: 8.314531833442132
best_error: 8.31453180784607
best_error: 8.313084859635048
best_error: 8.313084834486006
best_error: 8.305911875197054
best_error: 8.305911849070016
best_error: 8.303131376944311
best_error: 8.303131350119305
best_error: 8.302278515693649
best_error: 8.302278442147257
best_error: 8.299140282474712
best_error: 8.299140254405433
best_error: 8.298695887196375
best_error: 8.298695812702304
best_error: 8.297476528430174
best_error: 8.297476499359709
best_error: 8.295576208383642
best_error: 8.295576133182717
best_error: 8.2909629561287
best_error: 8.290962928921992
best_error: 8.280258422385037
best_error: 8.28025839555737
best_error: 8.276754587547034
best_error: 8.276754560427472
best_error: 8.276358354425756
best_error: 8.276358348799667
best_error: 8.2763583461464
best_error: 8.275746431905969
best_error: 8.275746404779369
best_error: 8.27295780495199
best_error: 8.272957779100842
best_error: 8.250656413844764
best_error: 8.250656388759243
best_error: 8.244953480141
best_error: 8.24495345313672
best_error: 8.243859807399406
best_error: 8.243859735331647
best_error: 8.239632110864985
best_error: 8.239632041283475
best_error: 8.239148479888584
best_error: 8.23914846041492
best_error: 8.238284019385706
best_error: 8.238283779286123
best_error: 8.234576275009935
best_error: 8.234576201937823
best_error: 8.223364579687415
best_error: 8.22336450860826
best_error: 8.150112229909439
best_error: 8.150112223682342
best_error: 8.09079153854406
best_error: 8.090791479329928
