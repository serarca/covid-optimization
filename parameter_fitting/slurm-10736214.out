ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.847196176274313
best_error: 10.847196171714721
best_error: 6.3089340584569245
best_error: 6.308933790757752
best_error: 6.258178210436962
best_error: 6.258178040959608
best_error: 6.17716261502141
best_error: 6.177162459850161
best_error: 6.17640540398494
best_error: 6.176405403984932
best_error: 6.1764054000544375
best_error: 6.172321529320252
best_error: 6.172321529320245
best_error: 6.172321525214903
best_error: 6.170979199220673
best_error: 6.170979199220663
best_error: 6.17097919509972
best_error: 6.1702212111310475
best_error: 6.17022121113104
best_error: 6.1702212069836175
best_error: 6.1698001770824495
best_error: 6.169800177082441
best_error: 6.169800172892901
best_error: 6.169682311918598
best_error: 6.169682254585829
best_error: 6.160079498422806
best_error: 6.160079498422801
best_error: 6.160079493240331
best_error: 6.100711970985899
best_error: 6.100711970985891
best_error: 6.1007119609926885
best_error: 6.093863941277911
best_error: 6.0938639412779025
best_error: 6.093863930941825
best_error: 6.081449644670274
best_error: 6.08144964467027
best_error: 6.0782274929591384
best_error: 6.078227492959131
best_error: 6.0775885779283545
best_error: 6.077588577928346
best_error: 6.077150092287083
best_error: 6.077150092287077
best_error: 6.077081328055642
best_error: 6.077081328055634
best_error: 6.077081317140836
best_error: 6.077056239386573
best_error: 6.077056239386564
best_error: 6.077056228486638
best_error: 6.06982700535174
best_error: 6.069827005351733
best_error: 6.042220184790787
best_error: 6.042220184790779
best_error: 6.004566393915916
best_error: 6.00456639391591
best_error: 5.976376301758224
best_error: 5.976376301758215
best_error: 5.970316525605172
best_error: 5.9703165256051625
best_error: 5.96070870415007
best_error: 5.960708704150065
best_error: 5.9538996754623845
best_error: 5.95389967546238
best_error: 5.951467620944219
best_error: 5.951467620944213
best_error: 5.950480399512049
best_error: 5.95048039951204
best_error: 5.949784573882867
best_error: 5.9497845738828605
best_error: 5.94953877993729
best_error: 5.949538779937282
best_error: 5.949354575937866
best_error: 5.949354575937862
best_error: 5.949278824162893
best_error: 5.94927882416289
best_error: 5.949244812000623
best_error: 5.949244812000622
best_error: 5.944798828755159
best_error: 5.944798828755151
best_error: 5.840602357950009
best_error: 5.840602357950003
best_error: 5.419404277308635
best_error: 5.419404277308624
best_error: 5.244242565115686
best_error: 5.244242247944023
best_error: 5.03771720296583
best_error: 5.037716975166893
best_error: 4.8004314105503685
best_error: 4.800431293187509
best_error: 4.78290275135716
best_error: 4.782902629453043
best_error: 4.7586884139210515
best_error: 4.758688391177961
best_error: 4.758688354413648
best_error: 4.736678529041051
best_error: 4.7366785290410505
best_error: 4.736678523182048
best_error: 4.7282625561608835
best_error: 4.728262556160882
best_error: 4.728262550054226
best_error: 4.721438440252743
best_error: 4.721438437331356
best_error: 4.7214384224448915
best_error: 4.696735321070964
best_error: 4.696735299192415
best_error: 4.696735276342216
best_error: 4.624345368653694
best_error: 4.624345321367683
best_error: 4.624345292222991
best_error: 4.618383228836943
best_error: 4.618383228836934
best_error: 4.6183831762776
best_error: 4.583076298780961
best_error: 4.583076221973124
best_error: 4.583076200618161
best_error: 4.529401912883281
best_error: 4.529401912883273
best_error: 4.529401830609247
best_error: 4.52047578804814
best_error: 4.520475786093608
best_error: 4.5204757012137815
best_error: 4.502079995129159
best_error: 4.502079807115535
best_error: 4.46738411454507
best_error: 4.467384114545067
best_error: 4.467375973153295
best_error: 4.467375973153291
best_error: 4.467375901652864
best_error: 4.467375853628925
best_error: 4.467374762982282
best_error: 4.467374762982279
best_error: 4.467374676559335
best_error: 4.467374676559328
