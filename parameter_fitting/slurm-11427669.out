ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 60
days_switch 70
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 21.906825239383615
best_error: 21.906824412839445
best_error: 5.079705073119134
best_error: 5.079705072974271
best_error: 5.079702663388403
best_error: 5.0797026633865014
best_error: 5.079702663380067
best_error: 5.079693021312075
best_error: 5.079693021310172
best_error: 5.079693021303737
best_error: 5.0796544024711885
best_error: 5.079654402469278
best_error: 5.0796544024628405
best_error: 5.079499113301948
best_error: 5.079499113300008
best_error: 5.079499113293561
best_error: 5.07886458998759
best_error: 5.078864589985525
best_error: 5.078864589979045
best_error: 5.076087372373551
best_error: 5.076087372370799
best_error: 5.076087372364272
best_error: 5.057796986880836
best_error: 5.057796986858476
best_error: 5.041439990711759
best_error: 5.041439990590074
best_error: 4.982476676889353
best_error: 4.982476674314751
best_error: 4.972699907580274
best_error: 4.972699904258132
best_error: 3.761083570142479
best_error: 3.7610834425505617
best_error: 3.686607696083218
best_error: 3.686607662848705
best_error: 3.6802108822516333
best_error: 3.6802107890555913
best_error: 3.666823675784662
best_error: 3.6668235707693544
best_error: 3.6291367916872512
best_error: 3.629136592017014
best_error: 3.581859967540892
best_error: 3.5818599197522643
best_error: 3.507674861164615
best_error: 3.5076748229071137
best_error: 3.506396211422768
best_error: 3.506395953871167
best_error: 3.494798029310676
best_error: 3.494797936585058
best_error: 3.4859783541144402
best_error: 3.485978227019876
best_error: 3.4775291375941464
best_error: 3.477529080508449
best_error: 3.476340521639863
best_error: 3.4763405167421877
best_error: 3.4763149018415818
best_error: 3.476314901751859
best_error: 3.4763149014470813
best_error: 3.476314899193698
best_error: 3.4762967561201212
best_error: 3.476296755087447
best_error: 3.476296753451216
best_error: 3.476195811375793
best_error: 3.4761958029329545
best_error: 3.4759858277399616
best_error: 3.4759858184594363
best_error: 3.4754344525737872
best_error: 3.4754344408156648
best_error: 3.474288529078928
best_error: 3.474288517862725
best_error: 3.4696682307673767
best_error: 3.46966822058077
best_error: 3.4505242680548465
best_error: 3.4505242679679027
best_error: 3.4505242676947154
best_error: 3.450524265436838
best_error: 3.3720665059531973
best_error: 3.372066396759376
best_error: 3.32692940807291
best_error: 3.326929197994984
best_error: 3.0471299034349726
best_error: 3.0471296775596226
best_error: 2.882125556409322
best_error: 2.882125371639728
best_error: 2.765712765093802
best_error: 2.7657126561270537
best_error: 2.737652718754138
best_error: 2.737652550113526
best_error: 2.4038718381889868
best_error: 2.4038716257191566
best_error: 2.399410211425975
best_error: 2.3994099840404464
best_error: 2.2480403955570636
best_error: 2.2480402122772407
best_error: 2.206488221816041
best_error: 2.2064880610324797
best_error: 2.206488056478417
best_error: 2.1719177251432096
best_error: 2.171917545423891
best_error: 2.128288837304986
best_error: 2.1282888197582066
best_error: 2.1276242902261773
best_error: 2.1276242778225436
best_error: 2.1274105990813155
best_error: 2.127410573128751
best_error: 2.1259504443125494
best_error: 2.125950404885814
best_error: 2.1252098086238083
best_error: 2.1252097826308174
best_error: 2.1251641239212944
best_error: 2.125164109863516
best_error: 2.12255997334651
best_error: 2.1225599525586345
best_error: 2.121848306595482
best_error: 2.1218482974019732
best_error: 2.121267009646271
best_error: 2.1212670066671464
best_error: 2.1212670065485995
best_error: 2.1212670065139476
best_error: 2.1210456069447807
best_error: 2.1210455980540237
best_error: 2.1203839731843446
best_error: 2.1203839592039255
best_error: 2.1196742619326625
best_error: 2.1196742361588483
best_error: 2.1187061725858154
best_error: 2.1187061526637048
best_error: 2.113200344790785
best_error: 2.113200311289537
best_error: 2.1094186788049827
best_error: 2.109418660890752
best_error: 2.109418634123484
best_error: 2.105618528475597
best_error: 2.1056184444196577
best_error: 2.0937093862520446
best_error: 2.093709258655864
best_error: 2.0691616815411056
best_error: 2.069161579391329
best_error: 2.057112453928557
best_error: 2.0571124503149147
best_error: 2.057074299967102
best_error: 2.0570742944184577
best_error: 2.0570631976489726
best_error: 2.0570631925053373
best_error: 2.05689091422321
best_error: 2.056890913107098
best_error: 2.0568909128067516
best_error: 2.05625361283184
best_error: 2.0562536085514656
best_error: 2.0562536080709397
best_error: 2.05411934515504
best_error: 2.0541193387142873
best_error: 2.054119337562477
best_error: 2.053194968973539
best_error: 2.053194962471241
best_error: 2.052965891599982
best_error: 2.0529658853597663
best_error: 2.0504501440178293
best_error: 2.0504501408090157
best_error: 2.0504501400971105
best_error: 2.049800306232251
best_error: 2.049800299113065
best_error: 2.0493271867044114
best_error: 2.04932718576467
best_error: 2.049327185696197
best_error: 2.0492076922602505
best_error: 2.0492076915688355
best_error: 2.049204239907469
best_error: 2.0492042395607823
best_error: 2.049203907284639
best_error: 2.049203907254509
best_error: 2.0492039072239474
best_error: 2.0492039071071546
best_error: 2.049203641984872
best_error: 2.0492036416505526
best_error: 2.049202948466197
best_error: 2.0492029480961675
best_error: 2.049201687188853
best_error: 2.049201686789439
best_error: 2.0491970424664046
best_error: 2.049197041558463
best_error: 2.0491581191986525
best_error: 2.0491581114061703
best_error: 2.0491161515078975
best_error: 2.049116143439193
best_error: 2.0489828957803313
best_error: 2.0489828850046745
best_error: 2.048533491350313
best_error: 2.0485334793715806
best_error: 2.0472510362054064
best_error: 2.0472510234939
best_error: 2.045494755632753
best_error: 2.0454947146162263
best_error: 2.0437823491210123
best_error: 2.0437822989613115
best_error: 2.041179004079044
best_error: 2.041178990311317
best_error: 2.0406812251988087
best_error: 2.0406812059465373
best_error: 2.039876851283709
best_error: 2.0398768476406546
best_error: 2.0393039842334035
best_error: 2.0393039755650646
best_error: 2.039292639442096
best_error: 2.039292618582758
best_error: 2.039254395402362
best_error: 2.0392543615573184
best_error: 2.038496764018505
best_error: 2.0384967400884944
best_error: 2.0378824377115894
best_error: 2.0378824358128713
best_error: 2.0378824354906655
best_error: 2.0370587100769635
best_error: 2.0370587000290046
best_error: 2.0368669074922257
best_error: 2.036866902245278
best_error: 2.036686065536914
best_error: 2.0366860472915236
best_error: 2.0364478146859533
best_error: 2.036447810898714
best_error: 2.0361538004300366
best_error: 2.0361537868927573
best_error: 2.036151758188572
best_error: 2.03615174181287
best_error: 2.0361517276790995
best_error: 2.0360347806816477
best_error: 2.0360347674447907
best_error: 2.0359651350871815
best_error: 2.035965133258593
best_error: 2.0359407472212414
best_error: 2.03594074407345
best_error: 2.035932817922271
best_error: 2.0359328170502398
best_error: 2.0359307204246355
best_error: 2.0359307196208
best_error: 2.035930691658486
best_error: 2.0359306912158446
best_error: 2.0359303118353513
best_error: 2.0359303113553873
best_error: 2.0359299250867924
best_error: 2.0359299241949866
best_error: 2.035928436231592
best_error: 2.0359284355762832
best_error: 2.0359268294131834
best_error: 2.035926828475782
best_error: 2.03592140726272
best_error: 2.0359214060587
best_error: 2.035917475184573
best_error: 2.0359174730174634
best_error: 2.0359013804839377
best_error: 2.035901379161192
best_error: 2.0359006787413425
best_error: 2.0359006771294696
best_error: 2.035900330061572
best_error: 2.035900329228434
best_error: 2.0359002649581925
best_error: 2.035900264849735
best_error: 2.0359002611716233
best_error: 2.0359002610685346
