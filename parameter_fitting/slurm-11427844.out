ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 78
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 22.03696371481909
best_error: 22.036963643517357
best_error: 4.449327538429909
best_error: 4.449327537146596
best_error: 4.443906429541285
best_error: 4.443906429435551
best_error: 4.443906428658939
best_error: 4.421215322945066
best_error: 4.421215322824152
best_error: 4.421215322019428
best_error: 4.418949385533318
best_error: 4.418949385410796
best_error: 4.418949384603289
best_error: 4.416097924218693
best_error: 4.416097924093221
best_error: 4.416097923284578
best_error: 4.404260643477878
best_error: 4.40426064333987
best_error: 4.404260642526623
best_error: 4.348770579139195
best_error: 4.348770578935002
best_error: 4.348770578104057
best_error: 3.711078108761715
best_error: 3.711078104566774
best_error: 3.3317406969519614
best_error: 3.3317406846208617
best_error: 2.842609253201437
best_error: 2.842609228461713
best_error: 2.8270750096291564
best_error: 2.8270749839528526
best_error: 2.8170872017021487
best_error: 2.8170871781212963
best_error: 2.786228300470329
best_error: 2.786228273684097
best_error: 2.7275386415790406
best_error: 2.727538638356446
best_error: 2.727538607252143
best_error: 2.31413847556619
best_error: 2.3141384692707927
best_error: 2.3141383929816337
best_error: 2.2354318881925144
best_error: 2.2354318859061446
best_error: 2.235431790373358
best_error: 2.132912883468029
best_error: 2.1329127651471596
best_error: 2.0097820987842194
best_error: 2.009781956845488
best_error: 1.8765974360334026
best_error: 1.8765972763473988
best_error: 1.8461468633886349
best_error: 1.8461468182392011
best_error: 1.7773827751025508
best_error: 1.777382735935916
best_error: 1.6751992630841963
best_error: 1.6751991101975618
best_error: 1.646968442907373
best_error: 1.6469684250645142
best_error: 1.6450870339480672
best_error: 1.645087008547366
best_error: 1.644345262931159
best_error: 1.6443452559524394
best_error: 1.6423651318231607
best_error: 1.6423651189414008
best_error: 1.638680429915759
best_error: 1.6386804026173067
best_error: 1.6283734350855514
best_error: 1.6283733759935057
best_error: 1.6198353224465614
best_error: 1.6198352593259409
best_error: 1.6018298585517396
best_error: 1.601829808776107
best_error: 1.5812950469173404
best_error: 1.5812949621651098
best_error: 1.5531733247280861
best_error: 1.5531732415139698
best_error: 1.536433137948591
best_error: 1.5364331324428804
best_error: 1.5364331314061623
best_error: 1.5357791820594824
best_error: 1.5357790980220065
best_error: 1.531410167885567
best_error: 1.5314101263901674
best_error: 1.5248902415768988
best_error: 1.524890168564179
best_error: 1.5247549031377414
best_error: 1.5247548541312372
best_error: 1.5208608060915154
best_error: 1.520860720746237
best_error: 1.5140616100093245
best_error: 1.5140615133756228
best_error: 1.4934802297912606
best_error: 1.4934801189584983
best_error: 1.3493402873689495
best_error: 1.3493402161633319
best_error: 1.2071023861357053
best_error: 1.2071023385036401
best_error: 1.2071023010833999
best_error: 1.1316202005630267
best_error: 1.1316201235767318
best_error: 1.1273729243424755
best_error: 1.1273728620865264
best_error: 1.0568246377032882
best_error: 1.0568246268857802
best_error: 1.056824613378489
best_error: 1.032432118302721
best_error: 1.0324318967172337
best_error: 0.9815581588299854
best_error: 0.9815581414782822
best_error: 0.9796834188669321
best_error: 0.9796834172776859
best_error: 0.9796834116163238
best_error: 0.9764058831757515
best_error: 0.9764058780959952
best_error: 0.9764058765908156
best_error: 0.9734372142245641
best_error: 0.9734371726160519
best_error: 0.970327780530333
best_error: 0.9703277794592275
best_error: 0.970327775463167
best_error: 0.969053044256664
best_error: 0.969053042959615
best_error: 0.9690530386927295
best_error: 0.9653201312892739
best_error: 0.9653201153059945
best_error: 0.9652892281045168
best_error: 0.9652892073989677
best_error: 0.9623702196735767
best_error: 0.9623701938781664
best_error: 0.95467809376932
best_error: 0.954678089851183
best_error: 0.9546780878607326
best_error: 0.9437549717030409
best_error: 0.9437549511049989
best_error: 0.9431151048276214
best_error: 0.9431150856786397
best_error: 0.9424788547489701
best_error: 0.9424788504616219
best_error: 0.9422964941622373
best_error: 0.9422964897679591
best_error: 0.9418210137582013
best_error: 0.9418209849481197
best_error: 0.9412850641077813
best_error: 0.9412850493525609
best_error: 0.9402268019958976
best_error: 0.9402268006041177
best_error: 0.9402268005933123
best_error: 0.9402267998200005
best_error: 0.9387815629909818
best_error: 0.9387815551476176
best_error: 0.9338358509905476
best_error: 0.9338358177884768
best_error: 0.9259651343949351
best_error: 0.9259650926904252
best_error: 0.8956499207574693
best_error: 0.8956498685304141
best_error: 0.8745545390727943
best_error: 0.8745545243726742
best_error: 0.869505827033558
best_error: 0.8695058026367026
best_error: 0.8645923129419784
best_error: 0.864592301102392
best_error: 0.8643241123357472
best_error: 0.8643241084314194
best_error: 0.8642173739264193
best_error: 0.8642173738620724
best_error: 0.8642173737006041
best_error: 0.8642173733567925
best_error: 0.8640937700909944
best_error: 0.8640937700009762
best_error: 0.8640937694515353
best_error: 0.8631046848406803
best_error: 0.8631046839298071
best_error: 0.8627627623512747
best_error: 0.8627627456981654
best_error: 0.8623769471917327
best_error: 0.8623769407133876
best_error: 0.8592569439621994
best_error: 0.8592569278743142
best_error: 0.8535867237917444
best_error: 0.8535866970854968
best_error: 0.832779622295005
best_error: 0.8327795749678504
best_error: 0.8308576636784217
best_error: 0.8308576251955594
best_error: 0.830838163734405
best_error: 0.8308381242016191
best_error: 0.8305324684014458
best_error: 0.8305324277530359
best_error: 0.8304028087865101
best_error: 0.83040276773924
best_error: 0.8303074031882813
best_error: 0.8303073619603601
best_error: 0.8302260089513926
best_error: 0.8302259679711779
best_error: 0.8301923871764888
best_error: 0.8301923459824353
best_error: 0.8300681187980957
best_error: 0.8300680778351722
best_error: 0.8300665170782098
best_error: 0.8300664760528504
best_error: 0.8300655227602171
best_error: 0.8300654819008314
best_error: 0.8278980467734598
best_error: 0.8278980407330271
best_error: 0.8261072389616735
best_error: 0.8261072269773461
best_error: 0.8239965693062459
best_error: 0.8239965680746479
best_error: 0.8239965608991475
best_error: 0.8195198718408314
best_error: 0.8195197953597648
best_error: 0.8168312216216228
best_error: 0.8168311365651165
best_error: 0.8152941650067446
best_error: 0.8152941524324683
best_error: 0.8133370278188164
best_error: 0.813336982394064
best_error: 0.8123367956036555
best_error: 0.8123367946865782
best_error: 0.8123367939580567
best_error: 0.8123214535983656
best_error: 0.8123214533384997
best_error: 0.8123214518939096
best_error: 0.8122600425030977
best_error: 0.8122600420119312
best_error: 0.8122600407902613
best_error: 0.8120458366937998
best_error: 0.8120458354548526
best_error: 0.8120458349438315
best_error: 0.8096812198643927
best_error: 0.8096812105320009
best_error: 0.8071364855980885
best_error: 0.8071364853962781
best_error: 0.8071364615511911
best_error: 0.8049479916931658
best_error: 0.8049479754143789
best_error: 0.802098602236441
best_error: 0.8020985958102611
best_error: 0.801607102380157
best_error: 0.8016070994293978
best_error: 0.8015671362078952
best_error: 0.8015671342192223
best_error: 0.8015630858146401
best_error: 0.8015630856365387
best_error: 0.8015630849174288
best_error: 0.8015537531255706
best_error: 0.8015537529267956
best_error: 0.8015537524027714
best_error: 0.8015537522183829
best_error: 0.8014883269960553
best_error: 0.801488325043538
best_error: 0.8013839254539383
best_error: 0.8013839241725498
best_error: 0.8007413621301572
best_error: 0.8007413621089498
best_error: 0.8007413619844551
best_error: 0.8007413617305015
best_error: 0.8007413614222115
best_error: 0.8007413608838598
best_error: 0.8007413598915392
best_error: 0.7997042775222849
best_error: 0.7997042773266584
best_error: 0.79970427723308
best_error: 0.7997042770705
best_error: 0.7997042760773034
best_error: 0.7997042748867706
best_error: 0.7996344161739225
best_error: 0.7996344136104512
best_error: 0.7996344134406579
best_error: 0.795289700639281
best_error: 0.7952897002426427
best_error: 0.7952896990494751
best_error: 0.7952896973779567
best_error: 0.7949942876324192
best_error: 0.7949942873137893
best_error: 0.7949942843620883
best_error: 0.7931663745444554
best_error: 0.7931663716556653
best_error: 0.7919338751033811
best_error: 0.7919338740009748
best_error: 0.7919338728987251
best_error: 0.7918243666047882
best_error: 0.7918243580587204
best_error: 0.7918010183822445
best_error: 0.7918010168490445
