ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 82
days_switch 95
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 16.855267985218912
best_error: 16.855267511661747
best_error: 4.159817226998444
best_error: 4.1598172246767
best_error: 4.15860810479768
best_error: 4.158608104784667
best_error: 4.158608104742357
best_error: 4.153715478868009
best_error: 4.153715478854415
best_error: 4.153715478812139
best_error: 4.133217511356998
best_error: 4.133217511340668
best_error: 4.133217511298765
best_error: 4.0316135685993535
best_error: 4.0316135685594485
best_error: 4.031613568527193
best_error: 3.8081105309842234
best_error: 3.808110530759632
best_error: 3.2490341895592336
best_error: 3.2490341850194846
best_error: 3.1262638190166854
best_error: 3.126263813297574
best_error: 3.10954763249415
best_error: 3.1095476266855884
best_error: 3.1079162059608216
best_error: 3.1079162001559553
best_error: 3.107369789401296
best_error: 3.1073697882660314
best_error: 3.1073697837419716
best_error: 2.8130189875324216
best_error: 2.813018950484873
best_error: 2.7457883665546263
best_error: 2.7457883215423733
best_error: 2.6517754183055287
best_error: 2.651775361499487
best_error: 2.5646410099575587
best_error: 2.5646409399233026
best_error: 2.4514200050696284
best_error: 2.4514199191573183
best_error: 2.1476649451481302
best_error: 2.147664817685713
best_error: 1.9017217618729823
best_error: 1.9017217437129714
best_error: 1.9017217390709111
best_error: 1.901261110709993
best_error: 1.9012611027562993
best_error: 1.9012610710094249
best_error: 1.8171977565391684
best_error: 1.8171976655551036
best_error: 1.8080019545213188
best_error: 1.8080018639677962
best_error: 1.7794835355114367
best_error: 1.7794835098099022
best_error: 1.7246165572501149
best_error: 1.7246165082433997
best_error: 1.4341283609810387
best_error: 1.4341283518331875
best_error: 1.4337234476675074
best_error: 1.4337234217615964
best_error: 1.4319760852343546
best_error: 1.4319760520113827
best_error: 1.4277267242634213
best_error: 1.4277267191639107
best_error: 1.4275100204476359
best_error: 1.427510018948191
best_error: 1.4271843958206472
best_error: 1.4271843955307562
best_error: 1.4266073888988646
best_error: 1.426607388700964
best_error: 1.4246547382793782
best_error: 1.42465473722903
best_error: 1.4148926983028614
best_error: 1.4148926917142424
best_error: 1.4004608198221007
best_error: 1.4004608144611348
best_error: 1.3796629145318846
best_error: 1.3796628766510406
best_error: 1.3587584785111329
best_error: 1.3587584569385192
best_error: 1.3569329858020973
best_error: 1.3569329213974866
best_error: 1.3475330794558908
best_error: 1.3475330456279917
best_error: 1.3446681457913883
best_error: 1.3446681397399873
best_error: 1.3438064083824082
best_error: 1.3438064071846685
best_error: 1.3435796697722975
best_error: 1.3435796672815232
best_error: 1.3434740256044067
best_error: 1.343474019912707
best_error: 1.3428467100626635
best_error: 1.3428467048313633
best_error: 1.341003007809949
best_error: 1.3410029989868186
best_error: 1.3326397043534988
best_error: 1.332639670855748
best_error: 1.3319464159582284
best_error: 1.3319464138281984
best_error: 1.3319464044862483
best_error: 1.331919571571612
best_error: 1.3319195547320768
best_error: 1.3315735459436886
best_error: 1.3315735411645233
best_error: 1.3315735389543906
best_error: 1.3210287411051025
best_error: 1.3210287382488282
best_error: 1.321028736083364
best_error: 1.318451199605116
best_error: 1.318451162569887
best_error: 1.3184407869137404
best_error: 1.31844074696824
best_error: 1.318421208133713
best_error: 1.3184211655005322
best_error: 1.31833521541445
best_error: 1.3183351664487526
best_error: 1.3112258693884238
best_error: 1.311225861238785
best_error: 1.3105055094271554
best_error: 1.3105054814368158
best_error: 1.3067263905001483
best_error: 1.3067263592234923
best_error: 1.3065956586536367
best_error: 1.3065956187938943
best_error: 1.306582726227719
best_error: 1.306582683805554
best_error: 1.306579513529107
best_error: 1.3065794702224178
best_error: 1.3059992136643472
best_error: 1.3059991521157286
best_error: 1.3019556483780272
best_error: 1.3019556089354547
best_error: 1.2990286061721188
best_error: 1.299028595261752
best_error: 1.298725621620857
best_error: 1.298725621412805
best_error: 1.2987256214058704
best_error: 1.2987256205867903
best_error: 1.2986955418859205
best_error: 1.2986955418850121
best_error: 1.2986955418733237
best_error: 1.2986955417171069
best_error: 1.298695540792979
best_error: 1.298591508468876
best_error: 1.2985915084296922
best_error: 1.2985915082995985
best_error: 1.298591507343427
best_error: 1.2984890415879518
best_error: 1.298489021413628
best_error: 1.298119606996826
best_error: 1.2981196011206688
best_error: 1.2978799752418189
best_error: 1.2978799734893374
best_error: 1.2976369079946921
best_error: 1.2976369043833271
best_error: 1.2974696549804166
best_error: 1.2974696520340796
best_error: 1.2973957170617423
best_error: 1.297395710576996
best_error: 1.2971981207050058
best_error: 1.2971981117246734
best_error: 1.2970582498473247
best_error: 1.2970582424985864
best_error: 1.2969188095441007
best_error: 1.2969188058888441
best_error: 1.2968690663559448
best_error: 1.2968690656475217
best_error: 1.2968690654874377
best_error: 1.2968555800065553
best_error: 1.2968555793470375
best_error: 1.2968555791248209
best_error: 1.296771812841519
best_error: 1.2967718128292811
best_error: 1.2967718128154764
best_error: 1.2967718119309484
best_error: 1.2965689399866127
best_error: 1.2965689399770661
best_error: 1.2965689399762812
best_error: 1.2965689390068962
best_error: 1.2953422914431334
best_error: 1.2953422906161536
best_error: 1.2953422903562568
best_error: 1.2931479787963462
best_error: 1.2931479781362696
best_error: 1.2931479774862924
best_error: 1.288090759250337
best_error: 1.288090731238999
best_error: 1.284746468551944
best_error: 1.2847464549734782
best_error: 1.2827360295302683
best_error: 1.2827360158078553
best_error: 1.282166594468599
best_error: 1.2821665913259297
best_error: 1.2811772185697743
best_error: 1.2811772126090823
best_error: 1.281099824391863
best_error: 1.2810998235318731
best_error: 1.281093746327585
best_error: 1.2810937461071839
best_error: 1.281093200099602
best_error: 1.281093200083929
best_error: 1.2810932000779982
best_error: 1.2810932000691966
best_error: 1.2810932000549633
best_error: 1.2810900799629714
best_error: 1.281090079684172
best_error: 1.2810602778058555
best_error: 1.2810602771654707
best_error: 1.2809662466036498
best_error: 1.2809662436984148
best_error: 1.2808817938200747
best_error: 1.2808817908019083
best_error: 1.2808132059701136
best_error: 1.2808131992309577
best_error: 1.280414900227473
best_error: 1.2804148943238374
best_error: 1.279571633614574
best_error: 1.2795716279079363
best_error: 1.2788730939453423
best_error: 1.2788730860202613
best_error: 1.2781512890418103
best_error: 1.2781512805658222
best_error: 1.2771146218031282
best_error: 1.2771146020597257
best_error: 1.2753644465431453
best_error: 1.2753644377863358
best_error: 1.2731831483117797
best_error: 1.2731831384963028
best_error: 1.2728351861288822
best_error: 1.2728351849070976
best_error: 1.2726964223947383
best_error: 1.2726964215702634
best_error: 1.2719404797810885
best_error: 1.2719404776755414
best_error: 1.2695985080526637
best_error: 1.2695985074698186
best_error: 1.2690521105126518
best_error: 1.2690521063179494
best_error: 1.2686384542676767
best_error: 1.2686384507806914
best_error: 1.268559231939379
best_error: 1.268559231934054
best_error: 1.268559231930564
best_error: 1.2685592318983938
best_error: 1.268559231832499
best_error: 1.2685582334028724
best_error: 1.268558233164373
best_error: 1.2685578352850424
best_error: 1.2685578350985418
best_error: 1.2685577304576074
best_error: 1.2685577304503604
best_error: 1.268557730412338
best_error: 1.268557730339417
best_error: 1.26855738998174
best_error: 1.2685573892733095
best_error: 1.2685567907795714
best_error: 1.2685567907506101
best_error: 1.268556790734287
best_error: 1.2685567906560204
best_error: 1.2685551083492141
best_error: 1.2685551079045287
best_error: 1.2685540655942513
best_error: 1.2685540642507744
best_error: 1.2685519194057848
best_error: 1.2685519190086982
best_error: 1.2685510707592764
best_error: 1.2685510704281864
best_error: 1.2685505379891941
best_error: 1.2685505376883628
best_error: 1.2685489551149716
best_error: 1.2685489548529814
best_error: 1.2685384711568297
best_error: 1.2685384694861421
