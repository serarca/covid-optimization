ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 68
days_switch 45
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.534003499976365
best_error: 25.534003295940185
best_error: 4.971502307493009
best_error: 4.971502307013189
best_error: 4.971350332527419
best_error: 4.971350332512227
best_error: 4.971350332385432
best_error: 4.970739261249976
best_error: 4.970739261234566
best_error: 4.970739261107386
best_error: 4.968242921322119
best_error: 4.968242921305802
best_error: 4.968242921177058
best_error: 4.957334530812415
best_error: 4.957334530791788
best_error: 4.957334530656266
best_error: 4.888311359890957
best_error: 4.888311359808091
best_error: 4.8883113596468855
best_error: 4.803279543119234
best_error: 4.803279542657875
best_error: 3.9183551122853313
best_error: 3.918355019475306
best_error: 3.1509070484659585
best_error: 3.1509068948956953
best_error: 2.7481065927474315
best_error: 2.748106388160019
best_error: 2.748106338432405
best_error: 2.4008991335985184
best_error: 2.4008988727002922
best_error: 2.345127890666251
best_error: 2.3451278664474997
best_error: 2.3447606554974745
best_error: 2.3447606516942705
best_error: 2.3447606461272095
best_error: 2.3446399725410783
best_error: 2.344639967405929
best_error: 2.3446399631727304
best_error: 2.344165161489322
best_error: 2.3441651514434283
best_error: 2.3427238370354635
best_error: 2.342723827473118
best_error: 2.3427238271252637
best_error: 2.340445148942277
best_error: 2.340445148514097
best_error: 2.3404451484503017
best_error: 2.3404451384059755
best_error: 2.32061205004257
best_error: 2.3206119833007373
best_error: 2.2785222740537647
best_error: 2.2785221845941557
best_error: 1.8103758580608913
best_error: 1.8103757733145829
best_error: 1.7911550099095521
best_error: 1.7911549169035619
best_error: 1.7766350936000261
best_error: 1.7766349799644
best_error: 1.7653077096718064
best_error: 1.7653075576226775
best_error: 1.7314053340832052
best_error: 1.7314052103945954
best_error: 1.6717821299131073
best_error: 1.6717820565650054
best_error: 1.6662202849692236
best_error: 1.6662202615753678
best_error: 1.666220253635014
best_error: 1.6568102270522216
best_error: 1.6568102118011172
best_error: 1.656810186523434
best_error: 1.6380598506260815
best_error: 1.6380597900949851
best_error: 1.6235204807036983
best_error: 1.6235204713678426
best_error: 1.6206328416535078
best_error: 1.620632748164906
best_error: 1.6192515151608373
best_error: 1.6192515084778694
best_error: 1.6191224825569805
best_error: 1.619122480888724
best_error: 1.619103140191049
best_error: 1.6191031378995364
best_error: 1.6190934550040668
best_error: 1.6190934544065283
best_error: 1.6190934541104598
best_error: 1.619050259874423
best_error: 1.6190502589436617
best_error: 1.6189206402199101
best_error: 1.6189206373881264
best_error: 1.6185566497070147
best_error: 1.6185566391104553
best_error: 1.6181586916340043
best_error: 1.6181586783726756
best_error: 1.6153492530927605
best_error: 1.6153492331180974
best_error: 1.6080262054916254
best_error: 1.6080261810186771
best_error: 1.595430792278003
best_error: 1.5954307442184446
best_error: 1.583377034226138
best_error: 1.5833769670694422
best_error: 1.5731067192868928
best_error: 1.5731066018071034
best_error: 1.5419370197450097
best_error: 1.5419367720959665
best_error: 1.5233201922607702
best_error: 1.5233200756451126
best_error: 1.5226877135967214
best_error: 1.5226876834534735
best_error: 1.5142021203420948
best_error: 1.5142020681375268
best_error: 1.509175666449664
best_error: 1.5091756503448388
best_error: 1.5090815935044803
best_error: 1.509081583023675
best_error: 1.508839119315436
best_error: 1.5088391141195783
best_error: 1.508777500845528
best_error: 1.5087774997583425
best_error: 1.5087647006511307
best_error: 1.5087647003124487
best_error: 1.5087646998760098
best_error: 1.5087646998173099
best_error: 1.5087565002071952
best_error: 1.5087564992863087
best_error: 1.5087514482335787
best_error: 1.5087514463830587
best_error: 1.508736726666488
best_error: 1.5087367240715264
best_error: 1.508697355242831
best_error: 1.5086973485531467
best_error: 1.508635218490027
best_error: 1.5086352046739133
best_error: 1.508492983660329
best_error: 1.5084929596571734
best_error: 1.5080933224865714
best_error: 1.5080932860750051
best_error: 1.5069358636630568
best_error: 1.5069358057550628
best_error: 1.5048661545260902
best_error: 1.5048660874788038
best_error: 1.4988404149685355
best_error: 1.4988403629488518
best_error: 1.4930027618122494
best_error: 1.4930027229364462
best_error: 1.491509662706116
best_error: 1.49150962851828
best_error: 1.482625058660572
best_error: 1.4826250292537975
best_error: 1.477888074686093
best_error: 1.4778880328512096
best_error: 1.4745129672628274
best_error: 1.4745129591381698
best_error: 1.4745115342260895
best_error: 1.474511526153429
best_error: 1.4741769120513197
best_error: 1.4741769011649077
best_error: 1.473942748939506
best_error: 1.4739427384384696
best_error: 1.4687029614195095
best_error: 1.4687029498987323
best_error: 1.4687029463875854
best_error: 1.4665420868300805
best_error: 1.466542086003325
best_error: 1.466542057118227
best_error: 1.4642431452890718
best_error: 1.4642431138659595
best_error: 1.4618415172353025
best_error: 1.461841516861031
best_error: 1.4618414920187601
best_error: 1.4560566058218611
best_error: 1.4560565864827668
best_error: 1.4528585351871104
best_error: 1.4528584664243653
best_error: 1.4369680617409366
best_error: 1.4369679962319821
best_error: 1.397427539812594
best_error: 1.3974274431538591
best_error: 1.3819879601087297
best_error: 1.3819879322309156
best_error: 1.3781524457345702
best_error: 1.3781523917727196
best_error: 1.3759137615032326
best_error: 1.3759137209555368
best_error: 1.3751073907194309
best_error: 1.3751073800068416
best_error: 1.3746803108612196
best_error: 1.3746803105626249
best_error: 1.373890274102603
best_error: 1.3738902609616668
best_error: 1.3735573329119035
best_error: 1.3735573296391081
best_error: 1.3731528830379718
best_error: 1.3731528702489961
best_error: 1.3724375150498767
best_error: 1.3724374797411338
best_error: 1.371602030182693
best_error: 1.3716019756789217
best_error: 1.3709374507576861
best_error: 1.3709374038598683
best_error: 1.3703310492931016
best_error: 1.3703310201880623
best_error: 1.3700754242969884
best_error: 1.3700754195534148
best_error: 1.3700059482843139
best_error: 1.3700059433646237
best_error: 1.3697021172661743
best_error: 1.3697021160602103
best_error: 1.3697021067263058
best_error: 1.3691023528176494
best_error: 1.369102350339634
best_error: 1.3691023361118717
best_error: 1.3674132192488606
best_error: 1.3674132163923909
best_error: 1.36741319468295
best_error: 1.3669261508283799
best_error: 1.3669261299723496
best_error: 1.3655020528628894
best_error: 1.3655020412209666
best_error: 1.3641335552914864
best_error: 1.3641334980006787
best_error: 1.3632518715614867
best_error: 1.3632518505788767
best_error: 1.3631658493304568
best_error: 1.3631658428978162
best_error: 1.3631540114286131
best_error: 1.3631540113880922
best_error: 1.3631540112309122
best_error: 1.3631516550387035
best_error: 1.363151654892914
best_error: 1.3631516548374247
best_error: 1.3631511912360674
best_error: 1.3631511901240145
best_error: 1.3631509199218328
best_error: 1.363150919642435
best_error: 1.3631508369854146
best_error: 1.3631508367068432
best_error: 1.3631508365142069
best_error: 1.3631506930530535
best_error: 1.3631506927527386
best_error: 1.3631506926477974
best_error: 1.3631498331800957
best_error: 1.363149831878107
best_error: 1.3631490051673019
best_error: 1.3631490039246075
best_error: 1.3631432875982166
best_error: 1.363143286560382
best_error: 1.3631372109142958
best_error: 1.3631372103273622
best_error: 1.3631138197571622
best_error: 1.3631138188798984
best_error: 1.3630849104612048
best_error: 1.3630849103836145
best_error: 1.3630849102356526
best_error: 1.362966428694918
best_error: 1.3629664285227256
best_error: 1.3629664284592595
