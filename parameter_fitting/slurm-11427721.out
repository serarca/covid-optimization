ParameterFittingRandomToPython.py:123: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  french_days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:133: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:134: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:140: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:145: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values-data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values - data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:148: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values - data[data['reg']==11][data['cl_age90']==0].rea.values
days_ahead 66
days_switch 30
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
best_error: 25.74569286800167
best_error: 25.74569270571103
best_error: 5.026585839975445
best_error: 5.026585839674021
best_error: 5.026466555804797
best_error: 5.026466555771174
best_error: 5.02646655559148
best_error: 5.025987200766201
best_error: 5.025987200732057
best_error: 5.025987200552073
best_error: 5.024033492123492
best_error: 5.02403349208721
best_error: 5.02403349190605
best_error: 5.015581573010968
best_error: 5.0155815729650355
best_error: 5.01558157277899
best_error: 4.965447539623328
best_error: 4.965447539492821
best_error: 4.965447539296721
best_error: 3.1543982913367334
best_error: 3.154398108317604
best_error: 2.8929949939856034
best_error: 2.892994870232345
best_error: 2.871909914167546
best_error: 2.8719097579646644
best_error: 2.8207719099549644
best_error: 2.8207718734244764
best_error: 2.483089242373953
best_error: 2.4830890378876775
best_error: 2.4830881722399436
best_error: 2.464394912724631
best_error: 2.464394912583629
best_error: 2.4643949029910983
best_error: 2.386002864431
best_error: 2.3860027969628717
best_error: 2.36864688271386
best_error: 2.3686468826010856
best_error: 2.3686468700952408
best_error: 2.365768328517218
best_error: 2.365768328304574
best_error: 2.3657683167461663
best_error: 2.3170548178612282
best_error: 2.3170547427693915
best_error: 2.258771070198203
best_error: 2.258770956777499
best_error: 1.9735737396820636
best_error: 1.9735735367865523
best_error: 1.9427047942474764
best_error: 1.9427047682645517
best_error: 1.9421160864786686
best_error: 1.9421160163853597
best_error: 1.940235210051871
best_error: 1.940235168449601
best_error: 1.9401674323703142
best_error: 1.9401673771995092
best_error: 1.940057925060786
best_error: 1.9400578784339713
best_error: 1.940050466879992
best_error: 1.940050418708364
best_error: 1.917885506683245
best_error: 1.91788548367141
best_error: 1.6353877833687107
best_error: 1.6353877624110666
best_error: 1.625546528671385
best_error: 1.625546423532977
best_error: 1.6198956991775761
best_error: 1.6198956782685712
best_error: 1.6060146181303154
best_error: 1.606014545218044
best_error: 1.6036625372432878
best_error: 1.6036625243811742
best_error: 1.6030416998277193
best_error: 1.6030416914076482
best_error: 1.6028881755158964
best_error: 1.602888163453863
best_error: 1.6027802707630787
best_error: 1.6027802702314522
best_error: 1.6027802699249944
best_error: 1.6027802696719784
best_error: 1.6027210612445757
best_error: 1.602721060817574
best_error: 1.602721060441562
best_error: 1.602721060090766
best_error: 1.6017151208150529
best_error: 1.6017151166700625
best_error: 1.594732010779834
best_error: 1.5947319973726213
best_error: 1.5824154475140957
best_error: 1.5824154399448047
best_error: 1.5673114474355532
best_error: 1.567311386991846
best_error: 1.560475318109017
best_error: 1.5604752167770146
best_error: 1.5604301822025182
best_error: 1.5604300671391895
best_error: 1.5217407114381265
best_error: 1.5217406388320383
best_error: 1.5217395266651932
best_error: 1.5217394532494977
best_error: 1.5217325430794284
best_error: 1.5217324638769982
best_error: 1.4995785234214696
best_error: 1.4995785016139909
best_error: 1.4825625446092559
best_error: 1.4825624412706964
best_error: 1.479838183486601
best_error: 1.4798381204506135
best_error: 1.4765279995876301
best_error: 1.4765279609996178
best_error: 1.4756101607214216
best_error: 1.4756101428822412
best_error: 1.4755709240134456
best_error: 1.4755709236118593
best_error: 1.4755709235205796
best_error: 1.4755709234387206
best_error: 1.4755709226566112
best_error: 1.4755647557600196
best_error: 1.4755647556902978
best_error: 1.475564755222652
best_error: 1.4755647549235187
best_error: 1.4754246032455018
best_error: 1.4754245971801578
best_error: 1.475369637581243
best_error: 1.4753696344962168
best_error: 1.4752677263829699
best_error: 1.475267725544491
best_error: 1.4752677251888762
best_error: 1.4748816248555783
best_error: 1.4748816242550205
best_error: 1.4748816238914373
best_error: 1.4748816232859279
best_error: 1.4739693963557239
best_error: 1.4739693951899822
best_error: 1.4739693950373223
best_error: 1.473969394489157
best_error: 1.470090855021564
best_error: 1.4700908522347218
best_error: 1.465490025916903
best_error: 1.465489951844397
best_error: 1.4628255490776414
best_error: 1.4628255417706741
best_error: 1.4609281617326177
best_error: 1.4609281587011387
best_error: 1.460114104800975
best_error: 1.4601141045365926
best_error: 1.4601141045206398
best_error: 1.4601141040260006
best_error: 1.4597945584666236
best_error: 1.4597945576768674
best_error: 1.4595281877084654
best_error: 1.4595281875185233
best_error: 1.459528186633445
best_error: 1.4579605313003001
best_error: 1.4579605158333024
best_error: 1.454592550796361
best_error: 1.4545925495015046
best_error: 1.4545925485349083
best_error: 1.4545925480359483
best_error: 1.4409201584270093
best_error: 1.440920087539975
best_error: 1.4409081480079993
best_error: 1.4408993547357514
best_error: 1.439635169491861
best_error: 1.4396351109567302
best_error: 1.4370375038051981
best_error: 1.437037477518066
best_error: 1.4346112463962144
best_error: 1.4346112336957526
best_error: 1.433013431430989
best_error: 1.4330134272765027
best_error: 1.4330134160826804
best_error: 1.4326948261810282
best_error: 1.4326948133759831
best_error: 1.4326948072938839
best_error: 1.4315076478526043
best_error: 1.4315075711524077
best_error: 1.4315075018707537
best_error: 1.4306128394304576
best_error: 1.430612757505339
best_error: 1.4305888765942363
best_error: 1.4301760954230616
best_error: 1.4301760502609273
best_error: 1.4301760371728727
best_error: 1.4274810145922499
best_error: 1.4274809746979014
best_error: 1.4274807582667552
best_error: 1.4260378177846227
best_error: 1.4260377897578211
best_error: 1.4254592113579532
best_error: 1.4254591860636991
best_error: 1.4251854573907783
best_error: 1.4251854370956176
best_error: 1.4251483639875575
best_error: 1.4251483418800586
best_error: 1.425056343452593
best_error: 1.4250563329921306
best_error: 1.4250563265543266
best_error: 1.4250008780109338
best_error: 1.42500086968659
best_error: 1.4250008584907237
best_error: 1.4249347392521474
best_error: 1.4249347334349738
best_error: 1.424934718029517
best_error: 1.4248843926294554
best_error: 1.424884386956798
best_error: 1.4248843717234954
best_error: 1.4244872065698053
best_error: 1.4244872016386296
best_error: 1.4244871907132444
best_error: 1.4239488023381959
best_error: 1.4239487916579414
best_error: 1.4239487831983029
best_error: 1.4237167526816266
best_error: 1.4237167358416616
best_error: 1.4237167331019143
best_error: 1.4234365549388739
best_error: 1.4234365304367955
best_error: 1.4233670467964359
best_error: 1.423367019015717
best_error: 1.4231442485085308
best_error: 1.4231442172750632
best_error: 1.4227795373364318
best_error: 1.4227795028815848
best_error: 1.4219106364877876
best_error: 1.4219106060068578
best_error: 1.4206006406242955
best_error: 1.4206006131024123
best_error: 1.4190064431078082
best_error: 1.4190064238617912
best_error: 1.417613721262188
best_error: 1.4176137113755878
best_error: 1.4167370998527848
best_error: 1.416737090486076
best_error: 1.4162409685085435
best_error: 1.4162409641139597
best_error: 1.4160643986883912
best_error: 1.4160643916656728
best_error: 1.4159456860735045
best_error: 1.4159456793126006
best_error: 1.4156577068069252
best_error: 1.4156577018154635
best_error: 1.4152956048641883
best_error: 1.4152956046620302
best_error: 1.4152956041871005
best_error: 1.415295603221173
best_error: 1.4152544853742446
best_error: 1.4152544850704478
best_error: 1.4152544848411726
best_error: 1.4152544839086807
best_error: 1.4152453580871727
best_error: 1.415245357690521
best_error: 1.4152453576233879
best_error: 1.4152453567097623
best_error: 1.4152391377481532
best_error: 1.4152391377371834
best_error: 1.4152391373698765
best_error: 1.415239137330901
best_error: 1.415239136394439
best_error: 1.4152293775087288
best_error: 1.4152293771596747
best_error: 1.4152293771398774
best_error: 1.4152293761886006
best_error: 1.4152117190520104
best_error: 1.415211719006885
best_error: 1.4152117188802662
best_error: 1.4152117186857052
best_error: 1.415211717698881
best_error: 1.4152021239160237
best_error: 1.4152021237582126
best_error: 1.4152021237436494
best_error: 1.4152021235402907
best_error: 1.4152021225513738
best_error: 1.4151634160711328
best_error: 1.415163415595791
best_error: 1.4151634146607421
best_error: 1.4151579641754202
best_error: 1.4151579636830283
best_error: 1.4151579627870978
best_error: 1.4151529755193266
best_error: 1.4151529750398473
best_error: 1.4151529742061297
best_error: 1.4151510463986714
best_error: 1.4151510459097938
best_error: 1.4151510450903353
best_error: 1.415142367326657
best_error: 1.4151423653889958
