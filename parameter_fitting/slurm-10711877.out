ParameterFittingRandomToPython.py:116: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:129: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:131: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:132: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:205: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:207: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 24.969835477099135
best_error: 24.96983524441344
best_error: 12.989151670788921
best_error: 12.989151663451532
best_error: 12.989151644780366
best_error: 12.803320698901569
best_error: 12.803320689804991
best_error: 12.803320685003023
best_error: 12.150786813169093
best_error: 12.150786803167774
best_error: 12.08851941832172
best_error: 12.088519408843087
best_error: 12.088519407215664
best_error: 12.083145597341911
best_error: 12.083145588405745
best_error: 12.083145584772184
best_error: 11.283384564469017
best_error: 11.28338447774208
best_error: 11.089084027526805
best_error: 11.089083921256929
best_error: 10.959208596842599
best_error: 10.95920847677278
best_error: 10.818689539401884
best_error: 10.818689413789341
best_error: 9.972829648626336
best_error: 9.972829537323674
best_error: 9.972829514528165
best_error: 9.785743032802586
best_error: 9.785742980321645
best_error: 9.78574286984627
best_error: 9.548269930695636
best_error: 9.548269891056982
best_error: 9.548269753331066
best_error: 9.46637860483993
best_error: 9.466378577985237
best_error: 9.466378421928859
best_error: 9.419486644906927
best_error: 9.4194866352245
best_error: 9.419486458826764
best_error: 9.276839422102487
best_error: 9.276839226110894
best_error: 9.258062993309338
best_error: 9.258062878776116
best_error: 9.201570583267577
best_error: 9.201570382127318
best_error: 9.186957276641778
best_error: 9.186957074398977
best_error: 9.184786588625641
best_error: 9.18478638620319
best_error: 9.183357223634738
best_error: 9.183357021163271
best_error: 9.180448840401304
best_error: 9.180448637674614
best_error: 9.17772799904731
best_error: 9.177727796082216
best_error: 9.177660856090004
best_error: 9.177660653118977
best_error: 9.17760347447063
best_error: 9.177603271494622
best_error: 9.177519872329567
best_error: 9.177519669346154
best_error: 9.177442895802718
best_error: 9.177442692812534
best_error: 9.1774036879017
best_error: 9.177403484908044
best_error: 9.177367581949483
best_error: 9.177367378952638
best_error: 9.177349242201082
best_error: 9.177349039202605
best_error: 9.177332345572976
best_error: 9.177332142572999
best_error: 9.177323805711232
best_error: 9.177323602710533
best_error: 9.177315930285566
best_error: 9.177315727284206
best_error: 9.177311986536248
best_error: 9.177311783534483
best_error: 9.177308342996557
best_error: 9.17730813999448
best_error: 9.177306549245888
best_error: 9.177306346243673
best_error: 9.17730488655264
best_error: 9.177304683550272
best_error: 8.942827188860244
best_error: 8.942827099124036
best_error: 8.942827030646827
best_error: 8.16204542277111
best_error: 8.162045328483734
best_error: 8.162045268826027
best_error: 7.780194675750119
best_error: 7.780194576943909
best_error: 7.780194524203053
best_error: 7.710166129058093
best_error: 7.710165990696266
best_error: 6.822895395438691
best_error: 6.822894737839435
best_error: 6.357288935816305
best_error: 6.357288491546907
best_error: 5.7557630880092
best_error: 5.7557627178272135
best_error: 5.639963643421365
best_error: 5.6399632781808755
best_error: 5.6044983016337735
best_error: 5.60449793365399
best_error: 5.59734518533922
best_error: 5.597344817618318
best_error: 5.592860315795786
best_error: 5.592859947304245
best_error: 5.590952620818106
best_error: 5.590952253122787
best_error: 5.5896403925922
best_error: 5.5896400246714855
best_error: 5.588960627534157
best_error: 5.588960259496714
best_error: 5.588406542376194
best_error: 5.588406174243615
best_error: 5.58815910037697
best_error: 5.588158732201929
best_error: 5.587949468196516
best_error: 5.5879490999854955
best_error: 5.587862628359401
best_error: 5.587862260133464
best_error: 5.587717267884932
best_error: 5.587717122749092
best_error: 5.587717001726682
best_error: 5.384137998429726
best_error: 5.384137555775986
best_error: 5.383543491895853
best_error: 5.383543049126784
best_error: 5.381165033143649
best_error: 5.38116458895075
best_error: 5.371629238994341
best_error: 5.371628791886291
best_error: 5.332863380147905
best_error: 5.332862920547026
best_error: 5.288474803256211
best_error: 5.2884747694129
best_error: 5.273187300140308
best_error: 5.273186826142124
best_error: 5.268006681504783
best_error: 5.268006206644495
best_error: 5.265600219099264
best_error: 5.265599743838903
best_error: 5.2638933398972725
best_error: 5.26389286435329
best_error: 5.263125766314196
best_error: 5.2631252906427335
best_error: 5.262582833793875
best_error: 5.262582800068113
best_error: 5.2625669144636
best_error: 5.262566438699337
best_error: 5.2625579017425
best_error: 5.262557425976736
best_error: 5.262552783859231
best_error: 5.2625523080926175
best_error: 5.262549502903926
best_error: 5.262549027136756
best_error: 5.262547879350791
best_error: 5.262547403583358
best_error: 5.262546735044545
best_error: 5.26254625927693
best_error: 5.26254621901572
best_error: 5.262545998346342
best_error: 5.262545991171783
best_error: 5.2625459867279964
best_error: 5.2625459796963545
best_error: 5.262545975252577
best_error: 5.262545951401192
best_error: 5.262545946957401
best_error: 5.262545936240288
best_error: 5.262545931796512
best_error: 5.262545924200213
best_error: 5.262545923086388
best_error: 5.262545917814159
best_error: 5.26254591670032
best_error: 5.262545909107037
best_error: 5.262545907993168
best_error: 5.26254590651404
best_error: 5.2625459054001595
best_error: 5.262545904846303
best_error: 5.2625459047280145
best_error: 5.262545904728014
