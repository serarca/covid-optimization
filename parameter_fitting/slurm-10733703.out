ParameterFittingRandomToPython.py:122: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  days = data[data['reg']==11][data['cl_age90']==0].jour.values
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:135: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].hosp.values for i in range(0,9)
ParameterFittingRandomToPython.py:137: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].hosp.values
ParameterFittingRandomToPython.py:138: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  beds_real['total']=data[data['reg']==11][data['cl_age90']==0].hosp.values
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:141: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].rea.values for i in range(0,9)
ParameterFittingRandomToPython.py:143: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].rea.values
ParameterFittingRandomToPython.py:144: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  icus_real['total']=data[data['reg']==11][data['cl_age90']==0].rea.values
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:147: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  age_groups[i]:data[data['reg']==11][data['cl_age90']==10*i+9].dc.values for i in range(0,9)
ParameterFittingRandomToPython.py:149: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['age_group_80_plus']+=data[data['reg']==11][data['cl_age90']==90].dc.values
ParameterFittingRandomToPython.py:150: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  deaths_real['total']=data[data['reg']==11][data['cl_age90']==0].dc.values
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:211: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_deaths = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].dc.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
ParameterFittingRandomToPython.py:213: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  mult_icus = np.sum(data[data['reg']==11][data['cl_age90']==0].hosp.values)/np.sum(data[data['reg']==11][data['cl_age90']==0].rea.values)
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
{'groups': 'all', 'params_to_try': {'delta_schooling': [0.5, 1, 5], 'xi': [0, 371990.3, 929975.75, 1859951.5, 3719903, 5579854.5], 'icus': [2000, 2300, 2600, 2900, 3200], 'tests': [[0, 0], [30000, 30000], [60000, 60000], [120000, 120000]], 'testing': ['homogeneous'], 'eta': [0, 0.1, 0.2]}}
0.7791072263244828
7.194862933913178
best_error: 10.738457669149275
best_error: 10.738457648539024
best_error: 10.38308733286131
best_error: 10.383087271289584
best_error: 6.410562867237599
best_error: 6.410562867237596
best_error: 6.410562866169215
best_error: 6.3759218379170655
best_error: 6.375921606244228
best_error: 6.297021979950321
best_error: 6.2970218669442035
best_error: 6.272398198994245
best_error: 6.272398198994244
best_error: 6.272398196848877
best_error: 6.263821735746516
best_error: 6.26382173179673
best_error: 6.2636258366443
best_error: 6.263625836644299
best_error: 6.2636258326918455
best_error: 6.263587501125403
best_error: 6.263587497172849
best_error: 6.263560804680011
best_error: 6.26356080468001
best_error: 6.263560800727359
best_error: 6.263540622288662
best_error: 6.2635406222886605
best_error: 6.263540618335977
best_error: 6.263523165944544
best_error: 6.263523165944543
best_error: 6.263523161991809
best_error: 6.263504643410133
best_error: 6.26350464341013
best_error: 6.263504639457343
best_error: 6.2634835540256635
best_error: 6.263483554025662
best_error: 6.263483550072811
best_error: 6.2634821334363
best_error: 6.263482032204723
best_error: 6.263477818471914
best_error: 6.2634778184719115
best_error: 6.2634778145188985
best_error: 6.2634599279447345
best_error: 6.263459927944733
best_error: 6.263459923986767
best_error: 6.26345629093134
best_error: 6.263456290931338
best_error: 6.263456286962771
best_error: 6.263455310430942
best_error: 6.263455209196477
best_error: 6.261282248143127
best_error: 6.261282243914345
best_error: 6.250856001259902
best_error: 6.250856001259901
best_error: 6.250855995754652
best_error: 6.186983160849559
best_error: 6.186983160849558
best_error: 6.186983152829678
best_error: 6.094223564258128
best_error: 6.094223564258127
best_error: 6.094223549372802
best_error: 5.989062262850305
best_error: 5.989062262850304
best_error: 5.989062258956152
best_error: 5.985128353902178
best_error: 5.985128353902175
best_error: 5.985128353729121
best_error: 5.897433082671993
best_error: 5.8974330826719905
best_error: 5.650621739520882
best_error: 5.650621739520879
best_error: 5.6506217021904135
best_error: 5.567868212478518
best_error: 5.5678682124785155
best_error: 5.469840155356593
best_error: 5.469840036660122
best_error: 5.424039553978341
best_error: 5.424039469533843
best_error: 5.382307129860342
best_error: 5.382307065352844
best_error: 5.363854526594112
best_error: 5.363854467834022
best_error: 5.3546805012794145
best_error: 5.354680445043799
best_error: 5.353854680730185
best_error: 5.353854680730184
best_error: 5.353854680576539
best_error: 5.349102546160426
best_error: 5.349102545996172
best_error: 5.348438166218395
best_error: 5.348438166218394
best_error: 5.348438166051655
best_error: 5.348261222312549
best_error: 5.348261163996752
best_error: 5.348248192650474
best_error: 5.348248192650472
best_error: 5.348248192483537
best_error: 5.348244879124858
best_error: 5.34824482080557
best_error: 5.348112271149247
best_error: 5.348112271149246
best_error: 5.348112270968556
best_error: 5.347418964077268
best_error: 5.347418964077267
best_error: 5.347418963847613
best_error: 5.34400657133637
best_error: 5.344006571336368
best_error: 5.344006570773758
best_error: 5.34143728204188
best_error: 5.341437281211576
best_error: 5.340975729972266
best_error: 5.340975729972262
best_error: 5.340975729089657
best_error: 5.340732029020525
best_error: 5.340732029020523
best_error: 5.340712816444467
best_error: 5.340712816444465
best_error: 5.340712815532571
best_error: 5.3374216697607
best_error: 5.337075456994469
best_error: 5.3370754569944685
best_error: 5.336764585217969
best_error: 5.336764585217968
best_error: 5.335930458068659
best_error: 5.335930458068658
best_error: 5.334933901301552
best_error: 5.331672036080467
best_error: 5.322828478377366
best_error: 5.321411782663182
best_error: 5.321411782663179
best_error: 5.316249947306089
best_error: 5.300881166635883
best_error: 5.300881166635882
best_error: 5.297104889275877
best_error: 5.297104841382923
best_error: 5.253246044643947
best_error: 5.2433484623504905
best_error: 5.236435030827815
best_error: 5.236434958906601
best_error: 5.2211366204678935
best_error: 5.221136620467892
best_error: 5.221136576243155
best_error: 5.184818488724588
best_error: 5.184818477605798
best_error: 5.182181541576357
best_error: 5.182181541576355
best_error: 5.170400301270643
best_error: 5.17040019056342
best_error: 5.124820030804602
best_error: 5.124820015794858
best_error: 5.120176780792752
best_error: 5.120176758507999
best_error: 5.120017662105487
best_error: 5.120017649000896
best_error: 5.1198020503189365
best_error: 5.1198020277552505
best_error: 5.119733721628083
best_error: 5.119733698896813
best_error: 5.119115873383924
best_error: 5.11911584343686
best_error: 5.118876865464101
best_error: 5.118876838027882
best_error: 5.1188747232566145
best_error: 5.118874695781963
best_error: 5.118873557430804
best_error: 5.1188735299340395
best_error: 5.118873044668838
best_error: 5.1188730171719055
best_error: 5.118872892820256
best_error: 5.118872892820255
best_error: 5.118872888555728
best_error: 5.1188728883913885
best_error: 5.1188728865279955
best_error: 5.118872886272611
best_error: 5.1188728862726105
best_error: 5.11887288627259
