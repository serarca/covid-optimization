200
(0.5, 297592240.0, 0.29, 6.0, (7, 14), 'fitted-scaled', 'econ-scaled', 'oct21-scaled', 0.1, 0.05, 2, 'full_lockdown', 5)
The value of T is: 104
90
Total Reward at the start of the inner iterations: -183527308.52858552
Traceback (most recent call last):
  File "run_linearization_heuristic_robustness.py", line 876, in <module>
    main()
  File "run_linearization_heuristic_robustness.py", line 153, in main
    run_lin_heur_and_save_yaml(delta, xi, icus, mtests, atests, n_days, region, test_freq, lockdown_freq, econ, init, eta, groups, start_day, trust_region_radius, max_inner_iterations_mult, initial_uhat, optimize_bouncing, scaling, money_scaling, random_instance, nu, gamma)
  File "run_linearization_heuristic_robustness.py", line 192, in run_lin_heur_and_save_yaml
    dynModel = run_linearization_heuristic(simulation_params, experiment_params, start_day, trust_region_radius, max_inner_iterations_mult, initial_uhat, optimize_bouncing, random_instance, nu, gamma)
  File "run_linearization_heuristic_robustness.py", line 342, in run_linearization_heuristic
    linearization.run_heuristic_linearization(dynModel, trust_region_radius, max_inner_iterations_mult, initial_uhat, optimize_bouncing, targetActivities, targetGroups, targetTests, deltaFairnessOne, deltaFair, optimizeLockdowns, averageLockConst, pLock, optimizeOnlyDeaths, random_instance)
  File "/home/groups/daniancu/covid-optimization/covid-optimization/heuristics/linearization.py", line 1539, in run_heuristic_linearization
    constr_coefs, constr_consts, obj_coefs = calculate_all_coefs(dynModel,k,Xhat_seq,uhat_seq,Gamma_x,Gamma_u,D,E)
  File "/home/groups/daniancu/covid-optimization/covid-optimization/heuristics/linearization.py", line 1133, in calculate_all_coefs
    gf_vec = get_F(dynModel, Xhat_t, uhat_t, t)
  File "/home/groups/daniancu/covid-optimization/covid-optimization/heuristics/linearization.py", line 663, in get_F
    dynModel.take_time_step(m_tests, a_tests, alphas, B_H, B_ICU)
  File "/home/groups/daniancu/covid-optimization/covid-optimization/group.py", line 174, in take_time_step
    assert self.icus * self.dt - sum(state[n]["ICU"] for n in self.groups) > - 1e-10, f'Total ICU: {sum(state[n]["ICU"] for n in self.groups)}, total beds: {self.dt * self.icus}'
AssertionError: Total ICU: 0.36439647098371053, total beds: 0.29
srun: error: sh03-01n55: task 0: Exited with exit code 1
srun: launch/slurm: _step_signal: Terminating StepId=15979844.0
